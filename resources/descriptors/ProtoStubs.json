{
  "GoogleProtoStub": {
    "sourcePackage": {
      "sourceCode": "!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("activate",[],t):"object"==typeof exports?exports.activate=t():e.activate=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();t.default=function(e,t,r){return{name:"GoogleProtoStub",instance:new i(e,t,r)}};var o=r(1);!function(e){e&&e.__esModule}(r(2));var i=function(){function e(t,r,n){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The runtimeProtoStubURL is a needed parameter");if(!r)throw new Error("The bus is a needed parameter");if(!n)throw new Error("The config is a needed parameter");if(!n.runtimeURL)throw new Error("The config.runtimeURL is a needed parameter");var i=this;console.log("[GoogleProtoStub] Google PROTOSTUB",i),this._id=0,this._runtimeProtoStubURL=t,this._bus=r,this._config=n,this._domain=n.domain,this._runtimeSessionURL=n.runtimeURL,this._syncher=new o.Syncher(t,r,n),this._userActivityVertxHypertyURL="hyperty://sharing-cities-dsm/user-activity",i._sendStatus("created"),i.started=!1;r.addListener("*",function(e){if(console.log("[GoogleProtoStub] new Message  : ",e),e.identity&&(i._identity=e.identity),e.hasOwnProperty("body")&&e.body.hasOwnProperty("identity")){if(e.body.identity.accessToken){i._accessToken=e.body.identity.accessToken;var t={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}};i._bus.postMessage(t)}i.hypertyJSUrl=e.from}var r="hyperty-catalogue://catalogue."+i._domain+"/.well-known/dataschema/Context",n={id:"1276020076",values:[{type:"user_walking_context",name:"walking distance in meters",unit:"meter",value:1500,startTime:"2018-03-25T12:00:00Z",endTime:"2018-03-25T12:10:00Z"},{type:"user_biking_context",name:"biking distance in meters",unit:"meter",value:5e3,startTime:"2018-03-26T12:00:00Z",endTime:"2018-03-26T12:10:00Z"}]};i._accessToken&&!i.started&&i._resumeReporters("user_activity",e.to).then(function(t){console.log("GoogleProtoStub]._resumeReporters (result)  ",t),0==t?i._setUpReporter(i._identity,r,n,["context"],"user_activity",e.to).then(function(e){e&&i.startWorking(e)}):i.startWorking(t)}).catch(function(e){})})}return n(e,[{key:"startWorking",value:function(e){var t=this;t.reporter=e,e.onSubscription(function(e){return e.accept()}),console.log("[GoogleProtoStub] User activity DO created: ",e);var r=e.metadata.created;e.inviteObservers([t._userActivityVertxHypertyURL]),setInterval(function(){var n=e.metadata.lastModified;t.querySessions(t._accessToken,r,n)},t.config.sessions_query_interval),t.started=!0}},{key:"_setUpReporter",value:function(e,t,r,n,o,i){var s=this;return new Promise(function(a,u){var c={resources:n,expires:3600,reporter:i,domain_registration:!1};s._syncher.create(t,[],r,!0,!1,o,e,c).then(function(e){console.log("[GoogleProtoStub] REPORTER RETURNED",e),e.onSubscription(function(e){e.accept(),console.log("[GoogleProtoStub] new subs",e)}),a(e)}).catch(function(e){console.error("[GoogleProtoStub] err",e),a(null)})})}},{key:"_resumeReporters",value:function(e,t){var r=this;return new Promise(function(n,o){r._syncher.resumeReporters({store:!0,reporter:t}).then(function(r){console.log("[GoogleProtoStub] Reporters resumed",r);var o=Object.keys(r);if(!(o.length>0))return n(!1);o.forEach(function(o){return console.log("[GoogleProtoStub] ",o),console.log("[GoogleProtoStub] ",r[o]),t==r[o].metadata.reporter&&r[o].metadata.name==e?n(r[o]):n(!1)})}).catch(function(e){console.info("[GoogleProtoStub] Reporters:",e)})})}},{key:"querySessions",value:function(e,t,r){var n=this;t!==r&&(t=r);var o=new Date,i=o.toISOString(),s=o.getTime(),a=new Date(t).getTime(),u=new XMLHttpRequest;u.withCredentials=!0,u.open("GET","https://www.googleapis.com/fitness/v1/users/me/sessions?startTime="+t+"&endTime="+i),u.setRequestHeader("Authorization","Bearer "+e),u.setRequestHeader("Cache-Control","no-cache"),u.send(null),u.addEventListener("readystatechange",function(){if(4===this.readyState){var e=JSON.parse(this.responseText);console.log("[GoogleProtoStub] sessions: ",e);for(var t=function(t){var r=e.session[t],o=r.activityType,i=r.startTimeMillis,u=Number(r.endTimeMillis);u<s&&u>a&&n.getDistanceForActivity(i,u).then(function(e){var t=new Date(Number(i)).toISOString(),r=new Date(Number(u)).toISOString();switch(o){case 7:case 8:n.reporter.data.values=[{type:"user_walking_context",name:"walking distance in meters",unit:"meter",value:e,startTime:t,endTime:r}];break;case 1:n.reporter.data.values=[{type:"user_biking_context",name:"biking distance in meters",unit:"meter",value:e,startTime:t,endTime:r}]}})},r=0;r<e.session.length;r++)t(r)}})}},{key:"getDistanceForActivity",value:function(e,t){var r=this;return new Promise(function(n,o){var i={aggregateBy:[{dataTypeName:"com.google.distance.delta"}],bucketByTime:{durationMillis:t-e},startTimeMillis:e,endTimeMillis:t},s=new XMLHttpRequest;s.withCredentials=!0,s.addEventListener("readystatechange",function(){if(4===this.readyState){var e=JSON.parse(this.responseText);return console.log("[GoogleProtoStub] distance for activity: ",e),n(e.bucket[0].dataset[0].point[0].value[0].fpVal)}}),s.open("POST","https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate"),s.setRequestHeader("Content-Type","application/json"),s.setRequestHeader("Authorization","Bearer "+r._accessToken),s.setRequestHeader("Cache-Control","no-cache"),s.send(JSON.stringify(i))})}},{key:"_sendStatus",value:function(e,t){console.log("[GoogleProtoStub status changed] to ",e),this._state=e;var r={type:"update",from:this._runtimeProtoStubURL,to:this._runtimeProtoStubURL+"/status",body:{value:e}};t&&(r.body.desc=t),this._bus.postMessage(r)}},{key:"config",get:function(){return this._config}},{key:"runtimeSession",get:function(){return this._runtimeSessionURL}}]),e}()},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=196)}([function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t,r){var n=r(36)("wks"),o=r(23),i=r(1).Symbol,s="function"==typeof i;(e.exports=function(e){return n[e]||(n[e]=s&&i[e]||(s?i:o)("Symbol."+e))}).store=n},function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),(0,n.default)(e,o.key,o)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){var n=r(1),o=r(0),i=r(14),s=r(11),a=r(10),u=function(e,t,r){var c,l,f,d=e&u.F,p=e&u.G,h=e&u.S,y=e&u.P,v=e&u.B,_=e&u.W,b=p?o:o[t]||(o[t]={}),m=b.prototype,g=p?n:h?n[t]:(n[t]||{}).prototype;for(c in p&&(r=t),r)(l=!d&&g&&void 0!==g[c])&&a(b,c)||(f=l?g[c]:r[c],b[c]=p&&"function"!=typeof g[c]?r[c]:v&&l?i(f,n):_&&g[c]==f?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):y&&"function"==typeof f?i(Function.call,f):f,y&&((b.virtual||(b.virtual={}))[c]=f,e&u.R&&m&&!m[c]&&s(m,c,f)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){var n=r(9),o=r(39),i=r(27),s=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),o=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(55),o=r(30);e.exports=function(e){return n(o(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,r){e.exports={default:r(102),__esModule:!0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(58)),o=i(r(42));function i(e){return e&&e.__esModule?e:{default:e}}function s(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$3,$4").split(",")}var r=t(e);if(r[0]===e&&!r[0].includes("@")){var n={type:"",domain:e,identity:""};return console.warn("[DivideURL] DivideURL don't support url without scheme. Please review your url address",e),n}return r[0]===e&&r[0].includes("@")&&(r=t((r[0]===e?"smtp":r[0])+"://"+r[0])),r[1].includes("@")&&(r[2]=r[0]+"://"+r[1],r[1]=r[1].substr(r[1].indexOf("@")+1)),{type:r[0],domain:r[1],identity:r[2]}}function a(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}t.divideURL=s,t.divideEmail=function(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,o.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,n.default)(e))},t.getUserURLFromEmail=a,t.getUserEmailFromURL=function(e){var t=s(e);return t.identity.replace("/","")+"@"+t.domain},t.convertToUserURL=function(e){if("user://"===e.substring(0,7)){var t=s(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return a(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(".");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&r.push(e)});var i=void 0;r.forEach(function(t){i=e.replace(t,"*+*"),n=i.split(".").map(function(e){return"*+*"===e?t:e})})}return console.log("[ServiceFramework.Utils.checkAttribute]",n),n},t.parseAttributes=function(e){if(e.includes("://")){var t=e.split(/([0-9a-zA-Z][-\w]*):\/\//g)[0],r=t.split("."),n=e.replace(t,"");if(e.includes("identity")){var o=n.split("identity.");console.log("array2 "+o),n=o[0].slice(".",-1),o=o[1].split("."),r.push(n,"identity"),r=r.concat(o)}else r.push(n);return r.filter(Boolean)}return e.split(".")}},function(e,t,r){var n=r(45),o=r(37);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){var n,o;!function(i,s){"use strict";void 0===(o="function"==typeof(n=function(){var e=function(){},t="undefined",r=["trace","debug","info","warn","error"];function n(e,t){var r=e[t];if("function"==typeof r.bind)return r.bind(e);try{return Function.prototype.bind.call(r,e)}catch(t){return function(){return Function.prototype.apply.apply(r,[e,arguments])}}}function o(t,n){for(var o=0;o<r.length;o++){var i=r[o];this[i]=o<t?e:this.methodFactory(i,t,n)}this.log=this.debug}function i(r,i,s){return function(r){return"debug"===r&&(r="log"),typeof console!==t&&(void 0!==console[r]?n(console,r):void 0!==console.log?n(console,"log"):e)}(r)||function(e,r,n){return function(){typeof console!==t&&(o.call(this,r,n),this[e].apply(this,arguments))}}.apply(this,arguments)}function s(e,n,s){var a,u=this,c="loglevel";function l(){var e;if(typeof window!==t){try{e=window.localStorage[c]}catch(e){}if(typeof e===t)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(c)+"=");-1!==n&&(e=/^([^;]+)/.exec(r.slice(n))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}e&&(c+=":"+e),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=s||i,u.getLevel=function(){return a},u.setLevel=function(n,i){if("string"==typeof n&&void 0!==u.levels[n.toUpperCase()]&&(n=u.levels[n.toUpperCase()]),!("number"==typeof n&&n>=0&&n<=u.levels.SILENT))throw"log.setLevel() called with invalid level: "+n;if(a=n,!1!==i&&function(e){var n=(r[e]||"silent").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[c]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(c)+"="+n+";"}catch(e){}}}(n),o.call(u,n,e),typeof console===t&&n<u.levels.SILENT)return"No console available for logging"},u.setDefaultLevel=function(e){l()||u.setLevel(e,!1)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)};var f=l();null==f&&(f=null==n?"WARN":n),u.setLevel(f,!1)}var a=new s,u={};a.getLogger=function(e){if("string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=u[e];return t||(t=u[e]=new s(e,a.getLevel(),a.methodFactory)),t};var c=typeof window!==t?window.log:void 0;return a.noConflict=function(){return typeof window!==t&&window.log===a&&(window.log=c),a},a.getLoggers=function(){return u},a})?n.call(t,r,t,e):n)||(e.exports=o)}()},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,r){e.exports={default:r(91),__esModule:!0}},function(e,t,r){var n=r(8).f,o=r(10),i=r(2)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,r){var n=r(7),o=r(1).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(47));t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,n.default)(t))&&"function"!=typeof t?e:t}},function(e,t,r){"use strict";t.__esModule=!0;var n=s(r(93)),o=s(r(97)),i=s(r(47));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(n.default?(0,n.default)(e,t):e.__proto__=t)}},function(e,t,r){var n=r(36)("keys"),o=r(23);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t,r){var n=r(0),o=r(1),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(9),o=r(72),i=r(37),s=r(35)("IE_PROTO"),a=function(){},u=function(){var e,t=r(28)("iframe"),n=i.length;for(t.style.display="none",r(56).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[i[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(a.prototype=n(e),r=new a,a.prototype=null,r[s]=e):r=u(),void 0===t?r:o(r,t)}},function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},function(e,t,r){t.f=r(2)},function(e,t,r){var n=r(1),o=r(0),i=r(15),s=r(40),a=r(8).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:s.f(e)})}},function(e,t,r){e.exports={default:r(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(6),o=r(0),i=r(13);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],s={};s[e]=t(r),n(n.S+n.F*i(function(){r(1)}),"Object",s)}},function(e,t,r){var n=r(10),o=r(12),i=r(64)(!1),s=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=o(e),u=0,c=[];for(r in a)r!=s&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~i(c,r)||c.push(r));return c}},function(e,t,r){var n=r(29),o=r(16),i=r(12),s=r(27),a=r(10),u=r(39),c=Object.getOwnPropertyDescriptor;t.f=r(4)?c:function(e,t){if(e=i(e),t=s(t,!0),u)try{return c(e,t)}catch(e){}if(a(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t,r){"use strict";t.__esModule=!0;var n=s(r(79)),o=s(r(81)),i="function"==typeof o.default&&"symbol"==typeof n.default?function(e){return typeof e}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":typeof e};function s(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof o.default&&"symbol"===i(n.default)?function(e){return void 0===e?"undefined":i(e)}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":void 0===e?"undefined":i(e)}},function(e,t,r){"use strict";var n=r(15),o=r(6),i=r(50),s=r(11),a=r(17),u=r(71),c=r(26),l=r(53),f=r(2)("iterator"),d=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,r,h,y,v,_){u(r,t,h);var b,m,g,O=function(e){if(!d&&e in x)return x[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},w=t+" Iterator",j="values"==y,R=!1,x=e.prototype,k=x[f]||x["@@iterator"]||y&&x[y],S=k||O(y),P=y?j?O("entries"):S:void 0,L="Array"==t&&x.entries||k;if(L&&(g=l(L.call(new e)))!==Object.prototype&&g.next&&(c(g,w,!0),n||"function"==typeof g[f]||s(g,f,p)),j&&k&&"values"!==k.name&&(R=!0,S=function(){return k.call(this)}),n&&!_||!d&&!R&&x[f]||s(x,f,S),a[t]=S,a[w]=p,y)if(b={values:j?S:O("values"),keys:v?S:O("keys"),entries:P},_)for(m in b)m in x||i(x,m,b[m]);else o(o.P+o.F*(d||R),t,b);return b}},function(e,t,r){var n=r(31),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){e.exports=r(11)},function(e,t,r){"use strict";var n=r(24);e.exports.f=function(e){return new function(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}(e)}},function(e,t,r){"use strict";var n=r(70)(!0);r(48)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){var n=r(10),o=r(32),i=r(35)("IE_PROTO"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,r){r(73);for(var n=r(1),o=r(11),i=r(17),s=r(2)("toStringTag"),a="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<a.length;u++){var c=a[u],l=n[c],f=l&&l.prototype;f&&!f[s]&&o(f,s,c),i[c]=i.Array}},function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(45),o=r(37).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){e.exports={default:r(76),__esModule:!0}},function(e,t,r){e.exports={default:r(61),__esModule:!0}},function(e,t){},function(e,t,r){r(62);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(6);n(n.S+n.F*!r(4),"Object",{defineProperty:r(8).f})},function(e,t,r){var n=r(21),o=r(2)("toStringTag"),i="Arguments"==n(function(){return arguments}());e.exports=function(e){var t,r,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:i?n(t):"Object"==(s=n(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,r){var n=r(12),o=r(49),i=r(65);e.exports=function(e){return function(t,r,s){var a,u=n(t),c=o(u.length),l=i(s,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},function(e,t,r){var n=r(9),o=r(24),i=r(2)("species");e.exports=function(e,t){var r,s=n(e).constructor;return void 0===s||void 0==(r=n(s)[i])?t:o(r)}},function(e,t,r){var n,o,i,s=r(14),a=r(108),u=r(56),c=r(28),l=r(1),f=l.process,d=l.setImmediate,p=l.clearImmediate,h=l.MessageChannel,y=l.Dispatch,v=0,_={},b=function(){var e=+this;if(_.hasOwnProperty(e)){var t=_[e];delete _[e],t()}},m=function(e){b.call(e.data)};d&&p||(d=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return _[++v]=function(){a("function"==typeof e?e:Function(e),t)},n(v),v},p=function(e){delete _[e]},"process"==r(21)(f)?n=function(e){f.nextTick(s(b,e,1))}:y&&y.now?n=function(e){y.now(s(b,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=m,n=s(i.postMessage,i,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+"","*")},l.addEventListener("message",m,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),b.call(e)}}:function(e){setTimeout(s(b,e,1),0)}),e.exports={set:d,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(9),o=r(7),i=r(51);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(31),o=r(30);e.exports=function(e){return function(t,r){var i,s,a=String(o(t)),u=n(r),c=a.length;return u<0||u>=c?e?"":void 0:(i=a.charCodeAt(u))<55296||i>56319||u+1===c||(s=a.charCodeAt(u+1))<56320||s>57343?e?a.charAt(u):i:e?a.slice(u,u+2):s-56320+(i-55296<<10)+65536}}},function(e,t,r){"use strict";var n=r(38),o=r(16),i=r(26),s={};r(11)(s,r(2)("iterator"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(s,{next:o(1,r)}),i(e,t+" Iterator")}},function(e,t,r){var n=r(8),o=r(9),i=r(20);e.exports=r(4)?Object.defineProperties:function(e,t){o(e);for(var r,s=i(t),a=s.length,u=0;a>u;)n.f(e,r=s[u++],t[r]);return e}},function(e,t,r){"use strict";var n=r(74),o=r(75),i=r(17),s=r(12);e.exports=r(48)(Array,"Array",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])},"values"),i.Arguments=i.Array,n("keys"),n("values"),n("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){var n=r(0),o=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},function(e,t,r){var n=r(23)("meta"),o=r(7),i=r(10),s=r(8).f,a=0,u=Object.isExtensible||function(){return!0},c=!r(13)(function(){return u(Object.preventExtensions({}))}),l=function(e){s(e,n,{value:{i:"O"+ ++a,w:{}}})},f=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,n)){if(!u(e))return"F";if(!t)return"E";l(e)}return e[n].i},getWeak:function(e,t){if(!i(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},onFreeze:function(e){return c&&f.NEED&&u(e)&&!i(e,n)&&l(e),e}}},function(e,t,r){e.exports={default:r(119),__esModule:!0}},function(e,t,r){e.exports={default:r(80),__esModule:!0}},function(e,t,r){r(52),r(54),e.exports=r(40).f("iterator")},function(e,t,r){e.exports={default:r(82),__esModule:!0}},function(e,t,r){r(83),r(60),r(87),r(88),e.exports=r(0).Symbol},function(e,t,r){"use strict";var n=r(1),o=r(10),i=r(4),s=r(6),a=r(50),u=r(77).KEY,c=r(13),l=r(36),f=r(26),d=r(23),p=r(2),h=r(40),y=r(41),v=r(84),_=r(85),b=r(9),m=r(7),g=r(12),O=r(27),w=r(16),j=r(38),R=r(86),x=r(46),k=r(8),S=r(20),P=x.f,L=k.f,C=R.f,M=n.Symbol,E=n.JSON,T=E&&E.stringify,D=p("_hidden"),U=p("toPrimitive"),A={}.propertyIsEnumerable,H=l("symbol-registry"),N=l("symbols"),I=l("op-symbols"),F=Object.prototype,B="function"==typeof M,V=n.QObject,z=!V||!V.prototype||!V.prototype.findChild,G=i&&c(function(){return 7!=j(L({},"a",{get:function(){return L(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=P(F,t);n&&delete F[t],L(e,t,r),n&&e!==F&&L(F,t,n)}:L,q=function(e){var t=N[e]=j(M.prototype);return t._k=e,t},W=B&&"symbol"==typeof M.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof M},Z=function(e,t,r){return e===F&&Z(I,t,r),b(e),t=O(t,!0),b(r),o(N,t)?(r.enumerable?(o(e,D)&&e[D][t]&&(e[D][t]=!1),r=j(r,{enumerable:w(0,!1)})):(o(e,D)||L(e,D,w(1,{})),e[D][t]=!0),G(e,t,r)):L(e,t,r)},J=function(e,t){b(e);for(var r,n=v(t=g(t)),o=0,i=n.length;i>o;)Z(e,r=n[o++],t[r]);return e},Y=function(e){var t=A.call(this,e=O(e,!0));return!(this===F&&o(N,e)&&!o(I,e))&&(!(t||!o(this,e)||!o(N,e)||o(this,D)&&this[D][e])||t)},K=function(e,t){if(e=g(e),t=O(t,!0),e!==F||!o(N,t)||o(I,t)){var r=P(e,t);return!r||!o(N,t)||o(e,D)&&e[D][t]||(r.enumerable=!0),r}},X=function(e){for(var t,r=C(g(e)),n=[],i=0;r.length>i;)o(N,t=r[i++])||t==D||t==u||n.push(t);return n},$=function(e){for(var t,r=e===F,n=C(r?I:g(e)),i=[],s=0;n.length>s;)!o(N,t=n[s++])||r&&!o(F,t)||i.push(N[t]);return i};B||(a((M=function(){if(this instanceof M)throw TypeError("Symbol is not a constructor!");var e=d(arguments.length>0?arguments[0]:void 0),t=function(r){this===F&&t.call(I,r),o(this,D)&&o(this[D],e)&&(this[D][e]=!1),G(this,e,w(1,r))};return i&&z&&G(F,e,{configurable:!0,set:t}),q(e)}).prototype,"toString",function(){return this._k}),x.f=K,k.f=Z,r(57).f=R.f=X,r(29).f=Y,r(43).f=$,i&&!r(15)&&a(F,"propertyIsEnumerable",Y,!0),h.f=function(e){return q(p(e))}),s(s.G+s.W+s.F*!B,{Symbol:M});for(var Q="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Q.length>ee;)p(Q[ee++]);for(var te=S(p.store),re=0;te.length>re;)y(te[re++]);s(s.S+s.F*!B,"Symbol",{for:function(e){return o(H,e+="")?H[e]:H[e]=M(e)},keyFor:function(e){if(!W(e))throw TypeError(e+" is not a symbol!");for(var t in H)if(H[t]===e)return t},useSetter:function(){z=!0},useSimple:function(){z=!1}}),s(s.S+s.F*!B,"Object",{create:function(e,t){return void 0===t?j(e):J(j(e),t)},defineProperty:Z,defineProperties:J,getOwnPropertyDescriptor:K,getOwnPropertyNames:X,getOwnPropertySymbols:$}),E&&s(s.S+s.F*(!B||c(function(){var e=M();return"[null]"!=T([e])||"{}"!=T({a:e})||"{}"!=T(Object(e))})),"JSON",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(m(t)||void 0!==e)&&!W(e))return _(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!W(t))return t}),n[1]=t,T.apply(E,n)}}),M.prototype[U]||r(11)(M.prototype,U,M.prototype.valueOf),f(M,"Symbol"),f(Math,"Math",!0),f(n.JSON,"JSON",!0)},function(e,t,r){var n=r(20),o=r(43),i=r(29);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var s,a=r(e),u=i.f,c=0;a.length>c;)u.call(e,s=a[c++])&&t.push(s);return t}},function(e,t,r){var n=r(21);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n=r(12),o=r(57).f,i={}.toString,s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return s.slice()}}(e):o(n(e))}},function(e,t,r){r(41)("asyncIterator")},function(e,t,r){r(41)("observable")},function(e,t,r){r(90),e.exports=r(0).Object.keys},function(e,t,r){var n=r(32),o=r(20);r(44)("keys",function(){return function(e){return o(n(e))}})},function(e,t,r){r(92),e.exports=r(0).Object.getPrototypeOf},function(e,t,r){var n=r(32),o=r(53);r(44)("getPrototypeOf",function(){return function(e){return o(n(e))}})},function(e,t,r){e.exports={default:r(94),__esModule:!0}},function(e,t,r){r(95),e.exports=r(0).Object.setPrototypeOf},function(e,t,r){var n=r(6);n(n.S,"Object",{setPrototypeOf:r(96).set})},function(e,t,r){var n=r(7),o=r(9),i=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=r(14)(Function.call,r(46).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:i}},function(e,t,r){e.exports={default:r(98),__esModule:!0}},function(e,t,r){r(99);var n=r(0).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(6);n(n.S,"Object",{create:r(38)})},function(e,t,r){"use strict";t.__esModule=!0;var n=i(r(25)),o=i(r(125));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i){null===t&&(t=Function.prototype);var s=(0,o.default)(t,r);if(void 0===s){var a=(0,n.default)(t);return null===a?void 0:e(a,r,i)}if("value"in s)return s.value;var u=s.get;return void 0!==u?u.call(i):void 0}},function(e,t,r){var n=r(63),o=r(2)("iterator"),i=r(17);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[n(e)]}},function(e,t,r){r(60),r(52),r(54),r(103),r(114),r(115),e.exports=r(0).Promise},function(e,t,r){"use strict";var n,o,i,s,a=r(15),u=r(1),c=r(14),l=r(63),f=r(6),d=r(7),p=r(24),h=r(104),y=r(105),v=r(66),_=r(67).set,b=r(109)(),m=r(51),g=r(68),O=r(110),w=r(69),j=u.TypeError,R=u.process,x=R&&R.versions,k=x&&x.v8||"",S=u.Promise,P="process"==l(R),L=function(){},C=o=m.f,M=!!function(){try{var e=S.resolve(1),t=(e.constructor={})[r(2)("species")]=function(e){e(L,L)};return(P||"function"==typeof PromiseRejectionEvent)&&e.then(L)instanceof t&&0!==k.indexOf("6.6")&&-1===O.indexOf("Chrome/66")}catch(e){}}(),E=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},T=function(e,t){if(!e._n){e._n=!0;var r=e._c;b(function(){for(var n=e._v,o=1==e._s,i=0,s=function(t){var r,i,s,a=o?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{a?(o||(2==e._h&&A(e),e._h=1),!0===a?r=n:(l&&l.enter(),r=a(n),l&&(l.exit(),s=!0)),r===t.promise?c(j("Promise-chain cycle")):(i=E(r))?i.call(r,u,c):u(r)):c(n)}catch(e){l&&!s&&l.exit(),c(e)}};r.length>i;)s(r[i++]);e._c=[],e._n=!1,t&&!e._h&&D(e)})}},D=function(e){_.call(u,function(){var t,r,n,o=e._v,i=U(e);if(i&&(t=g(function(){P?R.emit("unhandledRejection",o,e):(r=u.onunhandledrejection)?r({promise:e,reason:o}):(n=u.console)&&n.error&&n.error("Unhandled promise rejection",o)}),e._h=P||U(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},U=function(e){return 1!==e._h&&0===(e._a||e._c).length},A=function(e){_.call(u,function(){var t;P?R.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},H=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),T(t,!0))},N=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw j("Promise can't be resolved itself");(t=E(e))?b(function(){var n={_w:r,_d:!1};try{t.call(e,c(N,n,1),c(H,n,1))}catch(e){H.call(n,e)}}):(r._v=e,r._s=1,T(r,!1))}catch(e){H.call({_w:r,_d:!1},e)}}};M||(S=function(e){h(this,S,"Promise","_h"),p(e),n.call(this);try{e(c(N,this,1),c(H,this,1))}catch(e){H.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(111)(S.prototype,{then:function(e,t){var r=C(v(this,S));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=P?R.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&T(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=c(N,e,1),this.reject=c(H,e,1)},m.f=C=function(e){return e===S||e===s?new i(e):o(e)}),f(f.G+f.W+f.F*!M,{Promise:S}),r(26)(S,"Promise"),r(112)("Promise"),s=r(0).Promise,f(f.S+f.F*!M,"Promise",{reject:function(e){var t=C(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(a||!M),"Promise",{resolve:function(e){return w(a&&this===s?S:this,e)}}),f(f.S+f.F*!(M&&r(113)(function(e){S.all(e).catch(L)})),"Promise",{all:function(e){var t=this,r=C(t),n=r.resolve,o=r.reject,i=g(function(){var r=[],i=0,s=1;y(e,!1,function(e){var a=i++,u=!1;r.push(void 0),s++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--s||n(r))},o)}),--s||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=C(t),n=r.reject,o=g(function(){y(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(14),o=r(106),i=r(107),s=r(9),a=r(49),u=r(101),c={},l={};(t=e.exports=function(e,t,r,f,d){var p,h,y,v,_=d?function(){return e}:u(e),b=n(r,f,t?2:1),m=0;if("function"!=typeof _)throw TypeError(e+" is not iterable!");if(i(_)){for(p=a(e.length);p>m;m++)if((v=t?b(s(h=e[m])[0],h[1]):b(e[m]))===c||v===l)return v}else for(y=_.call(e);!(h=y.next()).done;)if((v=o(y,b,h.value,t))===c||v===l)return v}).BREAK=c,t.RETURN=l},function(e,t,r){var n=r(9);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(17),o=r(2)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),o=r(67).set,i=n.MutationObserver||n.WebKitMutationObserver,s=n.process,a=n.Promise,u="process"==r(21)(s);e.exports=function(){var e,t,r,c=function(){var n,o;for(u&&(n=s.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){s.nextTick(c)};else if(!i||n.navigator&&n.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);r=function(){l.then(c)}}else r=function(){o.call(n,c)};else{var f=!0,d=document.createTextNode("");new i(c).observe(d,{characterData:!0}),r=function(){d.data=f=!f}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){var n=r(1).navigator;e.exports=n&&n.userAgent||""},function(e,t,r){var n=r(11);e.exports=function(e,t,r){for(var o in t)r&&e[o]?e[o]=t[o]:n(e,o,t[o]);return e}},function(e,t,r){"use strict";var n=r(1),o=r(0),i=r(8),s=r(4),a=r(2)("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:n[e];s&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(2)("iterator"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],s=i[n]();s.next=function(){return{done:r=!0}},i[n]=function(){return s},e(i)}catch(e){}return r}},function(e,t,r){"use strict";var n=r(6),o=r(0),i=r(1),s=r(66),a=r(69);n(n.P+n.R,"Promise",{finally:function(e){var t=s(this,o.Promise||i.Promise),r="function"==typeof e;return this.then(r?function(r){return a(t,e()).then(function(){return r})}:e,r?function(r){return a(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){"use strict";var n=r(6),o=r(51),i=r(68);n(n.S,"Promise",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectType=t.ChangeType=void 0;var n=s(r(3)),o=s(r(5));r(123);var i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){(0,n.default)(this,e),this._observers=[],this._filters={},this._data=t||{},this._internalObserve(this._data)}return(0,o.default)(e,[{key:"observe",value:function(e){this._observers.push(e)}},{key:"find",value:function(e){var t=(0,i.parseAttributes)(e);return this._findWithSplit(t)}},{key:"findBefore",value:function(e){var t={},r=(0,i.parseAttributes)(e);return t.last=r.pop(),t.obj=this._findWithSplit(r),t}},{key:"_findWithSplit",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:"_internalObserve",value:function(e){var t=this;this._data=Object.deepObserve(e,function(e){e.every(function(e){t._onChanges(e)})})}},{key:"_fireEvent",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:"_onChanges",value:function(e){var t=e.object,r=void 0;t.constructor===Object&&(r=c.OBJECT),t.constructor===Array&&(r=c.ARRAY);var n=e.keypath,o=t[e.name];"update"!==e.type||n.includes(".length")||this._fireEvent({cType:u.UPDATE,oType:r,field:n,data:o}),"add"===e.type&&this._fireEvent({cType:u.ADD,oType:r,field:n,data:o}),"delete"===e.type&&this._fireEvent({cType:u.REMOVE,oType:r,field:n})}},{key:"data",get:function(){return this._data}}]),e}(),u=t.ChangeType={UPDATE:"update",ADD:"add",REMOVE:"remove"},c=t.ObjectType={OBJECT:"object",ARRAY:"array"};t.default=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(18)),o=c(r(3)),i=c(r(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=c(r(117)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=s.getLogger("DataObjectChild"),f=function(){function e(t){function r(e){throw"[DataObjectChild] "+e+" mandatory parameter is missing"}(0,o.default)(this,e),t.parent?this._parent=t.parent:r("parent"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.parentObject?this._parentObject=t.parentObject:r("parentObject"),t.name&&(this._name=t.name),t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._childId=t.url,t.data?this._syncObj=new a.default(t.data):this._syncObj=new a.default({}),l.log("[DataObjectChild -  Constructor] - ",this._syncObj),this._bus=this._parentObject._bus,this._owner=this._parentObject._owner,this._allocateListeners(),this._metadata=t,delete this._metadata.parentObject,this._sharingStatus=!1}return(0,i.default)(e,[{key:"share",value:function(e){var t=this;t._sharingStatus=new n.default(function(r,n){var o;o=e?t.metadata.parent:t.metadata.parent+"/children/"+t.metadata.children;var i=t.metadata;i.data=t.data;var s={type:"create",from:t.metadata.reporter,to:o,body:{resource:i.url,value:i}};if(t.identity&&(s.body.identity=t.identity),t._parentObject.data.hasOwnProperty("mutual")&&(s.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,u.deepClone)(s)),r();var a=t._bus.postMessage((0,u.deepClone)(s),function(e){if(e.to===t._reporter){t._bus.removeResponseListener(s.from,e.id),l.log("[Syncher.DataObjectChild.share] Parent reporter reply ",e);var o={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:"Unknown"};return e.body.code<300?r(o):n(o)}},!1);setTimeout(function(){return t._bus.removeResponseListener(s.from,a),n({code:408,desc:"timout"})},3e3)})}},{key:"store",value:function(){var e={},t=this.metadata.children+"."+this.metadata.url;e.value=this.metadata,e.identity=this.identity;var r={from:this.metadata.reporter,to:this._parentObject._syncher._subURL,type:"create",body:{resource:this.metadata.parent,attribute:t,value:e}};l.log("[DataObjectChild.store]:",r),this._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){"response"===t.type&&t.id===e._msgId&&(l.log("DataObjectChild.onResponse:",t),e._onResponse(t))}))}},{key:"_releaseListeners",value:function(){this._listener&&this._listener.remove()}},{key:"delete",value:function(){this._releaseListeners()}},{key:"onChange",value:function(e){this._syncObj.observe(function(t){l.log("[DataObjectChild - observer] - ",t),e(t)})}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.body.source,code:e.body.code};this._onResponseHandler&&this._onResponseHandler(t)}},{key:"shareable",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:"metadata",get:function(){return this._metadata}},{key:"childId",get:function(){return this._childId}},{key:"sharingStatus",get:function(){return this._sharingStatus}},{key:"data",get:function(){return this._syncObj.data}},{key:"identity",set:function(e){this._identity=e},get:function(){return this._identity}}]),e}();t.default=f,e.exports=t.default},function(e,t,r){r(120),e.exports=r(0).Object.assign},function(e,t,r){var n=r(6);n(n.S+n.F,"Object",{assign:r(121)})},function(e,t,r){"use strict";var n=r(20),o=r(43),i=r(29),s=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=s(e),u=arguments.length,c=1,l=o.f,f=i.f;u>c;)for(var d,p=a(arguments[c++]),h=l?n(p).concat(l(p)):n(p),y=h.length,v=0;y>v;)f.call(p,d=h[v++])&&(r[d]=p[d]);return r}:u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(47)),o=y(r(18)),i=y(r(42)),s=y(r(78)),a=y(r(3)),u=y(r(5)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=r(117),f=y(l),d=y(r(118)),p=r(19),h=y(r(128));function y(e){return e&&e.__esModule?e:{default:e}}var v=c.getLogger("DataObject"),_=function(){function e(t){function r(e){throw"[DataObject] "+e+" mandatory parameter is missing"}(0,a.default)(this,e),t.syncher?this._syncher=t.syncher:r("syncher"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.name?this._name=t.name:r("name"),this._status=t.status,t.data?this._syncObj=new f.default(t.data):this._syncObj=new f.default({}),this._childrens=t.childrens,this._mutual=t.mutual,this._version=0,this._childId=0,this._childrenListeners=[],this._onAddChildrenHandler,this._resumed=t.resume,t.resume&&(this._version=t.version),this._owner=t.syncher._owner,this._bus=t.syncher._bus,t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._metadata=(0,s.default)(t),this._metadata.lastModified=this._metadata.created,delete this._metadata.data,delete this._metadata.syncher,delete this._metadata.authorise,this._hypertyResourceFactory=new h.default,this._childrenObjects={},this._sharedChilds=[]}return(0,u.default)(e,[{key:"_getLastChildId",value:function(){var e=this,t=e._owner+"#0";return(0,i.default)(e._childrens).filter(function(r){e._childrens[r].childId>t&&(t=e._childrens[r].childId)}),Number(t.split("#")[1])}},{key:"_allocateListeners",value:function(){var e=this,t=this,r=t._url+"/children/";v.log("[Data Object - AllocateListeners] - ",t._childrens),t._childrens&&t._childrens.forEach(function(n){var o=r+n,i=t._bus.addListener(o,function(r){if(r.from!==e._owner)switch(v.log("DataObject-Children-RCV: ",r),r.type){case"create":t._onChildCreate(r);break;case"delete":v.log(r);break;default:t._changeChildren(r)}});t._childrenListeners.push(i)})}},{key:"_releaseListeners",value:function(){var e=this;e._childrenListeners.forEach(function(e){e.remove()}),(0,i.default)(e._childrenObjects).forEach(function(t){(0,i.default)(e._childrenObjects[t]).forEach(function(r){e._childrenObjects[t][r]._releaseListeners()})})}},{key:"resumeChildrens",value:function(e){var t=this,r=this,n=this._owner+"#"+this._childId;(0,i.default)(e).forEach(function(o){var s=e[o];(0,i.default)(s).forEach(function(e){var i=!1;r._childrenObjects.hasOwnProperty(o)||(r._childrenObjects[o]={}),s[e].value.resourceType&&!r._childrenObjects[o].hasOwnProperty(e)?(r._childrenObjects[o][e]=r._resumeHypertyResource(s[e]),i=!0):r._childrenObjects[o].hasOwnProperty(e)||(r._childrenObjects[o][e]=r._resumeChild(s[e]),v.log("[DataObject.resumeChildrens] new DataObjectChild: ",r._childrenObjects[o][e]),i=!0),i&&e>n&&(n=e,v.log("[DataObjectReporter.resumeChildrens] - resuming: ",t._childrenObjects[o][e]))})}),this._childId=Number(n.split("#")[1])}},{key:"_resumeChild",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=new d.default(t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"_resumeHypertyResource",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"pause",value:function(){throw"Not implemented"}},{key:"resume",value:function(){throw"Not implemented"}},{key:"stop",value:function(){throw"Not implemented"}},{key:"addChild",value:function(e,t,r,n){var i=this,s=void 0;return new o.default(function(o){var a=i._url+"/children/"+e,u=i._getChildInput(n);u.data=t,u.children=e,s=new d.default(u),r&&(s.identity=r),s.share(),v.log("[DataObject.addChild] added ",s),s.onChange(function(e){i._onChange(e,{path:a,childId:u.url})}),i._childrenObjects.hasOwnProperty(e)||(i._childrenObjects[e]={}),i._childrenObjects[e][u.url]=s,o(s)})}},{key:"_deleteChildrens",value:function(){var e=this,t=[];return new o.default(function(r){if(e.childrens){v.log("[DataObject.deleteChildrens]",e.childrens);var n=void 0;for(n in e.childrens){var i=void 0;for(i in e.childrens[n]){var s=e.childrens[n][i];v.log("[DataObject._deleteChildrens] child",s),s.metadata.hasOwnProperty("resourceType")&&t.push(e.childrens[n][i].delete())}}}v.log("[DataObject._deleteChildrens] promises ",t),t.length>0?o.default.all(t).then(function(){r("[DataObject._deleteChildrens] done")}):r("[DataObject._deleteChildrens] nothing to delete")})}},{key:"_getChildInput",value:function(e){var t=(0,s.default)({},e);return this._childId++,t.url=this._owner+"#"+this._childId,t.parentObject=this,t.reporter=this._owner,t.created=(new Date).toISOString(),t.runtime=this._syncher._runtimeUrl,t.p2pHandler=this._syncher._p2pHandler,t.p2pRequester=this._syncher._p2pRequester,t.schema=this._schema,t.parent=this.url,t}},{key:"addHypertyResource",value:function(e,t,r,n,i){var s=this;return new o.default(function(o){var a=void 0,u=s._url+"/children/"+e,c=s._getChildInput(i);c.children=e,s._hypertyResourceFactory.createHypertyResourceWithContent(!0,t,r,c).then(function(t){a=t,n&&(a.identity=n),a.share(),v.log("[DataObject.addHypertyResource] added ",a),a.onChange(function(e){s._onChange(e,{path:u,childId:a.childId})}),s._childrenObjects.hasOwnProperty(e)||(s._childrenObjects[e]={}),s._childrenObjects[e][a.childId]=a,o(a)})})}},{key:"onAddChild",value:function(e){this._onAddChildrenHandler=e}},{key:"_onChildCreate",value:function(e){v.log("[DataObject._onChildCreate] receivedBy "+this._owner+" : ",e);var t={from:e.to,to:e.from,type:"response",id:e.id,body:{code:100}};this._bus.postMessage(t),e.body.value.resourceType?this._onHypertyResourceAdded(e):this._onChildAdded(e)}},{key:"_onChildAdded",value:function(e){var t=(0,p.deepClone)(e.body.value);t.parentObject=this;var r=t.children,n=new d.default(t);n.identity=e.body.identity,this._childrenObjects.hasOwnProperty(r)||(this._childrenObjects[r]={}),this._childrenObjects[r][t.url]=n,e.to===this.metadata.url&&n.store(),this._hypertyEvt(e,n)}},{key:"_onHypertyResourceAdded",value:function(e){var t=e.body.value,r=void 0,n=t.children;t.parentObject=this,(r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t)).identity=e.body.identity,this._childrenObjects.hasOwnProperty(n)||(this._childrenObjects[n]={}),this._childrenObjects[n][r.childId]=r,this._hypertyEvt(e,r),e.to===this.metadata.url&&r.store()}},{key:"_hypertyEvt",value:function(e,t){var r={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(r.resource=t),this._onAddChildrenHandler&&this._onAddChildrenHandler(r)}},{key:"_onChange",value:function(e,t){if(this._metadata.lastModified=(new Date).toISOString(),this._version++,"live"===this._status){var r={type:"update",from:this._url,to:this._url+"/changes",body:{version:this._version,source:this._owner,attribute:e.field,lastModified:this._metadata.lastModified}};v.log("[DataObject - _onChange] - ",e,t,r),e.oType===l.ObjectType.OBJECT?e.cType!==l.ChangeType.REMOVE&&(r.body.value=(0,p.deepClone)(e.data)):(r.body.attributeType=e.oType,r.body.value=e.data,e.cType!==l.ChangeType.UPDATE&&(r.body.operation=e.cType)),t&&(r.to=t.path,r.body.resource=t.childId),this.data._mutual||(r.body.mutual=this._mutual),this._bus.postMessage(r)}}},{key:"_changeObject",value:function(e,t){if(this._version+1<=t.body.version){this._version=t.body.version;var r,o=t.body.attribute;r="object"===(0,n.default)(t.body.value)?(0,p.deepClone)(t.body.value):t.body.value;var i=e.findBefore(o);if(t.body.lastModified?this._metadata.lastModified=t.body.lastModified:this._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===l.ObjectType.ARRAY)if(t.body.operation===l.ChangeType.ADD){var s=i.obj,a=i.last;Array.prototype.splice.apply(s,[a,0].concat(r))}else if(t.body.operation===l.ChangeType.REMOVE){var u=i.obj,c=i.last;u.splice(c,r)}else i.obj[i.last]=r;else t.body.hasOwnProperty("value")?i.obj[i.last]=r:delete i.obj[i.last]}else v.log("UNSYNCHRONIZED VERSION: (data => "+this._version+", msg => "+t.body.version+")")}},{key:"_changeChildren",value:function(e){var t=(0,p.divideURL)(e.to).identity,r=t?t.substring(t.lastIndexOf("/")+1):void 0,n=e.body.resource,o=this._childrenObjects[r][n];v.log("Change children: ",this._owner,e,r),o?this._changeObject(o._syncObj,e):v.warn("No children found for: ",n)}},{key:"metadata",get:function(){return this._metadata}},{key:"url",get:function(){return this._url}},{key:"schema",get:function(){return this._schema}},{key:"status",get:function(){return this._status}},{key:"data",get:function(){return this._syncObj.data}},{key:"childrens",get:function(){return this._childrenObjects}}]),e}();t.default=_,e.exports=t.default},function(e,t){!function(){"use strict";if(!Object.observe&&"function"==typeof Proxy){function e(e,t,r,n,o,i){var s,a=this;function u(e,n){if(u.delay=n,!u.pause&&a.changeset.length>0){if(!e){var o=a.changeset.filter(function(e){return!r||r.indexOf(e.type)>=0});o.length>0&&t(o)}a.changeset=[]}}return u.pause=o,u.delay=i,a.get=function(e,t){return"__observer__"===t?a:"unobserve"===t?function(){return Object.unobserve(e),e}:"deliver"===t?u:e[t]},a.target=e,a.changeset=[],a.target.__observerCallbacks__||(Object.defineProperty(e,"__observerCallbacks__",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,"__observers__",{enumerable:!1,configurable:!0,writable:!1,value:[]})),a.target.__observerCallbacks__.push(t),a.target.__observers__.push(this),s=new Proxy(e,a),u(!1,i),s}e.prototype.deliver=function(){return this.get(null,"deliver")},e.prototype.set=function(e,t,r){var n=e[t],o=void 0===n?"add":"update";if(e[t]=r,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(o)>=0)){var i={object:e,name:t,type:o},s=0===this.changeset.length,a=this.deliver();"update"===o&&(i.oldValue=n),this.changeset.push(i),s&&a(!1,"number"==typeof a.delay?a.delay:10)}return!0},e.prototype.deleteProperty=function(e,t){var r=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("delete")>=0){var n={object:e,name:t,type:"delete",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.defineProperty=function(e,t,r){if(Object.defineProperty(e,t,r),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("reconfigure")>=0){var n={object:e,name:t,type:"reconfigure"},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.setPrototypeOf=function(e,t){var r=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("setPrototype")>=0){var n={object:e,name:"__proto__",type:"setPrototype",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("preventExtensions")>=0){var t={object:e,type:"preventExtensions"},r=0===this.changeset.length,n=this.deliver();this.changeset.push(t),r&&n(!1,"number"==typeof n.delay?n.delay:10)}return!0},Object.observe=function(t,r,n,o,i,s){return new e(t,r,n,o,i,s)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(r,n){t===r&&(e.__observerCallbacks__.splice(n,1),delete e.__observers__[n].callback,e.__observers__.splice(n,1))})}},Array.observe=function(e,t,r,n,o,i){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError("First argument to Array.observer is not an Array");r=r||["add","update","delete","splice"];var s=new Proxy(e,{get:function(t,n){return"unobserve"===n?function(e){return e?Object.unobserve(t,e):t.unobserve()}:"splice"===n?function(n,o){if("number"!=typeof n||"number"!=typeof o)throw new TypeError("First two arguments to Array splice are not number, number");var i=this.slice(n,n+o),s=arguments.length>1?arguments.length-2:0,u={object:e,type:"splice",index:n,removed:i,addedCount:s};if(t.splice.apply(t,arguments),r.indexOf("splice")>=0){n=0===a.__observer__.changeset.length;var c=a.__observer__.deliver();a.__observer__.changeset.push(u),n&&c(!1,"number"==typeof c.delay?c.delay:10)}}:"push"===n?function(e){return this.splice(this.length,0,e)}:"pop"===n?function(){return this.splice(this.length-1,1)}:"unshift"===n?function(e){return this.splice(0,0,e)}:"shift"===n?function(){return this.splice(0,1)}:t[n]}}),a=Object.observe(s,function(e){var n=e.filter(function(e){return"length"!==e.name&&"add"!==e.name&&(!r||r.indexOf(e.type)>=0)});n.length>0&&t(n)},r,n,o,i);return a},Array.unobserve=function(e,t){return e.unobserve(t)}}Object.deepObserve=function(e,t,r){var n=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()};function o(e,r){Object.keys(e).forEach(function(o){if(("object"===n(e[o])||"array"===n(e[o]))&&!e[o].hasOwnProperty("__observers__")){var i=r.slice(0);i.push(o),e[o]=Object.deepObserve(e[o],t,i)}})}return o(e,r=r||[]),Object.observe(e,function(e){var n=[];e.forEach(function(e){var t=(r.length>0?r.join(".")+".":"")+e.name;"update"!==e.type&&"add"!==e.type||o(e.object,r),n.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),function e(t,r,o,i,s){i instanceof Object?Object.keys(i).forEach(function(a){if(!o||o[a]!==i[a]){var u=o&&void 0!==o[a]?o[a]:void 0,c=void 0===u?"add":"update",l=s+"."+a;n.push({name:t,object:r,type:c,oldValue:u,newValue:i[a],keypath:l}),e(t,r,u,i[a],l)}}):o instanceof Object&&Object.keys(o).forEach(function(a){var u=null===i?"update":"delete",c=s+"."+a;n.push({name:t,object:r,type:u,oldValue:o[a],newValue:i,keypath:c}),e(t,r,o[a],void 0,c)})}(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(n)})}}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=d(r(18)),o=d(r(25)),i=d(r(3)),s=d(r(5)),a=d(r(33)),u=d(r(34)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=d(r(129)),f=(r(19),d(r(130)));function d(e){return e&&e.__esModule?e:{default:e}}var p=c.getLogger("FileHypertyResource"),h=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e,r));return n.metadata.resourceType="file",n}return(0,u.default)(t,e),(0,s.default)(t,[{key:"init",value:function(e){var t=this;if(!e)throw new Error("[FileHypertyResource.constructor] missing mandatory *file* input ");return new n.default(function(r,n){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,p.log("[FileHypertyResource.init] file: ",e),t._isSender)switch(e.type.split("/")[0]){case"image":t._getImagePreview(e).then(function(n){t._metadata.preview=n,t._content=e,r()});break;default:t._content=e,r()}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),r()})}},{key:"_getImagePreview",value:function(e){var t=new FileReader;return new n.default(function(r,n){f.default.resize(e,{width:100,height:100},function(e,n){n?(t.readAsDataURL(e),t.onload=function(e){r(e.target.result)}):(p.warn("[FileHypertyResource._getImagePreview] unable to create image preview from original image "),r(void 0))})})}},{key:"toMessage",value:function(){}},{key:"name",get:function(){return this._metadata.name}},{key:"preview",get:function(){return this._metadata.preview}}]),t}(l.default);t.default=h,e.exports=t.default},function(e,t,r){e.exports={default:r(126),__esModule:!0}},function(e,t,r){r(127);var n=r(0).Object;e.exports=function(e,t){return n.getOwnPropertyDescriptor(e,t)}},function(e,t,r){var n=r(12),o=r(46).f;r(44)("getOwnPropertyDescriptor",function(){return function(e,t){return o(n(e),t)}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(18)),o=a(r(3)),i=a(r(5)),s=a(r(124));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(){(0,o.default)(this,e)}return(0,i.default)(e,[{key:"createHypertyResource",value:function(e,t,r){var n=void 0;switch(t){case"file":n=new s.default(e,r);break;default:throw new Error("[HypertyResourceFactory.createHypertyResource] not supported type: ",t)}return n}},{key:"createHypertyResourceWithContent",value:function(e,t,r,o){var i=void 0;return new n.default(function(n){switch(t){case"file":i=new s.default(e,o);break;default:reject()}i.init(r).then(function(){return i.save()}).then(function(){n(i)})})}}]),e}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=p(r(18)),o=p(r(25)),i=p(r(3)),s=p(r(5)),a=p(r(33)),u=p(r(100)),c=p(r(34)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),f=r(19),d=p(r(118));function p(e){return e&&e.__esModule?e:{default:e}}var h=l.getLogger("HypertyResource"),y=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,r)),s=n;return s.arraybufferSizeLimit=5242880,s._isSender=e,s._localStorageURL=s._parentObject._syncher._runtimeUrl+"/storage",n}return(0,c.default)(t,e),(0,s.default)(t,[{key:"save",value:function(){var e=this;return new n.default(function(t,r){var n={from:e._owner,to:e._localStorageURL,type:"create",body:{value:(0,f.deepClone)(e._metadata)}};n.body.value.content=e._content,e._bus.postMessage(n,function(n){h.info("[HypertyResource.save] reply: ",n),e._bus.removeResponseListener(e._owner,n.id),200===n.body.code?(n.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(n.body.value)),t()):r(n.body.code+" "+n.body.desc)},!1)})}},{key:"read",value:function(e){var t=this;return h.info("[HypertyResource.read] ",this),new n.default(function(r,n){if(t.content)r(t);else{var o=t._getBestContentURL(t._metadata.contentURL);h.log("Storage:",o);var i={from:t._owner,to:o.url,type:"read",body:{resource:o.url+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(i.body.p2pRequester=t.metadata.p2pRequester,i.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(i,e).then(function(e){h.info("[HypertyResource] - get locally the resource:",e),r(t)}).catch(function(i){h.warn("[HypertyResource] - get locally the resource fail",i);var s={from:t._owner,to:o.remoteURL,type:"read",body:{resource:o.remoteURL+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(s.body.p2pRequester=t.metadata.p2pRequester,s.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(s,e).then(function(e){h.warn("[HypertyResource] - get remotely the resource",e),r(t)}).catch(function(e){h.warn("[HypertyResource] - get remotely the resource fail",e),n(e.body.code+" "+e.body.desc)})})}})}},{key:"_getBestResource",value:function(e,t){var r=this;return new n.default(function(n,o){var i=setTimeout(function(){return r._bus.removeResponseListener(r._owner,s),e.body.code=408,e.body.desc="Response timeout",o(e)},3e3),s=r._bus.postMessage(e,function(e){h.log("[HypertyResource.read] reply: ",e);var s=e.id;switch(clearTimeout(i),e.body.code){case 200:r._content=e.body.value.content,e.body.value.size<r.arraybufferSizeLimit&&r.save(),r._bus.removeResponseListener(r._owner,s),n(e);break;case 183:t(e.body.value);break;default:r._bus.removeResponseListener(r._owner,s),o(e)}},!1)})}},{key:"delete",value:function(){var e=this;h.info("[HypertyResource.delete]",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:"delete",body:{resources:e.metadata.contentURL}};return new n.default(function(r){e._bus.postMessage(t,function(e){e.body.code<300?r(!0):r(!1)})})}},{key:"_getBestContentURL",value:function(e){var t=e[0],r=t.substr(t.lastIndexOf("/")+1);return{url:this._localStorageURL,resource:r,remoteURL:t.substr(0,t.lastIndexOf("/"))}}},{key:"resourceType",get:function(){return this.metadata.resourceType}},{key:"mimetype",get:function(){return this._metadata.type}},{key:"content",get:function(){return this._content}},{key:"contentURL",get:function(){return this._metadata.contentURL}},{key:"shareable",get:function(){var e=(0,u.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"metadata",this);return e.resourceType=this.resourceType,e}}]),t}(d.default);t.default=y,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s="undefined"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),a=s&&"undefined"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),u="undefined"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,c=u||"undefined"!=typeof Uint8Array&&"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof atob,l="undefined"!=typeof FileReader||"undefined"!=typeof URL,f=function(){function e(){(0,n.default)(this,e)}return(0,o.default)(e,null,[{key:"resize",value:function(t,r,n){if("function"==typeof r&&(n=r,r={width:640,height:480}),r.width,r.height,!e.isSupported()||!t.type.match(/image.*/))return n(t,!1),!1;if(t.type.match(/image\/gif/))return n(t,!1),!1;var o=document.createElement("img");return o.onload=function(i){var s=o.width,a=o.height,c=!1;if(s>=a&&s>r.width?(a*=r.width/s,s=r.width,c=!0):a>r.height&&(s*=r.height/a,a=r.height,c=!0),c){var l=document.createElement("canvas");if(l.width=s,l.height=a,l.getContext("2d").drawImage(o,0,0,s,a),u)l.toBlob(function(e){n(e,!0)},t.type);else{var f=e._toBlob(l,t.type);n(f,!0)}}else n(t,!1)},e._loadImage(o,t),!0}},{key:"_toBlob",value:function(e,t){var r=e.toDataURL(t).split(","),n=void 0;n=r[0].indexOf("base64")>=0?atob(r[1]):decodeURIComponent(r[1]);for(var o=new ArrayBuffer(n.length),i=new Uint8Array(o),u=0;u<n.length;u+=1)i[u]=n.charCodeAt(u);var c=r[0].split(":")[1].split(";")[0],l=null;if(s)l=new Blob([a?i:o],{type:c});else{var f=new BlobBuilder;f.append(o),l=f.getBlob(c)}return l}},{key:"_loadImage",value:function(e,t,r){if("undefined"==typeof URL){var n=new FileReader;n.onload=function(t){e.src=t.target.result,r&&r()},n.readAsDataURL(t)}else e.src=URL.createObjectURL(t),r&&r()}},{key:"isSupported",value:function(){return"undefined"!=typeof HTMLCanvasElement&&c&&l}}]),e}();t.default=f,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=d(r(18)),o=d(r(78)),i=d(r(3)),s=d(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19),c=d(r(132)),l=d(r(133)),f=d(r(135));function d(e){return e&&e.__esModule?e:{default:e}}var p=a.getLogger("Syncher"),h=function(){function e(t,r,n){(0,i.default)(this,e);var o=this;o._owner=t,o._bus=r,o._subURL=n.runtimeURL+"/sm",o._runtimeUrl=n.runtimeURL,o._p2pHandler=n.p2pHandler,o._p2pRequester=n.p2pRequester,o._reporters={},o._observers={},o._provisionals={},r.addListener(t,function(e){if(e.from!==t)switch(p.info("[Syncher] Syncher-RCV: ",e,o),e.type){case"forward":o._onForward(e);break;case"create":o._onRemoteCreate(e);break;case"delete":o._onRemoteDelete(e);break;case"execute":o._onExecute(e)}})}return(0,s.default)(e,[{key:"create",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"no name",a=arguments[6],c=arguments[7];if(!e)throw Error("[Syncher - Create] - You need specify the data object schema");if(!t)throw Error("[Syncher - Create] -The observers should be defined");c=c||{};var l=(0,o.default)({},c);return l.p2p=i,l.store=n,l.schema=e,l.authorise=t,l.p2pHandler=this._p2pHandler,l.p2pRequester=this._p2pRequester,l.data=r?(0,u.deepClone)(r):{},l.name=0===s.length?"no name":s,l.reporter=c.hasOwnProperty("reporter")&&"boolean"!=typeof c.reporter?c.reporter:this._owner,l.resume=!1,c?(l.mutual=!c.hasOwnProperty("mutual")||c.mutual,l.name=c.hasOwnProperty("name")?c.name:l.name):l.mutual=!0,c.hasOwnProperty("reuseURL")&&(l.resource=c.reuseURL),a&&(l.identity=a),p.log("[syncher - create] - create Reporter - createInput: ",l),this._create(l)}},{key:"resumeReporters",value:function(e){return p.log("[syncher - create] - resume Reporter - criteria: ",e),(0,o.default)(e,{resume:!0}),this._resumeCreate(e)}},{key:"subscribe",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments[5],a={};return a.p2p=n,a.store=r,a.schema=e,a.resource=t,s&&(a.identity=s),a.mutual=i,p.log("[syncher - subscribe] - subscribe criteria: ",a),(0,o.default)(a,{resume:!1}),this._subscribe(a)}},{key:"resumeObservers",value:function(e){var t=e||{};return(0,o.default)(t,{resume:!0}),this._resumeSubscribe(t)}},{key:"read",value:function(e){var t=this,r={type:"read",from:t._owner,to:e};return new n.default(function(e,n){t._bus.postMessage(r,function(i){p.log("[Syncher.read] reply: ",i);var s={},a={},u=0;if(i.body.code<300)if(i.body.value.hasOwnProperty("responses"))if(0===u)a=i.body.value,++u;else{delete i.body.value.responses;var c=void 0;for(c in i.body.value)s.hasOwnProperty(c)||(s[c]={}),(0,o.default)(s[c],i.body.value[c]);++u===a.responses&&(a.childrenObjects=s,delete a.responses,t._bus.removeResponseListener(r.from,i.id),e(a))}else t._bus.removeResponseListener(r.from,i.id),e(i.body.value);else n(i.body.desc)},!1)})}},{key:"onNotification",value:function(e){this._onNotificationHandler=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"_create",value:function(e){var t=this;return new n.default(function(r,n){var i=(0,o.default)({},e),s=e.resume;i.created=(new Date).toISOString(),i.runtime=t._runtimeUrl;var a=(0,u.deepClone)(i);delete a.p2p,delete a.store,delete a.observers,delete a.identity;var l={type:"create",from:t._owner,to:t._subURL,body:{resume:s,value:a}};l.body.schema=i.schema,i.p2p&&(l.body.p2p=i.p2p),i.store&&(l.body.store=i.store),i.identity&&(l.body.identity=i.identity),p.log("[syncher._create]: ",i,l),t._bus.postMessage(l,function(o){if(p.log("[syncher - create] - create-response: ",o),200===o.body.code){i.url=o.body.resource,i.status="live",i.syncher=t,i.childrens=o.body.childrenResources;var s=t._reporters[i.url];s||(s=new c.default(i),t._reporters[i.url]=s),s.inviteObservers(e.authorise,e.p2p),r(s)}else n(o.body.desc)})})}},{key:"_resumeCreate",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i=e.resume,s={type:"create",from:r._owner,to:r._subURL,body:{resume:i}};p.log("[syncher - create]: ",e,s),e&&(s.body.value=e,e.hasOwnProperty("reporter")?s.body.value.reporter=e.reporter:s.body.value.reporter=r._owner),e.p2p&&(s.body.p2p=e.p2p),e.store&&(s.body.store=e.store),e.observers&&(s.body.authorise=e.observers),e.identity&&(s.body.identity=e.identity),p.log("[syncher._resumeCreate] - resume message: ",s),r._bus.postMessage(s,function(e){if(p.log("[syncher._resumeCreate] - create-resumed-response: ",e),200===e.body.code){var i=e.body.value;for(var s in i){var a=i[s];a.data=(0,u.deepClone)(a.data)||{},a.childrenObjects&&(a.childrenObjects=(0,u.deepClone)(a.childrenObjects)),a.mutual=!1,a.resume=!0,a.status="live",a.syncher=r,p.log("[syncher._resumeCreate] - create-resumed-dataObjectReporter",a);var l=new c.default(a);a.childrenObjects&&l.resumeChildrens(a.childrenObjects),r._reporters[a.url]=l}n(r._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_subscribe",value:function(e){var t=this;return new n.default(function(r,n){var o={type:"subscribe",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(o.body.p2p=e.p2p),e.hasOwnProperty("store")&&(o.body.store=e.store),e.hasOwnProperty("schema")&&(o.body.schema=e.schema),e.hasOwnProperty("identity")&&(o.body.identity=e.identity),e.hasOwnProperty("resource")&&(o.body.resource=e.resource)),o.body.resume=e.resume,e.hasOwnProperty("mutual")&&(o.body.mutual=e.mutual),p.log("[syncher_subscribe] - subscribe message: ",e,o),t._bus.postMessage(o,function(o){p.log("[syncher] - subscribe-response: ",o);var i=o.body.resource,s=t._provisionals[i];if(delete t._provisionals[i],s&&s._releaseListeners(),o.body.code<200)p.log("[syncher] - new DataProvisional: ",o.body.childrenResources,i),s=new f.default(t._owner,i,t._bus,o.body.childrenResources),t._provisionals[i]=s;else if(200===o.body.code){p.log("[syncher] - new Data Object Observer: ",o,t._provisionals);var a=o.body.value;a.syncher=t,a.p2p=e.p2p,a.store=e.store,a.identity=e.identity,a.resume=!1,a.mutual=e.mutual;var u=t._observers[i];u?u.sync():(u=new l.default(a),t._observers[i]=u),p.log("[syncher] - new Data Object Observer already exist: ",u),r(u),s&&s.apply(u)}else n(o.body.desc)})})}},{key:"_resumeSubscribe",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i={type:"subscribe",from:r._owner,to:r._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(i.body.p2p=e.p2p),e.hasOwnProperty("store")&&(i.body.store=e.store),e.hasOwnProperty("schema")&&(i.body.schema=e.schema),e.hasOwnProperty("identity")&&(i.body.identity=e.identity),e.hasOwnProperty("resource")&&(i.body.resource=e.url)),i.body.resume=e.resume;var s=e.mutual;e.hasOwnProperty("mutual")&&(i.body.mutual=s),p.log("[syncher] - subscribe message: ",e,i),r._bus.postMessage(i,function(e){p.log("[syncher] - subscribe-resumed-response: ",e);var i=e.body.resource,s=r._provisionals[i];if(delete r._provisionals[i],s&&s._releaseListeners(),e.body.code<200)p.log("[syncher] - resume new DataProvisional: ",e,i),s=new f.default(r._owner,i,r._bus,e.body.childrenResources),r._provisionals[i]=s;else if(200===e.body.code){var a=e.body.value;for(var c in a){var d=a[c];p.log("[syncher] - Resume Object Observer: ",e,d,r._provisionals),d.childrenObjects&&(d.childrenObjects=(0,u.deepClone)(d.childrenObjects)),d.data=(0,u.deepClone)(d.data)||{},d.resume=!0,d.syncher=r,p.log("[syncher._resumeSubscribe] - create new dataObject: ",d);var h=new l.default(d);d.childrenObjects&&h.resumeChildrens(d.childrenObjects),p.log("[syncher._resumeSubscribe] - new dataObject",h),r._observers[h.url]=h,r._provisionals[h.url]&&r._provisionals[h.url].apply(h)}n(r._observers),t._onObserversResume&&t._onObserversResume(r._observers)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_onForward",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:"_onRemoteCreate",value:function(e){var t=this,r=e.from.slice(0,-13),n=(0,u.divideURL)(r).domain,o={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})}};t._onNotificationHandler&&(p.info("[Syncher] NOTIFICATION-EVENT: ",o),t._onNotificationHandler(o))}},{key:"_onRemoteDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(p.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:"_onExecute",value:function(e){var t=this,r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+"/registry/"||e.from===t._runtimeUrl+"/registry")&&e.body&&e.body.method&&"close"===e.body.method&&t._onClose){var n={type:"close",ack:function(e){e&&(r.body.code=e),t._bus.postMessage(r)}};p.info("[Syncher] Close-EVENT: ",n),t._onClose(n)}else t._bus.postMessage(r)}},{key:"onReportersResume",value:function(e){this._onReportersResume=e}},{key:"onObserversResume",value:function(e){this._onObserversResume=e}},{key:"owner",get:function(){return this._owner}},{key:"reporters",get:function(){return this._reporters}},{key:"observers",get:function(){return this._observers}}]),e}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(42)),o=y(r(58)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),f=y(r(34)),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=y(r(122)),h=r(19);function y(e){return e&&e.__esModule?e:{default:e}}var v=d.getLogger("DataObjectReporter"),_=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._subscriptions={},n._syncObj.observe(function(e){v.log("[Syncher.DataObjectReporter] "+n.url+" publish change: ",e),n._onChange(e)}),n._allocateListeners(),n.invitations=[],n._childrenSizeThreshold=5e4,r}return(0,f.default)(t,e),(0,u.default)(t,[{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(v.log("[Syncher.DataObjectReporter] listener "+e._url+" Received: ",t),t.type){case"response":e._onResponse(t);break;case"read":e._onRead(t);break;case"execute":e._onExecute(t);break;case"create":e._onChildCreate(t)}})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_releaseListeners",this).call(this),this._objectListener.remove()}},{key:"inviteObservers",value:function(e,t){var r=this,n=e;n.length>0&&(v.log("[Syncher.DataObjectReporter] InviteObservers ",n,r._metadata),n.forEach(function(e){var n=new i.default(function(n,o){var i={type:"create",from:r._syncher._owner,to:r._syncher._subURL,body:{resume:!1,resource:r._url,schema:r._schema,value:r._metadata,authorise:[e]}};t&&(i.body.p2p=t),r.data.mutual||(i.body.mutual=r.data.mutual),r._bus.postMessage(i,function(t){v.log("[Syncher.DataObjectReporter] Invitation reply ",t);var r={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:"Unknown"};r.code<300?n(r):r.code>=300&&o(r)})});r.invitations.push(n)}))}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(t){v.log(t);var r={type:"delete",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(r,function(t){v.log("DataObjectReporter-DELETE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:"onSubscription",value:function(e){this._onSubscriptionHandler=e}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"onRead",value:function(e){this._onReadHandler=e}},{key:"onExecute",value:function(e){this._onExecuteHandler=e}},{key:"_onForward",value:function(e){switch(v.log("DataObjectReporter-RCV: ",e),e.body.type){case"subscribe":this._onSubscribe(e);break;case"unsubscribe":this._onUnSubscribe(e)}}},{key:"_onSubscribe",value:function(e){var t=this,r=e.body.from,n=(0,h.divideURL)(r),o=n.domain,i=!0;e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i=!1),v.log("[DataObjectReporter._onSubscribe]",e,o,n);var s={type:e.body.type,url:r,domain:o,identity:e.body.identity,nutual:i,accept:function(){var n={url:r,status:"live"};t._subscriptions[r]=n,t.metadata.subscriptions&&t.metadata.subscriptions.push(n.url);var o=(0,h.deepClone)(t._metadata);o.data=(0,h.deepClone)(t.data),o.version=t._version;var i={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:o}};return e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i.body.mutual=e.body.mutual,t.data.mutual=!1),t._bus.postMessage(i),n},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:403,desc:r}})}};t._onSubscriptionHandler&&(v.log("SUBSCRIPTION-EVENT: ",s),t._onSubscriptionHandler(s))}},{key:"_onUnSubscribe",value:function(e){var t=e.body.from,r=(0,h.divideURL)(t),n=r.domain;v.log("[DataObjectReporter._onUnSubscribe]",e,n,r),delete this._subscriptions[t],delete this.invitations[t];var o={type:e.body.type,url:t,domain:n,identity:e.body.identity};this._onSubscriptionHandler&&(v.log("UN-SUBSCRIPTION-EVENT: ",o),this._onSubscriptionHandler(o))}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.from,code:e.body.code};this._onResponseHandler&&(v.log("RESPONSE-EVENT: ",t),this._onResponseHandler(t))}},{key:"_onRead",value:function(e){var t=this,r=(0,o.default)(t.childrensJSON).length>t._childrenSizeThreshold,i={type:e.type,url:e.from,accept:function(){r?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}},s=[];t.metadata.subscriptions?s=t.metadata.subscriptions:t._subscriptions&&(s=(0,n.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=s.indexOf(e.from)?r?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(v.log("READ-EVENT: ",i),t._onReadHandler(i))}},{key:"_syncReply",value:function(e){var t=(0,h.deepClone)(this.metadata);t.data=(0,h.deepClone)(this.data),t.childrenObjects=(0,h.deepClone)(this.childrensJSON),t.version=this._version;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:t}};this._bus.postMessage(r)}},{key:"_syncReplyForLargeData",value:function(e){var t=this,r=(0,h.deepClone)(t.metadata);r.data=(0,h.deepClone)(t.data),r.version=t._version,delete r.childrenObjects;var n=void 0,i=[],s={};for(n in t._childrenObjects){var a=void 0;for(a in s[n]={},t._childrenObjects[n])(0,o.default)(s).length>t._childrenSizeThreshold&&(i.push(s),(s={})[n]={}),s[n][a]={},s[n][a].value=t._childrenObjects[n][a].metadata,s[n][a].identity=t._childrenObjects[n][a].identity}i.push(s),r.responses=i.length+1;var u={id:e.id,type:"response",from:e.to,to:e.from,body:{code:100,value:r}};t._bus.postMessage(u),i.forEach(function(e){var n=(0,h.deepClone)(u);n.body.value=e,n.body.value.responses=r.responses,setTimeout(function(){t._bus.postMessage(n)},50)})}},{key:"_onExecute",value:function(e){var t=this;if(!e.body.method)throw e;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}},n={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(r)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}};t._onExecuteHandler&&(v.log("[DataObjectReporter] EXECUTE-EVENT: ",n),t._onExecuteHandler(n))}},{key:"subscriptions",get:function(){return this._subscriptions}},{key:"childrensJSON",get:function(){var e={},t=void 0;for(t in this._childrenObjects){var r=void 0;for(r in e[t]={},this._childrenObjects[t])e[t][r]={},e[t][r].value=this._childrenObjects[t][r].metadata,e[t][r].identity=this._childrenObjects[t][r].identity}return e}}]),t}(p.default);t.default=_,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(42)),o=y(r(78)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),f=y(r(34)),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=r(19),h=y(r(122));function y(e){return e&&e.__esModule?e:{default:e}}var v=d.getLogger("DataObjectObserver"),_="start",b="exact",m=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._version=e.version,n._filters={},n._syncObj.observe(function(e){n._onFilter(e)}),n._allocateListeners(),r}return(0,f.default)(t,e),(0,u.default)(t,[{key:"sync",value:function(){var e=this;return v.info("[DataObjectObserver_sync] synchronising "),new i.default(function(t,r){e._syncher.read(e._metadata.url).then(function(r){v.info("[DataObjectObserver_sync] value to sync: ",r),(0,o.default)(e.data,(0,p.deepClone)(r.data)),e._version=r.version,e._metadata.lastModified=r.lastModified,r.childrenObjects?(e.resumeChildrens(r.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){v.info("[DataObjectObserver_sync] sync failed: ",e),t(!1)})})}},{key:"_storeChildrens",value:function(){var e=this,t={};(0,n.default)(e._childrenObjects).forEach(function(r){var o=e._childrenObjects[r];t[r]={},(0,n.default)(o).forEach(function(e){t[r][e]={},t[r][e].value=o[e].metadata,t[r][e].identity=o[e].identity})});var r={from:e._owner,to:e._syncher._subURL,type:"create",body:{resource:e._url,attribute:"childrenObjects",value:t}};e._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+"/changes",function(t){"update"===t.type&&(v.log("DataObjectObserver-"+e._url+"-RCV: ",t),e._changeObject(e._syncObj,t))})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_releaseListeners",this).call(this),this._changeListener.remove()}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:"unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){v.log("DataObjectObserver-UNSUBSCRIBE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:"onChange",value:function(e,t){var r=e,n={type:b,callback:t},o=e.indexOf("*");o===e.length-1&&(0===o?n.type="any":(n.type=_,r=e.substr(0,e.length-1))),this._filters[r]=n}},{key:"_onFilter",value:function(e){var t=this;(0,n.default)(t._filters).forEach(function(r){var n=t._filters[r];"any"===n.type?n.callback(e):n.type===_?0===e.field.indexOf(r)&&n.callback(e):n.type===b&&e.field===r&&n.callback(e)})}},{key:"onDisconnected",value:function(e){var t=this;return new i.default(function(r,n){t._subscribeRegistration().then(function(){t._onDisconnected=e,r()}).catch(function(e){return n(e)})})}},{key:"_subscribeRegistration",value:function(){var e=this,t={type:"subscribe",from:this._owner,to:this._syncher._runtimeUrl+"/subscriptions",body:{resources:[this._url+"/registration"]}};return new i.default(function(r,n){e._bus.postMessage(t,function(t){v.log("[DataObjectObserver._subscribeRegistration] "+e._url+" rcved reply ",t),200===t.body.code?(e._generateListener(e._url+"/registration"),r()):(v.error("Error subscribing registration status for ",e._url),n("Error subscribing registration status for "+e._url))})})}},{key:"_generateListener",value:function(e){var t=this;t._bus.addListener(e,function(e){v.log("[DataObjectObserver.registrationNotification] "+t._url+": ",e),e.body.value&&"disconnected"===e.body.value&&t._onDisconnected&&(v.log("[DataObjectObserver] "+t._url+": was disconnected ",e),t._onDisconnected())})}},{key:"execute",value:function(e,t){var r=this,n=this;return new i.default(function(o,i){var s={type:"execute",from:r._owner,to:n._url,body:{method:e,params:t}};n._bus.postMessage(s,function(t){v.log("[DataObjectObserver.execute] "+n._url+" rcved reply ",t),200===t.body.code?o():(v.warn("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"),i("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"))})})}}]),t}(h.default);t.default=m,e.exports=t.default},,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)).getLogger("DataProvisional"),a=function(){function e(t,r,o,i){(0,n.default)(this,e),this._owner=t,this._url=r,this._bus=o,this._children=i,this._changes=[],this._allocateListeners()}return(0,o.default)(e,[{key:"_allocateListeners",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){s.log("DataProvisional-"+e._url+"-RCV: ",t),e._changes.push(t)})}},{key:"_releaseListeners",value:function(){this._listener.remove()}},{key:"apply",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:"children",get:function(){return this._children}}]),e}();t.default=a,e.exports=t.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NotificationHandler=t.DataObjectObserver=t.DataObjectReporter=t.Syncher=void 0;var n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),o=u(r(131)),i=u(r(132)),s=u(r(133)),a=u(r(197));function u(e){return e&&e.__esModule?e:{default:e}}var c=n.getLogger("Syncher"),l=n.getLogger("DataObject"),f=n.getLogger("DataObjectChild"),d=n.getLogger("DataObjectObserver"),p=n.getLogger("DataObjectReporter"),h=n.getLogger("DataProvisional");c.setLevel(0),l.setLevel(0),f.setLevel(0),d.setLevel(0),p.setLevel(0),h.setLevel(0),t.Syncher=o.default,t.DataObjectReporter=i.default,t.DataObjectObserver=s.default,t.NotificationHandler=a.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s(r(3)),o=s(r(5)),i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){if((0,n.default)(this,e),!t)throw Error("[NotificationHandler Constructor] bus input is mandatory");this._bus=t,this._onNotificationHandler={}}return(0,o.default)(e,[{key:"onNotification",value:function(e,t){this._onNotificationHandler[e]=t}},{key:"onCreate",value:function(e){var t=this,r=e.body.hasOwnProperty("resource")?e.body.resource:e.from.slice(0,-13),n=(0,i.divideURL)(r).domain,o=r.split("://")[0],s=function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:400,desc:"Bad Request: "+r}})};e.body.hasOwnProperty("source")||s("Missing source"),e.body.hasOwnProperty("schema")||s("Missing schema"),e.body.hasOwnProperty("value")||s("Missing value"),e.body.hasOwnProperty("identity")||s("Missing identity");var a={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,to:e.to,via:e.body.via,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})},error:function(e){s(e)}};t._onNotificationHandler[o]&&(console.info("[NotificationHandler] NOTIFICATION-EVENT: ",a),t._onNotificationHandler[o](a))}},{key:"onDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(log.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}}]),e}();t.default=a,e.exports=t.default}])})},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=194)}({0:function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},1:function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},10:function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},11:function(e,t,r){var n=r(8),o=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},119:function(e,t,r){r(120),e.exports=r(0).Object.assign},12:function(e,t,r){var n=r(55),o=r(30);e.exports=function(e){return n(o(e))}},120:function(e,t,r){var n=r(6);n(n.S+n.F,"Object",{assign:r(121)})},121:function(e,t,r){"use strict";var n=r(20),o=r(43),i=r(29),s=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=s(e),u=arguments.length,c=1,l=o.f,f=i.f;u>c;)for(var d,p=a(arguments[c++]),h=l?n(p).concat(l(p)):n(p),y=h.length,v=0;y>v;)f.call(p,d=h[v++])&&(r[d]=p[d]);return r}:u},13:function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},14:function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},15:function(e,t){e.exports=!0},151:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(78)),o=i(r(3));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i,s,a,u){(0,o.default)(this,e),t&&(this.preferred_username=t),i&&(this.picture=i),s&&(this.name=s),a&&(this.locale=a),r&&(this.userURL=r),u&&(0,n.default)(this,u)},e.exports=t.default},16:function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},194:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserProfile=void 0;var n=i(r(151)),o=i(r(195));function i(e){return e&&e.__esModule?e:{default:e}}t.UserProfile=n.default,t.default=o.default},195:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(151));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i,s,a,u,c,l){if((0,n.default)(this,e),!u)throw new Error("IDP should be a parameter");if(!t)throw new Error("username should be a parameter");this.idp=u,c&&(this.assertion=c),this.userProfile=new o.default(t,r,i,s,a,l)},e.exports=t.default},20:function(e,t,r){var n=r(45),o=r(37);e.exports=Object.keys||function(e){return n(e,o)}},21:function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},23:function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},24:function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},27:function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},28:function(e,t,r){var n=r(7),o=r(1).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},29:function(e,t){t.f={}.propertyIsEnumerable},3:function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},30:function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},31:function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},32:function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},35:function(e,t,r){var n=r(36)("keys"),o=r(23);e.exports=function(e){return n[e]||(n[e]=o(e))}},36:function(e,t,r){var n=r(0),o=r(1),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},37:function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},39:function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},4:function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},43:function(e,t){t.f=Object.getOwnPropertySymbols},45:function(e,t,r){var n=r(10),o=r(12),i=r(64)(!1),s=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=o(e),u=0,c=[];for(r in a)r!=s&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~i(c,r)||c.push(r));return c}},49:function(e,t,r){var n=r(31),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},55:function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},6:function(e,t,r){var n=r(1),o=r(0),i=r(14),s=r(11),a=r(10),u=function(e,t,r){var c,l,f,d=e&u.F,p=e&u.G,h=e&u.S,y=e&u.P,v=e&u.B,_=e&u.W,b=p?o:o[t]||(o[t]={}),m=b.prototype,g=p?n:h?n[t]:(n[t]||{}).prototype;for(c in p&&(r=t),r)(l=!d&&g&&void 0!==g[c])&&a(b,c)||(f=l?g[c]:r[c],b[c]=p&&"function"!=typeof g[c]?r[c]:v&&l?i(f,n):_&&g[c]==f?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):y&&"function"==typeof f?i(Function.call,f):f,y&&((b.virtual||(b.virtual={}))[c]=f,e&u.R&&m&&!m[c]&&s(m,c,f)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},64:function(e,t,r){var n=r(12),o=r(49),i=r(65);e.exports=function(e){return function(t,r,s){var a,u=n(t),c=o(u.length),l=i(s,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},65:function(e,t,r){var n=r(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},7:function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},78:function(e,t,r){e.exports={default:r(119),__esModule:!0}},8:function(e,t,r){var n=r(9),o=r(39),i=r(27),s=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},9:function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}}})})}]).default});",
      "sourceCodeClassname": "fitness.google.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "1.00",
    "description": "Protostub of Google",
    "language": "javascript",
    "cguid": "406d1b76ae0394c37d6e7d0037a91cb7c",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "fitness.google.com",
    "configuration": {
      "sessions_query_interval": 60000,
      "domain": "localhost"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "IMSIWProtoStub": {
    "sourcePackage": {
      "sourceCode": "!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("activate",[],t):"object"==typeof exports?exports.activate=t():e.activate=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t,r){"use strict";e.exports=r(6)(r(39))},function(e,t){var r=e.exports={v:[{name:"version",reg:/^(\d*)$/}],o:[{name:"origin",reg:/^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,names:["username","sessionId","sessionVersion","netType","ipVer","address"],format:"%s %s %d %s IP%d %s"}],s:[{name:"name"}],i:[{name:"description"}],u:[{name:"uri"}],e:[{name:"email"}],p:[{name:"phone"}],z:[{name:"timezones"}],r:[{name:"repeats"}],t:[{name:"timing",reg:/^(\d*) (\d*)/,names:["start","stop"],format:"%d %d"}],c:[{name:"connection",reg:/^IN IP(\d) (\S*)/,names:["version","ip"],format:"IN IP%d %s"}],b:[{push:"bandwidth",reg:/^(TIAS|AS|CT|RR|RS):(\d*)/,names:["type","limit"],format:"%s:%s"}],m:[{reg:/^(\w*) (\d*) ([\w\/]*)(?: (.*))?/,names:["type","port","protocol","payloads"],format:"%s %d %s %s"}],a:[{push:"rtp",reg:/^rtpmap:(\d*) ([\w\-\.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,names:["payload","codec","rate","encoding"],format:function(e){return e.encoding?"rtpmap:%d %s/%s/%s":e.rate?"rtpmap:%d %s/%s":"rtpmap:%d %s"}},{push:"fmtp",reg:/^fmtp:(\d*) ([\S| ]*)/,names:["payload","config"],format:"fmtp:%d %s"},{name:"control",reg:/^control:(.*)/,format:"control:%s"},{name:"rtcp",reg:/^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,names:["port","netType","ipVer","address"],format:function(e){return null!=e.address?"rtcp:%d %s IP%d %s":"rtcp:%d"}},{push:"rtcpFbTrrInt",reg:/^rtcp-fb:(\*|\d*) trr-int (\d*)/,names:["payload","value"],format:"rtcp-fb:%d trr-int %d"},{push:"rtcpFb",reg:/^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,names:["payload","type","subtype"],format:function(e){return null!=e.subtype?"rtcp-fb:%s %s %s":"rtcp-fb:%s %s"}},{push:"ext",reg:/^extmap:([\w_\/]*) (\S*)(?: (\S*))?/,names:["value","uri","config"],format:function(e){return null!=e.config?"extmap:%s %s %s":"extmap:%s %s"}},{push:"crypto",reg:/^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,names:["id","suite","config","sessionConfig"],format:function(e){return null!=e.sessionConfig?"crypto:%d %s %s %s":"crypto:%d %s %s"}},{name:"setup",reg:/^setup:(\w*)/,format:"setup:%s"},{name:"mid",reg:/^mid:([^\s]*)/,format:"mid:%s"},{name:"msid",reg:/^msid:(.*)/,format:"msid:%s"},{name:"ptime",reg:/^ptime:(\d*)/,format:"ptime:%d"},{name:"maxptime",reg:/^maxptime:(\d*)/,format:"maxptime:%d"},{name:"direction",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:"icelite",reg:/^(ice-lite)/},{name:"iceUfrag",reg:/^ice-ufrag:(\S*)/,format:"ice-ufrag:%s"},{name:"icePwd",reg:/^ice-pwd:(\S*)/,format:"ice-pwd:%s"},{name:"fingerprint",reg:/^fingerprint:(\S*) (\S*)/,names:["type","hash"],format:"fingerprint:%s %s"},{push:"candidates",reg:/^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,names:["foundation","component","transport","priority","ip","port","type","raddr","rport","tcptype","generation","network-id","network-cost"],format:function(e){var t="candidate:%s %d %s %d %s %d typ %s";return t+=null!=e.raddr?" raddr %s rport %d":"%v%v",t+=null!=e.tcptype?" tcptype %s":"%v",null!=e.generation&&(t+=" generation %d"),t+=null!=e["network-id"]?" network-id %d":"%v",t+=null!=e["network-cost"]?" network-cost %d":"%v"}},{name:"endOfCandidates",reg:/^(end-of-candidates)/},{name:"remoteCandidates",reg:/^remote-candidates:(.*)/,format:"remote-candidates:%s"},{name:"iceOptions",reg:/^ice-options:(\S*)/,format:"ice-options:%s"},{push:"ssrcs",reg:/^ssrc:(\d*) ([\w_]*)(?::(.*))?/,names:["id","attribute","value"],format:function(e){var t="ssrc:%d";return null!=e.attribute&&(t+=" %s",null!=e.value&&(t+=":%s")),t}},{push:"ssrcGroups",reg:/^ssrc-group:(\w*) (.*)/,names:["semantics","ssrcs"],format:"ssrc-group:%s %s"},{name:"msidSemantic",reg:/^msid-semantic:\s?(\w*) (\S*)/,names:["semantic","token"],format:"msid-semantic: %s %s"},{push:"groups",reg:/^group:(\w*) (.*)/,names:["type","mids"],format:"group:%s %s"},{name:"rtcpMux",reg:/^(rtcp-mux)/},{name:"rtcpRsize",reg:/^(rtcp-rsize)/},{name:"sctpmap",reg:/^sctpmap:([\w_\/]*) (\S*)(?: (\S*))?/,names:["sctpmapNumber","app","maxMessageSize"],format:function(e){return null!=e.maxMessageSize?"sctpmap:%s %s %s":"sctpmap:%s %s"}},{push:"invalid",names:["value"]}]};Object.keys(r).forEach(function(e){r[e].forEach(function(e){e.reg||(e.reg=/(.*)/),e.format||(e.format="%s")})})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();t.default=function(e,t,r){return{name:"IMSIWProtoStub",instance:new l(e,t,r)}};var i=r(3),s=r(4),o=u(r(5)),a=u(r(47));function u(e){return e&&e.__esModule?e:{default:e}}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var l=function(){function e(t,r,n){var u=this;if(c(this,e),!t)throw new Error("The runtimeProtoStubURL is a required parameter");if(!r)throw new Error("The bus is a required parameter");if(!n)throw new Error("The configuration is a required parameter");if(!n.domain)throw new Error("The domain is a required parameter");this._runtimeProtoStubURL=t,this._discovery=new s.Discovery(t,r),this.schema="hyperty-catalogue://catalogue."+n.domain+"/.well-known/dataschema/Connection",this._connection=new o.default(n,function(e,t){u._returnSDP(t,u._runtimeProtoStubURL,u.schema,u.source,"offer")},function(){u.dataObjectObserver.delete(),u.dataObjectReporter.delete()}),this._bus=r,this._syncher=new i.Syncher(this._runtimeProtoStubURL,r,n),r.addListener("*",function(e){switch(console.log("NEW MSG ->",e),e.type){case"create":u._filter(e)&&e.body.schema&&(console.log("subscribe: ",e.body.schema),u._subscribe(e));break;case"init":u._identity=new a.default("anton","sip://rethink-project.eu/anton@rethink-project.eu","","anton","","rethink-project.eu"),console.log("myidentity",u._identity),u._connection.connect(e.body.identity.access_token),u.source=e.body.source;break;case"delete":u._connection.disconnect()}}),this._sendStatus("created")}return n(e,[{key:"_sendStatus",value:function(e,t){console.log("[IMSIWProtostub status changed] to ",e),this._state=e;var r={type:"update",from:this._runtimeProtoStubURL,to:this._runtimeProtoStubURL+"/status",body:{value:e}};t&&(r.body.desc=t),this._bus.postMessage(r)}},{key:"_subscribe",value:function(e){var t=this,r=e.from.substring(0,e.from.lastIndexOf("/"));this._syncher.subscribe(this.schema,r).then(function(e){return t.dataObjectObserver=e,console.log("dataObjectObserver:",e),e}).then(function(n){return t._onCall(n,r,t.schema,e)})}},{key:"_onCall",value:function(e,t,r,n){var i=this;console.log("_onCall",e),e.data.connectionDescription&&("offer"===e.data.connectionDescription.type?(console.log("_onCallUpdate offer"),this._connection.connect(n.body.identity.access_token).then(function(){console.log("sad",n),i._connection.invite(n.to,e).then(function(e){return i._returnSDP(e.body,t,r,n.body.source,"answer")}).catch(function(e){console.error("fail",e),i.dataObjectObserver.delete()})})):"answer"===e.data.connectionDescription.type&&(console.log("_onCallUpdate offer"),this._connection.accept(e)))}},{key:"_returnSDP",value:function(e,t,r,n,i){var s=this;console.log("offer received",e);var o=new function e(t){c(this,e),this.name="Connection",this.status="",this.owner=t,this.connectionDescription={},this.iceCandidates=[]}(t),a=Object.assign({resources:["audio"]},{});this._syncher.create(r,[n],o,!1,!1,"",this._identity,a).then(function(t){s.dataObjectReporter=t,t.onSubscription(function(e){console.info("-------- Receiver received subscription request --------- \n"),e.accept()}),t.data.connectionDescription={type:i,sdp:e}}).catch(function(e){console.error(e)})}},{key:"_filter",value:function(e){return!e.body||e.body.via!==this._runtimeProtoStubURL}}]),e}()},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=196)}([function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t,r){var n=r(36)("wks"),i=r(23),s=r(1).Symbol,o="function"==typeof s;(e.exports=function(e){return n[e]||(n[e]=o&&s[e]||(o?s:i)("Symbol."+e))}).store=n},function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),(0,n.default)(e,i.key,i)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){var n=r(1),i=r(0),s=r(14),o=r(11),a=r(10),u=function(e,t,r){var c,l,d,h=e&u.F,f=e&u.G,p=e&u.S,v=e&u.P,g=e&u.B,m=e&u.W,y=f?i:i[t]||(i[t]={}),_=y.prototype,T=f?n:p?n[t]:(n[t]||{}).prototype;for(c in f&&(r=t),r)(l=!h&&T&&void 0!==T[c])&&a(y,c)||(d=l?T[c]:r[c],y[c]=f&&"function"!=typeof T[c]?r[c]:g&&l?s(d,n):m&&T[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):v&&"function"==typeof d?s(Function.call,d):d,v&&((y.virtual||(y.virtual={}))[c]=d,e&u.R&&_&&!_[c]&&o(_,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){var n=r(9),i=r(39),s=r(27),o=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=s(t,!0),n(r),i)try{return o(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),i=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,i(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(55),i=r(30);e.exports=function(e){return n(i(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,i){return e.call(t,r,n,i)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,r){e.exports={default:r(102),__esModule:!0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s(r(58)),i=s(r(42));function s(e){return e&&e.__esModule?e:{default:e}}function o(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$3,$4").split(",")}var r=t(e);if(r[0]===e&&!r[0].includes("@")){var n={type:"",domain:e,identity:""};return console.warn("[DivideURL] DivideURL don't support url without scheme. Please review your url address",e),n}return r[0]===e&&r[0].includes("@")&&(r=t((r[0]===e?"smtp":r[0])+"://"+r[0])),r[1].includes("@")&&(r[2]=r[0]+"://"+r[1],r[1]=r[1].substr(r[1].indexOf("@")+1)),{type:r[0],domain:r[1],identity:r[2]}}function a(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}t.divideURL=o,t.divideEmail=function(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,i.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,n.default)(e))},t.getUserURLFromEmail=a,t.getUserEmailFromURL=function(e){var t=o(e);return t.identity.replace("/","")+"@"+t.domain},t.convertToUserURL=function(e){if("user://"===e.substring(0,7)){var t=o(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return a(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(".");else{for(var i=void 0;null!==(i=t.exec(e));)i.index===t.lastIndex&&t.lastIndex++,i.forEach(function(e,t){0===t&&r.push(e)});var s=void 0;r.forEach(function(t){s=e.replace(t,"*+*"),n=s.split(".").map(function(e){return"*+*"===e?t:e})})}return console.log("[ServiceFramework.Utils.checkAttribute]",n),n},t.parseAttributes=function(e){if(e.includes("://")){var t=e.split(/([0-9a-zA-Z][-\w]*):\/\//g)[0],r=t.split("."),n=e.replace(t,"");if(e.includes("identity")){var i=n.split("identity.");console.log("array2 "+i),n=i[0].slice(".",-1),i=i[1].split("."),r.push(n,"identity"),r=r.concat(i)}else r.push(n);return r.filter(Boolean)}return e.split(".")}},function(e,t,r){var n=r(45),i=r(37);e.exports=Object.keys||function(e){return n(e,i)}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){var n,i;!function(s,o){"use strict";void 0===(i="function"==typeof(n=function(){var e=function(){},t="undefined",r=["trace","debug","info","warn","error"];function n(e,t){var r=e[t];if("function"==typeof r.bind)return r.bind(e);try{return Function.prototype.bind.call(r,e)}catch(t){return function(){return Function.prototype.apply.apply(r,[e,arguments])}}}function i(t,n){for(var i=0;i<r.length;i++){var s=r[i];this[s]=i<t?e:this.methodFactory(s,t,n)}this.log=this.debug}function s(r,s,o){return function(r){return"debug"===r&&(r="log"),typeof console!==t&&(void 0!==console[r]?n(console,r):void 0!==console.log?n(console,"log"):e)}(r)||function(e,r,n){return function(){typeof console!==t&&(i.call(this,r,n),this[e].apply(this,arguments))}}.apply(this,arguments)}function o(e,n,o){var a,u=this,c="loglevel";function l(){var e;if(typeof window!==t){try{e=window.localStorage[c]}catch(e){}if(typeof e===t)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(c)+"=");-1!==n&&(e=/^([^;]+)/.exec(r.slice(n))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}e&&(c+=":"+e),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=o||s,u.getLevel=function(){return a},u.setLevel=function(n,s){if("string"==typeof n&&void 0!==u.levels[n.toUpperCase()]&&(n=u.levels[n.toUpperCase()]),!("number"==typeof n&&n>=0&&n<=u.levels.SILENT))throw"log.setLevel() called with invalid level: "+n;if(a=n,!1!==s&&function(e){var n=(r[e]||"silent").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[c]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(c)+"="+n+";"}catch(e){}}}(n),i.call(u,n,e),typeof console===t&&n<u.levels.SILENT)return"No console available for logging"},u.setDefaultLevel=function(e){l()||u.setLevel(e,!1)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)};var d=l();null==d&&(d=null==n?"WARN":n),u.setLevel(d,!1)}var a=new o,u={};a.getLogger=function(e){if("string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=u[e];return t||(t=u[e]=new o(e,a.getLevel(),a.methodFactory)),t};var c=typeof window!==t?window.log:void 0;return a.noConflict=function(){return typeof window!==t&&window.log===a&&(window.log=c),a},a.getLoggers=function(){return u},a})?n.call(t,r,t,e):n)||(e.exports=i)}()},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,r){e.exports={default:r(91),__esModule:!0}},function(e,t,r){var n=r(8).f,i=r(10),s=r(2)("toStringTag");e.exports=function(e,t,r){e&&!i(e=r?e:e.prototype,s)&&n(e,s,{configurable:!0,value:t})}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,i;if(t&&"function"==typeof(r=e.toString)&&!n(i=r.call(e)))return i;if("function"==typeof(r=e.valueOf)&&!n(i=r.call(e)))return i;if(!t&&"function"==typeof(r=e.toString)&&!n(i=r.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},function(e,t,r){var n=r(7),i=r(1).document,s=n(i)&&n(i.createElement);e.exports=function(e){return s?i.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(47));t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,n.default)(t))&&"function"!=typeof t?e:t}},function(e,t,r){"use strict";t.__esModule=!0;var n=o(r(93)),i=o(r(97)),s=o(r(47));function o(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,s.default)(t)));e.prototype=(0,i.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(n.default?(0,n.default)(e,t):e.__proto__=t)}},function(e,t,r){var n=r(36)("keys"),i=r(23);e.exports=function(e){return n[e]||(n[e]=i(e))}},function(e,t,r){var n=r(0),i=r(1),s=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(9),i=r(72),s=r(37),o=r(35)("IE_PROTO"),a=function(){},u=function(){var e,t=r(28)("iframe"),n=s.length;for(t.style.display="none",r(56).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[s[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(a.prototype=n(e),r=new a,a.prototype=null,r[o]=e):r=u(),void 0===t?r:i(r,t)}},function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},function(e,t,r){t.f=r(2)},function(e,t,r){var n=r(1),i=r(0),s=r(15),o=r(40),a=r(8).f;e.exports=function(e){var t=i.Symbol||(i.Symbol=s?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:o.f(e)})}},function(e,t,r){e.exports={default:r(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(6),i=r(0),s=r(13);e.exports=function(e,t){var r=(i.Object||{})[e]||Object[e],o={};o[e]=t(r),n(n.S+n.F*s(function(){r(1)}),"Object",o)}},function(e,t,r){var n=r(10),i=r(12),s=r(64)(!1),o=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=i(e),u=0,c=[];for(r in a)r!=o&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~s(c,r)||c.push(r));return c}},function(e,t,r){var n=r(29),i=r(16),s=r(12),o=r(27),a=r(10),u=r(39),c=Object.getOwnPropertyDescriptor;t.f=r(4)?c:function(e,t){if(e=s(e),t=o(t,!0),u)try{return c(e,t)}catch(e){}if(a(e,t))return i(!n.f.call(e,t),e[t])}},function(e,t,r){"use strict";t.__esModule=!0;var n=o(r(79)),i=o(r(81)),s="function"==typeof i.default&&"symbol"==typeof n.default?function(e){return typeof e}:function(e){return e&&"function"==typeof i.default&&e.constructor===i.default&&e!==i.default.prototype?"symbol":typeof e};function o(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof i.default&&"symbol"===s(n.default)?function(e){return void 0===e?"undefined":s(e)}:function(e){return e&&"function"==typeof i.default&&e.constructor===i.default&&e!==i.default.prototype?"symbol":void 0===e?"undefined":s(e)}},function(e,t,r){"use strict";var n=r(15),i=r(6),s=r(50),o=r(11),a=r(17),u=r(71),c=r(26),l=r(53),d=r(2)("iterator"),h=!([].keys&&"next"in[].keys()),f=function(){return this};e.exports=function(e,t,r,p,v,g,m){u(r,t,p);var y,_,T,b=function(e){if(!h&&e in C)return C[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},S=t+" Iterator",R="values"==v,E=!1,C=e.prototype,A=C[d]||C["@@iterator"]||v&&C[v],O=A||b(v),w=v?R?b("entries"):O:void 0,I="Array"==t&&C.entries||A;if(I&&(T=l(I.call(new e)))!==Object.prototype&&T.next&&(c(T,S,!0),n||"function"==typeof T[d]||o(T,d,f)),R&&A&&"values"!==A.name&&(E=!0,O=function(){return A.call(this)}),n&&!m||!h&&!E&&C[d]||o(C,d,O),a[t]=O,a[S]=f,v)if(y={values:R?O:b("values"),keys:g?O:b("keys"),entries:w},m)for(_ in y)_ in C||s(C,_,y[_]);else i(i.P+i.F*(h||E),t,y);return y}},function(e,t,r){var n=r(31),i=Math.min;e.exports=function(e){return e>0?i(n(e),9007199254740991):0}},function(e,t,r){e.exports=r(11)},function(e,t,r){"use strict";var n=r(24);e.exports.f=function(e){return new function(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}(e)}},function(e,t,r){"use strict";var n=r(70)(!0);r(48)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){var n=r(10),i=r(32),s=r(35)("IE_PROTO"),o=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),n(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?o:null}},function(e,t,r){r(73);for(var n=r(1),i=r(11),s=r(17),o=r(2)("toStringTag"),a="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<a.length;u++){var c=a[u],l=n[c],d=l&&l.prototype;d&&!d[o]&&i(d,o,c),s[c]=s.Array}},function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(45),i=r(37).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,i)}},function(e,t,r){e.exports={default:r(76),__esModule:!0}},function(e,t,r){e.exports={default:r(61),__esModule:!0}},function(e,t){},function(e,t,r){r(62);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(6);n(n.S+n.F*!r(4),"Object",{defineProperty:r(8).f})},function(e,t,r){var n=r(21),i=r(2)("toStringTag"),s="Arguments"==n(function(){return arguments}());e.exports=function(e){var t,r,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?r:s?n(t):"Object"==(o=n(t))&&"function"==typeof t.callee?"Arguments":o}},function(e,t,r){var n=r(12),i=r(49),s=r(65);e.exports=function(e){return function(t,r,o){var a,u=n(t),c=i(u.length),l=s(o,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(31),i=Math.max,s=Math.min;e.exports=function(e,t){return(e=n(e))<0?i(e+t,0):s(e,t)}},function(e,t,r){var n=r(9),i=r(24),s=r(2)("species");e.exports=function(e,t){var r,o=n(e).constructor;return void 0===o||void 0==(r=n(o)[s])?t:i(r)}},function(e,t,r){var n,i,s,o=r(14),a=r(108),u=r(56),c=r(28),l=r(1),d=l.process,h=l.setImmediate,f=l.clearImmediate,p=l.MessageChannel,v=l.Dispatch,g=0,m={},y=function(){var e=+this;if(m.hasOwnProperty(e)){var t=m[e];delete m[e],t()}},_=function(e){y.call(e.data)};h&&f||(h=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return m[++g]=function(){a("function"==typeof e?e:Function(e),t)},n(g),g},f=function(e){delete m[e]},"process"==r(21)(d)?n=function(e){d.nextTick(o(y,e,1))}:v&&v.now?n=function(e){v.now(o(y,e,1))}:p?(s=(i=new p).port2,i.port1.onmessage=_,n=o(s.postMessage,s,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+"","*")},l.addEventListener("message",_,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),y.call(e)}}:function(e){setTimeout(o(y,e,1),0)}),e.exports={set:h,clear:f}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(9),i=r(7),s=r(51);e.exports=function(e,t){if(n(e),i(t)&&t.constructor===e)return t;var r=s.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(31),i=r(30);e.exports=function(e){return function(t,r){var s,o,a=String(i(t)),u=n(r),c=a.length;return u<0||u>=c?e?"":void 0:(s=a.charCodeAt(u))<55296||s>56319||u+1===c||(o=a.charCodeAt(u+1))<56320||o>57343?e?a.charAt(u):s:e?a.slice(u,u+2):o-56320+(s-55296<<10)+65536}}},function(e,t,r){"use strict";var n=r(38),i=r(16),s=r(26),o={};r(11)(o,r(2)("iterator"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(o,{next:i(1,r)}),s(e,t+" Iterator")}},function(e,t,r){var n=r(8),i=r(9),s=r(20);e.exports=r(4)?Object.defineProperties:function(e,t){i(e);for(var r,o=s(t),a=o.length,u=0;a>u;)n.f(e,r=o[u++],t[r]);return e}},function(e,t,r){"use strict";var n=r(74),i=r(75),s=r(17),o=r(12);e.exports=r(48)(Array,"Array",function(e,t){this._t=o(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,i(1)):i(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])},"values"),s.Arguments=s.Array,n("keys"),n("values"),n("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){var n=r(0),i=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return i.stringify.apply(i,arguments)}},function(e,t,r){var n=r(23)("meta"),i=r(7),s=r(10),o=r(8).f,a=0,u=Object.isExtensible||function(){return!0},c=!r(13)(function(){return u(Object.preventExtensions({}))}),l=function(e){o(e,n,{value:{i:"O"+ ++a,w:{}}})},d=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!s(e,n)){if(!u(e))return"F";if(!t)return"E";l(e)}return e[n].i},getWeak:function(e,t){if(!s(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},onFreeze:function(e){return c&&d.NEED&&u(e)&&!s(e,n)&&l(e),e}}},function(e,t,r){e.exports={default:r(119),__esModule:!0}},function(e,t,r){e.exports={default:r(80),__esModule:!0}},function(e,t,r){r(52),r(54),e.exports=r(40).f("iterator")},function(e,t,r){e.exports={default:r(82),__esModule:!0}},function(e,t,r){r(83),r(60),r(87),r(88),e.exports=r(0).Symbol},function(e,t,r){"use strict";var n=r(1),i=r(10),s=r(4),o=r(6),a=r(50),u=r(77).KEY,c=r(13),l=r(36),d=r(26),h=r(23),f=r(2),p=r(40),v=r(41),g=r(84),m=r(85),y=r(9),_=r(7),T=r(12),b=r(27),S=r(16),R=r(38),E=r(86),C=r(46),A=r(8),O=r(20),w=C.f,I=A.f,D=E.f,U=n.Symbol,x=n.JSON,N=x&&x.stringify,$=f("_hidden"),P=f("toPrimitive"),X={}.propertyIsEnumerable,M=l("symbol-registry"),L=l("symbols"),k=l("op-symbols"),j=Object.prototype,H="function"==typeof U,q=n.QObject,F=!q||!q.prototype||!q.prototype.findChild,B=s&&c(function(){return 7!=R(I({},"a",{get:function(){return I(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=w(j,t);n&&delete j[t],I(e,t,r),n&&e!==j&&I(j,t,n)}:I,G=function(e){var t=L[e]=R(U.prototype);return t._k=e,t},W=H&&"symbol"==typeof U.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof U},V=function(e,t,r){return e===j&&V(k,t,r),y(e),t=b(t,!0),y(r),i(L,t)?(r.enumerable?(i(e,$)&&e[$][t]&&(e[$][t]=!1),r=R(r,{enumerable:S(0,!1)})):(i(e,$)||I(e,$,S(1,{})),e[$][t]=!0),B(e,t,r)):I(e,t,r)},K=function(e,t){y(e);for(var r,n=g(t=T(t)),i=0,s=n.length;s>i;)V(e,r=n[i++],t[r]);return e},Y=function(e){var t=X.call(this,e=b(e,!0));return!(this===j&&i(L,e)&&!i(k,e))&&(!(t||!i(this,e)||!i(L,e)||i(this,$)&&this[$][e])||t)},Z=function(e,t){if(e=T(e),t=b(t,!0),e!==j||!i(L,t)||i(k,t)){var r=w(e,t);return!r||!i(L,t)||i(e,$)&&e[$][t]||(r.enumerable=!0),r}},z=function(e){for(var t,r=D(T(e)),n=[],s=0;r.length>s;)i(L,t=r[s++])||t==$||t==u||n.push(t);return n},J=function(e){for(var t,r=e===j,n=D(r?k:T(e)),s=[],o=0;n.length>o;)!i(L,t=n[o++])||r&&!i(j,t)||s.push(L[t]);return s};H||(a((U=function(){if(this instanceof U)throw TypeError("Symbol is not a constructor!");var e=h(arguments.length>0?arguments[0]:void 0),t=function(r){this===j&&t.call(k,r),i(this,$)&&i(this[$],e)&&(this[$][e]=!1),B(this,e,S(1,r))};return s&&F&&B(j,e,{configurable:!0,set:t}),G(e)}).prototype,"toString",function(){return this._k}),C.f=Z,A.f=V,r(57).f=E.f=z,r(29).f=Y,r(43).f=J,s&&!r(15)&&a(j,"propertyIsEnumerable",Y,!0),p.f=function(e){return G(f(e))}),o(o.G+o.W+o.F*!H,{Symbol:U});for(var Q="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Q.length>ee;)f(Q[ee++]);for(var te=O(f.store),re=0;te.length>re;)v(te[re++]);o(o.S+o.F*!H,"Symbol",{for:function(e){return i(M,e+="")?M[e]:M[e]=U(e)},keyFor:function(e){if(!W(e))throw TypeError(e+" is not a symbol!");for(var t in M)if(M[t]===e)return t},useSetter:function(){F=!0},useSimple:function(){F=!1}}),o(o.S+o.F*!H,"Object",{create:function(e,t){return void 0===t?R(e):K(R(e),t)},defineProperty:V,defineProperties:K,getOwnPropertyDescriptor:Z,getOwnPropertyNames:z,getOwnPropertySymbols:J}),x&&o(o.S+o.F*(!H||c(function(){var e=U();return"[null]"!=N([e])||"{}"!=N({a:e})||"{}"!=N(Object(e))})),"JSON",{stringify:function(e){for(var t,r,n=[e],i=1;arguments.length>i;)n.push(arguments[i++]);if(r=t=n[1],(_(t)||void 0!==e)&&!W(e))return m(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!W(t))return t}),n[1]=t,N.apply(x,n)}}),U.prototype[P]||r(11)(U.prototype,P,U.prototype.valueOf),d(U,"Symbol"),d(Math,"Math",!0),d(n.JSON,"JSON",!0)},function(e,t,r){var n=r(20),i=r(43),s=r(29);e.exports=function(e){var t=n(e),r=i.f;if(r)for(var o,a=r(e),u=s.f,c=0;a.length>c;)u.call(e,o=a[c++])&&t.push(o);return t}},function(e,t,r){var n=r(21);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n=r(12),i=r(57).f,s={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return o&&"[object Window]"==s.call(e)?function(e){try{return i(e)}catch(e){return o.slice()}}(e):i(n(e))}},function(e,t,r){r(41)("asyncIterator")},function(e,t,r){r(41)("observable")},function(e,t,r){r(90),e.exports=r(0).Object.keys},function(e,t,r){var n=r(32),i=r(20);r(44)("keys",function(){return function(e){return i(n(e))}})},function(e,t,r){r(92),e.exports=r(0).Object.getPrototypeOf},function(e,t,r){var n=r(32),i=r(53);r(44)("getPrototypeOf",function(){return function(e){return i(n(e))}})},function(e,t,r){e.exports={default:r(94),__esModule:!0}},function(e,t,r){r(95),e.exports=r(0).Object.setPrototypeOf},function(e,t,r){var n=r(6);n(n.S,"Object",{setPrototypeOf:r(96).set})},function(e,t,r){var n=r(7),i=r(9),s=function(e,t){if(i(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=r(14)(Function.call,r(46).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return s(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:s}},function(e,t,r){e.exports={default:r(98),__esModule:!0}},function(e,t,r){r(99);var n=r(0).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(6);n(n.S,"Object",{create:r(38)})},function(e,t,r){"use strict";t.__esModule=!0;var n=s(r(25)),i=s(r(125));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,s){null===t&&(t=Function.prototype);var o=(0,i.default)(t,r);if(void 0===o){var a=(0,n.default)(t);return null===a?void 0:e(a,r,s)}if("value"in o)return o.value;var u=o.get;return void 0!==u?u.call(s):void 0}},function(e,t,r){var n=r(63),i=r(2)("iterator"),s=r(17);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[i]||e["@@iterator"]||s[n(e)]}},function(e,t,r){r(60),r(52),r(54),r(103),r(114),r(115),e.exports=r(0).Promise},function(e,t,r){"use strict";var n,i,s,o,a=r(15),u=r(1),c=r(14),l=r(63),d=r(6),h=r(7),f=r(24),p=r(104),v=r(105),g=r(66),m=r(67).set,y=r(109)(),_=r(51),T=r(68),b=r(110),S=r(69),R=u.TypeError,E=u.process,C=E&&E.versions,A=C&&C.v8||"",O=u.Promise,w="process"==l(E),I=function(){},D=i=_.f,U=!!function(){try{var e=O.resolve(1),t=(e.constructor={})[r(2)("species")]=function(e){e(I,I)};return(w||"function"==typeof PromiseRejectionEvent)&&e.then(I)instanceof t&&0!==A.indexOf("6.6")&&-1===b.indexOf("Chrome/66")}catch(e){}}(),x=function(e){var t;return!(!h(e)||"function"!=typeof(t=e.then))&&t},N=function(e,t){if(!e._n){e._n=!0;var r=e._c;y(function(){for(var n=e._v,i=1==e._s,s=0,o=function(t){var r,s,o,a=i?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{a?(i||(2==e._h&&X(e),e._h=1),!0===a?r=n:(l&&l.enter(),r=a(n),l&&(l.exit(),o=!0)),r===t.promise?c(R("Promise-chain cycle")):(s=x(r))?s.call(r,u,c):u(r)):c(n)}catch(e){l&&!o&&l.exit(),c(e)}};r.length>s;)o(r[s++]);e._c=[],e._n=!1,t&&!e._h&&$(e)})}},$=function(e){m.call(u,function(){var t,r,n,i=e._v,s=P(e);if(s&&(t=T(function(){w?E.emit("unhandledRejection",i,e):(r=u.onunhandledrejection)?r({promise:e,reason:i}):(n=u.console)&&n.error&&n.error("Unhandled promise rejection",i)}),e._h=w||P(e)?2:1),e._a=void 0,s&&t.e)throw t.v})},P=function(e){return 1!==e._h&&0===(e._a||e._c).length},X=function(e){m.call(u,function(){var t;w?E.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},M=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),N(t,!0))},L=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw R("Promise can't be resolved itself");(t=x(e))?y(function(){var n={_w:r,_d:!1};try{t.call(e,c(L,n,1),c(M,n,1))}catch(e){M.call(n,e)}}):(r._v=e,r._s=1,N(r,!1))}catch(e){M.call({_w:r,_d:!1},e)}}};U||(O=function(e){p(this,O,"Promise","_h"),f(e),n.call(this);try{e(c(L,this,1),c(M,this,1))}catch(e){M.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(111)(O.prototype,{then:function(e,t){var r=D(g(this,O));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=w?E.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&N(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),s=function(){var e=new n;this.promise=e,this.resolve=c(L,e,1),this.reject=c(M,e,1)},_.f=D=function(e){return e===O||e===o?new s(e):i(e)}),d(d.G+d.W+d.F*!U,{Promise:O}),r(26)(O,"Promise"),r(112)("Promise"),o=r(0).Promise,d(d.S+d.F*!U,"Promise",{reject:function(e){var t=D(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!U),"Promise",{resolve:function(e){return S(a&&this===o?O:this,e)}}),d(d.S+d.F*!(U&&r(113)(function(e){O.all(e).catch(I)})),"Promise",{all:function(e){var t=this,r=D(t),n=r.resolve,i=r.reject,s=T(function(){var r=[],s=0,o=1;v(e,!1,function(e){var a=s++,u=!1;r.push(void 0),o++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--o||n(r))},i)}),--o||n(r)});return s.e&&i(s.v),r.promise},race:function(e){var t=this,r=D(t),n=r.reject,i=T(function(){v(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return i.e&&n(i.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(14),i=r(106),s=r(107),o=r(9),a=r(49),u=r(101),c={},l={};(t=e.exports=function(e,t,r,d,h){var f,p,v,g,m=h?function(){return e}:u(e),y=n(r,d,t?2:1),_=0;if("function"!=typeof m)throw TypeError(e+" is not iterable!");if(s(m)){for(f=a(e.length);f>_;_++)if((g=t?y(o(p=e[_])[0],p[1]):y(e[_]))===c||g===l)return g}else for(v=m.call(e);!(p=v.next()).done;)if((g=i(v,y,p.value,t))===c||g===l)return g}).BREAK=c,t.RETURN=l},function(e,t,r){var n=r(9);e.exports=function(e,t,r,i){try{return i?t(n(r)[0],r[1]):t(r)}catch(t){var s=e.return;throw void 0!==s&&n(s.call(e)),t}}},function(e,t,r){var n=r(17),i=r(2)("iterator"),s=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||s[i]===e)}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),i=r(67).set,s=n.MutationObserver||n.WebKitMutationObserver,o=n.process,a=n.Promise,u="process"==r(21)(o);e.exports=function(){var e,t,r,c=function(){var n,i;for(u&&(n=o.domain)&&n.exit();e;){i=e.fn,e=e.next;try{i()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){o.nextTick(c)};else if(!s||n.navigator&&n.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);r=function(){l.then(c)}}else r=function(){i.call(n,c)};else{var d=!0,h=document.createTextNode("");new s(c).observe(h,{characterData:!0}),r=function(){h.data=d=!d}}return function(n){var i={fn:n,next:void 0};t&&(t.next=i),e||(e=i,r()),t=i}}},function(e,t,r){var n=r(1).navigator;e.exports=n&&n.userAgent||""},function(e,t,r){var n=r(11);e.exports=function(e,t,r){for(var i in t)r&&e[i]?e[i]=t[i]:n(e,i,t[i]);return e}},function(e,t,r){"use strict";var n=r(1),i=r(0),s=r(8),o=r(4),a=r(2)("species");e.exports=function(e){var t="function"==typeof i[e]?i[e]:n[e];o&&t&&!t[a]&&s.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(2)("iterator"),i=!1;try{var s=[7][n]();s.return=function(){i=!0},Array.from(s,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var r=!1;try{var s=[7],o=s[n]();o.next=function(){return{done:r=!0}},s[n]=function(){return o},e(s)}catch(e){}return r}},function(e,t,r){"use strict";var n=r(6),i=r(0),s=r(1),o=r(66),a=r(69);n(n.P+n.R,"Promise",{finally:function(e){var t=o(this,i.Promise||s.Promise),r="function"==typeof e;return this.then(r?function(r){return a(t,e()).then(function(){return r})}:e,r?function(r){return a(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){"use strict";var n=r(6),i=r(51),s=r(68);n(n.S,"Promise",{try:function(e){var t=i.f(this),r=s(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectType=t.ChangeType=void 0;var n=o(r(3)),i=o(r(5));r(123);var s=r(19);function o(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){(0,n.default)(this,e),this._observers=[],this._filters={},this._data=t||{},this._internalObserve(this._data)}return(0,i.default)(e,[{key:"observe",value:function(e){this._observers.push(e)}},{key:"find",value:function(e){var t=(0,s.parseAttributes)(e);return this._findWithSplit(t)}},{key:"findBefore",value:function(e){var t={},r=(0,s.parseAttributes)(e);return t.last=r.pop(),t.obj=this._findWithSplit(r),t}},{key:"_findWithSplit",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:"_internalObserve",value:function(e){var t=this;this._data=Object.deepObserve(e,function(e){e.every(function(e){t._onChanges(e)})})}},{key:"_fireEvent",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:"_onChanges",value:function(e){var t=e.object,r=void 0;t.constructor===Object&&(r=c.OBJECT),t.constructor===Array&&(r=c.ARRAY);var n=e.keypath,i=t[e.name];"update"!==e.type||n.includes(".length")||this._fireEvent({cType:u.UPDATE,oType:r,field:n,data:i}),"add"===e.type&&this._fireEvent({cType:u.ADD,oType:r,field:n,data:i}),"delete"===e.type&&this._fireEvent({cType:u.REMOVE,oType:r,field:n})}},{key:"data",get:function(){return this._data}}]),e}(),u=t.ChangeType={UPDATE:"update",ADD:"add",REMOVE:"remove"},c=t.ObjectType={OBJECT:"object",ARRAY:"array"};t.default=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(18)),i=c(r(3)),s=c(r(5)),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=c(r(117)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=o.getLogger("DataObjectChild"),d=function(){function e(t){function r(e){throw"[DataObjectChild] "+e+" mandatory parameter is missing"}(0,i.default)(this,e),t.parent?this._parent=t.parent:r("parent"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.parentObject?this._parentObject=t.parentObject:r("parentObject"),t.name&&(this._name=t.name),t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._childId=t.url,t.data?this._syncObj=new a.default(t.data):this._syncObj=new a.default({}),l.log("[DataObjectChild -  Constructor] - ",this._syncObj),this._bus=this._parentObject._bus,this._owner=this._parentObject._owner,this._allocateListeners(),this._metadata=t,delete this._metadata.parentObject,this._sharingStatus=!1}return(0,s.default)(e,[{key:"share",value:function(e){var t=this;t._sharingStatus=new n.default(function(r,n){var i;i=e?t.metadata.parent:t.metadata.parent+"/children/"+t.metadata.children;var s=t.metadata;s.data=t.data;var o={type:"create",from:t.metadata.reporter,to:i,body:{resource:s.url,value:s}};if(t.identity&&(o.body.identity=t.identity),t._parentObject.data.hasOwnProperty("mutual")&&(o.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,u.deepClone)(o)),r();var a=t._bus.postMessage((0,u.deepClone)(o),function(e){if(e.to===t._reporter){t._bus.removeResponseListener(o.from,e.id),l.log("[Syncher.DataObjectChild.share] Parent reporter reply ",e);var i={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:"Unknown"};return e.body.code<300?r(i):n(i)}},!1);setTimeout(function(){return t._bus.removeResponseListener(o.from,a),n({code:408,desc:"timout"})},3e3)})}},{key:"store",value:function(){var e={},t=this.metadata.children+"."+this.metadata.url;e.value=this.metadata,e.identity=this.identity;var r={from:this.metadata.reporter,to:this._parentObject._syncher._subURL,type:"create",body:{resource:this.metadata.parent,attribute:t,value:e}};l.log("[DataObjectChild.store]:",r),this._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){"response"===t.type&&t.id===e._msgId&&(l.log("DataObjectChild.onResponse:",t),e._onResponse(t))}))}},{key:"_releaseListeners",value:function(){this._listener&&this._listener.remove()}},{key:"delete",value:function(){this._releaseListeners()}},{key:"onChange",value:function(e){this._syncObj.observe(function(t){l.log("[DataObjectChild - observer] - ",t),e(t)})}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.body.source,code:e.body.code};this._onResponseHandler&&this._onResponseHandler(t)}},{key:"shareable",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:"metadata",get:function(){return this._metadata}},{key:"childId",get:function(){return this._childId}},{key:"sharingStatus",get:function(){return this._sharingStatus}},{key:"data",get:function(){return this._syncObj.data}},{key:"identity",set:function(e){this._identity=e},get:function(){return this._identity}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){r(120),e.exports=r(0).Object.assign},function(e,t,r){var n=r(6);n(n.S+n.F,"Object",{assign:r(121)})},function(e,t,r){"use strict";var n=r(20),i=r(43),s=r(29),o=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=o(e),u=arguments.length,c=1,l=i.f,d=s.f;u>c;)for(var h,f=a(arguments[c++]),p=l?n(f).concat(l(f)):n(f),v=p.length,g=0;v>g;)d.call(f,h=p[g++])&&(r[h]=f[h]);return r}:u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=v(r(47)),i=v(r(18)),s=v(r(42)),o=v(r(78)),a=v(r(3)),u=v(r(5)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=r(117),d=v(l),h=v(r(118)),f=r(19),p=v(r(128));function v(e){return e&&e.__esModule?e:{default:e}}var g=c.getLogger("DataObject"),m=function(){function e(t){function r(e){throw"[DataObject] "+e+" mandatory parameter is missing"}(0,a.default)(this,e),t.syncher?this._syncher=t.syncher:r("syncher"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.name?this._name=t.name:r("name"),this._status=t.status,t.data?this._syncObj=new d.default(t.data):this._syncObj=new d.default({}),this._childrens=t.childrens,this._mutual=t.mutual,this._version=0,this._childId=0,this._childrenListeners=[],this._onAddChildrenHandler,this._resumed=t.resume,t.resume&&(this._version=t.version),this._owner=t.syncher._owner,this._bus=t.syncher._bus,t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._metadata=(0,o.default)(t),this._metadata.lastModified=this._metadata.created,delete this._metadata.data,delete this._metadata.syncher,delete this._metadata.authorise,this._hypertyResourceFactory=new p.default,this._childrenObjects={},this._sharedChilds=[]}return(0,u.default)(e,[{key:"_getLastChildId",value:function(){var e=this,t=e._owner+"#0";return(0,s.default)(e._childrens).filter(function(r){e._childrens[r].childId>t&&(t=e._childrens[r].childId)}),Number(t.split("#")[1])}},{key:"_allocateListeners",value:function(){var e=this,t=this,r=t._url+"/children/";g.log("[Data Object - AllocateListeners] - ",t._childrens),t._childrens&&t._childrens.forEach(function(n){var i=r+n,s=t._bus.addListener(i,function(r){if(r.from!==e._owner)switch(g.log("DataObject-Children-RCV: ",r),r.type){case"create":t._onChildCreate(r);break;case"delete":g.log(r);break;default:t._changeChildren(r)}});t._childrenListeners.push(s)})}},{key:"_releaseListeners",value:function(){var e=this;e._childrenListeners.forEach(function(e){e.remove()}),(0,s.default)(e._childrenObjects).forEach(function(t){(0,s.default)(e._childrenObjects[t]).forEach(function(r){e._childrenObjects[t][r]._releaseListeners()})})}},{key:"resumeChildrens",value:function(e){var t=this,r=this,n=this._owner+"#"+this._childId;(0,s.default)(e).forEach(function(i){var o=e[i];(0,s.default)(o).forEach(function(e){var s=!1;r._childrenObjects.hasOwnProperty(i)||(r._childrenObjects[i]={}),o[e].value.resourceType&&!r._childrenObjects[i].hasOwnProperty(e)?(r._childrenObjects[i][e]=r._resumeHypertyResource(o[e]),s=!0):r._childrenObjects[i].hasOwnProperty(e)||(r._childrenObjects[i][e]=r._resumeChild(o[e]),g.log("[DataObject.resumeChildrens] new DataObjectChild: ",r._childrenObjects[i][e]),s=!0),s&&e>n&&(n=e,g.log("[DataObjectReporter.resumeChildrens] - resuming: ",t._childrenObjects[i][e]))})}),this._childId=Number(n.split("#")[1])}},{key:"_resumeChild",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=new h.default(t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"_resumeHypertyResource",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"pause",value:function(){throw"Not implemented"}},{key:"resume",value:function(){throw"Not implemented"}},{key:"stop",value:function(){throw"Not implemented"}},{key:"addChild",value:function(e,t,r,n){var s=this,o=void 0;return new i.default(function(i){var a=s._url+"/children/"+e,u=s._getChildInput(n);u.data=t,u.children=e,o=new h.default(u),r&&(o.identity=r),o.share(),g.log("[DataObject.addChild] added ",o),o.onChange(function(e){s._onChange(e,{path:a,childId:u.url})}),s._childrenObjects.hasOwnProperty(e)||(s._childrenObjects[e]={}),s._childrenObjects[e][u.url]=o,i(o)})}},{key:"_deleteChildrens",value:function(){var e=this,t=[];return new i.default(function(r){if(e.childrens){g.log("[DataObject.deleteChildrens]",e.childrens);var n=void 0;for(n in e.childrens){var s=void 0;for(s in e.childrens[n]){var o=e.childrens[n][s];g.log("[DataObject._deleteChildrens] child",o),o.metadata.hasOwnProperty("resourceType")&&t.push(e.childrens[n][s].delete())}}}g.log("[DataObject._deleteChildrens] promises ",t),t.length>0?i.default.all(t).then(function(){r("[DataObject._deleteChildrens] done")}):r("[DataObject._deleteChildrens] nothing to delete")})}},{key:"_getChildInput",value:function(e){var t=(0,o.default)({},e);return this._childId++,t.url=this._owner+"#"+this._childId,t.parentObject=this,t.reporter=this._owner,t.created=(new Date).toISOString(),t.runtime=this._syncher._runtimeUrl,t.p2pHandler=this._syncher._p2pHandler,t.p2pRequester=this._syncher._p2pRequester,t.schema=this._schema,t.parent=this.url,t}},{key:"addHypertyResource",value:function(e,t,r,n,s){var o=this;return new i.default(function(i){var a=void 0,u=o._url+"/children/"+e,c=o._getChildInput(s);c.children=e,o._hypertyResourceFactory.createHypertyResourceWithContent(!0,t,r,c).then(function(t){a=t,n&&(a.identity=n),a.share(),g.log("[DataObject.addHypertyResource] added ",a),a.onChange(function(e){o._onChange(e,{path:u,childId:a.childId})}),o._childrenObjects.hasOwnProperty(e)||(o._childrenObjects[e]={}),o._childrenObjects[e][a.childId]=a,i(a)})})}},{key:"onAddChild",value:function(e){this._onAddChildrenHandler=e}},{key:"_onChildCreate",value:function(e){g.log("[DataObject._onChildCreate] receivedBy "+this._owner+" : ",e);var t={from:e.to,to:e.from,type:"response",id:e.id,body:{code:100}};this._bus.postMessage(t),e.body.value.resourceType?this._onHypertyResourceAdded(e):this._onChildAdded(e)}},{key:"_onChildAdded",value:function(e){var t=(0,f.deepClone)(e.body.value);t.parentObject=this;var r=t.children,n=new h.default(t);n.identity=e.body.identity,this._childrenObjects.hasOwnProperty(r)||(this._childrenObjects[r]={}),this._childrenObjects[r][t.url]=n,e.to===this.metadata.url&&n.store(),this._hypertyEvt(e,n)}},{key:"_onHypertyResourceAdded",value:function(e){var t=e.body.value,r=void 0,n=t.children;t.parentObject=this,(r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t)).identity=e.body.identity,this._childrenObjects.hasOwnProperty(n)||(this._childrenObjects[n]={}),this._childrenObjects[n][r.childId]=r,this._hypertyEvt(e,r),e.to===this.metadata.url&&r.store()}},{key:"_hypertyEvt",value:function(e,t){var r={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(r.resource=t),this._onAddChildrenHandler&&this._onAddChildrenHandler(r)}},{key:"_onChange",value:function(e,t){if(this._metadata.lastModified=(new Date).toISOString(),this._version++,"live"===this._status){var r={type:"update",from:this._url,to:this._url+"/changes",body:{version:this._version,source:this._owner,attribute:e.field,lastModified:this._metadata.lastModified}};g.log("[DataObject - _onChange] - ",e,t,r),e.oType===l.ObjectType.OBJECT?e.cType!==l.ChangeType.REMOVE&&(r.body.value=(0,f.deepClone)(e.data)):(r.body.attributeType=e.oType,r.body.value=e.data,e.cType!==l.ChangeType.UPDATE&&(r.body.operation=e.cType)),t&&(r.to=t.path,r.body.resource=t.childId),this.data._mutual||(r.body.mutual=this._mutual),this._bus.postMessage(r)}}},{key:"_changeObject",value:function(e,t){if(this._version+1<=t.body.version){this._version=t.body.version;var r,i=t.body.attribute;r="object"===(0,n.default)(t.body.value)?(0,f.deepClone)(t.body.value):t.body.value;var s=e.findBefore(i);if(t.body.lastModified?this._metadata.lastModified=t.body.lastModified:this._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===l.ObjectType.ARRAY)if(t.body.operation===l.ChangeType.ADD){var o=s.obj,a=s.last;Array.prototype.splice.apply(o,[a,0].concat(r))}else if(t.body.operation===l.ChangeType.REMOVE){var u=s.obj,c=s.last;u.splice(c,r)}else s.obj[s.last]=r;else t.body.hasOwnProperty("value")?s.obj[s.last]=r:delete s.obj[s.last]}else g.log("UNSYNCHRONIZED VERSION: (data => "+this._version+", msg => "+t.body.version+")")}},{key:"_changeChildren",value:function(e){var t=(0,f.divideURL)(e.to).identity,r=t?t.substring(t.lastIndexOf("/")+1):void 0,n=e.body.resource,i=this._childrenObjects[r][n];g.log("Change children: ",this._owner,e,r),i?this._changeObject(i._syncObj,e):g.warn("No children found for: ",n)}},{key:"metadata",get:function(){return this._metadata}},{key:"url",get:function(){return this._url}},{key:"schema",get:function(){return this._schema}},{key:"status",get:function(){return this._status}},{key:"data",get:function(){return this._syncObj.data}},{key:"childrens",get:function(){return this._childrenObjects}}]),e}();t.default=m,e.exports=t.default},function(e,t){!function(){"use strict";if(!Object.observe&&"function"==typeof Proxy){function e(e,t,r,n,i,s){var o,a=this;function u(e,n){if(u.delay=n,!u.pause&&a.changeset.length>0){if(!e){var i=a.changeset.filter(function(e){return!r||r.indexOf(e.type)>=0});i.length>0&&t(i)}a.changeset=[]}}return u.pause=i,u.delay=s,a.get=function(e,t){return"__observer__"===t?a:"unobserve"===t?function(){return Object.unobserve(e),e}:"deliver"===t?u:e[t]},a.target=e,a.changeset=[],a.target.__observerCallbacks__||(Object.defineProperty(e,"__observerCallbacks__",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,"__observers__",{enumerable:!1,configurable:!0,writable:!1,value:[]})),a.target.__observerCallbacks__.push(t),a.target.__observers__.push(this),o=new Proxy(e,a),u(!1,s),o}e.prototype.deliver=function(){return this.get(null,"deliver")},e.prototype.set=function(e,t,r){var n=e[t],i=void 0===n?"add":"update";if(e[t]=r,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(i)>=0)){var s={object:e,name:t,type:i},o=0===this.changeset.length,a=this.deliver();"update"===i&&(s.oldValue=n),this.changeset.push(s),o&&a(!1,"number"==typeof a.delay?a.delay:10)}return!0},e.prototype.deleteProperty=function(e,t){var r=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("delete")>=0){var n={object:e,name:t,type:"delete",oldValue:r},i=0===this.changeset.length,s=this.deliver();this.changeset.push(n),i&&s(!1,"number"==typeof s.delay?s.delay:10)}return!0},e.prototype.defineProperty=function(e,t,r){if(Object.defineProperty(e,t,r),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("reconfigure")>=0){var n={object:e,name:t,type:"reconfigure"},i=0===this.changeset.length,s=this.deliver();this.changeset.push(n),i&&s(!1,"number"==typeof s.delay?s.delay:10)}return!0},e.prototype.setPrototypeOf=function(e,t){var r=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("setPrototype")>=0){var n={object:e,name:"__proto__",type:"setPrototype",oldValue:r},i=0===this.changeset.length,s=this.deliver();this.changeset.push(n),i&&s(!1,"number"==typeof s.delay?s.delay:10)}return!0},e.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("preventExtensions")>=0){var t={object:e,type:"preventExtensions"},r=0===this.changeset.length,n=this.deliver();this.changeset.push(t),r&&n(!1,"number"==typeof n.delay?n.delay:10)}return!0},Object.observe=function(t,r,n,i,s,o){return new e(t,r,n,i,s,o)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(r,n){t===r&&(e.__observerCallbacks__.splice(n,1),delete e.__observers__[n].callback,e.__observers__.splice(n,1))})}},Array.observe=function(e,t,r,n,i,s){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError("First argument to Array.observer is not an Array");r=r||["add","update","delete","splice"];var o=new Proxy(e,{get:function(t,n){return"unobserve"===n?function(e){return e?Object.unobserve(t,e):t.unobserve()}:"splice"===n?function(n,i){if("number"!=typeof n||"number"!=typeof i)throw new TypeError("First two arguments to Array splice are not number, number");var s=this.slice(n,n+i),o=arguments.length>1?arguments.length-2:0,u={object:e,type:"splice",index:n,removed:s,addedCount:o};if(t.splice.apply(t,arguments),r.indexOf("splice")>=0){n=0===a.__observer__.changeset.length;var c=a.__observer__.deliver();a.__observer__.changeset.push(u),n&&c(!1,"number"==typeof c.delay?c.delay:10)}}:"push"===n?function(e){return this.splice(this.length,0,e)}:"pop"===n?function(){return this.splice(this.length-1,1)}:"unshift"===n?function(e){return this.splice(0,0,e)}:"shift"===n?function(){return this.splice(0,1)}:t[n]}}),a=Object.observe(o,function(e){var n=e.filter(function(e){return"length"!==e.name&&"add"!==e.name&&(!r||r.indexOf(e.type)>=0)});n.length>0&&t(n)},r,n,i,s);return a},Array.unobserve=function(e,t){return e.unobserve(t)}}Object.deepObserve=function(e,t,r){var n=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()};function i(e,r){Object.keys(e).forEach(function(i){if(("object"===n(e[i])||"array"===n(e[i]))&&!e[i].hasOwnProperty("__observers__")){var s=r.slice(0);s.push(i),e[i]=Object.deepObserve(e[i],t,s)}})}return i(e,r=r||[]),Object.observe(e,function(e){var n=[];e.forEach(function(e){var t=(r.length>0?r.join(".")+".":"")+e.name;"update"!==e.type&&"add"!==e.type||i(e.object,r),n.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),function e(t,r,i,s,o){s instanceof Object?Object.keys(s).forEach(function(a){if(!i||i[a]!==s[a]){var u=i&&void 0!==i[a]?i[a]:void 0,c=void 0===u?"add":"update",l=o+"."+a;n.push({name:t,object:r,type:c,oldValue:u,newValue:s[a],keypath:l}),e(t,r,u,s[a],l)}}):i instanceof Object&&Object.keys(i).forEach(function(a){var u=null===s?"update":"delete",c=o+"."+a;n.push({name:t,object:r,type:u,oldValue:i[a],newValue:s,keypath:c}),e(t,r,i[a],void 0,c)})}(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(n)})}}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=h(r(18)),i=h(r(25)),s=h(r(3)),o=h(r(5)),a=h(r(33)),u=h(r(34)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=h(r(129)),d=(r(19),h(r(130)));function h(e){return e&&e.__esModule?e:{default:e}}var f=c.getLogger("FileHypertyResource"),p=function(e){function t(e,r){(0,s.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,i.default)(t)).call(this,e,r));return n.metadata.resourceType="file",n}return(0,u.default)(t,e),(0,o.default)(t,[{key:"init",value:function(e){var t=this;if(!e)throw new Error("[FileHypertyResource.constructor] missing mandatory *file* input ");return new n.default(function(r,n){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,f.log("[FileHypertyResource.init] file: ",e),t._isSender)switch(e.type.split("/")[0]){case"image":t._getImagePreview(e).then(function(n){t._metadata.preview=n,t._content=e,r()});break;default:t._content=e,r()}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),r()})}},{key:"_getImagePreview",value:function(e){var t=new FileReader;return new n.default(function(r,n){d.default.resize(e,{width:100,height:100},function(e,n){n?(t.readAsDataURL(e),t.onload=function(e){r(e.target.result)}):(f.warn("[FileHypertyResource._getImagePreview] unable to create image preview from original image "),r(void 0))})})}},{key:"toMessage",value:function(){}},{key:"name",get:function(){return this._metadata.name}},{key:"preview",get:function(){return this._metadata.preview}}]),t}(l.default);t.default=p,e.exports=t.default},function(e,t,r){e.exports={default:r(126),__esModule:!0}},function(e,t,r){r(127);var n=r(0).Object;e.exports=function(e,t){return n.getOwnPropertyDescriptor(e,t)}},function(e,t,r){var n=r(12),i=r(46).f;r(44)("getOwnPropertyDescriptor",function(){return function(e,t){return i(n(e),t)}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(18)),i=a(r(3)),s=a(r(5)),o=a(r(124));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(){(0,i.default)(this,e)}return(0,s.default)(e,[{key:"createHypertyResource",value:function(e,t,r){var n=void 0;switch(t){case"file":n=new o.default(e,r);break;default:throw new Error("[HypertyResourceFactory.createHypertyResource] not supported type: ",t)}return n}},{key:"createHypertyResourceWithContent",value:function(e,t,r,i){var s=void 0;return new n.default(function(n){switch(t){case"file":s=new o.default(e,i);break;default:reject()}s.init(r).then(function(){return s.save()}).then(function(){n(s)})})}}]),e}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(r(18)),i=f(r(25)),s=f(r(3)),o=f(r(5)),a=f(r(33)),u=f(r(100)),c=f(r(34)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),d=r(19),h=f(r(118));function f(e){return e&&e.__esModule?e:{default:e}}var p=l.getLogger("HypertyResource"),v=function(e){function t(e,r){(0,s.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,i.default)(t)).call(this,r)),o=n;return o.arraybufferSizeLimit=5242880,o._isSender=e,o._localStorageURL=o._parentObject._syncher._runtimeUrl+"/storage",n}return(0,c.default)(t,e),(0,o.default)(t,[{key:"save",value:function(){var e=this;return new n.default(function(t,r){var n={from:e._owner,to:e._localStorageURL,type:"create",body:{value:(0,d.deepClone)(e._metadata)}};n.body.value.content=e._content,e._bus.postMessage(n,function(n){p.info("[HypertyResource.save] reply: ",n),e._bus.removeResponseListener(e._owner,n.id),200===n.body.code?(n.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(n.body.value)),t()):r(n.body.code+" "+n.body.desc)},!1)})}},{key:"read",value:function(e){var t=this;return p.info("[HypertyResource.read] ",this),new n.default(function(r,n){if(t.content)r(t);else{var i=t._getBestContentURL(t._metadata.contentURL);p.log("Storage:",i);var s={from:t._owner,to:i.url,type:"read",body:{resource:i.url+"/"+i.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(s.body.p2pRequester=t.metadata.p2pRequester,s.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(s,e).then(function(e){p.info("[HypertyResource] - get locally the resource:",e),r(t)}).catch(function(s){p.warn("[HypertyResource] - get locally the resource fail",s);var o={from:t._owner,to:i.remoteURL,type:"read",body:{resource:i.remoteURL+"/"+i.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(o.body.p2pRequester=t.metadata.p2pRequester,o.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(o,e).then(function(e){p.warn("[HypertyResource] - get remotely the resource",e),r(t)}).catch(function(e){p.warn("[HypertyResource] - get remotely the resource fail",e),n(e.body.code+" "+e.body.desc)})})}})}},{key:"_getBestResource",value:function(e,t){var r=this;return new n.default(function(n,i){var s=setTimeout(function(){return r._bus.removeResponseListener(r._owner,o),e.body.code=408,e.body.desc="Response timeout",i(e)},3e3),o=r._bus.postMessage(e,function(e){p.log("[HypertyResource.read] reply: ",e);var o=e.id;switch(clearTimeout(s),e.body.code){case 200:r._content=e.body.value.content,e.body.value.size<r.arraybufferSizeLimit&&r.save(),r._bus.removeResponseListener(r._owner,o),n(e);break;case 183:t(e.body.value);break;default:r._bus.removeResponseListener(r._owner,o),i(e)}},!1)})}},{key:"delete",value:function(){var e=this;p.info("[HypertyResource.delete]",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:"delete",body:{resources:e.metadata.contentURL}};return new n.default(function(r){e._bus.postMessage(t,function(e){e.body.code<300?r(!0):r(!1)})})}},{key:"_getBestContentURL",value:function(e){var t=e[0],r=t.substr(t.lastIndexOf("/")+1);return{url:this._localStorageURL,resource:r,remoteURL:t.substr(0,t.lastIndexOf("/"))}}},{key:"resourceType",get:function(){return this.metadata.resourceType}},{key:"mimetype",get:function(){return this._metadata.type}},{key:"content",get:function(){return this._content}},{key:"contentURL",get:function(){return this._metadata.contentURL}},{key:"shareable",get:function(){var e=(0,u.default)(t.prototype.__proto__||(0,i.default)(t.prototype),"metadata",this);return e.resourceType=this.resourceType,e}}]),t}(h.default);t.default=v,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s(r(3)),i=s(r(5));function s(e){return e&&e.__esModule?e:{default:e}}var o="undefined"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),a=o&&"undefined"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),u="undefined"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,c=u||"undefined"!=typeof Uint8Array&&"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof atob,l="undefined"!=typeof FileReader||"undefined"!=typeof URL,d=function(){function e(){(0,n.default)(this,e)}return(0,i.default)(e,null,[{key:"resize",value:function(t,r,n){if("function"==typeof r&&(n=r,r={width:640,height:480}),r.width,r.height,!e.isSupported()||!t.type.match(/image.*/))return n(t,!1),!1;if(t.type.match(/image\/gif/))return n(t,!1),!1;var i=document.createElement("img");return i.onload=function(s){var o=i.width,a=i.height,c=!1;if(o>=a&&o>r.width?(a*=r.width/o,o=r.width,c=!0):a>r.height&&(o*=r.height/a,a=r.height,c=!0),c){var l=document.createElement("canvas");if(l.width=o,l.height=a,l.getContext("2d").drawImage(i,0,0,o,a),u)l.toBlob(function(e){n(e,!0)},t.type);else{var d=e._toBlob(l,t.type);n(d,!0)}}else n(t,!1)},e._loadImage(i,t),!0}},{key:"_toBlob",value:function(e,t){var r=e.toDataURL(t).split(","),n=void 0;n=r[0].indexOf("base64")>=0?atob(r[1]):decodeURIComponent(r[1]);for(var i=new ArrayBuffer(n.length),s=new Uint8Array(i),u=0;u<n.length;u+=1)s[u]=n.charCodeAt(u);var c=r[0].split(":")[1].split(";")[0],l=null;if(o)l=new Blob([a?s:i],{type:c});else{var d=new BlobBuilder;d.append(i),l=d.getBlob(c)}return l}},{key:"_loadImage",value:function(e,t,r){if("undefined"==typeof URL){var n=new FileReader;n.onload=function(t){e.src=t.target.result,r&&r()},n.readAsDataURL(t)}else e.src=URL.createObjectURL(t),r&&r()}},{key:"isSupported",value:function(){return"undefined"!=typeof HTMLCanvasElement&&c&&l}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=h(r(18)),i=h(r(78)),s=h(r(3)),o=h(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19),c=h(r(132)),l=h(r(133)),d=h(r(135));function h(e){return e&&e.__esModule?e:{default:e}}var f=a.getLogger("Syncher"),p=function(){function e(t,r,n){(0,s.default)(this,e);var i=this;i._owner=t,i._bus=r,i._subURL=n.runtimeURL+"/sm",i._runtimeUrl=n.runtimeURL,i._p2pHandler=n.p2pHandler,i._p2pRequester=n.p2pRequester,i._reporters={},i._observers={},i._provisionals={},r.addListener(t,function(e){if(e.from!==t)switch(f.info("[Syncher] Syncher-RCV: ",e,i),e.type){case"forward":i._onForward(e);break;case"create":i._onRemoteCreate(e);break;case"delete":i._onRemoteDelete(e);break;case"execute":i._onExecute(e)}})}return(0,o.default)(e,[{key:"create",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"no name",a=arguments[6],c=arguments[7];if(!e)throw Error("[Syncher - Create] - You need specify the data object schema");if(!t)throw Error("[Syncher - Create] -The observers should be defined");c=c||{};var l=(0,i.default)({},c);return l.p2p=s,l.store=n,l.schema=e,l.authorise=t,l.p2pHandler=this._p2pHandler,l.p2pRequester=this._p2pRequester,l.data=r?(0,u.deepClone)(r):{},l.name=0===o.length?"no name":o,l.reporter=c.hasOwnProperty("reporter")&&"boolean"!=typeof c.reporter?c.reporter:this._owner,l.resume=!1,c?(l.mutual=!c.hasOwnProperty("mutual")||c.mutual,l.name=c.hasOwnProperty("name")?c.name:l.name):l.mutual=!0,c.hasOwnProperty("reuseURL")&&(l.resource=c.reuseURL),a&&(l.identity=a),f.log("[syncher - create] - create Reporter - createInput: ",l),this._create(l)}},{key:"resumeReporters",value:function(e){return f.log("[syncher - create] - resume Reporter - criteria: ",e),(0,i.default)(e,{resume:!0}),this._resumeCreate(e)}},{key:"subscribe",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],o=arguments[5],a={};return a.p2p=n,a.store=r,a.schema=e,a.resource=t,o&&(a.identity=o),a.mutual=s,f.log("[syncher - subscribe] - subscribe criteria: ",a),(0,i.default)(a,{resume:!1}),this._subscribe(a)}},{key:"resumeObservers",value:function(e){var t=e||{};return(0,i.default)(t,{resume:!0}),this._resumeSubscribe(t)}},{key:"read",value:function(e){var t=this,r={type:"read",from:t._owner,to:e};return new n.default(function(e,n){t._bus.postMessage(r,function(s){f.log("[Syncher.read] reply: ",s);var o={},a={},u=0;if(s.body.code<300)if(s.body.value.hasOwnProperty("responses"))if(0===u)a=s.body.value,++u;else{delete s.body.value.responses;var c=void 0;for(c in s.body.value)o.hasOwnProperty(c)||(o[c]={}),(0,i.default)(o[c],s.body.value[c]);++u===a.responses&&(a.childrenObjects=o,delete a.responses,t._bus.removeResponseListener(r.from,s.id),e(a))}else t._bus.removeResponseListener(r.from,s.id),e(s.body.value);else n(s.body.desc)},!1)})}},{key:"onNotification",value:function(e){this._onNotificationHandler=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"_create",value:function(e){var t=this;return new n.default(function(r,n){var s=(0,i.default)({},e),o=e.resume;s.created=(new Date).toISOString(),s.runtime=t._runtimeUrl;var a=(0,u.deepClone)(s);delete a.p2p,delete a.store,delete a.observers,delete a.identity;var l={type:"create",from:t._owner,to:t._subURL,body:{resume:o,value:a}};l.body.schema=s.schema,s.p2p&&(l.body.p2p=s.p2p),s.store&&(l.body.store=s.store),s.identity&&(l.body.identity=s.identity),f.log("[syncher._create]: ",s,l),t._bus.postMessage(l,function(i){if(f.log("[syncher - create] - create-response: ",i),200===i.body.code){s.url=i.body.resource,s.status="live",s.syncher=t,s.childrens=i.body.childrenResources;var o=t._reporters[s.url];o||(o=new c.default(s),t._reporters[s.url]=o),o.inviteObservers(e.authorise,e.p2p),r(o)}else n(i.body.desc)})})}},{key:"_resumeCreate",value:function(e){var t=this,r=this;return new n.default(function(n,i){var s=e.resume,o={type:"create",from:r._owner,to:r._subURL,body:{resume:s}};f.log("[syncher - create]: ",e,o),e&&(o.body.value=e,e.hasOwnProperty("reporter")?o.body.value.reporter=e.reporter:o.body.value.reporter=r._owner),e.p2p&&(o.body.p2p=e.p2p),e.store&&(o.body.store=e.store),e.observers&&(o.body.authorise=e.observers),e.identity&&(o.body.identity=e.identity),f.log("[syncher._resumeCreate] - resume message: ",o),r._bus.postMessage(o,function(e){if(f.log("[syncher._resumeCreate] - create-resumed-response: ",e),200===e.body.code){var s=e.body.value;for(var o in s){var a=s[o];a.data=(0,u.deepClone)(a.data)||{},a.childrenObjects&&(a.childrenObjects=(0,u.deepClone)(a.childrenObjects)),a.mutual=!1,a.resume=!0,a.status="live",a.syncher=r,f.log("[syncher._resumeCreate] - create-resumed-dataObjectReporter",a);var l=new c.default(a);a.childrenObjects&&l.resumeChildrens(a.childrenObjects),r._reporters[a.url]=l}n(r._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?n({}):i(e.body.desc)})})}},{key:"_subscribe",value:function(e){var t=this;return new n.default(function(r,n){var i={type:"subscribe",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(i.body.p2p=e.p2p),e.hasOwnProperty("store")&&(i.body.store=e.store),e.hasOwnProperty("schema")&&(i.body.schema=e.schema),e.hasOwnProperty("identity")&&(i.body.identity=e.identity),e.hasOwnProperty("resource")&&(i.body.resource=e.resource)),i.body.resume=e.resume,e.hasOwnProperty("mutual")&&(i.body.mutual=e.mutual),f.log("[syncher_subscribe] - subscribe message: ",e,i),t._bus.postMessage(i,function(i){f.log("[syncher] - subscribe-response: ",i);var s=i.body.resource,o=t._provisionals[s];if(delete t._provisionals[s],o&&o._releaseListeners(),i.body.code<200)f.log("[syncher] - new DataProvisional: ",i.body.childrenResources,s),o=new d.default(t._owner,s,t._bus,i.body.childrenResources),t._provisionals[s]=o;else if(200===i.body.code){f.log("[syncher] - new Data Object Observer: ",i,t._provisionals);var a=i.body.value;a.syncher=t,a.p2p=e.p2p,a.store=e.store,a.identity=e.identity,a.resume=!1,a.mutual=e.mutual;var u=t._observers[s];u?u.sync():(u=new l.default(a),t._observers[s]=u),f.log("[syncher] - new Data Object Observer already exist: ",u),r(u),o&&o.apply(u)}else n(i.body.desc)})})}},{key:"_resumeSubscribe",value:function(e){var t=this,r=this;return new n.default(function(n,i){var s={type:"subscribe",from:r._owner,to:r._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(s.body.p2p=e.p2p),e.hasOwnProperty("store")&&(s.body.store=e.store),e.hasOwnProperty("schema")&&(s.body.schema=e.schema),e.hasOwnProperty("identity")&&(s.body.identity=e.identity),e.hasOwnProperty("resource")&&(s.body.resource=e.url)),s.body.resume=e.resume;var o=e.mutual;e.hasOwnProperty("mutual")&&(s.body.mutual=o),f.log("[syncher] - subscribe message: ",e,s),r._bus.postMessage(s,function(e){f.log("[syncher] - subscribe-resumed-response: ",e);var s=e.body.resource,o=r._provisionals[s];if(delete r._provisionals[s],o&&o._releaseListeners(),e.body.code<200)f.log("[syncher] - resume new DataProvisional: ",e,s),o=new d.default(r._owner,s,r._bus,e.body.childrenResources),r._provisionals[s]=o;else if(200===e.body.code){var a=e.body.value;for(var c in a){var h=a[c];f.log("[syncher] - Resume Object Observer: ",e,h,r._provisionals),h.childrenObjects&&(h.childrenObjects=(0,u.deepClone)(h.childrenObjects)),h.data=(0,u.deepClone)(h.data)||{},h.resume=!0,h.syncher=r,f.log("[syncher._resumeSubscribe] - create new dataObject: ",h);var p=new l.default(h);h.childrenObjects&&p.resumeChildrens(h.childrenObjects),f.log("[syncher._resumeSubscribe] - new dataObject",p),r._observers[p.url]=p,r._provisionals[p.url]&&r._provisionals[p.url].apply(p)}n(r._observers),t._onObserversResume&&t._onObserversResume(r._observers)}else 404===e.body.code?n({}):i(e.body.desc)})})}},{key:"_onForward",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:"_onRemoteCreate",value:function(e){var t=this,r=e.from.slice(0,-13),n=(0,u.divideURL)(r).domain,i={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})}};t._onNotificationHandler&&(f.info("[Syncher] NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}},{key:"_onRemoteDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],i={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(i),delete t._observers[r],n){var s={type:e.type,url:r,identity:e.body.identity,ack:function(r){var i=200;r&&(i=r),200===i&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:i,source:t._owner}})}};t._onNotificationHandler&&(f.log("NOTIFICATION-EVENT: ",s),t._onNotificationHandler(s))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:"_onExecute",value:function(e){var t=this,r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+"/registry/"||e.from===t._runtimeUrl+"/registry")&&e.body&&e.body.method&&"close"===e.body.method&&t._onClose){var n={type:"close",ack:function(e){e&&(r.body.code=e),t._bus.postMessage(r)}};f.info("[Syncher] Close-EVENT: ",n),t._onClose(n)}else t._bus.postMessage(r)}},{key:"onReportersResume",value:function(e){this._onReportersResume=e}},{key:"onObserversResume",value:function(e){this._onObserversResume=e}},{key:"owner",get:function(){return this._owner}},{key:"reporters",get:function(){return this._reporters}},{key:"observers",get:function(){return this._observers}}]),e}();t.default=p,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=v(r(42)),i=v(r(58)),s=v(r(18)),o=v(r(25)),a=v(r(3)),u=v(r(5)),c=v(r(33)),l=v(r(100)),d=v(r(34)),h=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),f=v(r(122)),p=r(19);function v(e){return e&&e.__esModule?e:{default:e}}var g=h.getLogger("DataObjectReporter"),m=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e)),n=r;return n._subscriptions={},n._syncObj.observe(function(e){g.log("[Syncher.DataObjectReporter] "+n.url+" publish change: ",e),n._onChange(e)}),n._allocateListeners(),n.invitations=[],n._childrenSizeThreshold=5e4,r}return(0,d.default)(t,e),(0,u.default)(t,[{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(g.log("[Syncher.DataObjectReporter] listener "+e._url+" Received: ",t),t.type){case"response":e._onResponse(t);break;case"read":e._onRead(t);break;case"execute":e._onExecute(t);break;case"create":e._onChildCreate(t)}})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"_releaseListeners",this).call(this),this._objectListener.remove()}},{key:"inviteObservers",value:function(e,t){var r=this,n=e;n.length>0&&(g.log("[Syncher.DataObjectReporter] InviteObservers ",n,r._metadata),n.forEach(function(e){var n=new s.default(function(n,i){var s={type:"create",from:r._syncher._owner,to:r._syncher._subURL,body:{resume:!1,resource:r._url,schema:r._schema,value:r._metadata,authorise:[e]}};t&&(s.body.p2p=t),r.data.mutual||(s.body.mutual=r.data.mutual),r._bus.postMessage(s,function(t){g.log("[Syncher.DataObjectReporter] Invitation reply ",t);var r={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:"Unknown"};r.code<300?n(r):r.code>=300&&i(r)})});r.invitations.push(n)}))}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(t){g.log(t);var r={type:"delete",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(r,function(t){g.log("DataObjectReporter-DELETE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:"onSubscription",value:function(e){this._onSubscriptionHandler=e}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"onRead",value:function(e){this._onReadHandler=e}},{key:"onExecute",value:function(e){this._onExecuteHandler=e}},{key:"_onForward",value:function(e){switch(g.log("DataObjectReporter-RCV: ",e),e.body.type){case"subscribe":this._onSubscribe(e);break;case"unsubscribe":this._onUnSubscribe(e)}}},{key:"_onSubscribe",value:function(e){var t=this,r=e.body.from,n=(0,p.divideURL)(r),i=n.domain,s=!0;e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(s=!1),g.log("[DataObjectReporter._onSubscribe]",e,i,n);var o={type:e.body.type,url:r,domain:i,identity:e.body.identity,nutual:s,accept:function(){var n={url:r,status:"live"};t._subscriptions[r]=n,t.metadata.subscriptions&&t.metadata.subscriptions.push(n.url);var i=(0,p.deepClone)(t._metadata);i.data=(0,p.deepClone)(t.data),i.version=t._version;var s={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:i}};return e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(s.body.mutual=e.body.mutual,t.data.mutual=!1),t._bus.postMessage(s),n},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:403,desc:r}})}};t._onSubscriptionHandler&&(g.log("SUBSCRIPTION-EVENT: ",o),t._onSubscriptionHandler(o))}},{key:"_onUnSubscribe",value:function(e){var t=e.body.from,r=(0,p.divideURL)(t),n=r.domain;g.log("[DataObjectReporter._onUnSubscribe]",e,n,r),delete this._subscriptions[t],delete this.invitations[t];var i={type:e.body.type,url:t,domain:n,identity:e.body.identity};this._onSubscriptionHandler&&(g.log("UN-SUBSCRIPTION-EVENT: ",i),this._onSubscriptionHandler(i))}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.from,code:e.body.code};this._onResponseHandler&&(g.log("RESPONSE-EVENT: ",t),this._onResponseHandler(t))}},{key:"_onRead",value:function(e){var t=this,r=(0,i.default)(t.childrensJSON).length>t._childrenSizeThreshold,s={type:e.type,url:e.from,accept:function(){r?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}},o=[];t.metadata.subscriptions?o=t.metadata.subscriptions:t._subscriptions&&(o=(0,n.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=o.indexOf(e.from)?r?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(g.log("READ-EVENT: ",s),t._onReadHandler(s))}},{key:"_syncReply",value:function(e){var t=(0,p.deepClone)(this.metadata);t.data=(0,p.deepClone)(this.data),t.childrenObjects=(0,p.deepClone)(this.childrensJSON),t.version=this._version;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:t}};this._bus.postMessage(r)}},{key:"_syncReplyForLargeData",value:function(e){var t=this,r=(0,p.deepClone)(t.metadata);r.data=(0,p.deepClone)(t.data),r.version=t._version,delete r.childrenObjects;var n=void 0,s=[],o={};for(n in t._childrenObjects){var a=void 0;for(a in o[n]={},t._childrenObjects[n])(0,i.default)(o).length>t._childrenSizeThreshold&&(s.push(o),(o={})[n]={}),o[n][a]={},o[n][a].value=t._childrenObjects[n][a].metadata,o[n][a].identity=t._childrenObjects[n][a].identity}s.push(o),r.responses=s.length+1;var u={id:e.id,type:"response",from:e.to,to:e.from,body:{code:100,value:r}};t._bus.postMessage(u),s.forEach(function(e){var n=(0,p.deepClone)(u);n.body.value=e,n.body.value.responses=r.responses,setTimeout(function(){t._bus.postMessage(n)},50)})}},{key:"_onExecute",value:function(e){var t=this;if(!e.body.method)throw e;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}},n={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(r)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}};t._onExecuteHandler&&(g.log("[DataObjectReporter] EXECUTE-EVENT: ",n),t._onExecuteHandler(n))}},{key:"subscriptions",get:function(){return this._subscriptions}},{key:"childrensJSON",get:function(){var e={},t=void 0;for(t in this._childrenObjects){var r=void 0;for(r in e[t]={},this._childrenObjects[t])e[t][r]={},e[t][r].value=this._childrenObjects[t][r].metadata,e[t][r].identity=this._childrenObjects[t][r].identity}return e}}]),t}(f.default);t.default=m,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=v(r(42)),i=v(r(78)),s=v(r(18)),o=v(r(25)),a=v(r(3)),u=v(r(5)),c=v(r(33)),l=v(r(100)),d=v(r(34)),h=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),f=r(19),p=v(r(122));function v(e){return e&&e.__esModule?e:{default:e}}var g=h.getLogger("DataObjectObserver"),m="start",y="exact",_=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e)),n=r;return n._version=e.version,n._filters={},n._syncObj.observe(function(e){n._onFilter(e)}),n._allocateListeners(),r}return(0,d.default)(t,e),(0,u.default)(t,[{key:"sync",value:function(){var e=this;return g.info("[DataObjectObserver_sync] synchronising "),new s.default(function(t,r){e._syncher.read(e._metadata.url).then(function(r){g.info("[DataObjectObserver_sync] value to sync: ",r),(0,i.default)(e.data,(0,f.deepClone)(r.data)),e._version=r.version,e._metadata.lastModified=r.lastModified,r.childrenObjects?(e.resumeChildrens(r.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){g.info("[DataObjectObserver_sync] sync failed: ",e),t(!1)})})}},{key:"_storeChildrens",value:function(){var e=this,t={};(0,n.default)(e._childrenObjects).forEach(function(r){var i=e._childrenObjects[r];t[r]={},(0,n.default)(i).forEach(function(e){t[r][e]={},t[r][e].value=i[e].metadata,t[r][e].identity=i[e].identity})});var r={from:e._owner,to:e._syncher._subURL,type:"create",body:{resource:e._url,attribute:"childrenObjects",value:t}};e._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+"/changes",function(t){"update"===t.type&&(g.log("DataObjectObserver-"+e._url+"-RCV: ",t),e._changeObject(e._syncObj,t))})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"_releaseListeners",this).call(this),this._changeListener.remove()}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:"unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){g.log("DataObjectObserver-UNSUBSCRIBE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:"onChange",value:function(e,t){var r=e,n={type:y,callback:t},i=e.indexOf("*");i===e.length-1&&(0===i?n.type="any":(n.type=m,r=e.substr(0,e.length-1))),this._filters[r]=n}},{key:"_onFilter",value:function(e){var t=this;(0,n.default)(t._filters).forEach(function(r){var n=t._filters[r];"any"===n.type?n.callback(e):n.type===m?0===e.field.indexOf(r)&&n.callback(e):n.type===y&&e.field===r&&n.callback(e)})}},{key:"onDisconnected",value:function(e){var t=this;return new s.default(function(r,n){t._subscribeRegistration().then(function(){t._onDisconnected=e,r()}).catch(function(e){return n(e)})})}},{key:"_subscribeRegistration",value:function(){var e=this,t={type:"subscribe",from:this._owner,to:this._syncher._runtimeUrl+"/subscriptions",body:{resources:[this._url+"/registration"]}};return new s.default(function(r,n){e._bus.postMessage(t,function(t){g.log("[DataObjectObserver._subscribeRegistration] "+e._url+" rcved reply ",t),200===t.body.code?(e._generateListener(e._url+"/registration"),r()):(g.error("Error subscribing registration status for ",e._url),n("Error subscribing registration status for "+e._url))})})}},{key:"_generateListener",value:function(e){var t=this;t._bus.addListener(e,function(e){g.log("[DataObjectObserver.registrationNotification] "+t._url+": ",e),e.body.value&&"disconnected"===e.body.value&&t._onDisconnected&&(g.log("[DataObjectObserver] "+t._url+": was disconnected ",e),t._onDisconnected())})}},{key:"execute",value:function(e,t){var r=this,n=this;return new s.default(function(i,s){var o={type:"execute",from:r._owner,to:n._url,body:{method:e,params:t}};n._bus.postMessage(o,function(t){g.log("[DataObjectObserver.execute] "+n._url+" rcved reply ",t),200===t.body.code?i():(g.warn("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"),s("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"))})})}}]),t}(p.default);t.default=_,e.exports=t.default},,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s(r(3)),i=s(r(5));function s(e){return e&&e.__esModule?e:{default:e}}var o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)).getLogger("DataProvisional"),a=function(){function e(t,r,i,s){(0,n.default)(this,e),this._owner=t,this._url=r,this._bus=i,this._children=s,this._changes=[],this._allocateListeners()}return(0,i.default)(e,[{key:"_allocateListeners",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){o.log("DataProvisional-"+e._url+"-RCV: ",t),e._changes.push(t)})}},{key:"_releaseListeners",value:function(){this._listener.remove()}},{key:"apply",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:"children",get:function(){return this._children}}]),e}();t.default=a,e.exports=t.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NotificationHandler=t.DataObjectObserver=t.DataObjectReporter=t.Syncher=void 0;var n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),i=u(r(131)),s=u(r(132)),o=u(r(133)),a=u(r(197));function u(e){return e&&e.__esModule?e:{default:e}}var c=n.getLogger("Syncher"),l=n.getLogger("DataObject"),d=n.getLogger("DataObjectChild"),h=n.getLogger("DataObjectObserver"),f=n.getLogger("DataObjectReporter"),p=n.getLogger("DataProvisional");c.setLevel(0),l.setLevel(0),d.setLevel(0),h.setLevel(0),f.setLevel(0),p.setLevel(0),t.Syncher=i.default,t.DataObjectReporter=s.default,t.DataObjectObserver=o.default,t.NotificationHandler=a.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=o(r(3)),i=o(r(5)),s=r(19);function o(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){if((0,n.default)(this,e),!t)throw Error("[NotificationHandler Constructor] bus input is mandatory");this._bus=t,this._onNotificationHandler={}}return(0,i.default)(e,[{key:"onNotification",value:function(e,t){this._onNotificationHandler[e]=t}},{key:"onCreate",value:function(e){var t=this,r=e.body.hasOwnProperty("resource")?e.body.resource:e.from.slice(0,-13),n=(0,s.divideURL)(r).domain,i=r.split("://")[0],o=function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:400,desc:"Bad Request: "+r}})};e.body.hasOwnProperty("source")||o("Missing source"),e.body.hasOwnProperty("schema")||o("Missing schema"),e.body.hasOwnProperty("value")||o("Missing value"),e.body.hasOwnProperty("identity")||o("Missing identity");var a={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,to:e.to,via:e.body.via,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})},error:function(e){o(e)}};t._onNotificationHandler[i]&&(console.info("[NotificationHandler] NOTIFICATION-EVENT: ",a),t._onNotificationHandler[i](a))}},{key:"onDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],i={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(i),delete t._observers[r],n){var s={type:e.type,url:r,identity:e.body.identity,ack:function(r){var i=200;r&&(i=r),200===i&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:i,source:t._owner}})}};t._onNotificationHandler&&(log.log("NOTIFICATION-EVENT: ",s),t._onNotificationHandler(s))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}}]),e}();t.default=a,e.exports=t.default}])})},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=160)}([function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t,r){var n=r(36)("wks"),i=r(23),s=r(1).Symbol,o="function"==typeof s;(e.exports=function(e){return n[e]||(n[e]=o&&s[e]||(o?s:i)("Symbol."+e))}).store=n},function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),(0,n.default)(e,i.key,i)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){var n=r(1),i=r(0),s=r(14),o=r(11),a=r(10),u=function(e,t,r){var c,l,d,h=e&u.F,f=e&u.G,p=e&u.S,v=e&u.P,g=e&u.B,m=e&u.W,y=f?i:i[t]||(i[t]={}),_=y.prototype,T=f?n:p?n[t]:(n[t]||{}).prototype;for(c in f&&(r=t),r)(l=!h&&T&&void 0!==T[c])&&a(y,c)||(d=l?T[c]:r[c],y[c]=f&&"function"!=typeof T[c]?r[c]:g&&l?s(d,n):m&&T[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):v&&"function"==typeof d?s(Function.call,d):d,v&&((y.virtual||(y.virtual={}))[c]=d,e&u.R&&_&&!_[c]&&o(_,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){var n=r(9),i=r(39),s=r(27),o=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=s(t,!0),n(r),i)try{return o(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),i=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,i(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(55),i=r(30);e.exports=function(e){return n(i(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,i){return e.call(t,r,n,i)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,r){e.exports={default:r(102),__esModule:!0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s(r(58)),i=s(r(42));function s(e){return e&&e.__esModule?e:{default:e}}function o(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$3,$4").split(",")}var r=t(e);if(r[0]===e&&!r[0].includes("@")){var n={type:"",domain:e,identity:""};return console.warn("[DivideURL] DivideURL don't support url without scheme. Please review your url address",e),n}return r[0]===e&&r[0].includes("@")&&(r=t((r[0]===e?"smtp":r[0])+"://"+r[0])),r[1].includes("@")&&(r[2]=r[0]+"://"+r[1],r[1]=r[1].substr(r[1].indexOf("@")+1)),{type:r[0],domain:r[1],identity:r[2]}}function a(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}t.divideURL=o,t.divideEmail=function(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,i.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,n.default)(e))},t.getUserURLFromEmail=a,t.getUserEmailFromURL=function(e){var t=o(e);return t.identity.replace("/","")+"@"+t.domain},t.convertToUserURL=function(e){if("user://"===e.substring(0,7)){var t=o(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return a(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(".");else{for(var i=void 0;null!==(i=t.exec(e));)i.index===t.lastIndex&&t.lastIndex++,i.forEach(function(e,t){0===t&&r.push(e)});var s=void 0;r.forEach(function(t){s=e.replace(t,"*+*"),n=s.split(".").map(function(e){return"*+*"===e?t:e})})}return console.log("[ServiceFramework.Utils.checkAttribute]",n),n},t.parseAttributes=function(e){if(e.includes("://")){var t=e.split(/([0-9a-zA-Z][-\w]*):\/\//g)[0],r=t.split("."),n=e.replace(t,"");if(e.includes("identity")){var i=n.split("identity.");console.log("array2 "+i),n=i[0].slice(".",-1),i=i[1].split("."),r.push(n,"identity"),r=r.concat(i)}else r.push(n);return r.filter(Boolean)}return e.split(".")}},function(e,t,r){var n=r(45),i=r(37);e.exports=Object.keys||function(e){return n(e,i)}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){var n,i;!function(s,o){"use strict";void 0===(i="function"==typeof(n=function(){var e=function(){},t="undefined",r=["trace","debug","info","warn","error"];function n(e,t){var r=e[t];if("function"==typeof r.bind)return r.bind(e);try{return Function.prototype.bind.call(r,e)}catch(t){return function(){return Function.prototype.apply.apply(r,[e,arguments])}}}function i(t,n){for(var i=0;i<r.length;i++){var s=r[i];this[s]=i<t?e:this.methodFactory(s,t,n)}this.log=this.debug}function s(r,s,o){return function(r){return"debug"===r&&(r="log"),typeof console!==t&&(void 0!==console[r]?n(console,r):void 0!==console.log?n(console,"log"):e)}(r)||function(e,r,n){return function(){typeof console!==t&&(i.call(this,r,n),this[e].apply(this,arguments))}}.apply(this,arguments)}function o(e,n,o){var a,u=this,c="loglevel";function l(){var e;if(typeof window!==t){try{e=window.localStorage[c]}catch(e){}if(typeof e===t)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(c)+"=");-1!==n&&(e=/^([^;]+)/.exec(r.slice(n))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}e&&(c+=":"+e),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=o||s,u.getLevel=function(){return a},u.setLevel=function(n,s){if("string"==typeof n&&void 0!==u.levels[n.toUpperCase()]&&(n=u.levels[n.toUpperCase()]),!("number"==typeof n&&n>=0&&n<=u.levels.SILENT))throw"log.setLevel() called with invalid level: "+n;if(a=n,!1!==s&&function(e){var n=(r[e]||"silent").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[c]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(c)+"="+n+";"}catch(e){}}}(n),i.call(u,n,e),typeof console===t&&n<u.levels.SILENT)return"No console available for logging"},u.setDefaultLevel=function(e){l()||u.setLevel(e,!1)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)};var d=l();null==d&&(d=null==n?"WARN":n),u.setLevel(d,!1)}var a=new o,u={};a.getLogger=function(e){if("string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=u[e];return t||(t=u[e]=new o(e,a.getLevel(),a.methodFactory)),t};var c=typeof window!==t?window.log:void 0;return a.noConflict=function(){return typeof window!==t&&window.log===a&&(window.log=c),a},a.getLoggers=function(){return u},a})?n.call(t,r,t,e):n)||(e.exports=i)}()},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,r){e.exports={default:r(91),__esModule:!0}},function(e,t,r){var n=r(8).f,i=r(10),s=r(2)("toStringTag");e.exports=function(e,t,r){e&&!i(e=r?e:e.prototype,s)&&n(e,s,{configurable:!0,value:t})}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,i;if(t&&"function"==typeof(r=e.toString)&&!n(i=r.call(e)))return i;if("function"==typeof(r=e.valueOf)&&!n(i=r.call(e)))return i;if(!t&&"function"==typeof(r=e.toString)&&!n(i=r.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},function(e,t,r){var n=r(7),i=r(1).document,s=n(i)&&n(i.createElement);e.exports=function(e){return s?i.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(47));t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,n.default)(t))&&"function"!=typeof t?e:t}},function(e,t,r){"use strict";t.__esModule=!0;var n=o(r(93)),i=o(r(97)),s=o(r(47));function o(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,s.default)(t)));e.prototype=(0,i.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(n.default?(0,n.default)(e,t):e.__proto__=t)}},function(e,t,r){var n=r(36)("keys"),i=r(23);e.exports=function(e){return n[e]||(n[e]=i(e))}},function(e,t,r){var n=r(0),i=r(1),s=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(9),i=r(72),s=r(37),o=r(35)("IE_PROTO"),a=function(){},u=function(){var e,t=r(28)("iframe"),n=s.length;for(t.style.display="none",r(56).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[s[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(a.prototype=n(e),r=new a,a.prototype=null,r[o]=e):r=u(),void 0===t?r:i(r,t)}},function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},function(e,t,r){t.f=r(2)},function(e,t,r){var n=r(1),i=r(0),s=r(15),o=r(40),a=r(8).f;e.exports=function(e){var t=i.Symbol||(i.Symbol=s?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:o.f(e)})}},function(e,t,r){e.exports={default:r(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(6),i=r(0),s=r(13);e.exports=function(e,t){var r=(i.Object||{})[e]||Object[e],o={};o[e]=t(r),n(n.S+n.F*s(function(){r(1)}),"Object",o)}},function(e,t,r){var n=r(10),i=r(12),s=r(64)(!1),o=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=i(e),u=0,c=[];for(r in a)r!=o&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~s(c,r)||c.push(r));return c}},function(e,t,r){var n=r(29),i=r(16),s=r(12),o=r(27),a=r(10),u=r(39),c=Object.getOwnPropertyDescriptor;t.f=r(4)?c:function(e,t){if(e=s(e),t=o(t,!0),u)try{return c(e,t)}catch(e){}if(a(e,t))return i(!n.f.call(e,t),e[t])}},function(e,t,r){"use strict";t.__esModule=!0;var n=o(r(79)),i=o(r(81)),s="function"==typeof i.default&&"symbol"==typeof n.default?function(e){return typeof e}:function(e){return e&&"function"==typeof i.default&&e.constructor===i.default&&e!==i.default.prototype?"symbol":typeof e};function o(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof i.default&&"symbol"===s(n.default)?function(e){return void 0===e?"undefined":s(e)}:function(e){return e&&"function"==typeof i.default&&e.constructor===i.default&&e!==i.default.prototype?"symbol":void 0===e?"undefined":s(e)}},function(e,t,r){"use strict";var n=r(15),i=r(6),s=r(50),o=r(11),a=r(17),u=r(71),c=r(26),l=r(53),d=r(2)("iterator"),h=!([].keys&&"next"in[].keys()),f=function(){return this};e.exports=function(e,t,r,p,v,g,m){u(r,t,p);var y,_,T,b=function(e){if(!h&&e in C)return C[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},S=t+" Iterator",R="values"==v,E=!1,C=e.prototype,A=C[d]||C["@@iterator"]||v&&C[v],O=A||b(v),w=v?R?b("entries"):O:void 0,I="Array"==t&&C.entries||A;if(I&&(T=l(I.call(new e)))!==Object.prototype&&T.next&&(c(T,S,!0),n||"function"==typeof T[d]||o(T,d,f)),R&&A&&"values"!==A.name&&(E=!0,O=function(){return A.call(this)}),n&&!m||!h&&!E&&C[d]||o(C,d,O),a[t]=O,a[S]=f,v)if(y={values:R?O:b("values"),keys:g?O:b("keys"),entries:w},m)for(_ in y)_ in C||s(C,_,y[_]);else i(i.P+i.F*(h||E),t,y);return y}},function(e,t,r){var n=r(31),i=Math.min;e.exports=function(e){return e>0?i(n(e),9007199254740991):0}},function(e,t,r){e.exports=r(11)},function(e,t,r){"use strict";var n=r(24);e.exports.f=function(e){return new function(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}(e)}},function(e,t,r){"use strict";var n=r(70)(!0);r(48)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){var n=r(10),i=r(32),s=r(35)("IE_PROTO"),o=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=i(e),n(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?o:null}},function(e,t,r){r(73);for(var n=r(1),i=r(11),s=r(17),o=r(2)("toStringTag"),a="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<a.length;u++){var c=a[u],l=n[c],d=l&&l.prototype;d&&!d[o]&&i(d,o,c),s[c]=s.Array}},function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(45),i=r(37).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,i)}},function(e,t,r){e.exports={default:r(76),__esModule:!0}},function(e,t,r){e.exports={default:r(61),__esModule:!0}},function(e,t){},function(e,t,r){r(62);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(6);n(n.S+n.F*!r(4),"Object",{defineProperty:r(8).f})},function(e,t,r){var n=r(21),i=r(2)("toStringTag"),s="Arguments"==n(function(){return arguments}());e.exports=function(e){var t,r,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?r:s?n(t):"Object"==(o=n(t))&&"function"==typeof t.callee?"Arguments":o}},function(e,t,r){var n=r(12),i=r(49),s=r(65);e.exports=function(e){return function(t,r,o){var a,u=n(t),c=i(u.length),l=s(o,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(31),i=Math.max,s=Math.min;e.exports=function(e,t){return(e=n(e))<0?i(e+t,0):s(e,t)}},function(e,t,r){var n=r(9),i=r(24),s=r(2)("species");e.exports=function(e,t){var r,o=n(e).constructor;return void 0===o||void 0==(r=n(o)[s])?t:i(r)}},function(e,t,r){var n,i,s,o=r(14),a=r(108),u=r(56),c=r(28),l=r(1),d=l.process,h=l.setImmediate,f=l.clearImmediate,p=l.MessageChannel,v=l.Dispatch,g=0,m={},y=function(){var e=+this;if(m.hasOwnProperty(e)){var t=m[e];delete m[e],t()}},_=function(e){y.call(e.data)};h&&f||(h=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return m[++g]=function(){a("function"==typeof e?e:Function(e),t)},n(g),g},f=function(e){delete m[e]},"process"==r(21)(d)?n=function(e){d.nextTick(o(y,e,1))}:v&&v.now?n=function(e){v.now(o(y,e,1))}:p?(s=(i=new p).port2,i.port1.onmessage=_,n=o(s.postMessage,s,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+"","*")},l.addEventListener("message",_,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),y.call(e)}}:function(e){setTimeout(o(y,e,1),0)}),e.exports={set:h,clear:f}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(9),i=r(7),s=r(51);e.exports=function(e,t){if(n(e),i(t)&&t.constructor===e)return t;var r=s.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(31),i=r(30);e.exports=function(e){return function(t,r){var s,o,a=String(i(t)),u=n(r),c=a.length;return u<0||u>=c?e?"":void 0:(s=a.charCodeAt(u))<55296||s>56319||u+1===c||(o=a.charCodeAt(u+1))<56320||o>57343?e?a.charAt(u):s:e?a.slice(u,u+2):o-56320+(s-55296<<10)+65536}}},function(e,t,r){"use strict";var n=r(38),i=r(16),s=r(26),o={};r(11)(o,r(2)("iterator"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(o,{next:i(1,r)}),s(e,t+" Iterator")}},function(e,t,r){var n=r(8),i=r(9),s=r(20);e.exports=r(4)?Object.defineProperties:function(e,t){i(e);for(var r,o=s(t),a=o.length,u=0;a>u;)n.f(e,r=o[u++],t[r]);return e}},function(e,t,r){"use strict";var n=r(74),i=r(75),s=r(17),o=r(12);e.exports=r(48)(Array,"Array",function(e,t){this._t=o(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,i(1)):i(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])},"values"),s.Arguments=s.Array,n("keys"),n("values"),n("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){var n=r(0),i=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return i.stringify.apply(i,arguments)}},function(e,t,r){var n=r(23)("meta"),i=r(7),s=r(10),o=r(8).f,a=0,u=Object.isExtensible||function(){return!0},c=!r(13)(function(){return u(Object.preventExtensions({}))}),l=function(e){o(e,n,{value:{i:"O"+ ++a,w:{}}})},d=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!i(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!s(e,n)){if(!u(e))return"F";if(!t)return"E";l(e)}return e[n].i},getWeak:function(e,t){if(!s(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},onFreeze:function(e){return c&&d.NEED&&u(e)&&!s(e,n)&&l(e),e}}},,function(e,t,r){e.exports={default:r(80),__esModule:!0}},function(e,t,r){r(52),r(54),e.exports=r(40).f("iterator")},function(e,t,r){e.exports={default:r(82),__esModule:!0}},function(e,t,r){r(83),r(60),r(87),r(88),e.exports=r(0).Symbol},function(e,t,r){"use strict";var n=r(1),i=r(10),s=r(4),o=r(6),a=r(50),u=r(77).KEY,c=r(13),l=r(36),d=r(26),h=r(23),f=r(2),p=r(40),v=r(41),g=r(84),m=r(85),y=r(9),_=r(7),T=r(12),b=r(27),S=r(16),R=r(38),E=r(86),C=r(46),A=r(8),O=r(20),w=C.f,I=A.f,D=E.f,U=n.Symbol,x=n.JSON,N=x&&x.stringify,$=f("_hidden"),P=f("toPrimitive"),X={}.propertyIsEnumerable,M=l("symbol-registry"),L=l("symbols"),k=l("op-symbols"),j=Object.prototype,H="function"==typeof U,q=n.QObject,F=!q||!q.prototype||!q.prototype.findChild,B=s&&c(function(){return 7!=R(I({},"a",{get:function(){return I(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=w(j,t);n&&delete j[t],I(e,t,r),n&&e!==j&&I(j,t,n)}:I,G=function(e){var t=L[e]=R(U.prototype);return t._k=e,t},W=H&&"symbol"==typeof U.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof U},V=function(e,t,r){return e===j&&V(k,t,r),y(e),t=b(t,!0),y(r),i(L,t)?(r.enumerable?(i(e,$)&&e[$][t]&&(e[$][t]=!1),r=R(r,{enumerable:S(0,!1)})):(i(e,$)||I(e,$,S(1,{})),e[$][t]=!0),B(e,t,r)):I(e,t,r)},K=function(e,t){y(e);for(var r,n=g(t=T(t)),i=0,s=n.length;s>i;)V(e,r=n[i++],t[r]);return e},Y=function(e){var t=X.call(this,e=b(e,!0));return!(this===j&&i(L,e)&&!i(k,e))&&(!(t||!i(this,e)||!i(L,e)||i(this,$)&&this[$][e])||t)},Z=function(e,t){if(e=T(e),t=b(t,!0),e!==j||!i(L,t)||i(k,t)){var r=w(e,t);return!r||!i(L,t)||i(e,$)&&e[$][t]||(r.enumerable=!0),r}},z=function(e){for(var t,r=D(T(e)),n=[],s=0;r.length>s;)i(L,t=r[s++])||t==$||t==u||n.push(t);return n},J=function(e){for(var t,r=e===j,n=D(r?k:T(e)),s=[],o=0;n.length>o;)!i(L,t=n[o++])||r&&!i(j,t)||s.push(L[t]);return s};H||(a((U=function(){if(this instanceof U)throw TypeError("Symbol is not a constructor!");var e=h(arguments.length>0?arguments[0]:void 0),t=function(r){this===j&&t.call(k,r),i(this,$)&&i(this[$],e)&&(this[$][e]=!1),B(this,e,S(1,r))};return s&&F&&B(j,e,{configurable:!0,set:t}),G(e)}).prototype,"toString",function(){return this._k}),C.f=Z,A.f=V,r(57).f=E.f=z,r(29).f=Y,r(43).f=J,s&&!r(15)&&a(j,"propertyIsEnumerable",Y,!0),p.f=function(e){return G(f(e))}),o(o.G+o.W+o.F*!H,{Symbol:U});for(var Q="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Q.length>ee;)f(Q[ee++]);for(var te=O(f.store),re=0;te.length>re;)v(te[re++]);o(o.S+o.F*!H,"Symbol",{for:function(e){return i(M,e+="")?M[e]:M[e]=U(e)},keyFor:function(e){if(!W(e))throw TypeError(e+" is not a symbol!");for(var t in M)if(M[t]===e)return t},useSetter:function(){F=!0},useSimple:function(){F=!1}}),o(o.S+o.F*!H,"Object",{create:function(e,t){return void 0===t?R(e):K(R(e),t)},defineProperty:V,defineProperties:K,getOwnPropertyDescriptor:Z,getOwnPropertyNames:z,getOwnPropertySymbols:J}),x&&o(o.S+o.F*(!H||c(function(){var e=U();return"[null]"!=N([e])||"{}"!=N({a:e})||"{}"!=N(Object(e))})),"JSON",{stringify:function(e){for(var t,r,n=[e],i=1;arguments.length>i;)n.push(arguments[i++]);if(r=t=n[1],(_(t)||void 0!==e)&&!W(e))return m(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!W(t))return t}),n[1]=t,N.apply(x,n)}}),U.prototype[P]||r(11)(U.prototype,P,U.prototype.valueOf),d(U,"Symbol"),d(Math,"Math",!0),d(n.JSON,"JSON",!0)},function(e,t,r){var n=r(20),i=r(43),s=r(29);e.exports=function(e){var t=n(e),r=i.f;if(r)for(var o,a=r(e),u=s.f,c=0;a.length>c;)u.call(e,o=a[c++])&&t.push(o);return t}},function(e,t,r){var n=r(21);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n=r(12),i=r(57).f,s={}.toString,o="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return o&&"[object Window]"==s.call(e)?function(e){try{return i(e)}catch(e){return o.slice()}}(e):i(n(e))}},function(e,t,r){r(41)("asyncIterator")},function(e,t,r){r(41)("observable")},function(e,t,r){r(90),e.exports=r(0).Object.keys},function(e,t,r){var n=r(32),i=r(20);r(44)("keys",function(){return function(e){return i(n(e))}})},function(e,t,r){r(92),e.exports=r(0).Object.getPrototypeOf},function(e,t,r){var n=r(32),i=r(53);r(44)("getPrototypeOf",function(){return function(e){return i(n(e))}})},function(e,t,r){e.exports={default:r(94),__esModule:!0}},function(e,t,r){r(95),e.exports=r(0).Object.setPrototypeOf},function(e,t,r){var n=r(6);n(n.S,"Object",{setPrototypeOf:r(96).set})},function(e,t,r){var n=r(7),i=r(9),s=function(e,t){if(i(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=r(14)(Function.call,r(46).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return s(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:s}},function(e,t,r){e.exports={default:r(98),__esModule:!0}},function(e,t,r){r(99);var n=r(0).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(6);n(n.S,"Object",{create:r(38)})},,function(e,t,r){var n=r(63),i=r(2)("iterator"),s=r(17);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[i]||e["@@iterator"]||s[n(e)]}},function(e,t,r){r(60),r(52),r(54),r(103),r(114),r(115),e.exports=r(0).Promise},function(e,t,r){"use strict";var n,i,s,o,a=r(15),u=r(1),c=r(14),l=r(63),d=r(6),h=r(7),f=r(24),p=r(104),v=r(105),g=r(66),m=r(67).set,y=r(109)(),_=r(51),T=r(68),b=r(110),S=r(69),R=u.TypeError,E=u.process,C=E&&E.versions,A=C&&C.v8||"",O=u.Promise,w="process"==l(E),I=function(){},D=i=_.f,U=!!function(){try{var e=O.resolve(1),t=(e.constructor={})[r(2)("species")]=function(e){e(I,I)};return(w||"function"==typeof PromiseRejectionEvent)&&e.then(I)instanceof t&&0!==A.indexOf("6.6")&&-1===b.indexOf("Chrome/66")}catch(e){}}(),x=function(e){var t;return!(!h(e)||"function"!=typeof(t=e.then))&&t},N=function(e,t){if(!e._n){e._n=!0;var r=e._c;y(function(){for(var n=e._v,i=1==e._s,s=0,o=function(t){var r,s,o,a=i?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{a?(i||(2==e._h&&X(e),e._h=1),!0===a?r=n:(l&&l.enter(),r=a(n),l&&(l.exit(),o=!0)),r===t.promise?c(R("Promise-chain cycle")):(s=x(r))?s.call(r,u,c):u(r)):c(n)}catch(e){l&&!o&&l.exit(),c(e)}};r.length>s;)o(r[s++]);e._c=[],e._n=!1,t&&!e._h&&$(e)})}},$=function(e){m.call(u,function(){var t,r,n,i=e._v,s=P(e);if(s&&(t=T(function(){w?E.emit("unhandledRejection",i,e):(r=u.onunhandledrejection)?r({promise:e,reason:i}):(n=u.console)&&n.error&&n.error("Unhandled promise rejection",i)}),e._h=w||P(e)?2:1),e._a=void 0,s&&t.e)throw t.v})},P=function(e){return 1!==e._h&&0===(e._a||e._c).length},X=function(e){m.call(u,function(){var t;w?E.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},M=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),N(t,!0))},L=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw R("Promise can't be resolved itself");(t=x(e))?y(function(){var n={_w:r,_d:!1};try{t.call(e,c(L,n,1),c(M,n,1))}catch(e){M.call(n,e)}}):(r._v=e,r._s=1,N(r,!1))}catch(e){M.call({_w:r,_d:!1},e)}}};U||(O=function(e){p(this,O,"Promise","_h"),f(e),n.call(this);try{e(c(L,this,1),c(M,this,1))}catch(e){M.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(111)(O.prototype,{then:function(e,t){var r=D(g(this,O));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=w?E.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&N(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),s=function(){var e=new n;this.promise=e,this.resolve=c(L,e,1),this.reject=c(M,e,1)},_.f=D=function(e){return e===O||e===o?new s(e):i(e)}),d(d.G+d.W+d.F*!U,{Promise:O}),r(26)(O,"Promise"),r(112)("Promise"),o=r(0).Promise,d(d.S+d.F*!U,"Promise",{reject:function(e){var t=D(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!U),"Promise",{resolve:function(e){return S(a&&this===o?O:this,e)}}),d(d.S+d.F*!(U&&r(113)(function(e){O.all(e).catch(I)})),"Promise",{all:function(e){var t=this,r=D(t),n=r.resolve,i=r.reject,s=T(function(){var r=[],s=0,o=1;v(e,!1,function(e){var a=s++,u=!1;r.push(void 0),o++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--o||n(r))},i)}),--o||n(r)});return s.e&&i(s.v),r.promise},race:function(e){var t=this,r=D(t),n=r.reject,i=T(function(){v(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return i.e&&n(i.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(14),i=r(106),s=r(107),o=r(9),a=r(49),u=r(101),c={},l={};(t=e.exports=function(e,t,r,d,h){var f,p,v,g,m=h?function(){return e}:u(e),y=n(r,d,t?2:1),_=0;if("function"!=typeof m)throw TypeError(e+" is not iterable!");if(s(m)){for(f=a(e.length);f>_;_++)if((g=t?y(o(p=e[_])[0],p[1]):y(e[_]))===c||g===l)return g}else for(v=m.call(e);!(p=v.next()).done;)if((g=i(v,y,p.value,t))===c||g===l)return g}).BREAK=c,t.RETURN=l},function(e,t,r){var n=r(9);e.exports=function(e,t,r,i){try{return i?t(n(r)[0],r[1]):t(r)}catch(t){var s=e.return;throw void 0!==s&&n(s.call(e)),t}}},function(e,t,r){var n=r(17),i=r(2)("iterator"),s=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||s[i]===e)}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),i=r(67).set,s=n.MutationObserver||n.WebKitMutationObserver,o=n.process,a=n.Promise,u="process"==r(21)(o);e.exports=function(){var e,t,r,c=function(){var n,i;for(u&&(n=o.domain)&&n.exit();e;){i=e.fn,e=e.next;try{i()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){o.nextTick(c)};else if(!s||n.navigator&&n.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);r=function(){l.then(c)}}else r=function(){i.call(n,c)};else{var d=!0,h=document.createTextNode("");new s(c).observe(h,{characterData:!0}),r=function(){h.data=d=!d}}return function(n){var i={fn:n,next:void 0};t&&(t.next=i),e||(e=i,r()),t=i}}},function(e,t,r){var n=r(1).navigator;e.exports=n&&n.userAgent||""},function(e,t,r){var n=r(11);e.exports=function(e,t,r){for(var i in t)r&&e[i]?e[i]=t[i]:n(e,i,t[i]);return e}},function(e,t,r){"use strict";var n=r(1),i=r(0),s=r(8),o=r(4),a=r(2)("species");e.exports=function(e){var t="function"==typeof i[e]?i[e]:n[e];o&&t&&!t[a]&&s.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(2)("iterator"),i=!1;try{var s=[7][n]();s.return=function(){i=!0},Array.from(s,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var r=!1;try{var s=[7],o=s[n]();o.next=function(){return{done:r=!0}},s[n]=function(){return o},e(s)}catch(e){}return r}},function(e,t,r){"use strict";var n=r(6),i=r(0),s=r(1),o=r(66),a=r(69);n(n.P+n.R,"Promise",{finally:function(e){var t=o(this,i.Promise||s.Promise),r="function"==typeof e;return this.then(r?function(r){return a(t,e()).then(function(){return r})}:e,r?function(r){return a(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){"use strict";var n=r(6),i=r(51),s=r(68);n(n.S,"Promise",{try:function(e){var t=i.f(this),r=s(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},,,,,,,,,,,,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(42)),i=c(r(18)),s=c(r(3)),o=c(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=a.getLogger("RegistrationStatus"),d=function(){function e(t,r,n,i){(0,s.default)(this,e),this._registryObjectURL=t,this._runtimeURL=r,this._domain=(0,u.divideURL)(r).domain,this._discoveredObjectURL=n,this._messageBus=i,this._subscriptionSet=!1,this._subscribers={live:{},disconnected:{}}}return(0,o.default)(e,[{key:"onLive",value:function(e,t){var r=this;return new i.default(function(n,i){r._subscriptionSet?(r._subscribers.live[e]=t,n()):r._subscribe().then(function(){r._subscribers.live[e]=t,n()}).catch(function(e){return i(e)})})}},{key:"onDisconnected",value:function(e,t){var r=this;return new i.default(function(n,i){r._subscriptionSet?(r._subscribers.disconnected[e]=t,n()):r._subscribe().then(function(){r._subscribers.disconnected[e]=t,n()}).catch(function(e){return i(e)})})}},{key:"_subscribe",value:function(){var e=this,t={type:"subscribe",from:this._discoveredObjectURL,to:this._runtimeURL+"/subscriptions",body:{resources:[this._registryObjectURL+"/registration"]}};return new i.default(function(r,n){e._messageBus.postMessage(t,function(t){l.log("[DiscoveredObject.subscribe] "+e._registryObjectURL+" rcved reply ",t),200===t.body.code?(e._generateListener(e._registryObjectURL+"/registration"),e._subscriptionSet=!0,r()):(l.error("Error subscribing ",e._registryObjectURL),n("Error subscribing "+e._registryObjectURL))})})}},{key:"_generateListener",value:function(e){var t=this;this._messageBus.addListener(e,function(e){l.log("[DiscoveredObject.notification] "+t._registryObjectURL+": ",e),t._processNotification(e)})}},{key:"_processNotification",value:function(e){var t=this,r=e.body.value;setTimeout(function(){(0,n.default)(t._subscribers[r]).forEach(function(e){return t._subscribers[r][e]()})},5e3)}},{key:"_unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:this._discoveredObjectURL,to:this._runtimeURL+"/subscriptions",body:{resource:this._registryObjectURL+"/registration"}};return new i.default(function(r,n){e._messageBus.postMessage(t,function(t){l.log("[DiscoveredObject.unsubscribe] "+e._registryObjectURL+" rcved reply ",t),200===t.body.code?r():(l.error("Error unsubscribing ",e._registryObjectURL),n("Error unsubscribing "+e._registryObjectURL))})})}},{key:"unsubscribeLive",value:function(e){var t=this;return new i.default(function(r,n){e in t._subscribers.live&&delete t._subscribers.live[e],t._areSubscriptionsEmpty()?t._unsubscribe().then(function(){return r()}).catch(function(e){return n(e)}):r()})}},{key:"unsubscribeDisconnected",value:function(e){var t=this;return new i.default(function(r,n){e in t._subscribers.disconnected?(delete t._subscribers.disconnected[e],t._areSubscriptionsEmpty()?t._unsubscribe().then(function(){return r()}).catch(function(e){return n(e)}):r()):n(e+" doesn't subscribe onDisconnected for "+t._registryObjectURL)})}},{key:"_areSubscriptionsEmpty",value:function(){return 0===(0,n.default)(this._subscribers.live).length&&0===(0,n.default)(this._subscribers.disconnected).length}}]),e}();t.default=d,e.exports=t.default},,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(18)),i=c(r(3)),s=c(r(5)),o=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=r(19),u=c(r(139));function c(e){return e&&e.__esModule?e:{default:e}}var l=o.getLogger("Discovery"),d=function(){function e(t,r,n){(0,i.default)(this,e),this.messageBus=n,this.runtimeURL=r,this.domain=(0,a.divideURL)(t).domain,this.discoveryURL=t}return(0,s.default)(e,[{key:"_isLegacyUser",value:function(e){return!(!e.includes(":")||e.includes("user://"))}},{key:"discoverHypertiesPerUserProfileData",value:function(e,t,r){var i=this,s=[],o={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/hyperty/userprofile/"+e}};return(t||r)&&(o.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){i._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):i.messageBus.postMessage(o,function(r){200===r.body.code?(r.body.value.map(function(e){e.hypertyID!=i.discoveryURL&&s.push(e)}),0===s.length?t([]):(l.log("[Discovery.discoverHypertiesPerUserProfileData] Reply log: ",s),t(s))):(l.warn("[Discovery.discoverHypertiesPerUserProfileData] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverHypertiesPerUserProfileDataDO",value:function(e,t,r){var i=this,s=arguments;return new n.default(function(e,t){i.discoverHypertiesPerUserProfileData.apply(i,s).then(function(t){e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerUserProfileData",value:function(e,t,r){var i=this,s={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/dataObject/userprofile/"+e}};return(t||r)&&(s.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){i._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):i.messageBus.postMessage(s,function(r){200===r.body.code?(l.log("Reply log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerUserProfileData] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerUserProfileDataDO",value:function(e,t,r){var i=this,s=arguments;return new n.default(function(e,t){i.discoverDataObjectsPerUserProfileData.apply(i,s).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHypertiesPerGUID",value:function(e,t,r){var i=this,s=[],o={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/hyperty/guid/"+e}};return(t||r)&&(o.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){i.messageBus.postMessage(o,function(n){200===n.body.code?(n.body.value.map(function(e){e.hypertyID!=i.discoveryURL&&s.push(e)}),0===s.length?r("No Hyperty was found"):(l.log("Reply log: ",s),t(s))):(l.warn("[Discovery.discoverHypertiesPerGUID] Error Reply for "+e+" Reason: ",n.body.description),t([]))})})}},{key:"discoverHypertiesPerGUIDDO",value:function(e,t,r){var i=this,s=arguments;return new n.default(function(e,t){i.discoverHypertiesPerGUID.apply(i,s).then(function(t){e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerGUID",value:function(e,t,r){var i=this,s={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/dataObject/guid/"+e}};return(t||r)&&(s.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){i.messageBus.postMessage(s,function(r){200===r.body.code?(l.log("Reply log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerGUID] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerGUIDDO",value:function(e,t,r){var i=this,s=arguments;return new n.default(function(e,t){i.discoverDataObjectsPerGUID.apply(i,s).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHyperties",value:function(e,t,r,i){var s,o=this,a=[];s=i||o.domain;var u={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/hyperty/user/"+e}};return u.body.criteria=t||r?{resources:r,dataSchemes:t,domain:s}:{domain:s},new n.default(function(t,r){o._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):o.messageBus.postMessage(u,function(r){200===r.body.code||500===r.body.code?(r.body.value.map(function(e){e.hypertyID!=o.discoveryURL&&a.push(e)}),l.log("[Discovery.discoverHyperties] Reply : ",a),t(a)):(l.warn("[Discovery.discoverHyperties] Error Reply for "+e+" Reason: ",r.body.description),t(a))})})}},{key:"discoverHypertiesDO",value:function(e,t,r,i){var s=this,o=arguments;return new n.default(function(e,t){s.discoverHyperties.apply(s,o).then(function(t){e(s._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjects",value:function(e,t,r,i){var s,o=this;s=i||o.domain;var a={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/dataObject/user/"+e}};return a.body.criteria=t||r?{resources:r,dataSchemes:t,domain:s}:{domain:s},new n.default(function(t,r){o.messageBus.postMessage(a,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjects] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsDO",value:function(e,t,r,i){var s=this,o=arguments;return new n.default(function(e,t){s.discoverDataObjects.apply(s,o).then(function(t){return e(s._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHypertyPerURL",value:function(e,t){var r,i=this;r=t||i.domain;var s={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/hyperty/url/"+e,criteria:{domain:r}}};return new n.default(function(t,r){i.messageBus.postMessage(s,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverHypertyPerURL] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverHypertyPerURLDO",value:function(e,t){var r=this,i=arguments;return new n.default(function(e,t){r.discoverHypertyPerURL.apply(r,i).then(function(t){return e(new u.default(t,r.runtimeURL,r.discoveryURL,r.messageBus,r))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectPerURL",value:function(e,t){var r,i=this;r=t||i.domain;var s={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/dataObject/url/"+e,criteria:{domain:r}}};return new n.default(function(t,r){i.messageBus.postMessage(s,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectPerURL] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectPerURLDO",value:function(e,t){var r=this,i=arguments;return new n.default(function(e,t){r.discoverDataObjectPerURL.apply(r,i).then(function(t){return e(new u.default(t,r.runtimeURL,r.discoveryURL,r.messageBus,r))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerName",value:function(e,t,r,i){var s,o=this;s=i||o.domain;var a={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/dataObject/name/"+e}};return a.body.criteria=t||r?{resources:r,dataSchemes:t,domain:s}:{domain:s},new n.default(function(t,r){o.messageBus.postMessage(a,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerName] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerNameDO",value:function(e,t,r,i){var s=this,o=arguments;return new n.default(function(e,t){s.discoverDataObjectsPerName.apply(s,o).then(function(t){return e(s._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerReporter",value:function(e,t,r,i){var s,o=this;s=i||o.domain;var a={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/dataObject/reporter/"+e}};return a.body.criteria=t||r?{resources:r,dataSchemes:t,domain:s}:{domain:s},new n.default(function(t,r){o.messageBus.postMessage(a,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerName] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerReporterDO",value:function(e,t,r,i){var s=this,o=arguments;return new n.default(function(e,t){s.discoverDataObjectsPerReporter.apply(s,o).then(function(t){return e(s._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"_convertToDiscoveredObject",value:function(e){var t=this;return e.map(function(e){return new u.default(e,t.runtimeURL,t.discoveryURL,t.messageBus,t)})}},{key:"discoverDataObject",value:function(e,t,r,i){var s,o=this;s=i||o.domain;var a={type:"read",from:o.discoveryURL,to:"domain://registry."+s,body:{resource:e,criteria:{resources:r,dataSchemes:t}}};return new n.default(function(t,r){o.messageBus.postMessage(a,function(r){if(l.log("[Discovery]",r),r.body.code>299)return l.warn("[Discovery.discoverDataObject] Error Reply for "+e+" Reason: ",r.body.description),t([]);var n=r.body.value;t(n||[])})})}},{key:"discoverHyperty",value:function(e,t,r,i){var s,o=this,u=(0,a.convertToUserURL)(e);return s=i||o.domain,new n.default(function(n,a){if(l.log("[Discovery.discoverHyperty] ACTIVE DOMAIN -> ",s,"user->",e,"schema->",t,"resources->",r,"domain->",i),e.includes(":")&&!e.includes("user://"))return l.log("[Discovery.discoverHyperty] "+e+" is legacy domain"),n({userID:e,hypertyID:e,schema:t,resources:r});var c={type:"read",from:o.discoveryURL,to:"domain://registry."+s,body:{resource:u,criteria:{resources:r,dataSchemes:t}}};l.info("[Discovery] msg to send->",c),o.messageBus.postMessage(c,function(e){l.info("[Discovery] ON discoverHyperty->",e);var t=e.body.value;t?n(t):a("No Hyperty was found")})})}},{key:"discoverHypertyPerUser",value:function(e,t){var r=this,i=void 0;return new n.default(function(n,s){if(e.includes(":")&&!e.includes("user://"))return l.log("[Discovery.discoverHyperty] "+e+"is legacy domain"),n({id:e,hypertyURL:e,descriptor:"unknown"});i=t||r.domain;var o="user://"+e.substring(e.indexOf("@")+1,e.length)+"/"+e.substring(0,e.indexOf("@")),a={type:"read",from:r.discoveryURL,to:"domain://registry."+i,body:{resource:o}};l.info("[Discovery] Message: ",a,i,o),r.messageBus.postMessage(a,function(t){l.info("[Discovery] message reply",t);var r=void 0,i=void 0,o=void 0,a=t.body.value;for(r in a)if(void 0!==a[r].lastModified)if(void 0===i)i=new Date(a[r].lastModified),o=r;else{var u=new Date(a[r].lastModified);i.getTime()<u.getTime()&&(i=u,o=r)}l.info("[Discovery] Last Hyperty: ",o,i);var c=o;if(void 0===c)return s("User Hyperty not found");var d={id:e,descriptor:a[c].descriptor,hypertyURL:c};l.info("[Discovery] ===> hypertyDiscovery messageBundle: ",d),n(d)})})}},{key:"discoverHypertiesPerUser",value:function(e,t){var r=this,i=void 0;return l.log("on Function->",e),new n.default(function(n,s){if(e.includes(":")&&!e.includes("user://")){l.log("[Discovery.discoverHyperty] is legacy domain");var o={userID:e,hypertyID:e,schema:schema,resources:resources};return n(o)}i=t||r.domain;var a="user://"+e.substring(e.indexOf("@")+1,e.length)+"/"+e.substring(0,e.indexOf("@")),u={type:"read",from:r.discoveryURL,to:"domain://registry."+i,body:{resource:a}};l.log("[Discovery] Message discoverHypertiesPerUser: ",u,i,a),r.messageBus.postMessage(u,function(e){l.info("[Discovery] discoverHypertiesPerUser reply",e);var t=e.body.value;if(!t)return s("User Hyperty not found");n(t)})})}},{key:"resumeDiscoveries",value:function(){var e=this;return l.log("[Discovery] resumeDiscoveries"),new n.default(function(t,r){var i={type:"read",from:e.discoveryURL,to:e.runtimeURL+"/subscriptions",body:{resource:e.discoveryURL}};e.messageBus.postMessage(i,function(r){l.log("[Discovery.resumeDiscoveries] reply: ",r);var i=[];200===r.body.code?(r.body.value.forEach(function(t){var r=t.split("/registration")[0];l.log("[Discovery.resumeDiscoveries] adding listener to: ",r),r.includes("hyperty://")?i.push(e.discoverHypertyPerURLDO(r)):i.push(e.discoverDataObjectPerURLDO(r))}),n.default.all(i).then(function(e){t(e)})):t([])})})}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=u(r(25)),i=u(r(3)),s=u(r(33)),o=u(r(5)),a=u(r(34));function u(e){return e&&e.__esModule?e:{default:e}}r(19);var c=function(e){function t(e,r,o,a,u){(0,i.default)(this,t);var c=(0,s.default)(this,(t.__proto__||(0,n.default)(t)).call(this,e.hypertyID||e.url,r,o,a));return c._data=e,c._discovery=u,c}return(0,a.default)(t,e),(0,o.default)(t,[{key:"data",get:function(){return this._data}}]),(0,o.default)(t,[{key:"check",value:function(){var e=this,t={body:{}};e._discoveredObjectURL.startsWith("hyperty://")?e._discovery.discoverHypertyPerURL(e._discoveredObjectURL).then(function(r){t.body.status=r.status,e._processNotification(t)}):e._discovery.discoverDataObjectsPerURL(e._discoveredObjectURL).then(function(r){t.body.status=r.status,e._processNotification(t)})}}]),t}(u(r(134)).default);t.default=c,e.exports=t.default},,,,,,,,,,,,,,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RegistrationStatus=t.Discovery=void 0;var n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),i=o(r(138)),s=o(r(134));function o(e){return e&&e.__esModule?e:{default:e}}var a=n.getLogger("RegistrationStatus"),u=n.getLogger("Discovery");a.setLevel(3),u.setLevel(3),t.Discovery=i.default,t.RegistrationStatus=s.default}])})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=u(r(0)),s=u(r(41)),o=u(r(42)),a=r(43);function u(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(t,r,n){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The configuration is a needed parameter");i.default.WebRTC.isSupported=function(){return!0},i.default.InviteServerContext=o.default,this.configuration=t,this.onDisconnect=n,this.onCall=r}return n(e,[{key:"connect",value:function(e){var t=this;return new Promise(function(r,n){if(t.userAgent)return r();fetch(t.configuration.credential_server,{method:"GET",headers:{Authorization:"Bearer: "+e}}).then(function(e){e.json().then(function(e){t.userAgent=new i.default.UA({uri:e.username,wsServers:e.uris,password:e.password}),t.userAgent.on("invite",function(e){t.context||(e.on("bye",function(){delete t.context,t.onDisconnect()}),e.on("failed",console.log),e.on("rejected",console.log),t.context=e,t.onCall(e.request.to.friendlyName,e.body))}),r()})}).catch(n)})}},{key:"accept",value:function(e){this.context.accept({sdp:(0,a.addCandidatesToSDP)(e.data.connectionDescription.sdp,e.data.iceCandidates)})}},{key:"invite",value:function(e,t){var r=this,n={sdp:(0,a.addCandidatesToSDP)(t.data.connectionDescription.sdp,t.data.iceCandidates)};return new Promise(function(t,i){r.context&&i(new Error("Previous context",r.context));var o=new s.default(r.userAgent,e.replace("//",""),n);r.userAgent.afterConnected(o.invite.bind(o)),o.on("bye",function(){delete r.context,r.onDisconnect()}),o.on("accepted",t),o.on("failed",i),o.on("rejected",i),r.context=o})}},{key:"disconnect",value:function(){console.log("disconnecting from ims"),this.context&&!this.context.endTime&&(this.context.bye(),delete this.context)}}]),e}();t.default=c},function(e,t,r){"use strict";e.exports=function(e){var t=r(7),n=t.version,i=t.title,s=Object.defineProperties({},{version:{get:function(){return n}},name:{get:function(){return i}}});return r(8)(s,e),s.LoggerFactory=r(9)(e.console),s.EventEmitter=r(10)(e.console),s.C=r(12)(s.name,s.version),s.Exceptions=r(13),s.Timers=r(14)(e.timers),s.Transport=e.Transport(s,e.WebSocket),r(15)(s),r(16)(s),r(17)(s),r(18)(s),r(19)(s),r(20)(s),r(22)(s),r(23)(s),s.MediaHandler=r(24)(s.EventEmitter),r(25)(s),r(26)(s),r(27)(s,e),r(29)(s),s.WebRTC=r(30)(s,e),r(33)(s,e),s.Hacks=r(34)(s),r(35)(s),s.DigestAuthentication=r(36)(s.Utils),s.Grammar=r(37)(s),s}},function(e,t){e.exports={_from:"sip.js@^0.7.5",_id:"sip.js@0.7.8",_inBundle:!1,_integrity:"sha1-SHCboTSFvMBQhpt3qTwhZYCVtDA=",_location:"/sip.js",_phantomChildren:{},_requested:{type:"range",registry:!0,raw:"sip.js@^0.7.5",name:"sip.js",escapedName:"sip.js",rawSpec:"^0.7.5",saveSpec:null,fetchSpec:"^0.7.5"},_requiredBy:["/"],_resolved:"https://registry.npmjs.org/sip.js/-/sip.js-0.7.8.tgz",_shasum:"48709ba13485bcc050869b77a93c21658095b430",_spec:"sip.js@^0.7.5",_where:"/home/suil/Documents/rethink/dev-protostubs/src/protostub/ims_iw",author:{name:"OnSIP",email:"developer@onsip.com",url:"http://sipjs.com/authors/"},browser:{"./src/environment.js":"./src/environment_browser.js"},bugs:{url:"https://github.com/onsip/SIP.js/issues"},bundleDependencies:!1,contributors:[{url:"https://github.com/onsip/SIP.js/blob/master/THANKS.md"}],dependencies:{promiscuous:"^0.6.0",ws:"^1.0.1"},deprecated:!1,description:"A simple, intuitive, and powerful JavaScript signaling library",devDependencies:{beefy:"^2.1.5",browserify:"^4.1.8",grunt:"~0.4.0","grunt-browserify":"^4.0.1","grunt-cli":"~0.1.6","grunt-contrib-copy":"^0.5.0","grunt-contrib-jasmine":"^1.0.3","grunt-contrib-jshint":">0.5.0","grunt-contrib-uglify":"~0.2.0","grunt-peg":"~1.3.1","grunt-trimtrailingspaces":"^0.4.0",pegjs:"^0.8.0"},engines:{node:">=0.12"},homepage:"http://sipjs.com",keywords:["sip","websocket","webrtc","library","javascript"],license:"MIT",main:"src/index.js",name:"sip.js",optionalDependencies:{promiscuous:"^0.6.0"},repository:{type:"git",url:"git+https://github.com/onsip/SIP.js.git"},scripts:{build:"grunt build",prepublish:"cd src/Grammar && mkdir -p dist && pegjs --extra-options-file peg.json src/Grammar.pegjs dist/Grammar.js",repl:"beefy test/repl.js --open",test:"grunt travis --verbose"},title:"SIP.js",version:"0.7.8"}},function(e,t,r){"use strict";e.exports=function(e,t){var r;r={Promise:t.Promise,defer:function(){var e={};return e.promise=new r.Promise(function(t,r){e.resolve=t,e.reject=r}),e},promisify:function(e,t,n){var i=e[t];return function(t,s,o){return new r.Promise(function(r,s){var o=[t,r,s];n&&(o=[r,s,t]),i.apply(e,o)}).then(s,o)}},augment:function(e,t,r,n){var i,s;for(i in s=t.prototype)(n||void 0===e[i])&&(e[i]=s[i]);t.apply(e,r)},optionsOverride:function(e,t,r,n,i,s){n&&e[r]&&i.warn(r+" is deprecated, please use "+t+" instead"),e[t]&&e[r]&&i.warn(t+" overriding "+r),e[t]=e[t]||e[r]||s},str_utf8_length:function(e){return encodeURIComponent(e).replace(/%[A-F\d]{2}/g,"U").length},generateFakeSDP:function(e){if(e){var t=e.indexOf("o="),r=e.indexOf("\r\n",t);return"v=0\r\n"+e.slice(t,r)+"\r\ns=-\r\nt=0 0\r\nc=IN IP4 0.0.0.0"}},isFunction:function(e){return void 0!==e&&"[object Function]"===Object.prototype.toString.call(e)},isDecimal:function(e){return!isNaN(e)&&parseFloat(e)===parseInt(e,10)},createRandomToken:function(e,t){var r,n="";for(t=t||32,r=0;r<e;r++)n+=(Math.random()*t|0).toString(t);return n},newTag:function(){return e.Utils.createRandomToken(e.UA.C.TAG_LENGTH)},newUUID:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})},hostType:function(t){if(t)return-1!==(t=e.Grammar.parse(t,"host"))?t.host_type:void 0},normalizeTarget:function(t,r){var n,i,s,o;if(t){if(t instanceof e.URI)return t;if("string"==typeof t){switch((i=t.split("@")).length){case 1:if(!r)return;s=t,o=r;break;case 2:s=i[0],o=i[1];break;default:s=i.slice(0,i.length-1).join("@"),o=i[i.length-1]}return s=s.replace(/^(sips?|tel):/i,""),/^[\-\.\(\)]*\+?[0-9\-\.\(\)]+$/.test(s)&&(s=s.replace(/[\-\.\(\)]/g,"")),t=e.C.SIP+":"+e.Utils.escapeUser(s)+"@"+o,(n=e.URI.parse(t))?n:void 0}}else;},escapeUser:function(e){return encodeURIComponent(decodeURIComponent(e)).replace(/%3A/gi,":").replace(/%2B/gi,"+").replace(/%3F/gi,"?").replace(/%2F/gi,"/")},headerize:function(e){var t,r={"Call-Id":"Call-ID",Cseq:"CSeq","Min-Se":"Min-SE",Rack:"RAck",Rseq:"RSeq","Www-Authenticate":"WWW-Authenticate"},n=e.toLowerCase().replace(/_/g,"-").split("-"),i="",s=n.length;for(t=0;t<s;t++)0!==t&&(i+="-"),i+=n[t].charAt(0).toUpperCase()+n[t].substring(1);return r[i]&&(i=r[i]),i},sipErrorCause:function(t){var r;for(r in e.C.SIP_ERROR_CAUSES)if(-1!==e.C.SIP_ERROR_CAUSES[r].indexOf(t))return e.C.causes[r];return e.C.causes.SIP_FAILURE_CODE},getReasonPhrase:function(t,r){return r||e.C.REASON_PHRASE[t]||""},getReasonHeaderValue:function(t,r){return"SIP ;cause="+t+' ;text="'+(r=e.Utils.getReasonPhrase(t,r))+'"'},getCancelReason:function(t,r){if(t&&t<200||t>699)throw new TypeError("Invalid status_code: "+t);if(t)return e.Utils.getReasonHeaderValue(t,r)},buildStatusLine:function(e,t){if(e=e||null,t=t||null,!e||e<100||e>699)throw new TypeError("Invalid status_code: "+e);if(t&&"string"!=typeof t&&!(t instanceof String))throw new TypeError("Invalid reason_phrase: "+t);return"SIP/2.0 "+e+" "+(t=r.getReasonPhrase(e,t))+"\r\n"},getRandomTestNetIP:function(){return"192.0.2."+function(e,t){return Math.floor(Math.random()*(t-e+1)+e)}(1,254)},calculateMD5:function(e){function t(e,t){return e<<t|e>>>32-t}function r(e,t){var r,n,i,s,o;return i=2147483648&e,s=2147483648&t,o=(1073741823&e)+(1073741823&t),(r=1073741824&e)&(n=1073741824&t)?2147483648^o^i^s:r|n?1073741824&o?3221225472^o^i^s:1073741824^o^i^s:o^i^s}function n(e,n,i,s,o,a,u){return r(t(e=r(e,r(r(function(e,t,r){return e&t|~e&r}(n,i,s),o),u)),a),n)}function i(e,n,i,s,o,a,u){return r(t(e=r(e,r(r(function(e,t,r){return e&r|t&~r}(n,i,s),o),u)),a),n)}function s(e,n,i,s,o,a,u){return r(t(e=r(e,r(r(function(e,t,r){return e^t^r}(n,i,s),o),u)),a),n)}function o(e,n,i,s,o,a,u){return r(t(e=r(e,r(r(function(e,t,r){return t^(e|~r)}(n,i,s),o),u)),a),n)}function a(e){var t,r="",n="";for(t=0;t<=3;t++)r+=(n="0"+(e>>>8*t&255).toString(16)).substr(n.length-2,2);return r}var u,c,l,d,h,f,p,v,g,m;for(u=function(e){for(var t,r=e.length,n=r+8,i=16*((n-n%64)/64+1),s=Array(i-1),o=0,a=0;a<r;)o=a%4*8,s[t=(a-a%4)/4]=s[t]|e.charCodeAt(a)<<o,a++;return o=a%4*8,s[t=(a-a%4)/4]=s[t]|128<<o,s[i-2]=r<<3,s[i-1]=r>>>29,s}(e=function(e){e=e.replace(/\r\n/g,"\n");for(var t="",r=0;r<e.length;r++){var n=e.charCodeAt(r);n<128?t+=String.fromCharCode(n):n>127&&n<2048?(t+=String.fromCharCode(n>>6|192),t+=String.fromCharCode(63&n|128)):(t+=String.fromCharCode(n>>12|224),t+=String.fromCharCode(n>>6&63|128),t+=String.fromCharCode(63&n|128))}return t}(e)),p=1732584193,v=4023233417,g=2562383102,m=271733878,c=0;c<u.length;c+=16)l=p,d=v,h=g,f=m,v=o(v=o(v=o(v=o(v=s(v=s(v=s(v=s(v=i(v=i(v=i(v=i(v=n(v=n(v=n(v=n(v,g=n(g,m=n(m,p=n(p,v,g,m,u[c+0],7,3614090360),v,g,u[c+1],12,3905402710),p,v,u[c+2],17,606105819),m,p,u[c+3],22,3250441966),g=n(g,m=n(m,p=n(p,v,g,m,u[c+4],7,4118548399),v,g,u[c+5],12,1200080426),p,v,u[c+6],17,2821735955),m,p,u[c+7],22,4249261313),g=n(g,m=n(m,p=n(p,v,g,m,u[c+8],7,1770035416),v,g,u[c+9],12,2336552879),p,v,u[c+10],17,4294925233),m,p,u[c+11],22,2304563134),g=n(g,m=n(m,p=n(p,v,g,m,u[c+12],7,1804603682),v,g,u[c+13],12,4254626195),p,v,u[c+14],17,2792965006),m,p,u[c+15],22,1236535329),g=i(g,m=i(m,p=i(p,v,g,m,u[c+1],5,4129170786),v,g,u[c+6],9,3225465664),p,v,u[c+11],14,643717713),m,p,u[c+0],20,3921069994),g=i(g,m=i(m,p=i(p,v,g,m,u[c+5],5,3593408605),v,g,u[c+10],9,38016083),p,v,u[c+15],14,3634488961),m,p,u[c+4],20,3889429448),g=i(g,m=i(m,p=i(p,v,g,m,u[c+9],5,568446438),v,g,u[c+14],9,3275163606),p,v,u[c+3],14,4107603335),m,p,u[c+8],20,1163531501),g=i(g,m=i(m,p=i(p,v,g,m,u[c+13],5,2850285829),v,g,u[c+2],9,4243563512),p,v,u[c+7],14,1735328473),m,p,u[c+12],20,2368359562),g=s(g,m=s(m,p=s(p,v,g,m,u[c+5],4,4294588738),v,g,u[c+8],11,2272392833),p,v,u[c+11],16,1839030562),m,p,u[c+14],23,4259657740),g=s(g,m=s(m,p=s(p,v,g,m,u[c+1],4,2763975236),v,g,u[c+4],11,1272893353),p,v,u[c+7],16,4139469664),m,p,u[c+10],23,3200236656),g=s(g,m=s(m,p=s(p,v,g,m,u[c+13],4,681279174),v,g,u[c+0],11,3936430074),p,v,u[c+3],16,3572445317),m,p,u[c+6],23,76029189),g=s(g,m=s(m,p=s(p,v,g,m,u[c+9],4,3654602809),v,g,u[c+12],11,3873151461),p,v,u[c+15],16,530742520),m,p,u[c+2],23,3299628645),g=o(g,m=o(m,p=o(p,v,g,m,u[c+0],6,4096336452),v,g,u[c+7],10,1126891415),p,v,u[c+14],15,2878612391),m,p,u[c+5],21,4237533241),g=o(g,m=o(m,p=o(p,v,g,m,u[c+12],6,1700485571),v,g,u[c+3],10,2399980690),p,v,u[c+10],15,4293915773),m,p,u[c+1],21,2240044497),g=o(g,m=o(m,p=o(p,v,g,m,u[c+8],6,1873313359),v,g,u[c+15],10,4264355552),p,v,u[c+6],15,2734768916),m,p,u[c+13],21,1309151649),g=o(g,m=o(m,p=o(p,v,g,m,u[c+4],6,4149444226),v,g,u[c+11],10,3174756917),p,v,u[c+2],15,718787259),m,p,u[c+9],21,3951481745),p=r(p,l),v=r(v,d),g=r(g,h),m=r(m,f);return(a(p)+a(v)+a(g)+a(m)).toLowerCase()}},e.Utils=r}},function(e,t,r){"use strict";var n={error:0,warn:1,log:2,debug:3};e.exports=function(e){var t=function(){var e,t=2,r=!0,i=null;this.loggers={},e=this.getLogger("sip.loggerfactory"),Object.defineProperties(this,{builtinEnabled:{get:function(){return r},set:function(t){"boolean"==typeof t?r=t:e.error('invalid "builtinEnabled" parameter value: '+JSON.stringify(t))}},level:{get:function(){return t},set:function(r){r>=0&&r<=3?t=r:r>3?t=3:n.hasOwnProperty(r)?t=n[r]:e.error('invalid "level" parameter value: '+JSON.stringify(r))}},connector:{get:function(){return i},set:function(t){null===t||""===t||void 0===t?i=null:"function"==typeof t?i=t:e.error('invalid "connector" parameter value: '+JSON.stringify(t))}}})};function r(e,t,r){this.logger=e,this.category=t,this.label=r}return t.prototype.print=function(t,r,n,i){if("string"==typeof i){var s=[new Date,r];n&&s.push(n),i=s.concat(i).join(" | ")}t.call(e,i)},Object.keys(n).forEach(function(i){r.prototype[i]=function(e){this.logger[i](this.category,this.label,e)},t.prototype[i]=function(t,r,s){this.level>=n[i]&&(this.builtinEnabled&&this.print(e[i],t,r,s),this.connector&&this.connector(i,t,r,s))}}),t.prototype.getLogger=function(e,t){var n;return t&&3===this.level?new r(this,e,t):this.loggers[e]?this.loggers[e]:(n=new r(this,e),this.loggers[e]=n,n)},t}},function(e,t,r){"use strict";var n=r(11).EventEmitter;e.exports=function(e){function t(){n.call(this)}return t.prototype=Object.create(n.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),t.prototype.off=function(t,r){var n="";return n+="SIP.EventEmitter#off is deprecated and may be removed in future SIP.js versions.\n",n+="Please use removeListener or removeAllListeners instead.\n",n+="See here for more details:\n",n+="http://nodejs.org/api/events.html#events_emitter_removelistener_event_listener",e.warn(n),arguments.length<2?this.removeAllListeners.apply(this,arguments):this.removeListener(t,r)},t}},function(e,t){function r(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function n(e){return"function"==typeof e}function i(e){return"object"==typeof e&&null!==e}function s(e){return void 0===e}e.exports=r,r.EventEmitter=r,r.prototype._events=void 0,r.prototype._maxListeners=void 0,r.defaultMaxListeners=10,r.prototype.setMaxListeners=function(e){if(!function(e){return"number"==typeof e}(e)||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},r.prototype.emit=function(e){var t,r,o,a,u,c;if(this._events||(this._events={}),"error"===e&&(!this._events.error||i(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var l=new Error('Uncaught, unspecified "error" event. ('+t+")");throw l.context=t,l}if(s(r=this._events[e]))return!1;if(n(r))switch(arguments.length){case 1:r.call(this);break;case 2:r.call(this,arguments[1]);break;case 3:r.call(this,arguments[1],arguments[2]);break;default:a=Array.prototype.slice.call(arguments,1),r.apply(this,a)}else if(i(r))for(a=Array.prototype.slice.call(arguments,1),o=(c=r.slice()).length,u=0;u<o;u++)c[u].apply(this,a);return!0},r.prototype.addListener=function(e,t){var o;if(!n(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,n(t.listener)?t.listener:t),this._events[e]?i(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,i(this._events[e])&&!this._events[e].warned&&(o=s(this._maxListeners)?r.defaultMaxListeners:this._maxListeners)&&o>0&&this._events[e].length>o&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},r.prototype.on=r.prototype.addListener,r.prototype.once=function(e,t){if(!n(t))throw TypeError("listener must be a function");var r=!1;function i(){this.removeListener(e,i),r||(r=!0,t.apply(this,arguments))}return i.listener=t,this.on(e,i),this},r.prototype.removeListener=function(e,t){var r,s,o,a;if(!n(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(o=(r=this._events[e]).length,s=-1,r===t||n(r.listener)&&r.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(i(r)){for(a=o;a-- >0;)if(r[a]===t||r[a].listener&&r[a].listener===t){s=a;break}if(s<0)return this;1===r.length?(r.length=0,delete this._events[e]):r.splice(s,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},r.prototype.removeAllListeners=function(e){var t,r;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(n(r=this._events[e]))this.removeListener(e,r);else if(r)for(;r.length;)this.removeListener(e,r[r.length-1]);return delete this._events[e],this},r.prototype.listeners=function(e){return this._events&&this._events[e]?n(this._events[e])?[this._events[e]]:this._events[e].slice():[]},r.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(n(t))return 1;if(t)return t.length}return 0},r.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t,r){"use strict";e.exports=function(e,t){return{USER_AGENT:e+"/"+t,SIP:"sip",SIPS:"sips",causes:{CONNECTION_ERROR:"Connection Error",REQUEST_TIMEOUT:"Request Timeout",SIP_FAILURE_CODE:"SIP Failure Code",INTERNAL_ERROR:"Internal Error",BUSY:"Busy",REJECTED:"Rejected",REDIRECTED:"Redirected",UNAVAILABLE:"Unavailable",NOT_FOUND:"Not Found",ADDRESS_INCOMPLETE:"Address Incomplete",INCOMPATIBLE_SDP:"Incompatible SDP",AUTHENTICATION_ERROR:"Authentication Error",DIALOG_ERROR:"Dialog Error",WEBRTC_NOT_SUPPORTED:"WebRTC Not Supported",WEBRTC_ERROR:"WebRTC Error",CANCELED:"Canceled",NO_ANSWER:"No Answer",EXPIRES:"Expires",NO_ACK:"No ACK",NO_PRACK:"No PRACK",USER_DENIED_MEDIA_ACCESS:"User Denied Media Access",BAD_MEDIA_DESCRIPTION:"Bad Media Description",RTP_TIMEOUT:"RTP Timeout"},supported:{UNSUPPORTED:"none",SUPPORTED:"supported",REQUIRED:"required"},SIP_ERROR_CAUSES:{REDIRECTED:[300,301,302,305,380],BUSY:[486,600],REJECTED:[403,603],NOT_FOUND:[404,604],UNAVAILABLE:[480,410,408,430],ADDRESS_INCOMPLETE:[484],INCOMPATIBLE_SDP:[488,606],AUTHENTICATION_ERROR:[401,407]},ACK:"ACK",BYE:"BYE",CANCEL:"CANCEL",INFO:"INFO",INVITE:"INVITE",MESSAGE:"MESSAGE",NOTIFY:"NOTIFY",OPTIONS:"OPTIONS",REGISTER:"REGISTER",UPDATE:"UPDATE",SUBSCRIBE:"SUBSCRIBE",REFER:"REFER",PRACK:"PRACK",REASON_PHRASE:{100:"Trying",180:"Ringing",181:"Call Is Being Forwarded",182:"Queued",183:"Session Progress",199:"Early Dialog Terminated",200:"OK",202:"Accepted",204:"No Notification",300:"Multiple Choices",301:"Moved Permanently",302:"Moved Temporarily",305:"Use Proxy",380:"Alternative Service",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",410:"Gone",412:"Conditional Request Failed",413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",416:"Unsupported URI Scheme",417:"Unknown Resource-Priority",420:"Bad Extension",421:"Extension Required",422:"Session Interval Too Small",423:"Interval Too Brief",428:"Use Identity Header",429:"Provide Referrer Identity",430:"Flow Failed",433:"Anonymity Disallowed",436:"Bad Identity-Info",437:"Unsupported Certificate",438:"Invalid Identity Header",439:"First Hop Lacks Outbound Support",440:"Max-Breadth Exceeded",469:"Bad Info Package",470:"Consent Needed",478:"Unresolvable Destination",480:"Temporarily Unavailable",481:"Call/Transaction Does Not Exist",482:"Loop Detected",483:"Too Many Hops",484:"Address Incomplete",485:"Ambiguous",486:"Busy Here",487:"Request Terminated",488:"Not Acceptable Here",489:"Bad Event",491:"Request Pending",493:"Undecipherable",494:"Security Agreement Required",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Server Time-out",505:"Version Not Supported",513:"Message Too Large",580:"Precondition Failure",600:"Busy Everywhere",603:"Decline",604:"Does Not Exist Anywhere",606:"Not Acceptable"},OPTION_TAGS:{"100rel":!0,199:!0,answermode:!0,"early-session":!0,eventlist:!0,explicitsub:!0,"from-change":!0,"geolocation-http":!0,"geolocation-sip":!0,gin:!0,gruu:!0,histinfo:!0,ice:!0,join:!0,"multiple-refer":!0,norefersub:!0,nosub:!0,outbound:!0,path:!0,policy:!0,precondition:!0,pref:!0,privacy:!0,"recipient-list-invite":!0,"recipient-list-message":!0,"recipient-list-subscribe":!0,replaces:!0,"resource-priority":!0,"sdp-anat":!0,"sec-agree":!0,tdialog:!0,timer:!0,uui:!0}}}},function(e,t,r){"use strict";e.exports={ConfigurationError:function(){var e=function(e,t){this.code=1,this.name="CONFIGURATION_ERROR",this.parameter=e,this.value=t,this.message=this.value?"Invalid value "+JSON.stringify(this.value)+' for parameter "'+this.parameter+'"':"Missing parameter: "+this.parameter};return e.prototype=new Error,e}(),InvalidStateError:function(){var e=function(e){this.code=2,this.name="INVALID_STATE_ERROR",this.status=e,this.message="Invalid status: "+e};return e.prototype=new Error,e}(),NotSupportedError:function(){var e=function(e){this.code=3,this.name="NOT_SUPPORTED_ERROR",this.message=e};return e.prototype=new Error,e}(),GetDescriptionError:function(){var e=function(e){this.code=4,this.name="GET_DESCRIPTION_ERROR",this.message=e};return e.prototype=new Error,e}()}},function(e,t,r){"use strict";var n=500;e.exports=function(e){var t={T1:n,T2:4e3,T4:5e3,TIMER_B:32e3,TIMER_D:0,TIMER_F:32e3,TIMER_H:32e3,TIMER_I:0,TIMER_J:0,TIMER_K:0,TIMER_L:32e3,TIMER_M:32e3,TIMER_N:32e3,PROVISIONAL_RESPONSE_INTERVAL:6e4};return["setTimeout","clearTimeout","setInterval","clearInterval"].forEach(function(r){t[r]=function(){return e[r].apply(e,arguments)}}),t}},function(e,t,r){"use strict";e.exports=function(e){var t;function r(e,t){var r=t,n=0,i=0;if(e.substring(r,r+2).match(/(^\r\n)/))return-2;for(;0===n;){if(-1===(i=e.indexOf("\r\n",r)))return i;!e.substring(i+2,i+4).match(/(^\r\n)/)&&e.charAt(i+2).match(/(^\s+)/)?r=i+2:n=i}return n}function n(t,r,n,i){var s,o,a,u,c=r.indexOf(":",n),l=r.substring(n,c).trim(),d=r.substring(c+1,i).trim();switch(l.toLowerCase()){case"via":case"v":t.addHeader("via",d),1===t.getHeaders("via").length?(u=t.parseHeader("Via"))&&(t.via=u,t.via_branch=u.branch):u=0;break;case"from":case"f":t.setHeader("from",d),(u=t.parseHeader("from"))&&(t.from=u,t.from_tag=u.getParam("tag"));break;case"to":case"t":t.setHeader("to",d),(u=t.parseHeader("to"))&&(t.to=u,t.to_tag=u.getParam("tag"));break;case"record-route":if(-1===(u=e.Grammar.parse(d,"Record_Route"))){u=void 0;break}for(a=u.length,o=0;o<a;o++)s=u[o],t.addHeader("record-route",d.substring(s.position,s.offset)),t.headers["Record-Route"][t.getHeaders("record-route").length-1].parsed=s.parsed;break;case"call-id":case"i":t.setHeader("call-id",d),(u=t.parseHeader("call-id"))&&(t.call_id=d);break;case"contact":case"m":if(-1===(u=e.Grammar.parse(d,"Contact"))){u=void 0;break}for(a=u.length,o=0;o<a;o++)s=u[o],t.addHeader("contact",d.substring(s.position,s.offset)),t.headers.Contact[t.getHeaders("contact").length-1].parsed=s.parsed;break;case"content-length":case"l":t.setHeader("content-length",d),u=t.parseHeader("content-length");break;case"content-type":case"c":t.setHeader("content-type",d),u=t.parseHeader("content-type");break;case"cseq":t.setHeader("cseq",d),(u=t.parseHeader("cseq"))&&(t.cseq=u.value),t instanceof e.IncomingResponse&&(t.method=u.method);break;case"max-forwards":t.setHeader("max-forwards",d),u=t.parseHeader("max-forwards");break;case"www-authenticate":t.setHeader("www-authenticate",d),u=t.parseHeader("www-authenticate");break;case"proxy-authenticate":t.setHeader("proxy-authenticate",d),u=t.parseHeader("proxy-authenticate");break;case"refer-to":case"r":t.setHeader("refer-to",d),(u=t.parseHeader("refer-to"))&&(t.refer_to=u);break;default:t.setHeader(l,d),u=0}return void 0!==u||{error:'error parsing header "'+l+'"'}}(t={}).parseMessage=function(t,i){var s,o,a,u,c,l=0,d=t.indexOf("\r\n"),h=i.getLogger("sip.parser");if(-1!==d){if(o=t.substring(0,d),-1!==(c=e.Grammar.parse(o,"Request_Response"))){for(c.status_code?((s=new e.IncomingResponse(i)).status_code=c.status_code,s.reason_phrase=c.reason_phrase):((s=new e.IncomingRequest(i)).method=c.method,s.ruri=c.uri),s.data=t,l=d+2;;){if(-2===(d=r(t,l))){u=l+2;break}if(-1===d)return void h.error("malformed message");if(!0!==(c=n(s,t,l,d)))return void h.error(c.error);l=d+2}return s.hasHeader("content-length")?(a=s.getHeader("content-length"),s.body=t.substr(u,a)):s.body=t.substring(u),s}h.warn('error parsing first line of SIP message: "'+o+'"')}else h.warn("no CRLF found, not a SIP message, discarded")},e.Parser=t}},function(e,t,r){"use strict";e.exports=function(e){var t,r,n,i;function s(t){var r=t.ua.configuration.hackAllowUnregisteredOptionTags,n=[],i={};return t.method===e.C.REGISTER?n.push("path","gruu"):t.method===e.C.INVITE&&(t.ua.contact.pub_gruu||t.ua.contact.temp_gruu)&&n.push("gruu"),t.ua.configuration.rel100===e.C.supported.SUPPORTED&&n.push("100rel"),t.ua.configuration.replaces===e.C.supported.SUPPORTED&&n.push("replaces"),n.push("outbound"),"Supported: "+(n=(n=n.concat(t.ua.configuration.extraSupported)).filter(function(t){var n=e.C.OPTION_TAGS[t],s=!i[t];return i[t]=!0,(n||r)&&s})).join(", ")+"\r\n"}(t=function(t,r,n,i,s,o){var a,u,c,l,d,h;if(i=i||{},!t||!r||!n)return null;this.logger=n.getLogger("sip.sipmessage"),this.ua=n,this.headers={},this.method=t,this.ruri=r,this.body=o,this.extraHeaders=(s||[]).slice(),this.statusCode=i.status_code,this.reasonPhrase=i.reason_phrase,i.route_set?this.setHeader("route",i.route_set):n.configuration.usePreloadedRoute&&this.setHeader("route",n.transport.server.sip_uri),this.setHeader("via",""),this.setHeader("max-forwards",e.UA.C.MAX_FORWARDS),d=i.to_uri||r,a=i.to_displayName||0===i.to_displayName?'"'+i.to_displayName+'" ':"",a+="<"+(d&&d.toRaw?d.toRaw():d)+">",a+=i.to_tag?";tag="+i.to_tag:"",this.to=new e.NameAddrHeader.parse(a),this.setHeader("to",a),h=i.from_uri||n.configuration.uri,u=i.from_displayName||0===i.from_displayName?'"'+i.from_displayName+'" ':n.configuration.displayName?'"'+n.configuration.displayName+'" ':"",u+="<"+(h&&h.toRaw?h.toRaw():h)+">;tag=",u+=i.from_tag||e.Utils.newTag(),this.from=new e.NameAddrHeader.parse(u),this.setHeader("from",u),c=i.call_id||n.configuration.sipjsId+e.Utils.createRandomToken(15),this.call_id=c,this.setHeader("call-id",c),l=i.cseq||Math.floor(1e4*Math.random()),this.cseq=l,this.setHeader("cseq",l+" "+t)}).prototype={setHeader:function(t,r){this.headers[e.Utils.headerize(t)]=r instanceof Array?r:[r]},getHeader:function(t){var r,n,i=this.extraHeaders.length,s=this.headers[e.Utils.headerize(t)];if(s){if(s[0])return s[0]}else for(r=new RegExp("^\\s*"+t+"\\s*:","i"),n=0;n<i;n++)if(s=this.extraHeaders[n],r.test(s))return s.substring(s.indexOf(":")+1).trim()},getHeaders:function(t){var r,n,i,s=this.headers[e.Utils.headerize(t)],o=[];if(s){for(n=s.length,r=0;r<n;r++)o.push(s[r]);return o}for(n=this.extraHeaders.length,i=new RegExp("^\\s*"+t+"\\s*:","i"),r=0;r<n;r++)s=this.extraHeaders[r],i.test(s)&&o.push(s.substring(s.indexOf(":")+1).trim());return o},hasHeader:function(t){var r,n,i=this.extraHeaders.length;if(this.headers[e.Utils.headerize(t)])return!0;for(r=new RegExp("^\\s*"+t+"\\s*:","i"),n=0;n<i;n++)if(r.test(this.extraHeaders[n]))return!0;return!1},toString:function(){var t,r,n,i="";for(t in i+=this.method+" "+(this.ruri.toRaw?this.ruri.toRaw():this.ruri)+" SIP/2.0\r\n",this.headers)for(r=this.headers[t].length,n=0;n<r;n++)i+=t+": "+this.headers[t][n]+"\r\n";for(r=this.extraHeaders.length,n=0;n<r;n++)i+=this.extraHeaders[n].trim()+"\r\n";return i+=s(this),i+="User-Agent: "+this.ua.configuration.userAgentString+"\r\n",this.body?"string"==typeof this.body?(i+="Content-Length: "+(r=e.Utils.str_utf8_length(this.body))+"\r\n\r\n",i+=this.body):this.body.body&&this.body.contentType?(r=e.Utils.str_utf8_length(this.body.body),i+="Content-Type: "+this.body.contentType+"\r\n",i+="Content-Length: "+r+"\r\n\r\n",i+=this.body.body):i+="Content-Length: 0\r\n\r\n":i+="Content-Length: 0\r\n\r\n",i}},(r=function(){this.data=null,this.headers=null,this.method=null,this.via=null,this.via_branch=null,this.call_id=null,this.cseq=null,this.from=null,this.from_tag=null,this.to=null,this.to_tag=null,this.body=null}).prototype={addHeader:function(t,r){var n={raw:r};t=e.Utils.headerize(t),this.headers[t]?this.headers[t].push(n):this.headers[t]=[n]},getHeader:function(t){var r=this.headers[e.Utils.headerize(t)];if(r)return r[0]?r[0].raw:void 0},getHeaders:function(t){var r,n,i=this.headers[e.Utils.headerize(t)],s=[];if(!i)return[];for(n=i.length,r=0;r<n;r++)s.push(i[r].raw);return s},hasHeader:function(t){return!!this.headers[e.Utils.headerize(t)]},parseHeader:function(t,r){var n,i,s;if(t=e.Utils.headerize(t),r=r||0,this.headers[t]){if(!(r>=this.headers[t].length))return i=(n=this.headers[t][r]).raw,n.parsed?n.parsed:-1===(s=e.Grammar.parse(i,t.replace(/-/g,"_")))?(this.headers[t].splice(r,1),void this.logger.warn('error parsing "'+t+'" header field with value "'+i+'"')):(n.parsed=s,s);this.logger.log('not so many "'+t+'" headers present')}else this.logger.log('header "'+t+'" not present')},s:function(e,t){return this.parseHeader(e,t)},setHeader:function(t,r){var n={raw:r};this.headers[e.Utils.headerize(t)]=[n]},toString:function(){return this.data}},((n=function(e){this.logger=e.getLogger("sip.sipmessage"),this.ua=e,this.headers={},this.ruri=null,this.transport=null,this.server_transaction=null}).prototype=new r).reply=function(t,r,n,i,o,a){var u,c,l,d,h,f=this.getHeader("To"),p=0,v=0;if(h=e.Utils.buildStatusLine(t,r),n=(n||[]).slice(),this.method===e.C.INVITE&&t>100&&t<=200)for(l=(u=this.getHeaders("record-route")).length;p<l;p++)h+="Record-Route: "+u[p]+"\r\n";for(l=(c=this.getHeaders("via")).length;v<l;v++)h+="Via: "+c[v]+"\r\n";for(!this.to_tag&&t>100?f+=";tag="+e.Utils.newTag():this.to_tag&&!this.s("to").hasParam("tag")&&(f+=";tag="+this.to_tag),h+="To: "+f+"\r\n",h+="From: "+this.getHeader("From")+"\r\n",h+="Call-ID: "+this.call_id+"\r\n",h+="CSeq: "+this.cseq+" "+this.method+"\r\n",l=n.length,d=0;d<l;d++)h+=n[d].trim()+"\r\n";return h+=s(this),h+="User-Agent: "+this.ua.configuration.userAgentString+"\r\n",i?"string"==typeof i?(h+="Content-Type: application/sdp\r\n",h+="Content-Length: "+(l=e.Utils.str_utf8_length(i))+"\r\n\r\n",h+=i):i.body&&i.contentType?(l=e.Utils.str_utf8_length(i.body),h+="Content-Type: "+i.contentType+"\r\n",h+="Content-Length: "+l+"\r\n\r\n",h+=i.body):h+="Content-Length: 0\r\n\r\n":h+="Content-Length: 0\r\n\r\n",this.server_transaction.receiveResponse(t,h).then(o,a),h},n.prototype.reply_sl=function(t,r){var n,i,s=0,o=this.getHeaders("via"),a=o.length;for(i=e.Utils.buildStatusLine(t,r);s<a;s++)i+="Via: "+o[s]+"\r\n";n=this.getHeader("To"),!this.to_tag&&t>100?n+=";tag="+e.Utils.newTag():this.to_tag&&!this.s("to").hasParam("tag")&&(n+=";tag="+this.to_tag),i+="To: "+n+"\r\n",i+="From: "+this.getHeader("From")+"\r\n",i+="Call-ID: "+this.call_id+"\r\n",i+="CSeq: "+this.cseq+" "+this.method+"\r\n",i+="User-Agent: "+this.ua.configuration.userAgentString+"\r\n",i+="Content-Length: 0\r\n\r\n",this.transport.send(i)},(i=function(e){this.logger=e.getLogger("sip.sipmessage"),this.headers={},this.status_code=null,this.reason_phrase=null}).prototype=new r,e.OutgoingRequest=t,e.IncomingRequest=n,e.IncomingResponse=i}},function(e,t,r){"use strict";e.exports=function(e){var t;(t=function(t,r,n,i,s,o){var a,u,c,l;if(!n)throw new TypeError('missing or invalid "host" parameter');for(a in t=t||e.C.SIP,this.parameters={},this.headers={},s)this.setParam(a,s[a]);for(u in o)this.setHeader(u,o[u]);c={scheme:t,user:r,host:n,port:i},l={scheme:t.toLowerCase(),user:r,host:n.toLowerCase(),port:i},Object.defineProperties(this,{_normal:{get:function(){return l}},_raw:{get:function(){return c}},scheme:{get:function(){return l.scheme},set:function(e){c.scheme=e,l.scheme=e.toLowerCase()}},user:{get:function(){return l.user},set:function(e){l.user=c.user=e}},host:{get:function(){return l.host},set:function(e){c.host=e,l.host=e.toLowerCase()}},aor:{get:function(){return l.user+"@"+l.host}},port:{get:function(){return l.port},set:function(e){l.port=c.port=0===e?e:parseInt(e,10)||null}}})}).prototype={setParam:function(e,t){e&&(this.parameters[e.toLowerCase()]=void 0===t||null===t?null:t.toString().toLowerCase())},getParam:function(e){if(e)return this.parameters[e.toLowerCase()]},hasParam:function(e){if(e)return!!this.parameters.hasOwnProperty(e.toLowerCase())},deleteParam:function(e){var t;if(e=e.toLowerCase(),this.parameters.hasOwnProperty(e))return t=this.parameters[e],delete this.parameters[e],t},clearParams:function(){this.parameters={}},setHeader:function(t,r){this.headers[e.Utils.headerize(t)]=r instanceof Array?r:[r]},getHeader:function(t){if(t)return this.headers[e.Utils.headerize(t)]},hasHeader:function(t){if(t)return!!this.headers.hasOwnProperty(e.Utils.headerize(t))},deleteHeader:function(t){var r;if(t=e.Utils.headerize(t),this.headers.hasOwnProperty(t))return r=this.headers[t],delete this.headers[t],r},clearHeaders:function(){this.headers={}},clone:function(){return new t(this._raw.scheme,this._raw.user,this._raw.host,this._raw.port,JSON.parse(JSON.stringify(this.parameters)),JSON.parse(JSON.stringify(this.headers)))},toRaw:function(){return this._toString(this._raw)},toString:function(){return this._toString(this._normal)},_toString:function(t){var r,n,i,s,o=[];for(n in s=t.scheme+":",t.scheme.toLowerCase().match("^sips?$")||(s+="//"),t.user&&(s+=e.Utils.escapeUser(t.user)+"@"),s+=t.host,(t.port||0===t.port)&&(s+=":"+t.port),this.parameters)s+=";"+n,null!==this.parameters[n]&&(s+="="+this.parameters[n]);for(r in this.headers)for(i in this.headers[r])o.push(r+"="+this.headers[r][i]);return o.length>0&&(s+="?"+o.join("&")),s}},t.parse=function(t){return-1!==(t=e.Grammar.parse(t,"SIP_URI"))?t:void 0},e.URI=t}},function(e,t,r){"use strict";e.exports=function(e){var t;(t=function(t,r,n){var i;if(!(t&&t instanceof e.URI))throw new TypeError('missing or invalid "uri" parameter');for(i in this.uri=t,this.parameters={},n)this.setParam(i,n[i]);Object.defineProperties(this,{friendlyName:{get:function(){return this.displayName||t.aor}},displayName:{get:function(){return r},set:function(e){r=0===e?"0":e}}})}).prototype={setParam:function(e,t){e&&(this.parameters[e.toLowerCase()]=void 0===t||null===t?null:t.toString())},getParam:e.URI.prototype.getParam,hasParam:e.URI.prototype.hasParam,deleteParam:e.URI.prototype.deleteParam,clearParams:e.URI.prototype.clearParams,clone:function(){return new t(this.uri.clone(),this.displayName,JSON.parse(JSON.stringify(this.parameters)))},toString:function(){var e,t;for(t in e=this.displayName||0===this.displayName?'"'+this.displayName+'" ':"",e+="<"+this.uri.toString()+">",this.parameters)e+=";"+t,null!==this.parameters[t]&&(e+="="+this.parameters[t]);return e}},t.parse=function(t){return-1!==(t=e.Grammar.parse(t,"Name_Addr_Header"))?t:void 0},e.NameAddrHeader=t}},function(e,t,r){"use strict";e.exports=function(e){var t={STATUS_TRYING:1,STATUS_PROCEEDING:2,STATUS_CALLING:3,STATUS_ACCEPTED:4,STATUS_COMPLETED:5,STATUS_TERMINATED:6,STATUS_CONFIRMED:7,NON_INVITE_CLIENT:"nict",NON_INVITE_SERVER:"nist",INVITE_CLIENT:"ict",INVITE_SERVER:"ist"};function r(e,t,r){var n;return n="SIP/2.0/"+(e.ua.configuration.hackViaTcp?"TCP":t.server.scheme),n+=" "+e.ua.configuration.viaHost+";branch="+r,e.ua.configuration.forceRport&&(n+=";rport"),n}var n=function(e,n,i){var s;this.type=t.NON_INVITE_CLIENT,this.transport=i,this.id="z9hG4bK"+Math.floor(1e7*Math.random()),this.request_sender=e,this.request=n,this.logger=e.ua.getLogger("sip.transaction.nict",this.id),s=r(e,i,this.id),this.request.setHeader("via",s),this.request_sender.ua.newTransaction(this)};(n.prototype=Object.create(e.EventEmitter.prototype)).stateChanged=function(e){this.state=e,this.emit("stateChanged")},n.prototype.send=function(){this.stateChanged(t.STATUS_TRYING),this.F=e.Timers.setTimeout(this.timer_F.bind(this),e.Timers.TIMER_F),this.transport.send(this.request)||this.onTransportError()},n.prototype.onTransportError=function(){this.logger.log("transport error occurred, deleting non-INVITE client transaction "+this.id),e.Timers.clearTimeout(this.F),e.Timers.clearTimeout(this.K),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this),this.request_sender.onTransportError()},n.prototype.timer_F=function(){this.logger.log("Timer F expired for non-INVITE client transaction "+this.id),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this),this.request_sender.onRequestTimeout()},n.prototype.timer_K=function(){this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this)},n.prototype.receiveResponse=function(r){var n=r.status_code;if(n<200)switch(this.state){case t.STATUS_TRYING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_PROCEEDING),this.request_sender.receiveResponse(r)}else switch(this.state){case t.STATUS_TRYING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_COMPLETED),e.Timers.clearTimeout(this.F),408===n?this.request_sender.onRequestTimeout():this.request_sender.receiveResponse(r),this.K=e.Timers.setTimeout(this.timer_K.bind(this),e.Timers.TIMER_K)}};var i=function(e,n,i){var s,o=this;this.type=t.INVITE_CLIENT,this.transport=i,this.id="z9hG4bK"+Math.floor(1e7*Math.random()),this.request_sender=e,this.request=n,this.logger=e.ua.getLogger("sip.transaction.ict",this.id),s=r(e,i,this.id),this.request.setHeader("via",s),this.request_sender.ua.newTransaction(this),this.request.cancel=function(e,t){for(var r=(t=(t||[]).slice()).length,n=null,i=0;i<r;i++)n=(n||"")+t[i].trim()+"\r\n";o.cancel_request(o,e,n)}};(i.prototype=Object.create(e.EventEmitter.prototype)).stateChanged=function(e){this.state=e,this.emit("stateChanged")},i.prototype.send=function(){this.stateChanged(t.STATUS_CALLING),this.B=e.Timers.setTimeout(this.timer_B.bind(this),e.Timers.TIMER_B),this.transport.send(this.request)||this.onTransportError()},i.prototype.onTransportError=function(){this.logger.log("transport error occurred, deleting INVITE client transaction "+this.id),e.Timers.clearTimeout(this.B),e.Timers.clearTimeout(this.D),e.Timers.clearTimeout(this.M),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this),this.state!==t.STATUS_ACCEPTED&&this.request_sender.onTransportError()},i.prototype.timer_M=function(){this.logger.log("Timer M expired for INVITE client transaction "+this.id),this.state===t.STATUS_ACCEPTED&&(e.Timers.clearTimeout(this.B),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this))},i.prototype.timer_B=function(){this.logger.log("Timer B expired for INVITE client transaction "+this.id),this.state===t.STATUS_CALLING&&(this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this),this.request_sender.onRequestTimeout())},i.prototype.timer_D=function(){this.logger.log("Timer D expired for INVITE client transaction "+this.id),e.Timers.clearTimeout(this.B),this.stateChanged(t.STATUS_TERMINATED),this.request_sender.ua.destroyTransaction(this)},i.prototype.sendACK=function(t){this.ack="ACK "+this.request.ruri+" SIP/2.0\r\n",this.ack+="Via: "+this.request.headers.Via.toString()+"\r\n",this.request.headers.Route&&(this.ack+="Route: "+this.request.headers.Route.toString()+"\r\n"),this.ack+="To: "+t.getHeader("to")+"\r\n",this.ack+="From: "+this.request.headers.From.toString()+"\r\n",this.ack+="Call-ID: "+this.request.headers["Call-ID"].toString()+"\r\n",this.ack+="Content-Length: 0\r\n",this.ack+="CSeq: "+this.request.headers.CSeq.toString().split(" ")[0],this.ack+=" ACK\r\n\r\n",this.D=e.Timers.setTimeout(this.timer_D.bind(this),e.Timers.TIMER_D),this.transport.send(this.ack)},i.prototype.cancel_request=function(r,n,i){var s=r.request;this.cancel=e.C.CANCEL+" "+s.ruri+" SIP/2.0\r\n",this.cancel+="Via: "+s.headers.Via.toString()+"\r\n",this.request.headers.Route&&(this.cancel+="Route: "+s.headers.Route.toString()+"\r\n"),this.cancel+="To: "+s.headers.To.toString()+"\r\n",this.cancel+="From: "+s.headers.From.toString()+"\r\n",this.cancel+="Call-ID: "+s.headers["Call-ID"].toString()+"\r\n",this.cancel+="CSeq: "+s.headers.CSeq.toString().split(" ")[0]+" CANCEL\r\n",n&&(this.cancel+="Reason: "+n+"\r\n"),i&&(this.cancel+=i),this.cancel+="Content-Length: 0\r\n\r\n",this.state===t.STATUS_PROCEEDING&&this.transport.send(this.cancel)},i.prototype.receiveResponse=function(r){var n=r.status_code;if(n>=100&&n<=199)switch(this.state){case t.STATUS_CALLING:this.stateChanged(t.STATUS_PROCEEDING),this.request_sender.receiveResponse(r),this.cancel&&this.transport.send(this.cancel);break;case t.STATUS_PROCEEDING:this.request_sender.receiveResponse(r)}else if(n>=200&&n<=299)switch(this.state){case t.STATUS_CALLING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_ACCEPTED),this.M=e.Timers.setTimeout(this.timer_M.bind(this),e.Timers.TIMER_M),this.request_sender.receiveResponse(r);break;case t.STATUS_ACCEPTED:this.request_sender.receiveResponse(r)}else if(n>=300&&n<=699)switch(this.state){case t.STATUS_CALLING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_COMPLETED),this.sendACK(r),this.request_sender.receiveResponse(r);break;case t.STATUS_COMPLETED:this.sendACK(r)}};var s=function(e,t,n){var i;this.transport=n,this.id="z9hG4bK"+Math.floor(1e7*Math.random()),this.request_sender=e,this.request=t,this.logger=e.ua.getLogger("sip.transaction.nict",this.id),i=r(e,n,this.id),this.request.setHeader("via",i)};(s.prototype=Object.create(e.EventEmitter.prototype)).send=function(){this.transport.send(this.request)||this.onTransportError()},s.prototype.onTransportError=function(){this.logger.log("transport error occurred, for an ACK client transaction "+this.id),this.request_sender.onTransportError()};var o=function(e,r){this.type=t.NON_INVITE_SERVER,this.id=e.via_branch,this.request=e,this.transport=e.transport,this.ua=r,this.last_response="",e.server_transaction=this,this.logger=r.getLogger("sip.transaction.nist",this.id),this.state=t.STATUS_TRYING,r.newTransaction(this)};(o.prototype=Object.create(e.EventEmitter.prototype)).stateChanged=function(e){this.state=e,this.emit("stateChanged")},o.prototype.timer_J=function(){this.logger.log("Timer J expired for non-INVITE server transaction "+this.id),this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this)},o.prototype.onTransportError=function(){this.transportError||(this.transportError=!0,this.logger.log("transport error occurred, deleting non-INVITE server transaction "+this.id),e.Timers.clearTimeout(this.J),this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this))},o.prototype.receiveResponse=function(r,n){var i=e.Utils.defer();if(100===r)switch(this.state){case t.STATUS_TRYING:this.stateChanged(t.STATUS_PROCEEDING),this.transport.send(n)||this.onTransportError();break;case t.STATUS_PROCEEDING:this.last_response=n,this.transport.send(n)?i.resolve():(this.onTransportError(),i.reject())}else if(r>=200&&r<=699)switch(this.state){case t.STATUS_TRYING:case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_COMPLETED),this.last_response=n,this.J=e.Timers.setTimeout(this.timer_J.bind(this),e.Timers.TIMER_J),this.transport.send(n)?i.resolve():(this.onTransportError(),i.reject())}return i.promise};var a=function(e,r){this.type=t.INVITE_SERVER,this.id=e.via_branch,this.request=e,this.transport=e.transport,this.ua=r,this.last_response="",e.server_transaction=this,this.logger=r.getLogger("sip.transaction.ist",this.id),this.state=t.STATUS_PROCEEDING,r.newTransaction(this),this.resendProvisionalTimer=null,e.reply(100)};(a.prototype=Object.create(e.EventEmitter.prototype)).stateChanged=function(e){this.state=e,this.emit("stateChanged")},a.prototype.timer_H=function(){this.logger.log("Timer H expired for INVITE server transaction "+this.id),this.state===t.STATUS_COMPLETED&&this.logger.warn("transactions","ACK for INVITE server transaction was never received, call will be terminated"),this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this)},a.prototype.timer_I=function(){this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this)},a.prototype.timer_L=function(){this.logger.log("Timer L expired for INVITE server transaction "+this.id),this.state===t.STATUS_ACCEPTED&&(this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this))},a.prototype.onTransportError=function(){this.transportError||(this.transportError=!0,this.logger.log("transport error occurred, deleting INVITE server transaction "+this.id),null!==this.resendProvisionalTimer&&(e.Timers.clearInterval(this.resendProvisionalTimer),this.resendProvisionalTimer=null),e.Timers.clearTimeout(this.L),e.Timers.clearTimeout(this.H),e.Timers.clearTimeout(this.I),this.stateChanged(t.STATUS_TERMINATED),this.ua.destroyTransaction(this))},a.prototype.resend_provisional=function(){this.transport.send(this.last_response)||this.onTransportError()},a.prototype.receiveResponse=function(r,n){var i=this,s=e.Utils.defer();if(r>=100&&r<=199)switch(this.state){case t.STATUS_PROCEEDING:this.transport.send(n)||this.onTransportError(),this.last_response=n}if(r>100&&r<=199&&this.state===t.STATUS_PROCEEDING)null===this.resendProvisionalTimer&&(this.resendProvisionalTimer=e.Timers.setInterval(i.resend_provisional.bind(i),e.Timers.PROVISIONAL_RESPONSE_INTERVAL));else if(r>=200&&r<=299)switch(this.state){case t.STATUS_PROCEEDING:this.stateChanged(t.STATUS_ACCEPTED),this.last_response=n,this.L=e.Timers.setTimeout(i.timer_L.bind(i),e.Timers.TIMER_L),null!==this.resendProvisionalTimer&&(e.Timers.clearInterval(this.resendProvisionalTimer),this.resendProvisionalTimer=null);case t.STATUS_ACCEPTED:this.transport.send(n)?s.resolve():(this.onTransportError(),s.reject())}else if(r>=300&&r<=699)switch(this.state){case t.STATUS_PROCEEDING:null!==this.resendProvisionalTimer&&(e.Timers.clearInterval(this.resendProvisionalTimer),this.resendProvisionalTimer=null),this.transport.send(n)?(this.stateChanged(t.STATUS_COMPLETED),this.H=e.Timers.setTimeout(i.timer_H.bind(i),e.Timers.TIMER_H),s.resolve()):(this.onTransportError(),s.reject())}return s.promise};e.Transactions={C:t,checkTransaction:function(r,n){var i;switch(n.method){case e.C.INVITE:if(i=r.transactions.ist[n.via_branch]){switch(i.state){case t.STATUS_PROCEEDING:i.transport.send(i.last_response)}return!0}break;case e.C.ACK:if(!(i=r.transactions.ist[n.via_branch]))return!1;if(i.state===t.STATUS_ACCEPTED)return!1;if(i.state===t.STATUS_COMPLETED)return i.stateChanged(t.STATUS_CONFIRMED),i.I=e.Timers.setTimeout(i.timer_I.bind(i),e.Timers.TIMER_I),!0;break;case e.C.CANCEL:return(i=r.transactions.ist[n.via_branch])?(n.reply_sl(200),i.state!==t.STATUS_PROCEEDING):(n.reply_sl(481),!0);default:if(i=r.transactions.nist[n.via_branch]){switch(i.state){case t.STATUS_TRYING:break;case t.STATUS_PROCEEDING:case t.STATUS_COMPLETED:i.transport.send(i.last_response)}return!0}}},NonInviteClientTransaction:n,InviteClientTransaction:i,AckClientTransaction:s,NonInviteServerTransaction:o,InviteServerTransaction:a}}},function(e,t,r){"use strict";e.exports=function(e){var t,n=r(21)(e),i={STATUS_EARLY:1,STATUS_CONFIRMED:2};(t=function(t,r,n,s){var o;if(this.uac_pending_reply=!1,this.uas_pending_reply=!1,!r.hasHeader("contact"))return{error:"unable to create a Dialog without Contact header field"};s=r instanceof e.IncomingResponse?r.status_code<200?i.STATUS_EARLY:i.STATUS_CONFIRMED:s||i.STATUS_CONFIRMED,o=r.parseHeader("contact"),"UAS"===n?(this.id={call_id:r.call_id,local_tag:r.to_tag,remote_tag:r.from_tag,toString:function(){return this.call_id+this.local_tag+this.remote_tag}},this.state=s,this.remote_seqnum=r.cseq,this.local_uri=r.parseHeader("to").uri,this.remote_uri=r.parseHeader("from").uri,this.remote_target=o.uri,this.route_set=r.getHeaders("record-route"),this.invite_seqnum=r.cseq,this.local_seqnum=r.cseq):"UAC"===n&&(this.id={call_id:r.call_id,local_tag:r.from_tag,remote_tag:r.to_tag,toString:function(){return this.call_id+this.local_tag+this.remote_tag}},this.state=s,this.invite_seqnum=r.cseq,this.local_seqnum=r.cseq,this.local_uri=r.parseHeader("from").uri,this.pracked=[],this.remote_uri=r.parseHeader("to").uri,this.remote_target=o.uri,this.route_set=r.getHeaders("record-route").reverse(),this.state!==i.STATUS_EARLY||t.hasOffer||(this.mediaHandler=t.mediaHandlerFactory(t))),this.logger=t.ua.getLogger("sip.dialog",this.id.toString()),this.owner=t,t.ua.dialogs[this.id.toString()]=this,this.logger.log("new "+n+" dialog created with status "+(this.state===i.STATUS_EARLY?"EARLY":"CONFIRMED")),t.emit("dialog",this)}).prototype={update:function(e,t){this.state=i.STATUS_CONFIRMED,this.logger.log("dialog "+this.id.toString()+"  changed to CONFIRMED state"),"UAC"===t&&(this.route_set=e.getHeaders("record-route").reverse())},terminate:function(){this.logger.log("dialog "+this.id.toString()+" deleted"),this.mediaHandler&&this.state!==i.STATUS_CONFIRMED&&this.mediaHandler.peerConnection.close(),delete this.owner.ua.dialogs[this.id.toString()]},createRequest:function(t,r,n){var i,s;return r=(r||[]).slice(),this.local_seqnum||(this.local_seqnum=Math.floor(1e4*Math.random())),i=t===e.C.CANCEL||t===e.C.ACK?this.invite_seqnum:this.local_seqnum+=1,(s=new e.OutgoingRequest(t,this.remote_target,this.owner.ua,{cseq:i,call_id:this.id.call_id,from_uri:this.local_uri,from_tag:this.id.local_tag,to_uri:this.remote_uri,to_tag:this.id.remote_tag,route_set:this.route_set},r,n)).dialog=this,s},checkInDialogRequest:function(t){var r=this;if(this.remote_seqnum){if(t.cseq<this.remote_seqnum)return t.method!==e.C.ACK&&t.reply(500),t.cseq===this.invite_seqnum;t.cseq>this.remote_seqnum&&(this.remote_seqnum=t.cseq)}else this.remote_seqnum=t.cseq;switch(t.method){case e.C.INVITE:if(!0===this.uac_pending_reply)t.reply(491);else{if(!0===this.uas_pending_reply){var n=1+(10*Math.random()|0);return t.reply(500,null,["Retry-After:"+n]),!1}this.uas_pending_reply=!0,t.server_transaction.on("stateChanged",function t(){this.state!==e.Transactions.C.STATUS_ACCEPTED&&this.state!==e.Transactions.C.STATUS_COMPLETED&&this.state!==e.Transactions.C.STATUS_TERMINATED||(this.removeListener("stateChanged",t),r.uas_pending_reply=!1,!1===r.uac_pending_reply&&r.owner.onReadyToReinvite())})}t.hasHeader("contact")&&t.server_transaction.on("stateChanged",function(){this.state===e.Transactions.C.STATUS_ACCEPTED&&(r.remote_target=t.parseHeader("contact").uri)});break;case e.C.NOTIFY:t.hasHeader("contact")&&t.server_transaction.on("stateChanged",function(){this.state===e.Transactions.C.STATUS_COMPLETED&&(r.remote_target=t.parseHeader("contact").uri)})}return!0},sendRequest:function(e,t,r){var i=((r=r||{}).extraHeaders||[]).slice(),s=null;r.body&&(r.body.body?s=r.body:((s={}).body=r.body,r.contentType&&(s.contentType=r.contentType)));var o=this.createRequest(t,i,s);return new n(this,e,o).send(),o},receiveRequest:function(e){this.checkInDialogRequest(e)&&this.owner.receiveRequest(e)}},t.C=i,e.Dialog=t}},function(e,t,r){"use strict";e.exports=function(e){var t;return(t=function(e,t,r){this.dialog=e,this.applicant=t,this.request=r,this.reattempt=!1,this.reattemptTimer=null}).prototype={send:function(){var t=this,r=new e.RequestSender(this,this.dialog.owner.ua);r.send(),this.request.method===e.C.INVITE&&r.clientTransaction.state!==e.Transactions.C.STATUS_TERMINATED&&(this.dialog.uac_pending_reply=!0,r.clientTransaction.on("stateChanged",function r(){this.state!==e.Transactions.C.STATUS_ACCEPTED&&this.state!==e.Transactions.C.STATUS_COMPLETED&&this.state!==e.Transactions.C.STATUS_TERMINATED||(this.removeListener("stateChanged",r),t.dialog.uac_pending_reply=!1,!1===t.dialog.uas_pending_reply&&t.dialog.owner.onReadyToReinvite())}))},onRequestTimeout:function(){this.applicant.onRequestTimeout()},onTransportError:function(){this.applicant.onTransportError()},receiveResponse:function(t){var r=this;408===t.status_code||481===t.status_code?this.applicant.onDialogError(t):t.method===e.C.INVITE&&491===t.status_code?this.reattempt?this.applicant.receiveResponse(t):(this.request.cseq.value=this.dialog.local_seqnum+=1,this.reattemptTimer=e.Timers.setTimeout(function(){r.applicant.owner.status!==e.Session.C.STATUS_TERMINATED&&(r.reattempt=!0,r.request_sender.send())},this.getReattemptTimeout())):this.applicant.receiveResponse(t)}},t}},function(e,t,r){"use strict";e.exports=function(e){var t;(t=function(t,r){this.logger=r.getLogger("sip.requestsender"),this.ua=r,this.applicant=t,this.method=t.request.method,this.request=t.request,this.credentials=null,this.challenged=!1,this.staled=!1,r.status!==e.UA.C.STATUS_USER_CLOSED||this.method===e.C.BYE&&this.method===e.C.ACK||this.onTransportError()}).prototype={send:function(){switch(this.method){case"INVITE":this.clientTransaction=new e.Transactions.InviteClientTransaction(this,this.request,this.ua.transport);break;case"ACK":this.clientTransaction=new e.Transactions.AckClientTransaction(this,this.request,this.ua.transport);break;default:this.clientTransaction=new e.Transactions.NonInviteClientTransaction(this,this.request,this.ua.transport)}return this.clientTransaction.send(),this.clientTransaction},onRequestTimeout:function(){this.applicant.onRequestTimeout()},onTransportError:function(){this.applicant.onTransportError()},receiveResponse:function(t){var r,n,i,s=t.status_code;if(401===s||407===s){if(401===t.status_code?(n=t.parseHeader("www-authenticate"),i="authorization"):(n=t.parseHeader("proxy-authenticate"),i="proxy-authorization"),!n)return this.logger.warn(t.status_code+" with wrong or missing challenge, cannot authenticate"),void this.applicant.receiveResponse(t);if(!this.challenged||!this.staled&&!0===n.stale){if(this.credentials||(this.credentials=this.ua.configuration.authenticationFactory(this.ua)),!this.credentials.authenticate(this.request,n))return void this.applicant.receiveResponse(t);this.challenged=!0,n.stale&&(this.staled=!0),t.method===e.C.REGISTER?r=this.applicant.cseq+=1:this.request.dialog?r=this.request.dialog.local_seqnum+=1:(r=this.request.cseq+1,this.request.cseq=r),this.request.setHeader("cseq",r+" "+this.method),this.request.setHeader(i,this.credentials.toString()),this.send()}else this.applicant.receiveResponse(t)}else this.applicant.receiveResponse(t)}},e.RequestSender=t}},function(e,t,r){"use strict";e.exports=function(e){var t;(t=function(t){var r={};this.registrar=t.configuration.registrarServer,this.expires=t.configuration.registerExpires,this.contact=t.contact.toString(),this.contact+=";reg-id=1",this.contact+=';+sip.instance="<urn:uuid:'+t.configuration.instanceId+'>"',this.call_id=e.Utils.createRandomToken(22),this.cseq=80,this.to_uri=t.configuration.uri,r.to_uri=this.to_uri,r.to_displayName=t.configuration.displayName,r.call_id=this.call_id,r.cseq=this.cseq,e.Utils.augment(this,e.ClientContext,[t,"REGISTER",this.registrar,{params:r}]),this.registrationTimer=null,this.registrationExpiredTimer=null,this.registered=!1,this.logger=t.getLogger("sip.registercontext")}).prototype={register:function(t){var r,n=this;this.options=t||{},(r=(this.options.extraHeaders||[]).slice()).push("Contact: "+this.contact+";expires="+this.expires),r.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),this.closeHeaders=this.options.closeWithHeaders?(this.options.extraHeaders||[]).slice():[],this.receiveResponse=function(t){var r,i,s,o=t.getHeaders("contact").length;if(t.cseq===this.cseq)switch(null!==this.registrationTimer&&(e.Timers.clearTimeout(this.registrationTimer),this.registrationTimer=null),!0){case/^1[0-9]{2}$/.test(t.status_code):this.emit("progress",t);break;case/^2[0-9]{2}$/.test(t.status_code):if(this.emit("accepted",t),t.hasHeader("expires")&&(i=t.getHeader("expires")),null!==this.registrationExpiredTimer&&(e.Timers.clearTimeout(this.registrationExpiredTimer),this.registrationExpiredTimer=null),!o){this.logger.warn("no Contact header in response to REGISTER, response ignored");break}for(;o--;){if((r=t.parseHeader("contact",o)).uri.user===this.ua.contact.uri.user){i=r.getParam("expires");break}r=null}if(!r){this.logger.warn("no Contact header pointing to us, response ignored");break}i||(i=this.expires),this.registrationTimer=e.Timers.setTimeout(function(){n.registrationTimer=null,n.register(n.options)},1e3*i-3e3),this.registrationExpiredTimer=e.Timers.setTimeout(function(){n.logger.warn("registration expired"),n.registered&&n.unregistered(null,e.C.causes.EXPIRES)},1e3*i),r.hasParam("temp-gruu")&&(this.ua.contact.temp_gruu=e.URI.parse(r.getParam("temp-gruu").replace(/"/g,""))),r.hasParam("pub-gruu")&&(this.ua.contact.pub_gruu=e.URI.parse(r.getParam("pub-gruu").replace(/"/g,""))),this.registered=!0,this.emit("registered",t||null);break;case/^423$/.test(t.status_code):t.hasHeader("min-expires")?(this.expires=t.getHeader("min-expires"),this.register(this.options)):(this.logger.warn("423 response received for REGISTER without Min-Expires"),this.registrationFailure(t,e.C.causes.SIP_FAILURE_CODE));break;default:s=e.Utils.sipErrorCause(t.status_code),this.registrationFailure(t,s)}},this.onRequestTimeout=function(){this.registrationFailure(null,e.C.causes.REQUEST_TIMEOUT)},this.onTransportError=function(){this.registrationFailure(null,e.C.causes.CONNECTION_ERROR)},this.cseq++,this.request.cseq=this.cseq,this.request.setHeader("cseq",this.cseq+" REGISTER"),this.request.extraHeaders=r,this.send()},registrationFailure:function(e,t){this.emit("failed",e||null,t||null)},onTransportClosed:function(){this.registered_before=this.registered,null!==this.registrationTimer&&(e.Timers.clearTimeout(this.registrationTimer),this.registrationTimer=null),null!==this.registrationExpiredTimer&&(e.Timers.clearTimeout(this.registrationExpiredTimer),this.registrationExpiredTimer=null),this.registered&&this.unregistered(null,e.C.causes.CONNECTION_ERROR)},onTransportConnected:function(){this.register(this.options)},close:function(){var e={all:!1,extraHeaders:this.closeHeaders};this.registered_before=this.registered,this.unregister(e)},unregister:function(t){var r;t=t||{},this.registered||t.all?(r=(t.extraHeaders||[]).slice(),this.registered=!1,null!==this.registrationTimer&&(e.Timers.clearTimeout(this.registrationTimer),this.registrationTimer=null),t.all?(r.push("Contact: *"),r.push("Expires: 0")):r.push("Contact: "+this.contact+";expires=0"),this.receiveResponse=function(t){var r;switch(!0){case/^1[0-9]{2}$/.test(t.status_code):this.emit("progress",t);break;case/^2[0-9]{2}$/.test(t.status_code):this.emit("accepted",t),null!==this.registrationExpiredTimer&&(e.Timers.clearTimeout(this.registrationExpiredTimer),this.registrationExpiredTimer=null),this.unregistered(t);break;default:r=e.Utils.sipErrorCause(t.status_code),this.unregistered(t,r)}},this.onRequestTimeout=function(){},this.onTransportError=function(){},this.cseq++,this.request.cseq=this.cseq,this.request.setHeader("cseq",this.cseq+" REGISTER"),this.request.extraHeaders=r,this.send()):this.logger.warn("already unregistered")},unregistered:function(e,t){this.registered=!1,this.emit("unregistered",e||null,t||null)}},e.RegisterContext=t}},function(e,t,r){"use strict";e.exports=function(e){var t=function(e,t){e=e,t=t};return t.prototype=Object.create(e.prototype,{isReady:{value:function(){}},close:{value:function(){}},getDescription:{value:function(e){e=e}},hasDescription:{value:function(e){e=e}},setDescription:{value:function(e){e=e}}}),t}},function(e,t,r){"use strict";e.exports=function(e){var t;((t=function(t,r,n,i){var s=n;if(void 0===n)throw new TypeError("Not enough arguments");if(this.ua=t,this.logger=t.getLogger("sip.clientcontext"),this.method=r,!(n=t.normalizeTarget(n)))throw new TypeError("Invalid target: "+s);(i=Object.create(i||Object.prototype)).extraHeaders=(i.extraHeaders||[]).slice(),this.request=new e.OutgoingRequest(this.method,n,this.ua,i.params,i.extraHeaders),i.body&&(this.body={},this.body.body=i.body,i.contentType&&(this.body.contentType=i.contentType),this.request.body=this.body),this.localIdentity=this.request.from,this.remoteIdentity=this.request.to,this.data={}}).prototype=Object.create(e.EventEmitter.prototype)).send=function(){return new e.RequestSender(this,this.ua).send(),this},t.prototype.cancel=function(t){(t=t||{}).extraHeaders=(t.extraHeaders||[]).slice();var r=e.Utils.getCancelReason(t.status_code,t.reason_phrase);this.request.cancel(r,t.extraHeaders),this.emit("cancel")},t.prototype.receiveResponse=function(t){var r=e.Utils.getReasonPhrase(t.status_code);switch(!0){case/^1[0-9]{2}$/.test(t.status_code):this.emit("progress",t,r);break;case/^2[0-9]{2}$/.test(t.status_code):this.ua.applicants[this]&&delete this.ua.applicants[this],this.emit("accepted",t,r);break;default:this.ua.applicants[this]&&delete this.ua.applicants[this],this.emit("rejected",t,r),this.emit("failed",t,r)}},t.prototype.onRequestTimeout=function(){this.emit("failed",null,e.C.causes.REQUEST_TIMEOUT)},t.prototype.onTransportError=function(){this.emit("failed",null,e.C.causes.CONNECTION_ERROR)},e.ClientContext=t}},function(e,t,r){"use strict";e.exports=function(e){var t;((t=function(t,r){this.ua=t,this.logger=t.getLogger("sip.servercontext"),this.request=r,r.method===e.C.INVITE?this.transaction=new e.Transactions.InviteServerTransaction(r,t):this.transaction=new e.Transactions.NonInviteServerTransaction(r,t),r.body&&(this.body=r.body),r.hasHeader("Content-Type")&&(this.contentType=r.getHeader("Content-Type")),this.method=r.method,this.data={},this.localIdentity=r.to,this.remoteIdentity=r.from}).prototype=Object.create(e.EventEmitter.prototype)).progress=function(e){return(e=Object.create(e||Object.prototype)).statusCode||(e.statusCode=180),e.minCode=100,e.maxCode=199,e.events=["progress"],this.reply(e)},t.prototype.accept=function(e){return(e=Object.create(e||Object.prototype)).statusCode||(e.statusCode=200),e.minCode=200,e.maxCode=299,e.events=["accepted"],this.reply(e)},t.prototype.reject=function(e){return(e=Object.create(e||Object.prototype)).statusCode||(e.statusCode=480),e.minCode=300,e.maxCode=699,e.events=["rejected","failed"],this.reply(e)},t.prototype.reply=function(t){var r,n=(t=t||{}).statusCode||100,i=t.minCode||100,s=t.maxCode||699,o=e.Utils.getReasonPhrase(n,t.reasonPhrase),a=t.extraHeaders||[],u=t.body,c=t.events||[];if(n<i||n>s)throw new TypeError("Invalid statusCode: "+n);return r=this.request.reply(n,o,a,u),c.forEach(function(e){this.emit(e,r,o)},this),this},t.prototype.onRequestTimeout=function(){this.emit("failed",null,e.C.causes.REQUEST_TIMEOUT)},t.prototype.onTransportError=function(){this.emit("failed",null,e.C.causes.CONNECTION_ERROR)},e.ServerContext=t}},function(e,t,r){"use strict";e.exports=function(e,t){var n,i,s,o=r(28)(e),a={STATUS_NULL:0,STATUS_INVITE_SENT:1,STATUS_1XX_RECEIVED:2,STATUS_INVITE_RECEIVED:3,STATUS_WAITING_FOR_ANSWER:4,STATUS_ANSWERED:5,STATUS_WAITING_FOR_PRACK:6,STATUS_WAITING_FOR_ACK:7,STATUS_CANCELED:8,STATUS_TERMINATED:9,STATUS_ANSWERED_WAITING_FOR_PRACK:10,STATUS_EARLY_MEDIA:11,STATUS_CONFIRMED:12};(n=function(t){this.status=a.STATUS_NULL,this.dialog=null,this.earlyDialogs={},this.mediaHandlerFactory=t||e.WebRTC.MediaHandler.defaultFactory,this.hasOffer=!1,this.hasAnswer=!1,this.timers={ackTimer:null,expiresTimer:null,invite2xxTimer:null,userNoAnswerTimer:null,rel1xxTimer:null,prackTimer:null},this.startTime=null,this.endTime=null,this.tones=null,this.local_hold=!1,this.remote_hold=!1,this.pending_actions={actions:[],length:function(){return this.actions.length},isPending:function(e){for(var t=0,r=this.actions.length;t<r;t++)if(this.actions[t].name===e)return!0;return!1},shift:function(){return this.actions.shift()},push:function(e){this.actions.push({name:e})},pop:function(e){for(var t=0,r=this.actions.length;t<r;t++)this.actions[t].name===e&&(this.actions.splice(t,1),r--,t--)}},this.early_sdp=null,this.rel100=e.C.supported.UNSUPPORTED}).prototype={dtmf:function(t,r){var n=[],i=this;if(r=r||{},void 0===t)throw new TypeError("Not enough arguments");if(this.status!==a.STATUS_CONFIRMED&&this.status!==a.STATUS_WAITING_FOR_ACK)throw new e.Exceptions.InvalidStateError(this.status);if("string"!=typeof t&&"number"!=typeof t||!t.toString().match(/^[0-9A-D#*,]+$/i))throw new TypeError("Invalid tones: "+t);for(t=t.toString().split("");t.length>0;)n.push(new o(this,t.shift(),r));if(this.tones)return this.tones=this.tones.concat(n),this;var s=function(){var t,n;if(i.status===a.STATUS_TERMINATED||!i.tones||0===i.tones.length)return i.tones=null,this;(t=i.tones.shift()).on("failed",function(){i.tones=null}),t.send(r),n=t.duration+t.interToneGap,e.Timers.setTimeout(s,n)};return this.tones=n,s(),this},bye:function(t){var r=(t=Object.create(t||Object.prototype)).statusCode;if(this.status===a.STATUS_TERMINATED)return this.logger.error("Error: Attempted to send BYE in a terminated session."),this;if(this.logger.log("terminating Session"),r&&(r<200||r>=700))throw new TypeError("Invalid statusCode: "+r);return t.receiveResponse=function(){},this.sendRequest(e.C.BYE,t).terminated()},refer:function(t,r){var n=((r=r||{}).extraHeaders||[]).slice(),i=t instanceof e.InviteServerContext||t instanceof e.InviteClientContext,s=t;if(void 0===t)throw new TypeError("Not enough arguments");if(this.status!==a.STATUS_CONFIRMED)throw new e.Exceptions.InvalidStateError(this.status);if(i)t='"'+t.remoteIdentity.friendlyName+'" <'+t.dialog.remote_target.toString()+"?Replaces="+t.dialog.id.call_id+"%3Bto-tag%3D"+t.dialog.id.remote_tag+"%3Bfrom-tag%3D"+t.dialog.id.local_tag+">";else{try{t=e.Grammar.parse(t,"Refer_To").uri||t}catch(e){this.logger.debug(".refer() cannot parse Refer_To from",t),this.logger.debug("...falling through to normalizeTarget()")}if(!(t=this.ua.normalizeTarget(t)))throw new TypeError("Invalid target: "+s)}return n.push("Contact: "+this.contact),n.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),n.push("Refer-To: "+t),this.sendRequest(e.C.REFER,{extraHeaders:n,body:r.body,receiveResponse:function(e){/^2[0-9]{2}$/.test(e.status_code)&&(i||t.scheme&&t.scheme.match("^sips?$"))&&this.terminate()}.bind(this)}),this},followRefer:function(r){return function(r,n){var i=n.parseHeader("refer-to"),s=i.uri;if(s.scheme.match("^sips?$")){var o=[],a=s.getHeader("Replaces");void 0!==a&&o.push("Replaces: "+decodeURIComponent(a)),s.clearHeaders();var u=this.mediaHandler.getReferMedia,c=u?u.call(this.mediaHandler):this.mediaHint;e.Hacks.Chrome.getsConfusedAboutGUM(this);var l=this.ua.invite(s,{media:c,params:{to_displayName:i.friendlyName},extraHeaders:o});r.call(this,n,l),this.terminate()}else{var d=s.toString();"function"==typeof t.open?t.open(d):this.logger.warn("referred to non-SIP URI but `open` isn't in the environment: "+d)}}.bind(this,r)},sendRequest:function(t,r){r=r||{};var n=this,i=new e.OutgoingRequest(t,this.dialog.remote_target,this.ua,{cseq:r.cseq||(this.dialog.local_seqnum+=1),call_id:this.dialog.id.call_id,from_uri:this.dialog.local_uri,from_tag:this.dialog.id.local_tag,to_uri:this.dialog.remote_uri,to_tag:this.dialog.id.remote_tag,route_set:this.dialog.route_set,statusCode:r.statusCode,reasonPhrase:r.reasonPhrase},r.extraHeaders||[],r.body);return new e.RequestSender({request:i,onRequestTimeout:function(){n.onRequestTimeout()},onTransportError:function(){n.onTransportError()},receiveResponse:r.receiveResponse||function(e){n.receiveNonInviteResponse(e)}},this.ua).send(),this.emit(t.toLowerCase(),i),this},close:function(){var t;if(this.status===a.STATUS_TERMINATED)return this;for(t in this.logger.log("closing INVITE session "+this.id),this.mediaHandler&&this.mediaHandler.close(),this.timers)e.Timers.clearTimeout(this.timers[t]);for(t in this.dialog&&(this.dialog.terminate(),delete this.dialog),this.earlyDialogs)this.earlyDialogs[t].terminate(),delete this.earlyDialogs[t];return this.status=a.STATUS_TERMINATED,delete this.ua.sessions[this.id],this},createDialog:function(t,r,n){var i,s,o=t["UAS"===r?"to_tag":"from_tag"],a=t["UAS"===r?"from_tag":"to_tag"],u=t.call_id+o+a;if(s=this.earlyDialogs[u],n)return!!s||((s=new e.Dialog(this,t,r,e.Dialog.C.STATUS_EARLY)).error?(this.logger.error(s.error),this.failed(t,e.C.causes.INTERNAL_ERROR),!1):(this.earlyDialogs[u]=s,!0));if(s){for(var c in s.update(t,r),this.dialog=s,delete this.earlyDialogs[u],this.earlyDialogs)this.earlyDialogs[c].terminate(),delete this.earlyDialogs[c];return!0}return(i=new e.Dialog(this,t,r)).error?(this.logger.error(i.error),this.failed(t,e.C.causes.INTERNAL_ERROR),!1):(this.to_tag=t.to_tag,this.dialog=i,!0)},isReadyToReinvite:function(){return this.mediaHandler.isReady()&&!this.dialog.uac_pending_reply&&!this.dialog.uas_pending_reply},mute:function(e){var t=this.mediaHandler.mute(e);t&&this.onmute(t)},unmute:function(e){var t=this.mediaHandler.unmute(e);t&&this.onunmute(t)},hold:function(t){if(this.status!==a.STATUS_WAITING_FOR_ACK&&this.status!==a.STATUS_CONFIRMED)throw new e.Exceptions.InvalidStateError(this.status);this.mediaHandler.hold(),this.isReadyToReinvite()?!0!==this.local_hold&&(this.onhold("local"),this.sendReinvite(t)):this.pending_actions.isPending("unhold")?this.pending_actions.pop("unhold"):this.pending_actions.isPending("hold")||this.pending_actions.push("hold")},unhold:function(t){if(this.status!==a.STATUS_WAITING_FOR_ACK&&this.status!==a.STATUS_CONFIRMED)throw new e.Exceptions.InvalidStateError(this.status);this.mediaHandler.unhold(),this.isReadyToReinvite()?!1!==this.local_hold&&(this.onunhold("local"),this.sendReinvite(t)):this.pending_actions.isPending("hold")?this.pending_actions.pop("hold"):this.pending_actions.isPending("unhold")||this.pending_actions.push("unhold")},isOnHold:function(){return{local:this.local_hold,remote:this.remote_hold}},receiveReinvite:function(t){var r=this;if(!this.mediaHandler.hasDescription(t))return this.logger.warn("invalid Content-Type"),void t.reply(415);this.mediaHandler.setDescription(t).then(this.mediaHandler.getDescription.bind(this.mediaHandler,this.mediaHint)).then(function(e){var n=["Contact: "+r.contact];t.reply(200,null,n,e,function(){r.status=a.STATUS_WAITING_FOR_ACK,r.setInvite2xxTimer(t,e),r.setACKTimer(),r.remote_hold&&!r.mediaHandler.remote_hold?r.onunhold("remote"):!r.remote_hold&&r.mediaHandler.remote_hold&&r.onhold("remote")})}).catch(function(n){var i;n instanceof e.Exceptions.GetDescriptionError?i=500:(r.logger.error(n),i=488),t.reply(i)})},sendReinvite:function(t){var r,n=this,i=((t=t||{}).extraHeaders||[]).slice(),s=t.eventHandlers||{};s.succeeded&&(r=s.succeeded),this.reinviteSucceeded=function(){e.Timers.clearTimeout(n.timers.ackTimer),e.Timers.clearTimeout(n.timers.invite2xxTimer),n.status=a.STATUS_CONFIRMED,r&&r.apply(this,arguments)},s.failed?this.reinviteFailed=s.failed:this.reinviteFailed=function(){},i.push("Contact: "+this.contact),i.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),this.receiveResponse=this.receiveReinviteResponse,this.mediaHandler.getDescription(n.mediaHint).then(function(t){n.dialog.sendRequest(n,e.C.INVITE,{extraHeaders:i,body:t})},function(){n.isReadyToReinvite()&&n.onReadyToReinvite(),n.reinviteFailed()})},receiveRequest:function(t){switch(t.method){case e.C.BYE:t.reply(200),this.status===a.STATUS_CONFIRMED&&(this.emit("bye",t),this.terminated(t,e.C.causes.BYE));break;case e.C.INVITE:this.status===a.STATUS_CONFIRMED&&(this.logger.log("re-INVITE received"),this.receiveReinvite(t));break;case e.C.INFO:if(this.status===a.STATUS_CONFIRMED||this.status===a.STATUS_WAITING_FOR_ACK){if(this.onInfo)return this.onInfo(t);var r,n,i,s=t.getHeader("content-type"),u=/^(Signal\s*?=\s*?)([0-9A-D#*]{1})(\s)?.*/,c=/^(Duration\s?=\s?)([0-9]{1,4})(\s)?.*/;s&&(s.match(/^application\/dtmf-relay/i)?(t.body&&2===(r=t.body.split("\r\n",2)).length&&(u.test(r[0])&&(n=r[0].replace(u,"$2")),c.test(r[1])&&(i=parseInt(r[1].replace(c,"$2"),10))),new o(this,n,{duration:i}).init_incoming(t)):t.reply(415,null,["Accept: application/dtmf-relay"]))}break;case e.C.REFER:var l;if(this.status===a.STATUS_CONFIRMED)this.logger.log("REFER received"),this.listeners("refer").length?(t.reply(202,"Accepted"),l="SIP/2.0 100 Trying",this.sendRequest(e.C.NOTIFY,{extraHeaders:["Event: refer","Subscription-State: terminated","Content-Type: message/sipfrag"],body:l,receiveResponse:function(){}}),this.emit("refer",t)):t.reply(603,"Declined");break;case e.C.NOTIFY:t.reply(200,"OK"),this.emit("notify",t)}},receiveReinviteResponse:function(t){var r=this;if(this.status!==a.STATUS_TERMINATED)switch(!0){case/^1[0-9]{2}$/.test(t.status_code):break;case/^2[0-9]{2}$/.test(t.status_code):if(this.status=a.STATUS_CONFIRMED,this.sendRequest(e.C.ACK,{cseq:t.cseq}),!this.mediaHandler.hasDescription(t)){this.reinviteFailed();break}this.mediaHandler.setDescription(t).then(function(){r.reinviteSucceeded()},function(){r.reinviteFailed()});break;default:this.reinviteFailed()}},acceptAndTerminate:function(t,r,n){var i=[];return r&&i.push("Reason: "+e.Utils.getReasonHeaderValue(r,n)),(this.dialog||this.createDialog(t,"UAC"))&&(this.sendRequest(e.C.ACK,{cseq:t.cseq}),this.sendRequest(e.C.BYE,{extraHeaders:i})),this},setInvite2xxTimer:function(t,r){var n=this,i=e.Timers.T1;this.timers.invite2xxTimer=e.Timers.setTimeout(function s(){if(n.status===a.STATUS_WAITING_FOR_ACK){n.logger.log("no ACK received, attempting to retransmit OK");var o=["Contact: "+n.contact];t.reply(200,null,o,r),i=Math.min(2*i,e.Timers.T2),n.timers.invite2xxTimer=e.Timers.setTimeout(s,i)}},i)},setACKTimer:function(){var t=this;this.timers.ackTimer=e.Timers.setTimeout(function(){t.status===a.STATUS_WAITING_FOR_ACK&&(t.logger.log("no ACK received for an extended period of time, terminating the call"),e.Timers.clearTimeout(t.timers.invite2xxTimer),t.sendRequest(e.C.BYE),t.terminated(null,e.C.causes.NO_ACK))},e.Timers.TIMER_H)},onReadyToReinvite:function(){var e=this.pending_actions.shift();e&&this[e.name]&&this[e.name]()},onTransportError:function(){this.status!==a.STATUS_CONFIRMED&&this.status!==a.STATUS_TERMINATED&&this.failed(null,e.C.causes.CONNECTION_ERROR)},onRequestTimeout:function(){this.status===a.STATUS_CONFIRMED?this.terminated(null,e.C.causes.REQUEST_TIMEOUT):this.status!==a.STATUS_TERMINATED&&(this.failed(null,e.C.causes.REQUEST_TIMEOUT),this.terminated(null,e.C.causes.REQUEST_TIMEOUT))},onDialogError:function(t){this.status===a.STATUS_CONFIRMED?this.terminated(t,e.C.causes.DIALOG_ERROR):this.status!==a.STATUS_TERMINATED&&(this.failed(t,e.C.causes.DIALOG_ERROR),this.terminated(t,e.C.causes.DIALOG_ERROR))},onhold:function(e){this["local"===e?"local_hold":"remote_hold"]=!0,this.emit("hold",{originator:e})},onunhold:function(e){this["local"===e?"local_hold":"remote_hold"]=!1,this.emit("unhold",{originator:e})},onmute:function(e){this.emit("muted",{audio:e.audio,video:e.video})},onunmute:function(e){this.emit("unmuted",{audio:e.audio,video:e.video})},failed:function(e,t){return this.status===a.STATUS_TERMINATED?this:(this.emit("failed",e||null,t||null),this)},rejected:function(e,t){return this.emit("rejected",e||null,t||null),this},canceled:function(){return this.emit("cancel"),this},accepted:function(t,r){return r=e.Utils.getReasonPhrase(t&&t.status_code,r),this.startTime=new Date,this.replacee&&(this.replacee.emit("replaced",this),this.replacee.terminate()),this.emit("accepted",t,r),this},terminated:function(e,t){return this.status===a.STATUS_TERMINATED?this:(this.endTime=new Date,this.close(),this.emit("terminated",e||null,t||null),this)},connecting:function(e){return this.emit("connecting",{request:e}),this}},n.desugar=function(e){return t.HTMLMediaElement&&e instanceof t.HTMLMediaElement&&(e={media:{constraints:{audio:!0,video:"VIDEO"===e.tagName},render:{remote:e}}}),e||{}},n.C=a,e.Session=n,(i=function(t,r){var n,i=this,s=r.getHeader("Content-Type"),o=r.parseHeader("Content-Disposition");if(e.Utils.augment(this,e.ServerContext,[t,r]),e.Utils.augment(this,e.Session,[t.configuration.mediaHandlerFactory]),this.mediaHandler=this.mediaHandlerFactory(this,{RTCConstraints:{optional:[{DtlsSrtpKeyAgreement:"true"}]}}),!o&&!this.mediaHandler.hasDescription(r)||o&&"render"===o.type)this.renderbody=r.body,this.rendertype=s;else if(!this.mediaHandler.hasDescription(r)&&o&&"session"===o.type)return void r.reply(415);function u(e,t){r.hasHeader(e)&&r.getHeader(e).toLowerCase().indexOf("100rel")>=0&&(i.rel100=t)}function c(){var t={extraHeaders:["Contact: "+i.contact]};i.rel100!==e.C.supported.REQUIRED&&i.progress(t),i.status=a.STATUS_WAITING_FOR_ANSWER,i.timers.userNoAnswerTimer=e.Timers.setTimeout(function(){r.reply(408),i.failed(r,e.C.causes.NO_ANSWER),i.terminated(r,e.C.causes.NO_ANSWER)},i.ua.configuration.noAnswerTimeout),n&&(i.timers.expiresTimer=e.Timers.setTimeout(function(){i.status===a.STATUS_WAITING_FOR_ANSWER&&(r.reply(487),i.failed(r,e.C.causes.EXPIRES),i.terminated(r,e.C.causes.EXPIRES))},n)),i.emit("invite",r)}this.status=a.STATUS_INVITE_RECEIVED,this.from_tag=r.from_tag,this.id=r.call_id+this.from_tag,this.request=r,this.contact=this.ua.contact.toString(),this.receiveNonInviteResponse=function(){},this.logger=t.getLogger("sip.inviteservercontext",this.id),this.ua.sessions[this.id]=this,r.hasHeader("expires")&&(n=1e3*r.getHeader("expires")),u("require",e.C.supported.REQUIRED),u("supported",e.C.supported.SUPPORTED),r.to_tag=e.Utils.newTag(),this.createDialog(r,"UAS",!0)?(this.mediaHandler&&this.mediaHandler.getRemoteStreams&&(this.getRemoteStreams=this.mediaHandler.getRemoteStreams.bind(this.mediaHandler),this.getLocalStreams=this.mediaHandler.getLocalStreams.bind(this.mediaHandler)),!this.mediaHandler.hasDescription(r)||this.renderbody?e.Timers.setTimeout(c,0):(this.hasOffer=!0,this.mediaHandler.setDescription(r).then(c,function(e){i.logger.warn("invalid description"),i.logger.warn(e),r.reply(488)}))):r.reply(500,"Missing Contact header field")}).prototype={reject:function(t){if(this.status===a.STATUS_TERMINATED)throw new e.Exceptions.InvalidStateError(this.status);return this.logger.log("rejecting RTCSession"),e.ServerContext.prototype.reject.call(this,t),this.terminated()},terminate:function(t){var r,n=((t=t||{}).extraHeaders||[]).slice(),i=t.body,s=this;return this.status===a.STATUS_WAITING_FOR_ACK&&this.request.server_transaction.state!==e.Transactions.C.STATUS_TERMINATED?(r=this.dialog,this.receiveRequest=function(t){t.method===e.C.ACK&&(this.sendRequest(e.C.BYE,{extraHeaders:n,body:i}),r.terminate())},this.request.server_transaction.on("stateChanged",function(){this.state===e.Transactions.C.STATUS_TERMINATED&&this.dialog&&(this.request=new e.OutgoingRequest(e.C.BYE,this.dialog.remote_target,this.ua,{cseq:this.dialog.local_seqnum+=1,call_id:this.dialog.id.call_id,from_uri:this.dialog.local_uri,from_tag:this.dialog.id.local_tag,to_uri:this.dialog.remote_uri,to_tag:this.dialog.id.remote_tag,route_set:this.dialog.route_set},n,i),new e.RequestSender({request:this.request,onRequestTimeout:function(){s.onRequestTimeout()},onTransportError:function(){s.onTransportError()},receiveResponse:function(){}},this.ua).send(),r.terminate())}),this.emit("bye",this.request),this.terminated(),this.dialog=r,this.ua.dialogs[r.id.toString()]=r):this.status===a.STATUS_CONFIRMED?this.bye(t):this.reject(t),this},progress:function(t){var r,n,i=(t=t||{}).statusCode||180,s=t.reasonPhrase,o=(t.extraHeaders||[]).slice(),u=t.stunServers||null,c=t.turnServers||null,l=t.body;if(i<100||i>199)throw new TypeError("Invalid statusCode: "+i);if(this.isCanceled||this.status===a.STATUS_TERMINATED)return this;if(u||c){if(u){if(!(r=this.ua.getConfigurationCheck().optional.stunServers(u)))throw new TypeError("Invalid stunServers: "+u);this.stunServers=r}if(c){if(!(r=this.ua.getConfigurationCheck().optional.turnServers(c)))throw new TypeError("Invalid turnServers: "+c);this.turnServers=r}this.mediaHandler.updateIceServers({stunServers:this.stunServers,turnServers:this.turnServers})}return 100!==t.statusCode&&(this.rel100===e.C.supported.REQUIRED||this.rel100===e.C.supported.SUPPORTED&&t.rel100||this.rel100===e.C.supported.SUPPORTED&&this.ua.configuration.rel100===e.C.supported.REQUIRED)?function(){i=t.statusCode||183,this.status=a.STATUS_WAITING_FOR_PRACK,o.push("Contact: "+this.contact),o.push("Require: 100rel"),o.push("RSeq: "+Math.floor(1e4*Math.random())),this.mediaHint=t.media,this.mediaHandler.getDescription(t.media).then(function(t){if(!this.isCanceled&&this.status!==a.STATUS_TERMINATED){this.early_sdp=t.body,this[this.hasOffer?"hasAnswer":"hasOffer"]=!0;var r=e.Timers.T1;this.timers.rel1xxTimer=e.Timers.setTimeout(function n(){this.request.reply(i,null,o,t),r*=2,this.timers.rel1xxTimer=e.Timers.setTimeout(n.bind(this),r)}.bind(this),r),this.timers.prackTimer=e.Timers.setTimeout(function(){this.status===a.STATUS_WAITING_FOR_PRACK&&(this.logger.log("no PRACK received, rejecting the call"),e.Timers.clearTimeout(this.timers.rel1xxTimer),this.request.reply(504),this.terminated(null,e.C.causes.NO_PRACK))}.bind(this),64*e.Timers.T1),n=this.request.reply(i,s,o,t),this.emit("progress",n,s)}}.bind(this),function(){this.request.reply(480),this.failed(null,e.C.causes.WEBRTC_ERROR),this.terminated(null,e.C.causes.WEBRTC_ERROR)}.bind(this))}.apply(this):function(){n=this.request.reply(i,s,o,l),this.emit("progress",n,s)}.apply(this),this},accept:function(t){t=Object.create(n.desugar(t)),e.Utils.optionsOverride(t,"media","mediaConstraints",!0,this.logger,this.ua.configuration.media),this.mediaHint=t.media,this.onInfo=t.onInfo;var r,i=this,s=this.request,o=(t.extraHeaders||[]).slice(),u=t.stunServers||null,c=t.turnServers||null,l=function(t){var r;i.mediaHandler.render(),o.push("Contact: "+i.contact),o.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),i.hasOffer?i.hasAnswer=!0:i.hasOffer=!0,r=s.reply(200,null,o,t,function(){i.status=a.STATUS_WAITING_FOR_ACK,i.setInvite2xxTimer(s,t),i.setACKTimer()},function(){i.failed(null,e.C.causes.CONNECTION_ERROR),i.terminated(null,e.C.causes.CONNECTION_ERROR)}),i.status!==a.STATUS_TERMINATED&&i.accepted(r,e.Utils.getReasonPhrase(200))};if(this.status===a.STATUS_WAITING_FOR_PRACK)return this.status=a.STATUS_ANSWERED_WAITING_FOR_PRACK,this;if(this.status===a.STATUS_WAITING_FOR_ANSWER)this.status=a.STATUS_ANSWERED;else if(this.status!==a.STATUS_EARLY_MEDIA)throw new e.Exceptions.InvalidStateError(this.status);if((u||c)&&this.status!==a.STATUS_EARLY_MEDIA&&this.status!==a.STATUS_ANSWERED_WAITING_FOR_PRACK){if(u){if(!(r=this.ua.getConfigurationCheck().optional.stunServers(u)))throw new TypeError("Invalid stunServers: "+u);this.stunServers=r}if(c){if(!(r=this.ua.getConfigurationCheck().optional.turnServers(c)))throw new TypeError("Invalid turnServers: "+c);this.turnServers=r}this.mediaHandler.updateIceServers({stunServers:this.stunServers,turnServers:this.turnServers})}return this.createDialog(s,"UAS")?(e.Timers.clearTimeout(this.timers.userNoAnswerTimer),this.status===a.STATUS_EARLY_MEDIA?l({}):this.mediaHandler.getDescription(i.mediaHint).then(l,function(){i.status!==a.STATUS_TERMINATED&&(i.request.reply(480),i.failed(null,e.C.causes.WEBRTC_ERROR),i.terminated(null,e.C.causes.WEBRTC_ERROR))}),this):(s.reply(500,"Missing Contact header field"),this)},receiveRequest:function(t){function r(){var r;e.Timers.clearTimeout(this.timers.ackTimer),e.Timers.clearTimeout(this.timers.invite2xxTimer),this.status=a.STATUS_CONFIRMED,this.unmute(),r=t.getHeader("Content-Type"),this.mediaHandler.hasDescription(t)||(this.renderbody=t.body,this.rendertype=r),this.emit("confirmed",t)}switch(t.method){case e.C.CANCEL:this.status!==a.STATUS_WAITING_FOR_ANSWER&&this.status!==a.STATUS_WAITING_FOR_PRACK&&this.status!==a.STATUS_ANSWERED_WAITING_FOR_PRACK&&this.status!==a.STATUS_EARLY_MEDIA&&this.status!==a.STATUS_ANSWERED||(this.status=a.STATUS_CANCELED,this.request.reply(487),this.canceled(t),this.rejected(t,e.C.causes.CANCELED),this.failed(t,e.C.causes.CANCELED),this.terminated(t,e.C.causes.CANCELED));break;case e.C.ACK:this.status===a.STATUS_WAITING_FOR_ACK&&(this.hasAnswer?r.apply(this):this.mediaHandler.hasDescription(t)?(this.hasAnswer=!0,this.mediaHandler.setDescription(t).then(r.bind(this),function(r){this.logger.warn(r),this.terminate({statusCode:"488",reasonPhrase:"Bad Media Description"}),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(t,e.C.causes.BAD_MEDIA_DESCRIPTION)}.bind(this))):this.early_sdp?r.apply(this):(this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(t,e.C.causes.BAD_MEDIA_DESCRIPTION)));break;case e.C.PRACK:this.status===a.STATUS_WAITING_FOR_PRACK||this.status===a.STATUS_ANSWERED_WAITING_FOR_PRACK?this.hasAnswer?(e.Timers.clearTimeout(this.timers.rel1xxTimer),e.Timers.clearTimeout(this.timers.prackTimer),t.reply(200),this.status===a.STATUS_ANSWERED_WAITING_FOR_PRACK&&(this.status=a.STATUS_EARLY_MEDIA,this.accept()),this.status=a.STATUS_EARLY_MEDIA,this.mute()):this.mediaHandler.hasDescription(t)?(this.hasAnswer=!0,this.mediaHandler.setDescription(t).then(function(){e.Timers.clearTimeout(this.timers.rel1xxTimer),e.Timers.clearTimeout(this.timers.prackTimer),t.reply(200),this.status===a.STATUS_ANSWERED_WAITING_FOR_PRACK&&(this.status=a.STATUS_EARLY_MEDIA,this.accept()),this.status=a.STATUS_EARLY_MEDIA,this.mute()}.bind(this),function(r){this.logger.warn(r),this.terminate({statusCode:"488",reasonPhrase:"Bad Media Description"}),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(t,e.C.causes.BAD_MEDIA_DESCRIPTION)}.bind(this))):(this.terminate({statusCode:"488",reasonPhrase:"Bad Media Description"}),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(t,e.C.causes.BAD_MEDIA_DESCRIPTION)):this.status===a.STATUS_EARLY_MEDIA&&t.reply(200);break;default:n.prototype.receiveRequest.apply(this,[t])}},onTransportError:function(){this.status!==a.STATUS_CONFIRMED&&this.status!==a.STATUS_TERMINATED&&this.failed(null,e.C.causes.CONNECTION_ERROR)},onRequestTimeout:function(){this.status===a.STATUS_CONFIRMED?this.terminated(null,e.C.causes.REQUEST_TIMEOUT):this.status!==a.STATUS_TERMINATED&&(this.failed(null,e.C.causes.REQUEST_TIMEOUT),this.terminated(null,e.C.causes.REQUEST_TIMEOUT))}},e.InviteServerContext=i,(s=function(t,r,i){(i=Object.create(n.desugar(i))).params=Object.create(i.params||Object.prototype);var s,o=(i.extraHeaders||[]).slice(),u=i.stunServers||null,c=i.turnServers||null,l=i.mediaHandlerFactory||t.configuration.mediaHandlerFactory,d=l.isSupported;if(d&&!d())throw new e.Exceptions.NotSupportedError("Media not supported");if(this.RTCConstraints=i.RTCConstraints||{},this.inviteWithoutSdp=i.inviteWithoutSdp||!1,this.anonymous=i.anonymous||!1,this.renderbody=i.renderbody||null,this.rendertype=i.rendertype||"text/plain",i.params.from_tag=this.from_tag,this.contact=t.contact.toString({anonymous:this.anonymous,outbound:this.anonymous?!t.contact.temp_gruu:!t.contact.pub_gruu}),this.anonymous&&(i.params.from_displayName="Anonymous",i.params.from_uri="sip:anonymous@anonymous.invalid",o.push("P-Preferred-Identity: "+t.configuration.uri.toString()),o.push("Privacy: id")),o.push("Contact: "+this.contact),o.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),this.inviteWithoutSdp&&this.renderbody&&(o.push("Content-Type: "+this.rendertype),o.push("Content-Disposition: render;handling=optional")),t.configuration.rel100===e.C.supported.REQUIRED&&o.push("Require: 100rel"),t.configuration.replaces===e.C.supported.REQUIRED&&o.push("Require: replaces"),i.extraHeaders=o,e.Utils.augment(this,e.ClientContext,[t,e.C.INVITE,r,i]),e.Utils.augment(this,e.Session,[l]),this.status!==a.STATUS_NULL)throw new e.Exceptions.InvalidStateError(this.status);if(this.from_tag=e.Utils.newTag(),this.isCanceled=!1,this.received_100=!1,this.method=e.C.INVITE,this.receiveNonInviteResponse=this.receiveResponse,this.receiveResponse=this.receiveInviteResponse,this.logger=t.getLogger("sip.inviteclientcontext"),u){if(!(s=this.ua.getConfigurationCheck().optional.stunServers(u)))throw new TypeError("Invalid stunServers: "+u);this.stunServers=s}if(c){if(!(s=this.ua.getConfigurationCheck().optional.turnServers(c)))throw new TypeError("Invalid turnServers: "+c);this.turnServers=s}t.applicants[this]=this,this.id=this.request.call_id+this.from_tag,this.mediaHandler=this.mediaHandlerFactory(this,{RTCConstraints:this.RTCConstraints,stunServers:this.stunServers,turnServers:this.turnServers}),this.mediaHandler&&this.mediaHandler.getRemoteStreams&&(this.getRemoteStreams=this.mediaHandler.getRemoteStreams.bind(this.mediaHandler),this.getLocalStreams=this.mediaHandler.getLocalStreams.bind(this.mediaHandler)),e.Utils.optionsOverride(i,"media","mediaConstraints",!0,this.logger,this.ua.configuration.media),this.mediaHint=i.media,this.onInfo=i.onInfo}).prototype={invite:function(){var t=this;return this.ua.sessions[this.id]=this,this.inviteWithoutSdp?(this.request.body=t.renderbody,this.status=a.STATUS_INVITE_SENT,this.send()):this.mediaHandler.getDescription(t.mediaHint).then(function(e){t.isCanceled||t.status===a.STATUS_TERMINATED||(t.hasOffer=!0,t.request.body=e,t.status=a.STATUS_INVITE_SENT,t.send())},function(){t.status!==a.STATUS_TERMINATED&&(t.failed(null,e.C.causes.WEBRTC_ERROR),t.terminated(null,e.C.causes.WEBRTC_ERROR))}),this},receiveInviteResponse:function(t){var r,n=this,i=t.call_id+t.from_tag+t.to_tag,s=[],o={};if(this.status!==a.STATUS_TERMINATED&&t.method===e.C.INVITE){if(this.dialog&&t.status_code>=200&&t.status_code<=299){if(i!==this.dialog.id.toString()){if(!this.createDialog(t,"UAC",!0))return;return this.earlyDialogs[i].sendRequest(this,e.C.ACK,{body:e.Utils.generateFakeSDP(t.body)}),this.earlyDialogs[i].sendRequest(this,e.C.BYE),void(this.status!==a.STATUS_CONFIRMED&&(this.failed(t,e.C.causes.WEBRTC_ERROR),this.terminated(t,e.C.causes.WEBRTC_ERROR)))}if(this.status===a.STATUS_CONFIRMED)return void this.sendRequest(e.C.ACK,{cseq:t.cseq});if(!this.hasAnswer)return}if(this.dialog&&t.status_code<200){if(-1!==this.dialog.pracked.indexOf(t.getHeader("rseq"))||this.dialog.pracked[this.dialog.pracked.length-1]>=t.getHeader("rseq")&&this.dialog.pracked.length>0)return;if(!this.earlyDialogs[i]&&!this.createDialog(t,"UAC",!0))return;if(-1!==this.earlyDialogs[i].pracked.indexOf(t.getHeader("rseq"))||this.earlyDialogs[i].pracked[this.earlyDialogs[i].pracked.length-1]>=t.getHeader("rseq")&&this.earlyDialogs[i].pracked.length>0)return;return s.push("RAck: "+t.getHeader("rseq")+" "+t.getHeader("cseq")),this.earlyDialogs[i].pracked.push(t.getHeader("rseq")),void this.earlyDialogs[i].sendRequest(this,e.C.PRACK,{extraHeaders:s,body:e.Utils.generateFakeSDP(t.body)})}if(this.isCanceled)t.status_code>=100&&t.status_code<200?(this.request.cancel(this.cancelReason,s),this.canceled(null)):t.status_code>=200&&t.status_code<299?(this.acceptAndTerminate(t),this.emit("bye",this.request)):t.status_code>=300&&(r=e.C.REASON_PHRASE[t.status_code]||e.C.causes.CANCELED,this.rejected(t,r),this.failed(t,r),this.terminated(t,r));else switch(!0){case/^100$/.test(t.status_code):this.received_100=!0,this.emit("progress",t);break;case/^1[0-9]{2}$/.test(t.status_code):if(!t.to_tag){this.logger.warn("1xx response received without to tag");break}if(t.hasHeader("contact")&&!this.createDialog(t,"UAC",!0))break;if(this.status=a.STATUS_1XX_RECEIVED,t.hasHeader("require")&&-1!==t.getHeader("require").indexOf("100rel")){if(this.dialog||!this.earlyDialogs[i])break;if(-1!==this.earlyDialogs[i].pracked.indexOf(t.getHeader("rseq"))||this.earlyDialogs[i].pracked[this.earlyDialogs[i].pracked.length-1]>=t.getHeader("rseq")&&this.earlyDialogs[i].pracked.length>0)return;if(this.mediaHandler.hasDescription(t))if(this.hasOffer){if(!this.createDialog(t,"UAC"))break;this.hasAnswer=!0,this.dialog.pracked.push(t.getHeader("rseq")),this.mediaHandler.setDescription(t).then(function(){s.push("RAck: "+t.getHeader("rseq")+" "+t.getHeader("cseq")),n.sendRequest(e.C.PRACK,{extraHeaders:s,receiveResponse:function(){}}),n.status=a.STATUS_EARLY_MEDIA,n.mute(),n.emit("progress",t)},function(r){n.logger.warn(r),n.acceptAndTerminate(t,488,"Not Acceptable Here"),n.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION)})}else{var u=this.earlyDialogs[i],c=u.mediaHandler;u.pracked.push(t.getHeader("rseq")),c.setDescription(t).then(c.getDescription.bind(c,n.mediaHint)).then(function(r){s.push("RAck: "+t.getHeader("rseq")+" "+t.getHeader("cseq")),u.sendRequest(n,e.C.PRACK,{extraHeaders:s,body:r}),n.status=a.STATUS_EARLY_MEDIA,n.emit("progress",t)}).catch(function(r){if(r instanceof e.Exceptions.GetDescriptionError){if(u.pracked.push(t.getHeader("rseq")),n.status===a.STATUS_TERMINATED)return;n.failed(null,e.C.causes.WEBRTC_ERROR),n.terminated(null,e.C.causes.WEBRTC_ERROR)}else u.pracked.splice(u.pracked.indexOf(t.getHeader("rseq")),1),n.logger.warn("invalid description"),n.logger.warn(r)})}else s.push("RAck: "+t.getHeader("rseq")+" "+t.getHeader("cseq")),this.earlyDialogs[i].pracked.push(t.getHeader("rseq")),this.earlyDialogs[i].sendRequest(this,e.C.PRACK,{extraHeaders:s}),this.emit("progress",t)}else this.emit("progress",t);break;case/^2[0-9]{2}$/.test(t.status_code):if(this.request.cseq+" "+this.request.method!==t.getHeader("cseq"))break;if(this.status===a.STATUS_EARLY_MEDIA&&this.dialog){this.status=a.STATUS_CONFIRMED,this.unmute(),o={},this.renderbody&&(s.push("Content-Type: "+this.rendertype),o.extraHeaders=s,o.body=this.renderbody),o.cseq=t.cseq,this.sendRequest(e.C.ACK,o),this.accepted(t);break}if(this.dialog)break;if(this.hasOffer)if(this.hasAnswer)this.renderbody&&(s.push("Content-Type: "+n.rendertype),o.extraHeaders=s,o.body=this.renderbody),this.sendRequest(e.C.ACK,o);else{if(!this.mediaHandler.hasDescription(t)){this.acceptAndTerminate(t,400,"Missing session description"),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION);break}if(!this.createDialog(t,"UAC"))break;this.hasAnswer=!0,this.mediaHandler.setDescription(t).then(function(){var r={};n.status=a.STATUS_CONFIRMED,n.unmute(),n.renderbody&&(s.push("Content-Type: "+n.rendertype),r.extraHeaders=s,r.body=n.renderbody),r.cseq=t.cseq,n.sendRequest(e.C.ACK,r),n.accepted(t)},function(r){n.logger.warn(r),n.acceptAndTerminate(t,488,"Not Acceptable Here"),n.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION)})}else if(this.earlyDialogs[i]&&this.earlyDialogs[i].mediaHandler.localMedia){if(this.hasOffer=!0,this.hasAnswer=!0,this.mediaHandler=this.earlyDialogs[i].mediaHandler,!this.createDialog(t,"UAC"))break;this.status=a.STATUS_CONFIRMED,this.sendRequest(e.C.ACK,{cseq:t.cseq}),this.unmute(),this.accepted(t)}else{if(!this.mediaHandler.hasDescription(t)){this.acceptAndTerminate(t,400,"Missing session description"),this.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION);break}if(!this.createDialog(t,"UAC"))break;this.hasOffer=!0,this.mediaHandler.setDescription(t).then(this.mediaHandler.getDescription.bind(this.mediaHandler,this.mediaHint)).then(function(r){n.isCanceled||n.status===a.STATUS_TERMINATED||(n.status=a.STATUS_CONFIRMED,n.hasAnswer=!0,n.unmute(),n.sendRequest(e.C.ACK,{body:r,cseq:t.cseq}),n.accepted(t))}).catch(function(r){r instanceof e.Exceptions.GetDescriptionError?n.logger.warn("there was a problem"):(n.logger.warn("invalid description"),n.logger.warn(r),n.acceptAndTerminate(t,488,"Invalid session description"),n.failed(t,e.C.causes.BAD_MEDIA_DESCRIPTION))})}break;default:r=e.Utils.sipErrorCause(t.status_code),this.rejected(t,r),this.failed(t,r),this.terminated(t,r)}}},cancel:function(t){if((t=t||{}).extraHeaders=(t.extraHeaders||[]).slice(),this.status===a.STATUS_TERMINATED||this.status===a.STATUS_CONFIRMED)throw new e.Exceptions.InvalidStateError(this.status);this.logger.log("canceling RTCSession");var r=e.Utils.getCancelReason(t.status_code,t.reason_phrase);return this.status===a.STATUS_NULL||this.status===a.STATUS_INVITE_SENT&&!this.received_100?(this.isCanceled=!0,this.cancelReason=r):this.status!==a.STATUS_INVITE_SENT&&this.status!==a.STATUS_1XX_RECEIVED&&this.status!==a.STATUS_EARLY_MEDIA||this.request.cancel(r,t.extraHeaders),this.canceled()},terminate:function(e){return this.status===a.STATUS_TERMINATED?this:(this.status===a.STATUS_WAITING_FOR_ACK||this.status===a.STATUS_CONFIRMED?this.bye(e):this.cancel(e),this)},receiveRequest:function(t){return t.method,e.C.CANCEL,t.method===e.C.ACK&&this.status===a.STATUS_WAITING_FOR_ACK&&(e.Timers.clearTimeout(this.timers.ackTimer),e.Timers.clearTimeout(this.timers.invite2xxTimer),this.status=a.STATUS_CONFIRMED,this.unmute(),this.accepted()),n.prototype.receiveRequest.apply(this,[t])},onTransportError:function(){this.status!==a.STATUS_CONFIRMED&&this.status!==a.STATUS_TERMINATED&&this.failed(null,e.C.causes.CONNECTION_ERROR)},onRequestTimeout:function(){this.status===a.STATUS_CONFIRMED?this.terminated(null,e.C.causes.REQUEST_TIMEOUT):this.status!==a.STATUS_TERMINATED&&(this.failed(null,e.C.causes.REQUEST_TIMEOUT),this.terminated(null,e.C.causes.REQUEST_TIMEOUT))}},e.InviteClientContext=s}},function(e,t,r){"use strict";e.exports=function(e){var t;return(t=function(r,n,i){var s,o;if(void 0===n)throw new TypeError("Not enough arguments");if(this.logger=r.ua.getLogger("sip.invitecontext.dtmf",r.id),this.owner=r,this.direction=null,s=(i=i||{}).duration||null,o=i.interToneGap||null,"string"==typeof n)n=n.toUpperCase();else{if("number"!=typeof n)throw new TypeError("Invalid tone: "+n);n=n.toString()}if(!n.match(/^[0-9A-D#*]$/))throw new TypeError("Invalid tone: "+n);if(this.tone=n,s&&!e.Utils.isDecimal(s))throw new TypeError("Invalid tone duration: "+s);if(s?s<t.C.MIN_DURATION?(this.logger.warn('"duration" value is lower than the minimum allowed, setting it to '+t.C.MIN_DURATION+" milliseconds"),s=t.C.MIN_DURATION):s>t.C.MAX_DURATION?(this.logger.warn('"duration" value is greater than the maximum allowed, setting it to '+t.C.MAX_DURATION+" milliseconds"),s=t.C.MAX_DURATION):s=Math.abs(s):s=t.C.DEFAULT_DURATION,this.duration=s,o&&!e.Utils.isDecimal(o))throw new TypeError("Invalid interToneGap: "+o);o?o<t.C.MIN_INTER_TONE_GAP?(this.logger.warn('"interToneGap" value is lower than the minimum allowed, setting it to '+t.C.MIN_INTER_TONE_GAP+" milliseconds"),o=t.C.MIN_INTER_TONE_GAP):o=Math.abs(o):o=t.C.DEFAULT_INTER_TONE_GAP,this.interToneGap=o}).prototype=Object.create(e.EventEmitter.prototype),t.prototype.send=function(t){var r,n={};if(this.direction="outgoing",this.owner.status!==e.Session.C.STATUS_CONFIRMED&&this.owner.status!==e.Session.C.STATUS_WAITING_FOR_ACK)throw new e.Exceptions.InvalidStateError(this.owner.status);r=(t=t||{}).extraHeaders?t.extraHeaders.slice():[],n.contentType="application/dtmf-relay",n.body="Signal= "+this.tone+"\r\n",n.body+="Duration= "+this.duration,this.request=this.owner.dialog.sendRequest(this,e.C.INFO,{extraHeaders:r,body:n}),this.owner.emit("dtmf",this.request,this)},t.prototype.receiveResponse=function(t){var r;switch(!0){case/^1[0-9]{2}$/.test(t.status_code):break;case/^2[0-9]{2}$/.test(t.status_code):this.emit("succeeded",{originator:"remote",response:t});break;default:r=e.Utils.sipErrorCause(t.status_code),this.emit("failed",t,r)}},t.prototype.onRequestTimeout=function(){this.emit("failed",null,e.C.causes.REQUEST_TIMEOUT),this.owner.onRequestTimeout()},t.prototype.onTransportError=function(){this.emit("failed",null,e.C.causes.CONNECTION_ERROR),this.owner.onTransportError()},t.prototype.onDialogError=function(t){this.emit("failed",t,e.C.causes.DIALOG_ERROR),this.owner.onDialogError(t)},t.prototype.init_incoming=function(e){this.direction="incoming",this.request=e,e.reply(200),this.tone&&this.duration?this.owner.emit("dtmf",e,this):this.logger.warn("invalid INFO DTMF received, discarded")},t.C={MIN_DURATION:70,MAX_DURATION:6e3,DEFAULT_DURATION:100,MIN_INTER_TONE_GAP:50,DEFAULT_INTER_TONE_GAP:500},t}},function(e,t,r){"use strict";e.exports=function(e){e.Subscription=function(t,r,n,i){if(i=Object.create(i||Object.prototype),this.extraHeaders=i.extraHeaders=(i.extraHeaders||[]).slice(),this.id=null,this.state="init",!n)throw new TypeError("Event necessary to create a subscription.");this.event=n,"number"!=typeof i.expires?(t.logger.warn("expires must be a number. Using default of 3600."),this.expires=3600):this.expires=i.expires,i.extraHeaders.push("Event: "+this.event),i.extraHeaders.push("Expires: "+this.expires),i.body&&(this.body=i.body),this.contact=t.contact.toString(),i.extraHeaders.push("Contact: "+this.contact),i.extraHeaders.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),e.Utils.augment(this,e.ClientContext,[t,e.C.SUBSCRIBE,r,i]),this.logger=t.getLogger("sip.subscription"),this.dialog=null,this.timers={N:null,sub_duration:null},this.errorCodes=[404,405,410,416,480,481,482,483,484,485,489,501,604]},e.Subscription.prototype={subscribe:function(){return"active"===this.state?(this.refresh(),this):"notify_wait"===this.state?this:(e.Timers.clearTimeout(this.timers.sub_duration),e.Timers.clearTimeout(this.timers.N),this.timers.N=e.Timers.setTimeout(this.timer_fire.bind(this),e.Timers.TIMER_N),this.ua.earlySubscriptions[this.request.call_id+this.request.from.parameters.tag+this.event]=this,this.send(),this.state="notify_wait",this)},refresh:function(){"terminated"!==this.state&&"pending"!==this.state&&"notify_wait"!==this.state&&this.dialog.sendRequest(this,e.C.SUBSCRIBE,{extraHeaders:this.extraHeaders,body:this.body})},receiveResponse:function(t){var r,n=e.Utils.getReasonPhrase(t.status_code);"notify_wait"===this.state&&t.status_code>=300||"notify_wait"!==this.state&&-1!==this.errorCodes.indexOf(t.status_code)?this.failed(t,null):/^2[0-9]{2}$/.test(t.status_code)?(this.emit("accepted",t,n),(r=t.getHeader("Expires"))&&r<=this.expires?(this.expires=r,this.timers.sub_duration=e.Timers.setTimeout(this.refresh.bind(this),900*r)):r?(this.logger.warn("Expires header in a 200-class response to SUBSCRIBE with a higher value than the one in the request"),this.failed(t,e.C.INVALID_EXPIRES_HEADER)):(this.logger.warn("Expires header missing in a 200-class response to SUBSCRIBE"),this.failed(t,e.C.EXPIRES_HEADER_MISSING))):t.statusCode>300&&(this.emit("failed",t,n),this.emit("rejected",t,n))},unsubscribe:function(){var t=[];this.state="terminated",t.push("Event: "+this.event),t.push("Expires: 0"),t.push("Contact: "+this.contact),t.push("Allow: "+e.UA.C.ALLOWED_METHODS.toString()),this.receiveResponse=function(){},this.dialog.sendRequest(this,this.method,{extraHeaders:t,body:this.body}),e.Timers.clearTimeout(this.timers.sub_duration),e.Timers.clearTimeout(this.timers.N),this.timers.N=e.Timers.setTimeout(this.timer_fire.bind(this),e.Timers.TIMER_N)},timer_fire:function(){"terminated"===this.state?(this.terminateDialog(),e.Timers.clearTimeout(this.timers.N),e.Timers.clearTimeout(this.timers.sub_duration),delete this.ua.subscriptions[this.id]):"notify_wait"===this.state||"pending"===this.state?this.close():this.refresh()},close:function(){"notify_wait"===this.state?(this.state="terminated",e.Timers.clearTimeout(this.timers.N),e.Timers.clearTimeout(this.timers.sub_duration),this.receiveResponse=function(){},delete this.ua.earlySubscriptions[this.request.call_id+this.request.from.parameters.tag+this.event]):"terminated"!==this.state&&this.unsubscribe()},createConfirmedDialog:function(t,r){var n;return this.terminateDialog(),(n=new e.Dialog(this,t,r)).invite_seqnum=this.request.cseq,n.local_seqnum=this.request.cseq,!n.error&&(this.dialog=n,!0)},terminateDialog:function(){this.dialog&&(delete this.ua.subscriptions[this.id],this.dialog.terminate(),delete this.dialog)},receiveRequest:function(t){var r,n=this;function i(){r.expires&&(e.Timers.clearTimeout(n.timers.sub_duration),r.expires=Math.min(n.expires,Math.max(r.expires,0)),n.timers.sub_duration=e.Timers.setTimeout(n.refresh.bind(n),900*r.expires))}if(this.matchEvent(t))if(this.dialog||this.createConfirmedDialog(t,"UAS")&&(this.id=this.dialog.id.toString(),delete this.ua.earlySubscriptions[this.request.call_id+this.request.from.parameters.tag+this.event],this.ua.subscriptions[this.id]=this),r=t.parseHeader("Subscription-State"),t.reply(200,e.C.REASON_200),e.Timers.clearTimeout(this.timers.N),this.emit("notify",{request:t}),"terminated"!==this.state)switch(r.state){case"active":this.state="active",i();break;case"pending":"notify_wait"===this.state&&i(),this.state="pending";break;case"terminated":if(e.Timers.clearTimeout(this.timers.sub_duration),r.reason)switch(this.logger.log("terminating subscription with reason "+r.reason),r.reason){case"deactivated":case"timeout":return void this.subscribe();case"probation":case"giveup":return void(r.params&&r.params["retry-after"]?this.timers.sub_duration=e.Timers.setTimeout(n.subscribe.bind(n),r.params["retry-after"]):this.subscribe())}this.close()}else"terminated"===r.state&&(this.terminateDialog(),e.Timers.clearTimeout(this.timers.N),e.Timers.clearTimeout(this.timers.sub_duration),delete this.ua.subscriptions[this.id]);else t.reply(489)},failed:function(e,t){return this.close(),this.emit("failed",e,t),this.emit("rejected",e,t),this},onDialogError:function(t){this.failed(t,e.C.causes.DIALOG_ERROR)},matchEvent:function(e){var t;return e.hasHeader("Event")?e.hasHeader("Subscription-State")?(t=e.parseHeader("event").event,this.event===t||(this.logger.warn("event match failed"),e.reply(481,"Event Match Failed"),!1)):(this.logger.warn("missing Subscription-State header"),!1):(this.logger.warn("missing Event header"),!1)}}}},function(e,t,r){"use strict";e.exports=function(e,t){var n,i;return(n={}).MediaHandler=r(31)(e),n.MediaStreamManager=r(32)(e,t),n.isSupported=function(){return void 0!==i?i:(n.MediaStream=t.MediaStream,n.getUserMedia=t.getUserMedia,n.RTCPeerConnection=t.RTCPeerConnection,n.RTCSessionDescription=t.RTCSessionDescription,n.RTCPeerConnection&&n.RTCSessionDescription?(n.getUserMedia&&(n.getUserMedia=e.Utils.promisify(t,"getUserMedia")),i=!0):i=!1,i)},n}},function(e,t,r){"use strict";e.exports=function(e){var t=function(t,r){r=r||{},this.logger=t.ua.getLogger("sip.invitecontext.mediahandler",t.id),this.session=t,this.localMedia=null,this.ready=!0,this.mediaStreamManager=r.mediaStreamManager||new e.WebRTC.MediaStreamManager(this.logger),this.audioMuted=!1,this.videoMuted=!1,this.local_hold=!1,this.remote_hold=!1;var n=this.prepareIceServers(r.stunServers,r.turnServers);function i(e,t){e.mediaStreamManager.on&&e.mediaStreamManager.on(t,function(){e.emit.apply(e,[t].concat(Array.prototype.slice.call(arguments)))})}this.RTCConstraints=r.RTCConstraints||{},this.initPeerConnection(n),i(this,"userMediaRequest"),i(this,"userMedia"),i(this,"userMediaFailed")};return(t.defaultFactory=function(e,r){return new t(e,r)}).isSupported=function(){return e.WebRTC.isSupported()},t.prototype=Object.create(e.MediaHandler.prototype,{isReady:{writable:!0,value:function(){return this.ready}},close:{writable:!0,value:function(){this.logger.log("closing PeerConnection"),this._remoteStreams=[],this.peerConnection&&"closed"!==this.peerConnection.signalingState&&(this.peerConnection.close(),this.localMedia&&this.mediaStreamManager.release(this.localMedia))}},getDescription:{writable:!0,value:function(t){var r,n=this,i=n.mediaStreamManager.acquire;return i.length>1&&(i=e.Utils.promisify(this.mediaStreamManager,"acquire",!0)),!0===(t=t||{}).dataChannel&&(t.dataChannel={}),this.mediaHint=t,n.localMedia?(n.logger.log("already have local media"),r=e.Utils.Promise.resolve(n.localMedia)):(n.logger.log("acquiring local media"),r=i.call(n.mediaStreamManager,t).then(function(e){return n.logger.log("acquired local media streams"),n.localMedia=e,n.session.connecting(),e},function(e){throw n.logger.error("unable to acquire streams"),n.logger.error(e),n.session.connecting(),e}).then(this.addStreams.bind(this))),r.then(function(){return n.hasOffer("remote")?n.peerConnection.ondatachannel=function(e){n.dataChannel=e.channel,n.emit("dataChannel",n.dataChannel)}:t.dataChannel&&n.peerConnection.createDataChannel&&(n.dataChannel=n.peerConnection.createDataChannel("sipjs",t.dataChannel),n.emit("dataChannel",n.dataChannel)),n.render(),n.createOfferOrAnswer(n.RTCConstraints)}).then(function(t){return t=e.Hacks.Firefox.hasMissingCLineInSDP(t),n.local_hold&&(t=/a=(sendrecv|sendonly|recvonly|inactive)/.test(t)?(t=t.replace(/a=sendrecv\r\n/g,"a=sendonly\r\n")).replace(/a=recvonly\r\n/g,"a=inactive\r\n"):t.replace(/(m=[^\r]*\r\n)/g,"$1a=sendonly\r\n")),{body:t,contentType:"application/sdp"}})}},hasDescription:{writeable:!0,value:function(e){return"application/sdp"===e.getHeader("Content-Type")&&!!e.body}},setDescription:{writable:!0,value:function(t){var r=this,n=t.body;this.remote_hold=/a=(sendonly|inactive)/.test(n),n=e.Hacks.Firefox.cannotHandleExtraWhitespace(n),n=e.Hacks.AllBrowsers.maskDtls(n);var i={type:this.hasOffer("local")?"answer":"offer",sdp:n};this.emit("setDescription",i);var s=new e.WebRTC.RTCSessionDescription(i);return e.Utils.promisify(this.peerConnection,"setRemoteDescription")(s).catch(function(e){throw r.emit("peerConnection-setRemoteDescriptionFailed",e),e})}},getReferMedia:{writable:!0,value:function(){function e(e,t){return t[e]().length>0}function t(t){return this.getLocalStreams().some(e.bind(null,t))&&this.getRemoteStreams().some(e.bind(null,t))}return{constraints:{audio:t.call(this,"getAudioTracks"),video:t.call(this,"getVideoTracks")}}}},updateIceServers:{writeable:!0,value:function(e){var t=this.prepareIceServers(e.stunServers,e.turnServers);this.RTCConstraints=e.RTCConstraints||this.RTCConstraints,this.initPeerConnection(t)}},isMuted:{writable:!0,value:function(){return{audio:this.audioMuted,video:this.videoMuted}}},mute:{writable:!0,value:function(e){if(0!==this.getLocalStreams().length){var t=!1,r=!1;return(e=e||{audio:this.getLocalStreams()[0].getAudioTracks().length>0,video:this.getLocalStreams()[0].getVideoTracks().length>0}).audio&&!this.audioMuted&&(t=!0,this.audioMuted=!0,this.toggleMuteAudio(!0)),e.video&&!this.videoMuted&&(r=!0,this.videoMuted=!0,this.toggleMuteVideo(!0)),t||r?{audio:t,video:r}:void 0}}},unmute:{writable:!0,value:function(e){if(0!==this.getLocalStreams().length){var t=!1,r=!1;return(e=e||{audio:this.getLocalStreams()[0].getAudioTracks().length>0,video:this.getLocalStreams()[0].getVideoTracks().length>0}).audio&&this.audioMuted&&(t=!0,this.audioMuted=!1,this.toggleMuteAudio(!1)),e.video&&this.videoMuted&&(r=!0,this.videoMuted=!1,this.toggleMuteVideo(!1)),t||r?{audio:t,video:r}:void 0}}},hold:{writable:!0,value:function(){this.local_hold=!0,this.toggleMuteAudio(!0),this.toggleMuteVideo(!0)}},unhold:{writable:!0,value:function(){this.local_hold=!1,this.audioMuted||this.toggleMuteAudio(!1),this.videoMuted||this.toggleMuteVideo(!1)}},getLocalStreams:{writable:!0,value:function(){var e=this.peerConnection;return e&&"closed"===e.signalingState?(this.logger.warn("peerConnection is closed, getLocalStreams returning []"),[]):e.getLocalStreams&&e.getLocalStreams()||e.localStreams||[]}},getRemoteStreams:{writable:!0,value:function(){var e=this.peerConnection;return e&&"closed"===e.signalingState?(this.logger.warn("peerConnection is closed, getRemoteStreams returning this._remoteStreams"),this._remoteStreams):e.getRemoteStreams&&e.getRemoteStreams()||e.remoteStreams||[]}},render:{writable:!0,value:function(t){if(!(t=t||this.mediaHint&&this.mediaHint.render))return!1;var r={local:"getLocalStreams",remote:"getRemoteStreams"};Object.keys(r).forEach(function(n){var i=this[r[n]]();e.WebRTC.MediaStreamManager.render(i,t[n])}.bind(this))}},hasOffer:{writable:!0,value:function(e){var t="have-"+e+"-offer";return this.peerConnection.signalingState===t}},prepareIceServers:{writable:!0,value:function(e,t){var r=[],n=this.session.ua.configuration;return e=e||n.stunServers,t=t||n.turnServers,[].concat(e).forEach(function(e){r.push({urls:e})}),[].concat(t).forEach(function(e){var t={urls:e.urls};e.username&&(t.username=e.username),e.password&&(t.credential=e.password),r.push(t)}),r}},initPeerConnection:{writable:!0,value:function(t){var r=this,n=this.session.ua.configuration;this.onIceCompleted=e.Utils.defer(),this.onIceCompleted.promise.then(function(t){r.emit("iceGatheringComplete",t),r.iceCheckingTimer&&(e.Timers.clearTimeout(r.iceCheckingTimer),r.iceCheckingTimer=null)}),this.peerConnection&&this.peerConnection.close();var i={iceServers:t};n.rtcpMuxPolicy&&(i.rtcpMuxPolicy=n.rtcpMuxPolicy),this.peerConnection=new e.WebRTC.RTCPeerConnection(i),this._remoteStreams=[],this.peerConnection.onaddstream=function(e){r.logger.log("stream added: "+e.stream.id),r._remoteStreams.push(e.stream),r.render(),r.emit("addStream",e)},this.peerConnection.onremovestream=function(e){r.logger.log("stream removed: "+e.stream.id)},this.startIceCheckingTimer=function(){r.iceCheckingTimer||(r.iceCheckingTimer=e.Timers.setTimeout(function(){r.logger.log("RTCIceChecking Timeout Triggered after "+n.iceCheckingTimeout+" milliseconds"),r.onIceCompleted.resolve(this)}.bind(this.peerConnection),n.iceCheckingTimeout))},this.peerConnection.onicecandidate=function(e){r.emit("iceCandidate",e),e.candidate?(r.logger.log("ICE candidate received: "+(null===e.candidate.candidate?null:e.candidate.candidate.trim())),r.startIceCheckingTimer()):r.onIceCompleted.resolve(this)},this.peerConnection.onicegatheringstatechange=function(){r.logger.log("RTCIceGatheringState changed: "+this.iceGatheringState),"gathering"===this.iceGatheringState&&r.emit("iceGathering",this),"complete"===this.iceGatheringState&&r.onIceCompleted.resolve(this)},this.peerConnection.oniceconnectionstatechange=function(){var e;switch("checking"===this.iceConnectionState&&r.startIceCheckingTimer(),this.iceConnectionState){case"new":e="iceConnection";break;case"checking":e="iceConnectionChecking";break;case"connected":e="iceConnectionConnected";break;case"completed":e="iceConnectionCompleted";break;case"failed":e="iceConnectionFailed";break;case"disconnected":e="iceConnectionDisconnected";break;case"closed":e="iceConnectionClosed";break;default:return void r.logger.warn("Unknown iceConnection state:",this.iceConnectionState)}r.emit(e,this)},this.peerConnection.onstatechange=function(){r.logger.log('PeerConnection state changed to "'+this.readyState+'"')}}},createOfferOrAnswer:{writable:!0,value:function(t){var r,n=this,i=n.peerConnection;return n.ready=!1,r=n.hasOffer("remote")?"createAnswer":"createOffer",e.Utils.promisify(i,r,!0)(t).catch(function(e){throw n.emit("peerConnection-"+r+"Failed",e),e}).then(e.Utils.promisify(i,"setLocalDescription")).catch(function(e){throw n.emit("peerConnection-selLocalDescriptionFailed",e),e}).then(function(){var t=e.Utils.defer();return"complete"!==i.iceGatheringState||"connected"!==i.iceConnectionState&&"completed"!==i.iceConnectionState?n.onIceCompleted.promise.then(t.resolve):t.resolve(),t.promise}).then(function(){var t=i.localDescription.sdp;t=e.Hacks.Chrome.needsExplicitlyInactiveSDP(t),t=e.Hacks.AllBrowsers.unmaskDtls(t);var s={type:"createOffer"===r?"offer":"answer",sdp:t};return n.emit("getDescription",s),n.session.ua.configuration.hackStripTcp&&(s.sdp=s.sdp.replace(/^a=candidate:\d+ \d+ tcp .*?\r\n/gim,"")),n.ready=!0,s.sdp}).catch(function(t){throw n.logger.error(t),n.ready=!0,new e.Exceptions.GetDescriptionError(t)})}},addStreams:{writable:!0,value:function(t){try{(t=[].concat(t)).forEach(function(e){this.peerConnection.addStream(e)},this)}catch(t){return this.logger.error("error adding stream"),this.logger.error(t),e.Utils.Promise.reject(t)}return e.Utils.Promise.resolve()}},toggleMuteHelper:{writable:!0,value:function(e,t){this.getLocalStreams().forEach(function(r){r[e]().forEach(function(e){e.enabled=!t})})}},toggleMuteAudio:{writable:!0,value:function(e){this.toggleMuteHelper("getAudioTracks",e)}},toggleMuteVideo:{writable:!0,value:function(e){this.toggleMuteHelper("getVideoTracks",e)}}}),t}},function(e,t,r){"use strict";e.exports=function(e,t){var r=function(t,r){if(!e.WebRTC.isSupported())throw new e.Exceptions.NotSupportedError("Media not supported");this.mediaHint=r||{constraints:{audio:!0,video:!0}},this.acquisitions={}};return r.streamId=function(e){return e.getAudioTracks().concat(e.getVideoTracks()).map(function(e){return e.id}).join("")},r.render=function(r,n){if(!n)return!1;if(Array.isArray(n)&&!n.length)throw new TypeError("elements must not be empty");n=[].concat(n),[].concat(r).forEach(function(r,n,i){var s=r[i%r.length];"function"==typeof s&&(s=s()),(t.attachMediaStream||function(e,t){e.srcObject=t})(s,n),function(t){t.ensurePlayingIntervalId=e.Timers.setInterval(function(){t.paused&&t.srcObject?t.play():e.Timers.clearInterval(t.ensurePlayingIntervalId)},100)}(s)}.bind(null,n))},r.prototype=Object.create(e.EventEmitter.prototype,{acquire:{writable:!0,value:function(t){t=Object.keys(t||{}).length?t:this.mediaHint;var n=function(t,n){return(n=[].concat(n)).forEach(function(e){var n=r.streamId(e);this.acquisitions[n]=!!t},this),e.Utils.Promise.resolve(n)}.bind(this);if(t.stream)return n(!0,t.stream);var i=t.constraints||this.mediaHint&&this.mediaHint.constraints||{audio:!0,video:!0},s=e.Utils.defer();return e.Timers.setTimeout(function(){this.emit("userMediaRequest",i);var t=function(e,t){var r=Array.prototype.slice.call(arguments,2),n=[e].concat(r);return this.emit.apply(this,n),t.apply(null,r)}.bind(this);i.audio||i.video?s.resolve(e.WebRTC.getUserMedia(i).then(t.bind(this,"userMedia",n.bind(null,!1)),t.bind(this,"userMediaFailed",function(e){throw e}))):s.resolve([])}.bind(this),0),s.promise}},release:{writable:!0,value:function(e){(e=[].concat(e)).forEach(function(e){var t=r.streamId(e);!1===this.acquisitions[t]&&e.getTracks().forEach(function(e){e.stop()}),delete this.acquisitions[t]},this)}}}),r}},function(e,t,r){"use strict";e.exports=function(e,t){var r,n={STATUS_INIT:0,STATUS_STARTING:1,STATUS_READY:2,STATUS_USER_CLOSED:3,STATUS_NOT_READY:4,CONFIGURATION_ERROR:1,NETWORK_ERROR:2,ALLOWED_METHODS:["ACK","CANCEL","INVITE","MESSAGE","BYE","OPTIONS","INFO","NOTIFY","REFER"],ACCEPTED_BODY_TYPES:["application/sdp","application/dtmf-relay"],MAX_FORWARDS:70,TAG_LENGTH:10};function i(t){if(t instanceof Function)return t.initialize||(t.initialize=function(){return e.Utils.Promise.resolve()}),t}((r=function(t){var r=this;function i(e){return r.emit.bind(r,e)}n.ACCEPTED_BODY_TYPES=n.ACCEPTED_BODY_TYPES.toString(),this.log=new e.LoggerFactory,this.logger=this.getLogger("sip.ua"),this.cache={credentials:{}},this.configuration={},this.dialogs={},this.applicants={},this.data={},this.sessions={},this.subscriptions={},this.earlySubscriptions={},this.transport=null,this.contact=null,this.status=n.STATUS_INIT,this.error=null,this.transactions={nist:{},nict:{},ist:{},ict:{}},this.transportRecoverAttempts=0,this.transportRecoveryTimer=null,Object.defineProperties(this,{transactionsCount:{get:function(){var e,t=["nist","nict","ist","ict"],r=0;for(e in t)r+=Object.keys(this.transactions[t[e]]).length;return r}},nictTransactionsCount:{get:function(){return Object.keys(this.transactions.nict).length}},nistTransactionsCount:{get:function(){return Object.keys(this.transactions.nist).length}},ictTransactionsCount:{get:function(){return Object.keys(this.transactions.ict).length}},istTransactionsCount:{get:function(){return Object.keys(this.transactions.ist).length}}}),void 0===t?t={}:("string"==typeof t||t instanceof String)&&(t={uri:t}),t.log&&(t.log.hasOwnProperty("builtinEnabled")&&(this.log.builtinEnabled=t.log.builtinEnabled),t.log.hasOwnProperty("level")&&(this.log.level=t.log.level),t.log.hasOwnProperty("connector")&&(this.log.connector=t.log.connector));try{this.loadConfig(t)}catch(e){throw this.status=n.STATUS_NOT_READY,this.error=n.CONFIGURATION_ERROR,e}this.registerContext=new e.RegisterContext(this),this.registerContext.on("failed",i("registrationFailed")),this.registerContext.on("registered",i("registered")),this.registerContext.on("unregistered",i("unregistered")),this.configuration.autostart&&this.start()}).prototype=Object.create(e.EventEmitter.prototype)).register=function(e){return this.configuration.register=!0,this.registerContext.register(e),this},r.prototype.unregister=function(e){this.configuration.register=!1;var t=this.registerContext;return this.afterConnected(t.unregister.bind(t,e)),this},r.prototype.isRegistered=function(){return this.registerContext.registered},r.prototype.isConnected=function(){return!!this.transport&&this.transport.connected},r.prototype.afterConnected=function(e){this.isConnected()?e():this.once("connected",e)},r.prototype.invite=function(t,r){var n=new e.InviteClientContext(this,t,r);return this.afterConnected(n.invite.bind(n)),this.emit("inviteSent",n),n},r.prototype.subscribe=function(t,r,n){var i=new e.Subscription(this,t,r,n);return this.afterConnected(i.subscribe.bind(i)),i},r.prototype.message=function(t,r,n){if(void 0===r)throw new TypeError("Not enough arguments");return(n=Object.create(n||Object.prototype)).contentType||(n.contentType="text/plain"),n.body=r,this.request(e.C.MESSAGE,t,n)},r.prototype.request=function(t,r,n){var i=new e.ClientContext(this,t,r,n);return this.afterConnected(i.send.bind(i)),i},r.prototype.stop=function(){var r,i,s,o=this;if(this.logger.log("user requested closure..."),this.status===n.STATUS_USER_CLOSED)return this.logger.warn("UA already closed"),this;for(r in e.Timers.clearTimeout(this.transportRecoveryTimer),this.logger.log("closing registerContext"),this.registerContext.close(),this.sessions)this.logger.log("closing session "+r),this.sessions[r].terminate();for(i in this.subscriptions)this.logger.log("unsubscribing from subscription "+i),this.subscriptions[i].close();for(i in this.earlySubscriptions)this.logger.log("unsubscribing from early subscription "+i),this.earlySubscriptions[i].close();for(s in this.applicants)this.applicants[s].close();return this.status=n.STATUS_USER_CLOSED,0===this.nistTransactionsCount&&0===this.nictTransactionsCount?this.transport.disconnect():this.on("transactionDestroyed",function e(){0===o.nistTransactionsCount&&0===o.nictTransactionsCount&&(o.removeListener("transactionDestroyed",e),o.transport.disconnect())}),"function"==typeof t.removeEventListener&&(Object({}).chrome&&Object({}).chrome.app&&Object({}).chrome.app.runtime||t.removeEventListener("unload",this.environListener)),this},r.prototype.start=function(){var r;return this.logger.log("user requested startup..."),this.status===n.STATUS_INIT?(r=this.getNextWsServer(),this.status=n.STATUS_STARTING,new e.Transport(this,r)):this.status===n.STATUS_USER_CLOSED?(this.logger.log("resuming"),this.status=n.STATUS_READY,this.transport.connect()):this.status===n.STATUS_STARTING?this.logger.log("UA is in STARTING status, not opening new connection"):this.status===n.STATUS_READY?this.logger.log("UA is in READY status, not resuming"):this.logger.error("Connection is down. Auto-Recovery system is trying to connect"),this.configuration.autostop&&"function"==typeof t.addEventListener&&(Object({}).chrome&&Object({}).chrome.app&&Object({}).chrome.app.runtime||(this.environListener=this.stop.bind(this),t.addEventListener("unload",this.environListener))),this},r.prototype.normalizeTarget=function(t){return e.Utils.normalizeTarget(t,this.configuration.hostportParams)},r.prototype.saveCredentials=function(e){return this.cache.credentials[e.realm]=this.cache.credentials[e.realm]||{},this.cache.credentials[e.realm][e.uri]=e,this},r.prototype.getCredentials=function(e){var t,r;return t=e.ruri.host,this.cache.credentials[t]&&this.cache.credentials[t][e.ruri]&&((r=this.cache.credentials[t][e.ruri]).method=e.method),r},r.prototype.getLogger=function(e,t){return this.log.getLogger(e,t)},r.prototype.onTransportClosed=function(t){var r,n,i,s=["nict","ict","nist","ist"];for(t.server.status=e.Transport.C.STATUS_DISCONNECTED,this.logger.log("connection state set to "+e.Transport.C.STATUS_DISCONNECTED),i=s.length,r=0;r<i;r++)for(n in this.transactions[s[r]])this.transactions[s[r]][n].onTransportError();this.contact.pub_gruu||this.closeSessionsOnTransportError()},r.prototype.onTransportError=function(t){var r;this.logger.log("transport "+t.server.ws_uri+" failed | connection state set to "+e.Transport.C.STATUS_ERROR),t.server.status=e.Transport.C.STATUS_ERROR,this.emit("disconnected",{transport:t}),this.status!==n.STATUS_USER_CLOSED&&((r=this.getNextWsServer())?new e.Transport(this,r):(this.closeSessionsOnTransportError(),this.error&&this.error===n.NETWORK_ERROR||(this.status=n.STATUS_NOT_READY,this.error=n.NETWORK_ERROR),this.recoverTransport()))},r.prototype.onTransportConnected=function(t){this.transport=t,this.transportRecoverAttempts=0,t.server.status=e.Transport.C.STATUS_READY,this.logger.log("connection state set to "+e.Transport.C.STATUS_READY),this.status!==n.STATUS_USER_CLOSED&&(this.status=n.STATUS_READY,this.error=null,this.configuration.register&&this.configuration.authenticationFactory.initialize().then(function(){this.registerContext.onTransportConnected()}.bind(this)),this.emit("connected",{transport:t}))},r.prototype.onTransportConnecting=function(e,t){this.emit("connecting",{transport:e,attempts:t})},r.prototype.newTransaction=function(e){this.transactions[e.type][e.id]=e,this.emit("newTransaction",{transaction:e})},r.prototype.destroyTransaction=function(e){delete this.transactions[e.type][e.id],this.emit("transactionDestroyed",{transaction:e})},r.prototype.receiveRequest=function(t){var r,i,s,o,a,u,c=t.method,l=this;function d(e){return e&&e.user===t.ruri.user}if(!(d(this.configuration.uri)||d(this.contact.uri)||d(this.contact.pub_gruu)||d(this.contact.temp_gruu)))return this.logger.warn("Request-URI does not point to us"),void(t.method!==e.C.ACK&&t.reply_sl(404));if(t.ruri.scheme!==e.C.SIPS){if(!e.Transactions.checkTransaction(this,t))if(c===e.C.OPTIONS?(new e.Transactions.NonInviteServerTransaction(t,this),t.reply(200,null,["Allow: "+e.UA.C.ALLOWED_METHODS.toString(),"Accept: "+n.ACCEPTED_BODY_TYPES])):c===e.C.MESSAGE?((s=new e.ServerContext(this,t)).body=t.body,s.content_type=t.getHeader("Content-Type")||"text/plain",t.reply(200,null),this.emit("message",s)):c!==e.C.INVITE&&c!==e.C.ACK&&new e.ServerContext(this,t),t.to_tag)(r=this.findDialog(t))?(c===e.C.INVITE&&new e.Transactions.InviteServerTransaction(t,this),r.receiveRequest(t)):c===e.C.NOTIFY?(i=this.findSession(t),o=this.findEarlySubscription(t),i?i.receiveRequest(t):o?o.receiveRequest(t):(this.logger.warn("received NOTIFY request for a non existent session or subscription"),t.reply(481,"Subscription does not exist"))):c!==e.C.ACK&&t.reply(481);else switch(c){case e.C.INVITE:if(a=this.configuration.replaces!==e.C.supported.UNSUPPORTED&&t.parseHeader("replaces")){if(!(u=this.dialogs[a.call_id+a.replaces_to_tag+a.replaces_from_tag]))return void t.reply_sl(481,null);if(u.owner.status===e.Session.C.STATUS_TERMINATED)return void t.reply_sl(603,null);if(u.state===e.Dialog.C.STATUS_CONFIRMED&&a.early_only)return void t.reply_sl(486,null)}var h=this.configuration.mediaHandlerFactory.isSupported;!h||h()?((i=new e.InviteServerContext(this,t)).replacee=u&&u.owner,i.on("invite",function(){l.emit("invite",this)})):(this.logger.warn("INVITE received but WebRTC is not supported"),t.reply(488));break;case e.C.BYE:t.reply(481);break;case e.C.CANCEL:(i=this.findSession(t))?i.receiveRequest(t):this.logger.warn("received CANCEL request for a non existent session");break;case e.C.ACK:break;case e.C.NOTIFY:this.configuration.allowLegacyNotifications&&this.listeners("notify").length>0?(t.reply(200,null),l.emit("notify",{request:t})):t.reply(481,"Subscription does not exist");break;default:t.reply(405)}}else t.reply_sl(416)},r.prototype.findSession=function(e){return this.sessions[e.call_id+e.from_tag]||this.sessions[e.call_id+e.to_tag]||null},r.prototype.findDialog=function(e){return this.dialogs[e.call_id+e.from_tag+e.to_tag]||this.dialogs[e.call_id+e.to_tag+e.from_tag]||null},r.prototype.findEarlySubscription=function(e){return this.earlySubscriptions[e.call_id+e.to_tag+e.getHeader("event")]||null},r.prototype.getNextWsServer=function(){var t,r,n,i=[];for(r=this.configuration.wsServers.length,t=0;t<r;t++)(n=this.configuration.wsServers[t]).status!==e.Transport.C.STATUS_ERROR&&(0===i.length?i.push(n):n.weight>i[0].weight?i=[n]:n.weight===i[0].weight&&i.push(n));return i[t=Math.floor(Math.random()*i.length)]},r.prototype.closeSessionsOnTransportError=function(){var e;for(e in this.sessions)this.sessions[e].onTransportError();this.registerContext.onTransportClosed()},r.prototype.recoverTransport=function(t){var r,n,i,s,o;for(s=(t=t||this).transportRecoverAttempts,n=t.configuration.wsServers.length,r=0;r<n;r++)t.configuration.wsServers[r].status=0;o=t.getNextWsServer(),(i=Math.floor(Math.random()*Math.pow(2,s)+1)*t.configuration.connectionRecoveryMinInterval)>t.configuration.connectionRecoveryMaxInterval&&(this.logger.log("time for next connection attempt exceeds connectionRecoveryMaxInterval, resetting counter"),i=t.configuration.connectionRecoveryMinInterval,s=0),this.logger.log("next connection attempt in "+i+" seconds"),this.transportRecoveryTimer=e.Timers.setTimeout(function(){t.transportRecoverAttempts=s+1,new e.Transport(t,o)},1e3*i)},r.prototype.loadConfig=function(t){var r,n,s,o,a,u={viaHost:e.Utils.createRandomToken(12)+".invalid",uri:new e.URI("sip","anonymous."+e.Utils.createRandomToken(6),"anonymous.invalid",null,null),wsServers:[{scheme:"WSS",sip_uri:"<sip:edge.sip.onsip.com;transport=ws;lr>",status:0,weight:0,ws_uri:"wss://edge.sip.onsip.com"}],custom:{},displayName:"",password:null,registerExpires:600,register:!0,registrarServer:null,wsServerMaxReconnection:3,wsServerReconnectionTimeout:4,connectionRecoveryMinInterval:2,connectionRecoveryMaxInterval:30,keepAliveInterval:0,extraSupported:[],usePreloadedRoute:!1,userAgentString:e.C.USER_AGENT,iceCheckingTimeout:5e3,noAnswerTimeout:60,stunServers:["stun:stun.l.google.com:19302"],turnServers:[],traceSip:!1,hackViaTcp:!1,hackIpInContact:!1,hackWssInTransport:!1,hackAllowUnregisteredOptionTags:!1,hackCleanJitsiSdpImageattr:!1,hackStripTcp:!1,contactTransport:"ws",forceRport:!1,autostart:!0,autostop:!0,rel100:e.C.supported.UNSUPPORTED,replaces:e.C.supported.UNSUPPORTED,mediaHandlerFactory:e.WebRTC.MediaHandler.defaultFactory,authenticationFactory:i(function(t){return new e.DigestAuthentication(t)}),allowLegacyNotifications:!1};function c(e,r){var n=e.replace(/([a-z][A-Z])/g,function(e){return e[0]+"_"+e[1].toLowerCase()});if(e!==n){var i=t.hasOwnProperty(e);t.hasOwnProperty(n)&&(r.warn(n+" is deprecated, please use "+e),i&&r.warn(e+" overriding "+n)),t[e]=i?t[e]:t[n]}}var l=this.getConfigurationCheck();for(r in l.mandatory){if(c(r,this.logger),!t.hasOwnProperty(r))throw new e.Exceptions.ConfigurationError(r);if(n=t[r],void 0===(s=l.mandatory[r](n)))throw new e.Exceptions.ConfigurationError(r,n);u[r]=s}e.Utils.optionsOverride(t,"rel100","reliable",!0,this.logger,e.C.supported.UNSUPPORTED);var d=["stunServers","turnServers"];for(r in l.optional)if(c(r,this.logger),t.hasOwnProperty(r)){if((n=t[r])instanceof Array&&0===n.length&&d.indexOf(r)<0)continue;if(null===n||""===n||void 0===n)continue;if("number"==typeof n&&isNaN(n))continue;if(void 0===(s=l.optional[r](n)))throw new e.Exceptions.ConfigurationError(r,n);u[r]=s}if(u.connectionRecoveryMaxInterval<u.connectionRecoveryMinInterval)throw new e.Exceptions.ConfigurationError("connectionRecoveryMaxInterval",u.connectionRecoveryMaxInterval);0===u.displayName&&(u.displayName="0"),u.instanceId||(u.instanceId=e.Utils.newUUID()),u.sipjsId=e.Utils.createRandomToken(5),(o=u.uri.clone()).user=null,u.hostportParams=o.toRaw().replace(/^sip:/i,""),u.authorizationUser||(u.authorizationUser=u.uri.user),u.registrarServer||((a=u.uri.clone()).user=null,u.registrarServer=a),u.noAnswerTimeout=1e3*u.noAnswerTimeout,u.hackIpInContact&&("boolean"==typeof u.hackIpInContact?u.viaHost=e.Utils.getRandomTestNetIP():"string"==typeof u.hackIpInContact&&(u.viaHost=u.hackIpInContact)),u.hackWssInTransport&&(u.contactTransport="wss"),this.contact={pub_gruu:null,temp_gruu:null,uri:new e.URI("sip",e.Utils.createRandomToken(8),u.viaHost,null,{transport:u.contactTransport}),toString:function(e){var t=(e=e||{}).anonymous||null,r=e.outbound||null,n="<";return n+=t?(this.temp_gruu||"sip:anonymous@anonymous.invalid;transport="+u.contactTransport).toString():(this.pub_gruu||this.uri).toString(),r&&(n+=";ob"),n+=">"}},e.Utils.optionsOverride(u,"media","mediaConstraints",!0,this.logger);var h={};for(r in u)h[r]={value:u[r],writable:"register"===r||"custom"===r,configurable:!1};for(r in Object.defineProperties(this.configuration,h),this.logger.log("configuration parameters after validation:"),u)switch(r){case"uri":case"registrarServer":case"mediaHandlerFactory":this.logger.log("· "+r+": "+u[r]);break;case"password":this.logger.log("· "+r+": NOT SHOWN");break;default:this.logger.log("· "+r+": "+JSON.stringify(u[r]))}},r.prototype.getConfigurationCheck=function(){return{mandatory:{},optional:{uri:function(t){var r;return/^sip:/i.test(t)||(t=e.C.SIP+":"+t),(r=e.URI.parse(t))&&r.user?r:void 0},wsServers:function(t){var r,n,i;if("string"==typeof t)t=[{ws_uri:t}];else{if(!(t instanceof Array))return;for(n=t.length,r=0;r<n;r++)"string"==typeof t[r]&&(t[r]={ws_uri:t[r]})}if(0===t.length)return!1;for(n=t.length,r=0;r<n;r++){if(!t[r].ws_uri)return;if(t[r].weight&&!Number(t[r].weight))return;if(-1===(i=e.Grammar.parse(t[r].ws_uri,"absoluteURI")))return;if(["wss","ws","udp"].indexOf(i.scheme)<0)return;t[r].sip_uri="<sip:"+i.host+(i.port?":"+i.port:"")+";transport="+i.scheme.replace(/^wss$/i,"ws")+";lr>",t[r].weight||(t[r].weight=0),t[r].status=0,t[r].scheme=i.scheme.toUpperCase()}return t},authorizationUser:function(t){return-1===e.Grammar.parse('"'+t+'"',"quoted_string")?void 0:t},connectionRecoveryMaxInterval:function(t){var r;if(e.Utils.isDecimal(t)&&(r=Number(t))>0)return r},connectionRecoveryMinInterval:function(t){var r;if(e.Utils.isDecimal(t)&&(r=Number(t))>0)return r},displayName:function(t){return-1===e.Grammar.parse('"'+t+'"',"displayName")?void 0:t},hackViaTcp:function(e){if("boolean"==typeof e)return e},hackIpInContact:function(t){return"boolean"==typeof t?t:"string"==typeof t&&-1!==e.Grammar.parse(t,"host")?t:void 0},iceCheckingTimeout:function(t){if(e.Utils.isDecimal(t))return Math.max(500,t)},hackWssInTransport:function(e){if("boolean"==typeof e)return e},hackAllowUnregisteredOptionTags:function(e){if("boolean"==typeof e)return e},hackCleanJitsiSdpImageattr:function(e){if("boolean"==typeof e)return e},hackStripTcp:function(e){if("boolean"==typeof e)return e},contactTransport:function(e){if("string"==typeof e)return e},forceRport:function(e){if("boolean"==typeof e)return e},instanceId:function(t){if("string"==typeof t)return/^uuid:/i.test(t)&&(t=t.substr(5)),-1===e.Grammar.parse(t,"uuid")?void 0:t},keepAliveInterval:function(t){var r;if(e.Utils.isDecimal(t)&&(r=Number(t))>0)return r},extraSupported:function(e){var t,r;if(e instanceof Array){for(r=e.length,t=0;t<r;t++)if("string"!=typeof e[t])return;return e}},noAnswerTimeout:function(t){var r;if(e.Utils.isDecimal(t)&&(r=Number(t))>0)return r},password:function(e){return String(e)},rel100:function(t){return t===e.C.supported.REQUIRED?e.C.supported.REQUIRED:t===e.C.supported.SUPPORTED?e.C.supported.SUPPORTED:e.C.supported.UNSUPPORTED},replaces:function(t){return t===e.C.supported.REQUIRED?e.C.supported.REQUIRED:t===e.C.supported.SUPPORTED?e.C.supported.SUPPORTED:e.C.supported.UNSUPPORTED},register:function(e){if("boolean"==typeof e)return e},registerExpires:function(t){var r;if(e.Utils.isDecimal(t)&&(r=Number(t))>0)return r},registrarServer:function(t){var r;if("string"==typeof t)return/^sip:/i.test(t)||(t=e.C.SIP+":"+t),(r=e.URI.parse(t))?r.user?void 0:r:void 0},stunServers:function(t){var r,n,i;if("string"==typeof t)t=[t];else if(!(t instanceof Array))return;for(n=t.length,r=0;r<n;r++){if(i=t[r],/^stuns?:/.test(i)||(i="stun:"+i),-1===e.Grammar.parse(i,"stun_URI"))return;t[r]=i}return t},traceSip:function(e){if("boolean"==typeof e)return e},turnServers:function(t){var r,n,i,s,o,a;for(t instanceof Array||(t=[t]),i=t.length,r=0;r<i;r++){if((s=t[r]).server&&(s.urls=[s.server]),!s.urls)return;for(s.urls instanceof Array?o=s.urls.length:(s.urls=[s.urls],o=1),n=0;n<o;n++)if(a=s.urls[n],/^turns?:/.test(a)||(a="turn:"+a),-1===e.Grammar.parse(a,"turn_URI"))return}return t},rtcpMuxPolicy:function(e){if("string"==typeof e)return e},userAgentString:function(e){if("string"==typeof e)return e},usePreloadedRoute:function(e){if("boolean"==typeof e)return e},wsServerMaxReconnection:function(t){var r;if(e.Utils.isDecimal(t)&&(r=Number(t))>0)return r},wsServerReconnectionTimeout:function(t){var r;if(e.Utils.isDecimal(t)&&(r=Number(t))>0)return r},autostart:function(e){if("boolean"==typeof e)return e},autostop:function(e){if("boolean"==typeof e)return e},mediaHandlerFactory:function(t){if(t instanceof Function){var r=function(){var r=t.apply(this,arguments);function n(t){if(r[t].length>1){var n="getDescription"===t;r[t]=e.Utils.promisify(r,t,n)}}return n("getDescription"),n("setDescription"),r};return r.isSupported=t.isSupported,r}},authenticationFactory:i,allowLegacyNotifications:function(e){if("boolean"==typeof e)return e},custom:function(e){if("object"==typeof e)return e}}}},r.C=n,e.UA=r}},function(e,t,r){"use strict";e.exports=function(e){e=e;var t={AllBrowsers:{maskDtls:function(e){return e&&(e=e.replace(/ UDP\/TLS\/RTP\/SAVP/gim," RTP/SAVP")),e},unmaskDtls:function(e){return e.replace(/ RTP\/SAVP/gim," UDP/TLS/RTP/SAVP")}},Firefox:{isFirefox:function(){return"undefined"!=typeof mozRTCPeerConnection},cannotHandleExtraWhitespace:function(e){return this.isFirefox()&&e&&(e=e.replace(/ \r\n/g,"\r\n")),e},hasMissingCLineInSDP:function(e){var t,r;if(e.indexOf("c=")>e.indexOf("m=")){r=e.match(/m=.*\r\n.*/g);for(var n=0;n<r.length;n++)r[n].toString().search(/i=.*/)>=0?(t=e.indexOf(r[n].toString())+r[n].toString().length,"c="!==e.substr(t,2)&&(e=e.substr(0,t)+"\r\nc=IN IP4 0.0.0.0"+e.substr(t))):r[n].toString().search(/c=.*/)<0&&(t=e.indexOf(r[n].toString().match(/.*/))+r[n].toString().match(/.*/).toString().length,e=e.substr(0,t)+"\r\nc=IN IP4 0.0.0.0"+e.substr(t))}return e}},Chrome:{needsExplicitlyInactiveSDP:function(e){var r,n;return t.Firefox.isFirefox()&&-1!==(n=e.indexOf("m=video 0"))?(r=(r=e.substr(n)).replace(/\r\nc=IN IP4.*\r\n$/,"\r\nc=IN IP4 0.0.0.0\r\na=inactive\r\n"),e.substr(0,n)+r):e},getsConfusedAboutGUM:function(e){e.mediaHandler&&e.mediaHandler.close()}}};return t}},function(e,t,r){"use strict";e.exports=function(e){var t,r=[],n=[],i=[];function s(t,r,n){for(var i,s=e.Utils.buildStatusLine(t),o=r.getHeaders("via"),a=o.length,u=0;u<a;u++)s+="Via: "+o[u]+"\r\n";i=r.getHeader("To"),r.to_tag||(i+=";tag="+e.Utils.newTag()),s+="To: "+i+"\r\n",s+="From: "+r.getHeader("From")+"\r\n",s+="Call-ID: "+r.call_id+"\r\n",s+="CSeq: "+r.cseq+" "+r.method+"\r\n",s+="\r\n",n.send(s)}r.push(function(e,t,r){if(!e.ruri||"sip"!==e.ruri.scheme)return s(416,e,r),!1}),r.push(function(e,t,r){if(!e.to_tag&&e.call_id.substr(0,5)===t.configuration.sipjsId)return s(482,e,r),!1}),r.push(function(t,r,n){if(e.Utils.str_utf8_length(t.body)<t.getHeader("content-length"))return s(400,t,n),!1}),r.push(function(t,r,n){var i,o,a=t.from_tag,u=t.call_id,c=t.cseq;if(!t.to_tag)if(t.method===e.C.INVITE){if(i=r.transactions.ist[t.via_branch])return;for(o in r.transactions.ist)if((i=r.transactions.ist[o]).request.from_tag===a&&i.request.call_id===u&&i.request.cseq===c)return s(482,t,n),!1}else{if(i=r.transactions.nist[t.via_branch])return;for(o in r.transactions.nist)if((i=r.transactions.nist[o]).request.from_tag===a&&i.request.call_id===u&&i.request.cseq===c)return s(482,t,n),!1}}),n.push(function(e,t){if(e.getHeaders("via").length>1)return t.getLogger("sip.sanitycheck").warn("More than one Via header field present in the response. Dropping the response"),!1}),n.push(function(e,t){var r=t.configuration.viaHost;if(e.via.host!==r||void 0!==e.via.port)return t.getLogger("sip.sanitycheck").warn("Via sent-by in the response does not match UA Via host value. Dropping the response"),!1}),n.push(function(t,r){if(e.Utils.str_utf8_length(t.body)<t.getHeader("content-length"))return r.getLogger("sip.sanitycheck").warn("Message body length is lower than the value in Content-Length header field. Dropping the response"),!1}),i.push(function(e,t){for(var r=["from","to","call_id","cseq","via"],n=r.length;n--;)if(!e.hasHeader(r[n]))return t.getLogger("sip.sanitycheck").warn("Missing mandatory header field : "+r[n]+". Dropping the response"),!1}),t=function(t,s,o){var a;for(a=i.length;a--;)if(!1===i[a](t,s,o))return!1;if(t instanceof e.IncomingRequest){for(a=r.length;a--;)if(!1===r[a](t,s,o))return!1}else if(t instanceof e.IncomingResponse)for(a=n.length;a--;)if(!1===n[a](t,s,o))return!1;return!0},e.sanityCheck=t}},function(e,t,r){"use strict";e.exports=function(e){var t;return(t=function(e){this.logger=e.getLogger("sipjs.digestauthentication"),this.username=e.configuration.authorizationUser,this.password=e.configuration.password,this.cnonce=null,this.nc=0,this.ncHex="00000000",this.response=null}).prototype.authenticate=function(t,r){if(this.algorithm=r.algorithm,this.realm=r.realm,this.nonce=r.nonce,this.opaque=r.opaque,this.stale=r.stale,this.algorithm){if("MD5"!==this.algorithm)return this.logger.warn('challenge with Digest algorithm different than "MD5", authentication aborted'),!1}else this.algorithm="MD5";if(!this.realm)return this.logger.warn("challenge without Digest realm, authentication aborted"),!1;if(!this.nonce)return this.logger.warn("challenge without Digest nonce, authentication aborted"),!1;if(r.qop)if(r.qop.indexOf("auth")>-1)this.qop="auth";else{if(!(r.qop.indexOf("auth-int")>-1))return this.logger.warn('challenge without Digest qop different than "auth" or "auth-int", authentication aborted'),!1;this.qop="auth-int"}else this.qop=null;return this.method=t.method,this.uri=t.ruri,this.cnonce=e.createRandomToken(12),this.nc+=1,this.updateNcHex(),4294967296===this.nc&&(this.nc=1,this.ncHex="00000001"),this.calculateResponse(),!0},t.prototype.calculateResponse=function(){var t,r;t=e.calculateMD5(this.username+":"+this.realm+":"+this.password),"auth"===this.qop?(r=e.calculateMD5(this.method+":"+this.uri),this.response=e.calculateMD5(t+":"+this.nonce+":"+this.ncHex+":"+this.cnonce+":auth:"+r)):"auth-int"===this.qop?(r=e.calculateMD5(this.method+":"+this.uri+":"+e.calculateMD5(this.body?this.body:"")),this.response=e.calculateMD5(t+":"+this.nonce+":"+this.ncHex+":"+this.cnonce+":auth-int:"+r)):null===this.qop&&(r=e.calculateMD5(this.method+":"+this.uri),this.response=e.calculateMD5(t+":"+this.nonce+":"+r))},t.prototype.toString=function(){var e=[];if(!this.response)throw new Error("response field does not exist, cannot generate Authorization header");return e.push("algorithm="+this.algorithm),e.push('username="'+this.username+'"'),e.push('realm="'+this.realm+'"'),e.push('nonce="'+this.nonce+'"'),e.push('uri="'+this.uri+'"'),e.push('response="'+this.response+'"'),this.opaque&&e.push('opaque="'+this.opaque+'"'),this.qop&&(e.push("qop="+this.qop),e.push('cnonce="'+this.cnonce+'"'),e.push("nc="+this.ncHex)),"Digest "+e.join(", ")},t.prototype.updateNcHex=function(){var e=Number(this.nc).toString(16);this.ncHex="00000000".substr(0,8-e.length)+e},t}},function(e,t,r){"use strict";var n=r(38);e.exports=function(e){return{parse:function(t,r){var i={startRule:r,SIP:e};try{n.parse(t,i)}catch(e){i.data=-1}return i.data}}}},function(e,t){e.exports=function(){function e(e,t,r,n,i,s){this.message=e,this.expected=t,this.found=r,this.offset=n,this.line=i,this.column=s,this.name="SyntaxError"}return function(e,t){function r(){this.constructor=e}r.prototype=t.prototype,e.prototype=new r}(e,Error),{SyntaxError:e,parse:function(t){var r,n=arguments.length>1?arguments[1]:{},i={},s={Contact:118,Name_Addr_Header:155,Record_Route:175,Request_Response:81,SIP_URI:45,Subscription_State:185,Supported:190,Require:181,Via:193,absoluteURI:84,Call_ID:117,Content_Disposition:129,Content_Length:134,Content_Type:135,CSeq:145,displayName:121,Event:148,From:150,host:52,Max_Forwards:153,Min_SE:212,Proxy_Authenticate:156,quoted_string:40,Refer_To:177,Replaces:178,Session_Expires:209,stun_URI:216,To:191,turn_URI:223,uuid:226,WWW_Authenticate:208,challenge:157},o=118,a=["\r\n",{type:"literal",value:"\r\n",description:'"\\r\\n"'},/^[0-9]/,{type:"class",value:"[0-9]",description:"[0-9]"},/^[a-zA-Z]/,{type:"class",value:"[a-zA-Z]",description:"[a-zA-Z]"},/^[0-9a-fA-F]/,{type:"class",value:"[0-9a-fA-F]",description:"[0-9a-fA-F]"},/^[\0-\xFF]/,{type:"class",value:"[\\0-\\xFF]",description:"[\\0-\\xFF]"},/^["]/,{type:"class",value:'["]',description:'["]'}," ",{type:"literal",value:" ",description:'" "'},"\t",{type:"literal",value:"\t",description:'"\\t"'},/^[a-zA-Z0-9]/,{type:"class",value:"[a-zA-Z0-9]",description:"[a-zA-Z0-9]"},";",{type:"literal",value:";",description:'";"'},"/",{type:"literal",value:"/",description:'"/"'},"?",{type:"literal",value:"?",description:'"?"'},":",{type:"literal",value:":",description:'":"'},"@",{type:"literal",value:"@",description:'"@"'},"&",{type:"literal",value:"&",description:'"&"'},"=",{type:"literal",value:"=",description:'"="'},"+",{type:"literal",value:"+",description:'"+"'},"$",{type:"literal",value:"$",description:'"$"'},",",{type:"literal",value:",",description:'","'},"-",{type:"literal",value:"-",description:'"-"'},"_",{type:"literal",value:"_",description:'"_"'},".",{type:"literal",value:".",description:'"."'},"!",{type:"literal",value:"!",description:'"!"'},"~",{type:"literal",value:"~",description:'"~"'},"*",{type:"literal",value:"*",description:'"*"'},"'",{type:"literal",value:"'",description:'"\'"'},"(",{type:"literal",value:"(",description:'"("'},")",{type:"literal",value:")",description:'")"'},i,"%",{type:"literal",value:"%",description:'"%"'},null,[],function(){return" "},function(){return":"},/^[!-~]/,{type:"class",value:"[!-~]",description:"[!-~]"},/^[\x80-\uFFFF]/,{type:"class",value:"[\\x80-\\uFFFF]",description:"[\\x80-\\uFFFF]"},/^[\x80-\xBF]/,{type:"class",value:"[\\x80-\\xBF]",description:"[\\x80-\\xBF]"},/^[a-f]/,{type:"class",value:"[a-f]",description:"[a-f]"},"`",{type:"literal",value:"`",description:'"`"'},"<",{type:"literal",value:"<",description:'"<"'},">",{type:"literal",value:">",description:'">"'},"\\",{type:"literal",value:"\\",description:'"\\\\"'},"[",{type:"literal",value:"[",description:'"["'},"]",{type:"literal",value:"]",description:'"]"'},"{",{type:"literal",value:"{",description:'"{"'},"}",{type:"literal",value:"}",description:'"}"'},function(){return"*"},function(){return"/"},function(){return"="},function(){return"("},function(){return")"},function(){return">"},function(){return"<"},function(){return","},function(){return";"},function(){return":"},function(){return'"'},/^[!-']/,{type:"class",value:"[!-']",description:"[!-']"},/^[*-[]/,{type:"class",value:"[*-[]",description:"[*-[]"},/^[\]-~]/,{type:"class",value:"[\\]-~]",description:"[\\]-~]"},function(e){return e},/^[#-[]/,{type:"class",value:"[#-[]",description:"[#-[]"},/^[\0-\t]/,{type:"class",value:"[\\0-\\t]",description:"[\\0-\\t]"},/^[\x0B-\f]/,{type:"class",value:"[\\x0B-\\f]",description:"[\\x0B-\\f]"},/^[\x0E-]/,{type:"class",value:"[\\x0E-]",description:"[\\x0E-]"},function(){n.data.uri=new n.SIP.URI(n.data.scheme,n.data.user,n.data.host,n.data.port),delete n.data.scheme,delete n.data.user,delete n.data.host,delete n.data.host_type,delete n.data.port},function(){n.data.uri=new n.SIP.URI(n.data.scheme,n.data.user,n.data.host,n.data.port,n.data.uri_params,n.data.uri_headers),delete n.data.scheme,delete n.data.user,delete n.data.host,delete n.data.host_type,delete n.data.port,delete n.data.uri_params,"SIP_URI"===n.startRule&&(n.data=n.data.uri)},"sips",{type:"literal",value:"sips",description:'"sips"'},"sip",{type:"literal",value:"sip",description:'"sip"'},function(e){n.data.scheme=e},function(){n.data.user=decodeURIComponent(g().slice(0,-1))},function(){n.data.password=g()},function(){return n.data.host=g(),n.data.host},function(){return n.data.host_type="domain",g()},/^[a-zA-Z0-9_\-]/,{type:"class",value:"[a-zA-Z0-9_\\-]",description:"[a-zA-Z0-9_\\-]"},/^[a-zA-Z0-9\-]/,{type:"class",value:"[a-zA-Z0-9\\-]",description:"[a-zA-Z0-9\\-]"},function(){return n.data.host_type="IPv6",g()},"::",{type:"literal",value:"::",description:'"::"'},function(){return n.data.host_type="IPv6",g()},function(){return n.data.host_type="IPv4",g()},"25",{type:"literal",value:"25",description:'"25"'},/^[0-5]/,{type:"class",value:"[0-5]",description:"[0-5]"},"2",{type:"literal",value:"2",description:'"2"'},/^[0-4]/,{type:"class",value:"[0-4]",description:"[0-4]"},"1",{type:"literal",value:"1",description:'"1"'},/^[1-9]/,{type:"class",value:"[1-9]",description:"[1-9]"},function(e){return e=parseInt(e.join("")),n.data.port=e,e},"transport=",{type:"literal",value:"transport=",description:'"transport="'},"udp",{type:"literal",value:"udp",description:'"udp"'},"tcp",{type:"literal",value:"tcp",description:'"tcp"'},"sctp",{type:"literal",value:"sctp",description:'"sctp"'},"tls",{type:"literal",value:"tls",description:'"tls"'},function(e){n.data.uri_params||(n.data.uri_params={}),n.data.uri_params.transport=e.toLowerCase()},"user=",{type:"literal",value:"user=",description:'"user="'},"phone",{type:"literal",value:"phone",description:'"phone"'},"ip",{type:"literal",value:"ip",description:'"ip"'},function(e){n.data.uri_params||(n.data.uri_params={}),n.data.uri_params.user=e.toLowerCase()},"method=",{type:"literal",value:"method=",description:'"method="'},function(e){n.data.uri_params||(n.data.uri_params={}),n.data.uri_params.method=e},"ttl=",{type:"literal",value:"ttl=",description:'"ttl="'},function(e){n.data.params||(n.data.params={}),n.data.params.ttl=e},"maddr=",{type:"literal",value:"maddr=",description:'"maddr="'},function(e){n.data.uri_params||(n.data.uri_params={}),n.data.uri_params.maddr=e},"lr",{type:"literal",value:"lr",description:'"lr"'},function(){n.data.uri_params||(n.data.uri_params={}),n.data.uri_params.lr=void 0},function(e,t){n.data.uri_params||(n.data.uri_params={}),t=null===t?void 0:t[1],n.data.uri_params[e.toLowerCase()]=t&&t.toLowerCase()},function(e,t){e=e.join("").toLowerCase(),t=t.join(""),n.data.uri_headers||(n.data.uri_headers={}),n.data.uri_headers[e]?n.data.uri_headers[e].push(t):n.data.uri_headers[e]=[t]},function(){"Refer_To"===n.startRule&&(n.data.uri=new n.SIP.URI(n.data.scheme,n.data.user,n.data.host,n.data.port,n.data.uri_params,n.data.uri_headers),delete n.data.scheme,delete n.data.user,delete n.data.host,delete n.data.host_type,delete n.data.port,delete n.data.uri_params)},"//",{type:"literal",value:"//",description:'"//"'},function(){n.data.scheme=g()},{type:"literal",value:"SIP",description:'"SIP"'},function(){n.data.sip_version=g()},"INVITE",{type:"literal",value:"INVITE",description:'"INVITE"'},"ACK",{type:"literal",value:"ACK",description:'"ACK"'},"VXACH",{type:"literal",value:"VXACH",description:'"VXACH"'},"OPTIONS",{type:"literal",value:"OPTIONS",description:'"OPTIONS"'},"BYE",{type:"literal",value:"BYE",description:'"BYE"'},"CANCEL",{type:"literal",value:"CANCEL",description:'"CANCEL"'},"REGISTER",{type:"literal",value:"REGISTER",description:'"REGISTER"'},"SUBSCRIBE",{type:"literal",value:"SUBSCRIBE",description:'"SUBSCRIBE"'},"NOTIFY",{type:"literal",value:"NOTIFY",description:'"NOTIFY"'},"REFER",{type:"literal",value:"REFER",description:'"REFER"'},function(){return n.data.method=g(),n.data.method},function(e){n.data.status_code=parseInt(e.join(""))},function(){n.data.reason_phrase=g()},function(){n.data=g()},function(){var e,t;for(t=n.data.multi_header.length,e=0;e<t;e++)if(null===n.data.multi_header[e].parsed){n.data=null;break}null!==n.data?n.data=n.data.multi_header:n.data=-1},function(){var e;n.data.multi_header||(n.data.multi_header=[]);try{e=new n.SIP.NameAddrHeader(n.data.uri,n.data.displayName,n.data.params),delete n.data.uri,delete n.data.displayName,delete n.data.params}catch(t){e=null}n.data.multi_header.push({position:c,offset:m(),parsed:e})},function(e){'"'===(e=g().trim())[0]&&(e=e.substring(1,e.length-1)),n.data.displayName=e},"q",{type:"literal",value:"q",description:'"q"'},function(e){n.data.params||(n.data.params={}),n.data.params.q=e},"expires",{type:"literal",value:"expires",description:'"expires"'},function(e){n.data.params||(n.data.params={}),n.data.params.expires=e},function(e){return parseInt(e.join(""))},"0",{type:"literal",value:"0",description:'"0"'},function(){return parseFloat(g())},function(e,t){n.data.params||(n.data.params={}),t=null===t?void 0:t[1],n.data.params[e.toLowerCase()]=t},"render",{type:"literal",value:"render",description:'"render"'},"session",{type:"literal",value:"session",description:'"session"'},"icon",{type:"literal",value:"icon",description:'"icon"'},"alert",{type:"literal",value:"alert",description:'"alert"'},function(){"Content_Disposition"===n.startRule&&(n.data.type=g().toLowerCase())},"handling",{type:"literal",value:"handling",description:'"handling"'},"optional",{type:"literal",value:"optional",description:'"optional"'},"required",{type:"literal",value:"required",description:'"required"'},function(e){n.data=parseInt(e.join(""))},function(){n.data=g()},"text",{type:"literal",value:"text",description:'"text"'},"image",{type:"literal",value:"image",description:'"image"'},"audio",{type:"literal",value:"audio",description:'"audio"'},"video",{type:"literal",value:"video",description:'"video"'},"application",{type:"literal",value:"application",description:'"application"'},"message",{type:"literal",value:"message",description:'"message"'},"multipart",{type:"literal",value:"multipart",description:'"multipart"'},"x-",{type:"literal",value:"x-",description:'"x-"'},function(e){n.data.value=parseInt(e.join(""))},function(e){n.data=e},function(e){n.data.event=e.toLowerCase()},function(){var e=n.data.tag;n.data=new n.SIP.NameAddrHeader(n.data.uri,n.data.displayName,n.data.params),e&&n.data.setParam("tag",e)},"tag",{type:"literal",value:"tag",description:'"tag"'},function(e){n.data.tag=e},function(e){n.data=parseInt(e.join(""))},function(e){n.data=e},function(){n.data=new n.SIP.NameAddrHeader(n.data.uri,n.data.displayName,n.data.params)},"digest",{type:"literal",value:"Digest",description:'"Digest"'},"realm",{type:"literal",value:"realm",description:'"realm"'},function(e){n.data.realm=e},"domain",{type:"literal",value:"domain",description:'"domain"'},"nonce",{type:"literal",value:"nonce",description:'"nonce"'},function(e){n.data.nonce=e},"opaque",{type:"literal",value:"opaque",description:'"opaque"'},function(e){n.data.opaque=e},"stale",{type:"literal",value:"stale",description:'"stale"'},"true",{type:"literal",value:"true",description:'"true"'},function(){n.data.stale=!0},"false",{type:"literal",value:"false",description:'"false"'},function(){n.data.stale=!1},"algorithm",{type:"literal",value:"algorithm",description:'"algorithm"'},"md5",{type:"literal",value:"MD5",description:'"MD5"'},"md5-sess",{type:"literal",value:"MD5-sess",description:'"MD5-sess"'},function(e){n.data.algorithm=e.toUpperCase()},"qop",{type:"literal",value:"qop",description:'"qop"'},"auth-int",{type:"literal",value:"auth-int",description:'"auth-int"'},"auth",{type:"literal",value:"auth",description:'"auth"'},function(e){n.data.qop||(n.data.qop=[]),n.data.qop.push(e.toLowerCase())},function(e){n.data.value=parseInt(e.join(""))},function(){var e,t;for(t=n.data.multi_header.length,e=0;e<t;e++)if(null===n.data.multi_header[e].parsed){n.data=null;break}null!==n.data?n.data=n.data.multi_header:n.data=-1},function(){var e;n.data.multi_header||(n.data.multi_header=[]);try{e=new n.SIP.NameAddrHeader(n.data.uri,n.data.displayName,n.data.params),delete n.data.uri,delete n.data.displayName,delete n.data.params}catch(t){e=null}n.data.multi_header.push({position:c,offset:m(),parsed:e})},function(){n.data=new n.SIP.NameAddrHeader(n.data.uri,n.data.displayName,n.data.params)},function(){n.data.replaces_from_tag&&n.data.replaces_to_tag||(n.data=-1)},function(){n.data={call_id:n.data}},"from-tag",{type:"literal",value:"from-tag",description:'"from-tag"'},function(e){n.data.replaces_from_tag=e},"to-tag",{type:"literal",value:"to-tag",description:'"to-tag"'},function(e){n.data.replaces_to_tag=e},"early-only",{type:"literal",value:"early-only",description:'"early-only"'},function(){n.data.early_only=!0},function(e){return e},function(e,t){return function(e,t){return[e].concat(t)}(e,t)},function(e){"Require"===n.startRule&&(n.data=e||[])},function(e){n.data.value=parseInt(e.join(""))},"active",{type:"literal",value:"active",description:'"active"'},"pending",{type:"literal",value:"pending",description:'"pending"'},"terminated",{type:"literal",value:"terminated",description:'"terminated"'},function(){n.data.state=g()},"reason",{type:"literal",value:"reason",description:'"reason"'},function(e){void 0!==e&&(n.data.reason=e)},function(e){void 0!==e&&(n.data.expires=e)},"retry_after",{type:"literal",value:"retry_after",description:'"retry_after"'},function(e){void 0!==e&&(n.data.retry_after=e)},"deactivated",{type:"literal",value:"deactivated",description:'"deactivated"'},"probation",{type:"literal",value:"probation",description:'"probation"'},"rejected",{type:"literal",value:"rejected",description:'"rejected"'},"timeout",{type:"literal",value:"timeout",description:'"timeout"'},"giveup",{type:"literal",value:"giveup",description:'"giveup"'},"noresource",{type:"literal",value:"noresource",description:'"noresource"'},"invariant",{type:"literal",value:"invariant",description:'"invariant"'},function(e){"Supported"===n.startRule&&(n.data=e||[])},function(){var e=n.data.tag;n.data=new n.SIP.NameAddrHeader(n.data.uri,n.data.displayName,n.data.params),e&&n.data.setParam("tag",e)},"ttl",{type:"literal",value:"ttl",description:'"ttl"'},function(e){n.data.ttl=e},"maddr",{type:"literal",value:"maddr",description:'"maddr"'},function(e){n.data.maddr=e},"received",{type:"literal",value:"received",description:'"received"'},function(e){n.data.received=e},"branch",{type:"literal",value:"branch",description:'"branch"'},function(e){n.data.branch=e},"rport",{type:"literal",value:"rport",description:'"rport"'},function(){"undefined"!=typeof response_port&&(n.data.rport=response_port.join(""))},function(e){n.data.protocol=e},{type:"literal",value:"UDP",description:'"UDP"'},{type:"literal",value:"TCP",description:'"TCP"'},{type:"literal",value:"TLS",description:'"TLS"'},{type:"literal",value:"SCTP",description:'"SCTP"'},function(e){n.data.transport=e},function(){n.data.host=g()},function(e){n.data.port=parseInt(e.join(""))},function(e){return parseInt(e.join(""))},function(e){"Session_Expires"===n.startRule&&(n.data.deltaSeconds=e)},"refresher",{type:"literal",value:"refresher",description:'"refresher"'},"uas",{type:"literal",value:"uas",description:'"uas"'},"uac",{type:"literal",value:"uac",description:'"uac"'},function(e){"Session_Expires"===n.startRule&&(n.data.refresher=e)},function(e){"Min_SE"===n.startRule&&(n.data=e)},"stuns",{type:"literal",value:"stuns",description:'"stuns"'},"stun",{type:"literal",value:"stun",description:'"stun"'},function(e){n.data.scheme=e},function(e){n.data.host=e},"?transport=",{type:"literal",value:"?transport=",description:'"?transport="'},"turns",{type:"literal",value:"turns",description:'"turns"'},"turn",{type:"literal",value:"turn",description:'"turn"'},function(){n.data.transport=transport},function(){n.data=g()}],u=[b('. ""2 3!'),b('0"""1!3#'),b('0$""1!3%'),b('0&""1!3\''),b("7'*# \"7("),b('0(""1!3)'),b('0*""1!3+'),b('.,""2,3-'),b('..""2.3/'),b('00""1!31'),b('.2""2233* ".4""2435*} ".6""2637*q ".8""2839*e ".:""2:3;*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E'),b('7)*# "7,'),b('.F""2F3G*} ".H""2H3I*q ".J""2J3K*e ".L""2L3M*Y ".N""2N3O*M ".P""2P3Q*A ".R""2R3S*5 ".T""2T3U*) ".V""2V3W'),b('!!.Y""2Y3Z+7$7#+-%7#+#%\'#%$## X$"# X"# X+! (%'),b('!! \\7$,#&7$"+-$7 +#%\'"%$"# X"# X*# " [+@$ \\7$+&$,#&7$""" X+\'%4"6]" %$"# X"# X'),b('7.*# " ['),b('! \\7\'*# "7(,)&7\'*# "7("+A$.8""2839+1%7/+\'%4#6^# %$## X$"# X"# X'),b('!! \\72+&$,#&72""" X+o$ \\! \\7.,#&7."+-$72+#%\'"%$"# X"# X,@&! \\7.,#&7."+-$72+#%\'"%$"# X"# X"+#%\'"%$"# X"# X+! (%'),b('0_""1!3`*# "73'),b('0a""1!3b'),b('0c""1!3d'),b('7!*) "0e""1!3f'),b('! \\7)* ".F""2F3G* ".J""2J3K*} ".L""2L3M*q ".Y""2Y3Z*e ".P""2P3Q*Y ".H""2H3I*M ".@""2@3A*A ".g""2g3h*5 ".R""2R3S*) ".N""2N3O+$,&7)* ".F""2F3G* ".J""2J3K*} ".L""2L3M*q ".Y""2Y3Z*e ".P""2P3Q*Y ".H""2H3I*M ".@""2@3A*A ".g""2g3h*5 ".R""2R3S*) ".N""2N3O""" X+! (%'),b('! \\7)* ".F""2F3G*} ".L""2L3M*q ".Y""2Y3Z*e ".P""2P3Q*Y ".H""2H3I*M ".@""2@3A*A ".g""2g3h*5 ".R""2R3S*) ".N""2N3O+$,&7)* ".F""2F3G*} ".L""2L3M*q ".Y""2Y3Z*e ".P""2P3Q*Y ".H""2H3I*M ".@""2@3A*A ".g""2g3h*5 ".R""2R3S*) ".N""2N3O""" X+! (%'),b('.T""2T3U*ã ".V""2V3W*× ".i""2i3j*Ë ".k""2k3l*¿ ".:""2:3;*³ ".D""2D3E*§ ".2""2233* ".8""2839* ".m""2m3n* "7&*} ".4""2435*q ".o""2o3p*e ".q""2q3r*Y ".6""2637*M ".>""2>3?*A ".s""2s3t*5 ".u""2u3v*) "7\'*# "7('),b('! \\7)*ī ".F""2F3G*ğ ".J""2J3K*ē ".L""2L3M*ć ".Y""2Y3Z*û ".P""2P3Q*ï ".H""2H3I*ã ".@""2@3A*× ".g""2g3h*Ë ".R""2R3S*¿ ".N""2N3O*³ ".T""2T3U*§ ".V""2V3W* ".i""2i3j* ".k""2k3l* ".8""2839*w ".m""2m3n*k "7&*e ".4""2435*Y ".o""2o3p*M ".q""2q3r*A ".6""2637*5 ".s""2s3t*) ".u""2u3v+Ĵ$,ı&7)*ī ".F""2F3G*ğ ".J""2J3K*ē ".L""2L3M*ć ".Y""2Y3Z*û ".P""2P3Q*ï ".H""2H3I*ã ".@""2@3A*× ".g""2g3h*Ë ".R""2R3S*¿ ".N""2N3O*³ ".T""2T3U*§ ".V""2V3W* ".i""2i3j* ".k""2k3l* ".8""2839*w ".m""2m3n*k "7&*e ".4""2435*Y ".o""2o3p*M ".q""2q3r*A ".6""2637*5 ".s""2s3t*) ".u""2u3v""" X+! (%'),b('!7/+A$.P""2P3Q+1%7/+\'%4#6w# %$## X$"# X"# X'),b('!7/+A$.4""2435+1%7/+\'%4#6x# %$## X$"# X"# X'),b('!7/+A$.>""2>3?+1%7/+\'%4#6y# %$## X$"# X"# X'),b('!7/+A$.T""2T3U+1%7/+\'%4#6z# %$## X$"# X"# X'),b('!7/+A$.V""2V3W+1%7/+\'%4#6{# %$## X$"# X"# X'),b('!.k""2k3l+1$7/+\'%4"6|" %$"# X"# X'),b('!7/+7$.i""2i3j+\'%4"6}" %$"# X"# X'),b('!7/+A$.D""2D3E+1%7/+\'%4#6~# %$## X$"# X"# X'),b('!7/+A$.2""2233+1%7/+\'%4#6# %$## X$"# X"# X'),b('!7/+A$.8""2839+1%7/+\'%4#6# %$## X$"# X"# X'),b('!7/+1$7&+\'%4"6" %$"# X"# X'),b('!7&+1$7/+\'%4"6" %$"# X"# X'),b('!7=+W$ \\7G*) "7K*# "7F,/&7G*) "7K*# "7F"+-%7>+#%\'#%$## X$"# X"# X'),b('0""1!3*A "0""1!3*5 "0""1!3*) "73*# "7.'),b('!!7/+U$7&+K% \\7J*# "7K,)&7J*# "7K"+-%7&+#%\'$%$$# X$## X$"# X"# X+! (%'),b('!7/+`$7&+V%! \\7J*# "7K,)&7J*# "7K"+! (%+2%7&+(%4$6$!!%$$# X$## X$"# X"# X'),b('7.*G ".L""2L3M*; "0""1!3*/ "0""1!3*# "73'),b('!.m""2m3n+K$0""1!3*5 "0""1!3*) "0""1!3+#%\'"%$"# X"# X'),b('!7N+Q$.8""2839+A%7O*# " [+1%7S+\'%4$6$ %$$# X$## X$"# X"# X'),b('!7N+k$.8""2839+[%7O*# " [+K%7S+A%7_+7%7l*# " [+\'%4&6& %$&# X$%# X$$# X$## X$"# X"# X'),b('!/""1$3*) "/""1#3+\' 4!6!! %'),b('!7P+b$!.8""2839+-$7R+#%\'"%$"# X"# X*# " [+7%.:""2:3;+\'%4#6# %$## X$"# X"# X'),b(' \\7+*) "7-*# "7Q+2$,/&7+*) "7-*# "7Q""" X'),b('.<""2<3=*q ".>""2>3?*e ".@""2@3A*Y ".B""2B3C*M ".D""2D3E*A ".2""2233*5 ".6""2637*) ".4""2435'),b('! \\7+*_ "7-*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E,e&7+*_ "7-*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E"+& 4!6! %'),b('!7T+N$!.8""2839+-$7^+#%\'"%$"# X"# X*# " [+#%\'"%$"# X"# X'),b('!7U*) "7\\*# "7X+& 4!6! %'),b('! \\!7V+3$.J""2J3K+#%\'"%$"# X"# X,>&!7V+3$.J""2J3K+#%\'"%$"# X"# X"+G$7W+=%.J""2J3K*# " [+\'%4#6# %$## X$"# X"# X'),b(' \\0""1!3+,$,)&0""1!3""" X'),b('!0$""1!3%+A$ \\0""1!3,)&0""1!3"+#%\'"%$"# X"# X'),b('!.o""2o3p+A$7Y+7%.q""2q3r+\'%4#6 # %$## X$"# X"# X'),b('!!7Z+¿$.8""2839+¯%7Z+¥%.8""2839+%7Z+%.8""2839+{%7Z+q%.8""2839+a%7Z+W%.8""2839+G%7Z+=%.8""2839+-%7[+#%\'-%$-# X$,# X$+# X$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*࠸ "!.¡""2¡3¢+¯$7Z+¥%.8""2839+%7Z+%.8""2839+{%7Z+q%.8""2839+a%7Z+W%.8""2839+G%7Z+=%.8""2839+-%7[+#%\',%$,# X$+# X$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*ޕ "!.¡""2¡3¢+$7Z+%.8""2839+{%7Z+q%.8""2839+a%7Z+W%.8""2839+G%7Z+=%.8""2839+-%7[+#%\'*%$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*܌ "!.¡""2¡3¢+{$7Z+q%.8""2839+a%7Z+W%.8""2839+G%7Z+=%.8""2839+-%7[+#%\'(%$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*ڝ "!.¡""2¡3¢+a$7Z+W%.8""2839+G%7Z+=%.8""2839+-%7[+#%\'&%$&# X$%# X$$# X$## X$"# X"# X*و "!.¡""2¡3¢+G$7Z+=%.8""2839+-%7[+#%\'$%$$# X$## X$"# X"# X*؍ "!.¡""2¡3¢+-$7[+#%\'"%$"# X"# X*׬ "!.¡""2¡3¢+-$7Z+#%\'"%$"# X"# X*׋ "!7Z+¥$.¡""2¡3¢+%7Z+%.8""2839+{%7Z+q%.8""2839+a%7Z+W%.8""2839+G%7Z+=%.8""2839+-%7[+#%\'+%$+# X$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*Ը "!7Z+¶$!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+%.¡""2¡3¢+{%7Z+q%.8""2839+a%7Z+W%.8""2839+G%7Z+=%.8""2839+-%7[+#%\'*%$*# X$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*Ҕ "!7Z+Ç$!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+q%.¡""2¡3¢+a%7Z+W%.8""2839+G%7Z+=%.8""2839+-%7[+#%\')%$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*ϟ "!7Z+Ø$!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+­%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+W%.¡""2¡3¢+G%7Z+=%.8""2839+-%7[+#%\'(%$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*̙ "!7Z+é$!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+¾%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+h%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+=%.¡""2¡3¢+-%7[+#%\'\'%$\'# X$&# X$%# X$$# X$## X$"# X"# X*ɂ "!7Z+Ĕ$!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+é%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+¾%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+h%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+=%.¡""2¡3¢+-%7Z+#%\'(%$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X*ŀ "!7Z+ĵ$!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+Ċ%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+ß%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+´%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+^%!.8""2839+-$7Z+#%\'"%$"# X"# X*# " [+3%.¡""2¡3¢+#%\'(%$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X+& 4!6£! %'),b('!7#+S$7#*# " [+C%7#*# " [+3%7#*# " [+#%\'$%$$# X$## X$"# X"# X'),b('!7Z+=$.8""2839+-%7Z+#%\'#%$## X$"# X"# X*# "7\\'),b('!7]+u$.J""2J3K+e%7]+[%.J""2J3K+K%7]+A%.J""2J3K+1%7]+\'%4\'6¤\' %$\'# X$&# X$%# X$$# X$## X$"# X"# X'),b('!.¥""2¥3¦+3$0§""1!3¨+#%\'"%$"# X"# X*  "!.©""2©3ª+=$0«""1!3¬+-%7!+#%\'#%$## X$"# X"# X*o "!.­""2­3®+7$7!+-%7!+#%\'#%$## X$"# X"# X*D "!0¯""1!3°+-$7!+#%\'"%$"# X"# X*# "7!'),b('!!7!*# " [+c$7!*# " [+S%7!*# " [+C%7!*# " [+3%7!*# " [+#%\'%%$%# X$$# X$## X$"# X"# X+\' 4!6±!! %'),b(' \\!.2""2233+-$7`+#%\'"%$"# X"# X,>&!.2""2233+-$7`+#%\'"%$"# X"# X"'),b('7a*A "7b*; "7c*5 "7d*/ "7e*) "7f*# "7g'),b('!/²""1*3³+b$/´""1#3µ*G "/¶""1#3·*; "/¸""1$3¹*/ "/º""1#3»*# "76+(%4"6¼"! %$"# X"# X'),b('!/½""1%3¾+J$/¿""1%3À*/ "/Á""1"3Â*# "76+(%4"6Ã"! %$"# X"# X'),b('!/Ä""1\'3Å+2$7+(%4"6Æ"! %$"# X"# X'),b('!/Ç""1$3È+2$7ï+(%4"6É"! %$"# X"# X'),b('!/Ê""1&3Ë+2$7T+(%4"6Ì"! %$"# X"# X'),b('!/Í""1"3Î+R$!.>""2>3?+-$76+#%\'"%$"# X"# X*# " [+\'%4"6Ï" %$"# X"# X'),b('!7h+T$!.>""2>3?+-$7i+#%\'"%$"# X"# X*# " [+)%4"6Ð""! %$"# X"# X'),b('! \\7j+&$,#&7j""" X+! (%'),b('! \\7j+&$,#&7j""" X+! (%'),b('7k*) "7+*# "7-'),b('.o""2o3p*e ".q""2q3r*Y ".4""2435*M ".8""2839*A ".<""2<3=*5 ".@""2@3A*) ".B""2B3C'),b('!.6""2637+u$7m+k% \\!.<""2<3=+-$7m+#%\'"%$"# X"# X,>&!.<""2<3=+-$7m+#%\'"%$"# X"# X"+#%\'#%$## X$"# X"# X'),b('!7n+C$.>""2>3?+3%7o+)%4#6Ñ#"" %$## X$"# X"# X'),b(' \\7p*) "7+*# "7-+2$,/&7p*) "7+*# "7-""" X'),b(' \\7p*) "7+*# "7-,/&7p*) "7+*# "7-"'),b('.o""2o3p*e ".q""2q3r*Y ".4""2435*M ".6""2637*A ".8""2839*5 ".@""2@3A*) ".B""2B3C'),b('7*# "7r'),b("!7+K$7'+A%7s+7%7'+-%7+#%'%%$%# X$$# X$## X$\"# X\"# X"),b('7M*# "7t'),b('!7+G$.8""2839+7%7u*# "7x+\'%4#6Ò# %$## X$"# X"# X'),b('!7v*# "7w+N$!.6""2637+-$7+#%\'"%$"# X"# X*# " [+#%\'"%$"# X"# X'),b('!.Ó""2Ó3Ô+=$7+3%7w*# " [+#%\'#%$## X$"# X"# X'),b('!.4""2435+-$7{+#%\'"%$"# X"# X'),b('!7z+5$ \\7y,#&7y"+#%\'"%$"# X"# X'),b('7**) "7+*# "7-'),b('7+* "7-* ".2""2233*} ".6""2637*q ".8""2839*e ".:""2:3;*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E'),b('!7|+k$ \\!.4""2435+-$7|+#%\'"%$"# X"# X,>&!.4""2435+-$7|+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b('! \\7~,#&7~"+k$ \\!.2""2233+-$7}+#%\'"%$"# X"# X,>&!.2""2233+-$7}+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b(' \\7~,#&7~"'),b('7+*w "7-*q ".8""2839*e ".:""2:3;*Y ".<""2<3=*M ".>""2>3?*A ".@""2@3A*5 ".B""2B3C*) ".D""2D3E'),b('!7"+$ \\7"*G "7!*A ".@""2@3A*5 ".F""2F3G*) ".J""2J3K,M&7"*G "7!*A ".@""2@3A*5 ".F""2F3G*) ".J""2J3K"+\'%4"6Õ" %$"# X"# X'),b('7*# "7'),b('!!7O+3$.:""2:3;+#%\'"%$"# X"# X*# " [+-$7S+#%\'"%$"# X"# X*# " ['),b(' \\7+* "7-*} ".B""2B3C*q ".D""2D3E*e ".2""2233*Y ".8""2839*M ".:""2:3;*A ".<""2<3=*5 ".>""2>3?*) ".@""2@3A+$,&7+* "7-*} ".B""2B3C*q ".D""2D3E*e ".2""2233*Y ".8""2839*M ".:""2:3;*A ".<""2<3=*5 ".>""2>3?*) ".@""2@3A""" X'),b(' \\7y,#&7y"'),b('!/""1#3Ö+y$.4""2435+i% \\7!+&$,#&7!""" X+P%.J""2J3K+@% \\7!+&$,#&7!""" X+\'%4%6×% %$%# X$$# X$## X$"# X"# X'),b('.Ø""2Ø3Ù'),b('.Ú""2Ú3Û'),b('.Ü""2Ü3Ý'),b('.Þ""2Þ3ß'),b('.à""2à3á'),b('.â""2â3ã'),b('.ä""2ä3å'),b('.æ""2æ3ç'),b('.è""2è3é'),b('.ê""2ê3ë'),b('!7*S "7*M "7*G "7*A "7*; "7*5 "7*/ "7*) "7*# "76+& 4!6ì! %'),b("!7+K$7'+A%7+7%7'+-%7+#%'%%$%# X$$# X$## X$\"# X\"# X"),b("!7+' 4!6í!! %"),b('!7!+7$7!+-%7!+#%\'#%$## X$"# X"# X'),b('! \\7**A "7+*; "7-*5 "73*/ "74*) "7\'*# "7(,G&7**A "7+*; "7-*5 "73*/ "74*) "7\'*# "7("+& 4!6î! %'),b('!7µ+_$ \\!7A+-$7µ+#%\'"%$"# X"# X,8&!7A+-$7µ+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b('!79+R$!.:""2:3;+-$79+#%\'"%$"# X"# X*# " [+\'%4"6ï" %$"# X"# X'),b('!7:*j "!7+_$ \\!7A+-$7+#%\'"%$"# X"# X,8&!7A+-$7+#%\'"%$"# X"# X"+#%\'"%$"# X"# X+& 4!6ð! %'),b('!7L*# "7+c$ \\!7B+-$7+#%\'"%$"# X"# X,8&!7B+-$7+#%\'"%$"# X"# X"+\'%4"6ñ" %$"# X"# X'),b('!7*# " [+A$7@+7%7M+-%7?+#%\'$%$$# X$## X$"# X"# X'),b('!!76+_$ \\!7.+-$76+#%\'"%$"# X"# X,8&!7.+-$76+#%\'"%$"# X"# X"+#%\'"%$"# X"# X*# "7H+\' 4!6ò!! %'),b('7*) "7*# "7'),b('!/ó""1!3ô+<$7<+2%7+(%4#6õ#! %$## X$"# X"# X'),b('!/ö""1\'3÷+<$7<+2%7+(%4#6ø#! %$## X$"# X"# X'),b('! \\7!+&$,#&7!""" X+\' 4!6ù!! %'),b('!.ú""2ú3û+x$!.J""2J3K+S$7!*# " [+C%7!*# " [+3%7!*# " [+#%\'$%$$# X$## X$"# X"# X*# " [+\'%4"6ü" %$"# X"# X'),b('!76+N$!7<+-$7 +#%\'"%$"# X"# X*# " [+)%4"6ý""! %$"# X"# X'),b('76*) "7T*# "7H'),b('!7¢+_$ \\!7B+-$7£+#%\'"%$"# X"# X,8&!7B+-$7£+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b('!/þ""1&3ÿ*G "/Ā""1\'3ā*; "/Ă""1$3ă*/ "/Ą""1%3ą*# "76+& 4!6Ć! %'),b('7¤*# "7'),b('!/ć""1(3Ĉ+O$7<+E%/ĉ""1(3Ċ*/ "/ċ""1(3Č*# "76+#%\'#%$## X$"# X"# X'),b('!76+_$ \\!7A+-$76+#%\'"%$"# X"# X,8&!7A+-$76+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b('! \\7!+&$,#&7!""" X+\' 4!6č!! %'),b("!7¨+& 4!6Ď! %"),b('!7©+s$7;+i%7®+_% \\!7B+-$7¯+#%\'"%$"# X"# X,8&!7B+-$7¯+#%\'"%$"# X"# X"+#%\'$%$$# X$## X$"# X"# X'),b('7ª*# "7«'),b('/ď""1$3Đ*S "/đ""1%3Ē*G "/ē""1%3Ĕ*; "/ĕ""1%3Ė*/ "/ė""1+3Ę*# "7¬'),b('/ę""1\'3Ě*/ "/ě""1)3Ĝ*# "7¬'),b('76*# "7­'),b('!/ĝ""1"3Ğ+-$76+#%\'"%$"# X"# X'),b('7¬*# "76'),b('!76+7$7<+-%7°+#%\'#%$## X$"# X"# X'),b('76*# "7H'),b('!7²+7$7.+-%7+#%\'#%$## X$"# X"# X'),b('! \\7!+&$,#&7!""" X+\' 4!6ğ!! %'),b("!7+' 4!6Ġ!! %"),b('!7µ+d$ \\!7B+-$7+#%\'"%$"# X"# X,8&!7B+-$7+#%\'"%$"# X"# X"+(%4"6ġ"!!%$"# X"# X'),b('!!77+k$ \\!.J""2J3K+-$77+#%\'"%$"# X"# X,>&!.J""2J3K+-$77+#%\'"%$"# X"# X"+#%\'"%$"# X"# X+! (%'),b('!7L*# "7+c$ \\!7B+-$7·+#%\'"%$"# X"# X,8&!7B+-$7·+#%\'"%$"# X"# X"+\'%4"6Ģ" %$"# X"# X'),b('7¸*# "7'),b('!/ģ""1#3Ĥ+<$7<+2%76+(%4#6ĥ#! %$## X$"# X"# X'),b('! \\7!+&$,#&7!""" X+\' 4!6Ħ!! %'),b("!7+' 4!6ħ!! %"),b('! \\7,#&7"+$7@+w%7M+m%7?+c% \\!7B+-$7+#%\'"%$"# X"# X,8&!7B+-$7+#%\'"%$"# X"# X"+\'%4%6Ĩ% %$%# X$$# X$## X$"# X"# X'),b("7½"),b('!/ĩ""1&3Ī+s$7.+i%7À+_% \\!7A+-$7À+#%\'"%$"# X"# X,8&!7A+-$7À+#%\'"%$"# X"# X"+#%\'$%$$# X$## X$"# X"# X*# "7¾'),b('!76+s$7.+i%7¿+_% \\!7A+-$7¿+#%\'"%$"# X"# X,8&!7A+-$7¿+#%\'"%$"# X"# X"+#%\'$%$$# X$## X$"# X"# X'),b('!76+=$7<+3%76*# "7H+#%\'#%$## X$"# X"# X'),b('7Á*G "7Ã*A "7Å*; "7Ç*5 "7È*/ "7É*) "7Ê*# "7¿'),b('!/ī""1%3Ĭ+7$7<+-%7Â+#%\'#%$## X$"# X"# X'),b("!7I+' 4!6ĭ!! %"),b('!/Į""1&3į+¥$7<+%7D+%7Ä+% \\! \\7\'+&$,#&7\'""" X+-$7Ä+#%\'"%$"# X"# X,G&! \\7\'+&$,#&7\'""" X+-$7Ä+#%\'"%$"# X"# X"+-%7E+#%\'&%$&# X$%# X$$# X$## X$"# X"# X'),b('7t*# "7w'),b('!/İ""1%3ı+7$7<+-%7Æ+#%\'#%$## X$"# X"# X'),b("!7I+' 4!6Ĳ!! %"),b('!/ĳ""1&3Ĵ+<$7<+2%7I+(%4#6ĵ#! %$## X$"# X"# X'),b('!/Ķ""1%3ķ+_$7<+U%!/ĸ""1$3Ĺ+& 4!6ĺ! %*4 "!/Ļ""1%3ļ+& 4!6Ľ! %+#%\'#%$## X$"# X"# X'),b('!/ľ""1)3Ŀ+T$7<+J%/ŀ""1#3Ł*/ "/ł""1(3Ń*# "76+(%4#6ń#! %$## X$"# X"# X'),b('!/Ņ""1#3ņ+$7<+%7D+%!7Ë+k$ \\!.D""2D3E+-$7Ë+#%\'"%$"# X"# X,>&!.D""2D3E+-$7Ë+#%\'"%$"# X"# X"+#%\'"%$"# X"# X+-%7E+#%\'%%$%# X$$# X$## X$"# X"# X'),b('!/Ň""1(3ň*/ "/ŉ""1$3Ŋ*# "76+\' 4!6ŋ!! %'),b('!76+_$ \\!7A+-$76+#%\'"%$"# X"# X,8&!7A+-$76+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b('!7Î+K$7.+A%7Î+7%7.+-%7+#%\'%%$%# X$$# X$## X$"# X"# X'),b('! \\7!+&$,#&7!""" X+\' 4!6Ō!! %'),b('!7Ð+c$ \\!7A+-$7Ð+#%\'"%$"# X"# X,8&!7A+-$7Ð+#%\'"%$"# X"# X"+\'%4"6ō" %$"# X"# X'),b('!7+c$ \\!7B+-$7+#%\'"%$"# X"# X,8&!7B+-$7+#%\'"%$"# X"# X"+\'%4"6Ŏ" %$"# X"# X'),b('!7L*T "7*N "!7@*# " [+=$7t+3%7?*# " [+#%\'#%$## X$"# X"# X+c$ \\!7B+-$7+#%\'"%$"# X"# X,8&!7B+-$7+#%\'"%$"# X"# X"+\'%4"6ŏ" %$"# X"# X'),b('!7Ó+c$ \\!7B+-$7Ô+#%\'"%$"# X"# X,8&!7B+-$7Ô+#%\'"%$"# X"# X"+\'%4"6Ő" %$"# X"# X'),b("!7+& 4!6ő! %"),b('!/Œ""1(3œ+<$7<+2%76+(%4#6Ŕ#! %$## X$"# X"# X*j "!/ŕ""1&3Ŗ+<$7<+2%76+(%4#6ŗ#! %$## X$"# X"# X*: "!/Ř""1*3ř+& 4!6Ś! %*# "7'),b('!!76+o$ \\!7A+2$76+(%4"6ś"! %$"# X"# X,=&!7A+2$76+(%4"6ś"! %$"# X"# X"+)%4"6Ŝ""! %$"# X"# X*# " [+\' 4!6ŝ!! %'),b('!7×+_$ \\!7A+-$7×+#%\'"%$"# X"# X,8&!7A+-$7×+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b('!7+_$ \\!7B+-$7+#%\'"%$"# X"# X,8&!7B+-$7+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b('! \\7!+&$,#&7!""" X+\' 4!6Ş!! %'),b('!7Ú+_$ \\!7B+-$7Û+#%\'"%$"# X"# X,8&!7B+-$7Û+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b('!/ş""1&3Š*; "/š""1\'3Ţ*/ "/ţ""1*3Ť*# "76+& 4!6ť! %'),b('!/Ŧ""1&3ŧ+<$7<+2%7Ü+(%4#6Ũ#! %$## X$"# X"# X* "!/ö""1\'3÷+<$7<+2%7+(%4#6ũ#! %$## X$"# X"# X*S "!/Ū""1+3ū+<$7<+2%7+(%4#6Ŭ#! %$## X$"# X"# X*# "7'),b('/ŭ""1+3Ů*k "/ů""1)3Ű*_ "/ű""1(3Ų*S "/ų""1\'3Ŵ*G "/ŵ""1&3Ŷ*; "/ŷ""1*3Ÿ*/ "/Ź""1)3ź*# "76'),b('71*# " ['),b('!!76+o$ \\!7A+2$76+(%4"6ś"! %$"# X"# X,=&!7A+2$76+(%4"6ś"! %$"# X"# X"+)%4"6Ŝ""! %$"# X"# X*# " [+\' 4!6Ż!! %'),b('!7L*# "7+c$ \\!7B+-$7à+#%\'"%$"# X"# X,8&!7B+-$7à+#%\'"%$"# X"# X"+\'%4"6ż" %$"# X"# X'),b('7¸*# "7'),b('!7â+_$ \\!7A+-$7â+#%\'"%$"# X"# X,8&!7A+-$7â+#%\'"%$"# X"# X"+#%\'"%$"# X"# X'),b('!7é+s$7.+i%7ì+_% \\!7B+-$7ã+#%\'"%$"# X"# X,8&!7B+-$7ã+#%\'"%$"# X"# X"+#%\'$%$$# X$## X$"# X"# X'),b('7ä*; "7å*5 "7æ*/ "7ç*) "7è*# "7'),b('!/Ž""1#3ž+<$7<+2%7ï+(%4#6ſ#! %$## X$"# X"# X'),b('!/ƀ""1%3Ɓ+<$7<+2%7T+(%4#6Ƃ#! %$## X$"# X"# X'),b('!/ƃ""1(3Ƅ+B$7<+8%7\\*# "7Y+(%4#6ƅ#! %$## X$"# X"# X'),b('!/Ɔ""1&3Ƈ+<$7<+2%76+(%4#6ƈ#! %$## X$"# X"# X'),b('!/Ɖ""1%3Ɗ+T$!7<+5$ \\7!,#&7!"+#%\'"%$"# X"# X*# " [+\'%4"6Ƌ" %$"# X"# X'),b('!7ê+K$7;+A%76+7%7;+-%7ë+#%\'%%$%# X$$# X$## X$"# X"# X'),b('!/""1#3Ö*# "76+\' 4!6ƌ!! %'),b('!/´""1#3ƍ*G "/¶""1#3Ǝ*; "/º""1#3Ə*/ "/¸""1$3Ɛ*# "76+\' 4!6Ƒ!! %'),b('!7í+H$!7C+-$7î+#%\'"%$"# X"# X*# " [+#%\'"%$"# X"# X'),b('!7U*) "7\\*# "7X+& 4!6ƒ! %'),b('!!7!*# " [+c$7!*# " [+S%7!*# " [+C%7!*# " [+3%7!*# " [+#%\'%%$%# X$$# X$## X$"# X"# X+\' 4!6Ɠ!! %'),b('!!7!+C$7!*# " [+3%7!*# " [+#%\'#%$## X$"# X"# X+\' 4!6Ɣ!! %'),b("7½"),b('!7+d$ \\!7B+-$7ò+#%\'"%$"# X"# X,8&!7B+-$7ò+#%\'"%$"# X"# X"+(%4"6ƕ"!!%$"# X"# X'),b('7ó*# "7'),b('!.Ɩ""2Ɩ3Ɨ+N$7<+D%.Ƙ""2Ƙ3ƙ*) ".ƚ""2ƚ3ƛ+(%4#6Ɯ#! %$## X$"# X"# X'),b('!7+d$ \\!7B+-$7+#%\'"%$"# X"# X,8&!7B+-$7+#%\'"%$"# X"# X"+(%4"6Ɲ"!!%$"# X"# X'),b('!76+7$70+-%7ö+#%\'#%$## X$"# X"# X'),b(' \\72*) "74*# "7.,/&72*) "74*# "7."'),b(' \\7%,#&7%"'),b('!7ù+=$.8""2839+-%7ú+#%\'#%$## X$"# X"# X'),b('!/ƞ""1%3Ɵ*) "/Ơ""1$3ơ+\' 4!6Ƣ!! %'),b('!7û+N$!.8""2839+-$7^+#%\'"%$"# X"# X*# " [+#%\'"%$"# X"# X'),b('!7\\*) "7X*# "7+\' 4!6ƣ!! %'),b('! \\7ý*) "7-*# "7þ,/&7ý*) "7-*# "7þ"+! (%'),b('7"*S "7!*M ".F""2F3G*A ".J""2J3K*5 ".H""2H3I*) ".N""2N3O'),b('.L""2L3M* ".B""2B3C* ".<""2<3=*} ".R""2R3S*q ".T""2T3U*e ".V""2V3W*Y ".P""2P3Q*M ".@""2@3A*A ".D""2D3E*5 ".2""2233*) ".>""2>3?'),b('!7Ā+h$.8""2839+X%7ú+N%!.Ƥ""2Ƥ3ƥ+-$7ë+#%\'"%$"# X"# X*# " [+#%\'$%$$# X$## X$"# X"# X'),b('!/Ʀ""1%3Ƨ*) "/ƨ""1$3Ʃ+\' 4!6Ƣ!! %'),b('!7ë+Q$/´""1#3µ*7 "/¶""1#3·*+ " \\7+,#&7+"+\'%4"6ƪ" %$"# X"# X'),b('!7Ą+$.F""2F3G+%7ă+u%.F""2F3G+e%7ă+[%.F""2F3G+K%7ă+A%.F""2F3G+1%7ą+\'%4)6ƫ) %$)# X$(# X$\'# X$&# X$%# X$$# X$## X$"# X"# X'),b('!7#+A$7#+7%7#+-%7#+#%\'$%$$# X$## X$"# X"# X'),b('!7ă+-$7ă+#%\'"%$"# X"# X'),b('!7ă+7$7ă+-%7ă+#%\'#%$## X$"# X"# X')],c=0,l=0,d=0,h={line:1,column:1,seenCR:!1},f=0,p=[],v=0;if("startRule"in n){if(!(n.startRule in s))throw new Error("Can't start parsing from rule \""+n.startRule+'".');o=s[n.startRule]}function g(){return t.substring(l,c)}function m(){return l}function y(e){return d!==e&&(d>e&&(d=0,h={line:1,column:1,seenCR:!1}),function(e,r,n){var i,s;for(i=r;i<n;i++)"\n"===(s=t.charAt(i))?(e.seenCR||e.line++,e.column=1,e.seenCR=!1):"\r"===s||"\u2028"===s||"\u2029"===s?(e.line++,e.column=1,e.seenCR=!0):(e.column++,e.seenCR=!1)}(h,d,e),d=e),h}function _(e){c<f||(c>f&&(f=c,p=[]),p.push(e))}function T(r,n,i){var s=y(i),o=i<t.length?t.charAt(i):null;return null!==n&&function(e){var t=1;for(e.sort(function(e,t){return e.description<t.description?-1:e.description>t.description?1:0});t<e.length;)e[t-1]===e[t]?e.splice(t,1):t++}(n),new e(null!==r?r:function(e,t){var r,n=new Array(e.length);for(r=0;r<e.length;r++)n[r]=e[r].description;return"Expected "+(e.length>1?n.slice(0,-1).join(", ")+" or "+n[e.length-1]:n[0])+" but "+(t?'"'+function(e){function t(e){return e.charCodeAt(0).toString(16).toUpperCase()}return e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g,function(e){return"\\x0"+t(e)}).replace(/[\x10-\x1F\x80-\xFF]/g,function(e){return"\\x"+t(e)}).replace(/[\u0180-\u0FFF]/g,function(e){return"\\u0"+t(e)}).replace(/[\u1080-\uFFFF]/g,function(e){return"\\u"+t(e)})}(t)+'"':"end of input")+" found."}(n,o),n,o,i,s.line,s.column)}function b(e){var t,r=new Array(e.length);for(t=0;t<e.length;t++)r[t]=e.charCodeAt(t)-32;return r}if(n.data={},(r=function e(r){var n,s,o=u[r],d=0,h=[],f=o.length,p=[],g=[];function m(e){return"[object Array]"===Object.prototype.toString.apply(e)?[]:e}for(;;){for(;d<f;)switch(o[d]){case 0:g.push(m(a[o[d+1]])),d+=2;break;case 1:g.push(c),d++;break;case 2:g.pop(),d++;break;case 3:c=g.pop(),d++;break;case 4:g.length-=o[d+1],d+=2;break;case 5:g.splice(-2,1),d++;break;case 6:g[g.length-2].push(g.pop()),d++;break;case 7:g.push(g.splice(g.length-o[d+1],o[d+1])),d+=2;break;case 8:g.pop(),g.push(t.substring(g[g.length-1],c)),d++;break;case 9:p.push(f),h.push(d+3+o[d+1]+o[d+2]),g[g.length-1]?(f=d+3+o[d+1],d+=3):(f=d+3+o[d+1]+o[d+2],d+=3+o[d+1]);break;case 10:p.push(f),h.push(d+3+o[d+1]+o[d+2]),g[g.length-1]===i?(f=d+3+o[d+1],d+=3):(f=d+3+o[d+1]+o[d+2],d+=3+o[d+1]);break;case 11:p.push(f),h.push(d+3+o[d+1]+o[d+2]),g[g.length-1]!==i?(f=d+3+o[d+1],d+=3):(f=d+3+o[d+1]+o[d+2],d+=3+o[d+1]);break;case 12:g[g.length-1]!==i?(p.push(f),h.push(d),f=d+2+o[d+1],d+=2):d+=2+o[d+1];break;case 13:p.push(f),h.push(d+3+o[d+1]+o[d+2]),t.length>c?(f=d+3+o[d+1],d+=3):(f=d+3+o[d+1]+o[d+2],d+=3+o[d+1]);break;case 14:p.push(f),h.push(d+4+o[d+2]+o[d+3]),t.substr(c,a[o[d+1]].length)===a[o[d+1]]?(f=d+4+o[d+2],d+=4):(f=d+4+o[d+2]+o[d+3],d+=4+o[d+2]);break;case 15:p.push(f),h.push(d+4+o[d+2]+o[d+3]),t.substr(c,a[o[d+1]].length).toLowerCase()===a[o[d+1]]?(f=d+4+o[d+2],d+=4):(f=d+4+o[d+2]+o[d+3],d+=4+o[d+2]);break;case 16:p.push(f),h.push(d+4+o[d+2]+o[d+3]),a[o[d+1]].test(t.charAt(c))?(f=d+4+o[d+2],d+=4):(f=d+4+o[d+2]+o[d+3],d+=4+o[d+2]);break;case 17:g.push(t.substr(c,o[d+1])),c+=o[d+1],d+=2;break;case 18:g.push(a[o[d+1]]),c+=a[o[d+1]].length,d+=2;break;case 19:g.push(i),0===v&&_(a[o[d+1]]),d+=2;break;case 20:l=g[g.length-1-o[d+1]],d+=2;break;case 21:l=c,d++;break;case 22:for(n=o.slice(d+4,d+4+o[d+3]),s=0;s<o[d+3];s++)n[s]=g[g.length-1-n[s]];g.splice(g.length-o[d+2],o[d+2],a[o[d+1]].apply(null,n)),d+=4+o[d+3];break;case 23:g.push(e(o[d+1])),d+=2;break;case 24:v++,d++;break;case 25:v--,d++;break;default:throw new Error("Invalid opcode: "+o[d]+".")}if(!(p.length>0))break;f=p.pop(),d=h.pop()}return g[0]}(o))!==i&&c===t.length)return r;throw r!==i&&c<t.length&&_({type:"end",description:"end of input"}),T(null,p,f)}}}()},function(e,t,r){"use strict";var n=Object({}).window||Object({});function i(e,t){if(null!=e){var r=t.charAt(0).toUpperCase()+t.slice(1),n=[t,"webkit"+r,"moz"+r];for(var i in n){var s=e[n[i]];if(s)return s.bind(e)}}}e.exports={WebSocket:n.WebSocket,Transport:r(40),open:n.open,Promise:n.Promise,timers:n,console:n.console||{debug:function(){},log:function(){},warn:function(){},error:function(){}},MediaStream:i(n,"MediaStream"),getUserMedia:i(n.navigator,"getUserMedia"),RTCPeerConnection:i(n,"RTCPeerConnection"),RTCSessionDescription:i(n,"RTCSessionDescription"),addEventListener:i(n,"addEventListener"),removeEventListener:i(n,"removeEventListener"),HTMLMediaElement:n.HTMLMediaElement,attachMediaStream:n.attachMediaStream,createObjectURL:n.URL&&n.URL.createObjectURL,revokeObjectURL:n.URL&&n.URL.revokeObjectURL}},function(e,t,r){"use strict";e.exports=function(e,t){var r;return(r=function(e,t){this.logger=e.getLogger("sip.transport"),this.ua=e,this.ws=null,this.server=t,this.reconnection_attempts=0,this.closed=!1,this.connected=!1,this.reconnectTimer=null,this.lastTransportError={},this.keepAliveInterval=e.configuration.keepAliveInterval,this.keepAliveTimeout=null,this.keepAliveTimer=null,this.ua.transport=this,this.connect()}).prototype={send:function(e){var r=e.toString();return this.ws&&this.ws.readyState===t.OPEN?(!0===this.ua.configuration.traceSip&&this.logger.log("sending WebSocket message:\n\n"+r+"\n"),this.ws.send(r),!0):(this.logger.warn("unable to send message, WebSocket is not open"),!1)},sendKeepAlive:function(){if(!this.keepAliveTimeout)return this.keepAliveTimeout=e.Timers.setTimeout(function(){this.ua.emit("keepAliveTimeout")}.bind(this),1e4),this.send("\r\n\r\n")},startSendingKeepAlives:function(){this.keepAliveInterval&&!this.keepAliveTimer&&(this.keepAliveTimer=e.Timers.setTimeout(function(){this.sendKeepAlive(),this.keepAliveTimer=null,this.startSendingKeepAlives()}.bind(this),function(e){var t=.8*e;return 1e3*(Math.random()*(e-t)+t)}(this.keepAliveInterval)))},stopSendingKeepAlives:function(){e.Timers.clearTimeout(this.keepAliveTimer),e.Timers.clearTimeout(this.keepAliveTimeout),this.keepAliveTimer=null,this.keepAliveTimeout=null},disconnect:function(){this.ws&&(e.Timers.clearTimeout(this.reconnectTimer),this.stopSendingKeepAlives(),this.closed=!0,this.logger.log("closing WebSocket "+this.server.ws_uri),this.ws.close(),this.ws=null),null!==this.reconnectTimer&&(e.Timers.clearTimeout(this.reconnectTimer),this.reconnectTimer=null,this.ua.emit("disconnected",{transport:this,code:this.lastTransportError.code,reason:this.lastTransportError.reason}))},connect:function(){var e=this;if(this.ws&&(this.ws.readyState===t.OPEN||this.ws.readyState===t.CONNECTING))return this.logger.log("WebSocket "+this.server.ws_uri+" is already connected"),!1;this.ws&&(this.ws.close(),this.ws=null),this.logger.log("connecting to WebSocket "+this.server.ws_uri),this.ua.onTransportConnecting(this,0===this.reconnection_attempts?1:this.reconnection_attempts);try{this.ws=new t(this.server.ws_uri,"sip")}catch(e){this.logger.warn("error connecting to WebSocket "+this.server.ws_uri+": "+e)}this.ws.binaryType="arraybuffer",this.ws.onopen=function(){e.onOpen()},this.ws.onclose=function(t){e.onClose(t),this.onopen=null,this.onclose=null,this.onmessage=null,this.onerror=null},this.ws.onmessage=function(t){e.onMessage(t)},this.ws.onerror=function(t){e.onError(t)}},onOpen:function(){this.connected=!0,this.logger.log("WebSocket "+this.server.ws_uri+" connected"),null!==this.reconnectTimer&&(e.Timers.clearTimeout(this.reconnectTimer),this.reconnectTimer=null),this.reconnection_attempts=0,this.closed=!1,this.ua.onTransportConnected(this),this.startSendingKeepAlives()},onClose:function(e){var t=this.connected;this.lastTransportError.code=e.code,this.lastTransportError.reason=e.reason,this.stopSendingKeepAlives(),this.reconnection_attempts>0?(this.logger.log("Reconnection attempt "+this.reconnection_attempts+" failed (code: "+e.code+(e.reason?"| reason: "+e.reason:"")+")"),this.reconnect()):(this.connected=!1,this.logger.log("WebSocket disconnected (code: "+e.code+(e.reason?"| reason: "+e.reason:"")+")"),!1===e.wasClean&&this.logger.warn("WebSocket abrupt disconnection"),!0===t?(this.ua.onTransportClosed(this),this.closed?this.ua.emit("disconnected",{transport:this,code:this.lastTransportError.code,reason:this.lastTransportError.reason}):this.reconnect()):this.ua.onTransportError(this))},onMessage:function(t){var r,n,i=t.data;if("\r\n"===i)return e.Timers.clearTimeout(this.keepAliveTimeout),this.keepAliveTimeout=null,void(!0===this.ua.configuration.traceSip&&this.logger.log("received WebSocket message with CRLF Keep Alive response"));if("string"!=typeof i){try{i=String.fromCharCode.apply(null,new Uint8Array(i))}catch(e){return void this.logger.warn("received WebSocket binary message failed to be converted into string, message discarded")}!0===this.ua.configuration.traceSip&&this.logger.log("received WebSocket binary message:\n\n"+i+"\n")}else!0===this.ua.configuration.traceSip&&this.logger.log("received WebSocket text message:\n\n"+i+"\n");if((r=e.Parser.parseMessage(i,this.ua))&&!(this.ua.status===e.UA.C.STATUS_USER_CLOSED&&r instanceof e.IncomingRequest)&&e.sanityCheck(r,this.ua,this))if(r instanceof e.IncomingRequest)r.transport=this,this.ua.receiveRequest(r);else if(r instanceof e.IncomingResponse)switch(r.method){case e.C.INVITE:(n=this.ua.transactions.ict[r.via_branch])&&n.receiveResponse(r);break;case e.C.ACK:break;default:(n=this.ua.transactions.nict[r.via_branch])&&n.receiveResponse(r)}},onError:function(e){this.logger.warn("WebSocket connection error: "+JSON.stringify(e))},reconnect:function(){var t=this;this.reconnection_attempts+=1,this.reconnection_attempts>this.ua.configuration.wsServerMaxReconnection?(this.logger.warn("maximum reconnection attempts for WebSocket "+this.server.ws_uri),this.ua.onTransportError(this)):1===this.reconnection_attempts?(this.logger.log("Connection to WebSocket "+this.server.ws_uri+" severed, attempting first reconnect"),t.connect()):(this.logger.log("trying to reconnect to WebSocket "+this.server.ws_uri+" (reconnection attempt "+this.reconnection_attempts+")"),this.reconnectTimer=e.Timers.setTimeout(function(){t.connect(),t.reconnectTimer=null},1e3*this.ua.configuration.wsServerReconnectionTimeout))}},r.C={STATUS_READY:0,STATUS_DISCONNECTED:1,STATUS_ERROR:2},r}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){return e&&e.__esModule?e:{default:e}}(r(0));var i=n.default.Session,s=0,o=1,a=2,u=7,c=9,l=11,d=12,h=function(e,t,r){(r=Object.create(i.desugar(r))).params=Object.create(r.params||Object.prototype);var o=(r.extraHeaders||[]).slice();if(this.renderbody=r.renderbody||null,this.rendertype=r.rendertype||"text/plain",this.sdp=r.sdp,r.params.from_tag=this.from_tag,this.contact=e.contact.toString({anonymous:this.anonymous,outbound:this.anonymous?!e.contact.temp_gruu:!e.contact.pub_gruu}),o.push("Contact: "+this.contact),o.push("Allow: "+n.default.UA.C.ALLOWED_METHODS.toString()),e.configuration.rel100===n.default.C.supported.REQUIRED&&o.push("Require: 100rel"),e.configuration.replaces===n.default.C.supported.REQUIRED&&o.push("Require: replaces"),o.push("Content-Type: application/sdp"),r.extraHeaders=o,n.default.Utils.augment(this,n.default.ClientContext,[e,n.default.C.INVITE,t,r]),n.default.Utils.augment(this,n.default.Session,[]),this.status!==s)throw new n.default.Exceptions.InvalidStateError(this.status);this.from_tag=n.default.Utils.newTag(),this.isCanceled=!1,this.received_100=!1,this.method=n.default.C.INVITE,this.receiveNonInviteResponse=this.receiveResponse,this.receiveResponse=this.receiveInviteResponse,this.logger=e.getLogger("sip.inviteclientcontext"),this.onInfo=r.onInfo};h.prototype={invite:function(){if(this.ua.sessions[this.id]=this,!this.isCanceled&&this.status!==c)return this.hasOffer=!0,this.request.body=this.sdp,this.status=o,this.send(),this},hasDescription:function(e){return"application/sdp"===e.getHeader("Content-Type")&&!!e.body},receiveInviteResponse:function(e){var t,r=e.call_id+e.from_tag+e.to_tag,i=[],s={};if(this.status!==c&&e.method===n.default.C.INVITE){if(this.dialog&&e.status_code>=200&&e.status_code<=299){if(r!==this.dialog.id.toString()){if(!this.createDialog(e,"UAC",!0))return;return this.earlyDialogs[r].sendRequest(this,n.default.C.ACK,{body:n.default.Utils.generateFakeSDP(e.body)}),this.earlyDialogs[r].sendRequest(this,n.default.C.BYE),void(this.status!==d&&(this.failed(e,n.default.C.causes.WEBRTC_ERROR),this.terminated(e,n.default.C.causes.WEBRTC_ERROR)))}if(this.status===d)return void this.sendRequest(n.default.C.ACK,{cseq:e.cseq});if(!this.hasAnswer)return}if(this.dialog&&e.status_code<200){if(-1!==this.dialog.pracked.indexOf(e.getHeader("rseq"))||this.dialog.pracked[this.dialog.pracked.length-1]>=e.getHeader("rseq")&&this.dialog.pracked.length>0)return;if(!this.earlyDialogs[r]&&!this.createDialog(e,"UAC",!0))return;if(-1!==this.earlyDialogs[r].pracked.indexOf(e.getHeader("rseq"))||this.earlyDialogs[r].pracked[this.earlyDialogs[r].pracked.length-1]>=e.getHeader("rseq")&&this.earlyDialogs[r].pracked.length>0)return;return i.push("RAck: "+e.getHeader("rseq")+" "+e.getHeader("cseq")),this.earlyDialogs[r].pracked.push(e.getHeader("rseq")),void this.earlyDialogs[r].sendRequest(this,n.default.C.PRACK,{extraHeaders:i,body:n.default.Utils.generateFakeSDP(e.body)})}if(this.isCanceled)e.status_code>=100&&e.status_code<200?(this.request.cancel(this.cancelReason,i),this.canceled(null)):e.status_code>=200&&e.status_code<299?(this.acceptAndTerminate(e),this.emit("bye",this.request)):e.status_code>=300&&(t=n.default.C.REASON_PHRASE[e.status_code]||n.default.C.causes.CANCELED,this.rejected(e,t),this.failed(e,t),this.terminated(e,t));else switch(!0){case/^100$/.test(e.status_code):this.received_100=!0,this.emit("progress",e);break;case/^1[0-9]{2}$/.test(e.status_code):if(!e.to_tag){this.logger.warn("1xx response received without to tag");break}if(e.hasHeader("contact")&&!this.createDialog(e,"UAC",!0))break;if(this.status=a,e.hasHeader("require")&&-1!==e.getHeader("require").indexOf("100rel")){if(this.dialog||!this.earlyDialogs[r])break;if(-1!==this.earlyDialogs[r].pracked.indexOf(e.getHeader("rseq"))||this.earlyDialogs[r].pracked[this.earlyDialogs[r].pracked.length-1]>=e.getHeader("rseq")&&this.earlyDialogs[r].pracked.length>0)return;if(this.hasDescription(e)){if(this.hasOffer){if(!this.createDialog(e,"UAC"))break;this.hasAnswer=!0,this.dialog.pracked.push(e.getHeader("rseq")),i.push("RAck: "+e.getHeader("rseq")+" "+e.getHeader("cseq")),this.sendRequest(n.default.C.PRACK,{extraHeaders:i,receiveResponse:function(){}}),this.status=l,this.emit("progress",e)}}else i.push("RAck: "+e.getHeader("rseq")+" "+e.getHeader("cseq")),this.earlyDialogs[r].pracked.push(e.getHeader("rseq")),this.earlyDialogs[r].sendRequest(this,n.default.C.PRACK,{extraHeaders:i}),this.emit("progress",e)}else this.emit("progress",e);break;case/^2[0-9]{2}$/.test(e.status_code):if(this.request.cseq+" "+this.request.method!==e.getHeader("cseq"))break;if(this.status===l&&this.dialog){this.status=d,s={},this.renderbody&&(i.push("Content-Type: "+this.rendertype),s.extraHeaders=i,s.body=this.renderbody),s.cseq=e.cseq,this.sendRequest(n.default.C.ACK,s),this.accepted(e);break}if(this.dialog)break;if(this.hasAnswer)this.renderbody&&(i.push("Content-Type: "+this.rendertype),s.extraHeaders=i,s.body=this.renderbody),this.sendRequest(n.default.C.ACK,s);else{if(!this.hasDescription(e)){this.acceptAndTerminate(e,400,"Missing session description"),this.failed(e,n.default.C.causes.BAD_MEDIA_DESCRIPTION);break}if(!this.createDialog(e,"UAC"))break;this.hasAnswer=!0;s={};this.status=d,this.renderbody&&(i.push("Content-Type: "+this.rendertype),s.extraHeaders=i,s.body=this.renderbody),s.cseq=e.cseq,this.sendRequest(n.default.C.ACK,s),this.accepted(e)}break;default:t=n.default.Utils.sipErrorCause(e.status_code),this.rejected(e,t),this.failed(e,t),this.terminated(e,t)}}},cancel:function(e){if((e=e||{}).extraHeaders=(e.extraHeaders||[]).slice(),this.status===c||this.status===d)throw new n.default.Exceptions.InvalidStateError(this.status);this.logger.log("canceling RTCSession");var t=n.default.Utils.getCancelReason(e.status_code,e.reason_phrase);return this.status===s||this.status===o&&!this.received_100?(this.isCanceled=!0,this.cancelReason=t):this.status!==o&&this.status!==a&&this.status!==l||this.request.cancel(t,e.extraHeaders),this.canceled()},terminate:function(e){return this.status===c?this:(this.status===u||this.status===d?this.bye(e):this.cancel(e),this)},receiveRequest:function(e){return e.method,n.default.C.CANCEL,e.method===n.default.C.ACK&&this.status===u&&(n.default.Timers.clearTimeout(this.timers.ackTimer),n.default.Timers.clearTimeout(this.timers.invite2xxTimer),this.status=d,this.accepted()),i.prototype.receiveRequest.apply(this,[e])},onTransportError:function(){this.status!==d&&this.status!==c&&this.failed(null,n.default.C.causes.CONNECTION_ERROR)},onRequestTimeout:function(){this.status===d?this.terminated(null,n.default.C.causes.REQUEST_TIMEOUT):this.status!==c&&(this.failed(null,n.default.C.causes.REQUEST_TIMEOUT),this.terminated(null,n.default.C.causes.REQUEST_TIMEOUT))}},t.default=h},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){return e&&e.__esModule?e:{default:e}}(r(0));var i=n.default.Session,s={STATUS_NULL:0,STATUS_INVITE_SENT:1,STATUS_1XX_RECEIVED:2,STATUS_INVITE_RECEIVED:3,STATUS_WAITING_FOR_ANSWER:4,STATUS_ANSWERED:5,STATUS_WAITING_FOR_PRACK:6,STATUS_WAITING_FOR_ACK:7,STATUS_CANCELED:8,STATUS_TERMINATED:9,STATUS_ANSWERED_WAITING_FOR_PRACK:10,STATUS_EARLY_MEDIA:11,STATUS_CONFIRMED:12},o=function(e){return"application/sdp"===e.getHeader("Content-Type")&&!!e.body},a=function(e,t){var r,i=this,a=t.getHeader("Content-Type"),u=t.parseHeader("Content-Disposition");if(n.default.Utils.augment(this,n.default.ServerContext,[e,t]),n.default.Utils.augment(this,n.default.Session,[e.configuration.mediaHandlerFactory]),!u&&!o(t)||u&&"render"===u.type)this.renderbody=t.body,this.rendertype=a;else if(!o(t)&&u&&"session"===u.type)return void t.reply(415);function c(e,r){t.hasHeader(e)&&t.getHeader(e).toLowerCase().indexOf("100rel")>=0&&(i.rel100=r)}function l(){var e={extraHeaders:["Contact: "+i.contact]};i.rel100!==n.default.C.supported.REQUIRED&&i.progress(e),i.status=s.STATUS_WAITING_FOR_ANSWER,i.timers.userNoAnswerTimer=n.default.Timers.setTimeout(function(){t.reply(408),i.failed(t,n.default.C.causes.NO_ANSWER),i.terminated(t,n.default.C.causes.NO_ANSWER)},i.ua.configuration.noAnswerTimeout),r&&(i.timers.expiresTimer=n.default.Timers.setTimeout(function(){i.status===s.STATUS_WAITING_FOR_ANSWER&&(t.reply(487),i.failed(t,n.default.C.causes.EXPIRES),i.terminated(t,n.default.C.causes.EXPIRES))},r)),i.emit("invite",t)}this.status=s.STATUS_INVITE_RECEIVED,this.from_tag=t.from_tag,this.id=t.call_id+this.from_tag,this.request=t,this.contact=this.ua.contact.toString(),this.receiveNonInviteResponse=function(){},this.logger=e.getLogger("sip.inviteservercontext",this.id),this.ua.sessions[this.id]=this,t.hasHeader("expires")&&(r=1e3*t.getHeader("expires")),c("require",n.default.C.supported.REQUIRED),c("supported",n.default.C.supported.SUPPORTED),t.to_tag=n.default.Utils.newTag(),this.createDialog(t,"UAS",!0)?!o(t)||this.renderbody?n.default.Timers.setTimeout(l,0):(this.hasOffer=!0,setTimeout(function(){l()},500)):t.reply(500,"Missing Contact header field")};a.prototype={reject:function(e){if(this.status===s.STATUS_TERMINATED)throw new n.default.Exceptions.InvalidStateError(this.status);return this.logger.log("rejecting RTCSession"),n.default.ServerContext.prototype.reject.call(this,e),this.terminated()},terminate:function(e){var t,r=((e=e||{}).extraHeaders||[]).slice(),i=e.body,o=this;return this.status===s.STATUS_WAITING_FOR_ACK&&this.request.server_transaction.state!==n.default.Transactions.C.STATUS_TERMINATED?(t=this.dialog,this.receiveRequest=function(e){e.method===n.default.C.ACK&&(this.sendRequest(n.default.C.BYE,{extraHeaders:r,body:i}),t.terminate())},this.request.server_transaction.on("stateChanged",function(){this.state===n.default.Transactions.C.STATUS_TERMINATED&&this.dialog&&(this.request=new n.default.OutgoingRequest(n.default.C.BYE,this.dialog.remote_target,this.ua,{cseq:this.dialog.local_seqnum+=1,call_id:this.dialog.id.call_id,from_uri:this.dialog.local_uri,from_tag:this.dialog.id.local_tag,to_uri:this.dialog.remote_uri,to_tag:this.dialog.id.remote_tag,route_set:this.dialog.route_set},r,i),new n.default.RequestSender({request:this.request,onRequestTimeout:function(){o.onRequestTimeout()},onTransportError:function(){o.onTransportError()},receiveResponse:function(){}},this.ua).send(),t.terminate())}),this.emit("bye",this.request),this.terminated(),this.dialog=t,this.ua.dialogs[t.id.toString()]=t):this.status===s.STATUS_CONFIRMED?this.bye(e):this.reject(e),this},progress:function(e){var t,r=(e=e||{}).statusCode||180,i=e.reasonPhrase,o=(e.extraHeaders||[]).slice(),a=(e.stunServers,e.turnServers,e.body);if(r<100||r>199)throw new TypeError("Invalid statusCode: "+r);if(this.isCanceled||this.status===s.STATUS_TERMINATED)return this;return 100!==e.statusCode&&(this.rel100===n.default.C.supported.REQUIRED||this.rel100===n.default.C.supported.SUPPORTED&&e.rel100||this.rel100===n.default.C.supported.SUPPORTED&&this.ua.configuration.rel100===n.default.C.supported.REQUIRED)?function(){if(r=e.statusCode||183,this.status=s.STATUS_WAITING_FOR_PRACK,o.push("Contact: "+this.contact),o.push("Require: 100rel"),o.push("RSeq: "+Math.floor(1e4*Math.random())),!this.isCanceled&&this.status!==s.STATUS_TERMINATED){this[this.hasOffer?"hasAnswer":"hasOffer"]=!0;var a=n.default.Timers.T1;this.timers.rel1xxTimer=n.default.Timers.setTimeout(function e(){this.request.reply(r,null,o,description),a*=2,this.timers.rel1xxTimer=n.default.Timers.setTimeout(e.bind(this),a)}.bind(this),a),this.timers.prackTimer=n.default.Timers.setTimeout(function(){this.status===s.STATUS_WAITING_FOR_PRACK&&(this.logger.log("no PRACK received, rejecting the call"),n.default.Timers.clearTimeout(this.timers.rel1xxTimer),this.request.reply(504),this.terminated(null,n.default.C.causes.NO_PRACK))}.bind(this),64*n.default.Timers.T1),t=this.request.reply(r,i,o,description),this.emit("progress",t,i)}}.apply(this):function(){t=this.request.reply(r,i,o,a),this.emit("progress",t,i)}.apply(this),this},accept:function(e){e=Object.create(i.desugar(e)),this.onInfo=e.onInfo;var t=this,r=this.request,o=(e.extraHeaders||[]).slice();if(this.status===s.STATUS_WAITING_FOR_PRACK)return this.status=s.STATUS_ANSWERED_WAITING_FOR_PRACK,this;if(this.status===s.STATUS_WAITING_FOR_ANSWER)this.status=s.STATUS_ANSWERED;else if(this.status!==s.STATUS_EARLY_MEDIA)throw new n.default.Exceptions.InvalidStateError(this.status);return this.createDialog(r,"UAS")?(console.log("request",r),n.default.Timers.clearTimeout(this.timers.userNoAnswerTimer),function(e){var i;o.push("Contact: "+t.contact),o.push("Allow: "+n.default.UA.C.ALLOWED_METHODS.toString()),t.hasOffer?t.hasAnswer=!0:t.hasOffer=!0,i=r.reply(200,null,o,e,function(){t.status=s.STATUS_WAITING_FOR_ACK,t.setInvite2xxTimer(r,e),t.setACKTimer()},function(){t.failed(null,n.default.C.causes.CONNECTION_ERROR),t.terminated(null,n.default.C.causes.CONNECTION_ERROR)}),t.status!==s.STATUS_TERMINATED&&t.accepted(i,n.default.Utils.getReasonPhrase(200))}(e.sdp),this):(r.reply(500,"Missing Contact header field"),this)},receiveRequest:function(e){function t(){var t;n.default.Timers.clearTimeout(this.timers.ackTimer),n.default.Timers.clearTimeout(this.timers.invite2xxTimer),this.status=s.STATUS_CONFIRMED,this.unmute(),t=e.getHeader("Content-Type"),o(e)||(this.renderbody=e.body,this.rendertype=t),this.emit("confirmed",e)}switch(e.method){case n.default.C.CANCEL:this.status!==s.STATUS_WAITING_FOR_ANSWER&&this.status!==s.STATUS_WAITING_FOR_PRACK&&this.status!==s.STATUS_ANSWERED_WAITING_FOR_PRACK&&this.status!==s.STATUS_EARLY_MEDIA&&this.status!==s.STATUS_ANSWERED||(this.status=s.STATUS_CANCELED,this.request.reply(487),this.canceled(e),this.rejected(e,n.default.C.causes.CANCELED),this.failed(e,n.default.C.causes.CANCELED),this.terminated(e,n.default.C.causes.CANCELED));break;case n.default.C.ACK:this.status===s.STATUS_WAITING_FOR_ACK&&(this.hasAnswer?t.apply(this):o(e)?(this.hasAnswer=!0,this.mediaHandler.setDescription(e).then(t.bind(this),function(t){this.logger.warn(t),this.terminate({statusCode:"488",reasonPhrase:"Bad Media Description"}),this.failed(e,n.default.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(e,n.default.C.causes.BAD_MEDIA_DESCRIPTION)}.bind(this))):this.early_sdp?t.apply(this):(this.failed(e,n.default.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(e,n.default.C.causes.BAD_MEDIA_DESCRIPTION)));break;case n.default.C.PRACK:this.status===s.STATUS_WAITING_FOR_PRACK||this.status===s.STATUS_ANSWERED_WAITING_FOR_PRACK?this.hasAnswer?(n.default.Timers.clearTimeout(this.timers.rel1xxTimer),n.default.Timers.clearTimeout(this.timers.prackTimer),e.reply(200),this.status===s.STATUS_ANSWERED_WAITING_FOR_PRACK&&(this.status=s.STATUS_EARLY_MEDIA,this.accept()),this.status=s.STATUS_EARLY_MEDIA,this.mute()):o(e)?(this.hasAnswer=!0,this.mediaHandler.setDescription(e).then(function(){n.default.Timers.clearTimeout(this.timers.rel1xxTimer),n.default.Timers.clearTimeout(this.timers.prackTimer),e.reply(200),this.status===s.STATUS_ANSWERED_WAITING_FOR_PRACK&&(this.status=s.STATUS_EARLY_MEDIA,this.accept()),this.status=s.STATUS_EARLY_MEDIA,this.mute()}.bind(this),function(t){this.logger.warn(t),this.terminate({statusCode:"488",reasonPhrase:"Bad Media Description"}),this.failed(e,n.default.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(e,n.default.C.causes.BAD_MEDIA_DESCRIPTION)}.bind(this))):(this.terminate({statusCode:"488",reasonPhrase:"Bad Media Description"}),this.failed(e,n.default.C.causes.BAD_MEDIA_DESCRIPTION),this.terminated(e,n.default.C.causes.BAD_MEDIA_DESCRIPTION)):this.status===s.STATUS_EARLY_MEDIA&&e.reply(200);break;default:i.prototype.receiveRequest.apply(this,[e])}},onTransportError:function(){this.status!==s.STATUS_CONFIRMED&&this.status!==s.STATUS_TERMINATED&&this.failed(null,n.default.C.causes.CONNECTION_ERROR)},onRequestTimeout:function(){this.status===s.STATUS_CONFIRMED?this.terminated(null,n.default.C.causes.REQUEST_TIMEOUT):this.status!==s.STATUS_TERMINATED&&(this.failed(null,n.default.C.causes.REQUEST_TIMEOUT),this.terminated(null,n.default.C.causes.REQUEST_TIMEOUT))}},t.default=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addCandidatesToSDP=function(e,t){var r=n.default.parse(e);r.media[0].candidates=[],r.media.length>1&&(r.media[1].candidates=[]);return t.forEach(function(e){for(var t=e.candidate.substring(10).split(" "),n={foundation:t[0],component:t[1],transport:t[2].toLowerCase(),priority:t[3],ip:t[4],port:t[5],type:t[7],generation:"0"},i=8;i<t.length;i+=2)"raddr"===t[i]?n.raddr=t[i+1]:"rport"===t[i]?n.rport=t[i+1]:"generation"===t[i]?n.generation=t[i+1]:"tcptype"===t[i]?n.tcptype=t[i+1]:"network-id"===t[i]?n["network-id"]=t[i+1]:"network-cost"===t[i]&&(n["network-cost"]=t[i+1]);r.media.filter(function(t){return t.type===e.sdpMid})[0].candidates.push(n)}),n.default.write(r)};var n=function(e){return e&&e.__esModule?e:{default:e}}(r(44))},function(e,t,r){var n=r(45),i=r(46);t.write=i,t.parse=n.parse,t.parseFmtpConfig=n.parseFmtpConfig,t.parsePayloads=n.parsePayloads,t.parseRemoteCandidates=n.parseRemoteCandidates},function(e,t,r){var n=function(e){return String(Number(e))===e?Number(e):e},i=function(e,t,r){var i=e.name&&e.names;e.push&&!t[e.push]?t[e.push]=[]:i&&!t[e.name]&&(t[e.name]={});var s=e.push?{}:i?t[e.name]:t;!function(e,t,r,i){if(i&&!r)t[i]=n(e[1]);else for(var s=0;s<r.length;s+=1)null!=e[s+1]&&(t[r[s]]=n(e[s+1]))}(r.match(e.reg),s,e.names,e.name),e.push&&t[e.push].push(s)},s=r(1),o=RegExp.prototype.test.bind(/^([a-z])=(.*)/);t.parse=function(e){var t={},r=[],n=t;return e.split(/(\r\n|\r|\n)/).filter(o).forEach(function(e){var t=e[0],o=e.slice(2);"m"===t&&(r.push({rtp:[],fmtp:[]}),n=r[r.length-1]);for(var a=0;a<(s[t]||[]).length;a+=1){var u=s[t][a];if(u.reg.test(o))return i(u,n,o)}}),t.media=r,t};var a=function(e,t){var r=t.split(/=(.+)/,2);return 2===r.length&&(e[r[0]]=n(r[1])),e};t.parseFmtpConfig=function(e){return e.split(/\;\s?/).reduce(a,{})},t.parsePayloads=function(e){return e.split(" ").map(Number)},t.parseRemoteCandidates=function(e){for(var t=[],r=e.split(" ").map(n),i=0;i<r.length;i+=3)t.push({component:r[i],ip:r[i+1],port:r[i+2]});return t}},function(e,t,r){var n=r(1),i=/%[sdv%]/g,s=function(e,t,r){var n=[e+"="+(t.format instanceof Function?t.format(t.push?r:r[t.name]):t.format)];if(t.names)for(var s=0;s<t.names.length;s+=1){var o=t.names[s];t.name?n.push(r[t.name][o]):n.push(r[t.names[s]])}else n.push(r[t.name]);return function(e){var t=1,r=arguments,n=r.length;return e.replace(i,function(e){if(t>=n)return e;var i=r[t];switch(t+=1,e){case"%%":return"%";case"%s":return String(i);case"%d":return Number(i);case"%v":return""}})}.apply(null,n)},o=["v","o","s","i","u","e","p","c","b","t","r","z","a"],a=["i","c","b","a"];e.exports=function(e,t){t=t||{},null==e.version&&(e.version=0),null==e.name&&(e.name=" "),e.media.forEach(function(e){null==e.payloads&&(e.payloads="")});var r=t.outerOrder||o,i=t.innerOrder||a,u=[];return r.forEach(function(t){n[t].forEach(function(r){r.name in e&&null!=e[r.name]?u.push(s(t,r,e)):r.push in e&&null!=e[r.push]&&e[r.push].forEach(function(e){u.push(s(t,r,e))})})}),e.media.forEach(function(e){u.push(s("m",n.m[0],e)),i.forEach(function(t){n[t].forEach(function(r){r.name in e&&null!=e[r.name]?u.push(s(t,r,e)):r.push in e&&null!=e[r.push]&&e[r.push].forEach(function(e){u.push(s(t,r,e))})})})}),u.join("\r\n")+"\r\n"}},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=194)}({0:function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},1:function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},10:function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},11:function(e,t,r){var n=r(8),i=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,i(1,r))}:function(e,t,r){return e[t]=r,e}},119:function(e,t,r){r(120),e.exports=r(0).Object.assign},12:function(e,t,r){var n=r(55),i=r(30);e.exports=function(e){return n(i(e))}},120:function(e,t,r){var n=r(6);n(n.S+n.F,"Object",{assign:r(121)})},121:function(e,t,r){"use strict";var n=r(20),i=r(43),s=r(29),o=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=o(e),u=arguments.length,c=1,l=i.f,d=s.f;u>c;)for(var h,f=a(arguments[c++]),p=l?n(f).concat(l(f)):n(f),v=p.length,g=0;v>g;)d.call(f,h=p[g++])&&(r[h]=f[h]);return r}:u},13:function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},14:function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,i){return e.call(t,r,n,i)}}return function(){return e.apply(t,arguments)}}},15:function(e,t){e.exports=!0},151:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s(r(78)),i=s(r(3));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,s,o,a,u){(0,i.default)(this,e),t&&(this.preferred_username=t),s&&(this.picture=s),o&&(this.name=o),a&&(this.locale=a),r&&(this.userURL=r),u&&(0,n.default)(this,u)},e.exports=t.default},16:function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},194:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserProfile=void 0;var n=s(r(151)),i=s(r(195));function s(e){return e&&e.__esModule?e:{default:e}}t.UserProfile=n.default,t.default=i.default},195:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s(r(3)),i=s(r(151));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,s,o,a,u,c,l){if((0,n.default)(this,e),!u)throw new Error("IDP should be a parameter");if(!t)throw new Error("username should be a parameter");this.idp=u,c&&(this.assertion=c),this.userProfile=new i.default(t,r,s,o,a,l)},e.exports=t.default},20:function(e,t,r){var n=r(45),i=r(37);e.exports=Object.keys||function(e){return n(e,i)}},21:function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},23:function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},24:function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},27:function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,i;if(t&&"function"==typeof(r=e.toString)&&!n(i=r.call(e)))return i;if("function"==typeof(r=e.valueOf)&&!n(i=r.call(e)))return i;if(!t&&"function"==typeof(r=e.toString)&&!n(i=r.call(e)))return i;throw TypeError("Can't convert object to primitive value")}},28:function(e,t,r){var n=r(7),i=r(1).document,s=n(i)&&n(i.createElement);e.exports=function(e){return s?i.createElement(e):{}}},29:function(e,t){t.f={}.propertyIsEnumerable},3:function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},30:function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},31:function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},32:function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},35:function(e,t,r){var n=r(36)("keys"),i=r(23);e.exports=function(e){return n[e]||(n[e]=i(e))}},36:function(e,t,r){var n=r(0),i=r(1),s=i["__core-js_shared__"]||(i["__core-js_shared__"]={});(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},37:function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},39:function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},4:function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},43:function(e,t){t.f=Object.getOwnPropertySymbols},45:function(e,t,r){var n=r(10),i=r(12),s=r(64)(!1),o=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=i(e),u=0,c=[];for(r in a)r!=o&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~s(c,r)||c.push(r));return c}},49:function(e,t,r){var n=r(31),i=Math.min;e.exports=function(e){return e>0?i(n(e),9007199254740991):0}},55:function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},6:function(e,t,r){var n=r(1),i=r(0),s=r(14),o=r(11),a=r(10),u=function(e,t,r){var c,l,d,h=e&u.F,f=e&u.G,p=e&u.S,v=e&u.P,g=e&u.B,m=e&u.W,y=f?i:i[t]||(i[t]={}),_=y.prototype,T=f?n:p?n[t]:(n[t]||{}).prototype;for(c in f&&(r=t),r)(l=!h&&T&&void 0!==T[c])&&a(y,c)||(d=l?T[c]:r[c],y[c]=f&&"function"!=typeof T[c]?r[c]:g&&l?s(d,n):m&&T[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):v&&"function"==typeof d?s(Function.call,d):d,v&&((y.virtual||(y.virtual={}))[c]=d,e&u.R&&_&&!_[c]&&o(_,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},64:function(e,t,r){var n=r(12),i=r(49),s=r(65);e.exports=function(e){return function(t,r,o){var a,u=n(t),c=i(u.length),l=s(o,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},65:function(e,t,r){var n=r(31),i=Math.max,s=Math.min;e.exports=function(e,t){return(e=n(e))<0?i(e+t,0):s(e,t)}},7:function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},78:function(e,t,r){e.exports={default:r(119),__esModule:!0}},8:function(e,t,r){var n=r(9),i=r(39),s=r(27),o=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=s(t,!0),n(r),i)try{return o(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},9:function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}}})})}]).default});",
      "sourceCodeClassname": "sip.rethink-project.eu",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "1.00",
    "description": "Description of IMSIWProtoStub",
    "language": "javascript",
    "cguid": "42deef6d806460071a3a260ea4b6291ae",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "sip.rethink-project.eu",
    "configuration": {
      "credential_server": "https://ims.rethink-project.eu/credential",
      "domain": "hysmart.rethink.ptinovacao.pt"
    },
    "messageSchemas": "",
    "dataObjects": [
      "hyperty-catalogue://catalogue.hysmart.rethink.ptinovacao.pt/.well-known/dataschema/Connection"
    ],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "P2PHandlerProtoStub": {
    "sourcePackage": {
      "sourceCode": "!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("activate",[],t):"object"==typeof exports?exports.activate=t():e.activate=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){"use strict";var r=!0,o={disableLog:function(e){return"boolean"!=typeof e?new Error("Argument type: "+typeof e+". Please use a boolean."):(r=e,e?"adapter.js logging disabled":"adapter.js logging enabled")},log:function(){if("object"==typeof window){if(r)return;"undefined"!=typeof console&&"function"==typeof console.log&&console.log.apply(console,arguments)}},extractVersion:function(e,t,n){var r=e.match(t);return r&&r.length>=n&&parseInt(r[n],10)},detectBrowser:function(){var e={browser:null,version:null};if("undefined"==typeof window||!window.navigator)return e.browser="Not a browser.",e;if(navigator.mozGetUserMedia)e.browser="firefox",e.version=this.extractVersion(navigator.userAgent,/Firefox\/(\d+)\./,1);else if(navigator.webkitGetUserMedia)if(window.webkitRTCPeerConnection)e.browser="chrome",e.version=this.extractVersion(navigator.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else{if(!navigator.userAgent.match(/Version\/(\d+).(\d+)/))return e.browser="Unsupported webkit-based browser with GUM support but no WebRTC support.",e;e.browser="safari",e.version=this.extractVersion(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}else if(navigator.mediaDevices&&navigator.userAgent.match(/Edge\/(\d+).(\d+)$/))e.browser="edge",e.version=this.extractVersion(navigator.userAgent,/Edge\/(\d+).(\d+)$/,2);else{if(!navigator.mediaDevices||!navigator.userAgent.match(/AppleWebKit\/(\d+)\./))return e.browser="Not a supported browser.",e;e.browser="safari",e.version=this.extractVersion(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}return e},shimCreateObjectURL:function(){if("object"==typeof window&&window.HTMLMediaElement&&"srcObject"in window.HTMLMediaElement.prototype){var e=URL.createObjectURL.bind(URL),t=URL.revokeObjectURL.bind(URL),n=new Map,r=0;URL.createObjectURL=function(t){if("getTracks"in t){var o="polyblob:"+ ++r;return n.set(o,t),console.log("URL.createObjectURL(stream) is deprecated! Use elem.srcObject = stream instead!"),o}return e(t)},URL.revokeObjectURL=function(e){t(e),n.delete(e)};var o=Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,"src");Object.defineProperty(window.HTMLMediaElement.prototype,"src",{get:function(){return o.get.apply(this)},set:function(e){return this.srcObject=n.get(e)||null,o.set.apply(this,[e])}});var i=HTMLMediaElement.prototype.setAttribute;HTMLMediaElement.prototype.setAttribute=function(){return 2===arguments.length&&"src"===(""+arguments[0]).toLowerCase()&&(this.srcObject=n.get(arguments[1])||null),i.apply(this,arguments)}}}};e.exports={log:o.log,disableLog:o.disableLog,browserDetails:o.detectBrowser(),extractVersion:o.extractVersion,shimCreateObjectURL:o.shimCreateObjectURL,detectBrowser:o.detectBrowser.bind(o)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();t.default=function(e,t,n){return{name:"P2PHandlerStub",instance:new a(e,t,n)}};var o=n(2),i=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var a=function(){function e(t,n,r){var i=this;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The runtimeProtoStubURL is a required parameter");if(!n)throw new Error("The bus is a required parameter");if(!r)throw new Error("The configuration is a required parameter");console.log("[P2PHandlerProtoStub.constructor] config is: ",r),this._runtimeProtoStubURL=t,this._runtimeURL=r.runtimeURL,this._configuration=r,this._bus=n,this._bus.addListener("*",function(e){i._sendChannelMsg(e)}),this._connectionControllers={},this._syncher=new o.Syncher(t,n,r),this._syncher.onNotification(function(e){switch(console.log("+[P2PHandlerProtoStub] On Syncher Notification ",e),e.ack(200),e.type){case"create":i._sendStatus("create",void 0,e.value.runtime),i._createConnectionController(e).then(function(t){i._connectionControllers[e.value.runtime]=t,t.onStatusUpdate(function(n,r,o){i._sendStatus(n,r,o),"disconnected"===n&&(t.cleanup(),delete i._connectionControllers[e.value.runtime])}),t.onMessage(function(e){i._deliver(e)})});break;case"delete":console.log("+[P2PHandlerStub] deleting connection handler for "+e.from);var t=i._connectionControllers[e.from];t&&(t.cleanup(),delete i._connectionControllers[e.from])}})}return r(e,[{key:"disconnect",value:function(){var e=this;Object.keys(this._connectionControllers).forEach(function(t){e._controllers[t].cleanup(),delete e._controllers[t]})}},{key:"_createConnectionController",value:function(e){var t=this;return new Promise(function(n,r){var o=new i.default(t._runtimeProtoStubURL,t._syncher,t._configuration,!1);o.observe(e).then(function(){console.log("+[P2PHandlerStub] observer setup successful"),o.report(e.from,t._runtimeURL).then(function(){console.log("+[P2PHandlerStub] reporter setup successful"),t._sendStatus("in-progress",void 0,e.value.runtime),n(o)})})})}},{key:"_sendChannelMsg",value:function(e){if(this._filter(e)){var t=this._connectionControllers[e.body.peer];t&&t.sendMessage(e)}}},{key:"_sendStatus",value:function(e,t,n){var r={type:"update",from:this._runtimeProtoStubURL,to:this._runtimeProtoStubURL+"/status",body:{value:e}};n&&(r.body.resource=n),t&&(r.body.desc=t),console.log("+[P2PHandlerStub] sending status update: ",r),this._bus.postMessage(r)}},{key:"_filter",value:function(e){return!e.body||e.body.via!==this._runtimeProtoStubURL}},{key:"_deliver",value:function(e){console.log("+[P2PHandlerStub] posting message to msg bus: ",e),e.body||(e.body={}),e.body.via=this._runtimeProtoStubURL,this._bus.postMessage(e)}}]),e}()},function(e,t,n){!function(t,n){e.exports=n()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=196)}([function(e,t){var n=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=n)},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){var r=n(36)("wks"),o=n(23),i=n(1).Symbol,a="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=r},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,n){e.exports=!n(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){"use strict";t.__esModule=!0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(59));t.default=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),(0,r.default)(e,o.key,o)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()},function(e,t,n){var r=n(1),o=n(0),i=n(14),a=n(11),s=n(10),c=function(e,t,n){var u,d,l,f=e&c.F,p=e&c.G,h=e&c.S,v=e&c.P,y=e&c.B,m=e&c.W,_=p?o:o[t]||(o[t]={}),b=_.prototype,g=p?r:h?r[t]:(r[t]||{}).prototype;for(u in p&&(n=t),n)(d=!f&&g&&void 0!==g[u])&&s(_,u)||(l=d?g[u]:n[u],_[u]=p&&"function"!=typeof g[u]?n[u]:y&&d?i(l,r):m&&g[u]==l?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(l):v&&"function"==typeof l?i(Function.call,l):l,v&&((_.virtual||(_.virtual={}))[u]=l,e&c.R&&b&&!b[u]&&a(b,u,l)))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(9),o=n(39),i=n(27),a=Object.defineProperty;t.f=n(4)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(7);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(8),o=n(16);e.exports=n(4)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(55),o=n(30);e.exports=function(e){return r(o(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(24);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,n){e.exports={default:n(102),__esModule:!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(n(58)),o=i(n(42));function i(e){return e&&e.__esModule?e:{default:e}}function a(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$3,$4").split(",")}var n=t(e);if(n[0]===e&&!n[0].includes("@")){var r={type:"",domain:e,identity:""};return console.warn("[DivideURL] DivideURL don't support url without scheme. Please review your url address",e),r}return n[0]===e&&n[0].includes("@")&&(n=t((n[0]===e?"smtp":n[0])+"://"+n[0])),n[1].includes("@")&&(n[2]=n[0]+"://"+n[1],n[1]=n[1].substr(n[1].indexOf("@")+1)),{type:n[0],domain:n[1],identity:n[2]}}function s(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}t.divideURL=a,t.divideEmail=function(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,o.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,r.default)(e))},t.getUserURLFromEmail=s,t.getUserEmailFromURL=function(e){var t=a(e);return t.identity.replace("/","")+"@"+t.domain},t.convertToUserURL=function(e){if("user://"===e.substring(0,7)){var t=a(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return s(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,n=[],r=[];if(null==e.match(t))r=e.split(".");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&n.push(e)});var i=void 0;n.forEach(function(t){i=e.replace(t,"*+*"),r=i.split(".").map(function(e){return"*+*"===e?t:e})})}return console.log("[ServiceFramework.Utils.checkAttribute]",r),r},t.parseAttributes=function(e){if(e.includes("://")){var t=e.split(/([0-9a-zA-Z][-\w]*):\/\//g)[0],n=t.split("."),r=e.replace(t,"");if(e.includes("identity")){var o=r.split("identity.");console.log("array2 "+o),r=o[0].slice(".",-1),o=o[1].split("."),n.push(r,"identity"),n=n.concat(o)}else n.push(r);return n.filter(Boolean)}return e.split(".")}},function(e,t,n){var r=n(45),o=n(37);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r,o;!function(i,a){"use strict";void 0===(o="function"==typeof(r=function(){var e=function(){},t="undefined",n=["trace","debug","info","warn","error"];function r(e,t){var n=e[t];if("function"==typeof n.bind)return n.bind(e);try{return Function.prototype.bind.call(n,e)}catch(t){return function(){return Function.prototype.apply.apply(n,[e,arguments])}}}function o(t,r){for(var o=0;o<n.length;o++){var i=n[o];this[i]=o<t?e:this.methodFactory(i,t,r)}this.log=this.debug}function i(n,i,a){return function(n){return"debug"===n&&(n="log"),typeof console!==t&&(void 0!==console[n]?r(console,n):void 0!==console.log?r(console,"log"):e)}(n)||function(e,n,r){return function(){typeof console!==t&&(o.call(this,n,r),this[e].apply(this,arguments))}}.apply(this,arguments)}function a(e,r,a){var s,c=this,u="loglevel";function d(){var e;if(typeof window!==t){try{e=window.localStorage[u]}catch(e){}if(typeof e===t)try{var n=window.document.cookie,r=n.indexOf(encodeURIComponent(u)+"=");-1!==r&&(e=/^([^;]+)/.exec(n.slice(r))[1])}catch(e){}return void 0===c.levels[e]&&(e=void 0),e}}e&&(u+=":"+e),c.name=e,c.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},c.methodFactory=a||i,c.getLevel=function(){return s},c.setLevel=function(r,i){if("string"==typeof r&&void 0!==c.levels[r.toUpperCase()]&&(r=c.levels[r.toUpperCase()]),!("number"==typeof r&&r>=0&&r<=c.levels.SILENT))throw"log.setLevel() called with invalid level: "+r;if(s=r,!1!==i&&function(e){var r=(n[e]||"silent").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[u]=r)}catch(e){}try{window.document.cookie=encodeURIComponent(u)+"="+r+";"}catch(e){}}}(r),o.call(c,r,e),typeof console===t&&r<c.levels.SILENT)return"No console available for logging"},c.setDefaultLevel=function(e){d()||c.setLevel(e,!1)},c.enableAll=function(e){c.setLevel(c.levels.TRACE,e)},c.disableAll=function(e){c.setLevel(c.levels.SILENT,e)};var l=d();null==l&&(l=null==r?"WARN":r),c.setLevel(l,!1)}var s=new a,c={};s.getLogger=function(e){if("string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=c[e];return t||(t=c[e]=new a(e,s.getLevel(),s.methodFactory)),t};var u=typeof window!==t?window.log:void 0;return s.noConflict=function(){return typeof window!==t&&window.log===s&&(window.log=u),s},s.getLoggers=function(){return c},s})?r.call(t,n,t,e):r)||(e.exports=o)}()},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){e.exports={default:n(91),__esModule:!0}},function(e,t,n){var r=n(8).f,o=n(10),i=n(2)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(7);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){var r=n(7),o=n(1).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(30);e.exports=function(e){return Object(r(e))}},function(e,t,n){"use strict";t.__esModule=!0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(47));t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,r.default)(t))&&"function"!=typeof t?e:t}},function(e,t,n){"use strict";t.__esModule=!0;var r=a(n(93)),o=a(n(97)),i=a(n(47));function a(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(r.default?(0,r.default)(e,t):e.__proto__=t)}},function(e,t,n){var r=n(36)("keys"),o=n(23);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t,n){var r=n(0),o=n(1),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(9),o=n(72),i=n(37),a=n(35)("IE_PROTO"),s=function(){},c=function(){var e,t=n(28)("iframe"),r=i.length;for(t.style.display="none",n(56).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;r--;)delete c.prototype[i[r]];return c()};e.exports=Object.create||function(e,t){var n;return null!==e?(s.prototype=r(e),n=new s,s.prototype=null,n[a]=e):n=c(),void 0===t?n:o(n,t)}},function(e,t,n){e.exports=!n(4)&&!n(13)(function(){return 7!=Object.defineProperty(n(28)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){t.f=n(2)},function(e,t,n){var r=n(1),o=n(0),i=n(15),a=n(40),s=n(8).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||s(t,e,{value:a.f(e)})}},function(e,t,n){e.exports={default:n(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(6),o=n(0),i=n(13);e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],a={};a[e]=t(n),r(r.S+r.F*i(function(){n(1)}),"Object",a)}},function(e,t,n){var r=n(10),o=n(12),i=n(64)(!1),a=n(35)("IE_PROTO");e.exports=function(e,t){var n,s=o(e),c=0,u=[];for(n in s)n!=a&&r(s,n)&&u.push(n);for(;t.length>c;)r(s,n=t[c++])&&(~i(u,n)||u.push(n));return u}},function(e,t,n){var r=n(29),o=n(16),i=n(12),a=n(27),s=n(10),c=n(39),u=Object.getOwnPropertyDescriptor;t.f=n(4)?u:function(e,t){if(e=i(e),t=a(t,!0),c)try{return u(e,t)}catch(e){}if(s(e,t))return o(!r.f.call(e,t),e[t])}},function(e,t,n){"use strict";t.__esModule=!0;var r=a(n(79)),o=a(n(81)),i="function"==typeof o.default&&"symbol"==typeof r.default?function(e){return typeof e}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":typeof e};function a(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof o.default&&"symbol"===i(r.default)?function(e){return void 0===e?"undefined":i(e)}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":void 0===e?"undefined":i(e)}},function(e,t,n){"use strict";var r=n(15),o=n(6),i=n(50),a=n(11),s=n(17),c=n(71),u=n(26),d=n(53),l=n(2)("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,h,v,y,m){c(n,t,h);var _,b,g,w=function(e){if(!f&&e in R)return R[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},C=t+" Iterator",O="values"==v,P=!1,R=e.prototype,S=R[l]||R["@@iterator"]||v&&R[v],k=S||w(v),T=v?O?w("entries"):k:void 0,j="Array"==t&&R.entries||S;if(j&&(g=d(j.call(new e)))!==Object.prototype&&g.next&&(u(g,C,!0),r||"function"==typeof g[l]||a(g,l,p)),O&&S&&"values"!==S.name&&(P=!0,k=function(){return S.call(this)}),r&&!m||!f&&!P&&R[l]||a(R,l,k),s[t]=k,s[C]=p,v)if(_={values:O?k:w("values"),keys:y?k:w("keys"),entries:T},m)for(b in _)b in R||i(R,b,_[b]);else o(o.P+o.F*(f||P),t,_);return _}},function(e,t,n){var r=n(31),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){e.exports=n(11)},function(e,t,n){"use strict";var r=n(24);e.exports.f=function(e){return new function(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r}),this.resolve=r(t),this.reject=r(n)}(e)}},function(e,t,n){"use strict";var r=n(70)(!0);n(48)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t,n){var r=n(10),o=n(32),i=n(35)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){n(73);for(var r=n(1),o=n(11),i=n(17),a=n(2)("toStringTag"),s="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),c=0;c<s.length;c++){var u=s[c],d=r[u],l=d&&d.prototype;l&&!l[a]&&o(l,a,u),i[u]=i.Array}},function(e,t,n){var r=n(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){var r=n(1).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(45),o=n(37).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t,n){e.exports={default:n(76),__esModule:!0}},function(e,t,n){e.exports={default:n(61),__esModule:!0}},function(e,t){},function(e,t,n){n(62);var r=n(0).Object;e.exports=function(e,t,n){return r.defineProperty(e,t,n)}},function(e,t,n){var r=n(6);r(r.S+r.F*!n(4),"Object",{defineProperty:n(8).f})},function(e,t,n){var r=n(21),o=n(2)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t,n){var r=n(12),o=n(49),i=n(65);e.exports=function(e){return function(t,n,a){var s,c=r(t),u=o(c.length),d=i(a,u);if(e&&n!=n){for(;u>d;)if((s=c[d++])!=s)return!0}else for(;u>d;d++)if((e||d in c)&&c[d]===n)return e||d||0;return!e&&-1}}},function(e,t,n){var r=n(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},function(e,t,n){var r=n(9),o=n(24),i=n(2)("species");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||void 0==(n=r(a)[i])?t:o(n)}},function(e,t,n){var r,o,i,a=n(14),s=n(108),c=n(56),u=n(28),d=n(1),l=d.process,f=d.setImmediate,p=d.clearImmediate,h=d.MessageChannel,v=d.Dispatch,y=0,m={},_=function(){var e=+this;if(m.hasOwnProperty(e)){var t=m[e];delete m[e],t()}},b=function(e){_.call(e.data)};f&&p||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return m[++y]=function(){s("function"==typeof e?e:Function(e),t)},r(y),y},p=function(e){delete m[e]},"process"==n(21)(l)?r=function(e){l.nextTick(a(_,e,1))}:v&&v.now?r=function(e){v.now(a(_,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=b,r=a(i.postMessage,i,1)):d.addEventListener&&"function"==typeof postMessage&&!d.importScripts?(r=function(e){d.postMessage(e+"","*")},d.addEventListener("message",b,!1)):r="onreadystatechange"in u("script")?function(e){c.appendChild(u("script")).onreadystatechange=function(){c.removeChild(this),_.call(e)}}:function(e){setTimeout(a(_,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(9),o=n(7),i=n(51);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){var r=n(31),o=n(30);e.exports=function(e){return function(t,n){var i,a,s=String(o(t)),c=r(n),u=s.length;return c<0||c>=u?e?"":void 0:(i=s.charCodeAt(c))<55296||i>56319||c+1===u||(a=s.charCodeAt(c+1))<56320||a>57343?e?s.charAt(c):i:e?s.slice(c,c+2):a-56320+(i-55296<<10)+65536}}},function(e,t,n){"use strict";var r=n(38),o=n(16),i=n(26),a={};n(11)(a,n(2)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(a,{next:o(1,n)}),i(e,t+" Iterator")}},function(e,t,n){var r=n(8),o=n(9),i=n(20);e.exports=n(4)?Object.defineProperties:function(e,t){o(e);for(var n,a=i(t),s=a.length,c=0;s>c;)r.f(e,n=a[c++],t[n]);return e}},function(e,t,n){"use strict";var r=n(74),o=n(75),i=n(17),a=n(12);e.exports=n(48)(Array,"Array",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])},"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){var r=n(0),o=r.JSON||(r.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},function(e,t,n){var r=n(23)("meta"),o=n(7),i=n(10),a=n(8).f,s=0,c=Object.isExtensible||function(){return!0},u=!n(13)(function(){return c(Object.preventExtensions({}))}),d=function(e){a(e,r,{value:{i:"O"+ ++s,w:{}}})},l=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!c(e))return"F";if(!t)return"E";d(e)}return e[r].i},getWeak:function(e,t){if(!i(e,r)){if(!c(e))return!0;if(!t)return!1;d(e)}return e[r].w},onFreeze:function(e){return u&&l.NEED&&c(e)&&!i(e,r)&&d(e),e}}},function(e,t,n){e.exports={default:n(119),__esModule:!0}},function(e,t,n){e.exports={default:n(80),__esModule:!0}},function(e,t,n){n(52),n(54),e.exports=n(40).f("iterator")},function(e,t,n){e.exports={default:n(82),__esModule:!0}},function(e,t,n){n(83),n(60),n(87),n(88),e.exports=n(0).Symbol},function(e,t,n){"use strict";var r=n(1),o=n(10),i=n(4),a=n(6),s=n(50),c=n(77).KEY,u=n(13),d=n(36),l=n(26),f=n(23),p=n(2),h=n(40),v=n(41),y=n(84),m=n(85),_=n(9),b=n(7),g=n(12),w=n(27),C=n(16),O=n(38),P=n(86),R=n(46),S=n(8),k=n(20),T=R.f,j=S.f,x=P.f,E=r.Symbol,L=r.JSON,M=L&&L.stringify,D=p("_hidden"),U=p("toPrimitive"),I={}.propertyIsEnumerable,A=d("symbol-registry"),N=d("symbols"),H=d("op-symbols"),F=Object.prototype,B="function"==typeof E,G=r.QObject,z=!G||!G.prototype||!G.prototype.findChild,V=i&&u(function(){return 7!=O(j({},"a",{get:function(){return j(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=T(F,t);r&&delete F[t],j(e,t,n),r&&e!==F&&j(F,t,r)}:j,J=function(e){var t=N[e]=O(E.prototype);return t._k=e,t},W=B&&"symbol"==typeof E.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof E},q=function(e,t,n){return e===F&&q(H,t,n),_(e),t=w(t,!0),_(n),o(N,t)?(n.enumerable?(o(e,D)&&e[D][t]&&(e[D][t]=!1),n=O(n,{enumerable:C(0,!1)})):(o(e,D)||j(e,D,C(1,{})),e[D][t]=!0),V(e,t,n)):j(e,t,n)},Z=function(e,t){_(e);for(var n,r=y(t=g(t)),o=0,i=r.length;i>o;)q(e,n=r[o++],t[n]);return e},K=function(e){var t=I.call(this,e=w(e,!0));return!(this===F&&o(N,e)&&!o(H,e))&&(!(t||!o(this,e)||!o(N,e)||o(this,D)&&this[D][e])||t)},Y=function(e,t){if(e=g(e),t=w(t,!0),e!==F||!o(N,t)||o(H,t)){var n=T(e,t);return!n||!o(N,t)||o(e,D)&&e[D][t]||(n.enumerable=!0),n}},$=function(e){for(var t,n=x(g(e)),r=[],i=0;n.length>i;)o(N,t=n[i++])||t==D||t==c||r.push(t);return r},X=function(e){for(var t,n=e===F,r=x(n?H:g(e)),i=[],a=0;r.length>a;)!o(N,t=r[a++])||n&&!o(F,t)||i.push(N[t]);return i};B||(s((E=function(){if(this instanceof E)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(n){this===F&&t.call(H,n),o(this,D)&&o(this[D],e)&&(this[D][e]=!1),V(this,e,C(1,n))};return i&&z&&V(F,e,{configurable:!0,set:t}),J(e)}).prototype,"toString",function(){return this._k}),R.f=Y,S.f=q,n(57).f=P.f=$,n(29).f=K,n(43).f=X,i&&!n(15)&&s(F,"propertyIsEnumerable",K,!0),h.f=function(e){return J(p(e))}),a(a.G+a.W+a.F*!B,{Symbol:E});for(var Q="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Q.length>ee;)p(Q[ee++]);for(var te=k(p.store),ne=0;te.length>ne;)v(te[ne++]);a(a.S+a.F*!B,"Symbol",{for:function(e){return o(A,e+="")?A[e]:A[e]=E(e)},keyFor:function(e){if(!W(e))throw TypeError(e+" is not a symbol!");for(var t in A)if(A[t]===e)return t},useSetter:function(){z=!0},useSimple:function(){z=!1}}),a(a.S+a.F*!B,"Object",{create:function(e,t){return void 0===t?O(e):Z(O(e),t)},defineProperty:q,defineProperties:Z,getOwnPropertyDescriptor:Y,getOwnPropertyNames:$,getOwnPropertySymbols:X}),L&&a(a.S+a.F*(!B||u(function(){var e=E();return"[null]"!=M([e])||"{}"!=M({a:e})||"{}"!=M(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(b(t)||void 0!==e)&&!W(e))return m(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!W(t))return t}),r[1]=t,M.apply(L,r)}}),E.prototype[U]||n(11)(E.prototype,U,E.prototype.valueOf),l(E,"Symbol"),l(Math,"Math",!0),l(r.JSON,"JSON",!0)},function(e,t,n){var r=n(20),o=n(43),i=n(29);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var a,s=n(e),c=i.f,u=0;s.length>u;)c.call(e,a=s[u++])&&t.push(a);return t}},function(e,t,n){var r=n(21);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(12),o=n(57).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(r(e))}},function(e,t,n){n(41)("asyncIterator")},function(e,t,n){n(41)("observable")},function(e,t,n){n(90),e.exports=n(0).Object.keys},function(e,t,n){var r=n(32),o=n(20);n(44)("keys",function(){return function(e){return o(r(e))}})},function(e,t,n){n(92),e.exports=n(0).Object.getPrototypeOf},function(e,t,n){var r=n(32),o=n(53);n(44)("getPrototypeOf",function(){return function(e){return o(r(e))}})},function(e,t,n){e.exports={default:n(94),__esModule:!0}},function(e,t,n){n(95),e.exports=n(0).Object.setPrototypeOf},function(e,t,n){var r=n(6);r(r.S,"Object",{setPrototypeOf:n(96).set})},function(e,t,n){var r=n(7),o=n(9),i=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(14)(Function.call,n(46).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return i(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:i}},function(e,t,n){e.exports={default:n(98),__esModule:!0}},function(e,t,n){n(99);var r=n(0).Object;e.exports=function(e,t){return r.create(e,t)}},function(e,t,n){var r=n(6);r(r.S,"Object",{create:n(38)})},function(e,t,n){"use strict";t.__esModule=!0;var r=i(n(25)),o=i(n(125));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,n,i){null===t&&(t=Function.prototype);var a=(0,o.default)(t,n);if(void 0===a){var s=(0,r.default)(t);return null===s?void 0:e(s,n,i)}if("value"in a)return a.value;var c=a.get;return void 0!==c?c.call(i):void 0}},function(e,t,n){var r=n(63),o=n(2)("iterator"),i=n(17);e.exports=n(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[r(e)]}},function(e,t,n){n(60),n(52),n(54),n(103),n(114),n(115),e.exports=n(0).Promise},function(e,t,n){"use strict";var r,o,i,a,s=n(15),c=n(1),u=n(14),d=n(63),l=n(6),f=n(7),p=n(24),h=n(104),v=n(105),y=n(66),m=n(67).set,_=n(109)(),b=n(51),g=n(68),w=n(110),C=n(69),O=c.TypeError,P=c.process,R=P&&P.versions,S=R&&R.v8||"",k=c.Promise,T="process"==d(P),j=function(){},x=o=b.f,E=!!function(){try{var e=k.resolve(1),t=(e.constructor={})[n(2)("species")]=function(e){e(j,j)};return(T||"function"==typeof PromiseRejectionEvent)&&e.then(j)instanceof t&&0!==S.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(e){}}(),L=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},M=function(e,t){if(!e._n){e._n=!0;var n=e._c;_(function(){for(var r=e._v,o=1==e._s,i=0,a=function(t){var n,i,a,s=o?t.ok:t.fail,c=t.resolve,u=t.reject,d=t.domain;try{s?(o||(2==e._h&&I(e),e._h=1),!0===s?n=r:(d&&d.enter(),n=s(r),d&&(d.exit(),a=!0)),n===t.promise?u(O("Promise-chain cycle")):(i=L(n))?i.call(n,c,u):c(n)):u(r)}catch(e){d&&!a&&d.exit(),u(e)}};n.length>i;)a(n[i++]);e._c=[],e._n=!1,t&&!e._h&&D(e)})}},D=function(e){m.call(c,function(){var t,n,r,o=e._v,i=U(e);if(i&&(t=g(function(){T?P.emit("unhandledRejection",o,e):(n=c.onunhandledrejection)?n({promise:e,reason:o}):(r=c.console)&&r.error&&r.error("Unhandled promise rejection",o)}),e._h=T||U(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},U=function(e){return 1!==e._h&&0===(e._a||e._c).length},I=function(e){m.call(c,function(){var t;T?P.emit("rejectionHandled",e):(t=c.onrejectionhandled)&&t({promise:e,reason:e._v})})},A=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),M(t,!0))},N=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw O("Promise can't be resolved itself");(t=L(e))?_(function(){var r={_w:n,_d:!1};try{t.call(e,u(N,r,1),u(A,r,1))}catch(e){A.call(r,e)}}):(n._v=e,n._s=1,M(n,!1))}catch(e){A.call({_w:n,_d:!1},e)}}};E||(k=function(e){h(this,k,"Promise","_h"),p(e),r.call(this);try{e(u(N,this,1),u(A,this,1))}catch(e){A.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(111)(k.prototype,{then:function(e,t){var n=x(y(this,k));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=T?P.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&M(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=u(N,e,1),this.reject=u(A,e,1)},b.f=x=function(e){return e===k||e===a?new i(e):o(e)}),l(l.G+l.W+l.F*!E,{Promise:k}),n(26)(k,"Promise"),n(112)("Promise"),a=n(0).Promise,l(l.S+l.F*!E,"Promise",{reject:function(e){var t=x(this);return(0,t.reject)(e),t.promise}}),l(l.S+l.F*(s||!E),"Promise",{resolve:function(e){return C(s&&this===a?k:this,e)}}),l(l.S+l.F*!(E&&n(113)(function(e){k.all(e).catch(j)})),"Promise",{all:function(e){var t=this,n=x(t),r=n.resolve,o=n.reject,i=g(function(){var n=[],i=0,a=1;v(e,!1,function(e){var s=i++,c=!1;n.push(void 0),a++,t.resolve(e).then(function(e){c||(c=!0,n[s]=e,--a||r(n))},o)}),--a||r(n)});return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=x(t),r=n.reject,o=g(function(){v(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return o.e&&r(o.v),n.promise}})},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(14),o=n(106),i=n(107),a=n(9),s=n(49),c=n(101),u={},d={};(t=e.exports=function(e,t,n,l,f){var p,h,v,y,m=f?function(){return e}:c(e),_=r(n,l,t?2:1),b=0;if("function"!=typeof m)throw TypeError(e+" is not iterable!");if(i(m)){for(p=s(e.length);p>b;b++)if((y=t?_(a(h=e[b])[0],h[1]):_(e[b]))===u||y===d)return y}else for(v=m.call(e);!(h=v.next()).done;)if((y=o(v,_,h.value,t))===u||y===d)return y}).BREAK=u,t.RETURN=d},function(e,t,n){var r=n(9);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(17),o=n(2)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(1),o=n(67).set,i=r.MutationObserver||r.WebKitMutationObserver,a=r.process,s=r.Promise,c="process"==n(21)(a);e.exports=function(){var e,t,n,u=function(){var r,o;for(c&&(r=a.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(c)n=function(){a.nextTick(u)};else if(!i||r.navigator&&r.navigator.standalone)if(s&&s.resolve){var d=s.resolve(void 0);n=function(){d.then(u)}}else n=function(){o.call(r,u)};else{var l=!0,f=document.createTextNode("");new i(u).observe(f,{characterData:!0}),n=function(){f.data=l=!l}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},function(e,t,n){var r=n(1).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){var r=n(11);e.exports=function(e,t,n){for(var o in t)n&&e[o]?e[o]=t[o]:r(e,o,t[o]);return e}},function(e,t,n){"use strict";var r=n(1),o=n(0),i=n(8),a=n(4),s=n(2)("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:r[e];a&&t&&!t[s]&&i.f(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){var r=n(2)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},e(i)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(6),o=n(0),i=n(1),a=n(66),s=n(69);r(r.P+r.R,"Promise",{finally:function(e){var t=a(this,o.Promise||i.Promise),n="function"==typeof e;return this.then(n?function(n){return s(t,e()).then(function(){return n})}:e,n?function(n){return s(t,e()).then(function(){throw n})}:e)}})},function(e,t,n){"use strict";var r=n(6),o=n(51),i=n(68);r(r.S,"Promise",{try:function(e){var t=o.f(this),n=i(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectType=t.ChangeType=void 0;var r=a(n(3)),o=a(n(5));n(123);var i=n(19);function a(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(t){(0,r.default)(this,e),this._observers=[],this._filters={},this._data=t||{},this._internalObserve(this._data)}return(0,o.default)(e,[{key:"observe",value:function(e){this._observers.push(e)}},{key:"find",value:function(e){var t=(0,i.parseAttributes)(e);return this._findWithSplit(t)}},{key:"findBefore",value:function(e){var t={},n=(0,i.parseAttributes)(e);return t.last=n.pop(),t.obj=this._findWithSplit(n),t}},{key:"_findWithSplit",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:"_internalObserve",value:function(e){var t=this;this._data=Object.deepObserve(e,function(e){e.every(function(e){t._onChanges(e)})})}},{key:"_fireEvent",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:"_onChanges",value:function(e){var t=e.object,n=void 0;t.constructor===Object&&(n=u.OBJECT),t.constructor===Array&&(n=u.ARRAY);var r=e.keypath,o=t[e.name];"update"!==e.type||r.includes(".length")||this._fireEvent({cType:c.UPDATE,oType:n,field:r,data:o}),"add"===e.type&&this._fireEvent({cType:c.ADD,oType:n,field:r,data:o}),"delete"===e.type&&this._fireEvent({cType:c.REMOVE,oType:n,field:r})}},{key:"data",get:function(){return this._data}}]),e}(),c=t.ChangeType={UPDATE:"update",ADD:"add",REMOVE:"remove"},u=t.ObjectType={OBJECT:"object",ARRAY:"array"};t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=u(n(18)),o=u(n(3)),i=u(n(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),s=u(n(117)),c=n(19);function u(e){return e&&e.__esModule?e:{default:e}}var d=a.getLogger("DataObjectChild"),l=function(){function e(t){function n(e){throw"[DataObjectChild] "+e+" mandatory parameter is missing"}(0,o.default)(this,e),t.parent?this._parent=t.parent:n("parent"),t.url?this._url=t.url:n("url"),t.created?this._created=t.created:n("created"),t.reporter?this._reporter=t.reporter:n("reporter"),t.runtime?this._runtime=t.runtime:n("runtime"),t.schema?this._schema=t.schema:n("schema"),t.parentObject?this._parentObject=t.parentObject:n("parentObject"),t.name&&(this._name=t.name),t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._childId=t.url,t.data?this._syncObj=new s.default(t.data):this._syncObj=new s.default({}),d.log("[DataObjectChild -  Constructor] - ",this._syncObj),this._bus=this._parentObject._bus,this._owner=this._parentObject._owner,this._allocateListeners(),this._metadata=t,delete this._metadata.parentObject,this._sharingStatus=!1}return(0,i.default)(e,[{key:"share",value:function(e){var t=this;t._sharingStatus=new r.default(function(n,r){var o;o=e?t.metadata.parent:t.metadata.parent+"/children/"+t.metadata.children;var i=t.metadata;i.data=t.data;var a={type:"create",from:t.metadata.reporter,to:o,body:{resource:i.url,value:i}};if(t.identity&&(a.body.identity=t.identity),t._parentObject.data.hasOwnProperty("mutual")&&(a.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,c.deepClone)(a)),n();var s=t._bus.postMessage((0,c.deepClone)(a),function(e){if(e.to===t._reporter){t._bus.removeResponseListener(a.from,e.id),d.log("[Syncher.DataObjectChild.share] Parent reporter reply ",e);var o={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:"Unknown"};return e.body.code<300?n(o):r(o)}},!1);setTimeout(function(){return t._bus.removeResponseListener(a.from,s),r({code:408,desc:"timout"})},3e3)})}},{key:"store",value:function(){var e={},t=this.metadata.children+"."+this.metadata.url;e.value=this.metadata,e.identity=this.identity;var n={from:this.metadata.reporter,to:this._parentObject._syncher._subURL,type:"create",body:{resource:this.metadata.parent,attribute:t,value:e}};d.log("[DataObjectChild.store]:",n),this._bus.postMessage(n)}},{key:"_allocateListeners",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){"response"===t.type&&t.id===e._msgId&&(d.log("DataObjectChild.onResponse:",t),e._onResponse(t))}))}},{key:"_releaseListeners",value:function(){this._listener&&this._listener.remove()}},{key:"delete",value:function(){this._releaseListeners()}},{key:"onChange",value:function(e){this._syncObj.observe(function(t){d.log("[DataObjectChild - observer] - ",t),e(t)})}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.body.source,code:e.body.code};this._onResponseHandler&&this._onResponseHandler(t)}},{key:"shareable",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:"metadata",get:function(){return this._metadata}},{key:"childId",get:function(){return this._childId}},{key:"sharingStatus",get:function(){return this._sharingStatus}},{key:"data",get:function(){return this._syncObj.data}},{key:"identity",set:function(e){this._identity=e},get:function(){return this._identity}}]),e}();t.default=l,e.exports=t.default},function(e,t,n){n(120),e.exports=n(0).Object.assign},function(e,t,n){var r=n(6);r(r.S+r.F,"Object",{assign:n(121)})},function(e,t,n){"use strict";var r=n(20),o=n(43),i=n(29),a=n(32),s=n(55),c=Object.assign;e.exports=!c||n(13)(function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach(function(e){t[e]=e}),7!=c({},e)[n]||Object.keys(c({},t)).join("")!=r})?function(e,t){for(var n=a(e),c=arguments.length,u=1,d=o.f,l=i.f;c>u;)for(var f,p=s(arguments[u++]),h=d?r(p).concat(d(p)):r(p),v=h.length,y=0;v>y;)l.call(p,f=h[y++])&&(n[f]=p[f]);return n}:c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=v(n(47)),o=v(n(18)),i=v(n(42)),a=v(n(78)),s=v(n(3)),c=v(n(5)),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),d=n(117),l=v(d),f=v(n(118)),p=n(19),h=v(n(128));function v(e){return e&&e.__esModule?e:{default:e}}var y=u.getLogger("DataObject"),m=function(){function e(t){function n(e){throw"[DataObject] "+e+" mandatory parameter is missing"}(0,s.default)(this,e),t.syncher?this._syncher=t.syncher:n("syncher"),t.url?this._url=t.url:n("url"),t.created?this._created=t.created:n("created"),t.reporter?this._reporter=t.reporter:n("reporter"),t.runtime?this._runtime=t.runtime:n("runtime"),t.schema?this._schema=t.schema:n("schema"),t.name?this._name=t.name:n("name"),this._status=t.status,t.data?this._syncObj=new l.default(t.data):this._syncObj=new l.default({}),this._childrens=t.childrens,this._mutual=t.mutual,this._version=0,this._childId=0,this._childrenListeners=[],this._onAddChildrenHandler,this._resumed=t.resume,t.resume&&(this._version=t.version),this._owner=t.syncher._owner,this._bus=t.syncher._bus,t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._metadata=(0,a.default)(t),this._metadata.lastModified=this._metadata.created,delete this._metadata.data,delete this._metadata.syncher,delete this._metadata.authorise,this._hypertyResourceFactory=new h.default,this._childrenObjects={},this._sharedChilds=[]}return(0,c.default)(e,[{key:"_getLastChildId",value:function(){var e=this,t=e._owner+"#0";return(0,i.default)(e._childrens).filter(function(n){e._childrens[n].childId>t&&(t=e._childrens[n].childId)}),Number(t.split("#")[1])}},{key:"_allocateListeners",value:function(){var e=this,t=this,n=t._url+"/children/";y.log("[Data Object - AllocateListeners] - ",t._childrens),t._childrens&&t._childrens.forEach(function(r){var o=n+r,i=t._bus.addListener(o,function(n){if(n.from!==e._owner)switch(y.log("DataObject-Children-RCV: ",n),n.type){case"create":t._onChildCreate(n);break;case"delete":y.log(n);break;default:t._changeChildren(n)}});t._childrenListeners.push(i)})}},{key:"_releaseListeners",value:function(){var e=this;e._childrenListeners.forEach(function(e){e.remove()}),(0,i.default)(e._childrenObjects).forEach(function(t){(0,i.default)(e._childrenObjects[t]).forEach(function(n){e._childrenObjects[t][n]._releaseListeners()})})}},{key:"resumeChildrens",value:function(e){var t=this,n=this,r=this._owner+"#"+this._childId;(0,i.default)(e).forEach(function(o){var a=e[o];(0,i.default)(a).forEach(function(e){var i=!1;n._childrenObjects.hasOwnProperty(o)||(n._childrenObjects[o]={}),a[e].value.resourceType&&!n._childrenObjects[o].hasOwnProperty(e)?(n._childrenObjects[o][e]=n._resumeHypertyResource(a[e]),i=!0):n._childrenObjects[o].hasOwnProperty(e)||(n._childrenObjects[o][e]=n._resumeChild(a[e]),y.log("[DataObject.resumeChildrens] new DataObjectChild: ",n._childrenObjects[o][e]),i=!0),i&&e>r&&(r=e,y.log("[DataObjectReporter.resumeChildrens] - resuming: ",t._childrenObjects[o][e]))})}),this._childId=Number(r.split("#")[1])}},{key:"_resumeChild",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var n=new f.default(t);n.identity=e.identity;var r={type:"create",from:n.reporter,url:n.parent,value:n.data,childId:n.url,identity:n.identity,child:n};return n.resourceType&&(r.resource=n),this._onAddChildrenHandler&&this._onAddChildrenHandler(r),n}},{key:"_resumeHypertyResource",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var n=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t);n.identity=e.identity;var r={type:"create",from:n.reporter,url:n.parent,value:n.data,childId:n.url,identity:n.identity,child:n};return n.resourceType&&(r.resource=n),this._onAddChildrenHandler&&this._onAddChildrenHandler(r),n}},{key:"pause",value:function(){throw"Not implemented"}},{key:"resume",value:function(){throw"Not implemented"}},{key:"stop",value:function(){throw"Not implemented"}},{key:"addChild",value:function(e,t,n,r){var i=this,a=void 0;return new o.default(function(o){var s=i._url+"/children/"+e,c=i._getChildInput(r);c.data=t,c.children=e,a=new f.default(c),n&&(a.identity=n),a.share(),y.log("[DataObject.addChild] added ",a),a.onChange(function(e){i._onChange(e,{path:s,childId:c.url})}),i._childrenObjects.hasOwnProperty(e)||(i._childrenObjects[e]={}),i._childrenObjects[e][c.url]=a,o(a)})}},{key:"_deleteChildrens",value:function(){var e=this,t=[];return new o.default(function(n){if(e.childrens){y.log("[DataObject.deleteChildrens]",e.childrens);var r=void 0;for(r in e.childrens){var i=void 0;for(i in e.childrens[r]){var a=e.childrens[r][i];y.log("[DataObject._deleteChildrens] child",a),a.metadata.hasOwnProperty("resourceType")&&t.push(e.childrens[r][i].delete())}}}y.log("[DataObject._deleteChildrens] promises ",t),t.length>0?o.default.all(t).then(function(){n("[DataObject._deleteChildrens] done")}):n("[DataObject._deleteChildrens] nothing to delete")})}},{key:"_getChildInput",value:function(e){var t=(0,a.default)({},e);return this._childId++,t.url=this._owner+"#"+this._childId,t.parentObject=this,t.reporter=this._owner,t.created=(new Date).toISOString(),t.runtime=this._syncher._runtimeUrl,t.p2pHandler=this._syncher._p2pHandler,t.p2pRequester=this._syncher._p2pRequester,t.schema=this._schema,t.parent=this.url,t}},{key:"addHypertyResource",value:function(e,t,n,r,i){var a=this;return new o.default(function(o){var s=void 0,c=a._url+"/children/"+e,u=a._getChildInput(i);u.children=e,a._hypertyResourceFactory.createHypertyResourceWithContent(!0,t,n,u).then(function(t){s=t,r&&(s.identity=r),s.share(),y.log("[DataObject.addHypertyResource] added ",s),s.onChange(function(e){a._onChange(e,{path:c,childId:s.childId})}),a._childrenObjects.hasOwnProperty(e)||(a._childrenObjects[e]={}),a._childrenObjects[e][s.childId]=s,o(s)})})}},{key:"onAddChild",value:function(e){this._onAddChildrenHandler=e}},{key:"_onChildCreate",value:function(e){y.log("[DataObject._onChildCreate] receivedBy "+this._owner+" : ",e);var t={from:e.to,to:e.from,type:"response",id:e.id,body:{code:100}};this._bus.postMessage(t),e.body.value.resourceType?this._onHypertyResourceAdded(e):this._onChildAdded(e)}},{key:"_onChildAdded",value:function(e){var t=(0,p.deepClone)(e.body.value);t.parentObject=this;var n=t.children,r=new f.default(t);r.identity=e.body.identity,this._childrenObjects.hasOwnProperty(n)||(this._childrenObjects[n]={}),this._childrenObjects[n][t.url]=r,e.to===this.metadata.url&&r.store(),this._hypertyEvt(e,r)}},{key:"_onHypertyResourceAdded",value:function(e){var t=e.body.value,n=void 0,r=t.children;t.parentObject=this,(n=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t)).identity=e.body.identity,this._childrenObjects.hasOwnProperty(r)||(this._childrenObjects[r]={}),this._childrenObjects[r][n.childId]=n,this._hypertyEvt(e,n),e.to===this.metadata.url&&n.store()}},{key:"_hypertyEvt",value:function(e,t){var n={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(n.resource=t),this._onAddChildrenHandler&&this._onAddChildrenHandler(n)}},{key:"_onChange",value:function(e,t){if(this._metadata.lastModified=(new Date).toISOString(),this._version++,"live"===this._status){var n={type:"update",from:this._url,to:this._url+"/changes",body:{version:this._version,source:this._owner,attribute:e.field,lastModified:this._metadata.lastModified}};y.log("[DataObject - _onChange] - ",e,t,n),e.oType===d.ObjectType.OBJECT?e.cType!==d.ChangeType.REMOVE&&(n.body.value=(0,p.deepClone)(e.data)):(n.body.attributeType=e.oType,n.body.value=e.data,e.cType!==d.ChangeType.UPDATE&&(n.body.operation=e.cType)),t&&(n.to=t.path,n.body.resource=t.childId),this.data._mutual||(n.body.mutual=this._mutual),this._bus.postMessage(n)}}},{key:"_changeObject",value:function(e,t){if(this._version+1<=t.body.version){this._version=t.body.version;var n,o=t.body.attribute;n="object"===(0,r.default)(t.body.value)?(0,p.deepClone)(t.body.value):t.body.value;var i=e.findBefore(o);if(t.body.lastModified?this._metadata.lastModified=t.body.lastModified:this._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===d.ObjectType.ARRAY)if(t.body.operation===d.ChangeType.ADD){var a=i.obj,s=i.last;Array.prototype.splice.apply(a,[s,0].concat(n))}else if(t.body.operation===d.ChangeType.REMOVE){var c=i.obj,u=i.last;c.splice(u,n)}else i.obj[i.last]=n;else t.body.hasOwnProperty("value")?i.obj[i.last]=n:delete i.obj[i.last]}else y.log("UNSYNCHRONIZED VERSION: (data => "+this._version+", msg => "+t.body.version+")")}},{key:"_changeChildren",value:function(e){var t=(0,p.divideURL)(e.to).identity,n=t?t.substring(t.lastIndexOf("/")+1):void 0,r=e.body.resource,o=this._childrenObjects[n][r];y.log("Change children: ",this._owner,e,n),o?this._changeObject(o._syncObj,e):y.warn("No children found for: ",r)}},{key:"metadata",get:function(){return this._metadata}},{key:"url",get:function(){return this._url}},{key:"schema",get:function(){return this._schema}},{key:"status",get:function(){return this._status}},{key:"data",get:function(){return this._syncObj.data}},{key:"childrens",get:function(){return this._childrenObjects}}]),e}();t.default=m,e.exports=t.default},function(e,t){!function(){"use strict";if(!Object.observe&&"function"==typeof Proxy){function e(e,t,n,r,o,i){var a,s=this;function c(e,r){if(c.delay=r,!c.pause&&s.changeset.length>0){if(!e){var o=s.changeset.filter(function(e){return!n||n.indexOf(e.type)>=0});o.length>0&&t(o)}s.changeset=[]}}return c.pause=o,c.delay=i,s.get=function(e,t){return"__observer__"===t?s:"unobserve"===t?function(){return Object.unobserve(e),e}:"deliver"===t?c:e[t]},s.target=e,s.changeset=[],s.target.__observerCallbacks__||(Object.defineProperty(e,"__observerCallbacks__",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,"__observers__",{enumerable:!1,configurable:!0,writable:!1,value:[]})),s.target.__observerCallbacks__.push(t),s.target.__observers__.push(this),a=new Proxy(e,s),c(!1,i),a}e.prototype.deliver=function(){return this.get(null,"deliver")},e.prototype.set=function(e,t,n){var r=e[t],o=void 0===r?"add":"update";if(e[t]=n,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(o)>=0)){var i={object:e,name:t,type:o},a=0===this.changeset.length,s=this.deliver();"update"===o&&(i.oldValue=r),this.changeset.push(i),a&&s(!1,"number"==typeof s.delay?s.delay:10)}return!0},e.prototype.deleteProperty=function(e,t){var n=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("delete")>=0){var r={object:e,name:t,type:"delete",oldValue:n},o=0===this.changeset.length,i=this.deliver();this.changeset.push(r),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.defineProperty=function(e,t,n){if(Object.defineProperty(e,t,n),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("reconfigure")>=0){var r={object:e,name:t,type:"reconfigure"},o=0===this.changeset.length,i=this.deliver();this.changeset.push(r),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.setPrototypeOf=function(e,t){var n=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("setPrototype")>=0){var r={object:e,name:"__proto__",type:"setPrototype",oldValue:n},o=0===this.changeset.length,i=this.deliver();this.changeset.push(r),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("preventExtensions")>=0){var t={object:e,type:"preventExtensions"},n=0===this.changeset.length,r=this.deliver();this.changeset.push(t),n&&r(!1,"number"==typeof r.delay?r.delay:10)}return!0},Object.observe=function(t,n,r,o,i,a){return new e(t,n,r,o,i,a)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(n,r){t===n&&(e.__observerCallbacks__.splice(r,1),delete e.__observers__[r].callback,e.__observers__.splice(r,1))})}},Array.observe=function(e,t,n,r,o,i){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError("First argument to Array.observer is not an Array");n=n||["add","update","delete","splice"];var a=new Proxy(e,{get:function(t,r){return"unobserve"===r?function(e){return e?Object.unobserve(t,e):t.unobserve()}:"splice"===r?function(r,o){if("number"!=typeof r||"number"!=typeof o)throw new TypeError("First two arguments to Array splice are not number, number");var i=this.slice(r,r+o),a=arguments.length>1?arguments.length-2:0,c={object:e,type:"splice",index:r,removed:i,addedCount:a};if(t.splice.apply(t,arguments),n.indexOf("splice")>=0){r=0===s.__observer__.changeset.length;var u=s.__observer__.deliver();s.__observer__.changeset.push(c),r&&u(!1,"number"==typeof u.delay?u.delay:10)}}:"push"===r?function(e){return this.splice(this.length,0,e)}:"pop"===r?function(){return this.splice(this.length-1,1)}:"unshift"===r?function(e){return this.splice(0,0,e)}:"shift"===r?function(){return this.splice(0,1)}:t[r]}}),s=Object.observe(a,function(e){var r=e.filter(function(e){return"length"!==e.name&&"add"!==e.name&&(!n||n.indexOf(e.type)>=0)});r.length>0&&t(r)},n,r,o,i);return s},Array.unobserve=function(e,t){return e.unobserve(t)}}Object.deepObserve=function(e,t,n){var r=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()};function o(e,n){Object.keys(e).forEach(function(o){if(("object"===r(e[o])||"array"===r(e[o]))&&!e[o].hasOwnProperty("__observers__")){var i=n.slice(0);i.push(o),e[o]=Object.deepObserve(e[o],t,i)}})}return o(e,n=n||[]),Object.observe(e,function(e){var r=[];e.forEach(function(e){var t=(n.length>0?n.join(".")+".":"")+e.name;"update"!==e.type&&"add"!==e.type||o(e.object,n),r.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),function e(t,n,o,i,a){i instanceof Object?Object.keys(i).forEach(function(s){if(!o||o[s]!==i[s]){var c=o&&void 0!==o[s]?o[s]:void 0,u=void 0===c?"add":"update",d=a+"."+s;r.push({name:t,object:n,type:u,oldValue:c,newValue:i[s],keypath:d}),e(t,n,c,i[s],d)}}):o instanceof Object&&Object.keys(o).forEach(function(s){var c=null===i?"update":"delete",u=a+"."+s;r.push({name:t,object:n,type:c,oldValue:o[s],newValue:i,keypath:u}),e(t,n,o[s],void 0,u)})}(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(r)})}}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=f(n(18)),o=f(n(25)),i=f(n(3)),a=f(n(5)),s=f(n(33)),c=f(n(34)),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),d=f(n(129)),l=(n(19),f(n(130)));function f(e){return e&&e.__esModule?e:{default:e}}var p=u.getLogger("FileHypertyResource"),h=function(e){function t(e,n){(0,i.default)(this,t);var r=(0,s.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e,n));return r.metadata.resourceType="file",r}return(0,c.default)(t,e),(0,a.default)(t,[{key:"init",value:function(e){var t=this;if(!e)throw new Error("[FileHypertyResource.constructor] missing mandatory *file* input ");return new r.default(function(n,r){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,p.log("[FileHypertyResource.init] file: ",e),t._isSender)switch(e.type.split("/")[0]){case"image":t._getImagePreview(e).then(function(r){t._metadata.preview=r,t._content=e,n()});break;default:t._content=e,n()}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),n()})}},{key:"_getImagePreview",value:function(e){var t=new FileReader;return new r.default(function(n,r){l.default.resize(e,{width:100,height:100},function(e,r){r?(t.readAsDataURL(e),t.onload=function(e){n(e.target.result)}):(p.warn("[FileHypertyResource._getImagePreview] unable to create image preview from original image "),n(void 0))})})}},{key:"toMessage",value:function(){}},{key:"name",get:function(){return this._metadata.name}},{key:"preview",get:function(){return this._metadata.preview}}]),t}(d.default);t.default=h,e.exports=t.default},function(e,t,n){e.exports={default:n(126),__esModule:!0}},function(e,t,n){n(127);var r=n(0).Object;e.exports=function(e,t){return r.getOwnPropertyDescriptor(e,t)}},function(e,t,n){var r=n(12),o=n(46).f;n(44)("getOwnPropertyDescriptor",function(){return function(e,t){return o(r(e),t)}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=s(n(18)),o=s(n(3)),i=s(n(5)),a=s(n(124));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(){(0,o.default)(this,e)}return(0,i.default)(e,[{key:"createHypertyResource",value:function(e,t,n){var r=void 0;switch(t){case"file":r=new a.default(e,n);break;default:throw new Error("[HypertyResourceFactory.createHypertyResource] not supported type: ",t)}return r}},{key:"createHypertyResourceWithContent",value:function(e,t,n,o){var i=void 0;return new r.default(function(r){switch(t){case"file":i=new a.default(e,o);break;default:reject()}i.init(n).then(function(){return i.save()}).then(function(){r(i)})})}}]),e}();t.default=c,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=p(n(18)),o=p(n(25)),i=p(n(3)),a=p(n(5)),s=p(n(33)),c=p(n(100)),u=p(n(34)),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),l=n(19),f=p(n(118));function p(e){return e&&e.__esModule?e:{default:e}}var h=d.getLogger("HypertyResource"),v=function(e){function t(e,n){(0,i.default)(this,t);var r=(0,s.default)(this,(t.__proto__||(0,o.default)(t)).call(this,n)),a=r;return a.arraybufferSizeLimit=5242880,a._isSender=e,a._localStorageURL=a._parentObject._syncher._runtimeUrl+"/storage",r}return(0,u.default)(t,e),(0,a.default)(t,[{key:"save",value:function(){var e=this;return new r.default(function(t,n){var r={from:e._owner,to:e._localStorageURL,type:"create",body:{value:(0,l.deepClone)(e._metadata)}};r.body.value.content=e._content,e._bus.postMessage(r,function(r){h.info("[HypertyResource.save] reply: ",r),e._bus.removeResponseListener(e._owner,r.id),200===r.body.code?(r.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(r.body.value)),t()):n(r.body.code+" "+r.body.desc)},!1)})}},{key:"read",value:function(e){var t=this;return h.info("[HypertyResource.read] ",this),new r.default(function(n,r){if(t.content)n(t);else{var o=t._getBestContentURL(t._metadata.contentURL);h.log("Storage:",o);var i={from:t._owner,to:o.url,type:"read",body:{resource:o.url+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(i.body.p2pRequester=t.metadata.p2pRequester,i.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(i,e).then(function(e){h.info("[HypertyResource] - get locally the resource:",e),n(t)}).catch(function(i){h.warn("[HypertyResource] - get locally the resource fail",i);var a={from:t._owner,to:o.remoteURL,type:"read",body:{resource:o.remoteURL+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(a.body.p2pRequester=t.metadata.p2pRequester,a.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(a,e).then(function(e){h.warn("[HypertyResource] - get remotely the resource",e),n(t)}).catch(function(e){h.warn("[HypertyResource] - get remotely the resource fail",e),r(e.body.code+" "+e.body.desc)})})}})}},{key:"_getBestResource",value:function(e,t){var n=this;return new r.default(function(r,o){var i=setTimeout(function(){return n._bus.removeResponseListener(n._owner,a),e.body.code=408,e.body.desc="Response timeout",o(e)},3e3),a=n._bus.postMessage(e,function(e){h.log("[HypertyResource.read] reply: ",e);var a=e.id;switch(clearTimeout(i),e.body.code){case 200:n._content=e.body.value.content,e.body.value.size<n.arraybufferSizeLimit&&n.save(),n._bus.removeResponseListener(n._owner,a),r(e);break;case 183:t(e.body.value);break;default:n._bus.removeResponseListener(n._owner,a),o(e)}},!1)})}},{key:"delete",value:function(){var e=this;h.info("[HypertyResource.delete]",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:"delete",body:{resources:e.metadata.contentURL}};return new r.default(function(n){e._bus.postMessage(t,function(e){e.body.code<300?n(!0):n(!1)})})}},{key:"_getBestContentURL",value:function(e){var t=e[0],n=t.substr(t.lastIndexOf("/")+1);return{url:this._localStorageURL,resource:n,remoteURL:t.substr(0,t.lastIndexOf("/"))}}},{key:"resourceType",get:function(){return this.metadata.resourceType}},{key:"mimetype",get:function(){return this._metadata.type}},{key:"content",get:function(){return this._content}},{key:"contentURL",get:function(){return this._metadata.contentURL}},{key:"shareable",get:function(){var e=(0,c.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"metadata",this);return e.resourceType=this.resourceType,e}}]),t}(f.default);t.default=v,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(n(3)),o=i(n(5));function i(e){return e&&e.__esModule?e:{default:e}}var a="undefined"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),s=a&&"undefined"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),c="undefined"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,u=c||"undefined"!=typeof Uint8Array&&"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof atob,d="undefined"!=typeof FileReader||"undefined"!=typeof URL,l=function(){function e(){(0,r.default)(this,e)}return(0,o.default)(e,null,[{key:"resize",value:function(t,n,r){if("function"==typeof n&&(r=n,n={width:640,height:480}),n.width,n.height,!e.isSupported()||!t.type.match(/image.*/))return r(t,!1),!1;if(t.type.match(/image\/gif/))return r(t,!1),!1;var o=document.createElement("img");return o.onload=function(i){var a=o.width,s=o.height,u=!1;if(a>=s&&a>n.width?(s*=n.width/a,a=n.width,u=!0):s>n.height&&(a*=n.height/s,s=n.height,u=!0),u){var d=document.createElement("canvas");if(d.width=a,d.height=s,d.getContext("2d").drawImage(o,0,0,a,s),c)d.toBlob(function(e){r(e,!0)},t.type);else{var l=e._toBlob(d,t.type);r(l,!0)}}else r(t,!1)},e._loadImage(o,t),!0}},{key:"_toBlob",value:function(e,t){var n=e.toDataURL(t).split(","),r=void 0;r=n[0].indexOf("base64")>=0?atob(n[1]):decodeURIComponent(n[1]);for(var o=new ArrayBuffer(r.length),i=new Uint8Array(o),c=0;c<r.length;c+=1)i[c]=r.charCodeAt(c);var u=n[0].split(":")[1].split(";")[0],d=null;if(a)d=new Blob([s?i:o],{type:u});else{var l=new BlobBuilder;l.append(o),d=l.getBlob(u)}return d}},{key:"_loadImage",value:function(e,t,n){if("undefined"==typeof URL){var r=new FileReader;r.onload=function(t){e.src=t.target.result,n&&n()},r.readAsDataURL(t)}else e.src=URL.createObjectURL(t),n&&n()}},{key:"isSupported",value:function(){return"undefined"!=typeof HTMLCanvasElement&&u&&d}}]),e}();t.default=l,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=f(n(18)),o=f(n(78)),i=f(n(3)),a=f(n(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),c=n(19),u=f(n(132)),d=f(n(133)),l=f(n(135));function f(e){return e&&e.__esModule?e:{default:e}}var p=s.getLogger("Syncher"),h=function(){function e(t,n,r){(0,i.default)(this,e);var o=this;o._owner=t,o._bus=n,o._subURL=r.runtimeURL+"/sm",o._runtimeUrl=r.runtimeURL,o._p2pHandler=r.p2pHandler,o._p2pRequester=r.p2pRequester,o._reporters={},o._observers={},o._provisionals={},n.addListener(t,function(e){if(e.from!==t)switch(p.info("[Syncher] Syncher-RCV: ",e,o),e.type){case"forward":o._onForward(e);break;case"create":o._onRemoteCreate(e);break;case"delete":o._onRemoteDelete(e);break;case"execute":o._onExecute(e)}})}return(0,a.default)(e,[{key:"create",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"no name",s=arguments[6],u=arguments[7];if(!e)throw Error("[Syncher - Create] - You need specify the data object schema");if(!t)throw Error("[Syncher - Create] -The observers should be defined");u=u||{};var d=(0,o.default)({},u);return d.p2p=i,d.store=r,d.schema=e,d.authorise=t,d.p2pHandler=this._p2pHandler,d.p2pRequester=this._p2pRequester,d.data=n?(0,c.deepClone)(n):{},d.name=0===a.length?"no name":a,d.reporter=u.hasOwnProperty("reporter")&&"boolean"!=typeof u.reporter?u.reporter:this._owner,d.resume=!1,u?(d.mutual=!u.hasOwnProperty("mutual")||u.mutual,d.name=u.hasOwnProperty("name")?u.name:d.name):d.mutual=!0,u.hasOwnProperty("reuseURL")&&(d.resource=u.reuseURL),s&&(d.identity=s),p.log("[syncher - create] - create Reporter - createInput: ",d),this._create(d)}},{key:"resumeReporters",value:function(e){return p.log("[syncher - create] - resume Reporter - criteria: ",e),(0,o.default)(e,{resume:!0}),this._resumeCreate(e)}},{key:"subscribe",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],a=arguments[5],s={};return s.p2p=r,s.store=n,s.schema=e,s.resource=t,a&&(s.identity=a),s.mutual=i,p.log("[syncher - subscribe] - subscribe criteria: ",s),(0,o.default)(s,{resume:!1}),this._subscribe(s)}},{key:"resumeObservers",value:function(e){var t=e||{};return(0,o.default)(t,{resume:!0}),this._resumeSubscribe(t)}},{key:"read",value:function(e){var t=this,n={type:"read",from:t._owner,to:e};return new r.default(function(e,r){t._bus.postMessage(n,function(i){p.log("[Syncher.read] reply: ",i);var a={},s={},c=0;if(i.body.code<300)if(i.body.value.hasOwnProperty("responses"))if(0===c)s=i.body.value,++c;else{delete i.body.value.responses;var u=void 0;for(u in i.body.value)a.hasOwnProperty(u)||(a[u]={}),(0,o.default)(a[u],i.body.value[u]);++c===s.responses&&(s.childrenObjects=a,delete s.responses,t._bus.removeResponseListener(n.from,i.id),e(s))}else t._bus.removeResponseListener(n.from,i.id),e(i.body.value);else r(i.body.desc)},!1)})}},{key:"onNotification",value:function(e){this._onNotificationHandler=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"_create",value:function(e){var t=this;return new r.default(function(n,r){var i=(0,o.default)({},e),a=e.resume;i.created=(new Date).toISOString(),i.runtime=t._runtimeUrl;var s=(0,c.deepClone)(i);delete s.p2p,delete s.store,delete s.observers,delete s.identity;var d={type:"create",from:t._owner,to:t._subURL,body:{resume:a,value:s}};d.body.schema=i.schema,i.p2p&&(d.body.p2p=i.p2p),i.store&&(d.body.store=i.store),i.identity&&(d.body.identity=i.identity),p.log("[syncher._create]: ",i,d),t._bus.postMessage(d,function(o){if(p.log("[syncher - create] - create-response: ",o),200===o.body.code){i.url=o.body.resource,i.status="live",i.syncher=t,i.childrens=o.body.childrenResources;var a=t._reporters[i.url];a||(a=new u.default(i),t._reporters[i.url]=a),a.inviteObservers(e.authorise,e.p2p),n(a)}else r(o.body.desc)})})}},{key:"_resumeCreate",value:function(e){var t=this,n=this;return new r.default(function(r,o){var i=e.resume,a={type:"create",from:n._owner,to:n._subURL,body:{resume:i}};p.log("[syncher - create]: ",e,a),e&&(a.body.value=e,e.hasOwnProperty("reporter")?a.body.value.reporter=e.reporter:a.body.value.reporter=n._owner),e.p2p&&(a.body.p2p=e.p2p),e.store&&(a.body.store=e.store),e.observers&&(a.body.authorise=e.observers),e.identity&&(a.body.identity=e.identity),p.log("[syncher._resumeCreate] - resume message: ",a),n._bus.postMessage(a,function(e){if(p.log("[syncher._resumeCreate] - create-resumed-response: ",e),200===e.body.code){var i=e.body.value;for(var a in i){var s=i[a];s.data=(0,c.deepClone)(s.data)||{},s.childrenObjects&&(s.childrenObjects=(0,c.deepClone)(s.childrenObjects)),s.mutual=!1,s.resume=!0,s.status="live",s.syncher=n,p.log("[syncher._resumeCreate] - create-resumed-dataObjectReporter",s);var d=new u.default(s);s.childrenObjects&&d.resumeChildrens(s.childrenObjects),n._reporters[s.url]=d}r(n._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?r({}):o(e.body.desc)})})}},{key:"_subscribe",value:function(e){var t=this;return new r.default(function(n,r){var o={type:"subscribe",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(o.body.p2p=e.p2p),e.hasOwnProperty("store")&&(o.body.store=e.store),e.hasOwnProperty("schema")&&(o.body.schema=e.schema),e.hasOwnProperty("identity")&&(o.body.identity=e.identity),e.hasOwnProperty("resource")&&(o.body.resource=e.resource)),o.body.resume=e.resume,e.hasOwnProperty("mutual")&&(o.body.mutual=e.mutual),p.log("[syncher_subscribe] - subscribe message: ",e,o),t._bus.postMessage(o,function(o){p.log("[syncher] - subscribe-response: ",o);var i=o.body.resource,a=t._provisionals[i];if(delete t._provisionals[i],a&&a._releaseListeners(),o.body.code<200)p.log("[syncher] - new DataProvisional: ",o.body.childrenResources,i),a=new l.default(t._owner,i,t._bus,o.body.childrenResources),t._provisionals[i]=a;else if(200===o.body.code){p.log("[syncher] - new Data Object Observer: ",o,t._provisionals);var s=o.body.value;s.syncher=t,s.p2p=e.p2p,s.store=e.store,s.identity=e.identity,s.resume=!1,s.mutual=e.mutual;var c=t._observers[i];c?c.sync():(c=new d.default(s),t._observers[i]=c),p.log("[syncher] - new Data Object Observer already exist: ",c),n(c),a&&a.apply(c)}else r(o.body.desc)})})}},{key:"_resumeSubscribe",value:function(e){var t=this,n=this;return new r.default(function(r,o){var i={type:"subscribe",from:n._owner,to:n._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(i.body.p2p=e.p2p),e.hasOwnProperty("store")&&(i.body.store=e.store),e.hasOwnProperty("schema")&&(i.body.schema=e.schema),e.hasOwnProperty("identity")&&(i.body.identity=e.identity),e.hasOwnProperty("resource")&&(i.body.resource=e.url)),i.body.resume=e.resume;var a=e.mutual;e.hasOwnProperty("mutual")&&(i.body.mutual=a),p.log("[syncher] - subscribe message: ",e,i),n._bus.postMessage(i,function(e){p.log("[syncher] - subscribe-resumed-response: ",e);var i=e.body.resource,a=n._provisionals[i];if(delete n._provisionals[i],a&&a._releaseListeners(),e.body.code<200)p.log("[syncher] - resume new DataProvisional: ",e,i),a=new l.default(n._owner,i,n._bus,e.body.childrenResources),n._provisionals[i]=a;else if(200===e.body.code){var s=e.body.value;for(var u in s){var f=s[u];p.log("[syncher] - Resume Object Observer: ",e,f,n._provisionals),f.childrenObjects&&(f.childrenObjects=(0,c.deepClone)(f.childrenObjects)),f.data=(0,c.deepClone)(f.data)||{},f.resume=!0,f.syncher=n,p.log("[syncher._resumeSubscribe] - create new dataObject: ",f);var h=new d.default(f);f.childrenObjects&&h.resumeChildrens(f.childrenObjects),p.log("[syncher._resumeSubscribe] - new dataObject",h),n._observers[h.url]=h,n._provisionals[h.url]&&n._provisionals[h.url].apply(h)}r(n._observers),t._onObserversResume&&t._onObserversResume(n._observers)}else 404===e.body.code?r({}):o(e.body.desc)})})}},{key:"_onForward",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:"_onRemoteCreate",value:function(e){var t=this,n=e.from.slice(0,-13),r=(0,c.divideURL)(n).domain,o={type:e.type,from:e.body.source,url:n,domain:r,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(n){var r=200;n&&(r=n),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:r}})}};t._onNotificationHandler&&(p.info("[Syncher] NOTIFICATION-EVENT: ",o),t._onNotificationHandler(o))}},{key:"_onRemoteDelete",value:function(e){var t=this,n=e.body.resource,r=t._observers[n],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[n],r){var i={type:e.type,url:n,identity:e.body.identity,ack:function(n){var o=200;n&&(o=n),200===o&&r.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(p.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:"_onExecute",value:function(e){var t=this,n={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+"/registry/"||e.from===t._runtimeUrl+"/registry")&&e.body&&e.body.method&&"close"===e.body.method&&t._onClose){var r={type:"close",ack:function(e){e&&(n.body.code=e),t._bus.postMessage(n)}};p.info("[Syncher] Close-EVENT: ",r),t._onClose(r)}else t._bus.postMessage(n)}},{key:"onReportersResume",value:function(e){this._onReportersResume=e}},{key:"onObserversResume",value:function(e){this._onObserversResume=e}},{key:"owner",get:function(){return this._owner}},{key:"reporters",get:function(){return this._reporters}},{key:"observers",get:function(){return this._observers}}]),e}();t.default=h,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=v(n(42)),o=v(n(58)),i=v(n(18)),a=v(n(25)),s=v(n(3)),c=v(n(5)),u=v(n(33)),d=v(n(100)),l=v(n(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),p=v(n(122)),h=n(19);function v(e){return e&&e.__esModule?e:{default:e}}var y=f.getLogger("DataObjectReporter"),m=function(e){function t(e){(0,s.default)(this,t);var n=(0,u.default)(this,(t.__proto__||(0,a.default)(t)).call(this,e)),r=n;return r._subscriptions={},r._syncObj.observe(function(e){y.log("[Syncher.DataObjectReporter] "+r.url+" publish change: ",e),r._onChange(e)}),r._allocateListeners(),r.invitations=[],r._childrenSizeThreshold=5e4,n}return(0,l.default)(t,e),(0,c.default)(t,[{key:"_allocateListeners",value:function(){(0,d.default)(t.prototype.__proto__||(0,a.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(y.log("[Syncher.DataObjectReporter] listener "+e._url+" Received: ",t),t.type){case"response":e._onResponse(t);break;case"read":e._onRead(t);break;case"execute":e._onExecute(t);break;case"create":e._onChildCreate(t)}})}},{key:"_releaseListeners",value:function(){(0,d.default)(t.prototype.__proto__||(0,a.default)(t.prototype),"_releaseListeners",this).call(this),this._objectListener.remove()}},{key:"inviteObservers",value:function(e,t){var n=this,r=e;r.length>0&&(y.log("[Syncher.DataObjectReporter] InviteObservers ",r,n._metadata),r.forEach(function(e){var r=new i.default(function(r,o){var i={type:"create",from:n._syncher._owner,to:n._syncher._subURL,body:{resume:!1,resource:n._url,schema:n._schema,value:n._metadata,authorise:[e]}};t&&(i.body.p2p=t),n.data.mutual||(i.body.mutual=n.data.mutual),n._bus.postMessage(i,function(t){y.log("[Syncher.DataObjectReporter] Invitation reply ",t);var n={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:"Unknown"};n.code<300?r(n):n.code>=300&&o(n)})});n.invitations.push(r)}))}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(t){y.log(t);var n={type:"delete",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(n,function(t){y.log("DataObjectReporter-DELETE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:"onSubscription",value:function(e){this._onSubscriptionHandler=e}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"onRead",value:function(e){this._onReadHandler=e}},{key:"onExecute",value:function(e){this._onExecuteHandler=e}},{key:"_onForward",value:function(e){switch(y.log("DataObjectReporter-RCV: ",e),e.body.type){case"subscribe":this._onSubscribe(e);break;case"unsubscribe":this._onUnSubscribe(e)}}},{key:"_onSubscribe",value:function(e){var t=this,n=e.body.from,r=(0,h.divideURL)(n),o=r.domain,i=!0;e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i=!1),y.log("[DataObjectReporter._onSubscribe]",e,o,r);var a={type:e.body.type,url:n,domain:o,identity:e.body.identity,nutual:i,accept:function(){var r={url:n,status:"live"};t._subscriptions[n]=r,t.metadata.subscriptions&&t.metadata.subscriptions.push(r.url);var o=(0,h.deepClone)(t._metadata);o.data=(0,h.deepClone)(t.data),o.version=t._version;var i={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:o}};return e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i.body.mutual=e.body.mutual,t.data.mutual=!1),t._bus.postMessage(i),r},reject:function(n){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:403,desc:n}})}};t._onSubscriptionHandler&&(y.log("SUBSCRIPTION-EVENT: ",a),t._onSubscriptionHandler(a))}},{key:"_onUnSubscribe",value:function(e){var t=e.body.from,n=(0,h.divideURL)(t),r=n.domain;y.log("[DataObjectReporter._onUnSubscribe]",e,r,n),delete this._subscriptions[t],delete this.invitations[t];var o={type:e.body.type,url:t,domain:r,identity:e.body.identity};this._onSubscriptionHandler&&(y.log("UN-SUBSCRIPTION-EVENT: ",o),this._onSubscriptionHandler(o))}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.from,code:e.body.code};this._onResponseHandler&&(y.log("RESPONSE-EVENT: ",t),this._onResponseHandler(t))}},{key:"_onRead",value:function(e){var t=this,n=(0,o.default)(t.childrensJSON).length>t._childrenSizeThreshold,i={type:e.type,url:e.from,accept:function(){n?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(n){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:n}})}},a=[];t.metadata.subscriptions?a=t.metadata.subscriptions:t._subscriptions&&(a=(0,r.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=a.indexOf(e.from)?n?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(y.log("READ-EVENT: ",i),t._onReadHandler(i))}},{key:"_syncReply",value:function(e){var t=(0,h.deepClone)(this.metadata);t.data=(0,h.deepClone)(this.data),t.childrenObjects=(0,h.deepClone)(this.childrensJSON),t.version=this._version;var n={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:t}};this._bus.postMessage(n)}},{key:"_syncReplyForLargeData",value:function(e){var t=this,n=(0,h.deepClone)(t.metadata);n.data=(0,h.deepClone)(t.data),n.version=t._version,delete n.childrenObjects;var r=void 0,i=[],a={};for(r in t._childrenObjects){var s=void 0;for(s in a[r]={},t._childrenObjects[r])(0,o.default)(a).length>t._childrenSizeThreshold&&(i.push(a),(a={})[r]={}),a[r][s]={},a[r][s].value=t._childrenObjects[r][s].metadata,a[r][s].identity=t._childrenObjects[r][s].identity}i.push(a),n.responses=i.length+1;var c={id:e.id,type:"response",from:e.to,to:e.from,body:{code:100,value:n}};t._bus.postMessage(c),i.forEach(function(e){var r=(0,h.deepClone)(c);r.body.value=e,r.body.value.responses=n.responses,setTimeout(function(){t._bus.postMessage(r)},50)})}},{key:"_onExecute",value:function(e){var t=this;if(!e.body.method)throw e;var n={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}},r={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(n)},reject:function(n){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:n}})}};t._onExecuteHandler&&(y.log("[DataObjectReporter] EXECUTE-EVENT: ",r),t._onExecuteHandler(r))}},{key:"subscriptions",get:function(){return this._subscriptions}},{key:"childrensJSON",get:function(){var e={},t=void 0;for(t in this._childrenObjects){var n=void 0;for(n in e[t]={},this._childrenObjects[t])e[t][n]={},e[t][n].value=this._childrenObjects[t][n].metadata,e[t][n].identity=this._childrenObjects[t][n].identity}return e}}]),t}(p.default);t.default=m,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=v(n(42)),o=v(n(78)),i=v(n(18)),a=v(n(25)),s=v(n(3)),c=v(n(5)),u=v(n(33)),d=v(n(100)),l=v(n(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),p=n(19),h=v(n(122));function v(e){return e&&e.__esModule?e:{default:e}}var y=f.getLogger("DataObjectObserver"),m="start",_="exact",b=function(e){function t(e){(0,s.default)(this,t);var n=(0,u.default)(this,(t.__proto__||(0,a.default)(t)).call(this,e)),r=n;return r._version=e.version,r._filters={},r._syncObj.observe(function(e){r._onFilter(e)}),r._allocateListeners(),n}return(0,l.default)(t,e),(0,c.default)(t,[{key:"sync",value:function(){var e=this;return y.info("[DataObjectObserver_sync] synchronising "),new i.default(function(t,n){e._syncher.read(e._metadata.url).then(function(n){y.info("[DataObjectObserver_sync] value to sync: ",n),(0,o.default)(e.data,(0,p.deepClone)(n.data)),e._version=n.version,e._metadata.lastModified=n.lastModified,n.childrenObjects?(e.resumeChildrens(n.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){y.info("[DataObjectObserver_sync] sync failed: ",e),t(!1)})})}},{key:"_storeChildrens",value:function(){var e=this,t={};(0,r.default)(e._childrenObjects).forEach(function(n){var o=e._childrenObjects[n];t[n]={},(0,r.default)(o).forEach(function(e){t[n][e]={},t[n][e].value=o[e].metadata,t[n][e].identity=o[e].identity})});var n={from:e._owner,to:e._syncher._subURL,type:"create",body:{resource:e._url,attribute:"childrenObjects",value:t}};e._bus.postMessage(n)}},{key:"_allocateListeners",value:function(){(0,d.default)(t.prototype.__proto__||(0,a.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+"/changes",function(t){"update"===t.type&&(y.log("DataObjectObserver-"+e._url+"-RCV: ",t),e._changeObject(e._syncObj,t))})}},{key:"_releaseListeners",value:function(){(0,d.default)(t.prototype.__proto__||(0,a.default)(t.prototype),"_releaseListeners",this).call(this),this._changeListener.remove()}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:"unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){y.log("DataObjectObserver-UNSUBSCRIBE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:"onChange",value:function(e,t){var n=e,r={type:_,callback:t},o=e.indexOf("*");o===e.length-1&&(0===o?r.type="any":(r.type=m,n=e.substr(0,e.length-1))),this._filters[n]=r}},{key:"_onFilter",value:function(e){var t=this;(0,r.default)(t._filters).forEach(function(n){var r=t._filters[n];"any"===r.type?r.callback(e):r.type===m?0===e.field.indexOf(n)&&r.callback(e):r.type===_&&e.field===n&&r.callback(e)})}},{key:"onDisconnected",value:function(e){var t=this;return new i.default(function(n,r){t._subscribeRegistration().then(function(){t._onDisconnected=e,n()}).catch(function(e){return r(e)})})}},{key:"_subscribeRegistration",value:function(){var e=this,t={type:"subscribe",from:this._owner,to:this._syncher._runtimeUrl+"/subscriptions",body:{resources:[this._url+"/registration"]}};return new i.default(function(n,r){e._bus.postMessage(t,function(t){y.log("[DataObjectObserver._subscribeRegistration] "+e._url+" rcved reply ",t),200===t.body.code?(e._generateListener(e._url+"/registration"),n()):(y.error("Error subscribing registration status for ",e._url),r("Error subscribing registration status for "+e._url))})})}},{key:"_generateListener",value:function(e){var t=this;t._bus.addListener(e,function(e){y.log("[DataObjectObserver.registrationNotification] "+t._url+": ",e),e.body.value&&"disconnected"===e.body.value&&t._onDisconnected&&(y.log("[DataObjectObserver] "+t._url+": was disconnected ",e),t._onDisconnected())})}},{key:"execute",value:function(e,t){var n=this,r=this;return new i.default(function(o,i){var a={type:"execute",from:n._owner,to:r._url,body:{method:e,params:t}};r._bus.postMessage(a,function(t){y.log("[DataObjectObserver.execute] "+r._url+" rcved reply ",t),200===t.body.code?o():(y.warn("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"),i("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"))})})}}]),t}(h.default);t.default=b,e.exports=t.default},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(n(3)),o=i(n(5));function i(e){return e&&e.__esModule?e:{default:e}}var a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)).getLogger("DataProvisional"),s=function(){function e(t,n,o,i){(0,r.default)(this,e),this._owner=t,this._url=n,this._bus=o,this._children=i,this._changes=[],this._allocateListeners()}return(0,o.default)(e,[{key:"_allocateListeners",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){a.log("DataProvisional-"+e._url+"-RCV: ",t),e._changes.push(t)})}},{key:"_releaseListeners",value:function(){this._listener.remove()}},{key:"apply",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:"children",get:function(){return this._children}}]),e}();t.default=s,e.exports=t.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NotificationHandler=t.DataObjectObserver=t.DataObjectReporter=t.Syncher=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),o=c(n(131)),i=c(n(132)),a=c(n(133)),s=c(n(197));function c(e){return e&&e.__esModule?e:{default:e}}var u=r.getLogger("Syncher"),d=r.getLogger("DataObject"),l=r.getLogger("DataObjectChild"),f=r.getLogger("DataObjectObserver"),p=r.getLogger("DataObjectReporter"),h=r.getLogger("DataProvisional");u.setLevel(0),d.setLevel(0),l.setLevel(0),f.setLevel(0),p.setLevel(0),h.setLevel(0),t.Syncher=o.default,t.DataObjectReporter=i.default,t.DataObjectObserver=a.default,t.NotificationHandler=s.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(3)),o=a(n(5)),i=n(19);function a(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(t){if((0,r.default)(this,e),!t)throw Error("[NotificationHandler Constructor] bus input is mandatory");this._bus=t,this._onNotificationHandler={}}return(0,o.default)(e,[{key:"onNotification",value:function(e,t){this._onNotificationHandler[e]=t}},{key:"onCreate",value:function(e){var t=this,n=e.body.hasOwnProperty("resource")?e.body.resource:e.from.slice(0,-13),r=(0,i.divideURL)(n).domain,o=n.split("://")[0],a=function(n){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:400,desc:"Bad Request: "+n}})};e.body.hasOwnProperty("source")||a("Missing source"),e.body.hasOwnProperty("schema")||a("Missing schema"),e.body.hasOwnProperty("value")||a("Missing value"),e.body.hasOwnProperty("identity")||a("Missing identity");var s={type:e.type,from:e.body.source,url:n,domain:r,schema:e.body.schema,value:e.body.value,identity:e.body.identity,to:e.to,via:e.body.via,ack:function(n){var r=200;n&&(r=n),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:r}})},error:function(e){a(e)}};t._onNotificationHandler[o]&&(console.info("[NotificationHandler] NOTIFICATION-EVENT: ",s),t._onNotificationHandler[o](s))}},{key:"onDelete",value:function(e){var t=this,n=e.body.resource,r=t._observers[n],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[n],r){var i={type:e.type,url:n,identity:e.body.identity,ack:function(n){var o=200;n&&(o=n),200===o&&r.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(log.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}}]),e}();t.default=s,e.exports=t.default}])})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();n(4);var i=s(n(14)),a=s(n(15));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(t,n,r,o){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The own url (myUrl) is a needed parameter");if(!n)throw new Error("The syncher is a needed parameter");if(!r)throw new Error("The configuration is a needed parameter");this._domain=this._divideURL(t).domain,this._objectDescURL="hyperty-catalogue://catalogue."+this._domain+"/.well-known/dataschema/Connection",this._myUrl=t,this._syncher=n,this._configuration=r,this._caller=o,this._dataObjectObserver,this._dataObjectReporter,this._peerUrl,this._dataChannel,this._onStatusUpdate,this._remoteRuntimeURL,this._receivers={},this._senders={},this._maxSize=16384,this._threshold=0,this._peerConnection=this._createPeerConnection()}return o(e,[{key:"_createPeerConnection",value:function(){var e=this,t=this._peerConnection;return t||(t=new RTCPeerConnection(this._configuration),console.log("[P2P-ConnectionController]: created PeerConnection"),t.ondatachannel=function(t){console.log("[P2P-ConnectionController]: ondatachannel -> remote side has created a datachannel"),e._dataChannel=t.channel,e._addDataChannelListeners()},t.onicecandidate=function(t){if(console.log("[P2P-ConnectionController]: icecandidateevent occured: ",t),t.candidate){var n={type:"candidate",candidate:t.candidate.candidate,sdpMid:t.candidate.sdpMid,sdpMLineIndex:t.candidate.sdpMLineIndex};e._dataObjectReporter.data.iceCandidates.push(n)}}),t}},{key:"observe",value:function(e){var t=this;return this._peerUrl=e.from,this._remoteRuntimeURL=e.value.runtime,new Promise(function(n,r){t._syncher.subscribe(t._objectDescURL,e.url).then(function(e){console.info("+[P2P-ConnectionController] got Data Object Observer",e),t._setupObserver(e),n()}).catch(function(e){console.error(e),r()})})}},{key:"report",value:function(e,t){var n=this;return this._peerUrl||(this._peerUrl=e),new Promise(function(e,r){n._peerConnection||(n._peerConnection=n._createPeerConnection()),n._caller&&(console.log("[P2P-ConnectionController]: we are in caller role --\x3e createDataChannel ..."),n._dataChannel=n._peerConnection.createDataChannel("P2PChannel"),n._dataChannel.binaryType="arraybuffer",n._dataChannel.bufferedAmountLowThreshold=n._threshold,console.log("P2P: datachannel object",n._dataChannel),n._addDataChannelListeners());var o={name:"P2PConnection",status:"",owner:n._myUrl,runtimeURL:t,connectionDescription:{},iceCandidates:[]},i=Object.assign({resources:["data"]});n._syncher.create(n._objectDescURL,[n._peerUrl],o,!1,!1,"p2p connection",{},i).then(function(t){console.info("[P2P-ConnectionController] Created WebRTC Object Reporter",t),n._dataObjectReporter=t,n._dataObjectReporter.onSubscription(function(e){e.accept()});(n._caller?n._peerConnection.createOffer({offerToReceiveAudio:!1,offerToReceiveVideo:!1}):n._peerConnection.createAnswer()).then(function(t){console.log("[P2P-ConnectionController] SDP created",t),n._peerConnection.setLocalDescription(new RTCSessionDescription(t),function(){console.info("[P2P-ConnectionController] localDescription set successfully"),n._dataObjectReporter.data.connectionDescription.sdp=t.sdp,n._dataObjectReporter.data.connectionDescription.type=t.type,e()}).catch(function(e){r("setting of localDescription failed: ",e)})}).catch(function(e){console.error(e),r(e)})})})}},{key:"onMessage",value:function(e){this._onDataChannelMessage=e}},{key:"onStatusUpdate",value:function(e){this._onStatusUpdate=e}},{key:"sendMessage",value:function(e){var t=this;if(console.log("[P2P-ConnectionController] --\x3e starting sending data to ",e.to),"open"!=t._dataChannel.readyState)throw Error("[P2PStub.ConnectionController.sendMessage] data channel is not opened. droping message: ",e);var n=new a.default(e,t._dataChannel),r=e.from+e.to+e.id;t._senders[r]=n,n.sendData(),n.onProgress(function(e){console.debug("[P2P-ConnectionController] sending progress ",e)}),n.onSent(function(){console.debug("[P2P-ConnectionController] data was sent to:",e.to),delete t._senders[r]})}},{key:"cleanup",value:function(){delete this._dataObjectReporter,delete this._dataObjectObserver,this._dataChannel&&this._dataChannel.close(),this._peerConnection&&this._peerConnection.close(),this._dataChannel=null,this._peerConnection=null}},{key:"_addDataChannelListeners",value:function(){var e=this;this._dataChannel.onopen=function(){e._onDataChannelOpen()},this._dataChannel.onerror=function(t){e._onDataChannelError(t)},this._dataChannel.onmessage=function(t){var n=e,o=t.data;"object"!=(void 0===o?"undefined":r(o))?n._onTextMessage(o):n._onBinaryMessage(o)},this._dataChannel.onclose=function(){e._onDataChannelClose()}}},{key:"_onTextMessage",value:function(e){var t=this,n=JSON.parse(e);if(!n.uuid)throw Error("[P2P-ConnectionController.onmessage] message is invalid",n);if(n.data.textMessage.hasOwnProperty("to")&&n.data.textMessage.to===t._myUrl)t._onMyMessage(n.data.textMessage);else if(t._receivers[n.uuid])t._receivers[n.uuid].receiveText(n);else{if(!n.data||!n.data.textMessage||!n.data.textMessage.from)throw Error("[P2P-ConnectionController.onmessage] initial packet is invalid",n);if(console.debug("[P2P-ConnectionController] <-- incoming msg : ",n),0===n.data.dataSize){var r=n.data.textMessage;this._onDataChannelMessage(r)}else{var o=new i.default(n.data);o.onReceived(function(e,r){console.debug("[P2P-ConnectionController] complete message received from: "+e.from+" latency: "+r),t._onDataChannelMessage(e),delete t._receivers[n.uuid]}),o.onProgress(function(e){var n={from:o.from,to:o.to,id:o.id,type:o.type,body:{code:183,desc:"Message reception is progressing",value:e}};console.debug("[P2P-ConnectionController] onprogress sending provisional response: ",n),t._syncher._bus.postMessage(n)}),t._receivers[n.uuid]=o}}}},{key:"_onMyMessage",value:function(e){if(e.hasOwnProperty("body")&&e.body.hasOwnProperty("resource")){var t=e.body.resource;this._senders[t]&&"delete"===e.type&&(console.log("[ConnectionController._onMyMessage] cancelling: ",this._senders[t]),this._senders[t].cancel,delete this._senders[t])}}},{key:"_onBinaryMessage",value:function(e){var t=String.fromCharCode.apply(null,new Uint16Array(e.slice(0,24)));if(this._receivers[t])this._receivers[t].receiveBinary(e.slice(24));else{var n=Object.keys(this._receivers);if(1!==n.length)throw Error("[P2P-ConnectionController.onBinaryMessage] invalid binary packet",e);var r=n[0],o={from:this._receivers[r].from,to:this._receivers[r].to,id:this._receivers[r].id,type:this._receivers[r].type,body:{code:500,desc:"Reception error"}};console.error("[P2P-ConnectionController.onBinaryMessage] malformed packet: ",e),this._syncher._bus.postMessage(o),this._cancelSent(o.from+o.to+o.id),delete this._receivers[r]}}},{key:"_cancelSent",value:function(e){var t={from:this._myUrl,to:this._peerUrl,type:"delete",body:{resource:e}};console.info("[P2P-ConnectionController._cancelSent] : ",t),this.sendMessage(t)}},{key:"_setupObserver",value:function(e){var t=this;this._dataObjectObserver=e;var n=this._dataObjectObserver.data;console.info("[P2P-ConnectionController]: _setupObserver Peer Data: ",n),n.hasOwnProperty("connectionDescription")&&this._processPeerInformation(n.connectionDescription),n.hasOwnProperty("iceCandidates")&&n.iceCandidates.forEach(function(e){console.log("[P2P-ConnectionController]: handleObserverObject for ice",e),t._processPeerInformation(e)}),e.onChange("*",function(e){console.debug("[P2P-ConnectionController]: Observer on change message: ",e),e.data[0]?(console.log(">>event.data[0]",e.data[0]),t._processPeerInformation(e.data[0])):(console.log("[P2P-ConnectionController]: >>event",e),t._processPeerInformation(e.data))})}},{key:"_processPeerInformation",value:function(e){console.info("[P2P-ConnectionController]: processPeerInformation: ",JSON.stringify(e)),this._peerConnection?("offer"!==e.type&&"answer"!==e.type||(console.info("[P2P-ConnectionController]: Process Connection Description: ",e),this._peerConnection.setRemoteDescription(new RTCSessionDescription(e)).then(function(){console.log("[P2P-ConnectionController]: remote success")}).catch(function(e){console.log("[P2P-ConnectionController]: remote error: ",e)})),e.candidate&&(console.info("Process Ice Candidate: ",e),this._peerConnection.addIceCandidate(new RTCIceCandidate({candidate:e.candidate})))):console.info("[P2P-ConnectionController]: processPeerInformation: no PeerConnection existing --\x3e maybe in disconnecting process. --\x3e ignoring this update")}},{key:"_onDataChannelOpen",value:function(){console.log("[P2P-ConnectionController] DataChannel opened"),this._onStatusUpdate&&this._onStatusUpdate("live",void 0,this._remoteRuntimeURL)}},{key:"_onDataChannelError",value:function(e){console.log("[P2P-ConnectionController] DataChannel error: ",e),this._onStatusUpdate&&this._onStatusUpdate("disconnected",""+e,this._remoteRuntimeURL)}},{key:"_onDataChannelClose",value:function(){console.log("[P2P-ConnectionController] DataChannel closed: "),this._onStatusUpdate&&this._onStatusUpdate("disconnected","closed",this._remoteRuntimeURL)}},{key:"_divideURL",value:function(e){var t=e.replace(/([a-zA-Z-]*):\/\/(?:\.)?([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$2,$3").split(",");return t[0]===e&&(t[0]="https",t[1]=e),{type:t[0],domain:t[1],identity:t[2]}}}]),e}();t.default=c},function(e,t,n){"use strict";!function(){var t=n(0),r=t.log,o=t.browserDetails;e.exports.browserDetails=o,e.exports.extractVersion=t.extractVersion,e.exports.disableLog=t.disableLog;var i=n(5)||null,a=n(7)||null,s=n(11)||null,c=n(13)||null;switch(o.browser){case"chrome":if(!i||!i.shimPeerConnection)return void r("Chrome shim is not included in this adapter release.");r("adapter.js shimming chrome."),e.exports.browserShim=i,i.shimGetUserMedia(),i.shimMediaStream(),t.shimCreateObjectURL(),i.shimSourceObject(),i.shimPeerConnection(),i.shimOnTrack(),i.shimGetSendersWithDtmf();break;case"firefox":if(!s||!s.shimPeerConnection)return void r("Firefox shim is not included in this adapter release.");r("adapter.js shimming firefox."),e.exports.browserShim=s,s.shimGetUserMedia(),t.shimCreateObjectURL(),s.shimSourceObject(),s.shimPeerConnection(),s.shimOnTrack();break;case"edge":if(!a||!a.shimPeerConnection)return void r("MS edge shim is not included in this adapter release.");r("adapter.js shimming edge."),e.exports.browserShim=a,a.shimGetUserMedia(),t.shimCreateObjectURL(),a.shimPeerConnection(),a.shimReplaceTrack();break;case"safari":if(!c)return void r("Safari shim is not included in this adapter release.");r("adapter.js shimming safari."),e.exports.browserShim=c,c.shimCallbacksAPI(),c.shimAddStream(),c.shimOnAddStream(),c.shimGetUserMedia();break;default:r("Unsupported browser!")}}()},function(e,t,n){"use strict";var r=n(0).log,o=n(0).browserDetails,i={shimMediaStream:function(){window.MediaStream=window.MediaStream||window.webkitMediaStream},shimOnTrack:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this._ontrack},set:function(e){var t=this;this._ontrack&&(this.removeEventListener("track",this._ontrack),this.removeEventListener("addstream",this._ontrackpoly)),this.addEventListener("track",this._ontrack=e),this.addEventListener("addstream",this._ontrackpoly=function(e){e.stream.addEventListener("addtrack",function(n){var r;r=RTCPeerConnection.prototype.getReceivers?t.getReceivers().find(function(e){return e.track.id===n.track.id}):{track:n.track};var o=new Event("track");o.track=n.track,o.receiver=r,o.streams=[e.stream],t.dispatchEvent(o)}),e.stream.getTracks().forEach(function(n){var r;r=RTCPeerConnection.prototype.getReceivers?t.getReceivers().find(function(e){return e.track.id===n.id}):{track:n};var o=new Event("track");o.track=n,o.receiver=r,o.streams=[e.stream],this.dispatchEvent(o)}.bind(this))}.bind(this))}})},shimGetSendersWithDtmf:function(){if("object"==typeof window&&window.RTCPeerConnection&&!("getSenders"in RTCPeerConnection.prototype)&&"createDTMFSender"in RTCPeerConnection.prototype){RTCPeerConnection.prototype.getSenders=function(){return this._senders||[]};var e=RTCPeerConnection.prototype.addStream,t=RTCPeerConnection.prototype.removeStream;RTCPeerConnection.prototype.addTrack||(RTCPeerConnection.prototype.addTrack=function(e,t){var n=this;if("closed"===n.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");var r=[].slice.call(arguments,1);if(1!==r.length||!r[0].getTracks().find(function(t){return t===e}))throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.","NotSupportedError");if(n._senders=n._senders||[],n._senders.find(function(t){return t.track===e}))throw new DOMException("Track already exists.","InvalidAccessError");n._streams=n._streams||{};var o=n._streams[t.id];if(o)o.addTrack(e),n.removeStream(o),n.addStream(o);else{var i=new MediaStream([e]);n._streams[t.id]=i,n.addStream(i)}var a={track:e,get dtmf(){return void 0===this._dtmf&&("audio"===e.kind?this._dtmf=n.createDTMFSender(e):this._dtmf=null),this._dtmf}};return n._senders.push(a),a}),RTCPeerConnection.prototype.addStream=function(t){var n=this;n._senders=n._senders||[],e.apply(n,[t]),t.getTracks().forEach(function(e){n._senders.push({track:e,get dtmf(){return void 0===this._dtmf&&("audio"===e.kind?this._dtmf=n.createDTMFSender(e):this._dtmf=null),this._dtmf}})})},RTCPeerConnection.prototype.removeStream=function(e){var n=this;n._senders=n._senders||[],t.apply(n,[e]),e.getTracks().forEach(function(e){var t=n._senders.find(function(t){return t.track===e});t&&n._senders.splice(n._senders.indexOf(t),1)})}}},shimSourceObject:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this._srcObject},set:function(e){var t=this;this._srcObject=e,this.src&&URL.revokeObjectURL(this.src),e?(this.src=URL.createObjectURL(e),e.addEventListener("addtrack",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)}),e.addEventListener("removetrack",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)})):this.src=""}}))},shimPeerConnection:function(){if(window.RTCPeerConnection){var e=RTCPeerConnection;window.RTCPeerConnection=function(t,n){if(t&&t.iceServers){for(var r=[],o=0;o<t.iceServers.length;o++){var i=t.iceServers[o];!i.hasOwnProperty("urls")&&i.hasOwnProperty("url")?(console.warn("RTCIceServer.url is deprecated! Use urls instead."),(i=JSON.parse(JSON.stringify(i))).urls=i.url,r.push(i)):r.push(t.iceServers[o])}t.iceServers=r}return new e(t,n)},window.RTCPeerConnection.prototype=e.prototype,Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return e.generateCertificate}})}else window.RTCPeerConnection=function(e,t){return r("PeerConnection"),e&&e.iceTransportPolicy&&(e.iceTransports=e.iceTransportPolicy),new webkitRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=webkitRTCPeerConnection.prototype,webkitRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return webkitRTCPeerConnection.generateCertificate}});var t=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(e,n,r){var o=this,i=arguments;if(arguments.length>0&&"function"==typeof e)return t.apply(this,arguments);if(0===t.length&&(0===arguments.length||"function"!=typeof arguments[0]))return t.apply(this,[]);var a=function(e){var t={};return e.result().forEach(function(e){var n={id:e.id,timestamp:e.timestamp,type:{localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[e.type]||e.type};e.names().forEach(function(t){n[t]=e.stat(t)}),t[n.id]=n}),t},s=function(e){return new Map(Object.keys(e).map(function(t){return[t,e[t]]}))};if(arguments.length>=2){return t.apply(this,[function(e){i[1](s(a(e)))},arguments[0]])}return new Promise(function(e,n){t.apply(o,[function(t){e(s(a(t)))},n])}).then(n,r)},o.version<51&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){var e=arguments,n=this,r=new Promise(function(r,o){t.apply(n,[e[0],r,o])});return e.length<2?r:r.then(function(){e[1].apply(null,[])},function(t){e.length>=3&&e[2].apply(null,[t])})}}),o.version<52&&["createOffer","createAnswer"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){var e=this;if(arguments.length<1||1===arguments.length&&"object"==typeof arguments[0]){var n=1===arguments.length?arguments[0]:void 0;return new Promise(function(r,o){t.apply(e,[r,o,n])})}return t.apply(this,arguments)}}),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){return arguments[0]=new("addIceCandidate"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}});var n=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?n.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}};e.exports={shimMediaStream:i.shimMediaStream,shimOnTrack:i.shimOnTrack,shimGetSendersWithDtmf:i.shimGetSendersWithDtmf,shimSourceObject:i.shimSourceObject,shimPeerConnection:i.shimPeerConnection,shimGetUserMedia:n(6)}},function(e,t,n){"use strict";var r=n(0).log,o=n(0).browserDetails;e.exports=function(){var e=function(e){if("object"!=typeof e||e.mandatory||e.optional)return e;var t={};return Object.keys(e).forEach(function(n){if("require"!==n&&"advanced"!==n&&"mediaSource"!==n){var r="object"==typeof e[n]?e[n]:{ideal:e[n]};void 0!==r.exact&&"number"==typeof r.exact&&(r.min=r.max=r.exact);var o=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):"deviceId"===t?"sourceId":t};if(void 0!==r.ideal){t.optional=t.optional||[];var i={};"number"==typeof r.ideal?(i[o("min",n)]=r.ideal,t.optional.push(i),(i={})[o("max",n)]=r.ideal,t.optional.push(i)):(i[o("",n)]=r.ideal,t.optional.push(i))}void 0!==r.exact&&"number"!=typeof r.exact?(t.mandatory=t.mandatory||{},t.mandatory[o("",n)]=r.exact):["min","max"].forEach(function(e){void 0!==r[e]&&(t.mandatory=t.mandatory||{},t.mandatory[o(e,n)]=r[e])})}}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},t=function(t,n){if((t=JSON.parse(JSON.stringify(t)))&&t.audio&&(t.audio=e(t.audio)),t&&"object"==typeof t.video){var i=t.video.facingMode;i=i&&("object"==typeof i?i:{ideal:i});var a,s=o.version<61;if(i&&("user"===i.exact||"environment"===i.exact||"user"===i.ideal||"environment"===i.ideal)&&(!navigator.mediaDevices.getSupportedConstraints||!navigator.mediaDevices.getSupportedConstraints().facingMode||s))if(delete t.video.facingMode,"environment"===i.exact||"environment"===i.ideal?a=["back","rear"]:"user"!==i.exact&&"user"!==i.ideal||(a=["front"]),a)return navigator.mediaDevices.enumerateDevices().then(function(o){var s=(o=o.filter(function(e){return"videoinput"===e.kind})).find(function(e){return a.some(function(t){return-1!==e.label.toLowerCase().indexOf(t)})});return!s&&o.length&&-1!==a.indexOf("back")&&(s=o[o.length-1]),s&&(t.video.deviceId=i.exact?{exact:s.deviceId}:{ideal:s.deviceId}),t.video=e(t.video),r("chrome: "+JSON.stringify(t)),n(t)});t.video=e(t.video)}return r("chrome: "+JSON.stringify(t)),n(t)},n=function(e){return{name:{ConstraintNotSatisfiedError:"OverconstrainedError",PermissionDeniedError:"NotAllowedError",TrackStartError:"NotReadableError"}[e.name]||e.name,message:e.message,constraint:e.constraintName,toString:function(){return this.name+(this.message&&": ")+this.message}}};navigator.getUserMedia=function(e,r,o){t(e,function(e){navigator.webkitGetUserMedia(e,r,function(e){o(n(e))})})};var i=function(e){return new Promise(function(t,n){navigator.getUserMedia(e,t,n)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:i,enumerateDevices:function(){return new Promise(function(e){var t={audio:"audioinput",video:"videoinput"};return MediaStreamTrack.getSources(function(n){e(n.map(function(e){return{label:e.label,kind:t[e.kind],deviceId:e.id,groupId:""}}))})})},getSupportedConstraints:function(){return{deviceId:!0,echoCancellation:!0,facingMode:!0,frameRate:!0,height:!0,width:!0}}}),navigator.mediaDevices.getUserMedia){var a=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(e){return t(e,function(e){return a(e).then(function(t){if(e.audio&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException("","NotFoundError");return t},function(e){return Promise.reject(n(e))})})}}else navigator.mediaDevices.getUserMedia=function(e){return i(e)};void 0===navigator.mediaDevices.addEventListener&&(navigator.mediaDevices.addEventListener=function(){r("Dummy mediaDevices.addEventListener called.")}),void 0===navigator.mediaDevices.removeEventListener&&(navigator.mediaDevices.removeEventListener=function(){r("Dummy mediaDevices.removeEventListener called.")})}},function(e,t,n){"use strict";var r=n(0).browserDetails,o=n(8);e.exports={shimGetUserMedia:n(10),shimPeerConnection:function(){if(window.RTCIceGatherer&&(window.RTCIceCandidate||(window.RTCIceCandidate=function(e){return e}),window.RTCSessionDescription||(window.RTCSessionDescription=function(e){return e}),r.version<15025)){var e=Object.getOwnPropertyDescriptor(MediaStreamTrack.prototype,"enabled");Object.defineProperty(MediaStreamTrack.prototype,"enabled",{set:function(t){e.set.call(this,t);var n=new Event("enabled");n.enabled=t,this.dispatchEvent(n)}})}window.RTCPeerConnection=o(r.version)},shimReplaceTrack:function(){!window.RTCRtpSender||"replaceTrack"in RTCRtpSender.prototype||(RTCRtpSender.prototype.replaceTrack=RTCRtpSender.prototype.setTrack)}}},function(e,t,n){"use strict";var r=n(9);function o(e,t){var n={codecs:[],headerExtensions:[],fecMechanisms:[]},r=function(e,t){e=parseInt(e,10);for(var n=0;n<t.length;n++)if(t[n].payloadType===e||t[n].preferredPayloadType===e)return t[n]},o=function(e,t,n,o){var i=r(e.parameters.apt,n),a=r(t.parameters.apt,o);return i&&a&&i.name.toLowerCase()===a.name.toLowerCase()};return e.codecs.forEach(function(r){for(var i=0;i<t.codecs.length;i++){var a=t.codecs[i];if(r.name.toLowerCase()===a.name.toLowerCase()&&r.clockRate===a.clockRate){if("rtx"===r.name.toLowerCase()&&r.parameters&&a.parameters.apt&&!o(r,a,e.codecs,t.codecs))continue;(a=JSON.parse(JSON.stringify(a))).numChannels=Math.min(r.numChannels,a.numChannels),n.codecs.push(a),a.rtcpFeedback=a.rtcpFeedback.filter(function(e){for(var t=0;t<r.rtcpFeedback.length;t++)if(r.rtcpFeedback[t].type===e.type&&r.rtcpFeedback[t].parameter===e.parameter)return!0;return!1});break}}}),e.headerExtensions.forEach(function(e){for(var r=0;r<t.headerExtensions.length;r++){var o=t.headerExtensions[r];if(e.uri===o.uri){n.headerExtensions.push(o);break}}}),n}function i(e,t,n){return-1!=={offer:{setLocalDescription:["stable","have-local-offer"],setRemoteDescription:["stable","have-remote-offer"]},answer:{setLocalDescription:["have-remote-offer","have-local-pranswer"],setRemoteDescription:["have-local-offer","have-remote-pranswer"]}}[t][e].indexOf(n)}e.exports=function(e){var t=function(t){var n=this,r=document.createDocumentFragment();if(["addEventListener","removeEventListener","dispatchEvent"].forEach(function(e){n[e]=r[e].bind(r)}),this.needNegotiation=!1,this.onicecandidate=null,this.onaddstream=null,this.ontrack=null,this.onremovestream=null,this.onsignalingstatechange=null,this.oniceconnectionstatechange=null,this.onicegatheringstatechange=null,this.onnegotiationneeded=null,this.ondatachannel=null,this.canTrickleIceCandidates=null,this.localStreams=[],this.remoteStreams=[],this.getLocalStreams=function(){return n.localStreams},this.getRemoteStreams=function(){return n.remoteStreams},this.localDescription=new RTCSessionDescription({type:"",sdp:""}),this.remoteDescription=new RTCSessionDescription({type:"",sdp:""}),this.signalingState="stable",this.iceConnectionState="new",this.iceGatheringState="new",this.iceOptions={gatherPolicy:"all",iceServers:[]},t&&t.iceTransportPolicy)switch(t.iceTransportPolicy){case"all":case"relay":this.iceOptions.gatherPolicy=t.iceTransportPolicy}this.usingBundle=t&&"max-bundle"===t.bundlePolicy,t&&t.iceServers&&(this.iceOptions.iceServers=function(e,t){var n=!1;return(e=JSON.parse(JSON.stringify(e))).filter(function(e){if(e&&(e.urls||e.url)){var r=e.urls||e.url;e.url&&!e.urls&&console.warn("RTCIceServer.url is deprecated! Use urls instead.");var o="string"==typeof r;return o&&(r=[r]),r=r.filter(function(e){return 0!==e.indexOf("turn:")||-1===e.indexOf("transport=udp")||-1!==e.indexOf("turn:[")||n?0===e.indexOf("stun:")&&t>=14393:(n=!0,!0)}),delete e.url,e.urls=o?r[0]:r,!!r.length}return!1})}(t.iceServers,e)),this._config=t||{},this.transceivers=[],this._localIceCandidatesBuffer=[]};return t.prototype._emitGatheringStateChange=function(){var e=new Event("icegatheringstatechange");this.dispatchEvent(e),null!==this.onicegatheringstatechange&&this.onicegatheringstatechange(e)},t.prototype._emitBufferedCandidates=function(){var e=this,t=r.splitSections(e.localDescription.sdp);this._localIceCandidatesBuffer.forEach(function(n){if(!n.candidate||0===Object.keys(n.candidate).length)for(var r=1;r<t.length;r++)-1===t[r].indexOf("\r\na=end-of-candidates\r\n")&&(t[r]+="a=end-of-candidates\r\n");else t[n.candidate.sdpMLineIndex+1]+="a="+n.candidate.candidate+"\r\n";(e.localDescription.sdp=t.join(""),e.dispatchEvent(n),null!==e.onicecandidate&&e.onicecandidate(n),n.candidate||"complete"===e.iceGatheringState)||e.transceivers.every(function(e){return e.iceGatherer&&"completed"===e.iceGatherer.state})&&"complete"!==e.iceGatheringStateChange&&(e.iceGatheringState="complete",e._emitGatheringStateChange())}),this._localIceCandidatesBuffer=[]},t.prototype.getConfiguration=function(){return this._config},t.prototype._createTransceiver=function(e){var t=this.transceivers.length>0,n={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:e,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,wantReceive:!0};if(this.usingBundle&&t)n.iceTransport=this.transceivers[0].iceTransport,n.dtlsTransport=this.transceivers[0].dtlsTransport;else{var r=this._createIceAndDtlsTransports();n.iceTransport=r.iceTransport,n.dtlsTransport=r.dtlsTransport}return this.transceivers.push(n),n},t.prototype.addTrack=function(e,t){for(var n,r=0;r<this.transceivers.length;r++)this.transceivers[r].track||this.transceivers[r].kind!==e.kind||(n=this.transceivers[r]);return n||(n=this._createTransceiver(e.kind)),n.track=e,n.stream=t,n.rtpSender=new RTCRtpSender(e,n.dtlsTransport),this._maybeFireNegotiationNeeded(),n.rtpSender},t.prototype.addStream=function(t){var n=this;if(e>=15025)this.localStreams.push(t),t.getTracks().forEach(function(e){n.addTrack(e,t)});else{var r=t.clone();t.getTracks().forEach(function(e,t){var n=r.getTracks()[t];e.addEventListener("enabled",function(e){n.enabled=e.enabled})}),r.getTracks().forEach(function(e){n.addTrack(e,r)}),this.localStreams.push(r)}this._maybeFireNegotiationNeeded()},t.prototype.removeStream=function(e){var t=this.localStreams.indexOf(e);t>-1&&(this.localStreams.splice(t,1),this._maybeFireNegotiationNeeded())},t.prototype.getSenders=function(){return this.transceivers.filter(function(e){return!!e.rtpSender}).map(function(e){return e.rtpSender})},t.prototype.getReceivers=function(){return this.transceivers.filter(function(e){return!!e.rtpReceiver}).map(function(e){return e.rtpReceiver})},t.prototype._createIceGatherer=function(e,t){var n=this,o=new RTCIceGatherer(n.iceOptions);return o.onlocalcandidate=function(i){var a=new Event("icecandidate");a.candidate={sdpMid:e,sdpMLineIndex:t};var s=i.candidate,c=!s||0===Object.keys(s).length;c?void 0===o.state&&(o.state="completed"):(s.component=1,a.candidate.candidate=r.writeCandidate(s));var u=r.splitSections(n.localDescription.sdp);u[a.candidate.sdpMLineIndex+1]+=c?"a=end-of-candidates\r\n":"a="+a.candidate.candidate+"\r\n",n.localDescription.sdp=u.join("");var d=(n._pendingOffer?n._pendingOffer:n.transceivers).every(function(e){return e.iceGatherer&&"completed"===e.iceGatherer.state});switch(n.iceGatheringState){case"new":c||n._localIceCandidatesBuffer.push(a),c&&d&&n._localIceCandidatesBuffer.push(new Event("icecandidate"));break;case"gathering":n._emitBufferedCandidates(),c||(n.dispatchEvent(a),null!==n.onicecandidate&&n.onicecandidate(a)),d&&(n.dispatchEvent(new Event("icecandidate")),null!==n.onicecandidate&&n.onicecandidate(new Event("icecandidate")),n.iceGatheringState="complete",n._emitGatheringStateChange())}},o},t.prototype._createIceAndDtlsTransports=function(){var e=this,t=new RTCIceTransport(null);t.onicestatechange=function(){e._updateConnectionState()};var n=new RTCDtlsTransport(t);return n.ondtlsstatechange=function(){e._updateConnectionState()},n.onerror=function(){Object.defineProperty(n,"state",{value:"failed",writable:!0}),e._updateConnectionState()},{iceTransport:t,dtlsTransport:n}},t.prototype._disposeIceAndDtlsTransports=function(e){var t=this.transceivers[e].iceGatherer;t&&(delete t.onlocalcandidate,delete this.transceivers[e].iceGatherer);var n=this.transceivers[e].iceTransport;n&&(delete n.onicestatechange,delete this.transceivers[e].iceTransport);var r=this.transceivers[e].dtlsTransport;r&&(delete r.ondtlssttatechange,delete r.onerror,delete this.transceivers[e].dtlsTransport)},t.prototype._transceive=function(t,n,i){var a=o(t.localCapabilities,t.remoteCapabilities);n&&t.rtpSender&&(a.encodings=t.sendEncodingParameters,a.rtcp={cname:r.localCName,compound:t.rtcpParameters.compound},t.recvEncodingParameters.length&&(a.rtcp.ssrc=t.recvEncodingParameters[0].ssrc),t.rtpSender.send(a)),i&&t.rtpReceiver&&("video"===t.kind&&t.recvEncodingParameters&&e<15019&&t.recvEncodingParameters.forEach(function(e){delete e.rtx}),a.encodings=t.recvEncodingParameters,a.rtcp={cname:t.rtcpParameters.cname,compound:t.rtcpParameters.compound},t.sendEncodingParameters.length&&(a.rtcp.ssrc=t.sendEncodingParameters[0].ssrc),t.rtpReceiver.receive(a))},t.prototype.setLocalDescription=function(e){var t,n,a=this;if(!i("setLocalDescription",e.type,this.signalingState)){var s=new Error("Can not set local "+e.type+" in state "+this.signalingState);return s.name="InvalidStateError",arguments.length>2&&"function"==typeof arguments[2]&&window.setTimeout(arguments[2],0,s),Promise.reject(s)}if("offer"===e.type)this._pendingOffer&&(t=r.splitSections(e.sdp),n=t.shift(),t.forEach(function(e,t){var n=r.parseRtpParameters(e);a._pendingOffer[t].localCapabilities=n}),this.transceivers=this._pendingOffer,delete this._pendingOffer);else if("answer"===e.type){t=r.splitSections(a.remoteDescription.sdp),n=t.shift();var c=r.matchPrefix(n,"a=ice-lite").length>0;t.forEach(function(e,t){var i=a.transceivers[t],s=i.iceGatherer,u=i.iceTransport,d=i.dtlsTransport,l=i.localCapabilities,f=i.remoteCapabilities;if(!r.isRejected(e)&&!i.isDatachannel){var p=r.getIceParameters(e,n),h=r.getDtlsParameters(e,n);c&&(h.role="server"),a.usingBundle&&0!==t||(u.start(s,p,c?"controlling":"controlled"),d.start(h));var v=o(l,f);a._transceive(i,v.codecs.length>0,!1)}})}switch(this.localDescription={type:e.type,sdp:e.sdp},e.type){case"offer":this._updateSignalingState("have-local-offer");break;case"answer":this._updateSignalingState("stable");break;default:throw new TypeError('unsupported type "'+e.type+'"')}var u=arguments.length>1&&"function"==typeof arguments[1];if(u){var d=arguments[1];window.setTimeout(function(){d(),"new"===a.iceGatheringState&&(a.iceGatheringState="gathering",a._emitGatheringStateChange()),a._emitBufferedCandidates()},0)}var l=Promise.resolve();return l.then(function(){u||("new"===a.iceGatheringState&&(a.iceGatheringState="gathering",a._emitGatheringStateChange()),window.setTimeout(a._emitBufferedCandidates.bind(a),500))}),l},t.prototype.setRemoteDescription=function(t){var n=this;if(!i("setRemoteDescription",t.type,this.signalingState)){var o=new Error("Can not set remote "+t.type+" in state "+this.signalingState);return o.name="InvalidStateError",arguments.length>2&&"function"==typeof arguments[2]&&window.setTimeout(arguments[2],0,o),Promise.reject(o)}var a={},s=[],c=r.splitSections(t.sdp),u=c.shift(),d=r.matchPrefix(u,"a=ice-lite").length>0,l=r.matchPrefix(u,"a=group:BUNDLE ").length>0;this.usingBundle=l;var f=r.matchPrefix(u,"a=ice-options:")[0];switch(this.canTrickleIceCandidates=!!f&&f.substr(14).split(" ").indexOf("trickle")>=0,c.forEach(function(o,i){var c=r.splitLines(o),f=r.getKind(o),p=r.isRejected(o),h=c[0].substr(2).split(" ")[2],v=r.getDirection(o,u),y=r.parseMsid(o),m=r.getMid(o)||r.generateIdentifier();if("application"!==f||"DTLS/SCTP"!==h){var _,b,g,w,C,O,P,R,S,k,T,j=r.parseRtpParameters(o);p||(k=r.getIceParameters(o,u),(T=r.getDtlsParameters(o,u)).role="client"),P=r.parseRtpEncodingParameters(o);var x=r.parseRtcpParameters(o),E=r.matchPrefix(o,"a=end-of-candidates",u).length>0,L=r.matchPrefix(o,"a=candidate:").map(function(e){return r.parseCandidate(e)}).filter(function(e){return"1"===e.component||1===e.component});"offer"!==t.type||p?"answer"!==t.type||p||(l&&i>0&&(n._disposeIceAndDtlsTransports(i),n.transceivers[i].iceGatherer=n.transceivers[0].iceGatherer,n.transceivers[i].iceTransport=n.transceivers[0].iceTransport,n.transceivers[i].dtlsTransport=n.transceivers[0].dtlsTransport,n.transceivers[i].rtpSender&&n.transceivers[i].rtpSender.setTransport(n.transceivers[0].dtlsTransport),n.transceivers[i].rtpReceiver&&n.transceivers[i].rtpReceiver.setTransport(n.transceivers[0].dtlsTransport)),b=(_=n.transceivers[i]).iceGatherer,g=_.iceTransport,w=_.dtlsTransport,C=_.rtpReceiver,O=_.sendEncodingParameters,R=_.localCapabilities,n.transceivers[i].recvEncodingParameters=P,n.transceivers[i].remoteCapabilities=j,n.transceivers[i].rtcpParameters=x,(d||E)&&L.length&&g.setRemoteCandidates(L),l&&0!==i||(g.start(b,k,"controlling"),w.start(T)),n._transceive(_,"sendrecv"===v||"recvonly"===v,"sendrecv"===v||"sendonly"===v),!C||"sendrecv"!==v&&"sendonly"!==v?delete _.rtpReceiver:(S=C.track,y?(a[y.stream]||(a[y.stream]=new MediaStream),a[y.stream].addTrack(S),s.push([S,C,a[y.stream]])):(a.default||(a.default=new MediaStream),a.default.addTrack(S),s.push([S,C,a.default])))):((_=n.transceivers[i]||n._createTransceiver(f)).mid=m,_.iceGatherer||(_.iceGatherer=l&&i>0?n.transceivers[0].iceGatherer:n._createIceGatherer(m,i)),!E||l&&0!==i||_.iceTransport.setRemoteCandidates(L),R=RTCRtpReceiver.getCapabilities(f),e<15019&&(R.codecs=R.codecs.filter(function(e){return"rtx"!==e.name})),O=[{ssrc:1001*(2*i+2)}],"sendrecv"!==v&&"sendonly"!==v||(S=(C=new RTCRtpReceiver(_.dtlsTransport,f)).track,y?(a[y.stream]||(a[y.stream]=new MediaStream,Object.defineProperty(a[y.stream],"id",{get:function(){return y.stream}})),Object.defineProperty(S,"id",{get:function(){return y.track}}),a[y.stream].addTrack(S),s.push([S,C,a[y.stream]])):(a.default||(a.default=new MediaStream),a.default.addTrack(S),s.push([S,C,a.default]))),_.localCapabilities=R,_.remoteCapabilities=j,_.rtpReceiver=C,_.rtcpParameters=x,_.sendEncodingParameters=O,_.recvEncodingParameters=P,n._transceive(n.transceivers[i],!1,"sendrecv"===v||"sendonly"===v))}else n.transceivers[i]={mid:m,isDatachannel:!0}}),this.remoteDescription={type:t.type,sdp:t.sdp},t.type){case"offer":this._updateSignalingState("have-remote-offer");break;case"answer":this._updateSignalingState("stable");break;default:throw new TypeError('unsupported type "'+t.type+'"')}return Object.keys(a).forEach(function(e){var t=a[e];if(t.getTracks().length){n.remoteStreams.push(t);var r=new Event("addstream");r.stream=t,n.dispatchEvent(r),null!==n.onaddstream&&window.setTimeout(function(){n.onaddstream(r)},0),s.forEach(function(e){var r=e[0],o=e[1];if(t.id===e[2].id){var i=new Event("track");i.track=r,i.receiver=o,i.streams=[t],n.dispatchEvent(i),null!==n.ontrack&&window.setTimeout(function(){n.ontrack(i)},0)}})}}),window.setTimeout(function(){n&&n.transceivers&&n.transceivers.forEach(function(e){e.iceTransport&&"new"===e.iceTransport.state&&e.iceTransport.getRemoteCandidates().length>0&&(console.warn("Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification"),e.iceTransport.addRemoteCandidate({}))})},4e3),arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},t.prototype.close=function(){this.transceivers.forEach(function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()}),this._updateSignalingState("closed")},t.prototype._updateSignalingState=function(e){this.signalingState=e;var t=new Event("signalingstatechange");this.dispatchEvent(t),null!==this.onsignalingstatechange&&this.onsignalingstatechange(t)},t.prototype._maybeFireNegotiationNeeded=function(){var e=this;"stable"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,window.setTimeout(function(){if(!1!==e.needNegotiation){e.needNegotiation=!1;var t=new Event("negotiationneeded");e.dispatchEvent(t),null!==e.onnegotiationneeded&&e.onnegotiationneeded(t)}},0))},t.prototype._updateConnectionState=function(){var e,t={new:0,closed:0,connecting:0,checking:0,connected:0,completed:0,failed:0};if(this.transceivers.forEach(function(e){t[e.iceTransport.state]++,t[e.dtlsTransport.state]++}),t.connected+=t.completed,e="new",t.failed>0?e="failed":t.connecting>0||t.checking>0?e="connecting":t.disconnected>0?e="disconnected":t.new>0?e="new":(t.connected>0||t.completed>0)&&(e="connected"),e!==this.iceConnectionState){this.iceConnectionState=e;var n=new Event("iceconnectionstatechange");this.dispatchEvent(n),null!==this.oniceconnectionstatechange&&this.oniceconnectionstatechange(n)}},t.prototype.createOffer=function(){var t,n=this;if(this._pendingOffer)throw new Error("createOffer called while there is a pending offer.");1===arguments.length&&"function"!=typeof arguments[0]?t=arguments[0]:3===arguments.length&&(t=arguments[2]);var o=this.transceivers.filter(function(e){return"audio"===e.kind}).length,i=this.transceivers.filter(function(e){return"video"===e.kind}).length;if(t){if(t.mandatory||t.optional)throw new TypeError("Legacy mandatory/optional constraints not supported.");void 0!==t.offerToReceiveAudio&&(o=!0===t.offerToReceiveAudio?1:!1===t.offerToReceiveAudio?0:t.offerToReceiveAudio),void 0!==t.offerToReceiveVideo&&(i=!0===t.offerToReceiveVideo?1:!1===t.offerToReceiveVideo?0:t.offerToReceiveVideo)}for(this.transceivers.forEach(function(e){"audio"===e.kind?--o<0&&(e.wantReceive=!1):"video"===e.kind&&--i<0&&(e.wantReceive=!1)});o>0||i>0;)o>0&&(this._createTransceiver("audio"),o--),i>0&&(this._createTransceiver("video"),i--);var a=function(e){var t=e.filter(function(e){return"audio"===e.kind}),n=e.filter(function(e){return"video"===e.kind});for(e=[];t.length||n.length;)t.length&&e.push(t.shift()),n.length&&e.push(n.shift());return e}(this.transceivers),s=r.writeSessionBoilerplate();a.forEach(function(t,o){var i=t.track,s=t.kind,c=r.generateIdentifier();t.mid=c,t.iceGatherer||(t.iceGatherer=n.usingBundle&&o>0?a[0].iceGatherer:n._createIceGatherer(c,o));var u=RTCRtpSender.getCapabilities(s);e<15019&&(u.codecs=u.codecs.filter(function(e){return"rtx"!==e.name})),u.codecs.forEach(function(e){"H264"===e.name&&void 0===e.parameters["level-asymmetry-allowed"]&&(e.parameters["level-asymmetry-allowed"]="1")});var d=[{ssrc:1001*(2*o+1)}];i&&e>=15019&&"video"===s&&(d[0].rtx={ssrc:1001*(2*o+1)+1}),t.wantReceive&&(t.rtpReceiver=new RTCRtpReceiver(t.dtlsTransport,s)),t.localCapabilities=u,t.sendEncodingParameters=d}),"max-compat"!==this._config.bundlePolicy&&(s+="a=group:BUNDLE "+a.map(function(e){return e.mid}).join(" ")+"\r\n"),s+="a=ice-options:trickle\r\n",a.forEach(function(e,t){s+=r.writeMediaSection(e,e.localCapabilities,"offer",e.stream),s+="a=rtcp-rsize\r\n"}),this._pendingOffer=a;var c=new RTCSessionDescription({type:"offer",sdp:s});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,c),Promise.resolve(c)},t.prototype.createAnswer=function(){var t=r.writeSessionBoilerplate();this.usingBundle&&(t+="a=group:BUNDLE "+this.transceivers.map(function(e){return e.mid}).join(" ")+"\r\n"),this.transceivers.forEach(function(n,i){if(n.isDatachannel)t+="m=application 0 DTLS/SCTP 5000\r\nc=IN IP4 0.0.0.0\r\na=mid:"+n.mid+"\r\n";else{var a;if(n.stream)"audio"===n.kind?a=n.stream.getAudioTracks()[0]:"video"===n.kind&&(a=n.stream.getVideoTracks()[0]),a&&e>=15019&&"video"===n.kind&&(n.sendEncodingParameters[0].rtx={ssrc:1001*(2*i+2)+1});var s=o(n.localCapabilities,n.remoteCapabilities);!s.codecs.filter(function(e){return"rtx"===e.name.toLowerCase()}).length&&n.sendEncodingParameters[0].rtx&&delete n.sendEncodingParameters[0].rtx,t+=r.writeMediaSection(n,s,"answer",n.stream),n.rtcpParameters&&n.rtcpParameters.reducedSize&&(t+="a=rtcp-rsize\r\n")}});var n=new RTCSessionDescription({type:"answer",sdp:t});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,n),Promise.resolve(n)},t.prototype.addIceCandidate=function(e){if(e){var t=e.sdpMLineIndex;if(e.sdpMid)for(var n=0;n<this.transceivers.length;n++)if(this.transceivers[n].mid===e.sdpMid){t=n;break}var o=this.transceivers[t];if(o){var i=Object.keys(e.candidate).length>0?r.parseCandidate(e.candidate):{};if("tcp"===i.protocol&&(0===i.port||9===i.port))return Promise.resolve();if(i.component&&"1"!==i.component&&1!==i.component)return Promise.resolve();o.iceTransport.addRemoteCandidate(i);var a=r.splitSections(this.remoteDescription.sdp);a[t+1]+=(i.type?e.candidate.trim():"a=end-of-candidates")+"\r\n",this.remoteDescription.sdp=a.join("")}}else for(var s=0;s<this.transceivers.length;s++)if(this.transceivers[s].iceTransport.addRemoteCandidate({}),this.usingBundle)return Promise.resolve();return arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},t.prototype.getStats=function(){var e=[];this.transceivers.forEach(function(t){["rtpSender","rtpReceiver","iceGatherer","iceTransport","dtlsTransport"].forEach(function(n){t[n]&&e.push(t[n].getStats())})});var t=arguments.length>1&&"function"==typeof arguments[1]&&arguments[1];return new Promise(function(n){var r=new Map;Promise.all(e).then(function(e){e.forEach(function(e){Object.keys(e).forEach(function(t){e[t].type=function(e){return{inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[e.type]||e.type}(e[t]),r.set(t,e[t])})}),t&&window.setTimeout(t,0,r),n(r)})})},t}},function(e,t,n){"use strict";var r={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};r.localCName=r.generateIdentifier(),r.splitLines=function(e){return e.trim().split("\n").map(function(e){return e.trim()})},r.splitSections=function(e){return e.split("\nm=").map(function(e,t){return(t>0?"m="+e:e).trim()+"\r\n"})},r.matchPrefix=function(e,t){return r.splitLines(e).filter(function(e){return 0===e.indexOf(t)})},r.parseCandidate=function(e){for(var t,n={foundation:(t=0===e.indexOf("a=candidate:")?e.substring(12).split(" "):e.substring(10).split(" "))[0],component:t[1],protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],port:parseInt(t[5],10),type:t[7]},r=8;r<t.length;r+=2)switch(t[r]){case"raddr":n.relatedAddress=t[r+1];break;case"rport":n.relatedPort=parseInt(t[r+1],10);break;case"tcptype":n.tcpType=t[r+1];break;default:n[t[r]]=t[r+1]}return n},r.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.ip),t.push(e.port);var n=e.type;return t.push("typ"),t.push(n),"host"!==n&&e.relatedAddress&&e.relatedPort&&(t.push("raddr"),t.push(e.relatedAddress),t.push("rport"),t.push(e.relatedPort)),e.tcpType&&"tcp"===e.protocol.toLowerCase()&&(t.push("tcptype"),t.push(e.tcpType)),"candidate:"+t.join(" ")},r.parseIceOptions=function(e){return e.substr(14).split(" ")},r.parseRtpMap=function(e){var t=e.substr(9).split(" "),n={payloadType:parseInt(t.shift(),10)};return t=t[0].split("/"),n.name=t[0],n.clockRate=parseInt(t[1],10),n.numChannels=3===t.length?parseInt(t[2],10):1,n},r.writeRtpMap=function(e){var t=e.payloadType;return void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType),"a=rtpmap:"+t+" "+e.name+"/"+e.clockRate+(1!==e.numChannels?"/"+e.numChannels:"")+"\r\n"},r.parseExtmap=function(e){var t=e.substr(9).split(" ");return{id:parseInt(t[0],10),direction:t[0].indexOf("/")>0?t[0].split("/")[1]:"sendrecv",uri:t[1]}},r.writeExtmap=function(e){return"a=extmap:"+(e.id||e.preferredId)+(e.direction&&"sendrecv"!==e.direction?"/"+e.direction:"")+" "+e.uri+"\r\n"},r.parseFmtp=function(e){for(var t,n={},r=e.substr(e.indexOf(" ")+1).split(";"),o=0;o<r.length;o++)n[(t=r[o].trim().split("="))[0].trim()]=t[1];return n},r.writeFmtp=function(e){var t="",n=e.payloadType;if(void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var r=[];Object.keys(e.parameters).forEach(function(t){r.push(t+"="+e.parameters[t])}),t+="a=fmtp:"+n+" "+r.join(";")+"\r\n"}return t},r.parseRtcpFb=function(e){var t=e.substr(e.indexOf(" ")+1).split(" ");return{type:t.shift(),parameter:t.join(" ")}},r.writeRtcpFb=function(e){var t="",n=e.payloadType;return void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach(function(e){t+="a=rtcp-fb:"+n+" "+e.type+(e.parameter&&e.parameter.length?" "+e.parameter:"")+"\r\n"}),t},r.parseSsrcMedia=function(e){var t=e.indexOf(" "),n={ssrc:parseInt(e.substr(7,t-7),10)},r=e.indexOf(":",t);return r>-1?(n.attribute=e.substr(t+1,r-t-1),n.value=e.substr(r+1)):n.attribute=e.substr(t+1),n},r.getMid=function(e){var t=r.matchPrefix(e,"a=mid:")[0];if(t)return t.substr(6)},r.parseFingerprint=function(e){var t=e.substr(14).split(" ");return{algorithm:t[0].toLowerCase(),value:t[1]}},r.getDtlsParameters=function(e,t){return{role:"auto",fingerprints:r.matchPrefix(e+t,"a=fingerprint:").map(r.parseFingerprint)}},r.writeDtlsParameters=function(e,t){var n="a=setup:"+t+"\r\n";return e.fingerprints.forEach(function(e){n+="a=fingerprint:"+e.algorithm+" "+e.value+"\r\n"}),n},r.getIceParameters=function(e,t){var n=r.splitLines(e);return{usernameFragment:(n=n.concat(r.splitLines(t))).filter(function(e){return 0===e.indexOf("a=ice-ufrag:")})[0].substr(12),password:n.filter(function(e){return 0===e.indexOf("a=ice-pwd:")})[0].substr(10)}},r.writeIceParameters=function(e){return"a=ice-ufrag:"+e.usernameFragment+"\r\na=ice-pwd:"+e.password+"\r\n"},r.parseRtpParameters=function(e){for(var t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},n=r.splitLines(e)[0].split(" "),o=3;o<n.length;o++){var i=n[o],a=r.matchPrefix(e,"a=rtpmap:"+i+" ")[0];if(a){var s=r.parseRtpMap(a),c=r.matchPrefix(e,"a=fmtp:"+i+" ");switch(s.parameters=c.length?r.parseFmtp(c[0]):{},s.rtcpFeedback=r.matchPrefix(e,"a=rtcp-fb:"+i+" ").map(r.parseRtcpFb),t.codecs.push(s),s.name.toUpperCase()){case"RED":case"ULPFEC":t.fecMechanisms.push(s.name.toUpperCase())}}}return r.matchPrefix(e,"a=extmap:").forEach(function(e){t.headerExtensions.push(r.parseExtmap(e))}),t},r.writeRtpDescription=function(e,t){var n="";n+="m="+e+" ",n+=t.codecs.length>0?"9":"0",n+=" UDP/TLS/RTP/SAVPF ",n+=t.codecs.map(function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType}).join(" ")+"\r\n",n+="c=IN IP4 0.0.0.0\r\n",n+="a=rtcp:9 IN IP4 0.0.0.0\r\n",t.codecs.forEach(function(e){n+=r.writeRtpMap(e),n+=r.writeFmtp(e),n+=r.writeRtcpFb(e)});var o=0;return t.codecs.forEach(function(e){e.maxptime>o&&(o=e.maxptime)}),o>0&&(n+="a=maxptime:"+o+"\r\n"),n+="a=rtcp-mux\r\n",t.headerExtensions.forEach(function(e){n+=r.writeExtmap(e)}),n},r.parseRtpEncodingParameters=function(e){var t,n=[],o=r.parseRtpParameters(e),i=-1!==o.fecMechanisms.indexOf("RED"),a=-1!==o.fecMechanisms.indexOf("ULPFEC"),s=r.matchPrefix(e,"a=ssrc:").map(function(e){return r.parseSsrcMedia(e)}).filter(function(e){return"cname"===e.attribute}),c=s.length>0&&s[0].ssrc,u=r.matchPrefix(e,"a=ssrc-group:FID").map(function(e){var t=e.split(" ");return t.shift(),t.map(function(e){return parseInt(e,10)})});u.length>0&&u[0].length>1&&u[0][0]===c&&(t=u[0][1]),o.codecs.forEach(function(e){if("RTX"===e.name.toUpperCase()&&e.parameters.apt){var r={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10),rtx:{ssrc:t}};n.push(r),i&&((r=JSON.parse(JSON.stringify(r))).fec={ssrc:t,mechanism:a?"red+ulpfec":"red"},n.push(r))}}),0===n.length&&c&&n.push({ssrc:c});var d=r.matchPrefix(e,"b=");return d.length&&(0===d[0].indexOf("b=TIAS:")?d=parseInt(d[0].substr(7),10):0===d[0].indexOf("b=AS:")&&(d=parseInt(d[0].substr(5),10)),n.forEach(function(e){e.maxBitrate=d})),n},r.parseRtcpParameters=function(e){var t={},n=r.matchPrefix(e,"a=ssrc:").map(function(e){return r.parseSsrcMedia(e)}).filter(function(e){return"cname"===e.attribute})[0];n&&(t.cname=n.value,t.ssrc=n.ssrc);var o=r.matchPrefix(e,"a=rtcp-rsize");t.reducedSize=o.length>0,t.compound=0===o.length;var i=r.matchPrefix(e,"a=rtcp-mux");return t.mux=i.length>0,t},r.parseMsid=function(e){var t,n=r.matchPrefix(e,"a=msid:");if(1===n.length)return{stream:(t=n[0].substr(7).split(" "))[0],track:t[1]};var o=r.matchPrefix(e,"a=ssrc:").map(function(e){return r.parseSsrcMedia(e)}).filter(function(e){return"msid"===e.attribute});return o.length>0?{stream:(t=o[0].value.split(" "))[0],track:t[1]}:void 0},r.writeSessionBoilerplate=function(){return"v=0\r\no=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},r.writeMediaSection=function(e,t,n,o){var i=r.writeRtpDescription(e.kind,t);if(i+=r.writeIceParameters(e.iceGatherer.getLocalParameters()),i+=r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),"offer"===n?"actpass":"active"),i+="a=mid:"+e.mid+"\r\n",e.direction?i+="a="+e.direction+"\r\n":e.rtpSender&&e.rtpReceiver?i+="a=sendrecv\r\n":e.rtpSender?i+="a=sendonly\r\n":e.rtpReceiver?i+="a=recvonly\r\n":i+="a=inactive\r\n",e.rtpSender){var a="msid:"+o.id+" "+e.rtpSender.track.id+"\r\n";i+="a="+a,i+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" "+a,e.sendEncodingParameters[0].rtx&&(i+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" "+a,i+="a=ssrc-group:FID "+e.sendEncodingParameters[0].ssrc+" "+e.sendEncodingParameters[0].rtx.ssrc+"\r\n")}return i+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" cname:"+r.localCName+"\r\n",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(i+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" cname:"+r.localCName+"\r\n"),i},r.getDirection=function(e,t){for(var n=r.splitLines(e),o=0;o<n.length;o++)switch(n[o]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return n[o].substr(2)}return t?r.getDirection(t):"sendrecv"},r.getKind=function(e){return r.splitLines(e)[0].split(" ")[0].substr(2)},r.isRejected=function(e){return"0"===e.split(" ",2)[1]},e.exports=r},function(e,t,n){"use strict";e.exports=function(){var e=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(t){return e(t).catch(function(e){return Promise.reject(function(e){return{name:{PermissionDeniedError:"NotAllowedError"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString:function(){return this.name}}}(e))})}}},function(e,t,n){"use strict";var r=n(0).browserDetails,o={shimOnTrack:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this._ontrack},set:function(e){this._ontrack&&(this.removeEventListener("track",this._ontrack),this.removeEventListener("addstream",this._ontrackpoly)),this.addEventListener("track",this._ontrack=e),this.addEventListener("addstream",this._ontrackpoly=function(e){e.stream.getTracks().forEach(function(t){var n=new Event("track");n.track=t,n.receiver={track:t},n.streams=[e.stream],this.dispatchEvent(n)}.bind(this))}.bind(this))}})},shimSourceObject:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this.mozSrcObject},set:function(e){this.mozSrcObject=e}}))},shimPeerConnection:function(){if("object"==typeof window&&(window.RTCPeerConnection||window.mozRTCPeerConnection)){window.RTCPeerConnection||(window.RTCPeerConnection=function(e,t){if(r.version<38&&e&&e.iceServers){for(var n=[],o=0;o<e.iceServers.length;o++){var i=e.iceServers[o];if(i.hasOwnProperty("urls"))for(var a=0;a<i.urls.length;a++){var s={url:i.urls[a]};0===i.urls[a].indexOf("turn")&&(s.username=i.username,s.credential=i.credential),n.push(s)}else n.push(e.iceServers[o])}e.iceServers=n}return new mozRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=mozRTCPeerConnection.prototype,mozRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return mozRTCPeerConnection.generateCertificate}}),window.RTCSessionDescription=mozRTCSessionDescription,window.RTCIceCandidate=mozRTCIceCandidate),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){return arguments[0]=new("addIceCandidate"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}});var e=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?e.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())};var t={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"},n=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(e,o,i){return n.apply(this,[e||null]).then(function(e){if(r.version<48&&(e=function(e){var t=new Map;return Object.keys(e).forEach(function(n){t.set(n,e[n]),t[n]=e[n]}),t}(e)),r.version<53&&!o)try{e.forEach(function(e){e.type=t[e.type]||e.type})}catch(n){if("TypeError"!==n.name)throw n;e.forEach(function(n,r){e.set(r,Object.assign({},n,{type:t[n.type]||n.type}))})}return e}).then(o,i)}}}};e.exports={shimOnTrack:o.shimOnTrack,shimSourceObject:o.shimSourceObject,shimPeerConnection:o.shimPeerConnection,shimGetUserMedia:n(12)}},function(e,t,n){"use strict";var r=n(0).log,o=n(0).browserDetails;e.exports=function(){var e=function(e){return{name:{InternalError:"NotReadableError",NotSupportedError:"TypeError",PermissionDeniedError:"NotAllowedError",SecurityError:"NotAllowedError"}[e.name]||e.name,message:{"The operation is insecure.":"The request is not allowed by the user agent or the platform in the current context."}[e.message]||e.message,constraint:e.constraint,toString:function(){return this.name+(this.message&&": ")+this.message}}},t=function(t,n,i){var a=function(e){if("object"!=typeof e||e.require)return e;var t=[];return Object.keys(e).forEach(function(n){if("require"!==n&&"advanced"!==n&&"mediaSource"!==n){var r=e[n]="object"==typeof e[n]?e[n]:{ideal:e[n]};if(void 0===r.min&&void 0===r.max&&void 0===r.exact||t.push(n),void 0!==r.exact&&("number"==typeof r.exact?r.min=r.max=r.exact:e[n]=r.exact,delete r.exact),void 0!==r.ideal){e.advanced=e.advanced||[];var o={};"number"==typeof r.ideal?o[n]={min:r.ideal,max:r.ideal}:o[n]=r.ideal,e.advanced.push(o),delete r.ideal,Object.keys(r).length||delete e[n]}}}),t.length&&(e.require=t),e};return t=JSON.parse(JSON.stringify(t)),o.version<38&&(r("spec: "+JSON.stringify(t)),t.audio&&(t.audio=a(t.audio)),t.video&&(t.video=a(t.video)),r("ff37: "+JSON.stringify(t))),navigator.mozGetUserMedia(t,n,function(t){i(e(t))})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:function(e){return new Promise(function(n,r){t(e,n,r)})},addEventListener:function(){},removeEventListener:function(){}}),navigator.mediaDevices.enumerateDevices=navigator.mediaDevices.enumerateDevices||function(){return new Promise(function(e){e([{kind:"audioinput",deviceId:"default",label:"",groupId:""},{kind:"videoinput",deviceId:"default",label:"",groupId:""}])})},o.version<41){var n=navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);navigator.mediaDevices.enumerateDevices=function(){return n().then(void 0,function(e){if("NotFoundError"===e.name)return[];throw e})}}if(o.version<49){var i=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(t){return i(t).then(function(e){if(t.audio&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach(function(e){e.stop()}),new DOMException("The object can not be found here.","NotFoundError");return e},function(t){return Promise.reject(e(t))})}}navigator.getUserMedia=function(e,n,r){if(o.version<44)return t(e,n,r);console.warn("navigator.getUserMedia has been replaced by navigator.mediaDevices.getUserMedia"),navigator.mediaDevices.getUserMedia(e).then(n,r)}}},function(e,t,n){"use strict";var r={shimAddStream:function(){"object"!=typeof window||!window.RTCPeerConnection||"addStream"in window.RTCPeerConnection.prototype||(RTCPeerConnection.prototype.addStream=function(e){var t=this;e.getTracks().forEach(function(n){t.addTrack(n,e)})})},shimOnAddStream:function(){"object"!=typeof window||!window.RTCPeerConnection||"onaddstream"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"onaddstream",{get:function(){return this._onaddstream},set:function(e){this._onaddstream&&(this.removeEventListener("addstream",this._onaddstream),this.removeEventListener("track",this._onaddstreampoly)),this.addEventListener("addstream",this._onaddstream=e),this.addEventListener("track",this._onaddstreampoly=function(e){var t=e.streams[0];if(this._streams||(this._streams=[]),!(this._streams.indexOf(t)>=0)){this._streams.push(t);var n=new Event("addstream");n.stream=e.streams[0],this.dispatchEvent(n)}}.bind(this))}})},shimCallbacksAPI:function(){if("object"==typeof window&&window.RTCPeerConnection){var e=RTCPeerConnection.prototype,t=e.createOffer,n=e.createAnswer,r=e.setLocalDescription,o=e.setRemoteDescription,i=e.addIceCandidate;e.createOffer=function(e,n){var r=arguments.length>=2?arguments[2]:arguments[0],o=t.apply(this,[r]);return n?(o.then(e,n),Promise.resolve()):o},e.createAnswer=function(e,t){var r=arguments.length>=2?arguments[2]:arguments[0],o=n.apply(this,[r]);return t?(o.then(e,t),Promise.resolve()):o};var a=function(e,t,n){var o=r.apply(this,[e]);return n?(o.then(t,n),Promise.resolve()):o};e.setLocalDescription=a,a=function(e,t,n){var r=o.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},e.setRemoteDescription=a,a=function(e,t,n){var r=i.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},e.addIceCandidate=a}},shimGetUserMedia:function(){navigator.getUserMedia||(navigator.webkitGetUserMedia?navigator.getUserMedia=navigator.webkitGetUserMedia.bind(navigator):navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&(navigator.getUserMedia=function(e,t,n){navigator.mediaDevices.getUserMedia(e).then(t,n)}.bind(navigator)))}};e.exports={shimCallbacksAPI:r.shimCallbacksAPI,shimAddStream:r.shimAddStream,shimOnAddStream:r.shimOnAddStream,shimGetUserMedia:r.shimGetUserMedia}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);if(this._textMessage=t.textMessage,this._dataSize=t.dataSize,this._data=[],this._progress=0,this._sendingTime=t.sendingTime,this._progressPercentage=0,!this._textMessage.body||!this._textMessage.body.value)throw Error("[P2PDataReceiver constructor] invalid Hyperty Resource message. Does not comtain a body.value",t)}return r(e,[{key:"receiveText",value:function(e){if(this._data.push(e.data),this._progress=this._progress+e.data.length,this._progress===this._dataSize){var t=this._data.join("");this._processLastMessage(t)}else{var n=parseInt(100*this._progress/this._dataSize);n-this._progressPercentage>0&&(this._progressPercentage=n,console.debug("[P2PDataReceiver] progressing: ",this._progressPercentage),this._onProgress(this._progressPercentage))}}},{key:"receiveBinary",value:function(e){if(this._data.push(e),this._progress=this._progress+e.byteLength,this._progress===this._dataSize)this._processLastMessage(this._data);else if(this._onProgress){var t=parseInt(100*this._progress/this._dataSize);t-this._progressPercentage>0&&(this._progressPercentage=t,console.debug("[P2PDataReceiver] progressing: ",this._progressPercentage),this._onProgress(this._progressPercentage))}}},{key:"_processLastMessage",value:function(e){var t=(new Date).getTime()-this._sendingTime,n=this._textMessage;n.body.value.content=e,this._onReceived(n,t)}},{key:"onReceived",value:function(e){this._onReceived=e}},{key:"onProgress",value:function(e){this._onProgress=e}},{key:"from",get:function(){return this._textMessage.from}},{key:"to",get:function(){return this._textMessage.to}},{key:"id",get:function(){return this._textMessage.id}},{key:"type",get:function(){return this._textMessage.type}}]),e}();t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);this._msg=t,this._channel=n,this._packetSize=16384,this._bufferFullThreshold=5*this._packetSize,this._msgObject=t,this.isData=!1,this._init(),this._cancel=!1}return r(e,[{key:"cancel",value:function(){this._cancel=!0}},{key:"_init",value:function(){var e=(Math.random()*(new Date).getTime()).toString(36).replace(/\./g,"-"),t=(new Date).getTime();this._initialPacket={uuid:e,sendingTime:t},this._msg.body&&this._msg.body.value&&this._msg.body.value.content&&(this.isData=!0),this.isData&&this._msg.body.value.mimetype&&"text"!=this._msg.body.value.mimetype.split("/")[0]?(this._send=this._sendBinary,this._initialPacket.dataSize=this._msg.body.value.content.byteLength):(this._send=this._sendText,this.isData&&(this._initialPacket.dataSize=this._msg.body.value.content.length)),this._initialPacket.textMessage=JSON.parse(JSON.stringify(this._msg)),this.isData?(delete this._initialPacket.textMessage.body.value.content,this._data=this._msg.body.value.content):this._initialPacket.dataSize=0}},{key:"_sendText",value:function(e,t){var n={uuid:e,data:t};this._channel.send(JSON.stringify(n))}},{key:"_sendBinary",value:function(e,t){var n=this._str2ab(e),r=this._appendBuffer(n,t);this._channel.send(r)}},{key:"_str2ab",value:function(e){for(var t=new ArrayBuffer(2*e.length),n=new Uint16Array(t),r=0,o=e.length;r<o;r++)n[r]=e.charCodeAt(r);return t}},{key:"_appendBuffer",value:function(e,t){var n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}},{key:"sendData",value:function(){this._size=this._initialPacket.dataSize,console.log("[P2PDataSender] start sending to: ",this._msg.to),this._sendText(this._initialPacket.uuid,this._initialPacket),this.isData?this._sendData():this._onSent&&this._onSent()}},{key:"_sendData",value:function(){var e=this,t={},n={};t.max=e._size,n.max=t.max,t.value=0,n.value=0;var r=e._channel,o=e._packetSize,i=5*o,a=!0,s=void 0,c=!1;"number"==typeof r.bufferedAmountLowThreshold&&(console.info("[P2PDataSender] Using the bufferedamountlow event for flow control"),a=!1,i=o/2,r.bufferedAmountLowThreshold=i);var u=function e(){r.removeEventListener("bufferedamountlow",e),d()},d=function n(){for(;t.value<t.max&&!e._cancel;){if(r.bufferedAmount>i)return void(a?setTimeout(n,250):r.addEventListener("bufferedamountlow",u));s=e._data.slice(t.value,t.value+o),t.value+o<t.max?t.value+=o:(c=!0,t.value=t.max),e._send(e._initialPacket.uuid,s),c&&e._onSent&&e._onSent()}};setTimeout(d,5)}},{key:"onSent",value:function(e){this._onSent=e}},{key:"onProgress",value:function(e){this.onProgress=e}}]),e}();t.default=o}]).default});",
      "sourceCodeClassname": "P2PHandlerProtoStub",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "1.00",
    "description": "P2P Handler Protostub ",
    "language": "javascript",
    "cguid": "4456240d0c888e2293cdc568a7224b7c0",
    "type": "ProtoStubs",
    "constraints": {
      "windowSandbox": true
    },
    "objectName": "P2PHandlerProtoStub",
    "configuration": {
      "iceServers": [
        {
          "urls": "turn:numb.viagenie.ca",
          "credential": "zJcH3erd9cUv5Zh",
          "username": "luis-t-duarte@telecom.pt"
        },
        {
          "urls": [
            "stun:stun.voiparound.com",
            "stun:stun.voipbuster.com",
            "stun:stun.voipstunt.com",
            "stun:stun.voxgratia.org",
            "stun:stun.ekiga.net",
            "stun:stun.schlund.de",
            "stun:stun.iptel.org",
            "stun:stun.l.google.com:19302",
            "stun:stun1.l.google.com:19302",
            "stun:stun.ideasip.com",
            "stun:stun4.l.google.com:19302",
            "stun:stun2.l.google.com:19302",
            "stun:stun3.l.google.com:19302"
          ]
        }
      ],
      "iceTransportPolicy": "all"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "P2PRequesterProtoStub": {
    "sourcePackage": {
      "sourceCode": "!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("activate",[],t):"object"==typeof exports?exports.activate=t():e.activate=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){"use strict";var r=!0,o={disableLog:function(e){return"boolean"!=typeof e?new Error("Argument type: "+typeof e+". Please use a boolean."):(r=e,e?"adapter.js logging disabled":"adapter.js logging enabled")},log:function(){if("object"==typeof window){if(r)return;"undefined"!=typeof console&&"function"==typeof console.log&&console.log.apply(console,arguments)}},extractVersion:function(e,t,n){var r=e.match(t);return r&&r.length>=n&&parseInt(r[n],10)},detectBrowser:function(){var e={browser:null,version:null};if("undefined"==typeof window||!window.navigator)return e.browser="Not a browser.",e;if(navigator.mozGetUserMedia)e.browser="firefox",e.version=this.extractVersion(navigator.userAgent,/Firefox\/(\d+)\./,1);else if(navigator.webkitGetUserMedia)if(window.webkitRTCPeerConnection)e.browser="chrome",e.version=this.extractVersion(navigator.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else{if(!navigator.userAgent.match(/Version\/(\d+).(\d+)/))return e.browser="Unsupported webkit-based browser with GUM support but no WebRTC support.",e;e.browser="safari",e.version=this.extractVersion(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}else if(navigator.mediaDevices&&navigator.userAgent.match(/Edge\/(\d+).(\d+)$/))e.browser="edge",e.version=this.extractVersion(navigator.userAgent,/Edge\/(\d+).(\d+)$/,2);else{if(!navigator.mediaDevices||!navigator.userAgent.match(/AppleWebKit\/(\d+)\./))return e.browser="Not a supported browser.",e;e.browser="safari",e.version=this.extractVersion(navigator.userAgent,/AppleWebKit\/(\d+)\./,1)}return e},shimCreateObjectURL:function(){if("object"==typeof window&&window.HTMLMediaElement&&"srcObject"in window.HTMLMediaElement.prototype){var e=URL.createObjectURL.bind(URL),t=URL.revokeObjectURL.bind(URL),n=new Map,r=0;URL.createObjectURL=function(t){if("getTracks"in t){var o="polyblob:"+ ++r;return n.set(o,t),console.log("URL.createObjectURL(stream) is deprecated! Use elem.srcObject = stream instead!"),o}return e(t)},URL.revokeObjectURL=function(e){t(e),n.delete(e)};var o=Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,"src");Object.defineProperty(window.HTMLMediaElement.prototype,"src",{get:function(){return o.get.apply(this)},set:function(e){return this.srcObject=n.get(e)||null,o.set.apply(this,[e])}});var i=HTMLMediaElement.prototype.setAttribute;HTMLMediaElement.prototype.setAttribute=function(){return 2===arguments.length&&"src"===(""+arguments[0]).toLowerCase()&&(this.srcObject=n.get(arguments[1])||null),i.apply(this,arguments)}}}};e.exports={log:o.log,disableLog:o.disableLog,browserDetails:o.detectBrowser(),extractVersion:o.extractVersion,shimCreateObjectURL:o.shimCreateObjectURL,detectBrowser:o.detectBrowser.bind(o)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();t.default=function(e,t,n){return{name:"P2PRequesterStub",instance:new a(e,t,n)}};var o=n(2),i=function(e){return e&&e.__esModule?e:{default:e}}(n(3));var a=function(){function e(t,n,r){var a=this;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The runtimeProtoStubURL is a required parameter");if(!n)throw new Error("The bus is a required parameter");if(!r)throw new Error("The configuration is a required parameter");console.log("+[P2PRequesterStub.constructor] config is: ",r),this._runtimeProtoStubURL=t,this._runtimeURL=r.runtimeURL,this._remoteRuntimeURL=r.remoteRuntimeURL,this._configuration=r,this._bus=n,this._bus.addListener("*",function(e){e.to===a._runtimeProtoStubURL?(e.type="execute")&&a._onExecute(e.body.method,e.body.params):a._sendChannelMsg(e)}),this._syncher=new o.Syncher(t,n,r),this._connectionController=new i.default(this._runtimeProtoStubURL,this._syncher,this._configuration,!0),this._connectionController.onStatusUpdate(function(e,t){a._sendStatus(e,t),"disconnected"===e&&a.disconnect()}),this._syncher.onNotification(function(e){switch(console.log("+[P2PRequesterStub] On Syncher Notification: ",e),e.ack(200),e.type){case"create":a._connectionController&&a._connectionController.observe(e).then(function(){console.log("+[P2PRequesterStub] observer created ")});break;case"delete":console.log("+[P2PRequesterStub] deleting connection handler for "+e.from),disconnect()}}),this._sendStatus("create"),this._configuration.p2pHandler&&this.connect(this._configuration.p2pHandler)}return r(e,[{key:"_onExecute",value:function(e,t){console.log("[P2PRequesterStub._onExecute] request to execute: ",e," with parms ",t),"connect"===e&&this.connect(t[0])}},{key:"connect",value:function(e){var t=this;this._connectionController.report(e,this._runtimeURL).then(function(){t._sendStatus("in-progress"),t._connectionController.onMessage(function(e){console.log("+[P2PRequesterStub] onMessage: ",e),t._deliver(e)}),console.log("+[P2PRequesterStub] setup reporter object successfully")})}},{key:"disconnect",value:function(){this._connectionController&&this._connectionController.cleanup()}},{key:"_sendChannelMsg",value:function(e){this._filter(e)&&this._connectionController&&this._connectionController.sendMessage(e)}},{key:"_sendStatus",value:function(e,t){var n={type:"update",from:this._runtimeProtoStubURL,to:this._runtimeProtoStubURL+"/status",body:{value:e,resource:this._remoteRuntimeURL}};t&&(n.body.desc=t),this._bus.postMessage(n),console.log("+[P2PrequesterStub] sending status update: ",n)}},{key:"_filter",value:function(e){return!e.body||e.body.via!==this._runtimeProtoStubURL}},{key:"_deliver",value:function(e){console.log("+[P2PrequesterStub] posting message to msg bus: ",e),e.body||(e.body={}),e.body.via=this._runtimeProtoStubURL,this._bus.postMessage(e)}}]),e}()},function(e,t,n){!function(t,n){e.exports=n()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=196)}([function(e,t){var n=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=n)},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){var r=n(36)("wks"),o=n(23),i=n(1).Symbol,a="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=r},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,n){e.exports=!n(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){"use strict";t.__esModule=!0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(59));t.default=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),(0,r.default)(e,o.key,o)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}()},function(e,t,n){var r=n(1),o=n(0),i=n(14),a=n(11),s=n(10),c=function(e,t,n){var u,d,l,f=e&c.F,p=e&c.G,h=e&c.S,v=e&c.P,y=e&c.B,m=e&c.W,_=p?o:o[t]||(o[t]={}),b=_.prototype,g=p?r:h?r[t]:(r[t]||{}).prototype;for(u in p&&(n=t),n)(d=!f&&g&&void 0!==g[u])&&s(_,u)||(l=d?g[u]:n[u],_[u]=p&&"function"!=typeof g[u]?n[u]:y&&d?i(l,r):m&&g[u]==l?function(e){var t=function(t,n,r){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,r)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(l):v&&"function"==typeof l?i(Function.call,l):l,v&&((_.virtual||(_.virtual={}))[u]=l,e&c.R&&b&&!b[u]&&a(b,u,l)))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(9),o=n(39),i=n(27),a=Object.defineProperty;t.f=n(4)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(7);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(8),o=n(16);e.exports=n(4)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(55),o=n(30);e.exports=function(e){return r(o(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(24);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,n){e.exports={default:n(102),__esModule:!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(n(58)),o=i(n(42));function i(e){return e&&e.__esModule?e:{default:e}}function a(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$3,$4").split(",")}var n=t(e);if(n[0]===e&&!n[0].includes("@")){var r={type:"",domain:e,identity:""};return console.warn("[DivideURL] DivideURL don't support url without scheme. Please review your url address",e),r}return n[0]===e&&n[0].includes("@")&&(n=t((n[0]===e?"smtp":n[0])+"://"+n[0])),n[1].includes("@")&&(n[2]=n[0]+"://"+n[1],n[1]=n[1].substr(n[1].indexOf("@")+1)),{type:n[0],domain:n[1],identity:n[2]}}function s(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}t.divideURL=a,t.divideEmail=function(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,o.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,r.default)(e))},t.getUserURLFromEmail=s,t.getUserEmailFromURL=function(e){var t=a(e);return t.identity.replace("/","")+"@"+t.domain},t.convertToUserURL=function(e){if("user://"===e.substring(0,7)){var t=a(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return s(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,n=[],r=[];if(null==e.match(t))r=e.split(".");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&n.push(e)});var i=void 0;n.forEach(function(t){i=e.replace(t,"*+*"),r=i.split(".").map(function(e){return"*+*"===e?t:e})})}return console.log("[ServiceFramework.Utils.checkAttribute]",r),r},t.parseAttributes=function(e){if(e.includes("://")){var t=e.split(/([0-9a-zA-Z][-\w]*):\/\//g)[0],n=t.split("."),r=e.replace(t,"");if(e.includes("identity")){var o=r.split("identity.");console.log("array2 "+o),r=o[0].slice(".",-1),o=o[1].split("."),n.push(r,"identity"),n=n.concat(o)}else n.push(r);return n.filter(Boolean)}return e.split(".")}},function(e,t,n){var r=n(45),o=n(37);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r,o;!function(i,a){"use strict";void 0===(o="function"==typeof(r=function(){var e=function(){},t="undefined",n=["trace","debug","info","warn","error"];function r(e,t){var n=e[t];if("function"==typeof n.bind)return n.bind(e);try{return Function.prototype.bind.call(n,e)}catch(t){return function(){return Function.prototype.apply.apply(n,[e,arguments])}}}function o(t,r){for(var o=0;o<n.length;o++){var i=n[o];this[i]=o<t?e:this.methodFactory(i,t,r)}this.log=this.debug}function i(n,i,a){return function(n){return"debug"===n&&(n="log"),typeof console!==t&&(void 0!==console[n]?r(console,n):void 0!==console.log?r(console,"log"):e)}(n)||function(e,n,r){return function(){typeof console!==t&&(o.call(this,n,r),this[e].apply(this,arguments))}}.apply(this,arguments)}function a(e,r,a){var s,c=this,u="loglevel";function d(){var e;if(typeof window!==t){try{e=window.localStorage[u]}catch(e){}if(typeof e===t)try{var n=window.document.cookie,r=n.indexOf(encodeURIComponent(u)+"=");-1!==r&&(e=/^([^;]+)/.exec(n.slice(r))[1])}catch(e){}return void 0===c.levels[e]&&(e=void 0),e}}e&&(u+=":"+e),c.name=e,c.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},c.methodFactory=a||i,c.getLevel=function(){return s},c.setLevel=function(r,i){if("string"==typeof r&&void 0!==c.levels[r.toUpperCase()]&&(r=c.levels[r.toUpperCase()]),!("number"==typeof r&&r>=0&&r<=c.levels.SILENT))throw"log.setLevel() called with invalid level: "+r;if(s=r,!1!==i&&function(e){var r=(n[e]||"silent").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[u]=r)}catch(e){}try{window.document.cookie=encodeURIComponent(u)+"="+r+";"}catch(e){}}}(r),o.call(c,r,e),typeof console===t&&r<c.levels.SILENT)return"No console available for logging"},c.setDefaultLevel=function(e){d()||c.setLevel(e,!1)},c.enableAll=function(e){c.setLevel(c.levels.TRACE,e)},c.disableAll=function(e){c.setLevel(c.levels.SILENT,e)};var l=d();null==l&&(l=null==r?"WARN":r),c.setLevel(l,!1)}var s=new a,c={};s.getLogger=function(e){if("string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=c[e];return t||(t=c[e]=new a(e,s.getLevel(),s.methodFactory)),t};var u=typeof window!==t?window.log:void 0;return s.noConflict=function(){return typeof window!==t&&window.log===s&&(window.log=u),s},s.getLoggers=function(){return c},s})?r.call(t,n,t,e):r)||(e.exports=o)}()},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){e.exports={default:n(91),__esModule:!0}},function(e,t,n){var r=n(8).f,o=n(10),i=n(2)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(7);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){var r=n(7),o=n(1).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(30);e.exports=function(e){return Object(r(e))}},function(e,t,n){"use strict";t.__esModule=!0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(47));t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,r.default)(t))&&"function"!=typeof t?e:t}},function(e,t,n){"use strict";t.__esModule=!0;var r=a(n(93)),o=a(n(97)),i=a(n(47));function a(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(r.default?(0,r.default)(e,t):e.__proto__=t)}},function(e,t,n){var r=n(36)("keys"),o=n(23);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t,n){var r=n(0),o=n(1),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(9),o=n(72),i=n(37),a=n(35)("IE_PROTO"),s=function(){},c=function(){var e,t=n(28)("iframe"),r=i.length;for(t.style.display="none",n(56).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;r--;)delete c.prototype[i[r]];return c()};e.exports=Object.create||function(e,t){var n;return null!==e?(s.prototype=r(e),n=new s,s.prototype=null,n[a]=e):n=c(),void 0===t?n:o(n,t)}},function(e,t,n){e.exports=!n(4)&&!n(13)(function(){return 7!=Object.defineProperty(n(28)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){t.f=n(2)},function(e,t,n){var r=n(1),o=n(0),i=n(15),a=n(40),s=n(8).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||s(t,e,{value:a.f(e)})}},function(e,t,n){e.exports={default:n(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(6),o=n(0),i=n(13);e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],a={};a[e]=t(n),r(r.S+r.F*i(function(){n(1)}),"Object",a)}},function(e,t,n){var r=n(10),o=n(12),i=n(64)(!1),a=n(35)("IE_PROTO");e.exports=function(e,t){var n,s=o(e),c=0,u=[];for(n in s)n!=a&&r(s,n)&&u.push(n);for(;t.length>c;)r(s,n=t[c++])&&(~i(u,n)||u.push(n));return u}},function(e,t,n){var r=n(29),o=n(16),i=n(12),a=n(27),s=n(10),c=n(39),u=Object.getOwnPropertyDescriptor;t.f=n(4)?u:function(e,t){if(e=i(e),t=a(t,!0),c)try{return u(e,t)}catch(e){}if(s(e,t))return o(!r.f.call(e,t),e[t])}},function(e,t,n){"use strict";t.__esModule=!0;var r=a(n(79)),o=a(n(81)),i="function"==typeof o.default&&"symbol"==typeof r.default?function(e){return typeof e}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":typeof e};function a(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof o.default&&"symbol"===i(r.default)?function(e){return void 0===e?"undefined":i(e)}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":void 0===e?"undefined":i(e)}},function(e,t,n){"use strict";var r=n(15),o=n(6),i=n(50),a=n(11),s=n(17),c=n(71),u=n(26),d=n(53),l=n(2)("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,h,v,y,m){c(n,t,h);var _,b,g,w=function(e){if(!f&&e in R)return R[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},C=t+" Iterator",O="values"==v,P=!1,R=e.prototype,S=R[l]||R["@@iterator"]||v&&R[v],k=S||w(v),T=v?O?w("entries"):k:void 0,j="Array"==t&&R.entries||S;if(j&&(g=d(j.call(new e)))!==Object.prototype&&g.next&&(u(g,C,!0),r||"function"==typeof g[l]||a(g,l,p)),O&&S&&"values"!==S.name&&(P=!0,k=function(){return S.call(this)}),r&&!m||!f&&!P&&R[l]||a(R,l,k),s[t]=k,s[C]=p,v)if(_={values:O?k:w("values"),keys:y?k:w("keys"),entries:T},m)for(b in _)b in R||i(R,b,_[b]);else o(o.P+o.F*(f||P),t,_);return _}},function(e,t,n){var r=n(31),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){e.exports=n(11)},function(e,t,n){"use strict";var r=n(24);e.exports.f=function(e){return new function(e){var t,n;this.promise=new e(function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r}),this.resolve=r(t),this.reject=r(n)}(e)}},function(e,t,n){"use strict";var r=n(70)(!0);n(48)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})})},function(e,t,n){var r=n(10),o=n(32),i=n(35)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){n(73);for(var r=n(1),o=n(11),i=n(17),a=n(2)("toStringTag"),s="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),c=0;c<s.length;c++){var u=s[c],d=r[u],l=d&&d.prototype;l&&!l[a]&&o(l,a,u),i[u]=i.Array}},function(e,t,n){var r=n(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){var r=n(1).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(45),o=n(37).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t,n){e.exports={default:n(76),__esModule:!0}},function(e,t,n){e.exports={default:n(61),__esModule:!0}},function(e,t){},function(e,t,n){n(62);var r=n(0).Object;e.exports=function(e,t,n){return r.defineProperty(e,t,n)}},function(e,t,n){var r=n(6);r(r.S+r.F*!n(4),"Object",{defineProperty:n(8).f})},function(e,t,n){var r=n(21),o=n(2)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t,n){var r=n(12),o=n(49),i=n(65);e.exports=function(e){return function(t,n,a){var s,c=r(t),u=o(c.length),d=i(a,u);if(e&&n!=n){for(;u>d;)if((s=c[d++])!=s)return!0}else for(;u>d;d++)if((e||d in c)&&c[d]===n)return e||d||0;return!e&&-1}}},function(e,t,n){var r=n(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},function(e,t,n){var r=n(9),o=n(24),i=n(2)("species");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||void 0==(n=r(a)[i])?t:o(n)}},function(e,t,n){var r,o,i,a=n(14),s=n(108),c=n(56),u=n(28),d=n(1),l=d.process,f=d.setImmediate,p=d.clearImmediate,h=d.MessageChannel,v=d.Dispatch,y=0,m={},_=function(){var e=+this;if(m.hasOwnProperty(e)){var t=m[e];delete m[e],t()}},b=function(e){_.call(e.data)};f&&p||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return m[++y]=function(){s("function"==typeof e?e:Function(e),t)},r(y),y},p=function(e){delete m[e]},"process"==n(21)(l)?r=function(e){l.nextTick(a(_,e,1))}:v&&v.now?r=function(e){v.now(a(_,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=b,r=a(i.postMessage,i,1)):d.addEventListener&&"function"==typeof postMessage&&!d.importScripts?(r=function(e){d.postMessage(e+"","*")},d.addEventListener("message",b,!1)):r="onreadystatechange"in u("script")?function(e){c.appendChild(u("script")).onreadystatechange=function(){c.removeChild(this),_.call(e)}}:function(e){setTimeout(a(_,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(9),o=n(7),i=n(51);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){var r=n(31),o=n(30);e.exports=function(e){return function(t,n){var i,a,s=String(o(t)),c=r(n),u=s.length;return c<0||c>=u?e?"":void 0:(i=s.charCodeAt(c))<55296||i>56319||c+1===u||(a=s.charCodeAt(c+1))<56320||a>57343?e?s.charAt(c):i:e?s.slice(c,c+2):a-56320+(i-55296<<10)+65536}}},function(e,t,n){"use strict";var r=n(38),o=n(16),i=n(26),a={};n(11)(a,n(2)("iterator"),function(){return this}),e.exports=function(e,t,n){e.prototype=r(a,{next:o(1,n)}),i(e,t+" Iterator")}},function(e,t,n){var r=n(8),o=n(9),i=n(20);e.exports=n(4)?Object.defineProperties:function(e,t){o(e);for(var n,a=i(t),s=a.length,c=0;s>c;)r.f(e,n=a[c++],t[n]);return e}},function(e,t,n){"use strict";var r=n(74),o=n(75),i=n(17),a=n(12);e.exports=n(48)(Array,"Array",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])},"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){var r=n(0),o=r.JSON||(r.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},function(e,t,n){var r=n(23)("meta"),o=n(7),i=n(10),a=n(8).f,s=0,c=Object.isExtensible||function(){return!0},u=!n(13)(function(){return c(Object.preventExtensions({}))}),d=function(e){a(e,r,{value:{i:"O"+ ++s,w:{}}})},l=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!c(e))return"F";if(!t)return"E";d(e)}return e[r].i},getWeak:function(e,t){if(!i(e,r)){if(!c(e))return!0;if(!t)return!1;d(e)}return e[r].w},onFreeze:function(e){return u&&l.NEED&&c(e)&&!i(e,r)&&d(e),e}}},function(e,t,n){e.exports={default:n(119),__esModule:!0}},function(e,t,n){e.exports={default:n(80),__esModule:!0}},function(e,t,n){n(52),n(54),e.exports=n(40).f("iterator")},function(e,t,n){e.exports={default:n(82),__esModule:!0}},function(e,t,n){n(83),n(60),n(87),n(88),e.exports=n(0).Symbol},function(e,t,n){"use strict";var r=n(1),o=n(10),i=n(4),a=n(6),s=n(50),c=n(77).KEY,u=n(13),d=n(36),l=n(26),f=n(23),p=n(2),h=n(40),v=n(41),y=n(84),m=n(85),_=n(9),b=n(7),g=n(12),w=n(27),C=n(16),O=n(38),P=n(86),R=n(46),S=n(8),k=n(20),T=R.f,j=S.f,x=P.f,E=r.Symbol,L=r.JSON,M=L&&L.stringify,D=p("_hidden"),U=p("toPrimitive"),I={}.propertyIsEnumerable,A=d("symbol-registry"),N=d("symbols"),H=d("op-symbols"),F=Object.prototype,B="function"==typeof E,G=r.QObject,z=!G||!G.prototype||!G.prototype.findChild,V=i&&u(function(){return 7!=O(j({},"a",{get:function(){return j(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=T(F,t);r&&delete F[t],j(e,t,n),r&&e!==F&&j(F,t,r)}:j,J=function(e){var t=N[e]=O(E.prototype);return t._k=e,t},q=B&&"symbol"==typeof E.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof E},W=function(e,t,n){return e===F&&W(H,t,n),_(e),t=w(t,!0),_(n),o(N,t)?(n.enumerable?(o(e,D)&&e[D][t]&&(e[D][t]=!1),n=O(n,{enumerable:C(0,!1)})):(o(e,D)||j(e,D,C(1,{})),e[D][t]=!0),V(e,t,n)):j(e,t,n)},Z=function(e,t){_(e);for(var n,r=y(t=g(t)),o=0,i=r.length;i>o;)W(e,n=r[o++],t[n]);return e},K=function(e){var t=I.call(this,e=w(e,!0));return!(this===F&&o(N,e)&&!o(H,e))&&(!(t||!o(this,e)||!o(N,e)||o(this,D)&&this[D][e])||t)},Y=function(e,t){if(e=g(e),t=w(t,!0),e!==F||!o(N,t)||o(H,t)){var n=T(e,t);return!n||!o(N,t)||o(e,D)&&e[D][t]||(n.enumerable=!0),n}},$=function(e){for(var t,n=x(g(e)),r=[],i=0;n.length>i;)o(N,t=n[i++])||t==D||t==c||r.push(t);return r},X=function(e){for(var t,n=e===F,r=x(n?H:g(e)),i=[],a=0;r.length>a;)!o(N,t=r[a++])||n&&!o(F,t)||i.push(N[t]);return i};B||(s((E=function(){if(this instanceof E)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(n){this===F&&t.call(H,n),o(this,D)&&o(this[D],e)&&(this[D][e]=!1),V(this,e,C(1,n))};return i&&z&&V(F,e,{configurable:!0,set:t}),J(e)}).prototype,"toString",function(){return this._k}),R.f=Y,S.f=W,n(57).f=P.f=$,n(29).f=K,n(43).f=X,i&&!n(15)&&s(F,"propertyIsEnumerable",K,!0),h.f=function(e){return J(p(e))}),a(a.G+a.W+a.F*!B,{Symbol:E});for(var Q="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Q.length>ee;)p(Q[ee++]);for(var te=k(p.store),ne=0;te.length>ne;)v(te[ne++]);a(a.S+a.F*!B,"Symbol",{for:function(e){return o(A,e+="")?A[e]:A[e]=E(e)},keyFor:function(e){if(!q(e))throw TypeError(e+" is not a symbol!");for(var t in A)if(A[t]===e)return t},useSetter:function(){z=!0},useSimple:function(){z=!1}}),a(a.S+a.F*!B,"Object",{create:function(e,t){return void 0===t?O(e):Z(O(e),t)},defineProperty:W,defineProperties:Z,getOwnPropertyDescriptor:Y,getOwnPropertyNames:$,getOwnPropertySymbols:X}),L&&a(a.S+a.F*(!B||u(function(){var e=E();return"[null]"!=M([e])||"{}"!=M({a:e})||"{}"!=M(Object(e))})),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(b(t)||void 0!==e)&&!q(e))return m(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!q(t))return t}),r[1]=t,M.apply(L,r)}}),E.prototype[U]||n(11)(E.prototype,U,E.prototype.valueOf),l(E,"Symbol"),l(Math,"Math",!0),l(r.JSON,"JSON",!0)},function(e,t,n){var r=n(20),o=n(43),i=n(29);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var a,s=n(e),c=i.f,u=0;s.length>u;)c.call(e,a=s[u++])&&t.push(a);return t}},function(e,t,n){var r=n(21);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(12),o=n(57).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(r(e))}},function(e,t,n){n(41)("asyncIterator")},function(e,t,n){n(41)("observable")},function(e,t,n){n(90),e.exports=n(0).Object.keys},function(e,t,n){var r=n(32),o=n(20);n(44)("keys",function(){return function(e){return o(r(e))}})},function(e,t,n){n(92),e.exports=n(0).Object.getPrototypeOf},function(e,t,n){var r=n(32),o=n(53);n(44)("getPrototypeOf",function(){return function(e){return o(r(e))}})},function(e,t,n){e.exports={default:n(94),__esModule:!0}},function(e,t,n){n(95),e.exports=n(0).Object.setPrototypeOf},function(e,t,n){var r=n(6);r(r.S,"Object",{setPrototypeOf:n(96).set})},function(e,t,n){var r=n(7),o=n(9),i=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(14)(Function.call,n(46).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return i(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:i}},function(e,t,n){e.exports={default:n(98),__esModule:!0}},function(e,t,n){n(99);var r=n(0).Object;e.exports=function(e,t){return r.create(e,t)}},function(e,t,n){var r=n(6);r(r.S,"Object",{create:n(38)})},function(e,t,n){"use strict";t.__esModule=!0;var r=i(n(25)),o=i(n(125));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,n,i){null===t&&(t=Function.prototype);var a=(0,o.default)(t,n);if(void 0===a){var s=(0,r.default)(t);return null===s?void 0:e(s,n,i)}if("value"in a)return a.value;var c=a.get;return void 0!==c?c.call(i):void 0}},function(e,t,n){var r=n(63),o=n(2)("iterator"),i=n(17);e.exports=n(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[r(e)]}},function(e,t,n){n(60),n(52),n(54),n(103),n(114),n(115),e.exports=n(0).Promise},function(e,t,n){"use strict";var r,o,i,a,s=n(15),c=n(1),u=n(14),d=n(63),l=n(6),f=n(7),p=n(24),h=n(104),v=n(105),y=n(66),m=n(67).set,_=n(109)(),b=n(51),g=n(68),w=n(110),C=n(69),O=c.TypeError,P=c.process,R=P&&P.versions,S=R&&R.v8||"",k=c.Promise,T="process"==d(P),j=function(){},x=o=b.f,E=!!function(){try{var e=k.resolve(1),t=(e.constructor={})[n(2)("species")]=function(e){e(j,j)};return(T||"function"==typeof PromiseRejectionEvent)&&e.then(j)instanceof t&&0!==S.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(e){}}(),L=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},M=function(e,t){if(!e._n){e._n=!0;var n=e._c;_(function(){for(var r=e._v,o=1==e._s,i=0,a=function(t){var n,i,a,s=o?t.ok:t.fail,c=t.resolve,u=t.reject,d=t.domain;try{s?(o||(2==e._h&&I(e),e._h=1),!0===s?n=r:(d&&d.enter(),n=s(r),d&&(d.exit(),a=!0)),n===t.promise?u(O("Promise-chain cycle")):(i=L(n))?i.call(n,c,u):c(n)):u(r)}catch(e){d&&!a&&d.exit(),u(e)}};n.length>i;)a(n[i++]);e._c=[],e._n=!1,t&&!e._h&&D(e)})}},D=function(e){m.call(c,function(){var t,n,r,o=e._v,i=U(e);if(i&&(t=g(function(){T?P.emit("unhandledRejection",o,e):(n=c.onunhandledrejection)?n({promise:e,reason:o}):(r=c.console)&&r.error&&r.error("Unhandled promise rejection",o)}),e._h=T||U(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},U=function(e){return 1!==e._h&&0===(e._a||e._c).length},I=function(e){m.call(c,function(){var t;T?P.emit("rejectionHandled",e):(t=c.onrejectionhandled)&&t({promise:e,reason:e._v})})},A=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),M(t,!0))},N=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw O("Promise can't be resolved itself");(t=L(e))?_(function(){var r={_w:n,_d:!1};try{t.call(e,u(N,r,1),u(A,r,1))}catch(e){A.call(r,e)}}):(n._v=e,n._s=1,M(n,!1))}catch(e){A.call({_w:n,_d:!1},e)}}};E||(k=function(e){h(this,k,"Promise","_h"),p(e),r.call(this);try{e(u(N,this,1),u(A,this,1))}catch(e){A.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(111)(k.prototype,{then:function(e,t){var n=x(y(this,k));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=T?P.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&M(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=u(N,e,1),this.reject=u(A,e,1)},b.f=x=function(e){return e===k||e===a?new i(e):o(e)}),l(l.G+l.W+l.F*!E,{Promise:k}),n(26)(k,"Promise"),n(112)("Promise"),a=n(0).Promise,l(l.S+l.F*!E,"Promise",{reject:function(e){var t=x(this);return(0,t.reject)(e),t.promise}}),l(l.S+l.F*(s||!E),"Promise",{resolve:function(e){return C(s&&this===a?k:this,e)}}),l(l.S+l.F*!(E&&n(113)(function(e){k.all(e).catch(j)})),"Promise",{all:function(e){var t=this,n=x(t),r=n.resolve,o=n.reject,i=g(function(){var n=[],i=0,a=1;v(e,!1,function(e){var s=i++,c=!1;n.push(void 0),a++,t.resolve(e).then(function(e){c||(c=!0,n[s]=e,--a||r(n))},o)}),--a||r(n)});return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=x(t),r=n.reject,o=g(function(){v(e,!1,function(e){t.resolve(e).then(n.resolve,r)})});return o.e&&r(o.v),n.promise}})},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(14),o=n(106),i=n(107),a=n(9),s=n(49),c=n(101),u={},d={};(t=e.exports=function(e,t,n,l,f){var p,h,v,y,m=f?function(){return e}:c(e),_=r(n,l,t?2:1),b=0;if("function"!=typeof m)throw TypeError(e+" is not iterable!");if(i(m)){for(p=s(e.length);p>b;b++)if((y=t?_(a(h=e[b])[0],h[1]):_(e[b]))===u||y===d)return y}else for(v=m.call(e);!(h=v.next()).done;)if((y=o(v,_,h.value,t))===u||y===d)return y}).BREAK=u,t.RETURN=d},function(e,t,n){var r=n(9);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(17),o=n(2)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(1),o=n(67).set,i=r.MutationObserver||r.WebKitMutationObserver,a=r.process,s=r.Promise,c="process"==n(21)(a);e.exports=function(){var e,t,n,u=function(){var r,o;for(c&&(r=a.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(c)n=function(){a.nextTick(u)};else if(!i||r.navigator&&r.navigator.standalone)if(s&&s.resolve){var d=s.resolve(void 0);n=function(){d.then(u)}}else n=function(){o.call(r,u)};else{var l=!0,f=document.createTextNode("");new i(u).observe(f,{characterData:!0}),n=function(){f.data=l=!l}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},function(e,t,n){var r=n(1).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){var r=n(11);e.exports=function(e,t,n){for(var o in t)n&&e[o]?e[o]=t[o]:r(e,o,t[o]);return e}},function(e,t,n){"use strict";var r=n(1),o=n(0),i=n(8),a=n(4),s=n(2)("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:r[e];a&&t&&!t[s]&&i.f(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){var r=n(2)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},e(i)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(6),o=n(0),i=n(1),a=n(66),s=n(69);r(r.P+r.R,"Promise",{finally:function(e){var t=a(this,o.Promise||i.Promise),n="function"==typeof e;return this.then(n?function(n){return s(t,e()).then(function(){return n})}:e,n?function(n){return s(t,e()).then(function(){throw n})}:e)}})},function(e,t,n){"use strict";var r=n(6),o=n(51),i=n(68);r(r.S,"Promise",{try:function(e){var t=o.f(this),n=i(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectType=t.ChangeType=void 0;var r=a(n(3)),o=a(n(5));n(123);var i=n(19);function a(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(t){(0,r.default)(this,e),this._observers=[],this._filters={},this._data=t||{},this._internalObserve(this._data)}return(0,o.default)(e,[{key:"observe",value:function(e){this._observers.push(e)}},{key:"find",value:function(e){var t=(0,i.parseAttributes)(e);return this._findWithSplit(t)}},{key:"findBefore",value:function(e){var t={},n=(0,i.parseAttributes)(e);return t.last=n.pop(),t.obj=this._findWithSplit(n),t}},{key:"_findWithSplit",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:"_internalObserve",value:function(e){var t=this;this._data=Object.deepObserve(e,function(e){e.every(function(e){t._onChanges(e)})})}},{key:"_fireEvent",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:"_onChanges",value:function(e){var t=e.object,n=void 0;t.constructor===Object&&(n=u.OBJECT),t.constructor===Array&&(n=u.ARRAY);var r=e.keypath,o=t[e.name];"update"!==e.type||r.includes(".length")||this._fireEvent({cType:c.UPDATE,oType:n,field:r,data:o}),"add"===e.type&&this._fireEvent({cType:c.ADD,oType:n,field:r,data:o}),"delete"===e.type&&this._fireEvent({cType:c.REMOVE,oType:n,field:r})}},{key:"data",get:function(){return this._data}}]),e}(),c=t.ChangeType={UPDATE:"update",ADD:"add",REMOVE:"remove"},u=t.ObjectType={OBJECT:"object",ARRAY:"array"};t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=u(n(18)),o=u(n(3)),i=u(n(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),s=u(n(117)),c=n(19);function u(e){return e&&e.__esModule?e:{default:e}}var d=a.getLogger("DataObjectChild"),l=function(){function e(t){function n(e){throw"[DataObjectChild] "+e+" mandatory parameter is missing"}(0,o.default)(this,e),t.parent?this._parent=t.parent:n("parent"),t.url?this._url=t.url:n("url"),t.created?this._created=t.created:n("created"),t.reporter?this._reporter=t.reporter:n("reporter"),t.runtime?this._runtime=t.runtime:n("runtime"),t.schema?this._schema=t.schema:n("schema"),t.parentObject?this._parentObject=t.parentObject:n("parentObject"),t.name&&(this._name=t.name),t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._childId=t.url,t.data?this._syncObj=new s.default(t.data):this._syncObj=new s.default({}),d.log("[DataObjectChild -  Constructor] - ",this._syncObj),this._bus=this._parentObject._bus,this._owner=this._parentObject._owner,this._allocateListeners(),this._metadata=t,delete this._metadata.parentObject,this._sharingStatus=!1}return(0,i.default)(e,[{key:"share",value:function(e){var t=this;t._sharingStatus=new r.default(function(n,r){var o;o=e?t.metadata.parent:t.metadata.parent+"/children/"+t.metadata.children;var i=t.metadata;i.data=t.data;var a={type:"create",from:t.metadata.reporter,to:o,body:{resource:i.url,value:i}};if(t.identity&&(a.body.identity=t.identity),t._parentObject.data.hasOwnProperty("mutual")&&(a.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,c.deepClone)(a)),n();var s=t._bus.postMessage((0,c.deepClone)(a),function(e){if(e.to===t._reporter){t._bus.removeResponseListener(a.from,e.id),d.log("[Syncher.DataObjectChild.share] Parent reporter reply ",e);var o={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:"Unknown"};return e.body.code<300?n(o):r(o)}},!1);setTimeout(function(){return t._bus.removeResponseListener(a.from,s),r({code:408,desc:"timout"})},3e3)})}},{key:"store",value:function(){var e={},t=this.metadata.children+"."+this.metadata.url;e.value=this.metadata,e.identity=this.identity;var n={from:this.metadata.reporter,to:this._parentObject._syncher._subURL,type:"create",body:{resource:this.metadata.parent,attribute:t,value:e}};d.log("[DataObjectChild.store]:",n),this._bus.postMessage(n)}},{key:"_allocateListeners",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){"response"===t.type&&t.id===e._msgId&&(d.log("DataObjectChild.onResponse:",t),e._onResponse(t))}))}},{key:"_releaseListeners",value:function(){this._listener&&this._listener.remove()}},{key:"delete",value:function(){this._releaseListeners()}},{key:"onChange",value:function(e){this._syncObj.observe(function(t){d.log("[DataObjectChild - observer] - ",t),e(t)})}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.body.source,code:e.body.code};this._onResponseHandler&&this._onResponseHandler(t)}},{key:"shareable",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:"metadata",get:function(){return this._metadata}},{key:"childId",get:function(){return this._childId}},{key:"sharingStatus",get:function(){return this._sharingStatus}},{key:"data",get:function(){return this._syncObj.data}},{key:"identity",set:function(e){this._identity=e},get:function(){return this._identity}}]),e}();t.default=l,e.exports=t.default},function(e,t,n){n(120),e.exports=n(0).Object.assign},function(e,t,n){var r=n(6);r(r.S+r.F,"Object",{assign:n(121)})},function(e,t,n){"use strict";var r=n(20),o=n(43),i=n(29),a=n(32),s=n(55),c=Object.assign;e.exports=!c||n(13)(function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach(function(e){t[e]=e}),7!=c({},e)[n]||Object.keys(c({},t)).join("")!=r})?function(e,t){for(var n=a(e),c=arguments.length,u=1,d=o.f,l=i.f;c>u;)for(var f,p=s(arguments[u++]),h=d?r(p).concat(d(p)):r(p),v=h.length,y=0;v>y;)l.call(p,f=h[y++])&&(n[f]=p[f]);return n}:c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=v(n(47)),o=v(n(18)),i=v(n(42)),a=v(n(78)),s=v(n(3)),c=v(n(5)),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),d=n(117),l=v(d),f=v(n(118)),p=n(19),h=v(n(128));function v(e){return e&&e.__esModule?e:{default:e}}var y=u.getLogger("DataObject"),m=function(){function e(t){function n(e){throw"[DataObject] "+e+" mandatory parameter is missing"}(0,s.default)(this,e),t.syncher?this._syncher=t.syncher:n("syncher"),t.url?this._url=t.url:n("url"),t.created?this._created=t.created:n("created"),t.reporter?this._reporter=t.reporter:n("reporter"),t.runtime?this._runtime=t.runtime:n("runtime"),t.schema?this._schema=t.schema:n("schema"),t.name?this._name=t.name:n("name"),this._status=t.status,t.data?this._syncObj=new l.default(t.data):this._syncObj=new l.default({}),this._childrens=t.childrens,this._mutual=t.mutual,this._version=0,this._childId=0,this._childrenListeners=[],this._onAddChildrenHandler,this._resumed=t.resume,t.resume&&(this._version=t.version),this._owner=t.syncher._owner,this._bus=t.syncher._bus,t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._metadata=(0,a.default)(t),this._metadata.lastModified=this._metadata.created,delete this._metadata.data,delete this._metadata.syncher,delete this._metadata.authorise,this._hypertyResourceFactory=new h.default,this._childrenObjects={},this._sharedChilds=[]}return(0,c.default)(e,[{key:"_getLastChildId",value:function(){var e=this,t=e._owner+"#0";return(0,i.default)(e._childrens).filter(function(n){e._childrens[n].childId>t&&(t=e._childrens[n].childId)}),Number(t.split("#")[1])}},{key:"_allocateListeners",value:function(){var e=this,t=this,n=t._url+"/children/";y.log("[Data Object - AllocateListeners] - ",t._childrens),t._childrens&&t._childrens.forEach(function(r){var o=n+r,i=t._bus.addListener(o,function(n){if(n.from!==e._owner)switch(y.log("DataObject-Children-RCV: ",n),n.type){case"create":t._onChildCreate(n);break;case"delete":y.log(n);break;default:t._changeChildren(n)}});t._childrenListeners.push(i)})}},{key:"_releaseListeners",value:function(){var e=this;e._childrenListeners.forEach(function(e){e.remove()}),(0,i.default)(e._childrenObjects).forEach(function(t){(0,i.default)(e._childrenObjects[t]).forEach(function(n){e._childrenObjects[t][n]._releaseListeners()})})}},{key:"resumeChildrens",value:function(e){var t=this,n=this,r=this._owner+"#"+this._childId;(0,i.default)(e).forEach(function(o){var a=e[o];(0,i.default)(a).forEach(function(e){var i=!1;n._childrenObjects.hasOwnProperty(o)||(n._childrenObjects[o]={}),a[e].value.resourceType&&!n._childrenObjects[o].hasOwnProperty(e)?(n._childrenObjects[o][e]=n._resumeHypertyResource(a[e]),i=!0):n._childrenObjects[o].hasOwnProperty(e)||(n._childrenObjects[o][e]=n._resumeChild(a[e]),y.log("[DataObject.resumeChildrens] new DataObjectChild: ",n._childrenObjects[o][e]),i=!0),i&&e>r&&(r=e,y.log("[DataObjectReporter.resumeChildrens] - resuming: ",t._childrenObjects[o][e]))})}),this._childId=Number(r.split("#")[1])}},{key:"_resumeChild",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var n=new f.default(t);n.identity=e.identity;var r={type:"create",from:n.reporter,url:n.parent,value:n.data,childId:n.url,identity:n.identity,child:n};return n.resourceType&&(r.resource=n),this._onAddChildrenHandler&&this._onAddChildrenHandler(r),n}},{key:"_resumeHypertyResource",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var n=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t);n.identity=e.identity;var r={type:"create",from:n.reporter,url:n.parent,value:n.data,childId:n.url,identity:n.identity,child:n};return n.resourceType&&(r.resource=n),this._onAddChildrenHandler&&this._onAddChildrenHandler(r),n}},{key:"pause",value:function(){throw"Not implemented"}},{key:"resume",value:function(){throw"Not implemented"}},{key:"stop",value:function(){throw"Not implemented"}},{key:"addChild",value:function(e,t,n,r){var i=this,a=void 0;return new o.default(function(o){var s=i._url+"/children/"+e,c=i._getChildInput(r);c.data=t,c.children=e,a=new f.default(c),n&&(a.identity=n),a.share(),y.log("[DataObject.addChild] added ",a),a.onChange(function(e){i._onChange(e,{path:s,childId:c.url})}),i._childrenObjects.hasOwnProperty(e)||(i._childrenObjects[e]={}),i._childrenObjects[e][c.url]=a,o(a)})}},{key:"_deleteChildrens",value:function(){var e=this,t=[];return new o.default(function(n){if(e.childrens){y.log("[DataObject.deleteChildrens]",e.childrens);var r=void 0;for(r in e.childrens){var i=void 0;for(i in e.childrens[r]){var a=e.childrens[r][i];y.log("[DataObject._deleteChildrens] child",a),a.metadata.hasOwnProperty("resourceType")&&t.push(e.childrens[r][i].delete())}}}y.log("[DataObject._deleteChildrens] promises ",t),t.length>0?o.default.all(t).then(function(){n("[DataObject._deleteChildrens] done")}):n("[DataObject._deleteChildrens] nothing to delete")})}},{key:"_getChildInput",value:function(e){var t=(0,a.default)({},e);return this._childId++,t.url=this._owner+"#"+this._childId,t.parentObject=this,t.reporter=this._owner,t.created=(new Date).toISOString(),t.runtime=this._syncher._runtimeUrl,t.p2pHandler=this._syncher._p2pHandler,t.p2pRequester=this._syncher._p2pRequester,t.schema=this._schema,t.parent=this.url,t}},{key:"addHypertyResource",value:function(e,t,n,r,i){var a=this;return new o.default(function(o){var s=void 0,c=a._url+"/children/"+e,u=a._getChildInput(i);u.children=e,a._hypertyResourceFactory.createHypertyResourceWithContent(!0,t,n,u).then(function(t){s=t,r&&(s.identity=r),s.share(),y.log("[DataObject.addHypertyResource] added ",s),s.onChange(function(e){a._onChange(e,{path:c,childId:s.childId})}),a._childrenObjects.hasOwnProperty(e)||(a._childrenObjects[e]={}),a._childrenObjects[e][s.childId]=s,o(s)})})}},{key:"onAddChild",value:function(e){this._onAddChildrenHandler=e}},{key:"_onChildCreate",value:function(e){y.log("[DataObject._onChildCreate] receivedBy "+this._owner+" : ",e);var t={from:e.to,to:e.from,type:"response",id:e.id,body:{code:100}};this._bus.postMessage(t),e.body.value.resourceType?this._onHypertyResourceAdded(e):this._onChildAdded(e)}},{key:"_onChildAdded",value:function(e){var t=(0,p.deepClone)(e.body.value);t.parentObject=this;var n=t.children,r=new f.default(t);r.identity=e.body.identity,this._childrenObjects.hasOwnProperty(n)||(this._childrenObjects[n]={}),this._childrenObjects[n][t.url]=r,e.to===this.metadata.url&&r.store(),this._hypertyEvt(e,r)}},{key:"_onHypertyResourceAdded",value:function(e){var t=e.body.value,n=void 0,r=t.children;t.parentObject=this,(n=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t)).identity=e.body.identity,this._childrenObjects.hasOwnProperty(r)||(this._childrenObjects[r]={}),this._childrenObjects[r][n.childId]=n,this._hypertyEvt(e,n),e.to===this.metadata.url&&n.store()}},{key:"_hypertyEvt",value:function(e,t){var n={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(n.resource=t),this._onAddChildrenHandler&&this._onAddChildrenHandler(n)}},{key:"_onChange",value:function(e,t){if(this._metadata.lastModified=(new Date).toISOString(),this._version++,"live"===this._status){var n={type:"update",from:this._url,to:this._url+"/changes",body:{version:this._version,source:this._owner,attribute:e.field,lastModified:this._metadata.lastModified}};y.log("[DataObject - _onChange] - ",e,t,n),e.oType===d.ObjectType.OBJECT?e.cType!==d.ChangeType.REMOVE&&(n.body.value=(0,p.deepClone)(e.data)):(n.body.attributeType=e.oType,n.body.value=e.data,e.cType!==d.ChangeType.UPDATE&&(n.body.operation=e.cType)),t&&(n.to=t.path,n.body.resource=t.childId),this.data._mutual||(n.body.mutual=this._mutual),this._bus.postMessage(n)}}},{key:"_changeObject",value:function(e,t){if(this._version+1<=t.body.version){this._version=t.body.version;var n,o=t.body.attribute;n="object"===(0,r.default)(t.body.value)?(0,p.deepClone)(t.body.value):t.body.value;var i=e.findBefore(o);if(t.body.lastModified?this._metadata.lastModified=t.body.lastModified:this._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===d.ObjectType.ARRAY)if(t.body.operation===d.ChangeType.ADD){var a=i.obj,s=i.last;Array.prototype.splice.apply(a,[s,0].concat(n))}else if(t.body.operation===d.ChangeType.REMOVE){var c=i.obj,u=i.last;c.splice(u,n)}else i.obj[i.last]=n;else t.body.hasOwnProperty("value")?i.obj[i.last]=n:delete i.obj[i.last]}else y.log("UNSYNCHRONIZED VERSION: (data => "+this._version+", msg => "+t.body.version+")")}},{key:"_changeChildren",value:function(e){var t=(0,p.divideURL)(e.to).identity,n=t?t.substring(t.lastIndexOf("/")+1):void 0,r=e.body.resource,o=this._childrenObjects[n][r];y.log("Change children: ",this._owner,e,n),o?this._changeObject(o._syncObj,e):y.warn("No children found for: ",r)}},{key:"metadata",get:function(){return this._metadata}},{key:"url",get:function(){return this._url}},{key:"schema",get:function(){return this._schema}},{key:"status",get:function(){return this._status}},{key:"data",get:function(){return this._syncObj.data}},{key:"childrens",get:function(){return this._childrenObjects}}]),e}();t.default=m,e.exports=t.default},function(e,t){!function(){"use strict";if(!Object.observe&&"function"==typeof Proxy){function e(e,t,n,r,o,i){var a,s=this;function c(e,r){if(c.delay=r,!c.pause&&s.changeset.length>0){if(!e){var o=s.changeset.filter(function(e){return!n||n.indexOf(e.type)>=0});o.length>0&&t(o)}s.changeset=[]}}return c.pause=o,c.delay=i,s.get=function(e,t){return"__observer__"===t?s:"unobserve"===t?function(){return Object.unobserve(e),e}:"deliver"===t?c:e[t]},s.target=e,s.changeset=[],s.target.__observerCallbacks__||(Object.defineProperty(e,"__observerCallbacks__",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,"__observers__",{enumerable:!1,configurable:!0,writable:!1,value:[]})),s.target.__observerCallbacks__.push(t),s.target.__observers__.push(this),a=new Proxy(e,s),c(!1,i),a}e.prototype.deliver=function(){return this.get(null,"deliver")},e.prototype.set=function(e,t,n){var r=e[t],o=void 0===r?"add":"update";if(e[t]=n,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(o)>=0)){var i={object:e,name:t,type:o},a=0===this.changeset.length,s=this.deliver();"update"===o&&(i.oldValue=r),this.changeset.push(i),a&&s(!1,"number"==typeof s.delay?s.delay:10)}return!0},e.prototype.deleteProperty=function(e,t){var n=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("delete")>=0){var r={object:e,name:t,type:"delete",oldValue:n},o=0===this.changeset.length,i=this.deliver();this.changeset.push(r),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.defineProperty=function(e,t,n){if(Object.defineProperty(e,t,n),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("reconfigure")>=0){var r={object:e,name:t,type:"reconfigure"},o=0===this.changeset.length,i=this.deliver();this.changeset.push(r),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.setPrototypeOf=function(e,t){var n=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("setPrototype")>=0){var r={object:e,name:"__proto__",type:"setPrototype",oldValue:n},o=0===this.changeset.length,i=this.deliver();this.changeset.push(r),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("preventExtensions")>=0){var t={object:e,type:"preventExtensions"},n=0===this.changeset.length,r=this.deliver();this.changeset.push(t),n&&r(!1,"number"==typeof r.delay?r.delay:10)}return!0},Object.observe=function(t,n,r,o,i,a){return new e(t,n,r,o,i,a)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(n,r){t===n&&(e.__observerCallbacks__.splice(r,1),delete e.__observers__[r].callback,e.__observers__.splice(r,1))})}},Array.observe=function(e,t,n,r,o,i){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError("First argument to Array.observer is not an Array");n=n||["add","update","delete","splice"];var a=new Proxy(e,{get:function(t,r){return"unobserve"===r?function(e){return e?Object.unobserve(t,e):t.unobserve()}:"splice"===r?function(r,o){if("number"!=typeof r||"number"!=typeof o)throw new TypeError("First two arguments to Array splice are not number, number");var i=this.slice(r,r+o),a=arguments.length>1?arguments.length-2:0,c={object:e,type:"splice",index:r,removed:i,addedCount:a};if(t.splice.apply(t,arguments),n.indexOf("splice")>=0){r=0===s.__observer__.changeset.length;var u=s.__observer__.deliver();s.__observer__.changeset.push(c),r&&u(!1,"number"==typeof u.delay?u.delay:10)}}:"push"===r?function(e){return this.splice(this.length,0,e)}:"pop"===r?function(){return this.splice(this.length-1,1)}:"unshift"===r?function(e){return this.splice(0,0,e)}:"shift"===r?function(){return this.splice(0,1)}:t[r]}}),s=Object.observe(a,function(e){var r=e.filter(function(e){return"length"!==e.name&&"add"!==e.name&&(!n||n.indexOf(e.type)>=0)});r.length>0&&t(r)},n,r,o,i);return s},Array.unobserve=function(e,t){return e.unobserve(t)}}Object.deepObserve=function(e,t,n){var r=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()};function o(e,n){Object.keys(e).forEach(function(o){if(("object"===r(e[o])||"array"===r(e[o]))&&!e[o].hasOwnProperty("__observers__")){var i=n.slice(0);i.push(o),e[o]=Object.deepObserve(e[o],t,i)}})}return o(e,n=n||[]),Object.observe(e,function(e){var r=[];e.forEach(function(e){var t=(n.length>0?n.join(".")+".":"")+e.name;"update"!==e.type&&"add"!==e.type||o(e.object,n),r.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),function e(t,n,o,i,a){i instanceof Object?Object.keys(i).forEach(function(s){if(!o||o[s]!==i[s]){var c=o&&void 0!==o[s]?o[s]:void 0,u=void 0===c?"add":"update",d=a+"."+s;r.push({name:t,object:n,type:u,oldValue:c,newValue:i[s],keypath:d}),e(t,n,c,i[s],d)}}):o instanceof Object&&Object.keys(o).forEach(function(s){var c=null===i?"update":"delete",u=a+"."+s;r.push({name:t,object:n,type:c,oldValue:o[s],newValue:i,keypath:u}),e(t,n,o[s],void 0,u)})}(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(r)})}}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=f(n(18)),o=f(n(25)),i=f(n(3)),a=f(n(5)),s=f(n(33)),c=f(n(34)),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),d=f(n(129)),l=(n(19),f(n(130)));function f(e){return e&&e.__esModule?e:{default:e}}var p=u.getLogger("FileHypertyResource"),h=function(e){function t(e,n){(0,i.default)(this,t);var r=(0,s.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e,n));return r.metadata.resourceType="file",r}return(0,c.default)(t,e),(0,a.default)(t,[{key:"init",value:function(e){var t=this;if(!e)throw new Error("[FileHypertyResource.constructor] missing mandatory *file* input ");return new r.default(function(n,r){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,p.log("[FileHypertyResource.init] file: ",e),t._isSender)switch(e.type.split("/")[0]){case"image":t._getImagePreview(e).then(function(r){t._metadata.preview=r,t._content=e,n()});break;default:t._content=e,n()}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),n()})}},{key:"_getImagePreview",value:function(e){var t=new FileReader;return new r.default(function(n,r){l.default.resize(e,{width:100,height:100},function(e,r){r?(t.readAsDataURL(e),t.onload=function(e){n(e.target.result)}):(p.warn("[FileHypertyResource._getImagePreview] unable to create image preview from original image "),n(void 0))})})}},{key:"toMessage",value:function(){}},{key:"name",get:function(){return this._metadata.name}},{key:"preview",get:function(){return this._metadata.preview}}]),t}(d.default);t.default=h,e.exports=t.default},function(e,t,n){e.exports={default:n(126),__esModule:!0}},function(e,t,n){n(127);var r=n(0).Object;e.exports=function(e,t){return r.getOwnPropertyDescriptor(e,t)}},function(e,t,n){var r=n(12),o=n(46).f;n(44)("getOwnPropertyDescriptor",function(){return function(e,t){return o(r(e),t)}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=s(n(18)),o=s(n(3)),i=s(n(5)),a=s(n(124));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(){(0,o.default)(this,e)}return(0,i.default)(e,[{key:"createHypertyResource",value:function(e,t,n){var r=void 0;switch(t){case"file":r=new a.default(e,n);break;default:throw new Error("[HypertyResourceFactory.createHypertyResource] not supported type: ",t)}return r}},{key:"createHypertyResourceWithContent",value:function(e,t,n,o){var i=void 0;return new r.default(function(r){switch(t){case"file":i=new a.default(e,o);break;default:reject()}i.init(n).then(function(){return i.save()}).then(function(){r(i)})})}}]),e}();t.default=c,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=p(n(18)),o=p(n(25)),i=p(n(3)),a=p(n(5)),s=p(n(33)),c=p(n(100)),u=p(n(34)),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),l=n(19),f=p(n(118));function p(e){return e&&e.__esModule?e:{default:e}}var h=d.getLogger("HypertyResource"),v=function(e){function t(e,n){(0,i.default)(this,t);var r=(0,s.default)(this,(t.__proto__||(0,o.default)(t)).call(this,n)),a=r;return a.arraybufferSizeLimit=5242880,a._isSender=e,a._localStorageURL=a._parentObject._syncher._runtimeUrl+"/storage",r}return(0,u.default)(t,e),(0,a.default)(t,[{key:"save",value:function(){var e=this;return new r.default(function(t,n){var r={from:e._owner,to:e._localStorageURL,type:"create",body:{value:(0,l.deepClone)(e._metadata)}};r.body.value.content=e._content,e._bus.postMessage(r,function(r){h.info("[HypertyResource.save] reply: ",r),e._bus.removeResponseListener(e._owner,r.id),200===r.body.code?(r.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(r.body.value)),t()):n(r.body.code+" "+r.body.desc)},!1)})}},{key:"read",value:function(e){var t=this;return h.info("[HypertyResource.read] ",this),new r.default(function(n,r){if(t.content)n(t);else{var o=t._getBestContentURL(t._metadata.contentURL);h.log("Storage:",o);var i={from:t._owner,to:o.url,type:"read",body:{resource:o.url+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(i.body.p2pRequester=t.metadata.p2pRequester,i.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(i,e).then(function(e){h.info("[HypertyResource] - get locally the resource:",e),n(t)}).catch(function(i){h.warn("[HypertyResource] - get locally the resource fail",i);var a={from:t._owner,to:o.remoteURL,type:"read",body:{resource:o.remoteURL+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(a.body.p2pRequester=t.metadata.p2pRequester,a.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(a,e).then(function(e){h.warn("[HypertyResource] - get remotely the resource",e),n(t)}).catch(function(e){h.warn("[HypertyResource] - get remotely the resource fail",e),r(e.body.code+" "+e.body.desc)})})}})}},{key:"_getBestResource",value:function(e,t){var n=this;return new r.default(function(r,o){var i=setTimeout(function(){return n._bus.removeResponseListener(n._owner,a),e.body.code=408,e.body.desc="Response timeout",o(e)},3e3),a=n._bus.postMessage(e,function(e){h.log("[HypertyResource.read] reply: ",e);var a=e.id;switch(clearTimeout(i),e.body.code){case 200:n._content=e.body.value.content,e.body.value.size<n.arraybufferSizeLimit&&n.save(),n._bus.removeResponseListener(n._owner,a),r(e);break;case 183:t(e.body.value);break;default:n._bus.removeResponseListener(n._owner,a),o(e)}},!1)})}},{key:"delete",value:function(){var e=this;h.info("[HypertyResource.delete]",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:"delete",body:{resources:e.metadata.contentURL}};return new r.default(function(n){e._bus.postMessage(t,function(e){e.body.code<300?n(!0):n(!1)})})}},{key:"_getBestContentURL",value:function(e){var t=e[0],n=t.substr(t.lastIndexOf("/")+1);return{url:this._localStorageURL,resource:n,remoteURL:t.substr(0,t.lastIndexOf("/"))}}},{key:"resourceType",get:function(){return this.metadata.resourceType}},{key:"mimetype",get:function(){return this._metadata.type}},{key:"content",get:function(){return this._content}},{key:"contentURL",get:function(){return this._metadata.contentURL}},{key:"shareable",get:function(){var e=(0,c.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"metadata",this);return e.resourceType=this.resourceType,e}}]),t}(f.default);t.default=v,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(n(3)),o=i(n(5));function i(e){return e&&e.__esModule?e:{default:e}}var a="undefined"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),s=a&&"undefined"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),c="undefined"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,u=c||"undefined"!=typeof Uint8Array&&"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof atob,d="undefined"!=typeof FileReader||"undefined"!=typeof URL,l=function(){function e(){(0,r.default)(this,e)}return(0,o.default)(e,null,[{key:"resize",value:function(t,n,r){if("function"==typeof n&&(r=n,n={width:640,height:480}),n.width,n.height,!e.isSupported()||!t.type.match(/image.*/))return r(t,!1),!1;if(t.type.match(/image\/gif/))return r(t,!1),!1;var o=document.createElement("img");return o.onload=function(i){var a=o.width,s=o.height,u=!1;if(a>=s&&a>n.width?(s*=n.width/a,a=n.width,u=!0):s>n.height&&(a*=n.height/s,s=n.height,u=!0),u){var d=document.createElement("canvas");if(d.width=a,d.height=s,d.getContext("2d").drawImage(o,0,0,a,s),c)d.toBlob(function(e){r(e,!0)},t.type);else{var l=e._toBlob(d,t.type);r(l,!0)}}else r(t,!1)},e._loadImage(o,t),!0}},{key:"_toBlob",value:function(e,t){var n=e.toDataURL(t).split(","),r=void 0;r=n[0].indexOf("base64")>=0?atob(n[1]):decodeURIComponent(n[1]);for(var o=new ArrayBuffer(r.length),i=new Uint8Array(o),c=0;c<r.length;c+=1)i[c]=r.charCodeAt(c);var u=n[0].split(":")[1].split(";")[0],d=null;if(a)d=new Blob([s?i:o],{type:u});else{var l=new BlobBuilder;l.append(o),d=l.getBlob(u)}return d}},{key:"_loadImage",value:function(e,t,n){if("undefined"==typeof URL){var r=new FileReader;r.onload=function(t){e.src=t.target.result,n&&n()},r.readAsDataURL(t)}else e.src=URL.createObjectURL(t),n&&n()}},{key:"isSupported",value:function(){return"undefined"!=typeof HTMLCanvasElement&&u&&d}}]),e}();t.default=l,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=f(n(18)),o=f(n(78)),i=f(n(3)),a=f(n(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),c=n(19),u=f(n(132)),d=f(n(133)),l=f(n(135));function f(e){return e&&e.__esModule?e:{default:e}}var p=s.getLogger("Syncher"),h=function(){function e(t,n,r){(0,i.default)(this,e);var o=this;o._owner=t,o._bus=n,o._subURL=r.runtimeURL+"/sm",o._runtimeUrl=r.runtimeURL,o._p2pHandler=r.p2pHandler,o._p2pRequester=r.p2pRequester,o._reporters={},o._observers={},o._provisionals={},n.addListener(t,function(e){if(e.from!==t)switch(p.info("[Syncher] Syncher-RCV: ",e,o),e.type){case"forward":o._onForward(e);break;case"create":o._onRemoteCreate(e);break;case"delete":o._onRemoteDelete(e);break;case"execute":o._onExecute(e)}})}return(0,a.default)(e,[{key:"create",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"no name",s=arguments[6],u=arguments[7];if(!e)throw Error("[Syncher - Create] - You need specify the data object schema");if(!t)throw Error("[Syncher - Create] -The observers should be defined");u=u||{};var d=(0,o.default)({},u);return d.p2p=i,d.store=r,d.schema=e,d.authorise=t,d.p2pHandler=this._p2pHandler,d.p2pRequester=this._p2pRequester,d.data=n?(0,c.deepClone)(n):{},d.name=0===a.length?"no name":a,d.reporter=u.hasOwnProperty("reporter")&&"boolean"!=typeof u.reporter?u.reporter:this._owner,d.resume=!1,u?(d.mutual=!u.hasOwnProperty("mutual")||u.mutual,d.name=u.hasOwnProperty("name")?u.name:d.name):d.mutual=!0,u.hasOwnProperty("reuseURL")&&(d.resource=u.reuseURL),s&&(d.identity=s),p.log("[syncher - create] - create Reporter - createInput: ",d),this._create(d)}},{key:"resumeReporters",value:function(e){return p.log("[syncher - create] - resume Reporter - criteria: ",e),(0,o.default)(e,{resume:!0}),this._resumeCreate(e)}},{key:"subscribe",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],a=arguments[5],s={};return s.p2p=r,s.store=n,s.schema=e,s.resource=t,a&&(s.identity=a),s.mutual=i,p.log("[syncher - subscribe] - subscribe criteria: ",s),(0,o.default)(s,{resume:!1}),this._subscribe(s)}},{key:"resumeObservers",value:function(e){var t=e||{};return(0,o.default)(t,{resume:!0}),this._resumeSubscribe(t)}},{key:"read",value:function(e){var t=this,n={type:"read",from:t._owner,to:e};return new r.default(function(e,r){t._bus.postMessage(n,function(i){p.log("[Syncher.read] reply: ",i);var a={},s={},c=0;if(i.body.code<300)if(i.body.value.hasOwnProperty("responses"))if(0===c)s=i.body.value,++c;else{delete i.body.value.responses;var u=void 0;for(u in i.body.value)a.hasOwnProperty(u)||(a[u]={}),(0,o.default)(a[u],i.body.value[u]);++c===s.responses&&(s.childrenObjects=a,delete s.responses,t._bus.removeResponseListener(n.from,i.id),e(s))}else t._bus.removeResponseListener(n.from,i.id),e(i.body.value);else r(i.body.desc)},!1)})}},{key:"onNotification",value:function(e){this._onNotificationHandler=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"_create",value:function(e){var t=this;return new r.default(function(n,r){var i=(0,o.default)({},e),a=e.resume;i.created=(new Date).toISOString(),i.runtime=t._runtimeUrl;var s=(0,c.deepClone)(i);delete s.p2p,delete s.store,delete s.observers,delete s.identity;var d={type:"create",from:t._owner,to:t._subURL,body:{resume:a,value:s}};d.body.schema=i.schema,i.p2p&&(d.body.p2p=i.p2p),i.store&&(d.body.store=i.store),i.identity&&(d.body.identity=i.identity),p.log("[syncher._create]: ",i,d),t._bus.postMessage(d,function(o){if(p.log("[syncher - create] - create-response: ",o),200===o.body.code){i.url=o.body.resource,i.status="live",i.syncher=t,i.childrens=o.body.childrenResources;var a=t._reporters[i.url];a||(a=new u.default(i),t._reporters[i.url]=a),a.inviteObservers(e.authorise,e.p2p),n(a)}else r(o.body.desc)})})}},{key:"_resumeCreate",value:function(e){var t=this,n=this;return new r.default(function(r,o){var i=e.resume,a={type:"create",from:n._owner,to:n._subURL,body:{resume:i}};p.log("[syncher - create]: ",e,a),e&&(a.body.value=e,e.hasOwnProperty("reporter")?a.body.value.reporter=e.reporter:a.body.value.reporter=n._owner),e.p2p&&(a.body.p2p=e.p2p),e.store&&(a.body.store=e.store),e.observers&&(a.body.authorise=e.observers),e.identity&&(a.body.identity=e.identity),p.log("[syncher._resumeCreate] - resume message: ",a),n._bus.postMessage(a,function(e){if(p.log("[syncher._resumeCreate] - create-resumed-response: ",e),200===e.body.code){var i=e.body.value;for(var a in i){var s=i[a];s.data=(0,c.deepClone)(s.data)||{},s.childrenObjects&&(s.childrenObjects=(0,c.deepClone)(s.childrenObjects)),s.mutual=!1,s.resume=!0,s.status="live",s.syncher=n,p.log("[syncher._resumeCreate] - create-resumed-dataObjectReporter",s);var d=new u.default(s);s.childrenObjects&&d.resumeChildrens(s.childrenObjects),n._reporters[s.url]=d}r(n._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?r({}):o(e.body.desc)})})}},{key:"_subscribe",value:function(e){var t=this;return new r.default(function(n,r){var o={type:"subscribe",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(o.body.p2p=e.p2p),e.hasOwnProperty("store")&&(o.body.store=e.store),e.hasOwnProperty("schema")&&(o.body.schema=e.schema),e.hasOwnProperty("identity")&&(o.body.identity=e.identity),e.hasOwnProperty("resource")&&(o.body.resource=e.resource)),o.body.resume=e.resume,e.hasOwnProperty("mutual")&&(o.body.mutual=e.mutual),p.log("[syncher_subscribe] - subscribe message: ",e,o),t._bus.postMessage(o,function(o){p.log("[syncher] - subscribe-response: ",o);var i=o.body.resource,a=t._provisionals[i];if(delete t._provisionals[i],a&&a._releaseListeners(),o.body.code<200)p.log("[syncher] - new DataProvisional: ",o.body.childrenResources,i),a=new l.default(t._owner,i,t._bus,o.body.childrenResources),t._provisionals[i]=a;else if(200===o.body.code){p.log("[syncher] - new Data Object Observer: ",o,t._provisionals);var s=o.body.value;s.syncher=t,s.p2p=e.p2p,s.store=e.store,s.identity=e.identity,s.resume=!1,s.mutual=e.mutual;var c=t._observers[i];c?c.sync():(c=new d.default(s),t._observers[i]=c),p.log("[syncher] - new Data Object Observer already exist: ",c),n(c),a&&a.apply(c)}else r(o.body.desc)})})}},{key:"_resumeSubscribe",value:function(e){var t=this,n=this;return new r.default(function(r,o){var i={type:"subscribe",from:n._owner,to:n._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(i.body.p2p=e.p2p),e.hasOwnProperty("store")&&(i.body.store=e.store),e.hasOwnProperty("schema")&&(i.body.schema=e.schema),e.hasOwnProperty("identity")&&(i.body.identity=e.identity),e.hasOwnProperty("resource")&&(i.body.resource=e.url)),i.body.resume=e.resume;var a=e.mutual;e.hasOwnProperty("mutual")&&(i.body.mutual=a),p.log("[syncher] - subscribe message: ",e,i),n._bus.postMessage(i,function(e){p.log("[syncher] - subscribe-resumed-response: ",e);var i=e.body.resource,a=n._provisionals[i];if(delete n._provisionals[i],a&&a._releaseListeners(),e.body.code<200)p.log("[syncher] - resume new DataProvisional: ",e,i),a=new l.default(n._owner,i,n._bus,e.body.childrenResources),n._provisionals[i]=a;else if(200===e.body.code){var s=e.body.value;for(var u in s){var f=s[u];p.log("[syncher] - Resume Object Observer: ",e,f,n._provisionals),f.childrenObjects&&(f.childrenObjects=(0,c.deepClone)(f.childrenObjects)),f.data=(0,c.deepClone)(f.data)||{},f.resume=!0,f.syncher=n,p.log("[syncher._resumeSubscribe] - create new dataObject: ",f);var h=new d.default(f);f.childrenObjects&&h.resumeChildrens(f.childrenObjects),p.log("[syncher._resumeSubscribe] - new dataObject",h),n._observers[h.url]=h,n._provisionals[h.url]&&n._provisionals[h.url].apply(h)}r(n._observers),t._onObserversResume&&t._onObserversResume(n._observers)}else 404===e.body.code?r({}):o(e.body.desc)})})}},{key:"_onForward",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:"_onRemoteCreate",value:function(e){var t=this,n=e.from.slice(0,-13),r=(0,c.divideURL)(n).domain,o={type:e.type,from:e.body.source,url:n,domain:r,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(n){var r=200;n&&(r=n),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:r}})}};t._onNotificationHandler&&(p.info("[Syncher] NOTIFICATION-EVENT: ",o),t._onNotificationHandler(o))}},{key:"_onRemoteDelete",value:function(e){var t=this,n=e.body.resource,r=t._observers[n],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[n],r){var i={type:e.type,url:n,identity:e.body.identity,ack:function(n){var o=200;n&&(o=n),200===o&&r.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(p.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:"_onExecute",value:function(e){var t=this,n={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+"/registry/"||e.from===t._runtimeUrl+"/registry")&&e.body&&e.body.method&&"close"===e.body.method&&t._onClose){var r={type:"close",ack:function(e){e&&(n.body.code=e),t._bus.postMessage(n)}};p.info("[Syncher] Close-EVENT: ",r),t._onClose(r)}else t._bus.postMessage(n)}},{key:"onReportersResume",value:function(e){this._onReportersResume=e}},{key:"onObserversResume",value:function(e){this._onObserversResume=e}},{key:"owner",get:function(){return this._owner}},{key:"reporters",get:function(){return this._reporters}},{key:"observers",get:function(){return this._observers}}]),e}();t.default=h,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=v(n(42)),o=v(n(58)),i=v(n(18)),a=v(n(25)),s=v(n(3)),c=v(n(5)),u=v(n(33)),d=v(n(100)),l=v(n(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),p=v(n(122)),h=n(19);function v(e){return e&&e.__esModule?e:{default:e}}var y=f.getLogger("DataObjectReporter"),m=function(e){function t(e){(0,s.default)(this,t);var n=(0,u.default)(this,(t.__proto__||(0,a.default)(t)).call(this,e)),r=n;return r._subscriptions={},r._syncObj.observe(function(e){y.log("[Syncher.DataObjectReporter] "+r.url+" publish change: ",e),r._onChange(e)}),r._allocateListeners(),r.invitations=[],r._childrenSizeThreshold=5e4,n}return(0,l.default)(t,e),(0,c.default)(t,[{key:"_allocateListeners",value:function(){(0,d.default)(t.prototype.__proto__||(0,a.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(y.log("[Syncher.DataObjectReporter] listener "+e._url+" Received: ",t),t.type){case"response":e._onResponse(t);break;case"read":e._onRead(t);break;case"execute":e._onExecute(t);break;case"create":e._onChildCreate(t)}})}},{key:"_releaseListeners",value:function(){(0,d.default)(t.prototype.__proto__||(0,a.default)(t.prototype),"_releaseListeners",this).call(this),this._objectListener.remove()}},{key:"inviteObservers",value:function(e,t){var n=this,r=e;r.length>0&&(y.log("[Syncher.DataObjectReporter] InviteObservers ",r,n._metadata),r.forEach(function(e){var r=new i.default(function(r,o){var i={type:"create",from:n._syncher._owner,to:n._syncher._subURL,body:{resume:!1,resource:n._url,schema:n._schema,value:n._metadata,authorise:[e]}};t&&(i.body.p2p=t),n.data.mutual||(i.body.mutual=n.data.mutual),n._bus.postMessage(i,function(t){y.log("[Syncher.DataObjectReporter] Invitation reply ",t);var n={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:"Unknown"};n.code<300?r(n):n.code>=300&&o(n)})});n.invitations.push(r)}))}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(t){y.log(t);var n={type:"delete",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(n,function(t){y.log("DataObjectReporter-DELETE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:"onSubscription",value:function(e){this._onSubscriptionHandler=e}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"onRead",value:function(e){this._onReadHandler=e}},{key:"onExecute",value:function(e){this._onExecuteHandler=e}},{key:"_onForward",value:function(e){switch(y.log("DataObjectReporter-RCV: ",e),e.body.type){case"subscribe":this._onSubscribe(e);break;case"unsubscribe":this._onUnSubscribe(e)}}},{key:"_onSubscribe",value:function(e){var t=this,n=e.body.from,r=(0,h.divideURL)(n),o=r.domain,i=!0;e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i=!1),y.log("[DataObjectReporter._onSubscribe]",e,o,r);var a={type:e.body.type,url:n,domain:o,identity:e.body.identity,nutual:i,accept:function(){var r={url:n,status:"live"};t._subscriptions[n]=r,t.metadata.subscriptions&&t.metadata.subscriptions.push(r.url);var o=(0,h.deepClone)(t._metadata);o.data=(0,h.deepClone)(t.data),o.version=t._version;var i={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:o}};return e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i.body.mutual=e.body.mutual,t.data.mutual=!1),t._bus.postMessage(i),r},reject:function(n){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:403,desc:n}})}};t._onSubscriptionHandler&&(y.log("SUBSCRIPTION-EVENT: ",a),t._onSubscriptionHandler(a))}},{key:"_onUnSubscribe",value:function(e){var t=e.body.from,n=(0,h.divideURL)(t),r=n.domain;y.log("[DataObjectReporter._onUnSubscribe]",e,r,n),delete this._subscriptions[t],delete this.invitations[t];var o={type:e.body.type,url:t,domain:r,identity:e.body.identity};this._onSubscriptionHandler&&(y.log("UN-SUBSCRIPTION-EVENT: ",o),this._onSubscriptionHandler(o))}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.from,code:e.body.code};this._onResponseHandler&&(y.log("RESPONSE-EVENT: ",t),this._onResponseHandler(t))}},{key:"_onRead",value:function(e){var t=this,n=(0,o.default)(t.childrensJSON).length>t._childrenSizeThreshold,i={type:e.type,url:e.from,accept:function(){n?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(n){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:n}})}},a=[];t.metadata.subscriptions?a=t.metadata.subscriptions:t._subscriptions&&(a=(0,r.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=a.indexOf(e.from)?n?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(y.log("READ-EVENT: ",i),t._onReadHandler(i))}},{key:"_syncReply",value:function(e){var t=(0,h.deepClone)(this.metadata);t.data=(0,h.deepClone)(this.data),t.childrenObjects=(0,h.deepClone)(this.childrensJSON),t.version=this._version;var n={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:t}};this._bus.postMessage(n)}},{key:"_syncReplyForLargeData",value:function(e){var t=this,n=(0,h.deepClone)(t.metadata);n.data=(0,h.deepClone)(t.data),n.version=t._version,delete n.childrenObjects;var r=void 0,i=[],a={};for(r in t._childrenObjects){var s=void 0;for(s in a[r]={},t._childrenObjects[r])(0,o.default)(a).length>t._childrenSizeThreshold&&(i.push(a),(a={})[r]={}),a[r][s]={},a[r][s].value=t._childrenObjects[r][s].metadata,a[r][s].identity=t._childrenObjects[r][s].identity}i.push(a),n.responses=i.length+1;var c={id:e.id,type:"response",from:e.to,to:e.from,body:{code:100,value:n}};t._bus.postMessage(c),i.forEach(function(e){var r=(0,h.deepClone)(c);r.body.value=e,r.body.value.responses=n.responses,setTimeout(function(){t._bus.postMessage(r)},50)})}},{key:"_onExecute",value:function(e){var t=this;if(!e.body.method)throw e;var n={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}},r={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(n)},reject:function(n){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:n}})}};t._onExecuteHandler&&(y.log("[DataObjectReporter] EXECUTE-EVENT: ",r),t._onExecuteHandler(r))}},{key:"subscriptions",get:function(){return this._subscriptions}},{key:"childrensJSON",get:function(){var e={},t=void 0;for(t in this._childrenObjects){var n=void 0;for(n in e[t]={},this._childrenObjects[t])e[t][n]={},e[t][n].value=this._childrenObjects[t][n].metadata,e[t][n].identity=this._childrenObjects[t][n].identity}return e}}]),t}(p.default);t.default=m,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=v(n(42)),o=v(n(78)),i=v(n(18)),a=v(n(25)),s=v(n(3)),c=v(n(5)),u=v(n(33)),d=v(n(100)),l=v(n(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),p=n(19),h=v(n(122));function v(e){return e&&e.__esModule?e:{default:e}}var y=f.getLogger("DataObjectObserver"),m="start",_="exact",b=function(e){function t(e){(0,s.default)(this,t);var n=(0,u.default)(this,(t.__proto__||(0,a.default)(t)).call(this,e)),r=n;return r._version=e.version,r._filters={},r._syncObj.observe(function(e){r._onFilter(e)}),r._allocateListeners(),n}return(0,l.default)(t,e),(0,c.default)(t,[{key:"sync",value:function(){var e=this;return y.info("[DataObjectObserver_sync] synchronising "),new i.default(function(t,n){e._syncher.read(e._metadata.url).then(function(n){y.info("[DataObjectObserver_sync] value to sync: ",n),(0,o.default)(e.data,(0,p.deepClone)(n.data)),e._version=n.version,e._metadata.lastModified=n.lastModified,n.childrenObjects?(e.resumeChildrens(n.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){y.info("[DataObjectObserver_sync] sync failed: ",e),t(!1)})})}},{key:"_storeChildrens",value:function(){var e=this,t={};(0,r.default)(e._childrenObjects).forEach(function(n){var o=e._childrenObjects[n];t[n]={},(0,r.default)(o).forEach(function(e){t[n][e]={},t[n][e].value=o[e].metadata,t[n][e].identity=o[e].identity})});var n={from:e._owner,to:e._syncher._subURL,type:"create",body:{resource:e._url,attribute:"childrenObjects",value:t}};e._bus.postMessage(n)}},{key:"_allocateListeners",value:function(){(0,d.default)(t.prototype.__proto__||(0,a.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+"/changes",function(t){"update"===t.type&&(y.log("DataObjectObserver-"+e._url+"-RCV: ",t),e._changeObject(e._syncObj,t))})}},{key:"_releaseListeners",value:function(){(0,d.default)(t.prototype.__proto__||(0,a.default)(t.prototype),"_releaseListeners",this).call(this),this._changeListener.remove()}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:"unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){y.log("DataObjectObserver-UNSUBSCRIBE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:"onChange",value:function(e,t){var n=e,r={type:_,callback:t},o=e.indexOf("*");o===e.length-1&&(0===o?r.type="any":(r.type=m,n=e.substr(0,e.length-1))),this._filters[n]=r}},{key:"_onFilter",value:function(e){var t=this;(0,r.default)(t._filters).forEach(function(n){var r=t._filters[n];"any"===r.type?r.callback(e):r.type===m?0===e.field.indexOf(n)&&r.callback(e):r.type===_&&e.field===n&&r.callback(e)})}},{key:"onDisconnected",value:function(e){var t=this;return new i.default(function(n,r){t._subscribeRegistration().then(function(){t._onDisconnected=e,n()}).catch(function(e){return r(e)})})}},{key:"_subscribeRegistration",value:function(){var e=this,t={type:"subscribe",from:this._owner,to:this._syncher._runtimeUrl+"/subscriptions",body:{resources:[this._url+"/registration"]}};return new i.default(function(n,r){e._bus.postMessage(t,function(t){y.log("[DataObjectObserver._subscribeRegistration] "+e._url+" rcved reply ",t),200===t.body.code?(e._generateListener(e._url+"/registration"),n()):(y.error("Error subscribing registration status for ",e._url),r("Error subscribing registration status for "+e._url))})})}},{key:"_generateListener",value:function(e){var t=this;t._bus.addListener(e,function(e){y.log("[DataObjectObserver.registrationNotification] "+t._url+": ",e),e.body.value&&"disconnected"===e.body.value&&t._onDisconnected&&(y.log("[DataObjectObserver] "+t._url+": was disconnected ",e),t._onDisconnected())})}},{key:"execute",value:function(e,t){var n=this,r=this;return new i.default(function(o,i){var a={type:"execute",from:n._owner,to:r._url,body:{method:e,params:t}};r._bus.postMessage(a,function(t){y.log("[DataObjectObserver.execute] "+r._url+" rcved reply ",t),200===t.body.code?o():(y.warn("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"),i("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"))})})}}]),t}(h.default);t.default=b,e.exports=t.default},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(n(3)),o=i(n(5));function i(e){return e&&e.__esModule?e:{default:e}}var a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)).getLogger("DataProvisional"),s=function(){function e(t,n,o,i){(0,r.default)(this,e),this._owner=t,this._url=n,this._bus=o,this._children=i,this._changes=[],this._allocateListeners()}return(0,o.default)(e,[{key:"_allocateListeners",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){a.log("DataProvisional-"+e._url+"-RCV: ",t),e._changes.push(t)})}},{key:"_releaseListeners",value:function(){this._listener.remove()}},{key:"apply",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:"children",get:function(){return this._children}}]),e}();t.default=s,e.exports=t.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NotificationHandler=t.DataObjectObserver=t.DataObjectReporter=t.Syncher=void 0;var r=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(22)),o=c(n(131)),i=c(n(132)),a=c(n(133)),s=c(n(197));function c(e){return e&&e.__esModule?e:{default:e}}var u=r.getLogger("Syncher"),d=r.getLogger("DataObject"),l=r.getLogger("DataObjectChild"),f=r.getLogger("DataObjectObserver"),p=r.getLogger("DataObjectReporter"),h=r.getLogger("DataProvisional");u.setLevel(0),d.setLevel(0),l.setLevel(0),f.setLevel(0),p.setLevel(0),h.setLevel(0),t.Syncher=o.default,t.DataObjectReporter=i.default,t.DataObjectObserver=a.default,t.NotificationHandler=s.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(3)),o=a(n(5)),i=n(19);function a(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(t){if((0,r.default)(this,e),!t)throw Error("[NotificationHandler Constructor] bus input is mandatory");this._bus=t,this._onNotificationHandler={}}return(0,o.default)(e,[{key:"onNotification",value:function(e,t){this._onNotificationHandler[e]=t}},{key:"onCreate",value:function(e){var t=this,n=e.body.hasOwnProperty("resource")?e.body.resource:e.from.slice(0,-13),r=(0,i.divideURL)(n).domain,o=n.split("://")[0],a=function(n){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:400,desc:"Bad Request: "+n}})};e.body.hasOwnProperty("source")||a("Missing source"),e.body.hasOwnProperty("schema")||a("Missing schema"),e.body.hasOwnProperty("value")||a("Missing value"),e.body.hasOwnProperty("identity")||a("Missing identity");var s={type:e.type,from:e.body.source,url:n,domain:r,schema:e.body.schema,value:e.body.value,identity:e.body.identity,to:e.to,via:e.body.via,ack:function(n){var r=200;n&&(r=n),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:r}})},error:function(e){a(e)}};t._onNotificationHandler[o]&&(console.info("[NotificationHandler] NOTIFICATION-EVENT: ",s),t._onNotificationHandler[o](s))}},{key:"onDelete",value:function(e){var t=this,n=e.body.resource,r=t._observers[n],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[n],r){var i={type:e.type,url:n,identity:e.body.identity,ack:function(n){var o=200;n&&(o=n),200===o&&r.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(log.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}}]),e}();t.default=s,e.exports=t.default}])})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();n(4);var i=s(n(14)),a=s(n(15));function s(e){return e&&e.__esModule?e:{default:e}}var c=function(){function e(t,n,r,o){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The own url (myUrl) is a needed parameter");if(!n)throw new Error("The syncher is a needed parameter");if(!r)throw new Error("The configuration is a needed parameter");this._domain=this._divideURL(t).domain,this._objectDescURL="hyperty-catalogue://catalogue."+this._domain+"/.well-known/dataschema/Connection",this._myUrl=t,this._syncher=n,this._configuration=r,this._caller=o,this._dataObjectObserver,this._dataObjectReporter,this._peerUrl,this._dataChannel,this._onStatusUpdate,this._remoteRuntimeURL,this._receivers={},this._senders={},this._maxSize=16384,this._threshold=0,this._peerConnection=this._createPeerConnection()}return o(e,[{key:"_createPeerConnection",value:function(){var e=this,t=this._peerConnection;return t||(t=new RTCPeerConnection(this._configuration),console.log("[P2P-ConnectionController]: created PeerConnection"),t.ondatachannel=function(t){console.log("[P2P-ConnectionController]: ondatachannel -> remote side has created a datachannel"),e._dataChannel=t.channel,e._addDataChannelListeners()},t.onicecandidate=function(t){if(console.log("[P2P-ConnectionController]: icecandidateevent occured: ",t),t.candidate){var n={type:"candidate",candidate:t.candidate.candidate,sdpMid:t.candidate.sdpMid,sdpMLineIndex:t.candidate.sdpMLineIndex};e._dataObjectReporter.data.iceCandidates.push(n)}}),t}},{key:"observe",value:function(e){var t=this;return this._peerUrl=e.from,this._remoteRuntimeURL=e.value.runtime,new Promise(function(n,r){t._syncher.subscribe(t._objectDescURL,e.url).then(function(e){console.info("+[P2P-ConnectionController] got Data Object Observer",e),t._setupObserver(e),n()}).catch(function(e){console.error(e),r()})})}},{key:"report",value:function(e,t){var n=this;return this._peerUrl||(this._peerUrl=e),new Promise(function(e,r){n._peerConnection||(n._peerConnection=n._createPeerConnection()),n._caller&&(console.log("[P2P-ConnectionController]: we are in caller role --\x3e createDataChannel ..."),n._dataChannel=n._peerConnection.createDataChannel("P2PChannel"),n._dataChannel.binaryType="arraybuffer",n._dataChannel.bufferedAmountLowThreshold=n._threshold,console.log("P2P: datachannel object",n._dataChannel),n._addDataChannelListeners());var o={name:"P2PConnection",status:"",owner:n._myUrl,runtimeURL:t,connectionDescription:{},iceCandidates:[]},i=Object.assign({resources:["data"]});n._syncher.create(n._objectDescURL,[n._peerUrl],o,!1,!1,"p2p connection",{},i).then(function(t){console.info("[P2P-ConnectionController] Created WebRTC Object Reporter",t),n._dataObjectReporter=t,n._dataObjectReporter.onSubscription(function(e){e.accept()});(n._caller?n._peerConnection.createOffer({offerToReceiveAudio:!1,offerToReceiveVideo:!1}):n._peerConnection.createAnswer()).then(function(t){console.log("[P2P-ConnectionController] SDP created",t),n._peerConnection.setLocalDescription(new RTCSessionDescription(t),function(){console.info("[P2P-ConnectionController] localDescription set successfully"),n._dataObjectReporter.data.connectionDescription.sdp=t.sdp,n._dataObjectReporter.data.connectionDescription.type=t.type,e()}).catch(function(e){r("setting of localDescription failed: ",e)})}).catch(function(e){console.error(e),r(e)})})})}},{key:"onMessage",value:function(e){this._onDataChannelMessage=e}},{key:"onStatusUpdate",value:function(e){this._onStatusUpdate=e}},{key:"sendMessage",value:function(e){var t=this;if(console.log("[P2P-ConnectionController] --\x3e starting sending data to ",e.to),"open"!=t._dataChannel.readyState)throw Error("[P2PStub.ConnectionController.sendMessage] data channel is not opened. droping message: ",e);var n=new a.default(e,t._dataChannel),r=e.from+e.to+e.id;t._senders[r]=n,n.sendData(),n.onProgress(function(e){console.debug("[P2P-ConnectionController] sending progress ",e)}),n.onSent(function(){console.debug("[P2P-ConnectionController] data was sent to:",e.to),delete t._senders[r]})}},{key:"cleanup",value:function(){delete this._dataObjectReporter,delete this._dataObjectObserver,this._dataChannel&&this._dataChannel.close(),this._peerConnection&&this._peerConnection.close(),this._dataChannel=null,this._peerConnection=null}},{key:"_addDataChannelListeners",value:function(){var e=this;this._dataChannel.onopen=function(){e._onDataChannelOpen()},this._dataChannel.onerror=function(t){e._onDataChannelError(t)},this._dataChannel.onmessage=function(t){var n=e,o=t.data;"object"!=(void 0===o?"undefined":r(o))?n._onTextMessage(o):n._onBinaryMessage(o)},this._dataChannel.onclose=function(){e._onDataChannelClose()}}},{key:"_onTextMessage",value:function(e){var t=this,n=JSON.parse(e);if(!n.uuid)throw Error("[P2P-ConnectionController.onmessage] message is invalid",n);if(n.data.textMessage.hasOwnProperty("to")&&n.data.textMessage.to===t._myUrl)t._onMyMessage(n.data.textMessage);else if(t._receivers[n.uuid])t._receivers[n.uuid].receiveText(n);else{if(!n.data||!n.data.textMessage||!n.data.textMessage.from)throw Error("[P2P-ConnectionController.onmessage] initial packet is invalid",n);if(console.debug("[P2P-ConnectionController] <-- incoming msg : ",n),0===n.data.dataSize){var r=n.data.textMessage;this._onDataChannelMessage(r)}else{var o=new i.default(n.data);o.onReceived(function(e,r){console.debug("[P2P-ConnectionController] complete message received from: "+e.from+" latency: "+r),t._onDataChannelMessage(e),delete t._receivers[n.uuid]}),o.onProgress(function(e){var n={from:o.from,to:o.to,id:o.id,type:o.type,body:{code:183,desc:"Message reception is progressing",value:e}};console.debug("[P2P-ConnectionController] onprogress sending provisional response: ",n),t._syncher._bus.postMessage(n)}),t._receivers[n.uuid]=o}}}},{key:"_onMyMessage",value:function(e){if(e.hasOwnProperty("body")&&e.body.hasOwnProperty("resource")){var t=e.body.resource;this._senders[t]&&"delete"===e.type&&(console.log("[ConnectionController._onMyMessage] cancelling: ",this._senders[t]),this._senders[t].cancel,delete this._senders[t])}}},{key:"_onBinaryMessage",value:function(e){var t=String.fromCharCode.apply(null,new Uint16Array(e.slice(0,24)));if(this._receivers[t])this._receivers[t].receiveBinary(e.slice(24));else{var n=Object.keys(this._receivers);if(1!==n.length)throw Error("[P2P-ConnectionController.onBinaryMessage] invalid binary packet",e);var r=n[0],o={from:this._receivers[r].from,to:this._receivers[r].to,id:this._receivers[r].id,type:this._receivers[r].type,body:{code:500,desc:"Reception error"}};console.error("[P2P-ConnectionController.onBinaryMessage] malformed packet: ",e),this._syncher._bus.postMessage(o),this._cancelSent(o.from+o.to+o.id),delete this._receivers[r]}}},{key:"_cancelSent",value:function(e){var t={from:this._myUrl,to:this._peerUrl,type:"delete",body:{resource:e}};console.info("[P2P-ConnectionController._cancelSent] : ",t),this.sendMessage(t)}},{key:"_setupObserver",value:function(e){var t=this;this._dataObjectObserver=e;var n=this._dataObjectObserver.data;console.info("[P2P-ConnectionController]: _setupObserver Peer Data: ",n),n.hasOwnProperty("connectionDescription")&&this._processPeerInformation(n.connectionDescription),n.hasOwnProperty("iceCandidates")&&n.iceCandidates.forEach(function(e){console.log("[P2P-ConnectionController]: handleObserverObject for ice",e),t._processPeerInformation(e)}),e.onChange("*",function(e){console.debug("[P2P-ConnectionController]: Observer on change message: ",e),e.data[0]?(console.log(">>event.data[0]",e.data[0]),t._processPeerInformation(e.data[0])):(console.log("[P2P-ConnectionController]: >>event",e),t._processPeerInformation(e.data))})}},{key:"_processPeerInformation",value:function(e){console.info("[P2P-ConnectionController]: processPeerInformation: ",JSON.stringify(e)),this._peerConnection?("offer"!==e.type&&"answer"!==e.type||(console.info("[P2P-ConnectionController]: Process Connection Description: ",e),this._peerConnection.setRemoteDescription(new RTCSessionDescription(e)).then(function(){console.log("[P2P-ConnectionController]: remote success")}).catch(function(e){console.log("[P2P-ConnectionController]: remote error: ",e)})),e.candidate&&(console.info("Process Ice Candidate: ",e),this._peerConnection.addIceCandidate(new RTCIceCandidate({candidate:e.candidate})))):console.info("[P2P-ConnectionController]: processPeerInformation: no PeerConnection existing --\x3e maybe in disconnecting process. --\x3e ignoring this update")}},{key:"_onDataChannelOpen",value:function(){console.log("[P2P-ConnectionController] DataChannel opened"),this._onStatusUpdate&&this._onStatusUpdate("live",void 0,this._remoteRuntimeURL)}},{key:"_onDataChannelError",value:function(e){console.log("[P2P-ConnectionController] DataChannel error: ",e),this._onStatusUpdate&&this._onStatusUpdate("disconnected",""+e,this._remoteRuntimeURL)}},{key:"_onDataChannelClose",value:function(){console.log("[P2P-ConnectionController] DataChannel closed: "),this._onStatusUpdate&&this._onStatusUpdate("disconnected","closed",this._remoteRuntimeURL)}},{key:"_divideURL",value:function(e){var t=e.replace(/([a-zA-Z-]*):\/\/(?:\.)?([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$2,$3").split(",");return t[0]===e&&(t[0]="https",t[1]=e),{type:t[0],domain:t[1],identity:t[2]}}}]),e}();t.default=c},function(e,t,n){"use strict";!function(){var t=n(0),r=t.log,o=t.browserDetails;e.exports.browserDetails=o,e.exports.extractVersion=t.extractVersion,e.exports.disableLog=t.disableLog;var i=n(5)||null,a=n(7)||null,s=n(11)||null,c=n(13)||null;switch(o.browser){case"chrome":if(!i||!i.shimPeerConnection)return void r("Chrome shim is not included in this adapter release.");r("adapter.js shimming chrome."),e.exports.browserShim=i,i.shimGetUserMedia(),i.shimMediaStream(),t.shimCreateObjectURL(),i.shimSourceObject(),i.shimPeerConnection(),i.shimOnTrack(),i.shimGetSendersWithDtmf();break;case"firefox":if(!s||!s.shimPeerConnection)return void r("Firefox shim is not included in this adapter release.");r("adapter.js shimming firefox."),e.exports.browserShim=s,s.shimGetUserMedia(),t.shimCreateObjectURL(),s.shimSourceObject(),s.shimPeerConnection(),s.shimOnTrack();break;case"edge":if(!a||!a.shimPeerConnection)return void r("MS edge shim is not included in this adapter release.");r("adapter.js shimming edge."),e.exports.browserShim=a,a.shimGetUserMedia(),t.shimCreateObjectURL(),a.shimPeerConnection(),a.shimReplaceTrack();break;case"safari":if(!c)return void r("Safari shim is not included in this adapter release.");r("adapter.js shimming safari."),e.exports.browserShim=c,c.shimCallbacksAPI(),c.shimAddStream(),c.shimOnAddStream(),c.shimGetUserMedia();break;default:r("Unsupported browser!")}}()},function(e,t,n){"use strict";var r=n(0).log,o=n(0).browserDetails,i={shimMediaStream:function(){window.MediaStream=window.MediaStream||window.webkitMediaStream},shimOnTrack:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this._ontrack},set:function(e){var t=this;this._ontrack&&(this.removeEventListener("track",this._ontrack),this.removeEventListener("addstream",this._ontrackpoly)),this.addEventListener("track",this._ontrack=e),this.addEventListener("addstream",this._ontrackpoly=function(e){e.stream.addEventListener("addtrack",function(n){var r;r=RTCPeerConnection.prototype.getReceivers?t.getReceivers().find(function(e){return e.track.id===n.track.id}):{track:n.track};var o=new Event("track");o.track=n.track,o.receiver=r,o.streams=[e.stream],t.dispatchEvent(o)}),e.stream.getTracks().forEach(function(n){var r;r=RTCPeerConnection.prototype.getReceivers?t.getReceivers().find(function(e){return e.track.id===n.id}):{track:n};var o=new Event("track");o.track=n,o.receiver=r,o.streams=[e.stream],this.dispatchEvent(o)}.bind(this))}.bind(this))}})},shimGetSendersWithDtmf:function(){if("object"==typeof window&&window.RTCPeerConnection&&!("getSenders"in RTCPeerConnection.prototype)&&"createDTMFSender"in RTCPeerConnection.prototype){RTCPeerConnection.prototype.getSenders=function(){return this._senders||[]};var e=RTCPeerConnection.prototype.addStream,t=RTCPeerConnection.prototype.removeStream;RTCPeerConnection.prototype.addTrack||(RTCPeerConnection.prototype.addTrack=function(e,t){var n=this;if("closed"===n.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");var r=[].slice.call(arguments,1);if(1!==r.length||!r[0].getTracks().find(function(t){return t===e}))throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.","NotSupportedError");if(n._senders=n._senders||[],n._senders.find(function(t){return t.track===e}))throw new DOMException("Track already exists.","InvalidAccessError");n._streams=n._streams||{};var o=n._streams[t.id];if(o)o.addTrack(e),n.removeStream(o),n.addStream(o);else{var i=new MediaStream([e]);n._streams[t.id]=i,n.addStream(i)}var a={track:e,get dtmf(){return void 0===this._dtmf&&("audio"===e.kind?this._dtmf=n.createDTMFSender(e):this._dtmf=null),this._dtmf}};return n._senders.push(a),a}),RTCPeerConnection.prototype.addStream=function(t){var n=this;n._senders=n._senders||[],e.apply(n,[t]),t.getTracks().forEach(function(e){n._senders.push({track:e,get dtmf(){return void 0===this._dtmf&&("audio"===e.kind?this._dtmf=n.createDTMFSender(e):this._dtmf=null),this._dtmf}})})},RTCPeerConnection.prototype.removeStream=function(e){var n=this;n._senders=n._senders||[],t.apply(n,[e]),e.getTracks().forEach(function(e){var t=n._senders.find(function(t){return t.track===e});t&&n._senders.splice(n._senders.indexOf(t),1)})}}},shimSourceObject:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this._srcObject},set:function(e){var t=this;this._srcObject=e,this.src&&URL.revokeObjectURL(this.src),e?(this.src=URL.createObjectURL(e),e.addEventListener("addtrack",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)}),e.addEventListener("removetrack",function(){t.src&&URL.revokeObjectURL(t.src),t.src=URL.createObjectURL(e)})):this.src=""}}))},shimPeerConnection:function(){if(window.RTCPeerConnection){var e=RTCPeerConnection;window.RTCPeerConnection=function(t,n){if(t&&t.iceServers){for(var r=[],o=0;o<t.iceServers.length;o++){var i=t.iceServers[o];!i.hasOwnProperty("urls")&&i.hasOwnProperty("url")?(console.warn("RTCIceServer.url is deprecated! Use urls instead."),(i=JSON.parse(JSON.stringify(i))).urls=i.url,r.push(i)):r.push(t.iceServers[o])}t.iceServers=r}return new e(t,n)},window.RTCPeerConnection.prototype=e.prototype,Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return e.generateCertificate}})}else window.RTCPeerConnection=function(e,t){return r("PeerConnection"),e&&e.iceTransportPolicy&&(e.iceTransports=e.iceTransportPolicy),new webkitRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=webkitRTCPeerConnection.prototype,webkitRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return webkitRTCPeerConnection.generateCertificate}});var t=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(e,n,r){var o=this,i=arguments;if(arguments.length>0&&"function"==typeof e)return t.apply(this,arguments);if(0===t.length&&(0===arguments.length||"function"!=typeof arguments[0]))return t.apply(this,[]);var a=function(e){var t={};return e.result().forEach(function(e){var n={id:e.id,timestamp:e.timestamp,type:{localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[e.type]||e.type};e.names().forEach(function(t){n[t]=e.stat(t)}),t[n.id]=n}),t},s=function(e){return new Map(Object.keys(e).map(function(t){return[t,e[t]]}))};if(arguments.length>=2){return t.apply(this,[function(e){i[1](s(a(e)))},arguments[0]])}return new Promise(function(e,n){t.apply(o,[function(t){e(s(a(t)))},n])}).then(n,r)},o.version<51&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){var e=arguments,n=this,r=new Promise(function(r,o){t.apply(n,[e[0],r,o])});return e.length<2?r:r.then(function(){e[1].apply(null,[])},function(t){e.length>=3&&e[2].apply(null,[t])})}}),o.version<52&&["createOffer","createAnswer"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){var e=this;if(arguments.length<1||1===arguments.length&&"object"==typeof arguments[0]){var n=1===arguments.length?arguments[0]:void 0;return new Promise(function(r,o){t.apply(e,[r,o,n])})}return t.apply(this,arguments)}}),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){return arguments[0]=new("addIceCandidate"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}});var n=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?n.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}};e.exports={shimMediaStream:i.shimMediaStream,shimOnTrack:i.shimOnTrack,shimGetSendersWithDtmf:i.shimGetSendersWithDtmf,shimSourceObject:i.shimSourceObject,shimPeerConnection:i.shimPeerConnection,shimGetUserMedia:n(6)}},function(e,t,n){"use strict";var r=n(0).log,o=n(0).browserDetails;e.exports=function(){var e=function(e){if("object"!=typeof e||e.mandatory||e.optional)return e;var t={};return Object.keys(e).forEach(function(n){if("require"!==n&&"advanced"!==n&&"mediaSource"!==n){var r="object"==typeof e[n]?e[n]:{ideal:e[n]};void 0!==r.exact&&"number"==typeof r.exact&&(r.min=r.max=r.exact);var o=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):"deviceId"===t?"sourceId":t};if(void 0!==r.ideal){t.optional=t.optional||[];var i={};"number"==typeof r.ideal?(i[o("min",n)]=r.ideal,t.optional.push(i),(i={})[o("max",n)]=r.ideal,t.optional.push(i)):(i[o("",n)]=r.ideal,t.optional.push(i))}void 0!==r.exact&&"number"!=typeof r.exact?(t.mandatory=t.mandatory||{},t.mandatory[o("",n)]=r.exact):["min","max"].forEach(function(e){void 0!==r[e]&&(t.mandatory=t.mandatory||{},t.mandatory[o(e,n)]=r[e])})}}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},t=function(t,n){if((t=JSON.parse(JSON.stringify(t)))&&t.audio&&(t.audio=e(t.audio)),t&&"object"==typeof t.video){var i=t.video.facingMode;i=i&&("object"==typeof i?i:{ideal:i});var a,s=o.version<61;if(i&&("user"===i.exact||"environment"===i.exact||"user"===i.ideal||"environment"===i.ideal)&&(!navigator.mediaDevices.getSupportedConstraints||!navigator.mediaDevices.getSupportedConstraints().facingMode||s))if(delete t.video.facingMode,"environment"===i.exact||"environment"===i.ideal?a=["back","rear"]:"user"!==i.exact&&"user"!==i.ideal||(a=["front"]),a)return navigator.mediaDevices.enumerateDevices().then(function(o){var s=(o=o.filter(function(e){return"videoinput"===e.kind})).find(function(e){return a.some(function(t){return-1!==e.label.toLowerCase().indexOf(t)})});return!s&&o.length&&-1!==a.indexOf("back")&&(s=o[o.length-1]),s&&(t.video.deviceId=i.exact?{exact:s.deviceId}:{ideal:s.deviceId}),t.video=e(t.video),r("chrome: "+JSON.stringify(t)),n(t)});t.video=e(t.video)}return r("chrome: "+JSON.stringify(t)),n(t)},n=function(e){return{name:{ConstraintNotSatisfiedError:"OverconstrainedError",PermissionDeniedError:"NotAllowedError",TrackStartError:"NotReadableError"}[e.name]||e.name,message:e.message,constraint:e.constraintName,toString:function(){return this.name+(this.message&&": ")+this.message}}};navigator.getUserMedia=function(e,r,o){t(e,function(e){navigator.webkitGetUserMedia(e,r,function(e){o(n(e))})})};var i=function(e){return new Promise(function(t,n){navigator.getUserMedia(e,t,n)})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:i,enumerateDevices:function(){return new Promise(function(e){var t={audio:"audioinput",video:"videoinput"};return MediaStreamTrack.getSources(function(n){e(n.map(function(e){return{label:e.label,kind:t[e.kind],deviceId:e.id,groupId:""}}))})})},getSupportedConstraints:function(){return{deviceId:!0,echoCancellation:!0,facingMode:!0,frameRate:!0,height:!0,width:!0}}}),navigator.mediaDevices.getUserMedia){var a=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(e){return t(e,function(e){return a(e).then(function(t){if(e.audio&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException("","NotFoundError");return t},function(e){return Promise.reject(n(e))})})}}else navigator.mediaDevices.getUserMedia=function(e){return i(e)};void 0===navigator.mediaDevices.addEventListener&&(navigator.mediaDevices.addEventListener=function(){r("Dummy mediaDevices.addEventListener called.")}),void 0===navigator.mediaDevices.removeEventListener&&(navigator.mediaDevices.removeEventListener=function(){r("Dummy mediaDevices.removeEventListener called.")})}},function(e,t,n){"use strict";var r=n(0).browserDetails,o=n(8);e.exports={shimGetUserMedia:n(10),shimPeerConnection:function(){if(window.RTCIceGatherer&&(window.RTCIceCandidate||(window.RTCIceCandidate=function(e){return e}),window.RTCSessionDescription||(window.RTCSessionDescription=function(e){return e}),r.version<15025)){var e=Object.getOwnPropertyDescriptor(MediaStreamTrack.prototype,"enabled");Object.defineProperty(MediaStreamTrack.prototype,"enabled",{set:function(t){e.set.call(this,t);var n=new Event("enabled");n.enabled=t,this.dispatchEvent(n)}})}window.RTCPeerConnection=o(r.version)},shimReplaceTrack:function(){!window.RTCRtpSender||"replaceTrack"in RTCRtpSender.prototype||(RTCRtpSender.prototype.replaceTrack=RTCRtpSender.prototype.setTrack)}}},function(e,t,n){"use strict";var r=n(9);function o(e,t){var n={codecs:[],headerExtensions:[],fecMechanisms:[]},r=function(e,t){e=parseInt(e,10);for(var n=0;n<t.length;n++)if(t[n].payloadType===e||t[n].preferredPayloadType===e)return t[n]},o=function(e,t,n,o){var i=r(e.parameters.apt,n),a=r(t.parameters.apt,o);return i&&a&&i.name.toLowerCase()===a.name.toLowerCase()};return e.codecs.forEach(function(r){for(var i=0;i<t.codecs.length;i++){var a=t.codecs[i];if(r.name.toLowerCase()===a.name.toLowerCase()&&r.clockRate===a.clockRate){if("rtx"===r.name.toLowerCase()&&r.parameters&&a.parameters.apt&&!o(r,a,e.codecs,t.codecs))continue;(a=JSON.parse(JSON.stringify(a))).numChannels=Math.min(r.numChannels,a.numChannels),n.codecs.push(a),a.rtcpFeedback=a.rtcpFeedback.filter(function(e){for(var t=0;t<r.rtcpFeedback.length;t++)if(r.rtcpFeedback[t].type===e.type&&r.rtcpFeedback[t].parameter===e.parameter)return!0;return!1});break}}}),e.headerExtensions.forEach(function(e){for(var r=0;r<t.headerExtensions.length;r++){var o=t.headerExtensions[r];if(e.uri===o.uri){n.headerExtensions.push(o);break}}}),n}function i(e,t,n){return-1!=={offer:{setLocalDescription:["stable","have-local-offer"],setRemoteDescription:["stable","have-remote-offer"]},answer:{setLocalDescription:["have-remote-offer","have-local-pranswer"],setRemoteDescription:["have-local-offer","have-remote-pranswer"]}}[t][e].indexOf(n)}e.exports=function(e){var t=function(t){var n=this,r=document.createDocumentFragment();if(["addEventListener","removeEventListener","dispatchEvent"].forEach(function(e){n[e]=r[e].bind(r)}),this.needNegotiation=!1,this.onicecandidate=null,this.onaddstream=null,this.ontrack=null,this.onremovestream=null,this.onsignalingstatechange=null,this.oniceconnectionstatechange=null,this.onicegatheringstatechange=null,this.onnegotiationneeded=null,this.ondatachannel=null,this.canTrickleIceCandidates=null,this.localStreams=[],this.remoteStreams=[],this.getLocalStreams=function(){return n.localStreams},this.getRemoteStreams=function(){return n.remoteStreams},this.localDescription=new RTCSessionDescription({type:"",sdp:""}),this.remoteDescription=new RTCSessionDescription({type:"",sdp:""}),this.signalingState="stable",this.iceConnectionState="new",this.iceGatheringState="new",this.iceOptions={gatherPolicy:"all",iceServers:[]},t&&t.iceTransportPolicy)switch(t.iceTransportPolicy){case"all":case"relay":this.iceOptions.gatherPolicy=t.iceTransportPolicy}this.usingBundle=t&&"max-bundle"===t.bundlePolicy,t&&t.iceServers&&(this.iceOptions.iceServers=function(e,t){var n=!1;return(e=JSON.parse(JSON.stringify(e))).filter(function(e){if(e&&(e.urls||e.url)){var r=e.urls||e.url;e.url&&!e.urls&&console.warn("RTCIceServer.url is deprecated! Use urls instead.");var o="string"==typeof r;return o&&(r=[r]),r=r.filter(function(e){return 0!==e.indexOf("turn:")||-1===e.indexOf("transport=udp")||-1!==e.indexOf("turn:[")||n?0===e.indexOf("stun:")&&t>=14393:(n=!0,!0)}),delete e.url,e.urls=o?r[0]:r,!!r.length}return!1})}(t.iceServers,e)),this._config=t||{},this.transceivers=[],this._localIceCandidatesBuffer=[]};return t.prototype._emitGatheringStateChange=function(){var e=new Event("icegatheringstatechange");this.dispatchEvent(e),null!==this.onicegatheringstatechange&&this.onicegatheringstatechange(e)},t.prototype._emitBufferedCandidates=function(){var e=this,t=r.splitSections(e.localDescription.sdp);this._localIceCandidatesBuffer.forEach(function(n){if(!n.candidate||0===Object.keys(n.candidate).length)for(var r=1;r<t.length;r++)-1===t[r].indexOf("\r\na=end-of-candidates\r\n")&&(t[r]+="a=end-of-candidates\r\n");else t[n.candidate.sdpMLineIndex+1]+="a="+n.candidate.candidate+"\r\n";(e.localDescription.sdp=t.join(""),e.dispatchEvent(n),null!==e.onicecandidate&&e.onicecandidate(n),n.candidate||"complete"===e.iceGatheringState)||e.transceivers.every(function(e){return e.iceGatherer&&"completed"===e.iceGatherer.state})&&"complete"!==e.iceGatheringStateChange&&(e.iceGatheringState="complete",e._emitGatheringStateChange())}),this._localIceCandidatesBuffer=[]},t.prototype.getConfiguration=function(){return this._config},t.prototype._createTransceiver=function(e){var t=this.transceivers.length>0,n={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:e,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,wantReceive:!0};if(this.usingBundle&&t)n.iceTransport=this.transceivers[0].iceTransport,n.dtlsTransport=this.transceivers[0].dtlsTransport;else{var r=this._createIceAndDtlsTransports();n.iceTransport=r.iceTransport,n.dtlsTransport=r.dtlsTransport}return this.transceivers.push(n),n},t.prototype.addTrack=function(e,t){for(var n,r=0;r<this.transceivers.length;r++)this.transceivers[r].track||this.transceivers[r].kind!==e.kind||(n=this.transceivers[r]);return n||(n=this._createTransceiver(e.kind)),n.track=e,n.stream=t,n.rtpSender=new RTCRtpSender(e,n.dtlsTransport),this._maybeFireNegotiationNeeded(),n.rtpSender},t.prototype.addStream=function(t){var n=this;if(e>=15025)this.localStreams.push(t),t.getTracks().forEach(function(e){n.addTrack(e,t)});else{var r=t.clone();t.getTracks().forEach(function(e,t){var n=r.getTracks()[t];e.addEventListener("enabled",function(e){n.enabled=e.enabled})}),r.getTracks().forEach(function(e){n.addTrack(e,r)}),this.localStreams.push(r)}this._maybeFireNegotiationNeeded()},t.prototype.removeStream=function(e){var t=this.localStreams.indexOf(e);t>-1&&(this.localStreams.splice(t,1),this._maybeFireNegotiationNeeded())},t.prototype.getSenders=function(){return this.transceivers.filter(function(e){return!!e.rtpSender}).map(function(e){return e.rtpSender})},t.prototype.getReceivers=function(){return this.transceivers.filter(function(e){return!!e.rtpReceiver}).map(function(e){return e.rtpReceiver})},t.prototype._createIceGatherer=function(e,t){var n=this,o=new RTCIceGatherer(n.iceOptions);return o.onlocalcandidate=function(i){var a=new Event("icecandidate");a.candidate={sdpMid:e,sdpMLineIndex:t};var s=i.candidate,c=!s||0===Object.keys(s).length;c?void 0===o.state&&(o.state="completed"):(s.component=1,a.candidate.candidate=r.writeCandidate(s));var u=r.splitSections(n.localDescription.sdp);u[a.candidate.sdpMLineIndex+1]+=c?"a=end-of-candidates\r\n":"a="+a.candidate.candidate+"\r\n",n.localDescription.sdp=u.join("");var d=(n._pendingOffer?n._pendingOffer:n.transceivers).every(function(e){return e.iceGatherer&&"completed"===e.iceGatherer.state});switch(n.iceGatheringState){case"new":c||n._localIceCandidatesBuffer.push(a),c&&d&&n._localIceCandidatesBuffer.push(new Event("icecandidate"));break;case"gathering":n._emitBufferedCandidates(),c||(n.dispatchEvent(a),null!==n.onicecandidate&&n.onicecandidate(a)),d&&(n.dispatchEvent(new Event("icecandidate")),null!==n.onicecandidate&&n.onicecandidate(new Event("icecandidate")),n.iceGatheringState="complete",n._emitGatheringStateChange())}},o},t.prototype._createIceAndDtlsTransports=function(){var e=this,t=new RTCIceTransport(null);t.onicestatechange=function(){e._updateConnectionState()};var n=new RTCDtlsTransport(t);return n.ondtlsstatechange=function(){e._updateConnectionState()},n.onerror=function(){Object.defineProperty(n,"state",{value:"failed",writable:!0}),e._updateConnectionState()},{iceTransport:t,dtlsTransport:n}},t.prototype._disposeIceAndDtlsTransports=function(e){var t=this.transceivers[e].iceGatherer;t&&(delete t.onlocalcandidate,delete this.transceivers[e].iceGatherer);var n=this.transceivers[e].iceTransport;n&&(delete n.onicestatechange,delete this.transceivers[e].iceTransport);var r=this.transceivers[e].dtlsTransport;r&&(delete r.ondtlssttatechange,delete r.onerror,delete this.transceivers[e].dtlsTransport)},t.prototype._transceive=function(t,n,i){var a=o(t.localCapabilities,t.remoteCapabilities);n&&t.rtpSender&&(a.encodings=t.sendEncodingParameters,a.rtcp={cname:r.localCName,compound:t.rtcpParameters.compound},t.recvEncodingParameters.length&&(a.rtcp.ssrc=t.recvEncodingParameters[0].ssrc),t.rtpSender.send(a)),i&&t.rtpReceiver&&("video"===t.kind&&t.recvEncodingParameters&&e<15019&&t.recvEncodingParameters.forEach(function(e){delete e.rtx}),a.encodings=t.recvEncodingParameters,a.rtcp={cname:t.rtcpParameters.cname,compound:t.rtcpParameters.compound},t.sendEncodingParameters.length&&(a.rtcp.ssrc=t.sendEncodingParameters[0].ssrc),t.rtpReceiver.receive(a))},t.prototype.setLocalDescription=function(e){var t,n,a=this;if(!i("setLocalDescription",e.type,this.signalingState)){var s=new Error("Can not set local "+e.type+" in state "+this.signalingState);return s.name="InvalidStateError",arguments.length>2&&"function"==typeof arguments[2]&&window.setTimeout(arguments[2],0,s),Promise.reject(s)}if("offer"===e.type)this._pendingOffer&&(t=r.splitSections(e.sdp),n=t.shift(),t.forEach(function(e,t){var n=r.parseRtpParameters(e);a._pendingOffer[t].localCapabilities=n}),this.transceivers=this._pendingOffer,delete this._pendingOffer);else if("answer"===e.type){t=r.splitSections(a.remoteDescription.sdp),n=t.shift();var c=r.matchPrefix(n,"a=ice-lite").length>0;t.forEach(function(e,t){var i=a.transceivers[t],s=i.iceGatherer,u=i.iceTransport,d=i.dtlsTransport,l=i.localCapabilities,f=i.remoteCapabilities;if(!r.isRejected(e)&&!i.isDatachannel){var p=r.getIceParameters(e,n),h=r.getDtlsParameters(e,n);c&&(h.role="server"),a.usingBundle&&0!==t||(u.start(s,p,c?"controlling":"controlled"),d.start(h));var v=o(l,f);a._transceive(i,v.codecs.length>0,!1)}})}switch(this.localDescription={type:e.type,sdp:e.sdp},e.type){case"offer":this._updateSignalingState("have-local-offer");break;case"answer":this._updateSignalingState("stable");break;default:throw new TypeError('unsupported type "'+e.type+'"')}var u=arguments.length>1&&"function"==typeof arguments[1];if(u){var d=arguments[1];window.setTimeout(function(){d(),"new"===a.iceGatheringState&&(a.iceGatheringState="gathering",a._emitGatheringStateChange()),a._emitBufferedCandidates()},0)}var l=Promise.resolve();return l.then(function(){u||("new"===a.iceGatheringState&&(a.iceGatheringState="gathering",a._emitGatheringStateChange()),window.setTimeout(a._emitBufferedCandidates.bind(a),500))}),l},t.prototype.setRemoteDescription=function(t){var n=this;if(!i("setRemoteDescription",t.type,this.signalingState)){var o=new Error("Can not set remote "+t.type+" in state "+this.signalingState);return o.name="InvalidStateError",arguments.length>2&&"function"==typeof arguments[2]&&window.setTimeout(arguments[2],0,o),Promise.reject(o)}var a={},s=[],c=r.splitSections(t.sdp),u=c.shift(),d=r.matchPrefix(u,"a=ice-lite").length>0,l=r.matchPrefix(u,"a=group:BUNDLE ").length>0;this.usingBundle=l;var f=r.matchPrefix(u,"a=ice-options:")[0];switch(this.canTrickleIceCandidates=!!f&&f.substr(14).split(" ").indexOf("trickle")>=0,c.forEach(function(o,i){var c=r.splitLines(o),f=r.getKind(o),p=r.isRejected(o),h=c[0].substr(2).split(" ")[2],v=r.getDirection(o,u),y=r.parseMsid(o),m=r.getMid(o)||r.generateIdentifier();if("application"!==f||"DTLS/SCTP"!==h){var _,b,g,w,C,O,P,R,S,k,T,j=r.parseRtpParameters(o);p||(k=r.getIceParameters(o,u),(T=r.getDtlsParameters(o,u)).role="client"),P=r.parseRtpEncodingParameters(o);var x=r.parseRtcpParameters(o),E=r.matchPrefix(o,"a=end-of-candidates",u).length>0,L=r.matchPrefix(o,"a=candidate:").map(function(e){return r.parseCandidate(e)}).filter(function(e){return"1"===e.component||1===e.component});"offer"!==t.type||p?"answer"!==t.type||p||(l&&i>0&&(n._disposeIceAndDtlsTransports(i),n.transceivers[i].iceGatherer=n.transceivers[0].iceGatherer,n.transceivers[i].iceTransport=n.transceivers[0].iceTransport,n.transceivers[i].dtlsTransport=n.transceivers[0].dtlsTransport,n.transceivers[i].rtpSender&&n.transceivers[i].rtpSender.setTransport(n.transceivers[0].dtlsTransport),n.transceivers[i].rtpReceiver&&n.transceivers[i].rtpReceiver.setTransport(n.transceivers[0].dtlsTransport)),b=(_=n.transceivers[i]).iceGatherer,g=_.iceTransport,w=_.dtlsTransport,C=_.rtpReceiver,O=_.sendEncodingParameters,R=_.localCapabilities,n.transceivers[i].recvEncodingParameters=P,n.transceivers[i].remoteCapabilities=j,n.transceivers[i].rtcpParameters=x,(d||E)&&L.length&&g.setRemoteCandidates(L),l&&0!==i||(g.start(b,k,"controlling"),w.start(T)),n._transceive(_,"sendrecv"===v||"recvonly"===v,"sendrecv"===v||"sendonly"===v),!C||"sendrecv"!==v&&"sendonly"!==v?delete _.rtpReceiver:(S=C.track,y?(a[y.stream]||(a[y.stream]=new MediaStream),a[y.stream].addTrack(S),s.push([S,C,a[y.stream]])):(a.default||(a.default=new MediaStream),a.default.addTrack(S),s.push([S,C,a.default])))):((_=n.transceivers[i]||n._createTransceiver(f)).mid=m,_.iceGatherer||(_.iceGatherer=l&&i>0?n.transceivers[0].iceGatherer:n._createIceGatherer(m,i)),!E||l&&0!==i||_.iceTransport.setRemoteCandidates(L),R=RTCRtpReceiver.getCapabilities(f),e<15019&&(R.codecs=R.codecs.filter(function(e){return"rtx"!==e.name})),O=[{ssrc:1001*(2*i+2)}],"sendrecv"!==v&&"sendonly"!==v||(S=(C=new RTCRtpReceiver(_.dtlsTransport,f)).track,y?(a[y.stream]||(a[y.stream]=new MediaStream,Object.defineProperty(a[y.stream],"id",{get:function(){return y.stream}})),Object.defineProperty(S,"id",{get:function(){return y.track}}),a[y.stream].addTrack(S),s.push([S,C,a[y.stream]])):(a.default||(a.default=new MediaStream),a.default.addTrack(S),s.push([S,C,a.default]))),_.localCapabilities=R,_.remoteCapabilities=j,_.rtpReceiver=C,_.rtcpParameters=x,_.sendEncodingParameters=O,_.recvEncodingParameters=P,n._transceive(n.transceivers[i],!1,"sendrecv"===v||"sendonly"===v))}else n.transceivers[i]={mid:m,isDatachannel:!0}}),this.remoteDescription={type:t.type,sdp:t.sdp},t.type){case"offer":this._updateSignalingState("have-remote-offer");break;case"answer":this._updateSignalingState("stable");break;default:throw new TypeError('unsupported type "'+t.type+'"')}return Object.keys(a).forEach(function(e){var t=a[e];if(t.getTracks().length){n.remoteStreams.push(t);var r=new Event("addstream");r.stream=t,n.dispatchEvent(r),null!==n.onaddstream&&window.setTimeout(function(){n.onaddstream(r)},0),s.forEach(function(e){var r=e[0],o=e[1];if(t.id===e[2].id){var i=new Event("track");i.track=r,i.receiver=o,i.streams=[t],n.dispatchEvent(i),null!==n.ontrack&&window.setTimeout(function(){n.ontrack(i)},0)}})}}),window.setTimeout(function(){n&&n.transceivers&&n.transceivers.forEach(function(e){e.iceTransport&&"new"===e.iceTransport.state&&e.iceTransport.getRemoteCandidates().length>0&&(console.warn("Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification"),e.iceTransport.addRemoteCandidate({}))})},4e3),arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},t.prototype.close=function(){this.transceivers.forEach(function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()}),this._updateSignalingState("closed")},t.prototype._updateSignalingState=function(e){this.signalingState=e;var t=new Event("signalingstatechange");this.dispatchEvent(t),null!==this.onsignalingstatechange&&this.onsignalingstatechange(t)},t.prototype._maybeFireNegotiationNeeded=function(){var e=this;"stable"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,window.setTimeout(function(){if(!1!==e.needNegotiation){e.needNegotiation=!1;var t=new Event("negotiationneeded");e.dispatchEvent(t),null!==e.onnegotiationneeded&&e.onnegotiationneeded(t)}},0))},t.prototype._updateConnectionState=function(){var e,t={new:0,closed:0,connecting:0,checking:0,connected:0,completed:0,failed:0};if(this.transceivers.forEach(function(e){t[e.iceTransport.state]++,t[e.dtlsTransport.state]++}),t.connected+=t.completed,e="new",t.failed>0?e="failed":t.connecting>0||t.checking>0?e="connecting":t.disconnected>0?e="disconnected":t.new>0?e="new":(t.connected>0||t.completed>0)&&(e="connected"),e!==this.iceConnectionState){this.iceConnectionState=e;var n=new Event("iceconnectionstatechange");this.dispatchEvent(n),null!==this.oniceconnectionstatechange&&this.oniceconnectionstatechange(n)}},t.prototype.createOffer=function(){var t,n=this;if(this._pendingOffer)throw new Error("createOffer called while there is a pending offer.");1===arguments.length&&"function"!=typeof arguments[0]?t=arguments[0]:3===arguments.length&&(t=arguments[2]);var o=this.transceivers.filter(function(e){return"audio"===e.kind}).length,i=this.transceivers.filter(function(e){return"video"===e.kind}).length;if(t){if(t.mandatory||t.optional)throw new TypeError("Legacy mandatory/optional constraints not supported.");void 0!==t.offerToReceiveAudio&&(o=!0===t.offerToReceiveAudio?1:!1===t.offerToReceiveAudio?0:t.offerToReceiveAudio),void 0!==t.offerToReceiveVideo&&(i=!0===t.offerToReceiveVideo?1:!1===t.offerToReceiveVideo?0:t.offerToReceiveVideo)}for(this.transceivers.forEach(function(e){"audio"===e.kind?--o<0&&(e.wantReceive=!1):"video"===e.kind&&--i<0&&(e.wantReceive=!1)});o>0||i>0;)o>0&&(this._createTransceiver("audio"),o--),i>0&&(this._createTransceiver("video"),i--);var a=function(e){var t=e.filter(function(e){return"audio"===e.kind}),n=e.filter(function(e){return"video"===e.kind});for(e=[];t.length||n.length;)t.length&&e.push(t.shift()),n.length&&e.push(n.shift());return e}(this.transceivers),s=r.writeSessionBoilerplate();a.forEach(function(t,o){var i=t.track,s=t.kind,c=r.generateIdentifier();t.mid=c,t.iceGatherer||(t.iceGatherer=n.usingBundle&&o>0?a[0].iceGatherer:n._createIceGatherer(c,o));var u=RTCRtpSender.getCapabilities(s);e<15019&&(u.codecs=u.codecs.filter(function(e){return"rtx"!==e.name})),u.codecs.forEach(function(e){"H264"===e.name&&void 0===e.parameters["level-asymmetry-allowed"]&&(e.parameters["level-asymmetry-allowed"]="1")});var d=[{ssrc:1001*(2*o+1)}];i&&e>=15019&&"video"===s&&(d[0].rtx={ssrc:1001*(2*o+1)+1}),t.wantReceive&&(t.rtpReceiver=new RTCRtpReceiver(t.dtlsTransport,s)),t.localCapabilities=u,t.sendEncodingParameters=d}),"max-compat"!==this._config.bundlePolicy&&(s+="a=group:BUNDLE "+a.map(function(e){return e.mid}).join(" ")+"\r\n"),s+="a=ice-options:trickle\r\n",a.forEach(function(e,t){s+=r.writeMediaSection(e,e.localCapabilities,"offer",e.stream),s+="a=rtcp-rsize\r\n"}),this._pendingOffer=a;var c=new RTCSessionDescription({type:"offer",sdp:s});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,c),Promise.resolve(c)},t.prototype.createAnswer=function(){var t=r.writeSessionBoilerplate();this.usingBundle&&(t+="a=group:BUNDLE "+this.transceivers.map(function(e){return e.mid}).join(" ")+"\r\n"),this.transceivers.forEach(function(n,i){if(n.isDatachannel)t+="m=application 0 DTLS/SCTP 5000\r\nc=IN IP4 0.0.0.0\r\na=mid:"+n.mid+"\r\n";else{var a;if(n.stream)"audio"===n.kind?a=n.stream.getAudioTracks()[0]:"video"===n.kind&&(a=n.stream.getVideoTracks()[0]),a&&e>=15019&&"video"===n.kind&&(n.sendEncodingParameters[0].rtx={ssrc:1001*(2*i+2)+1});var s=o(n.localCapabilities,n.remoteCapabilities);!s.codecs.filter(function(e){return"rtx"===e.name.toLowerCase()}).length&&n.sendEncodingParameters[0].rtx&&delete n.sendEncodingParameters[0].rtx,t+=r.writeMediaSection(n,s,"answer",n.stream),n.rtcpParameters&&n.rtcpParameters.reducedSize&&(t+="a=rtcp-rsize\r\n")}});var n=new RTCSessionDescription({type:"answer",sdp:t});return arguments.length&&"function"==typeof arguments[0]&&window.setTimeout(arguments[0],0,n),Promise.resolve(n)},t.prototype.addIceCandidate=function(e){if(e){var t=e.sdpMLineIndex;if(e.sdpMid)for(var n=0;n<this.transceivers.length;n++)if(this.transceivers[n].mid===e.sdpMid){t=n;break}var o=this.transceivers[t];if(o){var i=Object.keys(e.candidate).length>0?r.parseCandidate(e.candidate):{};if("tcp"===i.protocol&&(0===i.port||9===i.port))return Promise.resolve();if(i.component&&"1"!==i.component&&1!==i.component)return Promise.resolve();o.iceTransport.addRemoteCandidate(i);var a=r.splitSections(this.remoteDescription.sdp);a[t+1]+=(i.type?e.candidate.trim():"a=end-of-candidates")+"\r\n",this.remoteDescription.sdp=a.join("")}}else for(var s=0;s<this.transceivers.length;s++)if(this.transceivers[s].iceTransport.addRemoteCandidate({}),this.usingBundle)return Promise.resolve();return arguments.length>1&&"function"==typeof arguments[1]&&window.setTimeout(arguments[1],0),Promise.resolve()},t.prototype.getStats=function(){var e=[];this.transceivers.forEach(function(t){["rtpSender","rtpReceiver","iceGatherer","iceTransport","dtlsTransport"].forEach(function(n){t[n]&&e.push(t[n].getStats())})});var t=arguments.length>1&&"function"==typeof arguments[1]&&arguments[1];return new Promise(function(n){var r=new Map;Promise.all(e).then(function(e){e.forEach(function(e){Object.keys(e).forEach(function(t){e[t].type=function(e){return{inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[e.type]||e.type}(e[t]),r.set(t,e[t])})}),t&&window.setTimeout(t,0,r),n(r)})})},t}},function(e,t,n){"use strict";var r={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};r.localCName=r.generateIdentifier(),r.splitLines=function(e){return e.trim().split("\n").map(function(e){return e.trim()})},r.splitSections=function(e){return e.split("\nm=").map(function(e,t){return(t>0?"m="+e:e).trim()+"\r\n"})},r.matchPrefix=function(e,t){return r.splitLines(e).filter(function(e){return 0===e.indexOf(t)})},r.parseCandidate=function(e){for(var t,n={foundation:(t=0===e.indexOf("a=candidate:")?e.substring(12).split(" "):e.substring(10).split(" "))[0],component:t[1],protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],port:parseInt(t[5],10),type:t[7]},r=8;r<t.length;r+=2)switch(t[r]){case"raddr":n.relatedAddress=t[r+1];break;case"rport":n.relatedPort=parseInt(t[r+1],10);break;case"tcptype":n.tcpType=t[r+1];break;default:n[t[r]]=t[r+1]}return n},r.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.ip),t.push(e.port);var n=e.type;return t.push("typ"),t.push(n),"host"!==n&&e.relatedAddress&&e.relatedPort&&(t.push("raddr"),t.push(e.relatedAddress),t.push("rport"),t.push(e.relatedPort)),e.tcpType&&"tcp"===e.protocol.toLowerCase()&&(t.push("tcptype"),t.push(e.tcpType)),"candidate:"+t.join(" ")},r.parseIceOptions=function(e){return e.substr(14).split(" ")},r.parseRtpMap=function(e){var t=e.substr(9).split(" "),n={payloadType:parseInt(t.shift(),10)};return t=t[0].split("/"),n.name=t[0],n.clockRate=parseInt(t[1],10),n.numChannels=3===t.length?parseInt(t[2],10):1,n},r.writeRtpMap=function(e){var t=e.payloadType;return void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType),"a=rtpmap:"+t+" "+e.name+"/"+e.clockRate+(1!==e.numChannels?"/"+e.numChannels:"")+"\r\n"},r.parseExtmap=function(e){var t=e.substr(9).split(" ");return{id:parseInt(t[0],10),direction:t[0].indexOf("/")>0?t[0].split("/")[1]:"sendrecv",uri:t[1]}},r.writeExtmap=function(e){return"a=extmap:"+(e.id||e.preferredId)+(e.direction&&"sendrecv"!==e.direction?"/"+e.direction:"")+" "+e.uri+"\r\n"},r.parseFmtp=function(e){for(var t,n={},r=e.substr(e.indexOf(" ")+1).split(";"),o=0;o<r.length;o++)n[(t=r[o].trim().split("="))[0].trim()]=t[1];return n},r.writeFmtp=function(e){var t="",n=e.payloadType;if(void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var r=[];Object.keys(e.parameters).forEach(function(t){r.push(t+"="+e.parameters[t])}),t+="a=fmtp:"+n+" "+r.join(";")+"\r\n"}return t},r.parseRtcpFb=function(e){var t=e.substr(e.indexOf(" ")+1).split(" ");return{type:t.shift(),parameter:t.join(" ")}},r.writeRtcpFb=function(e){var t="",n=e.payloadType;return void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach(function(e){t+="a=rtcp-fb:"+n+" "+e.type+(e.parameter&&e.parameter.length?" "+e.parameter:"")+"\r\n"}),t},r.parseSsrcMedia=function(e){var t=e.indexOf(" "),n={ssrc:parseInt(e.substr(7,t-7),10)},r=e.indexOf(":",t);return r>-1?(n.attribute=e.substr(t+1,r-t-1),n.value=e.substr(r+1)):n.attribute=e.substr(t+1),n},r.getMid=function(e){var t=r.matchPrefix(e,"a=mid:")[0];if(t)return t.substr(6)},r.parseFingerprint=function(e){var t=e.substr(14).split(" ");return{algorithm:t[0].toLowerCase(),value:t[1]}},r.getDtlsParameters=function(e,t){return{role:"auto",fingerprints:r.matchPrefix(e+t,"a=fingerprint:").map(r.parseFingerprint)}},r.writeDtlsParameters=function(e,t){var n="a=setup:"+t+"\r\n";return e.fingerprints.forEach(function(e){n+="a=fingerprint:"+e.algorithm+" "+e.value+"\r\n"}),n},r.getIceParameters=function(e,t){var n=r.splitLines(e);return{usernameFragment:(n=n.concat(r.splitLines(t))).filter(function(e){return 0===e.indexOf("a=ice-ufrag:")})[0].substr(12),password:n.filter(function(e){return 0===e.indexOf("a=ice-pwd:")})[0].substr(10)}},r.writeIceParameters=function(e){return"a=ice-ufrag:"+e.usernameFragment+"\r\na=ice-pwd:"+e.password+"\r\n"},r.parseRtpParameters=function(e){for(var t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},n=r.splitLines(e)[0].split(" "),o=3;o<n.length;o++){var i=n[o],a=r.matchPrefix(e,"a=rtpmap:"+i+" ")[0];if(a){var s=r.parseRtpMap(a),c=r.matchPrefix(e,"a=fmtp:"+i+" ");switch(s.parameters=c.length?r.parseFmtp(c[0]):{},s.rtcpFeedback=r.matchPrefix(e,"a=rtcp-fb:"+i+" ").map(r.parseRtcpFb),t.codecs.push(s),s.name.toUpperCase()){case"RED":case"ULPFEC":t.fecMechanisms.push(s.name.toUpperCase())}}}return r.matchPrefix(e,"a=extmap:").forEach(function(e){t.headerExtensions.push(r.parseExtmap(e))}),t},r.writeRtpDescription=function(e,t){var n="";n+="m="+e+" ",n+=t.codecs.length>0?"9":"0",n+=" UDP/TLS/RTP/SAVPF ",n+=t.codecs.map(function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType}).join(" ")+"\r\n",n+="c=IN IP4 0.0.0.0\r\n",n+="a=rtcp:9 IN IP4 0.0.0.0\r\n",t.codecs.forEach(function(e){n+=r.writeRtpMap(e),n+=r.writeFmtp(e),n+=r.writeRtcpFb(e)});var o=0;return t.codecs.forEach(function(e){e.maxptime>o&&(o=e.maxptime)}),o>0&&(n+="a=maxptime:"+o+"\r\n"),n+="a=rtcp-mux\r\n",t.headerExtensions.forEach(function(e){n+=r.writeExtmap(e)}),n},r.parseRtpEncodingParameters=function(e){var t,n=[],o=r.parseRtpParameters(e),i=-1!==o.fecMechanisms.indexOf("RED"),a=-1!==o.fecMechanisms.indexOf("ULPFEC"),s=r.matchPrefix(e,"a=ssrc:").map(function(e){return r.parseSsrcMedia(e)}).filter(function(e){return"cname"===e.attribute}),c=s.length>0&&s[0].ssrc,u=r.matchPrefix(e,"a=ssrc-group:FID").map(function(e){var t=e.split(" ");return t.shift(),t.map(function(e){return parseInt(e,10)})});u.length>0&&u[0].length>1&&u[0][0]===c&&(t=u[0][1]),o.codecs.forEach(function(e){if("RTX"===e.name.toUpperCase()&&e.parameters.apt){var r={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10),rtx:{ssrc:t}};n.push(r),i&&((r=JSON.parse(JSON.stringify(r))).fec={ssrc:t,mechanism:a?"red+ulpfec":"red"},n.push(r))}}),0===n.length&&c&&n.push({ssrc:c});var d=r.matchPrefix(e,"b=");return d.length&&(0===d[0].indexOf("b=TIAS:")?d=parseInt(d[0].substr(7),10):0===d[0].indexOf("b=AS:")&&(d=parseInt(d[0].substr(5),10)),n.forEach(function(e){e.maxBitrate=d})),n},r.parseRtcpParameters=function(e){var t={},n=r.matchPrefix(e,"a=ssrc:").map(function(e){return r.parseSsrcMedia(e)}).filter(function(e){return"cname"===e.attribute})[0];n&&(t.cname=n.value,t.ssrc=n.ssrc);var o=r.matchPrefix(e,"a=rtcp-rsize");t.reducedSize=o.length>0,t.compound=0===o.length;var i=r.matchPrefix(e,"a=rtcp-mux");return t.mux=i.length>0,t},r.parseMsid=function(e){var t,n=r.matchPrefix(e,"a=msid:");if(1===n.length)return{stream:(t=n[0].substr(7).split(" "))[0],track:t[1]};var o=r.matchPrefix(e,"a=ssrc:").map(function(e){return r.parseSsrcMedia(e)}).filter(function(e){return"msid"===e.attribute});return o.length>0?{stream:(t=o[0].value.split(" "))[0],track:t[1]}:void 0},r.writeSessionBoilerplate=function(){return"v=0\r\no=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},r.writeMediaSection=function(e,t,n,o){var i=r.writeRtpDescription(e.kind,t);if(i+=r.writeIceParameters(e.iceGatherer.getLocalParameters()),i+=r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),"offer"===n?"actpass":"active"),i+="a=mid:"+e.mid+"\r\n",e.direction?i+="a="+e.direction+"\r\n":e.rtpSender&&e.rtpReceiver?i+="a=sendrecv\r\n":e.rtpSender?i+="a=sendonly\r\n":e.rtpReceiver?i+="a=recvonly\r\n":i+="a=inactive\r\n",e.rtpSender){var a="msid:"+o.id+" "+e.rtpSender.track.id+"\r\n";i+="a="+a,i+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" "+a,e.sendEncodingParameters[0].rtx&&(i+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" "+a,i+="a=ssrc-group:FID "+e.sendEncodingParameters[0].ssrc+" "+e.sendEncodingParameters[0].rtx.ssrc+"\r\n")}return i+="a=ssrc:"+e.sendEncodingParameters[0].ssrc+" cname:"+r.localCName+"\r\n",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(i+="a=ssrc:"+e.sendEncodingParameters[0].rtx.ssrc+" cname:"+r.localCName+"\r\n"),i},r.getDirection=function(e,t){for(var n=r.splitLines(e),o=0;o<n.length;o++)switch(n[o]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return n[o].substr(2)}return t?r.getDirection(t):"sendrecv"},r.getKind=function(e){return r.splitLines(e)[0].split(" ")[0].substr(2)},r.isRejected=function(e){return"0"===e.split(" ",2)[1]},e.exports=r},function(e,t,n){"use strict";e.exports=function(){var e=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(t){return e(t).catch(function(e){return Promise.reject(function(e){return{name:{PermissionDeniedError:"NotAllowedError"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString:function(){return this.name}}}(e))})}}},function(e,t,n){"use strict";var r=n(0).browserDetails,o={shimOnTrack:function(){"object"!=typeof window||!window.RTCPeerConnection||"ontrack"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"ontrack",{get:function(){return this._ontrack},set:function(e){this._ontrack&&(this.removeEventListener("track",this._ontrack),this.removeEventListener("addstream",this._ontrackpoly)),this.addEventListener("track",this._ontrack=e),this.addEventListener("addstream",this._ontrackpoly=function(e){e.stream.getTracks().forEach(function(t){var n=new Event("track");n.track=t,n.receiver={track:t},n.streams=[e.stream],this.dispatchEvent(n)}.bind(this))}.bind(this))}})},shimSourceObject:function(){"object"==typeof window&&(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype||Object.defineProperty(window.HTMLMediaElement.prototype,"srcObject",{get:function(){return this.mozSrcObject},set:function(e){this.mozSrcObject=e}}))},shimPeerConnection:function(){if("object"==typeof window&&(window.RTCPeerConnection||window.mozRTCPeerConnection)){window.RTCPeerConnection||(window.RTCPeerConnection=function(e,t){if(r.version<38&&e&&e.iceServers){for(var n=[],o=0;o<e.iceServers.length;o++){var i=e.iceServers[o];if(i.hasOwnProperty("urls"))for(var a=0;a<i.urls.length;a++){var s={url:i.urls[a]};0===i.urls[a].indexOf("turn")&&(s.username=i.username,s.credential=i.credential),n.push(s)}else n.push(e.iceServers[o])}e.iceServers=n}return new mozRTCPeerConnection(e,t)},window.RTCPeerConnection.prototype=mozRTCPeerConnection.prototype,mozRTCPeerConnection.generateCertificate&&Object.defineProperty(window.RTCPeerConnection,"generateCertificate",{get:function(){return mozRTCPeerConnection.generateCertificate}}),window.RTCSessionDescription=mozRTCSessionDescription,window.RTCIceCandidate=mozRTCIceCandidate),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=RTCPeerConnection.prototype[e];RTCPeerConnection.prototype[e]=function(){return arguments[0]=new("addIceCandidate"===e?RTCIceCandidate:RTCSessionDescription)(arguments[0]),t.apply(this,arguments)}});var e=RTCPeerConnection.prototype.addIceCandidate;RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?e.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())};var t={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"},n=RTCPeerConnection.prototype.getStats;RTCPeerConnection.prototype.getStats=function(e,o,i){return n.apply(this,[e||null]).then(function(e){if(r.version<48&&(e=function(e){var t=new Map;return Object.keys(e).forEach(function(n){t.set(n,e[n]),t[n]=e[n]}),t}(e)),r.version<53&&!o)try{e.forEach(function(e){e.type=t[e.type]||e.type})}catch(n){if("TypeError"!==n.name)throw n;e.forEach(function(n,r){e.set(r,Object.assign({},n,{type:t[n.type]||n.type}))})}return e}).then(o,i)}}}};e.exports={shimOnTrack:o.shimOnTrack,shimSourceObject:o.shimSourceObject,shimPeerConnection:o.shimPeerConnection,shimGetUserMedia:n(12)}},function(e,t,n){"use strict";var r=n(0).log,o=n(0).browserDetails;e.exports=function(){var e=function(e){return{name:{InternalError:"NotReadableError",NotSupportedError:"TypeError",PermissionDeniedError:"NotAllowedError",SecurityError:"NotAllowedError"}[e.name]||e.name,message:{"The operation is insecure.":"The request is not allowed by the user agent or the platform in the current context."}[e.message]||e.message,constraint:e.constraint,toString:function(){return this.name+(this.message&&": ")+this.message}}},t=function(t,n,i){var a=function(e){if("object"!=typeof e||e.require)return e;var t=[];return Object.keys(e).forEach(function(n){if("require"!==n&&"advanced"!==n&&"mediaSource"!==n){var r=e[n]="object"==typeof e[n]?e[n]:{ideal:e[n]};if(void 0===r.min&&void 0===r.max&&void 0===r.exact||t.push(n),void 0!==r.exact&&("number"==typeof r.exact?r.min=r.max=r.exact:e[n]=r.exact,delete r.exact),void 0!==r.ideal){e.advanced=e.advanced||[];var o={};"number"==typeof r.ideal?o[n]={min:r.ideal,max:r.ideal}:o[n]=r.ideal,e.advanced.push(o),delete r.ideal,Object.keys(r).length||delete e[n]}}}),t.length&&(e.require=t),e};return t=JSON.parse(JSON.stringify(t)),o.version<38&&(r("spec: "+JSON.stringify(t)),t.audio&&(t.audio=a(t.audio)),t.video&&(t.video=a(t.video)),r("ff37: "+JSON.stringify(t))),navigator.mozGetUserMedia(t,n,function(t){i(e(t))})};if(navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:function(e){return new Promise(function(n,r){t(e,n,r)})},addEventListener:function(){},removeEventListener:function(){}}),navigator.mediaDevices.enumerateDevices=navigator.mediaDevices.enumerateDevices||function(){return new Promise(function(e){e([{kind:"audioinput",deviceId:"default",label:"",groupId:""},{kind:"videoinput",deviceId:"default",label:"",groupId:""}])})},o.version<41){var n=navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);navigator.mediaDevices.enumerateDevices=function(){return n().then(void 0,function(e){if("NotFoundError"===e.name)return[];throw e})}}if(o.version<49){var i=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(t){return i(t).then(function(e){if(t.audio&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach(function(e){e.stop()}),new DOMException("The object can not be found here.","NotFoundError");return e},function(t){return Promise.reject(e(t))})}}navigator.getUserMedia=function(e,n,r){if(o.version<44)return t(e,n,r);console.warn("navigator.getUserMedia has been replaced by navigator.mediaDevices.getUserMedia"),navigator.mediaDevices.getUserMedia(e).then(n,r)}}},function(e,t,n){"use strict";var r={shimAddStream:function(){"object"!=typeof window||!window.RTCPeerConnection||"addStream"in window.RTCPeerConnection.prototype||(RTCPeerConnection.prototype.addStream=function(e){var t=this;e.getTracks().forEach(function(n){t.addTrack(n,e)})})},shimOnAddStream:function(){"object"!=typeof window||!window.RTCPeerConnection||"onaddstream"in window.RTCPeerConnection.prototype||Object.defineProperty(window.RTCPeerConnection.prototype,"onaddstream",{get:function(){return this._onaddstream},set:function(e){this._onaddstream&&(this.removeEventListener("addstream",this._onaddstream),this.removeEventListener("track",this._onaddstreampoly)),this.addEventListener("addstream",this._onaddstream=e),this.addEventListener("track",this._onaddstreampoly=function(e){var t=e.streams[0];if(this._streams||(this._streams=[]),!(this._streams.indexOf(t)>=0)){this._streams.push(t);var n=new Event("addstream");n.stream=e.streams[0],this.dispatchEvent(n)}}.bind(this))}})},shimCallbacksAPI:function(){if("object"==typeof window&&window.RTCPeerConnection){var e=RTCPeerConnection.prototype,t=e.createOffer,n=e.createAnswer,r=e.setLocalDescription,o=e.setRemoteDescription,i=e.addIceCandidate;e.createOffer=function(e,n){var r=arguments.length>=2?arguments[2]:arguments[0],o=t.apply(this,[r]);return n?(o.then(e,n),Promise.resolve()):o},e.createAnswer=function(e,t){var r=arguments.length>=2?arguments[2]:arguments[0],o=n.apply(this,[r]);return t?(o.then(e,t),Promise.resolve()):o};var a=function(e,t,n){var o=r.apply(this,[e]);return n?(o.then(t,n),Promise.resolve()):o};e.setLocalDescription=a,a=function(e,t,n){var r=o.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},e.setRemoteDescription=a,a=function(e,t,n){var r=i.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},e.addIceCandidate=a}},shimGetUserMedia:function(){navigator.getUserMedia||(navigator.webkitGetUserMedia?navigator.getUserMedia=navigator.webkitGetUserMedia.bind(navigator):navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&(navigator.getUserMedia=function(e,t,n){navigator.mediaDevices.getUserMedia(e).then(t,n)}.bind(navigator)))}};e.exports={shimCallbacksAPI:r.shimCallbacksAPI,shimAddStream:r.shimAddStream,shimOnAddStream:r.shimOnAddStream,shimGetUserMedia:r.shimGetUserMedia}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);if(this._textMessage=t.textMessage,this._dataSize=t.dataSize,this._data=[],this._progress=0,this._sendingTime=t.sendingTime,this._progressPercentage=0,!this._textMessage.body||!this._textMessage.body.value)throw Error("[P2PDataReceiver constructor] invalid Hyperty Resource message. Does not comtain a body.value",t)}return r(e,[{key:"receiveText",value:function(e){if(this._data.push(e.data),this._progress=this._progress+e.data.length,this._progress===this._dataSize){var t=this._data.join("");this._processLastMessage(t)}else{var n=parseInt(100*this._progress/this._dataSize);n-this._progressPercentage>0&&(this._progressPercentage=n,console.debug("[P2PDataReceiver] progressing: ",this._progressPercentage),this._onProgress(this._progressPercentage))}}},{key:"receiveBinary",value:function(e){if(this._data.push(e),this._progress=this._progress+e.byteLength,this._progress===this._dataSize)this._processLastMessage(this._data);else if(this._onProgress){var t=parseInt(100*this._progress/this._dataSize);t-this._progressPercentage>0&&(this._progressPercentage=t,console.debug("[P2PDataReceiver] progressing: ",this._progressPercentage),this._onProgress(this._progressPercentage))}}},{key:"_processLastMessage",value:function(e){var t=(new Date).getTime()-this._sendingTime,n=this._textMessage;n.body.value.content=e,this._onReceived(n,t)}},{key:"onReceived",value:function(e){this._onReceived=e}},{key:"onProgress",value:function(e){this._onProgress=e}},{key:"from",get:function(){return this._textMessage.from}},{key:"to",get:function(){return this._textMessage.to}},{key:"id",get:function(){return this._textMessage.id}},{key:"type",get:function(){return this._textMessage.type}}]),e}();t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);this._msg=t,this._channel=n,this._packetSize=16384,this._bufferFullThreshold=5*this._packetSize,this._msgObject=t,this.isData=!1,this._init(),this._cancel=!1}return r(e,[{key:"cancel",value:function(){this._cancel=!0}},{key:"_init",value:function(){var e=(Math.random()*(new Date).getTime()).toString(36).replace(/\./g,"-"),t=(new Date).getTime();this._initialPacket={uuid:e,sendingTime:t},this._msg.body&&this._msg.body.value&&this._msg.body.value.content&&(this.isData=!0),this.isData&&this._msg.body.value.mimetype&&"text"!=this._msg.body.value.mimetype.split("/")[0]?(this._send=this._sendBinary,this._initialPacket.dataSize=this._msg.body.value.content.byteLength):(this._send=this._sendText,this.isData&&(this._initialPacket.dataSize=this._msg.body.value.content.length)),this._initialPacket.textMessage=JSON.parse(JSON.stringify(this._msg)),this.isData?(delete this._initialPacket.textMessage.body.value.content,this._data=this._msg.body.value.content):this._initialPacket.dataSize=0}},{key:"_sendText",value:function(e,t){var n={uuid:e,data:t};this._channel.send(JSON.stringify(n))}},{key:"_sendBinary",value:function(e,t){var n=this._str2ab(e),r=this._appendBuffer(n,t);this._channel.send(r)}},{key:"_str2ab",value:function(e){for(var t=new ArrayBuffer(2*e.length),n=new Uint16Array(t),r=0,o=e.length;r<o;r++)n[r]=e.charCodeAt(r);return t}},{key:"_appendBuffer",value:function(e,t){var n=new Uint8Array(e.byteLength+t.byteLength);return n.set(new Uint8Array(e),0),n.set(new Uint8Array(t),e.byteLength),n.buffer}},{key:"sendData",value:function(){this._size=this._initialPacket.dataSize,console.log("[P2PDataSender] start sending to: ",this._msg.to),this._sendText(this._initialPacket.uuid,this._initialPacket),this.isData?this._sendData():this._onSent&&this._onSent()}},{key:"_sendData",value:function(){var e=this,t={},n={};t.max=e._size,n.max=t.max,t.value=0,n.value=0;var r=e._channel,o=e._packetSize,i=5*o,a=!0,s=void 0,c=!1;"number"==typeof r.bufferedAmountLowThreshold&&(console.info("[P2PDataSender] Using the bufferedamountlow event for flow control"),a=!1,i=o/2,r.bufferedAmountLowThreshold=i);var u=function e(){r.removeEventListener("bufferedamountlow",e),d()},d=function n(){for(;t.value<t.max&&!e._cancel;){if(r.bufferedAmount>i)return void(a?setTimeout(n,250):r.addEventListener("bufferedamountlow",u));s=e._data.slice(t.value,t.value+o),t.value+o<t.max?t.value+=o:(c=!0,t.value=t.max),e._send(e._initialPacket.uuid,s),c&&e._onSent&&e._onSent()}};setTimeout(d,5)}},{key:"onSent",value:function(e){this._onSent=e}},{key:"onProgress",value:function(e){this.onProgress=e}}]),e}();t.default=o}]).default});",
      "sourceCodeClassname": "P2PRequesterProtoStub",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "1.00",
    "description": "P2P Requester Protostub ",
    "language": "javascript",
    "cguid": "4bcb9977c1c46c13278273a67b5fe7aab",
    "type": "ProtoStubs",
    "constraints": {
      "windowSandbox": true
    },
    "objectName": "P2PRequesterProtoStub",
    "configuration": {
      "iceServers": [
        {
          "urls": "turn:numb.viagenie.ca",
          "credential": "zJcH3erd9cUv5Zh",
          "username": "luis-t-duarte@telecom.pt"
        },
        {
          "urls": [
            "stun:stun.voiparound.com",
            "stun:stun.voipbuster.com",
            "stun:stun.voipstunt.com",
            "stun:stun.voxgratia.org",
            "stun:stun.ekiga.net",
            "stun:stun.schlund.de",
            "stun:stun.iptel.org",
            "stun:stun.l.google.com:19302",
            "stun:stun1.l.google.com:19302",
            "stun:stun.ideasip.com",
            "stun:stun4.l.google.com:19302",
            "stun:stun2.l.google.com:19302",
            "stun:stun3.l.google.com:19302"
          ]
        }
      ],
      "iceTransportPolicy": "all"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "SlackProtoStub": {
    "sourcePackage": {
      "sourceCode": "!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("activate",[],t):"object"==typeof exports?exports.activate=t():e.activate=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=3)}([function(e,t,r){var n=r(1);e.exports=function(e,t){return Object.keys(n).forEach(r=>{var n=r.split("."),o=n.shift();void 0===e[o]&&(e[o]={}),function e(o){var i=n.shift();0===n.length?o[i]=t.bind({},r):(void 0===o[i]&&(o[i]={}),e(o[i]))}(e[o])}),e}},function(e,t){e.exports={"api.test":[],"apps.permissions.info":["token"],"apps.permissions.request":["token","scopes","trigger_id"],"auth.revoke":["token"],"auth.test":["token"],"bots.info":["token"],"channels.archive":["token","channel"],"channels.create":["token","name"],"channels.history":["token","channel"],"channels.info":["token","channel"],"channels.invite":["token","channel","user"],"channels.join":["token","name"],"channels.kick":["token","channel","user"],"channels.leave":["token","channel"],"channels.list":["token"],"channels.mark":["token","channel","ts"],"channels.rename":["token","channel","name"],"channels.replies":["token","channel","thread_ts"],"channels.setPurpose":["token","channel","purpose"],"channels.setTopic":["token","channel","topic"],"channels.unarchive":["token","channel"],"chat.delete":["token","channel","ts"],"chat.meMessage":["token","channel","text"],"chat.postEphemeral":["token","channel","text","user"],"chat.postMessage":["token","channel","text"],"chat.unfurl":["token","channel","ts","unfurls"],"chat.update":["token","channel","text","ts"],"conversations.archive":["token","channel"],"conversations.close":["token","channel"],"conversations.create":["token","name"],"conversations.history":["token","channel"],"conversations.info":["token","channel"],"conversations.invite":["token","channel","users"],"conversations.join":["token","channel"],"conversations.kick":["token","channel","user"],"conversations.leave":["token","channel"],"conversations.list":["token"],"conversations.members":["token","channel"],"conversations.open":["token"],"conversations.rename":["token","channel","name"],"conversations.replies":["token","channel","ts"],"conversations.setPurpose":["token","channel","purpose"],"conversations.setTopic":["token","channel","topic"],"conversations.unarchive":["token","channel"],"dnd.endDnd":["token"],"dnd.endSnooze":["token"],"dnd.info":["token"],"dnd.setSnooze":["token","num_minutes"],"dnd.teamInfo":["token"],"emoji.list":["token"],"files.comments.add":["token","comment","file"],"files.comments.delete":["token","file","id"],"files.comments.edit":["token","comment","file","id"],"files.delete":["token","file"],"files.info":["token","file"],"files.list":["token"],"files.revokePublicURL":["token","file"],"files.sharedPublicURL":["token","file"],"files.upload":["token"],"groups.archive":["token","channel"],"groups.create":["token","name"],"groups.createChild":["token","channel"],"groups.history":["token","channel"],"groups.info":["token","channel"],"groups.invite":["token","channel","user"],"groups.kick":["token","channel","user"],"groups.leave":["token","channel"],"groups.list":["token"],"groups.mark":["token","channel","ts"],"groups.open":["token","channel"],"groups.rename":["token","channel","name"],"groups.replies":["token","channel","thread_ts"],"groups.setPurpose":["token","channel","purpose"],"groups.setTopic":["token","channel","topic"],"groups.unarchive":["token","channel"],"im.close":["token","channel"],"im.history":["token","channel"],"im.list":["token"],"im.mark":["token","channel","ts"],"im.open":["token","user"],"im.replies":["token","channel","thread_ts"],"mpim.close":["token","channel"],"mpim.history":["token","channel"],"mpim.list":["token"],"mpim.mark":["token","channel","ts"],"mpim.open":["token","users"],"mpim.replies":["token","channel","thread_ts"],"oauth.access":["client_id","client_secret","code"],"oauth.token":["client_id","client_secret","code"],"pins.add":["token","channel"],"pins.list":["token","channel"],"pins.remove":["token","channel"],"reactions.add":["token","name"],"reactions.get":["token"],"reactions.list":["token"],"reactions.remove":["token","name"],"reminders.add":["token","text","time"],"reminders.complete":["token","reminder"],"reminders.delete":["token","reminder"],"reminders.info":["token","reminder"],"reminders.list":["token"],"rtm.connect":["token"],"rtm.start":["token"],"search.all":["token","query"],"search.files":["token","query"],"search.messages":["token","query"],"stars.add":["token"],"stars.list":["token"],"stars.remove":["token"],"team.accessLogs":["token"],"team.billableInfo":["token"],"team.info":["token"],"team.integrationLogs":["token"],"team.profile.get":["token"],"usergroups.create":["token","name"],"usergroups.disable":["token","usergroup"],"usergroups.enable":["token","usergroup"],"usergroups.list":["token"],"usergroups.update":["token","usergroup"],"usergroups.users.list":["token","usergroup"],"usergroups.users.update":["token","usergroup","users"],"users.deletePhoto":["token"],"users.getPresence":["token","user"],"users.identity":["token"],"users.info":["token","user"],"users.list":["token"],"users.setActive":["token"],"users.setPhoto":["token","image"],"users.setPresence":["token","presence"],"users.profile.get":["token"],"users.profile.set":["token"]}},function(e,t,r){let n=r(5),o=encodeURIComponent,i=e=>Object.keys(e).map(t=>o(t)+"="+o(e[t])).join("&");async function s(e,t,r){try{var o=n(e,t);if(o)throw o;Object.keys(t).forEach(function(e){"object"==typeof t[e]&&(t[e]=JSON.stringify(t[e]))});var s={method:"POST",headers:new Headers({"Content-Type":"application/x-www-form-urlencoded"}),body:i(t)},a=await fetch(`https://slack.com/api/${e}`,s),u=await a.json();u.error?r(Error(u.error)):r(null,u)}catch(e){r(e)}}e.exports=function(e,t,r){if(!r)return new Promise(function(r,n){s(e,t,function(e,t){e?n(e):r(t)})});s(e,t,r)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();t.default=function(e,t,r){return{name:"SlackProtoStub",instance:new l(e,t,r)}};var o=c(r(4)),i=r(7),s=(c(r(8)),r(9)),a=c(r(10)),u=r(11);function c(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(t,r,n){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The runtimeProtoStubURL is a needed parameter");if(!r)throw new Error("The bus is a needed parameter");if(!n)throw new Error("The config is a needed parameter");console.log("[SlackProtostub] Constructor Loaded");var a=this;this._ws=null,this._toSubscribePresence=[],this._addedUsersInfo=[],this._alreadyCreated=!1,this._slack=o.default,this._usersUpdated=!1,this._subscribedList=[],this._messageHistoryControl={},this._usersList=[],this._channelsList=[],this._id=0,this._token="",this._dataObjectReporterURL,this._contextReportersInfo={},this._syncher=new i.Syncher(t,r,n),this._chatManager=new s.ChatManager(t,r,n,this._syncher),this._contextReporter=new u.ContextReporter(t,r,n,this._syncher),this._myUrl=t,this._bus=r,this._config=n,this._runtimeSessionURL=n.runtimeURL,this._reOpen=!1,this._chatManager.onInvitation(function(e){a._onSlackInvitation(e)}),this._notificationHandler=new i.NotificationHandler(r),this._notificationHandler.onNotification("comm",function(e){a._chatManager.processNotification(e)}),r.addListener("*",function(e){if(e.from!==t)switch(console.log("[SlackProtostub] new msg ",e),e.type){case"create":a._notificationHandler.onCreate(e);break;case"delete":a._notificationHandler.onDelete(e)}}),a._sendStatus("created")}return n(e,[{key:"_filter",value:function(e){return e.via!==this._myUrl}},{key:"_open",value:function(e,t){var r=this;r._session?console.log("[SlackProtostub] session already exist"):(console.log("[SlackProtostub] creating Session for token:",e),r._sendStatus("in-progress"),r._session=this._slack.rtm.connect({token:e,batch_presence_aware:1,presence_sub:!0}),console.log("[SlackProtostub] session",r._session),r._session.createdTime=(new Date).getTime()/1e3,r._session.then(function(e){console.log("[SlackProtostub] Session result",e),e.ok&&(r._ws=new WebSocket(e.url),console.log("[SlackProtostub] websocket",r._ws),console.log("[SlackProtostub] websocket url ",r._ws.url),r._ws.onmessage=function(e){var t=JSON.parse(e.data);console.log("[SlackProtostub] new msg on webSocket",t),"message"==t.type?r._handleNewMessage(t):"presence_change"==t.type?r._handlePresenceChange(t):"member_joined_channel"==t.type&&r._handleNewUser(t)},r._ws.onerror=function(e){console.log("[SlackProtostub] websocker Error",e)})}),r._sendStatus("live")),setTimeout(function(){t()})}},{key:"_resumeReporter",value:function(e){var t=this;return new Promise(function(r,n){console.log("[SlackProtostub] resuming reporter of ",e),t._syncher.resumeReporters({store:!0,reporter:e}).then(function(t){var n=Object.keys(t);console.log("[SlackProtostub] ",t,n);return n.forEach(function(n){if(t[n]._name===e&&n.startsWith("context://"))return console.log("[SlackProtostub] reporter to return",t[n]),r(t[n])}),r(!1)})})}},{key:"_onSlackInvitation",value:function(e){var t=this;e.identity.hasOwnProperty("accessToken")&&e.identity.accessToken?(this._token=e.identity.accessToken,t._open(this._token,function(){if(t._filter(e)){console.log("[SlackProtostub] After Filter",e);var r=e.schema;if(e.value.name){var n=r.split("/");"Communication"===n[n.length-1]?t._getSlackInformation(e.to,e.identity.input.user_id).then(function(r){var n=r.ownInfo,o=r.invInfo;console.log("Slack User information: ",r,e);var i=new a.default(n.name,"slack://slack.com/"+n.name+"@slack.com",n.profile.image_192,n.name,"","slack.com",void 0,n.profile),s=new a.default(o.name,"slack://slack.com/"+o.name+"@slack.com",o.profile.image_192,o.name,"","slack.com",void 0,o.profile);e.ack(200),console.log("[SlackProtostub] subscribing object",e.url,i);var u={id:o.id,name:o.name,userURL:s.userProfile.userURL,identity:s},c={id:e.identity.input.user_id,userURL:i.userProfile.userURL};if(t._alreadyCreated)if(console.log("[SlackProtostub] Already created",e),console.log(t._subscribedList.length),0!=t._subscribedList.length)t._channelStatusInfo(e,u,c);else{var l=e.to.split("//")[0]+"//slack.com/"+e.to.split("//")[1];t._createNewContextReporter(l)}else{console.log("[SlackProtostub] Not Already created",e),t._alreadyCreated=!0,t._dataObjectReporterURL=e.url;var d={user:"slack://"+n.name+"@slack.com",domain:"slack.com",id:e.identity.input.user_id,userURL:"slack://slack.com/"+n.name+"@slack.com",identity:i};t._addedUsersInfo.push(d),t._createNewContextReporter(i.userProfile.userURL).then(function(r){1==r&&t._chatManager.join(e.url,!1,i).then(function(r){t._prepareChat(r);var n={type:"presence_sub",ids:t._toSubscribePresence};console.log("[SlackProtostub] websocket sentmessage",t._ws.readyState,n),t._ws.send(JSON.stringify(n));var o={urlDataObj:e.url,schema:e.schema,subscribed:!0,identity:i,chat:r};t._subscribedList.push(o),console.log("[SlackProtostub] subscribed list",t._subscribedList),e.identity.input.user_id&&(t._id=e.identity.input.user_id),t._channelStatusInfo(e,u,c)})})}}):e.error("Invalid Scheme: "+n[n.length-1])}else e.error("Chat Name Missing")}})):e.error("Access Token Missing")}},{key:"_createNewContextReporter",value:function(e){var t=this;return new Promise(function(r,n){t._resumeReporter(e).then(function(n){console.log("[SlackProtostub] TEST creating reporter for",e),t._addedUsersInfo.forEach(function(o){if(o.userURL==e){console.log("[SlackProtostub] TEST get presense for ",o);var i={token:t._token,user:o.id};t._slack.users.getPresence(i,function(i,s){if(i)return console.error("[SlackProtostub] error",i),r(!1);if(console.log("[SlackProtostub] PRESENCE OF USER",o,s),!s.ok)return r(!1);if(t._toSubscribePresence.push(o.id),console.log("[SlackProtostub] toSubscribeArray",t._toSubscribePresence,"intext",JSON.stringify(t._toSubscribePresence)),console.log("[SlackProtostub] resumed obj",n),n)return console.log("[SlackProtostub] reporter for this userURL:",e," already exists ",n),t._contextReportersInfo[o.id]=n,r(!0);var a=t._createNewObjPresence(s.presence);console.log("[SlackProtostub] creating a new contextReporter for invitedUSER ",a,o),t._contextReporter.create(o.userURL,a,["availability_context"],o.userURL,o.userURL).then(function(e){return console.log("[SlackProtostub] CONTEXT RETURNED",e),e.onSubscription(function(e){e.accept(),console.log("[SlackProtostub] new subs",e)}),t._contextReportersInfo[o.id]=e,r(!0)}).catch(function(e){console.error("[SlackProtostub] err",e)}),console.log("[SlackProtostub] websocket readyState",t._ws.readyState)})}})}).catch(function(e){return console.log("[SlackProtostub] error",e),r(!1)})})}},{key:"_createNewObjPresence",value:function(e){return Object.assign({},{id:"_"+Math.random().toString(36).substr(2,9),values:[{value:this._getPresence(e),name:"availability",type:"availability_status",unit:"pres"}]})}},{key:"_getPresence",value:function(e){return"active"===e?"available":"unavailable"}},{key:"_getSlackInformation",value:function(e,t){var r=this;return new Promise(function(n,o){var i="https://slack.com/api/users.list?token="+r._token,s="https://slack.com/api/channels.list?token="+r._token,a=r._sendHTTPRequest("GET",i),u=r._sendHTTPRequest("GET",s);Promise.all([a,u]).then(function(o){r._usersList=o[0].members,r._channelsList=o[1].channels;var i=e.split("://")[1].split("@")[0],s=r._usersList.filter(function(e){return e.name===i})[0],a=r._usersList.filter(function(e){return e.id===t})[0];n({invInfo:s,ownInfo:a})},function(e){console.error("[SlackProtostub] ",e),o(e)})})}},{key:"_channelStatusInfo",value:function(e,t,r){var n=this,o=e.value.name.split(" ").join("-").replace(/\//gi,"-"),i=n._channelsList.filter(function(e){return e.name===o})[0],s=null;if(i){console.log("[SlackProtostub] channel exist",i);var a=!1;(s=n._channelsList.filter(function(e){return e.name===o})[0].members).forEach(function(e){e===t.id&&(a=!0)}),console.log("[SlackProtostub] channel members",s,"   ->",a);var u=0,c=0;n._subscribedList.forEach(function(t){t.urlDataObj===e.url&&(c=u),u++}),console.log("[SlackProtostub] channels",n._subscribedList,n._subscribedList.length,c),n._subscribedList[c].channelID=i.id,a||n._invite(t.id,i.id)}else n._createChannel(o,e.url).then(function(r){console.log("[SlackProtostub]  after create channel ",r),r&&n._invite(t.id,"",e.url)});n._usersUpdated?console.log("[SlackProtostub] users Already Updated"):n._addAllUsersToHyperty(s,t,r)}},{key:"_addAllUsersToHyperty",value:function(e,t,r){var n=this;n._usersUpdated=!0;var o=[],i=void 0;console.log("[SlackProtostub] lets check if users needs to be added"),e&&n._usersList.forEach(function(s){e.forEach(function(e){if(e===s.id&&t.id!=s.id&&r.id!=s.id){console.log("[SlackProtostub] to add ",s.id);var u=new a.default(s.name,"slack://slack.com/"+s.name+"@slack.com",s.profile.image_192,s.name,"","slack.com",void 0,s.profile);i={user:"slack://"+s.name+"@slack.com",domain:"slack.com",id:s.id,userURL:"slack://slack.com/"+s.name+"@slack.com",identity:u},n._addedUsersInfo.push(i),o.push(i)}})}),i={user:"slack://"+t.name+"@slack.com",domain:"slack.com",id:t.id,userURL:"slack://slack.com/"+t.name+"@slack.com",identity:t.identity},n._addedUsersInfo.push(i),o.push(i),o.forEach(function(e){console.log("[SlackProtostub] TEST joining with user",e),e.userURL!==r.userURL&&n._createNewContextReporter(e.userURL).then(function(t){1==t&&n._chatManager.join(n._dataObjectReporterURL,!1,e.identity).then(function(t){console.log("[SlackProtostub] chatmanager JOIN",t,e.userURL,r.userURL),n._prepareChat(t);var o={type:"presence_sub",ids:n._toSubscribePresence};console.log("[SlackProtostub] websocket sentmessage",n._ws.readyState,o),n._ws.send(JSON.stringify(o))}).catch(function(e){console.log("[SlackProtostub] chatmanager JOIN error",e)})})})}},{key:"_handleNewUser",value:function(e){console.log("[SlackProtostub] Handling a new user",e);var t=this,r=void 0;if(t._subscribedList.forEach(function(t){t.channelID===e.channel&&(r=t)}),r){var n=t._usersList.filter(function(t){return t.id===e.user})[0],o=new a.default(n.name,"slack://slack.com/"+n.name+"@slack.com",n.profile.image_192,n.name,"","slack.com",void 0,n.profile),i={user:"slack://"+n.name+"@slack.com",domain:"slack.com",id:e.user,userURL:"slack://slack.com/"+n.name+"@slack.com",identity:o};t._addedUsersInfo.push(i),console.log("[SlackProtostub] Joining chat",r.urlDataObj," with",o),t._createNewContextReporter(o.userProfile.userURL).then(function(e){1==e&&t._chatManager.join(r.urlDataObj,!1,o).then(function(e){t._prepareChat(e);var r={type:"presence_sub",ids:t._toSubscribePresence};console.log("[SlackProtostub] websocket sentmessage",t._ws.readyState,r),t._ws.send(JSON.stringify(r))})})}}},{key:"_handlePresenceChange",value:function(e){if(console.log("[SlackProtostub] updating presence of user"),this._contextReportersInfo[e.user]){var t=this._contextReportersInfo[e.user];t.data.values[0].value=this._getPresence(e.presence),console.log("[SlackProtostub] presence of user",e.user," updated to",t.data)}}},{key:"_handleNewMessage",value:function(e){console.log("[SlackProtostub] Handling a new message",e);var t="",r=void 0;this._subscribedList.forEach(function(n){n.channelID===e.channel&&(t=n.channelID,r=n.chat)}),console.log("[SlackProtostub] subscribed list",this._subscribedList),e.channel&&e.ts>this._session.createdTime&&(e.channel===t&&e.user!==this._id||!e.hasOwnProperty("bot_id")&&e.user===this._id&&e.channel===t)&&this._getUserInfo(e.user).then(function(t){console.log("[SlackProtostub] msg to addChild",e.text,"     identity:",t),r.send(e.text,t)})}},{key:"_getUserInfo",value:function(e){var t=this;return new Promise(function(r){t._slack.users.info({token:t._token,user:e},function(e,t){if(e)console.error("[SlackProtostub] error",e);else{console.log("[SlackProtostub getUserInfo] ",t);var n=new a.default(t.user.name,"slack://slack.com/"+t.user.name+"@slack.com",t.user.profile.image_192,t.user.name,"","slack.com");r(n)}})})}},{key:"_prepareChat",value:function(e){var t=this;console.log("[SlackProtostub] chat",e),e.onMessage(function(r){console.info("[SlackProtostub] onMessage: ",r),console.info("[SlackProtostub] Observer - Message History Control ",t._messageHistoryControl);var n=e.child_cseq,o=e._dataObjectObserver.url,i=void 0;(t._subscribedList.forEach(function(e){e.urlDataObj===o&&(i=e.channelID)}),t._messageHistoryControl.hasOwnProperty(o))?t._messageHistoryControl[o].id!==n&&(t._messageHistoryControl[o].id=n,t._deliver(r,i)):(t._messageHistoryControl[o]={id:n},t._deliver(r,i))})}},{key:"_invite",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments[2];""==t&&this._subscribedList.forEach(function(e){e.urlDataObj===r&&(t=e.channelID)});var n={token:this._token,channel:t,user:e};this._slack.channels.invite(n,function(e,t){e?console.error("[SlackProtostub] error",e):console.log("[SlackProtostub] user invited with sucess",t)})}},{key:"_deliver",value:function(e,t){var r=this;if(console.log("[SlackProtostub] Msg to Deliver: ",e," on channel:",t),t&&e.value&&e.hasOwnProperty("identity")&&e.identity.hasOwnProperty("userProfile")&&e.identity.userProfile.hasOwnProperty("name")&&e.identity.userProfile.name){var n=e.identity.userProfile.name+": "+e.value.content,o={as_user:!0,token:r._token,channel:t,text:n};console.log("[SlackProtostub] (PostMessage slack api) token(",r._token,")  channel(",t,") text(",e.value.content,")"),r._slack.chat.postMessage(o,function(n,o){if(n)if("not_in_channel"==n.message){console.error("[SlackProtostub] Channel exist, but user is not on channel",n);var i=r._channelsList.filter(function(e){return e.id===t})[0],s={token:r._token,name:i.name};r._slack.channels.join(s),r._deliver(e,t)}else console.error("[SlackProtostub] error",n);else console.log("[SlackProtostub] PostMessage with Sucess",o)})}}},{key:"_createChannel",value:function(e,t){var r=this;return new Promise(function(n){var o={token:r._token,name:e};console.log("[SlackProtostub] Creating a new channel toCreate:",o,"  channelObjUrl:",t),r._slack.channels.create(o,function(e,o){if(e)console.error("[SlackProtostub] ",e);else if(o.ok){console.log("[SlackProtostub] Channel Created with Sucess ",o),console.log("[SlackProtostub] Associate a new channel ID",o.channel.id,"to urlDataObj",t);var i=0,s=0;r._subscribedList.forEach(function(e){e.urlDataObj===t&&(s=i),i++}),r._subscribedList[s].channelID=o.channel.id,console.log("[SlackProtostub] subscribed list",r._subscribedList),n(!0)}})})}},{key:"_sendHTTPRequest",value:function(e,t){return new Promise(function(r,n){var o=new XMLHttpRequest;"withCredentials"in o?o.open(e,t,!0):"undefined"!=typeof XDomainRequest?(o=new XDomainRequest).open(e,t):o=null,o?(o.onreadystatechange=function(){if(4===o.readyState)if(200===o.status){var e=JSON.parse(o.responseText);r(e)}else 400===o.status?n("There was an error processing the token"):n("something else other than 200 was returned")},o.send()):n("CORS not supported")})}},{key:"_sendStatus",value:function(e,t){console.log("[SlackProtostub status changed] to ",e),this._state=e;var r={type:"update",from:this._myUrl,to:this._myUrl+"/status",body:{value:e}};t&&(r.body.desc=t),this._bus.postMessage(r)}},{key:"config",get:function(){return this._config}},{key:"runtimeSession",get:function(){return this._runtimeSessionURL}}]),e}()},function(e,t,r){let n=r(0),o=r(2),i=r(6);e.exports=n(i,o)},function(e,t,r){var n=r(1);e.exports=function(e,t){let r=n[e].filter(e=>void 0===t[e]);return!!r.length&&Error(`${e} missing params: ${r.join(", ")}`)}},function(e,t,r){var n=r(0),o=r(2);e.exports=function(e){e||(e={});return new class{constructor(){n(this,function(t,r,n){return r.token=r.token||e.token,o(t,r,n)})}}}},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=196)}([function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t,r){var n=r(36)("wks"),o=r(23),i=r(1).Symbol,s="function"==typeof i;(e.exports=function(e){return n[e]||(n[e]=s&&i[e]||(s?i:o)("Symbol."+e))}).store=n},function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),(0,n.default)(e,o.key,o)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){var n=r(1),o=r(0),i=r(14),s=r(11),a=r(10),u=function(e,t,r){var c,l,d,f=e&u.F,p=e&u.G,h=e&u.S,y=e&u.P,v=e&u.B,b=e&u.W,_=p?o:o[t]||(o[t]={}),m=_.prototype,g=p?n:h?n[t]:(n[t]||{}).prototype;for(c in p&&(r=t),r)(l=!f&&g&&void 0!==g[c])&&a(_,c)||(d=l?g[c]:r[c],_[c]=p&&"function"!=typeof g[c]?r[c]:v&&l?i(d,n):b&&g[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):y&&"function"==typeof d?i(Function.call,d):d,y&&((_.virtual||(_.virtual={}))[c]=d,e&u.R&&m&&!m[c]&&s(m,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){var n=r(9),o=r(39),i=r(27),s=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),o=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(55),o=r(30);e.exports=function(e){return n(o(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,r){e.exports={default:r(102),__esModule:!0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(58)),o=i(r(42));function i(e){return e&&e.__esModule?e:{default:e}}function s(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$3,$4").split(",")}var r=t(e);if(r[0]===e&&!r[0].includes("@")){var n={type:"",domain:e,identity:""};return console.warn("[DivideURL] DivideURL don't support url without scheme. Please review your url address",e),n}return r[0]===e&&r[0].includes("@")&&(r=t((r[0]===e?"smtp":r[0])+"://"+r[0])),r[1].includes("@")&&(r[2]=r[0]+"://"+r[1],r[1]=r[1].substr(r[1].indexOf("@")+1)),{type:r[0],domain:r[1],identity:r[2]}}function a(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}t.divideURL=s,t.divideEmail=function(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,o.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,n.default)(e))},t.getUserURLFromEmail=a,t.getUserEmailFromURL=function(e){var t=s(e);return t.identity.replace("/","")+"@"+t.domain},t.convertToUserURL=function(e){if("user://"===e.substring(0,7)){var t=s(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return a(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(".");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&r.push(e)});var i=void 0;r.forEach(function(t){i=e.replace(t,"*+*"),n=i.split(".").map(function(e){return"*+*"===e?t:e})})}return console.log("[ServiceFramework.Utils.checkAttribute]",n),n},t.parseAttributes=function(e){if(e.includes("://")){var t=e.split(/([0-9a-zA-Z][-\w]*):\/\//g)[0],r=t.split("."),n=e.replace(t,"");if(e.includes("identity")){var o=n.split("identity.");console.log("array2 "+o),n=o[0].slice(".",-1),o=o[1].split("."),r.push(n,"identity"),r=r.concat(o)}else r.push(n);return r.filter(Boolean)}return e.split(".")}},function(e,t,r){var n=r(45),o=r(37);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){var n,o;!function(i,s){"use strict";void 0===(o="function"==typeof(n=function(){var e=function(){},t="undefined",r=["trace","debug","info","warn","error"];function n(e,t){var r=e[t];if("function"==typeof r.bind)return r.bind(e);try{return Function.prototype.bind.call(r,e)}catch(t){return function(){return Function.prototype.apply.apply(r,[e,arguments])}}}function o(t,n){for(var o=0;o<r.length;o++){var i=r[o];this[i]=o<t?e:this.methodFactory(i,t,n)}this.log=this.debug}function i(r,i,s){return function(r){return"debug"===r&&(r="log"),typeof console!==t&&(void 0!==console[r]?n(console,r):void 0!==console.log?n(console,"log"):e)}(r)||function(e,r,n){return function(){typeof console!==t&&(o.call(this,r,n),this[e].apply(this,arguments))}}.apply(this,arguments)}function s(e,n,s){var a,u=this,c="loglevel";function l(){var e;if(typeof window!==t){try{e=window.localStorage[c]}catch(e){}if(typeof e===t)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(c)+"=");-1!==n&&(e=/^([^;]+)/.exec(r.slice(n))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}e&&(c+=":"+e),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=s||i,u.getLevel=function(){return a},u.setLevel=function(n,i){if("string"==typeof n&&void 0!==u.levels[n.toUpperCase()]&&(n=u.levels[n.toUpperCase()]),!("number"==typeof n&&n>=0&&n<=u.levels.SILENT))throw"log.setLevel() called with invalid level: "+n;if(a=n,!1!==i&&function(e){var n=(r[e]||"silent").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[c]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(c)+"="+n+";"}catch(e){}}}(n),o.call(u,n,e),typeof console===t&&n<u.levels.SILENT)return"No console available for logging"},u.setDefaultLevel=function(e){l()||u.setLevel(e,!1)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)};var d=l();null==d&&(d=null==n?"WARN":n),u.setLevel(d,!1)}var a=new s,u={};a.getLogger=function(e){if("string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=u[e];return t||(t=u[e]=new s(e,a.getLevel(),a.methodFactory)),t};var c=typeof window!==t?window.log:void 0;return a.noConflict=function(){return typeof window!==t&&window.log===a&&(window.log=c),a},a.getLoggers=function(){return u},a})?n.call(t,r,t,e):n)||(e.exports=o)}()},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,r){e.exports={default:r(91),__esModule:!0}},function(e,t,r){var n=r(8).f,o=r(10),i=r(2)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,r){var n=r(7),o=r(1).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(47));t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,n.default)(t))&&"function"!=typeof t?e:t}},function(e,t,r){"use strict";t.__esModule=!0;var n=s(r(93)),o=s(r(97)),i=s(r(47));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(n.default?(0,n.default)(e,t):e.__proto__=t)}},function(e,t,r){var n=r(36)("keys"),o=r(23);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t,r){var n=r(0),o=r(1),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(9),o=r(72),i=r(37),s=r(35)("IE_PROTO"),a=function(){},u=function(){var e,t=r(28)("iframe"),n=i.length;for(t.style.display="none",r(56).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[i[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(a.prototype=n(e),r=new a,a.prototype=null,r[s]=e):r=u(),void 0===t?r:o(r,t)}},function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},function(e,t,r){t.f=r(2)},function(e,t,r){var n=r(1),o=r(0),i=r(15),s=r(40),a=r(8).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:s.f(e)})}},function(e,t,r){e.exports={default:r(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(6),o=r(0),i=r(13);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],s={};s[e]=t(r),n(n.S+n.F*i(function(){r(1)}),"Object",s)}},function(e,t,r){var n=r(10),o=r(12),i=r(64)(!1),s=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=o(e),u=0,c=[];for(r in a)r!=s&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~i(c,r)||c.push(r));return c}},function(e,t,r){var n=r(29),o=r(16),i=r(12),s=r(27),a=r(10),u=r(39),c=Object.getOwnPropertyDescriptor;t.f=r(4)?c:function(e,t){if(e=i(e),t=s(t,!0),u)try{return c(e,t)}catch(e){}if(a(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t,r){"use strict";t.__esModule=!0;var n=s(r(79)),o=s(r(81)),i="function"==typeof o.default&&"symbol"==typeof n.default?function(e){return typeof e}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":typeof e};function s(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof o.default&&"symbol"===i(n.default)?function(e){return void 0===e?"undefined":i(e)}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":void 0===e?"undefined":i(e)}},function(e,t,r){"use strict";var n=r(15),o=r(6),i=r(50),s=r(11),a=r(17),u=r(71),c=r(26),l=r(53),d=r(2)("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,r,h,y,v,b){u(r,t,h);var _,m,g,O=function(e){if(!f&&e in R)return R[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},w=t+" Iterator",j="values"==y,k=!1,R=e.prototype,L=R[d]||R["@@iterator"]||y&&R[y],x=L||O(y),P=y?j?O("entries"):x:void 0,C="Array"==t&&R.entries||L;if(C&&(g=l(C.call(new e)))!==Object.prototype&&g.next&&(c(g,w,!0),n||"function"==typeof g[d]||s(g,d,p)),j&&L&&"values"!==L.name&&(k=!0,x=function(){return L.call(this)}),n&&!b||!f&&!k&&R[d]||s(R,d,x),a[t]=x,a[w]=p,y)if(_={values:j?x:O("values"),keys:v?x:O("keys"),entries:P},b)for(m in _)m in R||i(R,m,_[m]);else o(o.P+o.F*(f||k),t,_);return _}},function(e,t,r){var n=r(31),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){e.exports=r(11)},function(e,t,r){"use strict";var n=r(24);e.exports.f=function(e){return new function(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}(e)}},function(e,t,r){"use strict";var n=r(70)(!0);r(48)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){var n=r(10),o=r(32),i=r(35)("IE_PROTO"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,r){r(73);for(var n=r(1),o=r(11),i=r(17),s=r(2)("toStringTag"),a="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<a.length;u++){var c=a[u],l=n[c],d=l&&l.prototype;d&&!d[s]&&o(d,s,c),i[c]=i.Array}},function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(45),o=r(37).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){e.exports={default:r(76),__esModule:!0}},function(e,t,r){e.exports={default:r(61),__esModule:!0}},function(e,t){},function(e,t,r){r(62);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(6);n(n.S+n.F*!r(4),"Object",{defineProperty:r(8).f})},function(e,t,r){var n=r(21),o=r(2)("toStringTag"),i="Arguments"==n(function(){return arguments}());e.exports=function(e){var t,r,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:i?n(t):"Object"==(s=n(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,r){var n=r(12),o=r(49),i=r(65);e.exports=function(e){return function(t,r,s){var a,u=n(t),c=o(u.length),l=i(s,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},function(e,t,r){var n=r(9),o=r(24),i=r(2)("species");e.exports=function(e,t){var r,s=n(e).constructor;return void 0===s||void 0==(r=n(s)[i])?t:o(r)}},function(e,t,r){var n,o,i,s=r(14),a=r(108),u=r(56),c=r(28),l=r(1),d=l.process,f=l.setImmediate,p=l.clearImmediate,h=l.MessageChannel,y=l.Dispatch,v=0,b={},_=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},m=function(e){_.call(e.data)};f&&p||(f=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return b[++v]=function(){a("function"==typeof e?e:Function(e),t)},n(v),v},p=function(e){delete b[e]},"process"==r(21)(d)?n=function(e){d.nextTick(s(_,e,1))}:y&&y.now?n=function(e){y.now(s(_,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=m,n=s(i.postMessage,i,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+"","*")},l.addEventListener("message",m,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),_.call(e)}}:function(e){setTimeout(s(_,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(9),o=r(7),i=r(51);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(31),o=r(30);e.exports=function(e){return function(t,r){var i,s,a=String(o(t)),u=n(r),c=a.length;return u<0||u>=c?e?"":void 0:(i=a.charCodeAt(u))<55296||i>56319||u+1===c||(s=a.charCodeAt(u+1))<56320||s>57343?e?a.charAt(u):i:e?a.slice(u,u+2):s-56320+(i-55296<<10)+65536}}},function(e,t,r){"use strict";var n=r(38),o=r(16),i=r(26),s={};r(11)(s,r(2)("iterator"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(s,{next:o(1,r)}),i(e,t+" Iterator")}},function(e,t,r){var n=r(8),o=r(9),i=r(20);e.exports=r(4)?Object.defineProperties:function(e,t){o(e);for(var r,s=i(t),a=s.length,u=0;a>u;)n.f(e,r=s[u++],t[r]);return e}},function(e,t,r){"use strict";var n=r(74),o=r(75),i=r(17),s=r(12);e.exports=r(48)(Array,"Array",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])},"values"),i.Arguments=i.Array,n("keys"),n("values"),n("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){var n=r(0),o=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},function(e,t,r){var n=r(23)("meta"),o=r(7),i=r(10),s=r(8).f,a=0,u=Object.isExtensible||function(){return!0},c=!r(13)(function(){return u(Object.preventExtensions({}))}),l=function(e){s(e,n,{value:{i:"O"+ ++a,w:{}}})},d=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,n)){if(!u(e))return"F";if(!t)return"E";l(e)}return e[n].i},getWeak:function(e,t){if(!i(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},onFreeze:function(e){return c&&d.NEED&&u(e)&&!i(e,n)&&l(e),e}}},function(e,t,r){e.exports={default:r(119),__esModule:!0}},function(e,t,r){e.exports={default:r(80),__esModule:!0}},function(e,t,r){r(52),r(54),e.exports=r(40).f("iterator")},function(e,t,r){e.exports={default:r(82),__esModule:!0}},function(e,t,r){r(83),r(60),r(87),r(88),e.exports=r(0).Symbol},function(e,t,r){"use strict";var n=r(1),o=r(10),i=r(4),s=r(6),a=r(50),u=r(77).KEY,c=r(13),l=r(36),d=r(26),f=r(23),p=r(2),h=r(40),y=r(41),v=r(84),b=r(85),_=r(9),m=r(7),g=r(12),O=r(27),w=r(16),j=r(38),k=r(86),R=r(46),L=r(8),x=r(20),P=R.f,C=L.f,S=k.f,M=n.Symbol,U=n.JSON,D=U&&U.stringify,E=p("_hidden"),T=p("toPrimitive"),I={}.propertyIsEnumerable,H=l("symbol-registry"),A=l("symbols"),N=l("op-symbols"),F=Object.prototype,B="function"==typeof M,V=n.QObject,z=!V||!V.prototype||!V.prototype.findChild,G=i&&c(function(){return 7!=j(C({},"a",{get:function(){return C(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=P(F,t);n&&delete F[t],C(e,t,r),n&&e!==F&&C(F,t,n)}:C,q=function(e){var t=A[e]=j(M.prototype);return t._k=e,t},J=B&&"symbol"==typeof M.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof M},Z=function(e,t,r){return e===F&&Z(N,t,r),_(e),t=O(t,!0),_(r),o(A,t)?(r.enumerable?(o(e,E)&&e[E][t]&&(e[E][t]=!1),r=j(r,{enumerable:w(0,!1)})):(o(e,E)||C(e,E,w(1,{})),e[E][t]=!0),G(e,t,r)):C(e,t,r)},W=function(e,t){_(e);for(var r,n=v(t=g(t)),o=0,i=n.length;i>o;)Z(e,r=n[o++],t[r]);return e},Y=function(e){var t=I.call(this,e=O(e,!0));return!(this===F&&o(A,e)&&!o(N,e))&&(!(t||!o(this,e)||!o(A,e)||o(this,E)&&this[E][e])||t)},K=function(e,t){if(e=g(e),t=O(t,!0),e!==F||!o(A,t)||o(N,t)){var r=P(e,t);return!r||!o(A,t)||o(e,E)&&e[E][t]||(r.enumerable=!0),r}},$=function(e){for(var t,r=S(g(e)),n=[],i=0;r.length>i;)o(A,t=r[i++])||t==E||t==u||n.push(t);return n},X=function(e){for(var t,r=e===F,n=S(r?N:g(e)),i=[],s=0;n.length>s;)!o(A,t=n[s++])||r&&!o(F,t)||i.push(A[t]);return i};B||(a((M=function(){if(this instanceof M)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(r){this===F&&t.call(N,r),o(this,E)&&o(this[E],e)&&(this[E][e]=!1),G(this,e,w(1,r))};return i&&z&&G(F,e,{configurable:!0,set:t}),q(e)}).prototype,"toString",function(){return this._k}),R.f=K,L.f=Z,r(57).f=k.f=$,r(29).f=Y,r(43).f=X,i&&!r(15)&&a(F,"propertyIsEnumerable",Y,!0),h.f=function(e){return q(p(e))}),s(s.G+s.W+s.F*!B,{Symbol:M});for(var Q="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Q.length>ee;)p(Q[ee++]);for(var te=x(p.store),re=0;te.length>re;)y(te[re++]);s(s.S+s.F*!B,"Symbol",{for:function(e){return o(H,e+="")?H[e]:H[e]=M(e)},keyFor:function(e){if(!J(e))throw TypeError(e+" is not a symbol!");for(var t in H)if(H[t]===e)return t},useSetter:function(){z=!0},useSimple:function(){z=!1}}),s(s.S+s.F*!B,"Object",{create:function(e,t){return void 0===t?j(e):W(j(e),t)},defineProperty:Z,defineProperties:W,getOwnPropertyDescriptor:K,getOwnPropertyNames:$,getOwnPropertySymbols:X}),U&&s(s.S+s.F*(!B||c(function(){var e=M();return"[null]"!=D([e])||"{}"!=D({a:e})||"{}"!=D(Object(e))})),"JSON",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(m(t)||void 0!==e)&&!J(e))return b(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!J(t))return t}),n[1]=t,D.apply(U,n)}}),M.prototype[T]||r(11)(M.prototype,T,M.prototype.valueOf),d(M,"Symbol"),d(Math,"Math",!0),d(n.JSON,"JSON",!0)},function(e,t,r){var n=r(20),o=r(43),i=r(29);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var s,a=r(e),u=i.f,c=0;a.length>c;)u.call(e,s=a[c++])&&t.push(s);return t}},function(e,t,r){var n=r(21);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n=r(12),o=r(57).f,i={}.toString,s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return s.slice()}}(e):o(n(e))}},function(e,t,r){r(41)("asyncIterator")},function(e,t,r){r(41)("observable")},function(e,t,r){r(90),e.exports=r(0).Object.keys},function(e,t,r){var n=r(32),o=r(20);r(44)("keys",function(){return function(e){return o(n(e))}})},function(e,t,r){r(92),e.exports=r(0).Object.getPrototypeOf},function(e,t,r){var n=r(32),o=r(53);r(44)("getPrototypeOf",function(){return function(e){return o(n(e))}})},function(e,t,r){e.exports={default:r(94),__esModule:!0}},function(e,t,r){r(95),e.exports=r(0).Object.setPrototypeOf},function(e,t,r){var n=r(6);n(n.S,"Object",{setPrototypeOf:r(96).set})},function(e,t,r){var n=r(7),o=r(9),i=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=r(14)(Function.call,r(46).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:i}},function(e,t,r){e.exports={default:r(98),__esModule:!0}},function(e,t,r){r(99);var n=r(0).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(6);n(n.S,"Object",{create:r(38)})},function(e,t,r){"use strict";t.__esModule=!0;var n=i(r(25)),o=i(r(125));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i){null===t&&(t=Function.prototype);var s=(0,o.default)(t,r);if(void 0===s){var a=(0,n.default)(t);return null===a?void 0:e(a,r,i)}if("value"in s)return s.value;var u=s.get;return void 0!==u?u.call(i):void 0}},function(e,t,r){var n=r(63),o=r(2)("iterator"),i=r(17);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[n(e)]}},function(e,t,r){r(60),r(52),r(54),r(103),r(114),r(115),e.exports=r(0).Promise},function(e,t,r){"use strict";var n,o,i,s,a=r(15),u=r(1),c=r(14),l=r(63),d=r(6),f=r(7),p=r(24),h=r(104),y=r(105),v=r(66),b=r(67).set,_=r(109)(),m=r(51),g=r(68),O=r(110),w=r(69),j=u.TypeError,k=u.process,R=k&&k.versions,L=R&&R.v8||"",x=u.Promise,P="process"==l(k),C=function(){},S=o=m.f,M=!!function(){try{var e=x.resolve(1),t=(e.constructor={})[r(2)("species")]=function(e){e(C,C)};return(P||"function"==typeof PromiseRejectionEvent)&&e.then(C)instanceof t&&0!==L.indexOf("6.6")&&-1===O.indexOf("Chrome/66")}catch(e){}}(),U=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},D=function(e,t){if(!e._n){e._n=!0;var r=e._c;_(function(){for(var n=e._v,o=1==e._s,i=0,s=function(t){var r,i,s,a=o?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{a?(o||(2==e._h&&I(e),e._h=1),!0===a?r=n:(l&&l.enter(),r=a(n),l&&(l.exit(),s=!0)),r===t.promise?c(j("Promise-chain cycle")):(i=U(r))?i.call(r,u,c):u(r)):c(n)}catch(e){l&&!s&&l.exit(),c(e)}};r.length>i;)s(r[i++]);e._c=[],e._n=!1,t&&!e._h&&E(e)})}},E=function(e){b.call(u,function(){var t,r,n,o=e._v,i=T(e);if(i&&(t=g(function(){P?k.emit("unhandledRejection",o,e):(r=u.onunhandledrejection)?r({promise:e,reason:o}):(n=u.console)&&n.error&&n.error("Unhandled promise rejection",o)}),e._h=P||T(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},T=function(e){return 1!==e._h&&0===(e._a||e._c).length},I=function(e){b.call(u,function(){var t;P?k.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},H=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),D(t,!0))},A=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw j("Promise can't be resolved itself");(t=U(e))?_(function(){var n={_w:r,_d:!1};try{t.call(e,c(A,n,1),c(H,n,1))}catch(e){H.call(n,e)}}):(r._v=e,r._s=1,D(r,!1))}catch(e){H.call({_w:r,_d:!1},e)}}};M||(x=function(e){h(this,x,"Promise","_h"),p(e),n.call(this);try{e(c(A,this,1),c(H,this,1))}catch(e){H.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(111)(x.prototype,{then:function(e,t){var r=S(v(this,x));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=P?k.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&D(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=c(A,e,1),this.reject=c(H,e,1)},m.f=S=function(e){return e===x||e===s?new i(e):o(e)}),d(d.G+d.W+d.F*!M,{Promise:x}),r(26)(x,"Promise"),r(112)("Promise"),s=r(0).Promise,d(d.S+d.F*!M,"Promise",{reject:function(e){var t=S(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!M),"Promise",{resolve:function(e){return w(a&&this===s?x:this,e)}}),d(d.S+d.F*!(M&&r(113)(function(e){x.all(e).catch(C)})),"Promise",{all:function(e){var t=this,r=S(t),n=r.resolve,o=r.reject,i=g(function(){var r=[],i=0,s=1;y(e,!1,function(e){var a=i++,u=!1;r.push(void 0),s++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--s||n(r))},o)}),--s||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=S(t),n=r.reject,o=g(function(){y(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(14),o=r(106),i=r(107),s=r(9),a=r(49),u=r(101),c={},l={};(t=e.exports=function(e,t,r,d,f){var p,h,y,v,b=f?function(){return e}:u(e),_=n(r,d,t?2:1),m=0;if("function"!=typeof b)throw TypeError(e+" is not iterable!");if(i(b)){for(p=a(e.length);p>m;m++)if((v=t?_(s(h=e[m])[0],h[1]):_(e[m]))===c||v===l)return v}else for(y=b.call(e);!(h=y.next()).done;)if((v=o(y,_,h.value,t))===c||v===l)return v}).BREAK=c,t.RETURN=l},function(e,t,r){var n=r(9);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(17),o=r(2)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),o=r(67).set,i=n.MutationObserver||n.WebKitMutationObserver,s=n.process,a=n.Promise,u="process"==r(21)(s);e.exports=function(){var e,t,r,c=function(){var n,o;for(u&&(n=s.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){s.nextTick(c)};else if(!i||n.navigator&&n.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);r=function(){l.then(c)}}else r=function(){o.call(n,c)};else{var d=!0,f=document.createTextNode("");new i(c).observe(f,{characterData:!0}),r=function(){f.data=d=!d}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){var n=r(1).navigator;e.exports=n&&n.userAgent||""},function(e,t,r){var n=r(11);e.exports=function(e,t,r){for(var o in t)r&&e[o]?e[o]=t[o]:n(e,o,t[o]);return e}},function(e,t,r){"use strict";var n=r(1),o=r(0),i=r(8),s=r(4),a=r(2)("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:n[e];s&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(2)("iterator"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],s=i[n]();s.next=function(){return{done:r=!0}},i[n]=function(){return s},e(i)}catch(e){}return r}},function(e,t,r){"use strict";var n=r(6),o=r(0),i=r(1),s=r(66),a=r(69);n(n.P+n.R,"Promise",{finally:function(e){var t=s(this,o.Promise||i.Promise),r="function"==typeof e;return this.then(r?function(r){return a(t,e()).then(function(){return r})}:e,r?function(r){return a(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){"use strict";var n=r(6),o=r(51),i=r(68);n(n.S,"Promise",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectType=t.ChangeType=void 0;var n=s(r(3)),o=s(r(5));r(123);var i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){(0,n.default)(this,e),this._observers=[],this._filters={},this._data=t||{},this._internalObserve(this._data)}return(0,o.default)(e,[{key:"observe",value:function(e){this._observers.push(e)}},{key:"find",value:function(e){var t=(0,i.parseAttributes)(e);return this._findWithSplit(t)}},{key:"findBefore",value:function(e){var t={},r=(0,i.parseAttributes)(e);return t.last=r.pop(),t.obj=this._findWithSplit(r),t}},{key:"_findWithSplit",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:"_internalObserve",value:function(e){var t=this;this._data=Object.deepObserve(e,function(e){e.every(function(e){t._onChanges(e)})})}},{key:"_fireEvent",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:"_onChanges",value:function(e){var t=e.object,r=void 0;t.constructor===Object&&(r=c.OBJECT),t.constructor===Array&&(r=c.ARRAY);var n=e.keypath,o=t[e.name];"update"!==e.type||n.includes(".length")||this._fireEvent({cType:u.UPDATE,oType:r,field:n,data:o}),"add"===e.type&&this._fireEvent({cType:u.ADD,oType:r,field:n,data:o}),"delete"===e.type&&this._fireEvent({cType:u.REMOVE,oType:r,field:n})}},{key:"data",get:function(){return this._data}}]),e}(),u=t.ChangeType={UPDATE:"update",ADD:"add",REMOVE:"remove"},c=t.ObjectType={OBJECT:"object",ARRAY:"array"};t.default=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(18)),o=c(r(3)),i=c(r(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=c(r(117)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=s.getLogger("DataObjectChild"),d=function(){function e(t){function r(e){throw"[DataObjectChild] "+e+" mandatory parameter is missing"}(0,o.default)(this,e),t.parent?this._parent=t.parent:r("parent"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.parentObject?this._parentObject=t.parentObject:r("parentObject"),t.name&&(this._name=t.name),t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._childId=t.url,t.data?this._syncObj=new a.default(t.data):this._syncObj=new a.default({}),l.log("[DataObjectChild -  Constructor] - ",this._syncObj),this._bus=this._parentObject._bus,this._owner=this._parentObject._owner,this._allocateListeners(),this._metadata=t,delete this._metadata.parentObject,this._sharingStatus=!1}return(0,i.default)(e,[{key:"share",value:function(e){var t=this;t._sharingStatus=new n.default(function(r,n){var o;o=e?t.metadata.parent:t.metadata.parent+"/children/"+t.metadata.children;var i=t.metadata;i.data=t.data;var s={type:"create",from:t.metadata.reporter,to:o,body:{resource:i.url,value:i}};if(t.identity&&(s.body.identity=t.identity),t._parentObject.data.hasOwnProperty("mutual")&&(s.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,u.deepClone)(s)),r();var a=t._bus.postMessage((0,u.deepClone)(s),function(e){if(e.to===t._reporter){t._bus.removeResponseListener(s.from,e.id),l.log("[Syncher.DataObjectChild.share] Parent reporter reply ",e);var o={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:"Unknown"};return e.body.code<300?r(o):n(o)}},!1);setTimeout(function(){return t._bus.removeResponseListener(s.from,a),n({code:408,desc:"timout"})},3e3)})}},{key:"store",value:function(){var e={},t=this.metadata.children+"."+this.metadata.url;e.value=this.metadata,e.identity=this.identity;var r={from:this.metadata.reporter,to:this._parentObject._syncher._subURL,type:"create",body:{resource:this.metadata.parent,attribute:t,value:e}};l.log("[DataObjectChild.store]:",r),this._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){"response"===t.type&&t.id===e._msgId&&(l.log("DataObjectChild.onResponse:",t),e._onResponse(t))}))}},{key:"_releaseListeners",value:function(){this._listener&&this._listener.remove()}},{key:"delete",value:function(){this._releaseListeners()}},{key:"onChange",value:function(e){this._syncObj.observe(function(t){l.log("[DataObjectChild - observer] - ",t),e(t)})}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.body.source,code:e.body.code};this._onResponseHandler&&this._onResponseHandler(t)}},{key:"shareable",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:"metadata",get:function(){return this._metadata}},{key:"childId",get:function(){return this._childId}},{key:"sharingStatus",get:function(){return this._sharingStatus}},{key:"data",get:function(){return this._syncObj.data}},{key:"identity",set:function(e){this._identity=e},get:function(){return this._identity}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){r(120),e.exports=r(0).Object.assign},function(e,t,r){var n=r(6);n(n.S+n.F,"Object",{assign:r(121)})},function(e,t,r){"use strict";var n=r(20),o=r(43),i=r(29),s=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=s(e),u=arguments.length,c=1,l=o.f,d=i.f;u>c;)for(var f,p=a(arguments[c++]),h=l?n(p).concat(l(p)):n(p),y=h.length,v=0;y>v;)d.call(p,f=h[v++])&&(r[f]=p[f]);return r}:u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(47)),o=y(r(18)),i=y(r(42)),s=y(r(78)),a=y(r(3)),u=y(r(5)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=r(117),d=y(l),f=y(r(118)),p=r(19),h=y(r(128));function y(e){return e&&e.__esModule?e:{default:e}}var v=c.getLogger("DataObject"),b=function(){function e(t){function r(e){throw"[DataObject] "+e+" mandatory parameter is missing"}(0,a.default)(this,e),t.syncher?this._syncher=t.syncher:r("syncher"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.name?this._name=t.name:r("name"),this._status=t.status,t.data?this._syncObj=new d.default(t.data):this._syncObj=new d.default({}),this._childrens=t.childrens,this._mutual=t.mutual,this._version=0,this._childId=0,this._childrenListeners=[],this._onAddChildrenHandler,this._resumed=t.resume,t.resume&&(this._version=t.version),this._owner=t.syncher._owner,this._bus=t.syncher._bus,t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._metadata=(0,s.default)(t),this._metadata.lastModified=this._metadata.created,delete this._metadata.data,delete this._metadata.syncher,delete this._metadata.authorise,this._hypertyResourceFactory=new h.default,this._childrenObjects={},this._sharedChilds=[]}return(0,u.default)(e,[{key:"_getLastChildId",value:function(){var e=this,t=e._owner+"#0";return(0,i.default)(e._childrens).filter(function(r){e._childrens[r].childId>t&&(t=e._childrens[r].childId)}),Number(t.split("#")[1])}},{key:"_allocateListeners",value:function(){var e=this,t=this,r=t._url+"/children/";v.log("[Data Object - AllocateListeners] - ",t._childrens),t._childrens&&t._childrens.forEach(function(n){var o=r+n,i=t._bus.addListener(o,function(r){if(r.from!==e._owner)switch(v.log("DataObject-Children-RCV: ",r),r.type){case"create":t._onChildCreate(r);break;case"delete":v.log(r);break;default:t._changeChildren(r)}});t._childrenListeners.push(i)})}},{key:"_releaseListeners",value:function(){var e=this;e._childrenListeners.forEach(function(e){e.remove()}),(0,i.default)(e._childrenObjects).forEach(function(t){(0,i.default)(e._childrenObjects[t]).forEach(function(r){e._childrenObjects[t][r]._releaseListeners()})})}},{key:"resumeChildrens",value:function(e){var t=this,r=this,n=this._owner+"#"+this._childId;(0,i.default)(e).forEach(function(o){var s=e[o];(0,i.default)(s).forEach(function(e){var i=!1;r._childrenObjects.hasOwnProperty(o)||(r._childrenObjects[o]={}),s[e].value.resourceType&&!r._childrenObjects[o].hasOwnProperty(e)?(r._childrenObjects[o][e]=r._resumeHypertyResource(s[e]),i=!0):r._childrenObjects[o].hasOwnProperty(e)||(r._childrenObjects[o][e]=r._resumeChild(s[e]),v.log("[DataObject.resumeChildrens] new DataObjectChild: ",r._childrenObjects[o][e]),i=!0),i&&e>n&&(n=e,v.log("[DataObjectReporter.resumeChildrens] - resuming: ",t._childrenObjects[o][e]))})}),this._childId=Number(n.split("#")[1])}},{key:"_resumeChild",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=new f.default(t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"_resumeHypertyResource",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"pause",value:function(){throw"Not implemented"}},{key:"resume",value:function(){throw"Not implemented"}},{key:"stop",value:function(){throw"Not implemented"}},{key:"addChild",value:function(e,t,r,n){var i=this,s=void 0;return new o.default(function(o){var a=i._url+"/children/"+e,u=i._getChildInput(n);u.data=t,u.children=e,s=new f.default(u),r&&(s.identity=r),s.share(),v.log("[DataObject.addChild] added ",s),s.onChange(function(e){i._onChange(e,{path:a,childId:u.url})}),i._childrenObjects.hasOwnProperty(e)||(i._childrenObjects[e]={}),i._childrenObjects[e][u.url]=s,o(s)})}},{key:"_deleteChildrens",value:function(){var e=this,t=[];return new o.default(function(r){if(e.childrens){v.log("[DataObject.deleteChildrens]",e.childrens);var n=void 0;for(n in e.childrens){var i=void 0;for(i in e.childrens[n]){var s=e.childrens[n][i];v.log("[DataObject._deleteChildrens] child",s),s.metadata.hasOwnProperty("resourceType")&&t.push(e.childrens[n][i].delete())}}}v.log("[DataObject._deleteChildrens] promises ",t),t.length>0?o.default.all(t).then(function(){r("[DataObject._deleteChildrens] done")}):r("[DataObject._deleteChildrens] nothing to delete")})}},{key:"_getChildInput",value:function(e){var t=(0,s.default)({},e);return this._childId++,t.url=this._owner+"#"+this._childId,t.parentObject=this,t.reporter=this._owner,t.created=(new Date).toISOString(),t.runtime=this._syncher._runtimeUrl,t.p2pHandler=this._syncher._p2pHandler,t.p2pRequester=this._syncher._p2pRequester,t.schema=this._schema,t.parent=this.url,t}},{key:"addHypertyResource",value:function(e,t,r,n,i){var s=this;return new o.default(function(o){var a=void 0,u=s._url+"/children/"+e,c=s._getChildInput(i);c.children=e,s._hypertyResourceFactory.createHypertyResourceWithContent(!0,t,r,c).then(function(t){a=t,n&&(a.identity=n),a.share(),v.log("[DataObject.addHypertyResource] added ",a),a.onChange(function(e){s._onChange(e,{path:u,childId:a.childId})}),s._childrenObjects.hasOwnProperty(e)||(s._childrenObjects[e]={}),s._childrenObjects[e][a.childId]=a,o(a)})})}},{key:"onAddChild",value:function(e){this._onAddChildrenHandler=e}},{key:"_onChildCreate",value:function(e){v.log("[DataObject._onChildCreate] receivedBy "+this._owner+" : ",e);var t={from:e.to,to:e.from,type:"response",id:e.id,body:{code:100}};this._bus.postMessage(t),e.body.value.resourceType?this._onHypertyResourceAdded(e):this._onChildAdded(e)}},{key:"_onChildAdded",value:function(e){var t=(0,p.deepClone)(e.body.value);t.parentObject=this;var r=t.children,n=new f.default(t);n.identity=e.body.identity,this._childrenObjects.hasOwnProperty(r)||(this._childrenObjects[r]={}),this._childrenObjects[r][t.url]=n,e.to===this.metadata.url&&n.store(),this._hypertyEvt(e,n)}},{key:"_onHypertyResourceAdded",value:function(e){var t=e.body.value,r=void 0,n=t.children;t.parentObject=this,(r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t)).identity=e.body.identity,this._childrenObjects.hasOwnProperty(n)||(this._childrenObjects[n]={}),this._childrenObjects[n][r.childId]=r,this._hypertyEvt(e,r),e.to===this.metadata.url&&r.store()}},{key:"_hypertyEvt",value:function(e,t){var r={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(r.resource=t),this._onAddChildrenHandler&&this._onAddChildrenHandler(r)}},{key:"_onChange",value:function(e,t){if(this._metadata.lastModified=(new Date).toISOString(),this._version++,"live"===this._status){var r={type:"update",from:this._url,to:this._url+"/changes",body:{version:this._version,source:this._owner,attribute:e.field,lastModified:this._metadata.lastModified}};v.log("[DataObject - _onChange] - ",e,t,r),e.oType===l.ObjectType.OBJECT?e.cType!==l.ChangeType.REMOVE&&(r.body.value=(0,p.deepClone)(e.data)):(r.body.attributeType=e.oType,r.body.value=e.data,e.cType!==l.ChangeType.UPDATE&&(r.body.operation=e.cType)),t&&(r.to=t.path,r.body.resource=t.childId),this.data._mutual||(r.body.mutual=this._mutual),this._bus.postMessage(r)}}},{key:"_changeObject",value:function(e,t){if(this._version+1<=t.body.version){this._version=t.body.version;var r,o=t.body.attribute;r="object"===(0,n.default)(t.body.value)?(0,p.deepClone)(t.body.value):t.body.value;var i=e.findBefore(o);if(t.body.lastModified?this._metadata.lastModified=t.body.lastModified:this._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===l.ObjectType.ARRAY)if(t.body.operation===l.ChangeType.ADD){var s=i.obj,a=i.last;Array.prototype.splice.apply(s,[a,0].concat(r))}else if(t.body.operation===l.ChangeType.REMOVE){var u=i.obj,c=i.last;u.splice(c,r)}else i.obj[i.last]=r;else t.body.hasOwnProperty("value")?i.obj[i.last]=r:delete i.obj[i.last]}else v.log("UNSYNCHRONIZED VERSION: (data => "+this._version+", msg => "+t.body.version+")")}},{key:"_changeChildren",value:function(e){var t=(0,p.divideURL)(e.to).identity,r=t?t.substring(t.lastIndexOf("/")+1):void 0,n=e.body.resource,o=this._childrenObjects[r][n];v.log("Change children: ",this._owner,e,r),o?this._changeObject(o._syncObj,e):v.warn("No children found for: ",n)}},{key:"metadata",get:function(){return this._metadata}},{key:"url",get:function(){return this._url}},{key:"schema",get:function(){return this._schema}},{key:"status",get:function(){return this._status}},{key:"data",get:function(){return this._syncObj.data}},{key:"childrens",get:function(){return this._childrenObjects}}]),e}();t.default=b,e.exports=t.default},function(e,t){!function(){"use strict";if(!Object.observe&&"function"==typeof Proxy){function e(e,t,r,n,o,i){var s,a=this;function u(e,n){if(u.delay=n,!u.pause&&a.changeset.length>0){if(!e){var o=a.changeset.filter(function(e){return!r||r.indexOf(e.type)>=0});o.length>0&&t(o)}a.changeset=[]}}return u.pause=o,u.delay=i,a.get=function(e,t){return"__observer__"===t?a:"unobserve"===t?function(){return Object.unobserve(e),e}:"deliver"===t?u:e[t]},a.target=e,a.changeset=[],a.target.__observerCallbacks__||(Object.defineProperty(e,"__observerCallbacks__",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,"__observers__",{enumerable:!1,configurable:!0,writable:!1,value:[]})),a.target.__observerCallbacks__.push(t),a.target.__observers__.push(this),s=new Proxy(e,a),u(!1,i),s}e.prototype.deliver=function(){return this.get(null,"deliver")},e.prototype.set=function(e,t,r){var n=e[t],o=void 0===n?"add":"update";if(e[t]=r,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(o)>=0)){var i={object:e,name:t,type:o},s=0===this.changeset.length,a=this.deliver();"update"===o&&(i.oldValue=n),this.changeset.push(i),s&&a(!1,"number"==typeof a.delay?a.delay:10)}return!0},e.prototype.deleteProperty=function(e,t){var r=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("delete")>=0){var n={object:e,name:t,type:"delete",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.defineProperty=function(e,t,r){if(Object.defineProperty(e,t,r),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("reconfigure")>=0){var n={object:e,name:t,type:"reconfigure"},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.setPrototypeOf=function(e,t){var r=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("setPrototype")>=0){var n={object:e,name:"__proto__",type:"setPrototype",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("preventExtensions")>=0){var t={object:e,type:"preventExtensions"},r=0===this.changeset.length,n=this.deliver();this.changeset.push(t),r&&n(!1,"number"==typeof n.delay?n.delay:10)}return!0},Object.observe=function(t,r,n,o,i,s){return new e(t,r,n,o,i,s)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(r,n){t===r&&(e.__observerCallbacks__.splice(n,1),delete e.__observers__[n].callback,e.__observers__.splice(n,1))})}},Array.observe=function(e,t,r,n,o,i){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError("First argument to Array.observer is not an Array");r=r||["add","update","delete","splice"];var s=new Proxy(e,{get:function(t,n){return"unobserve"===n?function(e){return e?Object.unobserve(t,e):t.unobserve()}:"splice"===n?function(n,o){if("number"!=typeof n||"number"!=typeof o)throw new TypeError("First two arguments to Array splice are not number, number");var i=this.slice(n,n+o),s=arguments.length>1?arguments.length-2:0,u={object:e,type:"splice",index:n,removed:i,addedCount:s};if(t.splice.apply(t,arguments),r.indexOf("splice")>=0){n=0===a.__observer__.changeset.length;var c=a.__observer__.deliver();a.__observer__.changeset.push(u),n&&c(!1,"number"==typeof c.delay?c.delay:10)}}:"push"===n?function(e){return this.splice(this.length,0,e)}:"pop"===n?function(){return this.splice(this.length-1,1)}:"unshift"===n?function(e){return this.splice(0,0,e)}:"shift"===n?function(){return this.splice(0,1)}:t[n]}}),a=Object.observe(s,function(e){var n=e.filter(function(e){return"length"!==e.name&&"add"!==e.name&&(!r||r.indexOf(e.type)>=0)});n.length>0&&t(n)},r,n,o,i);return a},Array.unobserve=function(e,t){return e.unobserve(t)}}Object.deepObserve=function(e,t,r){var n=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()};function o(e,r){Object.keys(e).forEach(function(o){if(("object"===n(e[o])||"array"===n(e[o]))&&!e[o].hasOwnProperty("__observers__")){var i=r.slice(0);i.push(o),e[o]=Object.deepObserve(e[o],t,i)}})}return o(e,r=r||[]),Object.observe(e,function(e){var n=[];e.forEach(function(e){var t=(r.length>0?r.join(".")+".":"")+e.name;"update"!==e.type&&"add"!==e.type||o(e.object,r),n.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),function e(t,r,o,i,s){i instanceof Object?Object.keys(i).forEach(function(a){if(!o||o[a]!==i[a]){var u=o&&void 0!==o[a]?o[a]:void 0,c=void 0===u?"add":"update",l=s+"."+a;n.push({name:t,object:r,type:c,oldValue:u,newValue:i[a],keypath:l}),e(t,r,u,i[a],l)}}):o instanceof Object&&Object.keys(o).forEach(function(a){var u=null===i?"update":"delete",c=s+"."+a;n.push({name:t,object:r,type:u,oldValue:o[a],newValue:i,keypath:c}),e(t,r,o[a],void 0,c)})}(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(n)})}}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(r(18)),o=f(r(25)),i=f(r(3)),s=f(r(5)),a=f(r(33)),u=f(r(34)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=f(r(129)),d=(r(19),f(r(130)));function f(e){return e&&e.__esModule?e:{default:e}}var p=c.getLogger("FileHypertyResource"),h=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e,r));return n.metadata.resourceType="file",n}return(0,u.default)(t,e),(0,s.default)(t,[{key:"init",value:function(e){var t=this;if(!e)throw new Error("[FileHypertyResource.constructor] missing mandatory *file* input ");return new n.default(function(r,n){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,p.log("[FileHypertyResource.init] file: ",e),t._isSender)switch(e.type.split("/")[0]){case"image":t._getImagePreview(e).then(function(n){t._metadata.preview=n,t._content=e,r()});break;default:t._content=e,r()}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),r()})}},{key:"_getImagePreview",value:function(e){var t=new FileReader;return new n.default(function(r,n){d.default.resize(e,{width:100,height:100},function(e,n){n?(t.readAsDataURL(e),t.onload=function(e){r(e.target.result)}):(p.warn("[FileHypertyResource._getImagePreview] unable to create image preview from original image "),r(void 0))})})}},{key:"toMessage",value:function(){}},{key:"name",get:function(){return this._metadata.name}},{key:"preview",get:function(){return this._metadata.preview}}]),t}(l.default);t.default=h,e.exports=t.default},function(e,t,r){e.exports={default:r(126),__esModule:!0}},function(e,t,r){r(127);var n=r(0).Object;e.exports=function(e,t){return n.getOwnPropertyDescriptor(e,t)}},function(e,t,r){var n=r(12),o=r(46).f;r(44)("getOwnPropertyDescriptor",function(){return function(e,t){return o(n(e),t)}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(18)),o=a(r(3)),i=a(r(5)),s=a(r(124));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(){(0,o.default)(this,e)}return(0,i.default)(e,[{key:"createHypertyResource",value:function(e,t,r){var n=void 0;switch(t){case"file":n=new s.default(e,r);break;default:throw new Error("[HypertyResourceFactory.createHypertyResource] not supported type: ",t)}return n}},{key:"createHypertyResourceWithContent",value:function(e,t,r,o){var i=void 0;return new n.default(function(n){switch(t){case"file":i=new s.default(e,o);break;default:reject()}i.init(r).then(function(){return i.save()}).then(function(){n(i)})})}}]),e}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=p(r(18)),o=p(r(25)),i=p(r(3)),s=p(r(5)),a=p(r(33)),u=p(r(100)),c=p(r(34)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),d=r(19),f=p(r(118));function p(e){return e&&e.__esModule?e:{default:e}}var h=l.getLogger("HypertyResource"),y=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,r)),s=n;return s.arraybufferSizeLimit=5242880,s._isSender=e,s._localStorageURL=s._parentObject._syncher._runtimeUrl+"/storage",n}return(0,c.default)(t,e),(0,s.default)(t,[{key:"save",value:function(){var e=this;return new n.default(function(t,r){var n={from:e._owner,to:e._localStorageURL,type:"create",body:{value:(0,d.deepClone)(e._metadata)}};n.body.value.content=e._content,e._bus.postMessage(n,function(n){h.info("[HypertyResource.save] reply: ",n),e._bus.removeResponseListener(e._owner,n.id),200===n.body.code?(n.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(n.body.value)),t()):r(n.body.code+" "+n.body.desc)},!1)})}},{key:"read",value:function(e){var t=this;return h.info("[HypertyResource.read] ",this),new n.default(function(r,n){if(t.content)r(t);else{var o=t._getBestContentURL(t._metadata.contentURL);h.log("Storage:",o);var i={from:t._owner,to:o.url,type:"read",body:{resource:o.url+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(i.body.p2pRequester=t.metadata.p2pRequester,i.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(i,e).then(function(e){h.info("[HypertyResource] - get locally the resource:",e),r(t)}).catch(function(i){h.warn("[HypertyResource] - get locally the resource fail",i);var s={from:t._owner,to:o.remoteURL,type:"read",body:{resource:o.remoteURL+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(s.body.p2pRequester=t.metadata.p2pRequester,s.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(s,e).then(function(e){h.warn("[HypertyResource] - get remotely the resource",e),r(t)}).catch(function(e){h.warn("[HypertyResource] - get remotely the resource fail",e),n(e.body.code+" "+e.body.desc)})})}})}},{key:"_getBestResource",value:function(e,t){var r=this;return new n.default(function(n,o){var i=setTimeout(function(){return r._bus.removeResponseListener(r._owner,s),e.body.code=408,e.body.desc="Response timeout",o(e)},3e3),s=r._bus.postMessage(e,function(e){h.log("[HypertyResource.read] reply: ",e);var s=e.id;switch(clearTimeout(i),e.body.code){case 200:r._content=e.body.value.content,e.body.value.size<r.arraybufferSizeLimit&&r.save(),r._bus.removeResponseListener(r._owner,s),n(e);break;case 183:t(e.body.value);break;default:r._bus.removeResponseListener(r._owner,s),o(e)}},!1)})}},{key:"delete",value:function(){var e=this;h.info("[HypertyResource.delete]",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:"delete",body:{resources:e.metadata.contentURL}};return new n.default(function(r){e._bus.postMessage(t,function(e){e.body.code<300?r(!0):r(!1)})})}},{key:"_getBestContentURL",value:function(e){var t=e[0],r=t.substr(t.lastIndexOf("/")+1);return{url:this._localStorageURL,resource:r,remoteURL:t.substr(0,t.lastIndexOf("/"))}}},{key:"resourceType",get:function(){return this.metadata.resourceType}},{key:"mimetype",get:function(){return this._metadata.type}},{key:"content",get:function(){return this._content}},{key:"contentURL",get:function(){return this._metadata.contentURL}},{key:"shareable",get:function(){var e=(0,u.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"metadata",this);return e.resourceType=this.resourceType,e}}]),t}(f.default);t.default=y,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s="undefined"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),a=s&&"undefined"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),u="undefined"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,c=u||"undefined"!=typeof Uint8Array&&"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof atob,l="undefined"!=typeof FileReader||"undefined"!=typeof URL,d=function(){function e(){(0,n.default)(this,e)}return(0,o.default)(e,null,[{key:"resize",value:function(t,r,n){if("function"==typeof r&&(n=r,r={width:640,height:480}),r.width,r.height,!e.isSupported()||!t.type.match(/image.*/))return n(t,!1),!1;if(t.type.match(/image\/gif/))return n(t,!1),!1;var o=document.createElement("img");return o.onload=function(i){var s=o.width,a=o.height,c=!1;if(s>=a&&s>r.width?(a*=r.width/s,s=r.width,c=!0):a>r.height&&(s*=r.height/a,a=r.height,c=!0),c){var l=document.createElement("canvas");if(l.width=s,l.height=a,l.getContext("2d").drawImage(o,0,0,s,a),u)l.toBlob(function(e){n(e,!0)},t.type);else{var d=e._toBlob(l,t.type);n(d,!0)}}else n(t,!1)},e._loadImage(o,t),!0}},{key:"_toBlob",value:function(e,t){var r=e.toDataURL(t).split(","),n=void 0;n=r[0].indexOf("base64")>=0?atob(r[1]):decodeURIComponent(r[1]);for(var o=new ArrayBuffer(n.length),i=new Uint8Array(o),u=0;u<n.length;u+=1)i[u]=n.charCodeAt(u);var c=r[0].split(":")[1].split(";")[0],l=null;if(s)l=new Blob([a?i:o],{type:c});else{var d=new BlobBuilder;d.append(o),l=d.getBlob(c)}return l}},{key:"_loadImage",value:function(e,t,r){if("undefined"==typeof URL){var n=new FileReader;n.onload=function(t){e.src=t.target.result,r&&r()},n.readAsDataURL(t)}else e.src=URL.createObjectURL(t),r&&r()}},{key:"isSupported",value:function(){return"undefined"!=typeof HTMLCanvasElement&&c&&l}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(r(18)),o=f(r(78)),i=f(r(3)),s=f(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19),c=f(r(132)),l=f(r(133)),d=f(r(135));function f(e){return e&&e.__esModule?e:{default:e}}var p=a.getLogger("Syncher"),h=function(){function e(t,r,n){(0,i.default)(this,e);var o=this;o._owner=t,o._bus=r,o._subURL=n.runtimeURL+"/sm",o._runtimeUrl=n.runtimeURL,o._p2pHandler=n.p2pHandler,o._p2pRequester=n.p2pRequester,o._reporters={},o._observers={},o._provisionals={},r.addListener(t,function(e){if(e.from!==t)switch(p.info("[Syncher] Syncher-RCV: ",e,o),e.type){case"forward":o._onForward(e);break;case"create":o._onRemoteCreate(e);break;case"delete":o._onRemoteDelete(e);break;case"execute":o._onExecute(e)}})}return(0,s.default)(e,[{key:"create",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"no name",a=arguments[6],c=arguments[7];if(!e)throw Error("[Syncher - Create] - You need specify the data object schema");if(!t)throw Error("[Syncher - Create] -The observers should be defined");c=c||{};var l=(0,o.default)({},c);return l.p2p=i,l.store=n,l.schema=e,l.authorise=t,l.p2pHandler=this._p2pHandler,l.p2pRequester=this._p2pRequester,l.data=r?(0,u.deepClone)(r):{},l.name=0===s.length?"no name":s,l.reporter=c.hasOwnProperty("reporter")&&"boolean"!=typeof c.reporter?c.reporter:this._owner,l.resume=!1,c?(l.mutual=!c.hasOwnProperty("mutual")||c.mutual,l.name=c.hasOwnProperty("name")?c.name:l.name):l.mutual=!0,c.hasOwnProperty("reuseURL")&&(l.resource=c.reuseURL),a&&(l.identity=a),p.log("[syncher - create] - create Reporter - createInput: ",l),this._create(l)}},{key:"resumeReporters",value:function(e){return p.log("[syncher - create] - resume Reporter - criteria: ",e),(0,o.default)(e,{resume:!0}),this._resumeCreate(e)}},{key:"subscribe",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments[5],a={};return a.p2p=n,a.store=r,a.schema=e,a.resource=t,s&&(a.identity=s),a.mutual=i,p.log("[syncher - subscribe] - subscribe criteria: ",a),(0,o.default)(a,{resume:!1}),this._subscribe(a)}},{key:"resumeObservers",value:function(e){var t=e||{};return(0,o.default)(t,{resume:!0}),this._resumeSubscribe(t)}},{key:"read",value:function(e){var t=this,r={type:"read",from:t._owner,to:e};return new n.default(function(e,n){t._bus.postMessage(r,function(i){p.log("[Syncher.read] reply: ",i);var s={},a={},u=0;if(i.body.code<300)if(i.body.value.hasOwnProperty("responses"))if(0===u)a=i.body.value,++u;else{delete i.body.value.responses;var c=void 0;for(c in i.body.value)s.hasOwnProperty(c)||(s[c]={}),(0,o.default)(s[c],i.body.value[c]);++u===a.responses&&(a.childrenObjects=s,delete a.responses,t._bus.removeResponseListener(r.from,i.id),e(a))}else t._bus.removeResponseListener(r.from,i.id),e(i.body.value);else n(i.body.desc)},!1)})}},{key:"onNotification",value:function(e){this._onNotificationHandler=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"_create",value:function(e){var t=this;return new n.default(function(r,n){var i=(0,o.default)({},e),s=e.resume;i.created=(new Date).toISOString(),i.runtime=t._runtimeUrl;var a=(0,u.deepClone)(i);delete a.p2p,delete a.store,delete a.observers,delete a.identity;var l={type:"create",from:t._owner,to:t._subURL,body:{resume:s,value:a}};l.body.schema=i.schema,i.p2p&&(l.body.p2p=i.p2p),i.store&&(l.body.store=i.store),i.identity&&(l.body.identity=i.identity),p.log("[syncher._create]: ",i,l),t._bus.postMessage(l,function(o){if(p.log("[syncher - create] - create-response: ",o),200===o.body.code){i.url=o.body.resource,i.status="live",i.syncher=t,i.childrens=o.body.childrenResources;var s=t._reporters[i.url];s||(s=new c.default(i),t._reporters[i.url]=s),s.inviteObservers(e.authorise,e.p2p),r(s)}else n(o.body.desc)})})}},{key:"_resumeCreate",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i=e.resume,s={type:"create",from:r._owner,to:r._subURL,body:{resume:i}};p.log("[syncher - create]: ",e,s),e&&(s.body.value=e,e.hasOwnProperty("reporter")?s.body.value.reporter=e.reporter:s.body.value.reporter=r._owner),e.p2p&&(s.body.p2p=e.p2p),e.store&&(s.body.store=e.store),e.observers&&(s.body.authorise=e.observers),e.identity&&(s.body.identity=e.identity),p.log("[syncher._resumeCreate] - resume message: ",s),r._bus.postMessage(s,function(e){if(p.log("[syncher._resumeCreate] - create-resumed-response: ",e),200===e.body.code){var i=e.body.value;for(var s in i){var a=i[s];a.data=(0,u.deepClone)(a.data)||{},a.childrenObjects&&(a.childrenObjects=(0,u.deepClone)(a.childrenObjects)),a.mutual=!1,a.resume=!0,a.status="live",a.syncher=r,p.log("[syncher._resumeCreate] - create-resumed-dataObjectReporter",a);var l=new c.default(a);a.childrenObjects&&l.resumeChildrens(a.childrenObjects),r._reporters[a.url]=l}n(r._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_subscribe",value:function(e){var t=this;return new n.default(function(r,n){var o={type:"subscribe",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(o.body.p2p=e.p2p),e.hasOwnProperty("store")&&(o.body.store=e.store),e.hasOwnProperty("schema")&&(o.body.schema=e.schema),e.hasOwnProperty("identity")&&(o.body.identity=e.identity),e.hasOwnProperty("resource")&&(o.body.resource=e.resource)),o.body.resume=e.resume,e.hasOwnProperty("mutual")&&(o.body.mutual=e.mutual),p.log("[syncher_subscribe] - subscribe message: ",e,o),t._bus.postMessage(o,function(o){p.log("[syncher] - subscribe-response: ",o);var i=o.body.resource,s=t._provisionals[i];if(delete t._provisionals[i],s&&s._releaseListeners(),o.body.code<200)p.log("[syncher] - new DataProvisional: ",o.body.childrenResources,i),s=new d.default(t._owner,i,t._bus,o.body.childrenResources),t._provisionals[i]=s;else if(200===o.body.code){p.log("[syncher] - new Data Object Observer: ",o,t._provisionals);var a=o.body.value;a.syncher=t,a.p2p=e.p2p,a.store=e.store,a.identity=e.identity,a.resume=!1,a.mutual=e.mutual;var u=t._observers[i];u?u.sync():(u=new l.default(a),t._observers[i]=u),p.log("[syncher] - new Data Object Observer already exist: ",u),r(u),s&&s.apply(u)}else n(o.body.desc)})})}},{key:"_resumeSubscribe",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i={type:"subscribe",from:r._owner,to:r._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(i.body.p2p=e.p2p),e.hasOwnProperty("store")&&(i.body.store=e.store),e.hasOwnProperty("schema")&&(i.body.schema=e.schema),e.hasOwnProperty("identity")&&(i.body.identity=e.identity),e.hasOwnProperty("resource")&&(i.body.resource=e.url)),i.body.resume=e.resume;var s=e.mutual;e.hasOwnProperty("mutual")&&(i.body.mutual=s),p.log("[syncher] - subscribe message: ",e,i),r._bus.postMessage(i,function(e){p.log("[syncher] - subscribe-resumed-response: ",e);var i=e.body.resource,s=r._provisionals[i];if(delete r._provisionals[i],s&&s._releaseListeners(),e.body.code<200)p.log("[syncher] - resume new DataProvisional: ",e,i),s=new d.default(r._owner,i,r._bus,e.body.childrenResources),r._provisionals[i]=s;else if(200===e.body.code){var a=e.body.value;for(var c in a){var f=a[c];p.log("[syncher] - Resume Object Observer: ",e,f,r._provisionals),f.childrenObjects&&(f.childrenObjects=(0,u.deepClone)(f.childrenObjects)),f.data=(0,u.deepClone)(f.data)||{},f.resume=!0,f.syncher=r,p.log("[syncher._resumeSubscribe] - create new dataObject: ",f);var h=new l.default(f);f.childrenObjects&&h.resumeChildrens(f.childrenObjects),p.log("[syncher._resumeSubscribe] - new dataObject",h),r._observers[h.url]=h,r._provisionals[h.url]&&r._provisionals[h.url].apply(h)}n(r._observers),t._onObserversResume&&t._onObserversResume(r._observers)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_onForward",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:"_onRemoteCreate",value:function(e){var t=this,r=e.from.slice(0,-13),n=(0,u.divideURL)(r).domain,o={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})}};t._onNotificationHandler&&(p.info("[Syncher] NOTIFICATION-EVENT: ",o),t._onNotificationHandler(o))}},{key:"_onRemoteDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(p.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:"_onExecute",value:function(e){var t=this,r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+"/registry/"||e.from===t._runtimeUrl+"/registry")&&e.body&&e.body.method&&"close"===e.body.method&&t._onClose){var n={type:"close",ack:function(e){e&&(r.body.code=e),t._bus.postMessage(r)}};p.info("[Syncher] Close-EVENT: ",n),t._onClose(n)}else t._bus.postMessage(r)}},{key:"onReportersResume",value:function(e){this._onReportersResume=e}},{key:"onObserversResume",value:function(e){this._onObserversResume=e}},{key:"owner",get:function(){return this._owner}},{key:"reporters",get:function(){return this._reporters}},{key:"observers",get:function(){return this._observers}}]),e}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(42)),o=y(r(58)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=y(r(122)),h=r(19);function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger("DataObjectReporter"),b=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._subscriptions={},n._syncObj.observe(function(e){v.log("[Syncher.DataObjectReporter] "+n.url+" publish change: ",e),n._onChange(e)}),n._allocateListeners(),n.invitations=[],n._childrenSizeThreshold=5e4,r}return(0,d.default)(t,e),(0,u.default)(t,[{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(v.log("[Syncher.DataObjectReporter] listener "+e._url+" Received: ",t),t.type){case"response":e._onResponse(t);break;case"read":e._onRead(t);break;case"execute":e._onExecute(t);break;case"create":e._onChildCreate(t)}})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_releaseListeners",this).call(this),this._objectListener.remove()}},{key:"inviteObservers",value:function(e,t){var r=this,n=e;n.length>0&&(v.log("[Syncher.DataObjectReporter] InviteObservers ",n,r._metadata),n.forEach(function(e){var n=new i.default(function(n,o){var i={type:"create",from:r._syncher._owner,to:r._syncher._subURL,body:{resume:!1,resource:r._url,schema:r._schema,value:r._metadata,authorise:[e]}};t&&(i.body.p2p=t),r.data.mutual||(i.body.mutual=r.data.mutual),r._bus.postMessage(i,function(t){v.log("[Syncher.DataObjectReporter] Invitation reply ",t);var r={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:"Unknown"};r.code<300?n(r):r.code>=300&&o(r)})});r.invitations.push(n)}))}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(t){v.log(t);var r={type:"delete",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(r,function(t){v.log("DataObjectReporter-DELETE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:"onSubscription",value:function(e){this._onSubscriptionHandler=e}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"onRead",value:function(e){this._onReadHandler=e}},{key:"onExecute",value:function(e){this._onExecuteHandler=e}},{key:"_onForward",value:function(e){switch(v.log("DataObjectReporter-RCV: ",e),e.body.type){case"subscribe":this._onSubscribe(e);break;case"unsubscribe":this._onUnSubscribe(e)}}},{key:"_onSubscribe",value:function(e){var t=this,r=e.body.from,n=(0,h.divideURL)(r),o=n.domain,i=!0;e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i=!1),v.log("[DataObjectReporter._onSubscribe]",e,o,n);var s={type:e.body.type,url:r,domain:o,identity:e.body.identity,nutual:i,accept:function(){var n={url:r,status:"live"};t._subscriptions[r]=n,t.metadata.subscriptions&&t.metadata.subscriptions.push(n.url);var o=(0,h.deepClone)(t._metadata);o.data=(0,h.deepClone)(t.data),o.version=t._version;var i={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:o}};return e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i.body.mutual=e.body.mutual,t.data.mutual=!1),t._bus.postMessage(i),n},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:403,desc:r}})}};t._onSubscriptionHandler&&(v.log("SUBSCRIPTION-EVENT: ",s),t._onSubscriptionHandler(s))}},{key:"_onUnSubscribe",value:function(e){var t=e.body.from,r=(0,h.divideURL)(t),n=r.domain;v.log("[DataObjectReporter._onUnSubscribe]",e,n,r),delete this._subscriptions[t],delete this.invitations[t];var o={type:e.body.type,url:t,domain:n,identity:e.body.identity};this._onSubscriptionHandler&&(v.log("UN-SUBSCRIPTION-EVENT: ",o),this._onSubscriptionHandler(o))}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.from,code:e.body.code};this._onResponseHandler&&(v.log("RESPONSE-EVENT: ",t),this._onResponseHandler(t))}},{key:"_onRead",value:function(e){var t=this,r=(0,o.default)(t.childrensJSON).length>t._childrenSizeThreshold,i={type:e.type,url:e.from,accept:function(){r?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}},s=[];t.metadata.subscriptions?s=t.metadata.subscriptions:t._subscriptions&&(s=(0,n.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=s.indexOf(e.from)?r?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(v.log("READ-EVENT: ",i),t._onReadHandler(i))}},{key:"_syncReply",value:function(e){var t=(0,h.deepClone)(this.metadata);t.data=(0,h.deepClone)(this.data),t.childrenObjects=(0,h.deepClone)(this.childrensJSON),t.version=this._version;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:t}};this._bus.postMessage(r)}},{key:"_syncReplyForLargeData",value:function(e){var t=this,r=(0,h.deepClone)(t.metadata);r.data=(0,h.deepClone)(t.data),r.version=t._version,delete r.childrenObjects;var n=void 0,i=[],s={};for(n in t._childrenObjects){var a=void 0;for(a in s[n]={},t._childrenObjects[n])(0,o.default)(s).length>t._childrenSizeThreshold&&(i.push(s),(s={})[n]={}),s[n][a]={},s[n][a].value=t._childrenObjects[n][a].metadata,s[n][a].identity=t._childrenObjects[n][a].identity}i.push(s),r.responses=i.length+1;var u={id:e.id,type:"response",from:e.to,to:e.from,body:{code:100,value:r}};t._bus.postMessage(u),i.forEach(function(e){var n=(0,h.deepClone)(u);n.body.value=e,n.body.value.responses=r.responses,setTimeout(function(){t._bus.postMessage(n)},50)})}},{key:"_onExecute",value:function(e){var t=this;if(!e.body.method)throw e;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}},n={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(r)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}};t._onExecuteHandler&&(v.log("[DataObjectReporter] EXECUTE-EVENT: ",n),t._onExecuteHandler(n))}},{key:"subscriptions",get:function(){return this._subscriptions}},{key:"childrensJSON",get:function(){var e={},t=void 0;for(t in this._childrenObjects){var r=void 0;for(r in e[t]={},this._childrenObjects[t])e[t][r]={},e[t][r].value=this._childrenObjects[t][r].metadata,e[t][r].identity=this._childrenObjects[t][r].identity}return e}}]),t}(p.default);t.default=b,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(42)),o=y(r(78)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=r(19),h=y(r(122));function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger("DataObjectObserver"),b="start",_="exact",m=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._version=e.version,n._filters={},n._syncObj.observe(function(e){n._onFilter(e)}),n._allocateListeners(),r}return(0,d.default)(t,e),(0,u.default)(t,[{key:"sync",value:function(){var e=this;return v.info("[DataObjectObserver_sync] synchronising "),new i.default(function(t,r){e._syncher.read(e._metadata.url).then(function(r){v.info("[DataObjectObserver_sync] value to sync: ",r),(0,o.default)(e.data,(0,p.deepClone)(r.data)),e._version=r.version,e._metadata.lastModified=r.lastModified,r.childrenObjects?(e.resumeChildrens(r.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){v.info("[DataObjectObserver_sync] sync failed: ",e),t(!1)})})}},{key:"_storeChildrens",value:function(){var e=this,t={};(0,n.default)(e._childrenObjects).forEach(function(r){var o=e._childrenObjects[r];t[r]={},(0,n.default)(o).forEach(function(e){t[r][e]={},t[r][e].value=o[e].metadata,t[r][e].identity=o[e].identity})});var r={from:e._owner,to:e._syncher._subURL,type:"create",body:{resource:e._url,attribute:"childrenObjects",value:t}};e._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+"/changes",function(t){"update"===t.type&&(v.log("DataObjectObserver-"+e._url+"-RCV: ",t),e._changeObject(e._syncObj,t))})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_releaseListeners",this).call(this),this._changeListener.remove()}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:"unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){v.log("DataObjectObserver-UNSUBSCRIBE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:"onChange",value:function(e,t){var r=e,n={type:_,callback:t},o=e.indexOf("*");o===e.length-1&&(0===o?n.type="any":(n.type=b,r=e.substr(0,e.length-1))),this._filters[r]=n}},{key:"_onFilter",value:function(e){var t=this;(0,n.default)(t._filters).forEach(function(r){var n=t._filters[r];"any"===n.type?n.callback(e):n.type===b?0===e.field.indexOf(r)&&n.callback(e):n.type===_&&e.field===r&&n.callback(e)})}},{key:"onDisconnected",value:function(e){var t=this;return new i.default(function(r,n){t._subscribeRegistration().then(function(){t._onDisconnected=e,r()}).catch(function(e){return n(e)})})}},{key:"_subscribeRegistration",value:function(){var e=this,t={type:"subscribe",from:this._owner,to:this._syncher._runtimeUrl+"/subscriptions",body:{resources:[this._url+"/registration"]}};return new i.default(function(r,n){e._bus.postMessage(t,function(t){v.log("[DataObjectObserver._subscribeRegistration] "+e._url+" rcved reply ",t),200===t.body.code?(e._generateListener(e._url+"/registration"),r()):(v.error("Error subscribing registration status for ",e._url),n("Error subscribing registration status for "+e._url))})})}},{key:"_generateListener",value:function(e){var t=this;t._bus.addListener(e,function(e){v.log("[DataObjectObserver.registrationNotification] "+t._url+": ",e),e.body.value&&"disconnected"===e.body.value&&t._onDisconnected&&(v.log("[DataObjectObserver] "+t._url+": was disconnected ",e),t._onDisconnected())})}},{key:"execute",value:function(e,t){var r=this,n=this;return new i.default(function(o,i){var s={type:"execute",from:r._owner,to:n._url,body:{method:e,params:t}};n._bus.postMessage(s,function(t){v.log("[DataObjectObserver.execute] "+n._url+" rcved reply ",t),200===t.body.code?o():(v.warn("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"),i("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"))})})}}]),t}(h.default);t.default=m,e.exports=t.default},,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)).getLogger("DataProvisional"),a=function(){function e(t,r,o,i){(0,n.default)(this,e),this._owner=t,this._url=r,this._bus=o,this._children=i,this._changes=[],this._allocateListeners()}return(0,o.default)(e,[{key:"_allocateListeners",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){s.log("DataProvisional-"+e._url+"-RCV: ",t),e._changes.push(t)})}},{key:"_releaseListeners",value:function(){this._listener.remove()}},{key:"apply",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:"children",get:function(){return this._children}}]),e}();t.default=a,e.exports=t.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NotificationHandler=t.DataObjectObserver=t.DataObjectReporter=t.Syncher=void 0;var n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),o=u(r(131)),i=u(r(132)),s=u(r(133)),a=u(r(197));function u(e){return e&&e.__esModule?e:{default:e}}var c=n.getLogger("Syncher"),l=n.getLogger("DataObject"),d=n.getLogger("DataObjectChild"),f=n.getLogger("DataObjectObserver"),p=n.getLogger("DataObjectReporter"),h=n.getLogger("DataProvisional");c.setLevel(0),l.setLevel(0),d.setLevel(0),f.setLevel(0),p.setLevel(0),h.setLevel(0),t.Syncher=o.default,t.DataObjectReporter=i.default,t.DataObjectObserver=s.default,t.NotificationHandler=a.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s(r(3)),o=s(r(5)),i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){if((0,n.default)(this,e),!t)throw Error("[NotificationHandler Constructor] bus input is mandatory");this._bus=t,this._onNotificationHandler={}}return(0,o.default)(e,[{key:"onNotification",value:function(e,t){this._onNotificationHandler[e]=t}},{key:"onCreate",value:function(e){var t=this,r=e.body.hasOwnProperty("resource")?e.body.resource:e.from.slice(0,-13),n=(0,i.divideURL)(r).domain,o=r.split("://")[0],s=function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:400,desc:"Bad Request: "+r}})};e.body.hasOwnProperty("source")||s("Missing source"),e.body.hasOwnProperty("schema")||s("Missing schema"),e.body.hasOwnProperty("value")||s("Missing value"),e.body.hasOwnProperty("identity")||s("Missing identity");var a={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,to:e.to,via:e.body.via,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})},error:function(e){s(e)}};t._onNotificationHandler[o]&&(console.info("[NotificationHandler] NOTIFICATION-EVENT: ",a),t._onNotificationHandler[o](a))}},{key:"onDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(log.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}}]),e}();t.default=a,e.exports=t.default}])})},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=161)}([function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t,r){var n=r(36)("wks"),o=r(23),i=r(1).Symbol,s="function"==typeof i;(e.exports=function(e){return n[e]||(n[e]=s&&i[e]||(s?i:o)("Symbol."+e))}).store=n},function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),(0,n.default)(e,o.key,o)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){var n=r(1),o=r(0),i=r(14),s=r(11),a=r(10),u=function(e,t,r){var c,l,d,f=e&u.F,p=e&u.G,h=e&u.S,y=e&u.P,v=e&u.B,b=e&u.W,_=p?o:o[t]||(o[t]={}),m=_.prototype,g=p?n:h?n[t]:(n[t]||{}).prototype;for(c in p&&(r=t),r)(l=!f&&g&&void 0!==g[c])&&a(_,c)||(d=l?g[c]:r[c],_[c]=p&&"function"!=typeof g[c]?r[c]:v&&l?i(d,n):b&&g[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):y&&"function"==typeof d?i(Function.call,d):d,y&&((_.virtual||(_.virtual={}))[c]=d,e&u.R&&m&&!m[c]&&s(m,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){var n=r(9),o=r(39),i=r(27),s=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),o=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(55),o=r(30);e.exports=function(e){return n(o(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,r){e.exports={default:r(102),__esModule:!0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(58)),o=i(r(42));function i(e){return e&&e.__esModule?e:{default:e}}function s(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$3,$4").split(",")}var r=t(e);if(r[0]===e&&!r[0].includes("@")){var n={type:"",domain:e,identity:""};return console.warn("[DivideURL] DivideURL don't support url without scheme. Please review your url address",e),n}return r[0]===e&&r[0].includes("@")&&(r=t((r[0]===e?"smtp":r[0])+"://"+r[0])),r[1].includes("@")&&(r[2]=r[0]+"://"+r[1],r[1]=r[1].substr(r[1].indexOf("@")+1)),{type:r[0],domain:r[1],identity:r[2]}}function a(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}t.divideURL=s,t.divideEmail=function(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,o.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,n.default)(e))},t.getUserURLFromEmail=a,t.getUserEmailFromURL=function(e){var t=s(e);return t.identity.replace("/","")+"@"+t.domain},t.convertToUserURL=function(e){if("user://"===e.substring(0,7)){var t=s(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return a(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(".");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&r.push(e)});var i=void 0;r.forEach(function(t){i=e.replace(t,"*+*"),n=i.split(".").map(function(e){return"*+*"===e?t:e})})}return console.log("[ServiceFramework.Utils.checkAttribute]",n),n},t.parseAttributes=function(e){if(e.includes("://")){var t=e.split(/([0-9a-zA-Z][-\w]*):\/\//g)[0],r=t.split("."),n=e.replace(t,"");if(e.includes("identity")){var o=n.split("identity.");console.log("array2 "+o),n=o[0].slice(".",-1),o=o[1].split("."),r.push(n,"identity"),r=r.concat(o)}else r.push(n);return r.filter(Boolean)}return e.split(".")}},function(e,t,r){var n=r(45),o=r(37);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},,function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},,function(e,t,r){var n=r(8).f,o=r(10),i=r(2)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,r){var n=r(7),o=r(1).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},,function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},,,function(e,t,r){var n=r(36)("keys"),o=r(23);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t,r){var n=r(0),o=r(1),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(9),o=r(72),i=r(37),s=r(35)("IE_PROTO"),a=function(){},u=function(){var e,t=r(28)("iframe"),n=i.length;for(t.style.display="none",r(56).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[i[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(a.prototype=n(e),r=new a,a.prototype=null,r[s]=e):r=u(),void 0===t?r:o(r,t)}},function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},,,function(e,t,r){e.exports={default:r(89),__esModule:!0}},,function(e,t,r){var n=r(6),o=r(0),i=r(13);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],s={};s[e]=t(r),n(n.S+n.F*i(function(){r(1)}),"Object",s)}},function(e,t,r){var n=r(10),o=r(12),i=r(64)(!1),s=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=o(e),u=0,c=[];for(r in a)r!=s&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~i(c,r)||c.push(r));return c}},,,function(e,t,r){"use strict";var n=r(15),o=r(6),i=r(50),s=r(11),a=r(17),u=r(71),c=r(26),l=r(53),d=r(2)("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,r,h,y,v,b){u(r,t,h);var _,m,g,O=function(e){if(!f&&e in R)return R[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},w=t+" Iterator",j="values"==y,k=!1,R=e.prototype,L=R[d]||R["@@iterator"]||y&&R[y],x=L||O(y),P=y?j?O("entries"):x:void 0,C="Array"==t&&R.entries||L;if(C&&(g=l(C.call(new e)))!==Object.prototype&&g.next&&(c(g,w,!0),n||"function"==typeof g[d]||s(g,d,p)),j&&L&&"values"!==L.name&&(k=!0,x=function(){return L.call(this)}),n&&!b||!f&&!k&&R[d]||s(R,d,x),a[t]=x,a[w]=p,y)if(_={values:j?x:O("values"),keys:v?x:O("keys"),entries:P},b)for(m in _)m in R||i(R,m,_[m]);else o(o.P+o.F*(f||k),t,_);return _}},function(e,t,r){var n=r(31),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){e.exports=r(11)},function(e,t,r){"use strict";var n=r(24);e.exports.f=function(e){return new function(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}(e)}},function(e,t,r){"use strict";var n=r(70)(!0);r(48)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){var n=r(10),o=r(32),i=r(35)("IE_PROTO"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,r){r(73);for(var n=r(1),o=r(11),i=r(17),s=r(2)("toStringTag"),a="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<a.length;u++){var c=a[u],l=n[c],d=l&&l.prototype;d&&!d[s]&&o(d,s,c),i[c]=i.Array}},function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},,function(e,t,r){e.exports={default:r(76),__esModule:!0}},function(e,t,r){e.exports={default:r(61),__esModule:!0}},function(e,t){},function(e,t,r){r(62);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(6);n(n.S+n.F*!r(4),"Object",{defineProperty:r(8).f})},function(e,t,r){var n=r(21),o=r(2)("toStringTag"),i="Arguments"==n(function(){return arguments}());e.exports=function(e){var t,r,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:i?n(t):"Object"==(s=n(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,r){var n=r(12),o=r(49),i=r(65);e.exports=function(e){return function(t,r,s){var a,u=n(t),c=o(u.length),l=i(s,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},function(e,t,r){var n=r(9),o=r(24),i=r(2)("species");e.exports=function(e,t){var r,s=n(e).constructor;return void 0===s||void 0==(r=n(s)[i])?t:o(r)}},function(e,t,r){var n,o,i,s=r(14),a=r(108),u=r(56),c=r(28),l=r(1),d=l.process,f=l.setImmediate,p=l.clearImmediate,h=l.MessageChannel,y=l.Dispatch,v=0,b={},_=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},m=function(e){_.call(e.data)};f&&p||(f=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return b[++v]=function(){a("function"==typeof e?e:Function(e),t)},n(v),v},p=function(e){delete b[e]},"process"==r(21)(d)?n=function(e){d.nextTick(s(_,e,1))}:y&&y.now?n=function(e){y.now(s(_,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=m,n=s(i.postMessage,i,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+"","*")},l.addEventListener("message",m,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),_.call(e)}}:function(e){setTimeout(s(_,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(9),o=r(7),i=r(51);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(31),o=r(30);e.exports=function(e){return function(t,r){var i,s,a=String(o(t)),u=n(r),c=a.length;return u<0||u>=c?e?"":void 0:(i=a.charCodeAt(u))<55296||i>56319||u+1===c||(s=a.charCodeAt(u+1))<56320||s>57343?e?a.charAt(u):i:e?a.slice(u,u+2):s-56320+(i-55296<<10)+65536}}},function(e,t,r){"use strict";var n=r(38),o=r(16),i=r(26),s={};r(11)(s,r(2)("iterator"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(s,{next:o(1,r)}),i(e,t+" Iterator")}},function(e,t,r){var n=r(8),o=r(9),i=r(20);e.exports=r(4)?Object.defineProperties:function(e,t){o(e);for(var r,s=i(t),a=s.length,u=0;a>u;)n.f(e,r=s[u++],t[r]);return e}},function(e,t,r){"use strict";var n=r(74),o=r(75),i=r(17),s=r(12);e.exports=r(48)(Array,"Array",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])},"values"),i.Arguments=i.Array,n("keys"),n("values"),n("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){var n=r(0),o=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},,,,,,,,,,,,,function(e,t,r){r(90),e.exports=r(0).Object.keys},function(e,t,r){var n=r(32),o=r(20);r(44)("keys",function(){return function(e){return o(n(e))}})},,,,,,,,,,,function(e,t,r){var n=r(63),o=r(2)("iterator"),i=r(17);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[n(e)]}},function(e,t,r){r(60),r(52),r(54),r(103),r(114),r(115),e.exports=r(0).Promise},function(e,t,r){"use strict";var n,o,i,s,a=r(15),u=r(1),c=r(14),l=r(63),d=r(6),f=r(7),p=r(24),h=r(104),y=r(105),v=r(66),b=r(67).set,_=r(109)(),m=r(51),g=r(68),O=r(110),w=r(69),j=u.TypeError,k=u.process,R=k&&k.versions,L=R&&R.v8||"",x=u.Promise,P="process"==l(k),C=function(){},S=o=m.f,M=!!function(){try{var e=x.resolve(1),t=(e.constructor={})[r(2)("species")]=function(e){e(C,C)};return(P||"function"==typeof PromiseRejectionEvent)&&e.then(C)instanceof t&&0!==L.indexOf("6.6")&&-1===O.indexOf("Chrome/66")}catch(e){}}(),U=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},D=function(e,t){if(!e._n){e._n=!0;var r=e._c;_(function(){for(var n=e._v,o=1==e._s,i=0,s=function(t){var r,i,s,a=o?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{a?(o||(2==e._h&&I(e),e._h=1),!0===a?r=n:(l&&l.enter(),r=a(n),l&&(l.exit(),s=!0)),r===t.promise?c(j("Promise-chain cycle")):(i=U(r))?i.call(r,u,c):u(r)):c(n)}catch(e){l&&!s&&l.exit(),c(e)}};r.length>i;)s(r[i++]);e._c=[],e._n=!1,t&&!e._h&&E(e)})}},E=function(e){b.call(u,function(){var t,r,n,o=e._v,i=T(e);if(i&&(t=g(function(){P?k.emit("unhandledRejection",o,e):(r=u.onunhandledrejection)?r({promise:e,reason:o}):(n=u.console)&&n.error&&n.error("Unhandled promise rejection",o)}),e._h=P||T(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},T=function(e){return 1!==e._h&&0===(e._a||e._c).length},I=function(e){b.call(u,function(){var t;P?k.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},H=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),D(t,!0))},A=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw j("Promise can't be resolved itself");(t=U(e))?_(function(){var n={_w:r,_d:!1};try{t.call(e,c(A,n,1),c(H,n,1))}catch(e){H.call(n,e)}}):(r._v=e,r._s=1,D(r,!1))}catch(e){H.call({_w:r,_d:!1},e)}}};M||(x=function(e){h(this,x,"Promise","_h"),p(e),n.call(this);try{e(c(A,this,1),c(H,this,1))}catch(e){H.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(111)(x.prototype,{then:function(e,t){var r=S(v(this,x));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=P?k.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&D(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=c(A,e,1),this.reject=c(H,e,1)},m.f=S=function(e){return e===x||e===s?new i(e):o(e)}),d(d.G+d.W+d.F*!M,{Promise:x}),r(26)(x,"Promise"),r(112)("Promise"),s=r(0).Promise,d(d.S+d.F*!M,"Promise",{reject:function(e){var t=S(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!M),"Promise",{resolve:function(e){return w(a&&this===s?x:this,e)}}),d(d.S+d.F*!(M&&r(113)(function(e){x.all(e).catch(C)})),"Promise",{all:function(e){var t=this,r=S(t),n=r.resolve,o=r.reject,i=g(function(){var r=[],i=0,s=1;y(e,!1,function(e){var a=i++,u=!1;r.push(void 0),s++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--s||n(r))},o)}),--s||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=S(t),n=r.reject,o=g(function(){y(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(14),o=r(106),i=r(107),s=r(9),a=r(49),u=r(101),c={},l={};(t=e.exports=function(e,t,r,d,f){var p,h,y,v,b=f?function(){return e}:u(e),_=n(r,d,t?2:1),m=0;if("function"!=typeof b)throw TypeError(e+" is not iterable!");if(i(b)){for(p=a(e.length);p>m;m++)if((v=t?_(s(h=e[m])[0],h[1]):_(e[m]))===c||v===l)return v}else for(y=b.call(e);!(h=y.next()).done;)if((v=o(y,_,h.value,t))===c||v===l)return v}).BREAK=c,t.RETURN=l},function(e,t,r){var n=r(9);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(17),o=r(2)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),o=r(67).set,i=n.MutationObserver||n.WebKitMutationObserver,s=n.process,a=n.Promise,u="process"==r(21)(s);e.exports=function(){var e,t,r,c=function(){var n,o;for(u&&(n=s.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){s.nextTick(c)};else if(!i||n.navigator&&n.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);r=function(){l.then(c)}}else r=function(){o.call(n,c)};else{var d=!0,f=document.createTextNode("");new i(c).observe(f,{characterData:!0}),r=function(){f.data=d=!d}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){var n=r(1).navigator;e.exports=n&&n.userAgent||""},function(e,t,r){var n=r(11);e.exports=function(e,t,r){for(var o in t)r&&e[o]?e[o]=t[o]:n(e,o,t[o]);return e}},function(e,t,r){"use strict";var n=r(1),o=r(0),i=r(8),s=r(4),a=r(2)("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:n[e];s&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(2)("iterator"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],s=i[n]();s.next=function(){return{done:r=!0}},i[n]=function(){return s},e(i)}catch(e){}return r}},function(e,t,r){"use strict";var n=r(6),o=r(0),i=r(1),s=r(66),a=r(69);n(n.P+n.R,"Promise",{finally:function(e){var t=s(this,o.Promise||i.Promise),r="function"==typeof e;return this.then(r?function(r){return a(t,e()).then(function(){return r})}:e,r?function(r){return a(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){"use strict";var n=r(6),o=r(51),i=r(68);n(n.S,"Promise",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(18)),o=a(r(3)),i=a(r(5)),s=r(19);function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(t,r,n){(0,o.default)(this,e),this.messageBus=n,this.domain=(0,s.divideURL)(t).domain,this.owner=t,this.runtimeURL=r}return(0,i.default)(e,[{key:"discoverUserRegistered",value:function(e,t){var r=this;return new n.default(function(n,o){var i,s=e||".",a={type:"read",from:i=t||r.owner,to:r.runtimeURL+"/registry/",body:{resource:s,criteria:i}};r.messageBus.postMessage(a,function(e){var t=e.body.resource;t&&200===e.body.code?n(t):o("code: "+e.body.code+" No user was found")})})}},{key:"discoverIdentityPerIdP",value:function(e){var t=this;return new n.default(function(r,n){var o={type:"read",from:this.owner,to:t.runtimeURL+"/idm",body:{resource:e,criteria:"idp"}};t.messageBus.postMessage(o,function(e){200===e.body.code?r(e.body.value):n(e.body.code+" "+e.body.desc)})})}}]),e}();t.default=u,e.exports=t.default},,,,,,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){return e&&e.__esModule?e:{default:e}}(r(148));t.default=n.default,e.exports=t.default}])})},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=167)}([function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t,r){var n=r(36)("wks"),o=r(23),i=r(1).Symbol,s="function"==typeof i;(e.exports=function(e){return n[e]||(n[e]=s&&i[e]||(s?i:o)("Symbol."+e))}).store=n},function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),(0,n.default)(e,o.key,o)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){var n=r(1),o=r(0),i=r(14),s=r(11),a=r(10),u=function(e,t,r){var c,l,d,f=e&u.F,p=e&u.G,h=e&u.S,y=e&u.P,v=e&u.B,b=e&u.W,_=p?o:o[t]||(o[t]={}),m=_.prototype,g=p?n:h?n[t]:(n[t]||{}).prototype;for(c in p&&(r=t),r)(l=!f&&g&&void 0!==g[c])&&a(_,c)||(d=l?g[c]:r[c],_[c]=p&&"function"!=typeof g[c]?r[c]:v&&l?i(d,n):b&&g[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):y&&"function"==typeof d?i(Function.call,d):d,y&&((_.virtual||(_.virtual={}))[c]=d,e&u.R&&m&&!m[c]&&s(m,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){var n=r(9),o=r(39),i=r(27),s=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),o=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(55),o=r(30);e.exports=function(e){return n(o(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,r){e.exports={default:r(102),__esModule:!0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(58)),o=i(r(42));function i(e){return e&&e.__esModule?e:{default:e}}function s(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$3,$4").split(",")}var r=t(e);if(r[0]===e&&!r[0].includes("@")){var n={type:"",domain:e,identity:""};return console.warn("[DivideURL] DivideURL don't support url without scheme. Please review your url address",e),n}return r[0]===e&&r[0].includes("@")&&(r=t((r[0]===e?"smtp":r[0])+"://"+r[0])),r[1].includes("@")&&(r[2]=r[0]+"://"+r[1],r[1]=r[1].substr(r[1].indexOf("@")+1)),{type:r[0],domain:r[1],identity:r[2]}}function a(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}t.divideURL=s,t.divideEmail=function(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,o.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,n.default)(e))},t.getUserURLFromEmail=a,t.getUserEmailFromURL=function(e){var t=s(e);return t.identity.replace("/","")+"@"+t.domain},t.convertToUserURL=function(e){if("user://"===e.substring(0,7)){var t=s(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return a(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(".");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&r.push(e)});var i=void 0;r.forEach(function(t){i=e.replace(t,"*+*"),n=i.split(".").map(function(e){return"*+*"===e?t:e})})}return console.log("[ServiceFramework.Utils.checkAttribute]",n),n},t.parseAttributes=function(e){if(e.includes("://")){var t=e.split(/([0-9a-zA-Z][-\w]*):\/\//g)[0],r=t.split("."),n=e.replace(t,"");if(e.includes("identity")){var o=n.split("identity.");console.log("array2 "+o),n=o[0].slice(".",-1),o=o[1].split("."),r.push(n,"identity"),r=r.concat(o)}else r.push(n);return r.filter(Boolean)}return e.split(".")}},function(e,t,r){var n=r(45),o=r(37);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){var n,o;!function(i,s){"use strict";void 0===(o="function"==typeof(n=function(){var e=function(){},t="undefined",r=["trace","debug","info","warn","error"];function n(e,t){var r=e[t];if("function"==typeof r.bind)return r.bind(e);try{return Function.prototype.bind.call(r,e)}catch(t){return function(){return Function.prototype.apply.apply(r,[e,arguments])}}}function o(t,n){for(var o=0;o<r.length;o++){var i=r[o];this[i]=o<t?e:this.methodFactory(i,t,n)}this.log=this.debug}function i(r,i,s){return function(r){return"debug"===r&&(r="log"),typeof console!==t&&(void 0!==console[r]?n(console,r):void 0!==console.log?n(console,"log"):e)}(r)||function(e,r,n){return function(){typeof console!==t&&(o.call(this,r,n),this[e].apply(this,arguments))}}.apply(this,arguments)}function s(e,n,s){var a,u=this,c="loglevel";function l(){var e;if(typeof window!==t){try{e=window.localStorage[c]}catch(e){}if(typeof e===t)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(c)+"=");-1!==n&&(e=/^([^;]+)/.exec(r.slice(n))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}e&&(c+=":"+e),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=s||i,u.getLevel=function(){return a},u.setLevel=function(n,i){if("string"==typeof n&&void 0!==u.levels[n.toUpperCase()]&&(n=u.levels[n.toUpperCase()]),!("number"==typeof n&&n>=0&&n<=u.levels.SILENT))throw"log.setLevel() called with invalid level: "+n;if(a=n,!1!==i&&function(e){var n=(r[e]||"silent").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[c]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(c)+"="+n+";"}catch(e){}}}(n),o.call(u,n,e),typeof console===t&&n<u.levels.SILENT)return"No console available for logging"},u.setDefaultLevel=function(e){l()||u.setLevel(e,!1)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)};var d=l();null==d&&(d=null==n?"WARN":n),u.setLevel(d,!1)}var a=new s,u={};a.getLogger=function(e){if("string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=u[e];return t||(t=u[e]=new s(e,a.getLevel(),a.methodFactory)),t};var c=typeof window!==t?window.log:void 0;return a.noConflict=function(){return typeof window!==t&&window.log===a&&(window.log=c),a},a.getLoggers=function(){return u},a})?n.call(t,r,t,e):n)||(e.exports=o)}()},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,r){e.exports={default:r(91),__esModule:!0}},function(e,t,r){var n=r(8).f,o=r(10),i=r(2)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,r){var n=r(7),o=r(1).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(47));t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,n.default)(t))&&"function"!=typeof t?e:t}},function(e,t,r){"use strict";t.__esModule=!0;var n=s(r(93)),o=s(r(97)),i=s(r(47));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(n.default?(0,n.default)(e,t):e.__proto__=t)}},function(e,t,r){var n=r(36)("keys"),o=r(23);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t,r){var n=r(0),o=r(1),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(9),o=r(72),i=r(37),s=r(35)("IE_PROTO"),a=function(){},u=function(){var e,t=r(28)("iframe"),n=i.length;for(t.style.display="none",r(56).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[i[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(a.prototype=n(e),r=new a,a.prototype=null,r[s]=e):r=u(),void 0===t?r:o(r,t)}},function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},function(e,t,r){t.f=r(2)},function(e,t,r){var n=r(1),o=r(0),i=r(15),s=r(40),a=r(8).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:s.f(e)})}},function(e,t,r){e.exports={default:r(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(6),o=r(0),i=r(13);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],s={};s[e]=t(r),n(n.S+n.F*i(function(){r(1)}),"Object",s)}},function(e,t,r){var n=r(10),o=r(12),i=r(64)(!1),s=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=o(e),u=0,c=[];for(r in a)r!=s&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~i(c,r)||c.push(r));return c}},function(e,t,r){var n=r(29),o=r(16),i=r(12),s=r(27),a=r(10),u=r(39),c=Object.getOwnPropertyDescriptor;t.f=r(4)?c:function(e,t){if(e=i(e),t=s(t,!0),u)try{return c(e,t)}catch(e){}if(a(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t,r){"use strict";t.__esModule=!0;var n=s(r(79)),o=s(r(81)),i="function"==typeof o.default&&"symbol"==typeof n.default?function(e){return typeof e}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":typeof e};function s(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof o.default&&"symbol"===i(n.default)?function(e){return void 0===e?"undefined":i(e)}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":void 0===e?"undefined":i(e)}},function(e,t,r){"use strict";var n=r(15),o=r(6),i=r(50),s=r(11),a=r(17),u=r(71),c=r(26),l=r(53),d=r(2)("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,r,h,y,v,b){u(r,t,h);var _,m,g,O=function(e){if(!f&&e in R)return R[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},w=t+" Iterator",j="values"==y,k=!1,R=e.prototype,L=R[d]||R["@@iterator"]||y&&R[y],x=L||O(y),P=y?j?O("entries"):x:void 0,C="Array"==t&&R.entries||L;if(C&&(g=l(C.call(new e)))!==Object.prototype&&g.next&&(c(g,w,!0),n||"function"==typeof g[d]||s(g,d,p)),j&&L&&"values"!==L.name&&(k=!0,x=function(){return L.call(this)}),n&&!b||!f&&!k&&R[d]||s(R,d,x),a[t]=x,a[w]=p,y)if(_={values:j?x:O("values"),keys:v?x:O("keys"),entries:P},b)for(m in _)m in R||i(R,m,_[m]);else o(o.P+o.F*(f||k),t,_);return _}},function(e,t,r){var n=r(31),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){e.exports=r(11)},function(e,t,r){"use strict";var n=r(24);e.exports.f=function(e){return new function(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}(e)}},function(e,t,r){"use strict";var n=r(70)(!0);r(48)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){var n=r(10),o=r(32),i=r(35)("IE_PROTO"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,r){r(73);for(var n=r(1),o=r(11),i=r(17),s=r(2)("toStringTag"),a="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<a.length;u++){var c=a[u],l=n[c],d=l&&l.prototype;d&&!d[s]&&o(d,s,c),i[c]=i.Array}},function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(45),o=r(37).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){e.exports={default:r(76),__esModule:!0}},function(e,t,r){e.exports={default:r(61),__esModule:!0}},function(e,t){},function(e,t,r){r(62);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(6);n(n.S+n.F*!r(4),"Object",{defineProperty:r(8).f})},function(e,t,r){var n=r(21),o=r(2)("toStringTag"),i="Arguments"==n(function(){return arguments}());e.exports=function(e){var t,r,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:i?n(t):"Object"==(s=n(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,r){var n=r(12),o=r(49),i=r(65);e.exports=function(e){return function(t,r,s){var a,u=n(t),c=o(u.length),l=i(s,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},function(e,t,r){var n=r(9),o=r(24),i=r(2)("species");e.exports=function(e,t){var r,s=n(e).constructor;return void 0===s||void 0==(r=n(s)[i])?t:o(r)}},function(e,t,r){var n,o,i,s=r(14),a=r(108),u=r(56),c=r(28),l=r(1),d=l.process,f=l.setImmediate,p=l.clearImmediate,h=l.MessageChannel,y=l.Dispatch,v=0,b={},_=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},m=function(e){_.call(e.data)};f&&p||(f=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return b[++v]=function(){a("function"==typeof e?e:Function(e),t)},n(v),v},p=function(e){delete b[e]},"process"==r(21)(d)?n=function(e){d.nextTick(s(_,e,1))}:y&&y.now?n=function(e){y.now(s(_,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=m,n=s(i.postMessage,i,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+"","*")},l.addEventListener("message",m,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),_.call(e)}}:function(e){setTimeout(s(_,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(9),o=r(7),i=r(51);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(31),o=r(30);e.exports=function(e){return function(t,r){var i,s,a=String(o(t)),u=n(r),c=a.length;return u<0||u>=c?e?"":void 0:(i=a.charCodeAt(u))<55296||i>56319||u+1===c||(s=a.charCodeAt(u+1))<56320||s>57343?e?a.charAt(u):i:e?a.slice(u,u+2):s-56320+(i-55296<<10)+65536}}},function(e,t,r){"use strict";var n=r(38),o=r(16),i=r(26),s={};r(11)(s,r(2)("iterator"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(s,{next:o(1,r)}),i(e,t+" Iterator")}},function(e,t,r){var n=r(8),o=r(9),i=r(20);e.exports=r(4)?Object.defineProperties:function(e,t){o(e);for(var r,s=i(t),a=s.length,u=0;a>u;)n.f(e,r=s[u++],t[r]);return e}},function(e,t,r){"use strict";var n=r(74),o=r(75),i=r(17),s=r(12);e.exports=r(48)(Array,"Array",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])},"values"),i.Arguments=i.Array,n("keys"),n("values"),n("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){var n=r(0),o=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},function(e,t,r){var n=r(23)("meta"),o=r(7),i=r(10),s=r(8).f,a=0,u=Object.isExtensible||function(){return!0},c=!r(13)(function(){return u(Object.preventExtensions({}))}),l=function(e){s(e,n,{value:{i:"O"+ ++a,w:{}}})},d=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,n)){if(!u(e))return"F";if(!t)return"E";l(e)}return e[n].i},getWeak:function(e,t){if(!i(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},onFreeze:function(e){return c&&d.NEED&&u(e)&&!i(e,n)&&l(e),e}}},function(e,t,r){e.exports={default:r(119),__esModule:!0}},function(e,t,r){e.exports={default:r(80),__esModule:!0}},function(e,t,r){r(52),r(54),e.exports=r(40).f("iterator")},function(e,t,r){e.exports={default:r(82),__esModule:!0}},function(e,t,r){r(83),r(60),r(87),r(88),e.exports=r(0).Symbol},function(e,t,r){"use strict";var n=r(1),o=r(10),i=r(4),s=r(6),a=r(50),u=r(77).KEY,c=r(13),l=r(36),d=r(26),f=r(23),p=r(2),h=r(40),y=r(41),v=r(84),b=r(85),_=r(9),m=r(7),g=r(12),O=r(27),w=r(16),j=r(38),k=r(86),R=r(46),L=r(8),x=r(20),P=R.f,C=L.f,S=k.f,M=n.Symbol,U=n.JSON,D=U&&U.stringify,E=p("_hidden"),T=p("toPrimitive"),I={}.propertyIsEnumerable,H=l("symbol-registry"),A=l("symbols"),N=l("op-symbols"),F=Object.prototype,B="function"==typeof M,V=n.QObject,z=!V||!V.prototype||!V.prototype.findChild,G=i&&c(function(){return 7!=j(C({},"a",{get:function(){return C(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=P(F,t);n&&delete F[t],C(e,t,r),n&&e!==F&&C(F,t,n)}:C,q=function(e){var t=A[e]=j(M.prototype);return t._k=e,t},J=B&&"symbol"==typeof M.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof M},Z=function(e,t,r){return e===F&&Z(N,t,r),_(e),t=O(t,!0),_(r),o(A,t)?(r.enumerable?(o(e,E)&&e[E][t]&&(e[E][t]=!1),r=j(r,{enumerable:w(0,!1)})):(o(e,E)||C(e,E,w(1,{})),e[E][t]=!0),G(e,t,r)):C(e,t,r)},W=function(e,t){_(e);for(var r,n=v(t=g(t)),o=0,i=n.length;i>o;)Z(e,r=n[o++],t[r]);return e},Y=function(e){var t=I.call(this,e=O(e,!0));return!(this===F&&o(A,e)&&!o(N,e))&&(!(t||!o(this,e)||!o(A,e)||o(this,E)&&this[E][e])||t)},K=function(e,t){if(e=g(e),t=O(t,!0),e!==F||!o(A,t)||o(N,t)){var r=P(e,t);return!r||!o(A,t)||o(e,E)&&e[E][t]||(r.enumerable=!0),r}},$=function(e){for(var t,r=S(g(e)),n=[],i=0;r.length>i;)o(A,t=r[i++])||t==E||t==u||n.push(t);return n},X=function(e){for(var t,r=e===F,n=S(r?N:g(e)),i=[],s=0;n.length>s;)!o(A,t=n[s++])||r&&!o(F,t)||i.push(A[t]);return i};B||(a((M=function(){if(this instanceof M)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(r){this===F&&t.call(N,r),o(this,E)&&o(this[E],e)&&(this[E][e]=!1),G(this,e,w(1,r))};return i&&z&&G(F,e,{configurable:!0,set:t}),q(e)}).prototype,"toString",function(){return this._k}),R.f=K,L.f=Z,r(57).f=k.f=$,r(29).f=Y,r(43).f=X,i&&!r(15)&&a(F,"propertyIsEnumerable",Y,!0),h.f=function(e){return q(p(e))}),s(s.G+s.W+s.F*!B,{Symbol:M});for(var Q="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Q.length>ee;)p(Q[ee++]);for(var te=x(p.store),re=0;te.length>re;)y(te[re++]);s(s.S+s.F*!B,"Symbol",{for:function(e){return o(H,e+="")?H[e]:H[e]=M(e)},keyFor:function(e){if(!J(e))throw TypeError(e+" is not a symbol!");for(var t in H)if(H[t]===e)return t},useSetter:function(){z=!0},useSimple:function(){z=!1}}),s(s.S+s.F*!B,"Object",{create:function(e,t){return void 0===t?j(e):W(j(e),t)},defineProperty:Z,defineProperties:W,getOwnPropertyDescriptor:K,getOwnPropertyNames:$,getOwnPropertySymbols:X}),U&&s(s.S+s.F*(!B||c(function(){var e=M();return"[null]"!=D([e])||"{}"!=D({a:e})||"{}"!=D(Object(e))})),"JSON",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(m(t)||void 0!==e)&&!J(e))return b(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!J(t))return t}),n[1]=t,D.apply(U,n)}}),M.prototype[T]||r(11)(M.prototype,T,M.prototype.valueOf),d(M,"Symbol"),d(Math,"Math",!0),d(n.JSON,"JSON",!0)},function(e,t,r){var n=r(20),o=r(43),i=r(29);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var s,a=r(e),u=i.f,c=0;a.length>c;)u.call(e,s=a[c++])&&t.push(s);return t}},function(e,t,r){var n=r(21);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n=r(12),o=r(57).f,i={}.toString,s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return s.slice()}}(e):o(n(e))}},function(e,t,r){r(41)("asyncIterator")},function(e,t,r){r(41)("observable")},function(e,t,r){r(90),e.exports=r(0).Object.keys},function(e,t,r){var n=r(32),o=r(20);r(44)("keys",function(){return function(e){return o(n(e))}})},function(e,t,r){r(92),e.exports=r(0).Object.getPrototypeOf},function(e,t,r){var n=r(32),o=r(53);r(44)("getPrototypeOf",function(){return function(e){return o(n(e))}})},function(e,t,r){e.exports={default:r(94),__esModule:!0}},function(e,t,r){r(95),e.exports=r(0).Object.setPrototypeOf},function(e,t,r){var n=r(6);n(n.S,"Object",{setPrototypeOf:r(96).set})},function(e,t,r){var n=r(7),o=r(9),i=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=r(14)(Function.call,r(46).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:i}},function(e,t,r){e.exports={default:r(98),__esModule:!0}},function(e,t,r){r(99);var n=r(0).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(6);n(n.S,"Object",{create:r(38)})},function(e,t,r){"use strict";t.__esModule=!0;var n=i(r(25)),o=i(r(125));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i){null===t&&(t=Function.prototype);var s=(0,o.default)(t,r);if(void 0===s){var a=(0,n.default)(t);return null===a?void 0:e(a,r,i)}if("value"in s)return s.value;var u=s.get;return void 0!==u?u.call(i):void 0}},function(e,t,r){var n=r(63),o=r(2)("iterator"),i=r(17);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[n(e)]}},function(e,t,r){r(60),r(52),r(54),r(103),r(114),r(115),e.exports=r(0).Promise},function(e,t,r){"use strict";var n,o,i,s,a=r(15),u=r(1),c=r(14),l=r(63),d=r(6),f=r(7),p=r(24),h=r(104),y=r(105),v=r(66),b=r(67).set,_=r(109)(),m=r(51),g=r(68),O=r(110),w=r(69),j=u.TypeError,k=u.process,R=k&&k.versions,L=R&&R.v8||"",x=u.Promise,P="process"==l(k),C=function(){},S=o=m.f,M=!!function(){try{var e=x.resolve(1),t=(e.constructor={})[r(2)("species")]=function(e){e(C,C)};return(P||"function"==typeof PromiseRejectionEvent)&&e.then(C)instanceof t&&0!==L.indexOf("6.6")&&-1===O.indexOf("Chrome/66")}catch(e){}}(),U=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},D=function(e,t){if(!e._n){e._n=!0;var r=e._c;_(function(){for(var n=e._v,o=1==e._s,i=0,s=function(t){var r,i,s,a=o?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{a?(o||(2==e._h&&I(e),e._h=1),!0===a?r=n:(l&&l.enter(),r=a(n),l&&(l.exit(),s=!0)),r===t.promise?c(j("Promise-chain cycle")):(i=U(r))?i.call(r,u,c):u(r)):c(n)}catch(e){l&&!s&&l.exit(),c(e)}};r.length>i;)s(r[i++]);e._c=[],e._n=!1,t&&!e._h&&E(e)})}},E=function(e){b.call(u,function(){var t,r,n,o=e._v,i=T(e);if(i&&(t=g(function(){P?k.emit("unhandledRejection",o,e):(r=u.onunhandledrejection)?r({promise:e,reason:o}):(n=u.console)&&n.error&&n.error("Unhandled promise rejection",o)}),e._h=P||T(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},T=function(e){return 1!==e._h&&0===(e._a||e._c).length},I=function(e){b.call(u,function(){var t;P?k.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},H=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),D(t,!0))},A=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw j("Promise can't be resolved itself");(t=U(e))?_(function(){var n={_w:r,_d:!1};try{t.call(e,c(A,n,1),c(H,n,1))}catch(e){H.call(n,e)}}):(r._v=e,r._s=1,D(r,!1))}catch(e){H.call({_w:r,_d:!1},e)}}};M||(x=function(e){h(this,x,"Promise","_h"),p(e),n.call(this);try{e(c(A,this,1),c(H,this,1))}catch(e){H.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(111)(x.prototype,{then:function(e,t){var r=S(v(this,x));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=P?k.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&D(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=c(A,e,1),this.reject=c(H,e,1)},m.f=S=function(e){return e===x||e===s?new i(e):o(e)}),d(d.G+d.W+d.F*!M,{Promise:x}),r(26)(x,"Promise"),r(112)("Promise"),s=r(0).Promise,d(d.S+d.F*!M,"Promise",{reject:function(e){var t=S(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!M),"Promise",{resolve:function(e){return w(a&&this===s?x:this,e)}}),d(d.S+d.F*!(M&&r(113)(function(e){x.all(e).catch(C)})),"Promise",{all:function(e){var t=this,r=S(t),n=r.resolve,o=r.reject,i=g(function(){var r=[],i=0,s=1;y(e,!1,function(e){var a=i++,u=!1;r.push(void 0),s++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--s||n(r))},o)}),--s||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=S(t),n=r.reject,o=g(function(){y(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(14),o=r(106),i=r(107),s=r(9),a=r(49),u=r(101),c={},l={};(t=e.exports=function(e,t,r,d,f){var p,h,y,v,b=f?function(){return e}:u(e),_=n(r,d,t?2:1),m=0;if("function"!=typeof b)throw TypeError(e+" is not iterable!");if(i(b)){for(p=a(e.length);p>m;m++)if((v=t?_(s(h=e[m])[0],h[1]):_(e[m]))===c||v===l)return v}else for(y=b.call(e);!(h=y.next()).done;)if((v=o(y,_,h.value,t))===c||v===l)return v}).BREAK=c,t.RETURN=l},function(e,t,r){var n=r(9);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(17),o=r(2)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),o=r(67).set,i=n.MutationObserver||n.WebKitMutationObserver,s=n.process,a=n.Promise,u="process"==r(21)(s);e.exports=function(){var e,t,r,c=function(){var n,o;for(u&&(n=s.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){s.nextTick(c)};else if(!i||n.navigator&&n.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);r=function(){l.then(c)}}else r=function(){o.call(n,c)};else{var d=!0,f=document.createTextNode("");new i(c).observe(f,{characterData:!0}),r=function(){f.data=d=!d}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){var n=r(1).navigator;e.exports=n&&n.userAgent||""},function(e,t,r){var n=r(11);e.exports=function(e,t,r){for(var o in t)r&&e[o]?e[o]=t[o]:n(e,o,t[o]);return e}},function(e,t,r){"use strict";var n=r(1),o=r(0),i=r(8),s=r(4),a=r(2)("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:n[e];s&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(2)("iterator"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],s=i[n]();s.next=function(){return{done:r=!0}},i[n]=function(){return s},e(i)}catch(e){}return r}},function(e,t,r){"use strict";var n=r(6),o=r(0),i=r(1),s=r(66),a=r(69);n(n.P+n.R,"Promise",{finally:function(e){var t=s(this,o.Promise||i.Promise),r="function"==typeof e;return this.then(r?function(r){return a(t,e()).then(function(){return r})}:e,r?function(r){return a(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){"use strict";var n=r(6),o=r(51),i=r(68);n(n.S,"Promise",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectType=t.ChangeType=void 0;var n=s(r(3)),o=s(r(5));r(123);var i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){(0,n.default)(this,e),this._observers=[],this._filters={},this._data=t||{},this._internalObserve(this._data)}return(0,o.default)(e,[{key:"observe",value:function(e){this._observers.push(e)}},{key:"find",value:function(e){var t=(0,i.parseAttributes)(e);return this._findWithSplit(t)}},{key:"findBefore",value:function(e){var t={},r=(0,i.parseAttributes)(e);return t.last=r.pop(),t.obj=this._findWithSplit(r),t}},{key:"_findWithSplit",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:"_internalObserve",value:function(e){var t=this;this._data=Object.deepObserve(e,function(e){e.every(function(e){t._onChanges(e)})})}},{key:"_fireEvent",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:"_onChanges",value:function(e){var t=e.object,r=void 0;t.constructor===Object&&(r=c.OBJECT),t.constructor===Array&&(r=c.ARRAY);var n=e.keypath,o=t[e.name];"update"!==e.type||n.includes(".length")||this._fireEvent({cType:u.UPDATE,oType:r,field:n,data:o}),"add"===e.type&&this._fireEvent({cType:u.ADD,oType:r,field:n,data:o}),"delete"===e.type&&this._fireEvent({cType:u.REMOVE,oType:r,field:n})}},{key:"data",get:function(){return this._data}}]),e}(),u=t.ChangeType={UPDATE:"update",ADD:"add",REMOVE:"remove"},c=t.ObjectType={OBJECT:"object",ARRAY:"array"};t.default=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(18)),o=c(r(3)),i=c(r(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=c(r(117)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=s.getLogger("DataObjectChild"),d=function(){function e(t){function r(e){throw"[DataObjectChild] "+e+" mandatory parameter is missing"}(0,o.default)(this,e),t.parent?this._parent=t.parent:r("parent"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.parentObject?this._parentObject=t.parentObject:r("parentObject"),t.name&&(this._name=t.name),t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._childId=t.url,t.data?this._syncObj=new a.default(t.data):this._syncObj=new a.default({}),l.log("[DataObjectChild -  Constructor] - ",this._syncObj),this._bus=this._parentObject._bus,this._owner=this._parentObject._owner,this._allocateListeners(),this._metadata=t,delete this._metadata.parentObject,this._sharingStatus=!1}return(0,i.default)(e,[{key:"share",value:function(e){var t=this;t._sharingStatus=new n.default(function(r,n){var o;o=e?t.metadata.parent:t.metadata.parent+"/children/"+t.metadata.children;var i=t.metadata;i.data=t.data;var s={type:"create",from:t.metadata.reporter,to:o,body:{resource:i.url,value:i}};if(t.identity&&(s.body.identity=t.identity),t._parentObject.data.hasOwnProperty("mutual")&&(s.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,u.deepClone)(s)),r();var a=t._bus.postMessage((0,u.deepClone)(s),function(e){if(e.to===t._reporter){t._bus.removeResponseListener(s.from,e.id),l.log("[Syncher.DataObjectChild.share] Parent reporter reply ",e);var o={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:"Unknown"};return e.body.code<300?r(o):n(o)}},!1);setTimeout(function(){return t._bus.removeResponseListener(s.from,a),n({code:408,desc:"timout"})},3e3)})}},{key:"store",value:function(){var e={},t=this.metadata.children+"."+this.metadata.url;e.value=this.metadata,e.identity=this.identity;var r={from:this.metadata.reporter,to:this._parentObject._syncher._subURL,type:"create",body:{resource:this.metadata.parent,attribute:t,value:e}};l.log("[DataObjectChild.store]:",r),this._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){"response"===t.type&&t.id===e._msgId&&(l.log("DataObjectChild.onResponse:",t),e._onResponse(t))}))}},{key:"_releaseListeners",value:function(){this._listener&&this._listener.remove()}},{key:"delete",value:function(){this._releaseListeners()}},{key:"onChange",value:function(e){this._syncObj.observe(function(t){l.log("[DataObjectChild - observer] - ",t),e(t)})}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.body.source,code:e.body.code};this._onResponseHandler&&this._onResponseHandler(t)}},{key:"shareable",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:"metadata",get:function(){return this._metadata}},{key:"childId",get:function(){return this._childId}},{key:"sharingStatus",get:function(){return this._sharingStatus}},{key:"data",get:function(){return this._syncObj.data}},{key:"identity",set:function(e){this._identity=e},get:function(){return this._identity}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){r(120),e.exports=r(0).Object.assign},function(e,t,r){var n=r(6);n(n.S+n.F,"Object",{assign:r(121)})},function(e,t,r){"use strict";var n=r(20),o=r(43),i=r(29),s=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=s(e),u=arguments.length,c=1,l=o.f,d=i.f;u>c;)for(var f,p=a(arguments[c++]),h=l?n(p).concat(l(p)):n(p),y=h.length,v=0;y>v;)d.call(p,f=h[v++])&&(r[f]=p[f]);return r}:u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(47)),o=y(r(18)),i=y(r(42)),s=y(r(78)),a=y(r(3)),u=y(r(5)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=r(117),d=y(l),f=y(r(118)),p=r(19),h=y(r(128));function y(e){return e&&e.__esModule?e:{default:e}}var v=c.getLogger("DataObject"),b=function(){function e(t){function r(e){throw"[DataObject] "+e+" mandatory parameter is missing"}(0,a.default)(this,e),t.syncher?this._syncher=t.syncher:r("syncher"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.name?this._name=t.name:r("name"),this._status=t.status,t.data?this._syncObj=new d.default(t.data):this._syncObj=new d.default({}),this._childrens=t.childrens,this._mutual=t.mutual,this._version=0,this._childId=0,this._childrenListeners=[],this._onAddChildrenHandler,this._resumed=t.resume,t.resume&&(this._version=t.version),this._owner=t.syncher._owner,this._bus=t.syncher._bus,t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._metadata=(0,s.default)(t),this._metadata.lastModified=this._metadata.created,delete this._metadata.data,delete this._metadata.syncher,delete this._metadata.authorise,this._hypertyResourceFactory=new h.default,this._childrenObjects={},this._sharedChilds=[]}return(0,u.default)(e,[{key:"_getLastChildId",value:function(){var e=this,t=e._owner+"#0";return(0,i.default)(e._childrens).filter(function(r){e._childrens[r].childId>t&&(t=e._childrens[r].childId)}),Number(t.split("#")[1])}},{key:"_allocateListeners",value:function(){var e=this,t=this,r=t._url+"/children/";v.log("[Data Object - AllocateListeners] - ",t._childrens),t._childrens&&t._childrens.forEach(function(n){var o=r+n,i=t._bus.addListener(o,function(r){if(r.from!==e._owner)switch(v.log("DataObject-Children-RCV: ",r),r.type){case"create":t._onChildCreate(r);break;case"delete":v.log(r);break;default:t._changeChildren(r)}});t._childrenListeners.push(i)})}},{key:"_releaseListeners",value:function(){var e=this;e._childrenListeners.forEach(function(e){e.remove()}),(0,i.default)(e._childrenObjects).forEach(function(t){(0,i.default)(e._childrenObjects[t]).forEach(function(r){e._childrenObjects[t][r]._releaseListeners()})})}},{key:"resumeChildrens",value:function(e){var t=this,r=this,n=this._owner+"#"+this._childId;(0,i.default)(e).forEach(function(o){var s=e[o];(0,i.default)(s).forEach(function(e){var i=!1;r._childrenObjects.hasOwnProperty(o)||(r._childrenObjects[o]={}),s[e].value.resourceType&&!r._childrenObjects[o].hasOwnProperty(e)?(r._childrenObjects[o][e]=r._resumeHypertyResource(s[e]),i=!0):r._childrenObjects[o].hasOwnProperty(e)||(r._childrenObjects[o][e]=r._resumeChild(s[e]),v.log("[DataObject.resumeChildrens] new DataObjectChild: ",r._childrenObjects[o][e]),i=!0),i&&e>n&&(n=e,v.log("[DataObjectReporter.resumeChildrens] - resuming: ",t._childrenObjects[o][e]))})}),this._childId=Number(n.split("#")[1])}},{key:"_resumeChild",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=new f.default(t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"_resumeHypertyResource",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"pause",value:function(){throw"Not implemented"}},{key:"resume",value:function(){throw"Not implemented"}},{key:"stop",value:function(){throw"Not implemented"}},{key:"addChild",value:function(e,t,r,n){var i=this,s=void 0;return new o.default(function(o){var a=i._url+"/children/"+e,u=i._getChildInput(n);u.data=t,u.children=e,s=new f.default(u),r&&(s.identity=r),s.share(),v.log("[DataObject.addChild] added ",s),s.onChange(function(e){i._onChange(e,{path:a,childId:u.url})}),i._childrenObjects.hasOwnProperty(e)||(i._childrenObjects[e]={}),i._childrenObjects[e][u.url]=s,o(s)})}},{key:"_deleteChildrens",value:function(){var e=this,t=[];return new o.default(function(r){if(e.childrens){v.log("[DataObject.deleteChildrens]",e.childrens);var n=void 0;for(n in e.childrens){var i=void 0;for(i in e.childrens[n]){var s=e.childrens[n][i];v.log("[DataObject._deleteChildrens] child",s),s.metadata.hasOwnProperty("resourceType")&&t.push(e.childrens[n][i].delete())}}}v.log("[DataObject._deleteChildrens] promises ",t),t.length>0?o.default.all(t).then(function(){r("[DataObject._deleteChildrens] done")}):r("[DataObject._deleteChildrens] nothing to delete")})}},{key:"_getChildInput",value:function(e){var t=(0,s.default)({},e);return this._childId++,t.url=this._owner+"#"+this._childId,t.parentObject=this,t.reporter=this._owner,t.created=(new Date).toISOString(),t.runtime=this._syncher._runtimeUrl,t.p2pHandler=this._syncher._p2pHandler,t.p2pRequester=this._syncher._p2pRequester,t.schema=this._schema,t.parent=this.url,t}},{key:"addHypertyResource",value:function(e,t,r,n,i){var s=this;return new o.default(function(o){var a=void 0,u=s._url+"/children/"+e,c=s._getChildInput(i);c.children=e,s._hypertyResourceFactory.createHypertyResourceWithContent(!0,t,r,c).then(function(t){a=t,n&&(a.identity=n),a.share(),v.log("[DataObject.addHypertyResource] added ",a),a.onChange(function(e){s._onChange(e,{path:u,childId:a.childId})}),s._childrenObjects.hasOwnProperty(e)||(s._childrenObjects[e]={}),s._childrenObjects[e][a.childId]=a,o(a)})})}},{key:"onAddChild",value:function(e){this._onAddChildrenHandler=e}},{key:"_onChildCreate",value:function(e){v.log("[DataObject._onChildCreate] receivedBy "+this._owner+" : ",e);var t={from:e.to,to:e.from,type:"response",id:e.id,body:{code:100}};this._bus.postMessage(t),e.body.value.resourceType?this._onHypertyResourceAdded(e):this._onChildAdded(e)}},{key:"_onChildAdded",value:function(e){var t=(0,p.deepClone)(e.body.value);t.parentObject=this;var r=t.children,n=new f.default(t);n.identity=e.body.identity,this._childrenObjects.hasOwnProperty(r)||(this._childrenObjects[r]={}),this._childrenObjects[r][t.url]=n,e.to===this.metadata.url&&n.store(),this._hypertyEvt(e,n)}},{key:"_onHypertyResourceAdded",value:function(e){var t=e.body.value,r=void 0,n=t.children;t.parentObject=this,(r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t)).identity=e.body.identity,this._childrenObjects.hasOwnProperty(n)||(this._childrenObjects[n]={}),this._childrenObjects[n][r.childId]=r,this._hypertyEvt(e,r),e.to===this.metadata.url&&r.store()}},{key:"_hypertyEvt",value:function(e,t){var r={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(r.resource=t),this._onAddChildrenHandler&&this._onAddChildrenHandler(r)}},{key:"_onChange",value:function(e,t){if(this._metadata.lastModified=(new Date).toISOString(),this._version++,"live"===this._status){var r={type:"update",from:this._url,to:this._url+"/changes",body:{version:this._version,source:this._owner,attribute:e.field,lastModified:this._metadata.lastModified}};v.log("[DataObject - _onChange] - ",e,t,r),e.oType===l.ObjectType.OBJECT?e.cType!==l.ChangeType.REMOVE&&(r.body.value=(0,p.deepClone)(e.data)):(r.body.attributeType=e.oType,r.body.value=e.data,e.cType!==l.ChangeType.UPDATE&&(r.body.operation=e.cType)),t&&(r.to=t.path,r.body.resource=t.childId),this.data._mutual||(r.body.mutual=this._mutual),this._bus.postMessage(r)}}},{key:"_changeObject",value:function(e,t){if(this._version+1<=t.body.version){this._version=t.body.version;var r,o=t.body.attribute;r="object"===(0,n.default)(t.body.value)?(0,p.deepClone)(t.body.value):t.body.value;var i=e.findBefore(o);if(t.body.lastModified?this._metadata.lastModified=t.body.lastModified:this._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===l.ObjectType.ARRAY)if(t.body.operation===l.ChangeType.ADD){var s=i.obj,a=i.last;Array.prototype.splice.apply(s,[a,0].concat(r))}else if(t.body.operation===l.ChangeType.REMOVE){var u=i.obj,c=i.last;u.splice(c,r)}else i.obj[i.last]=r;else t.body.hasOwnProperty("value")?i.obj[i.last]=r:delete i.obj[i.last]}else v.log("UNSYNCHRONIZED VERSION: (data => "+this._version+", msg => "+t.body.version+")")}},{key:"_changeChildren",value:function(e){var t=(0,p.divideURL)(e.to).identity,r=t?t.substring(t.lastIndexOf("/")+1):void 0,n=e.body.resource,o=this._childrenObjects[r][n];v.log("Change children: ",this._owner,e,r),o?this._changeObject(o._syncObj,e):v.warn("No children found for: ",n)}},{key:"metadata",get:function(){return this._metadata}},{key:"url",get:function(){return this._url}},{key:"schema",get:function(){return this._schema}},{key:"status",get:function(){return this._status}},{key:"data",get:function(){return this._syncObj.data}},{key:"childrens",get:function(){return this._childrenObjects}}]),e}();t.default=b,e.exports=t.default},function(e,t){!function(){"use strict";if(!Object.observe&&"function"==typeof Proxy){function e(e,t,r,n,o,i){var s,a=this;function u(e,n){if(u.delay=n,!u.pause&&a.changeset.length>0){if(!e){var o=a.changeset.filter(function(e){return!r||r.indexOf(e.type)>=0});o.length>0&&t(o)}a.changeset=[]}}return u.pause=o,u.delay=i,a.get=function(e,t){return"__observer__"===t?a:"unobserve"===t?function(){return Object.unobserve(e),e}:"deliver"===t?u:e[t]},a.target=e,a.changeset=[],a.target.__observerCallbacks__||(Object.defineProperty(e,"__observerCallbacks__",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,"__observers__",{enumerable:!1,configurable:!0,writable:!1,value:[]})),a.target.__observerCallbacks__.push(t),a.target.__observers__.push(this),s=new Proxy(e,a),u(!1,i),s}e.prototype.deliver=function(){return this.get(null,"deliver")},e.prototype.set=function(e,t,r){var n=e[t],o=void 0===n?"add":"update";if(e[t]=r,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(o)>=0)){var i={object:e,name:t,type:o},s=0===this.changeset.length,a=this.deliver();"update"===o&&(i.oldValue=n),this.changeset.push(i),s&&a(!1,"number"==typeof a.delay?a.delay:10)}return!0},e.prototype.deleteProperty=function(e,t){var r=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("delete")>=0){var n={object:e,name:t,type:"delete",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.defineProperty=function(e,t,r){if(Object.defineProperty(e,t,r),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("reconfigure")>=0){var n={object:e,name:t,type:"reconfigure"},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.setPrototypeOf=function(e,t){var r=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("setPrototype")>=0){var n={object:e,name:"__proto__",type:"setPrototype",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("preventExtensions")>=0){var t={object:e,type:"preventExtensions"},r=0===this.changeset.length,n=this.deliver();this.changeset.push(t),r&&n(!1,"number"==typeof n.delay?n.delay:10)}return!0},Object.observe=function(t,r,n,o,i,s){return new e(t,r,n,o,i,s)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(r,n){t===r&&(e.__observerCallbacks__.splice(n,1),delete e.__observers__[n].callback,e.__observers__.splice(n,1))})}},Array.observe=function(e,t,r,n,o,i){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError("First argument to Array.observer is not an Array");r=r||["add","update","delete","splice"];var s=new Proxy(e,{get:function(t,n){return"unobserve"===n?function(e){return e?Object.unobserve(t,e):t.unobserve()}:"splice"===n?function(n,o){if("number"!=typeof n||"number"!=typeof o)throw new TypeError("First two arguments to Array splice are not number, number");var i=this.slice(n,n+o),s=arguments.length>1?arguments.length-2:0,u={object:e,type:"splice",index:n,removed:i,addedCount:s};if(t.splice.apply(t,arguments),r.indexOf("splice")>=0){n=0===a.__observer__.changeset.length;var c=a.__observer__.deliver();a.__observer__.changeset.push(u),n&&c(!1,"number"==typeof c.delay?c.delay:10)}}:"push"===n?function(e){return this.splice(this.length,0,e)}:"pop"===n?function(){return this.splice(this.length-1,1)}:"unshift"===n?function(e){return this.splice(0,0,e)}:"shift"===n?function(){return this.splice(0,1)}:t[n]}}),a=Object.observe(s,function(e){var n=e.filter(function(e){return"length"!==e.name&&"add"!==e.name&&(!r||r.indexOf(e.type)>=0)});n.length>0&&t(n)},r,n,o,i);return a},Array.unobserve=function(e,t){return e.unobserve(t)}}Object.deepObserve=function(e,t,r){var n=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()};function o(e,r){Object.keys(e).forEach(function(o){if(("object"===n(e[o])||"array"===n(e[o]))&&!e[o].hasOwnProperty("__observers__")){var i=r.slice(0);i.push(o),e[o]=Object.deepObserve(e[o],t,i)}})}return o(e,r=r||[]),Object.observe(e,function(e){var n=[];e.forEach(function(e){var t=(r.length>0?r.join(".")+".":"")+e.name;"update"!==e.type&&"add"!==e.type||o(e.object,r),n.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),function e(t,r,o,i,s){i instanceof Object?Object.keys(i).forEach(function(a){if(!o||o[a]!==i[a]){var u=o&&void 0!==o[a]?o[a]:void 0,c=void 0===u?"add":"update",l=s+"."+a;n.push({name:t,object:r,type:c,oldValue:u,newValue:i[a],keypath:l}),e(t,r,u,i[a],l)}}):o instanceof Object&&Object.keys(o).forEach(function(a){var u=null===i?"update":"delete",c=s+"."+a;n.push({name:t,object:r,type:u,oldValue:o[a],newValue:i,keypath:c}),e(t,r,o[a],void 0,c)})}(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(n)})}}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(r(18)),o=f(r(25)),i=f(r(3)),s=f(r(5)),a=f(r(33)),u=f(r(34)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=f(r(129)),d=(r(19),f(r(130)));function f(e){return e&&e.__esModule?e:{default:e}}var p=c.getLogger("FileHypertyResource"),h=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e,r));return n.metadata.resourceType="file",n}return(0,u.default)(t,e),(0,s.default)(t,[{key:"init",value:function(e){var t=this;if(!e)throw new Error("[FileHypertyResource.constructor] missing mandatory *file* input ");return new n.default(function(r,n){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,p.log("[FileHypertyResource.init] file: ",e),t._isSender)switch(e.type.split("/")[0]){case"image":t._getImagePreview(e).then(function(n){t._metadata.preview=n,t._content=e,r()});break;default:t._content=e,r()}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),r()})}},{key:"_getImagePreview",value:function(e){var t=new FileReader;return new n.default(function(r,n){d.default.resize(e,{width:100,height:100},function(e,n){n?(t.readAsDataURL(e),t.onload=function(e){r(e.target.result)}):(p.warn("[FileHypertyResource._getImagePreview] unable to create image preview from original image "),r(void 0))})})}},{key:"toMessage",value:function(){}},{key:"name",get:function(){return this._metadata.name}},{key:"preview",get:function(){return this._metadata.preview}}]),t}(l.default);t.default=h,e.exports=t.default},function(e,t,r){e.exports={default:r(126),__esModule:!0}},function(e,t,r){r(127);var n=r(0).Object;e.exports=function(e,t){return n.getOwnPropertyDescriptor(e,t)}},function(e,t,r){var n=r(12),o=r(46).f;r(44)("getOwnPropertyDescriptor",function(){return function(e,t){return o(n(e),t)}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(18)),o=a(r(3)),i=a(r(5)),s=a(r(124));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(){(0,o.default)(this,e)}return(0,i.default)(e,[{key:"createHypertyResource",value:function(e,t,r){var n=void 0;switch(t){case"file":n=new s.default(e,r);break;default:throw new Error("[HypertyResourceFactory.createHypertyResource] not supported type: ",t)}return n}},{key:"createHypertyResourceWithContent",value:function(e,t,r,o){var i=void 0;return new n.default(function(n){switch(t){case"file":i=new s.default(e,o);break;default:reject()}i.init(r).then(function(){return i.save()}).then(function(){n(i)})})}}]),e}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=p(r(18)),o=p(r(25)),i=p(r(3)),s=p(r(5)),a=p(r(33)),u=p(r(100)),c=p(r(34)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),d=r(19),f=p(r(118));function p(e){return e&&e.__esModule?e:{default:e}}var h=l.getLogger("HypertyResource"),y=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,r)),s=n;return s.arraybufferSizeLimit=5242880,s._isSender=e,s._localStorageURL=s._parentObject._syncher._runtimeUrl+"/storage",n}return(0,c.default)(t,e),(0,s.default)(t,[{key:"save",value:function(){var e=this;return new n.default(function(t,r){var n={from:e._owner,to:e._localStorageURL,type:"create",body:{value:(0,d.deepClone)(e._metadata)}};n.body.value.content=e._content,e._bus.postMessage(n,function(n){h.info("[HypertyResource.save] reply: ",n),e._bus.removeResponseListener(e._owner,n.id),200===n.body.code?(n.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(n.body.value)),t()):r(n.body.code+" "+n.body.desc)},!1)})}},{key:"read",value:function(e){var t=this;return h.info("[HypertyResource.read] ",this),new n.default(function(r,n){if(t.content)r(t);else{var o=t._getBestContentURL(t._metadata.contentURL);h.log("Storage:",o);var i={from:t._owner,to:o.url,type:"read",body:{resource:o.url+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(i.body.p2pRequester=t.metadata.p2pRequester,i.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(i,e).then(function(e){h.info("[HypertyResource] - get locally the resource:",e),r(t)}).catch(function(i){h.warn("[HypertyResource] - get locally the resource fail",i);var s={from:t._owner,to:o.remoteURL,type:"read",body:{resource:o.remoteURL+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(s.body.p2pRequester=t.metadata.p2pRequester,s.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(s,e).then(function(e){h.warn("[HypertyResource] - get remotely the resource",e),r(t)}).catch(function(e){h.warn("[HypertyResource] - get remotely the resource fail",e),n(e.body.code+" "+e.body.desc)})})}})}},{key:"_getBestResource",value:function(e,t){var r=this;return new n.default(function(n,o){var i=setTimeout(function(){return r._bus.removeResponseListener(r._owner,s),e.body.code=408,e.body.desc="Response timeout",o(e)},3e3),s=r._bus.postMessage(e,function(e){h.log("[HypertyResource.read] reply: ",e);var s=e.id;switch(clearTimeout(i),e.body.code){case 200:r._content=e.body.value.content,e.body.value.size<r.arraybufferSizeLimit&&r.save(),r._bus.removeResponseListener(r._owner,s),n(e);break;case 183:t(e.body.value);break;default:r._bus.removeResponseListener(r._owner,s),o(e)}},!1)})}},{key:"delete",value:function(){var e=this;h.info("[HypertyResource.delete]",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:"delete",body:{resources:e.metadata.contentURL}};return new n.default(function(r){e._bus.postMessage(t,function(e){e.body.code<300?r(!0):r(!1)})})}},{key:"_getBestContentURL",value:function(e){var t=e[0],r=t.substr(t.lastIndexOf("/")+1);return{url:this._localStorageURL,resource:r,remoteURL:t.substr(0,t.lastIndexOf("/"))}}},{key:"resourceType",get:function(){return this.metadata.resourceType}},{key:"mimetype",get:function(){return this._metadata.type}},{key:"content",get:function(){return this._content}},{key:"contentURL",get:function(){return this._metadata.contentURL}},{key:"shareable",get:function(){var e=(0,u.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"metadata",this);return e.resourceType=this.resourceType,e}}]),t}(f.default);t.default=y,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s="undefined"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),a=s&&"undefined"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),u="undefined"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,c=u||"undefined"!=typeof Uint8Array&&"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof atob,l="undefined"!=typeof FileReader||"undefined"!=typeof URL,d=function(){function e(){(0,n.default)(this,e)}return(0,o.default)(e,null,[{key:"resize",value:function(t,r,n){if("function"==typeof r&&(n=r,r={width:640,height:480}),r.width,r.height,!e.isSupported()||!t.type.match(/image.*/))return n(t,!1),!1;if(t.type.match(/image\/gif/))return n(t,!1),!1;var o=document.createElement("img");return o.onload=function(i){var s=o.width,a=o.height,c=!1;if(s>=a&&s>r.width?(a*=r.width/s,s=r.width,c=!0):a>r.height&&(s*=r.height/a,a=r.height,c=!0),c){var l=document.createElement("canvas");if(l.width=s,l.height=a,l.getContext("2d").drawImage(o,0,0,s,a),u)l.toBlob(function(e){n(e,!0)},t.type);else{var d=e._toBlob(l,t.type);n(d,!0)}}else n(t,!1)},e._loadImage(o,t),!0}},{key:"_toBlob",value:function(e,t){var r=e.toDataURL(t).split(","),n=void 0;n=r[0].indexOf("base64")>=0?atob(r[1]):decodeURIComponent(r[1]);for(var o=new ArrayBuffer(n.length),i=new Uint8Array(o),u=0;u<n.length;u+=1)i[u]=n.charCodeAt(u);var c=r[0].split(":")[1].split(";")[0],l=null;if(s)l=new Blob([a?i:o],{type:c});else{var d=new BlobBuilder;d.append(o),l=d.getBlob(c)}return l}},{key:"_loadImage",value:function(e,t,r){if("undefined"==typeof URL){var n=new FileReader;n.onload=function(t){e.src=t.target.result,r&&r()},n.readAsDataURL(t)}else e.src=URL.createObjectURL(t),r&&r()}},{key:"isSupported",value:function(){return"undefined"!=typeof HTMLCanvasElement&&c&&l}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(r(18)),o=f(r(78)),i=f(r(3)),s=f(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19),c=f(r(132)),l=f(r(133)),d=f(r(135));function f(e){return e&&e.__esModule?e:{default:e}}var p=a.getLogger("Syncher"),h=function(){function e(t,r,n){(0,i.default)(this,e);var o=this;o._owner=t,o._bus=r,o._subURL=n.runtimeURL+"/sm",o._runtimeUrl=n.runtimeURL,o._p2pHandler=n.p2pHandler,o._p2pRequester=n.p2pRequester,o._reporters={},o._observers={},o._provisionals={},r.addListener(t,function(e){if(e.from!==t)switch(p.info("[Syncher] Syncher-RCV: ",e,o),e.type){case"forward":o._onForward(e);break;case"create":o._onRemoteCreate(e);break;case"delete":o._onRemoteDelete(e);break;case"execute":o._onExecute(e)}})}return(0,s.default)(e,[{key:"create",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"no name",a=arguments[6],c=arguments[7];if(!e)throw Error("[Syncher - Create] - You need specify the data object schema");if(!t)throw Error("[Syncher - Create] -The observers should be defined");c=c||{};var l=(0,o.default)({},c);return l.p2p=i,l.store=n,l.schema=e,l.authorise=t,l.p2pHandler=this._p2pHandler,l.p2pRequester=this._p2pRequester,l.data=r?(0,u.deepClone)(r):{},l.name=0===s.length?"no name":s,l.reporter=c.hasOwnProperty("reporter")&&"boolean"!=typeof c.reporter?c.reporter:this._owner,l.resume=!1,c?(l.mutual=!c.hasOwnProperty("mutual")||c.mutual,l.name=c.hasOwnProperty("name")?c.name:l.name):l.mutual=!0,c.hasOwnProperty("reuseURL")&&(l.resource=c.reuseURL),a&&(l.identity=a),p.log("[syncher - create] - create Reporter - createInput: ",l),this._create(l)}},{key:"resumeReporters",value:function(e){return p.log("[syncher - create] - resume Reporter - criteria: ",e),(0,o.default)(e,{resume:!0}),this._resumeCreate(e)}},{key:"subscribe",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments[5],a={};return a.p2p=n,a.store=r,a.schema=e,a.resource=t,s&&(a.identity=s),a.mutual=i,p.log("[syncher - subscribe] - subscribe criteria: ",a),(0,o.default)(a,{resume:!1}),this._subscribe(a)}},{key:"resumeObservers",value:function(e){var t=e||{};return(0,o.default)(t,{resume:!0}),this._resumeSubscribe(t)}},{key:"read",value:function(e){var t=this,r={type:"read",from:t._owner,to:e};return new n.default(function(e,n){t._bus.postMessage(r,function(i){p.log("[Syncher.read] reply: ",i);var s={},a={},u=0;if(i.body.code<300)if(i.body.value.hasOwnProperty("responses"))if(0===u)a=i.body.value,++u;else{delete i.body.value.responses;var c=void 0;for(c in i.body.value)s.hasOwnProperty(c)||(s[c]={}),(0,o.default)(s[c],i.body.value[c]);++u===a.responses&&(a.childrenObjects=s,delete a.responses,t._bus.removeResponseListener(r.from,i.id),e(a))}else t._bus.removeResponseListener(r.from,i.id),e(i.body.value);else n(i.body.desc)},!1)})}},{key:"onNotification",value:function(e){this._onNotificationHandler=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"_create",value:function(e){var t=this;return new n.default(function(r,n){var i=(0,o.default)({},e),s=e.resume;i.created=(new Date).toISOString(),i.runtime=t._runtimeUrl;var a=(0,u.deepClone)(i);delete a.p2p,delete a.store,delete a.observers,delete a.identity;var l={type:"create",from:t._owner,to:t._subURL,body:{resume:s,value:a}};l.body.schema=i.schema,i.p2p&&(l.body.p2p=i.p2p),i.store&&(l.body.store=i.store),i.identity&&(l.body.identity=i.identity),p.log("[syncher._create]: ",i,l),t._bus.postMessage(l,function(o){if(p.log("[syncher - create] - create-response: ",o),200===o.body.code){i.url=o.body.resource,i.status="live",i.syncher=t,i.childrens=o.body.childrenResources;var s=t._reporters[i.url];s||(s=new c.default(i),t._reporters[i.url]=s),s.inviteObservers(e.authorise,e.p2p),r(s)}else n(o.body.desc)})})}},{key:"_resumeCreate",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i=e.resume,s={type:"create",from:r._owner,to:r._subURL,body:{resume:i}};p.log("[syncher - create]: ",e,s),e&&(s.body.value=e,e.hasOwnProperty("reporter")?s.body.value.reporter=e.reporter:s.body.value.reporter=r._owner),e.p2p&&(s.body.p2p=e.p2p),e.store&&(s.body.store=e.store),e.observers&&(s.body.authorise=e.observers),e.identity&&(s.body.identity=e.identity),p.log("[syncher._resumeCreate] - resume message: ",s),r._bus.postMessage(s,function(e){if(p.log("[syncher._resumeCreate] - create-resumed-response: ",e),200===e.body.code){var i=e.body.value;for(var s in i){var a=i[s];a.data=(0,u.deepClone)(a.data)||{},a.childrenObjects&&(a.childrenObjects=(0,u.deepClone)(a.childrenObjects)),a.mutual=!1,a.resume=!0,a.status="live",a.syncher=r,p.log("[syncher._resumeCreate] - create-resumed-dataObjectReporter",a);var l=new c.default(a);a.childrenObjects&&l.resumeChildrens(a.childrenObjects),r._reporters[a.url]=l}n(r._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_subscribe",value:function(e){var t=this;return new n.default(function(r,n){var o={type:"subscribe",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(o.body.p2p=e.p2p),e.hasOwnProperty("store")&&(o.body.store=e.store),e.hasOwnProperty("schema")&&(o.body.schema=e.schema),e.hasOwnProperty("identity")&&(o.body.identity=e.identity),e.hasOwnProperty("resource")&&(o.body.resource=e.resource)),o.body.resume=e.resume,e.hasOwnProperty("mutual")&&(o.body.mutual=e.mutual),p.log("[syncher_subscribe] - subscribe message: ",e,o),t._bus.postMessage(o,function(o){p.log("[syncher] - subscribe-response: ",o);var i=o.body.resource,s=t._provisionals[i];if(delete t._provisionals[i],s&&s._releaseListeners(),o.body.code<200)p.log("[syncher] - new DataProvisional: ",o.body.childrenResources,i),s=new d.default(t._owner,i,t._bus,o.body.childrenResources),t._provisionals[i]=s;else if(200===o.body.code){p.log("[syncher] - new Data Object Observer: ",o,t._provisionals);var a=o.body.value;a.syncher=t,a.p2p=e.p2p,a.store=e.store,a.identity=e.identity,a.resume=!1,a.mutual=e.mutual;var u=t._observers[i];u?u.sync():(u=new l.default(a),t._observers[i]=u),p.log("[syncher] - new Data Object Observer already exist: ",u),r(u),s&&s.apply(u)}else n(o.body.desc)})})}},{key:"_resumeSubscribe",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i={type:"subscribe",from:r._owner,to:r._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(i.body.p2p=e.p2p),e.hasOwnProperty("store")&&(i.body.store=e.store),e.hasOwnProperty("schema")&&(i.body.schema=e.schema),e.hasOwnProperty("identity")&&(i.body.identity=e.identity),e.hasOwnProperty("resource")&&(i.body.resource=e.url)),i.body.resume=e.resume;var s=e.mutual;e.hasOwnProperty("mutual")&&(i.body.mutual=s),p.log("[syncher] - subscribe message: ",e,i),r._bus.postMessage(i,function(e){p.log("[syncher] - subscribe-resumed-response: ",e);var i=e.body.resource,s=r._provisionals[i];if(delete r._provisionals[i],s&&s._releaseListeners(),e.body.code<200)p.log("[syncher] - resume new DataProvisional: ",e,i),s=new d.default(r._owner,i,r._bus,e.body.childrenResources),r._provisionals[i]=s;else if(200===e.body.code){var a=e.body.value;for(var c in a){var f=a[c];p.log("[syncher] - Resume Object Observer: ",e,f,r._provisionals),f.childrenObjects&&(f.childrenObjects=(0,u.deepClone)(f.childrenObjects)),f.data=(0,u.deepClone)(f.data)||{},f.resume=!0,f.syncher=r,p.log("[syncher._resumeSubscribe] - create new dataObject: ",f);var h=new l.default(f);f.childrenObjects&&h.resumeChildrens(f.childrenObjects),p.log("[syncher._resumeSubscribe] - new dataObject",h),r._observers[h.url]=h,r._provisionals[h.url]&&r._provisionals[h.url].apply(h)}n(r._observers),t._onObserversResume&&t._onObserversResume(r._observers)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_onForward",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:"_onRemoteCreate",value:function(e){var t=this,r=e.from.slice(0,-13),n=(0,u.divideURL)(r).domain,o={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})}};t._onNotificationHandler&&(p.info("[Syncher] NOTIFICATION-EVENT: ",o),t._onNotificationHandler(o))}},{key:"_onRemoteDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(p.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:"_onExecute",value:function(e){var t=this,r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+"/registry/"||e.from===t._runtimeUrl+"/registry")&&e.body&&e.body.method&&"close"===e.body.method&&t._onClose){var n={type:"close",ack:function(e){e&&(r.body.code=e),t._bus.postMessage(r)}};p.info("[Syncher] Close-EVENT: ",n),t._onClose(n)}else t._bus.postMessage(r)}},{key:"onReportersResume",value:function(e){this._onReportersResume=e}},{key:"onObserversResume",value:function(e){this._onObserversResume=e}},{key:"owner",get:function(){return this._owner}},{key:"reporters",get:function(){return this._reporters}},{key:"observers",get:function(){return this._observers}}]),e}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(42)),o=y(r(58)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=y(r(122)),h=r(19);function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger("DataObjectReporter"),b=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._subscriptions={},n._syncObj.observe(function(e){v.log("[Syncher.DataObjectReporter] "+n.url+" publish change: ",e),n._onChange(e)}),n._allocateListeners(),n.invitations=[],n._childrenSizeThreshold=5e4,r}return(0,d.default)(t,e),(0,u.default)(t,[{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(v.log("[Syncher.DataObjectReporter] listener "+e._url+" Received: ",t),t.type){case"response":e._onResponse(t);break;case"read":e._onRead(t);break;case"execute":e._onExecute(t);break;case"create":e._onChildCreate(t)}})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_releaseListeners",this).call(this),this._objectListener.remove()}},{key:"inviteObservers",value:function(e,t){var r=this,n=e;n.length>0&&(v.log("[Syncher.DataObjectReporter] InviteObservers ",n,r._metadata),n.forEach(function(e){var n=new i.default(function(n,o){var i={type:"create",from:r._syncher._owner,to:r._syncher._subURL,body:{resume:!1,resource:r._url,schema:r._schema,value:r._metadata,authorise:[e]}};t&&(i.body.p2p=t),r.data.mutual||(i.body.mutual=r.data.mutual),r._bus.postMessage(i,function(t){v.log("[Syncher.DataObjectReporter] Invitation reply ",t);var r={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:"Unknown"};r.code<300?n(r):r.code>=300&&o(r)})});r.invitations.push(n)}))}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(t){v.log(t);var r={type:"delete",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(r,function(t){v.log("DataObjectReporter-DELETE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:"onSubscription",value:function(e){this._onSubscriptionHandler=e}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"onRead",value:function(e){this._onReadHandler=e}},{key:"onExecute",value:function(e){this._onExecuteHandler=e}},{key:"_onForward",value:function(e){switch(v.log("DataObjectReporter-RCV: ",e),e.body.type){case"subscribe":this._onSubscribe(e);break;case"unsubscribe":this._onUnSubscribe(e)}}},{key:"_onSubscribe",value:function(e){var t=this,r=e.body.from,n=(0,h.divideURL)(r),o=n.domain,i=!0;e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i=!1),v.log("[DataObjectReporter._onSubscribe]",e,o,n);var s={type:e.body.type,url:r,domain:o,identity:e.body.identity,nutual:i,accept:function(){var n={url:r,status:"live"};t._subscriptions[r]=n,t.metadata.subscriptions&&t.metadata.subscriptions.push(n.url);var o=(0,h.deepClone)(t._metadata);o.data=(0,h.deepClone)(t.data),o.version=t._version;var i={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:o}};return e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i.body.mutual=e.body.mutual,t.data.mutual=!1),t._bus.postMessage(i),n},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:403,desc:r}})}};t._onSubscriptionHandler&&(v.log("SUBSCRIPTION-EVENT: ",s),t._onSubscriptionHandler(s))}},{key:"_onUnSubscribe",value:function(e){var t=e.body.from,r=(0,h.divideURL)(t),n=r.domain;v.log("[DataObjectReporter._onUnSubscribe]",e,n,r),delete this._subscriptions[t],delete this.invitations[t];var o={type:e.body.type,url:t,domain:n,identity:e.body.identity};this._onSubscriptionHandler&&(v.log("UN-SUBSCRIPTION-EVENT: ",o),this._onSubscriptionHandler(o))}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.from,code:e.body.code};this._onResponseHandler&&(v.log("RESPONSE-EVENT: ",t),this._onResponseHandler(t))}},{key:"_onRead",value:function(e){var t=this,r=(0,o.default)(t.childrensJSON).length>t._childrenSizeThreshold,i={type:e.type,url:e.from,accept:function(){r?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}},s=[];t.metadata.subscriptions?s=t.metadata.subscriptions:t._subscriptions&&(s=(0,n.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=s.indexOf(e.from)?r?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(v.log("READ-EVENT: ",i),t._onReadHandler(i))}},{key:"_syncReply",value:function(e){var t=(0,h.deepClone)(this.metadata);t.data=(0,h.deepClone)(this.data),t.childrenObjects=(0,h.deepClone)(this.childrensJSON),t.version=this._version;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:t}};this._bus.postMessage(r)}},{key:"_syncReplyForLargeData",value:function(e){var t=this,r=(0,h.deepClone)(t.metadata);r.data=(0,h.deepClone)(t.data),r.version=t._version,delete r.childrenObjects;var n=void 0,i=[],s={};for(n in t._childrenObjects){var a=void 0;for(a in s[n]={},t._childrenObjects[n])(0,o.default)(s).length>t._childrenSizeThreshold&&(i.push(s),(s={})[n]={}),s[n][a]={},s[n][a].value=t._childrenObjects[n][a].metadata,s[n][a].identity=t._childrenObjects[n][a].identity}i.push(s),r.responses=i.length+1;var u={id:e.id,type:"response",from:e.to,to:e.from,body:{code:100,value:r}};t._bus.postMessage(u),i.forEach(function(e){var n=(0,h.deepClone)(u);n.body.value=e,n.body.value.responses=r.responses,setTimeout(function(){t._bus.postMessage(n)},50)})}},{key:"_onExecute",value:function(e){var t=this;if(!e.body.method)throw e;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}},n={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(r)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}};t._onExecuteHandler&&(v.log("[DataObjectReporter] EXECUTE-EVENT: ",n),t._onExecuteHandler(n))}},{key:"subscriptions",get:function(){return this._subscriptions}},{key:"childrensJSON",get:function(){var e={},t=void 0;for(t in this._childrenObjects){var r=void 0;for(r in e[t]={},this._childrenObjects[t])e[t][r]={},e[t][r].value=this._childrenObjects[t][r].metadata,e[t][r].identity=this._childrenObjects[t][r].identity}return e}}]),t}(p.default);t.default=b,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(42)),o=y(r(78)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=r(19),h=y(r(122));function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger("DataObjectObserver"),b="start",_="exact",m=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._version=e.version,n._filters={},n._syncObj.observe(function(e){n._onFilter(e)}),n._allocateListeners(),r}return(0,d.default)(t,e),(0,u.default)(t,[{key:"sync",value:function(){var e=this;return v.info("[DataObjectObserver_sync] synchronising "),new i.default(function(t,r){e._syncher.read(e._metadata.url).then(function(r){v.info("[DataObjectObserver_sync] value to sync: ",r),(0,o.default)(e.data,(0,p.deepClone)(r.data)),e._version=r.version,e._metadata.lastModified=r.lastModified,r.childrenObjects?(e.resumeChildrens(r.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){v.info("[DataObjectObserver_sync] sync failed: ",e),t(!1)})})}},{key:"_storeChildrens",value:function(){var e=this,t={};(0,n.default)(e._childrenObjects).forEach(function(r){var o=e._childrenObjects[r];t[r]={},(0,n.default)(o).forEach(function(e){t[r][e]={},t[r][e].value=o[e].metadata,t[r][e].identity=o[e].identity})});var r={from:e._owner,to:e._syncher._subURL,type:"create",body:{resource:e._url,attribute:"childrenObjects",value:t}};e._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+"/changes",function(t){"update"===t.type&&(v.log("DataObjectObserver-"+e._url+"-RCV: ",t),e._changeObject(e._syncObj,t))})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_releaseListeners",this).call(this),this._changeListener.remove()}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:"unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){v.log("DataObjectObserver-UNSUBSCRIBE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:"onChange",value:function(e,t){var r=e,n={type:_,callback:t},o=e.indexOf("*");o===e.length-1&&(0===o?n.type="any":(n.type=b,r=e.substr(0,e.length-1))),this._filters[r]=n}},{key:"_onFilter",value:function(e){var t=this;(0,n.default)(t._filters).forEach(function(r){var n=t._filters[r];"any"===n.type?n.callback(e):n.type===b?0===e.field.indexOf(r)&&n.callback(e):n.type===_&&e.field===r&&n.callback(e)})}},{key:"onDisconnected",value:function(e){var t=this;return new i.default(function(r,n){t._subscribeRegistration().then(function(){t._onDisconnected=e,r()}).catch(function(e){return n(e)})})}},{key:"_subscribeRegistration",value:function(){var e=this,t={type:"subscribe",from:this._owner,to:this._syncher._runtimeUrl+"/subscriptions",body:{resources:[this._url+"/registration"]}};return new i.default(function(r,n){e._bus.postMessage(t,function(t){v.log("[DataObjectObserver._subscribeRegistration] "+e._url+" rcved reply ",t),200===t.body.code?(e._generateListener(e._url+"/registration"),r()):(v.error("Error subscribing registration status for ",e._url),n("Error subscribing registration status for "+e._url))})})}},{key:"_generateListener",value:function(e){var t=this;t._bus.addListener(e,function(e){v.log("[DataObjectObserver.registrationNotification] "+t._url+": ",e),e.body.value&&"disconnected"===e.body.value&&t._onDisconnected&&(v.log("[DataObjectObserver] "+t._url+": was disconnected ",e),t._onDisconnected())})}},{key:"execute",value:function(e,t){var r=this,n=this;return new i.default(function(o,i){var s={type:"execute",from:r._owner,to:n._url,body:{method:e,params:t}};n._bus.postMessage(s,function(t){v.log("[DataObjectObserver.execute] "+n._url+" rcved reply ",t),200===t.body.code?o():(v.warn("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"),i("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"))})})}}]),t}(h.default);t.default=m,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(42)),o=c(r(18)),i=c(r(3)),s=c(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=a.getLogger("RegistrationStatus"),d=function(){function e(t,r,n,o){(0,i.default)(this,e),this._registryObjectURL=t,this._runtimeURL=r,this._domain=(0,u.divideURL)(r).domain,this._discoveredObjectURL=n,this._messageBus=o,this._subscriptionSet=!1,this._subscribers={live:{},disconnected:{}}}return(0,s.default)(e,[{key:"onLive",value:function(e,t){var r=this;return new o.default(function(n,o){r._subscriptionSet?(r._subscribers.live[e]=t,n()):r._subscribe().then(function(){r._subscribers.live[e]=t,n()}).catch(function(e){return o(e)})})}},{key:"onDisconnected",value:function(e,t){var r=this;return new o.default(function(n,o){r._subscriptionSet?(r._subscribers.disconnected[e]=t,n()):r._subscribe().then(function(){r._subscribers.disconnected[e]=t,n()}).catch(function(e){return o(e)})})}},{key:"_subscribe",value:function(){var e=this,t={type:"subscribe",from:this._discoveredObjectURL,to:this._runtimeURL+"/subscriptions",body:{resources:[this._registryObjectURL+"/registration"]}};return new o.default(function(r,n){e._messageBus.postMessage(t,function(t){l.log("[DiscoveredObject.subscribe] "+e._registryObjectURL+" rcved reply ",t),200===t.body.code?(e._generateListener(e._registryObjectURL+"/registration"),e._subscriptionSet=!0,r()):(l.error("Error subscribing ",e._registryObjectURL),n("Error subscribing "+e._registryObjectURL))})})}},{key:"_generateListener",value:function(e){var t=this;this._messageBus.addListener(e,function(e){l.log("[DiscoveredObject.notification] "+t._registryObjectURL+": ",e),t._processNotification(e)})}},{key:"_processNotification",value:function(e){var t=this,r=e.body.value;setTimeout(function(){(0,n.default)(t._subscribers[r]).forEach(function(e){return t._subscribers[r][e]()})},5e3)}},{key:"_unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:this._discoveredObjectURL,to:this._runtimeURL+"/subscriptions",body:{resource:this._registryObjectURL+"/registration"}};return new o.default(function(r,n){e._messageBus.postMessage(t,function(t){l.log("[DiscoveredObject.unsubscribe] "+e._registryObjectURL+" rcved reply ",t),200===t.body.code?r():(l.error("Error unsubscribing ",e._registryObjectURL),n("Error unsubscribing "+e._registryObjectURL))})})}},{key:"unsubscribeLive",value:function(e){var t=this;return new o.default(function(r,n){e in t._subscribers.live&&delete t._subscribers.live[e],t._areSubscriptionsEmpty()?t._unsubscribe().then(function(){return r()}).catch(function(e){return n(e)}):r()})}},{key:"unsubscribeDisconnected",value:function(e){var t=this;return new o.default(function(r,n){e in t._subscribers.disconnected?(delete t._subscribers.disconnected[e],t._areSubscriptionsEmpty()?t._unsubscribe().then(function(){return r()}).catch(function(e){return n(e)}):r()):n(e+" doesn't subscribe onDisconnected for "+t._registryObjectURL)})}},{key:"_areSubscriptionsEmpty",value:function(){return 0===(0,n.default)(this._subscribers.live).length&&0===(0,n.default)(this._subscribers.disconnected).length}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)).getLogger("DataProvisional"),a=function(){function e(t,r,o,i){(0,n.default)(this,e),this._owner=t,this._url=r,this._bus=o,this._children=i,this._changes=[],this._allocateListeners()}return(0,o.default)(e,[{key:"_allocateListeners",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){s.log("DataProvisional-"+e._url+"-RCV: ",t),e._changes.push(t)})}},{key:"_releaseListeners",value:function(){this._listener.remove()}},{key:"apply",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:"children",get:function(){return this._children}}]),e}();t.default=a,e.exports=t.default},,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(18)),o=c(r(3)),i=c(r(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=r(19),u=c(r(139));function c(e){return e&&e.__esModule?e:{default:e}}var l=s.getLogger("Discovery"),d=function(){function e(t,r,n){(0,o.default)(this,e),this.messageBus=n,this.runtimeURL=r,this.domain=(0,a.divideURL)(t).domain,this.discoveryURL=t}return(0,i.default)(e,[{key:"_isLegacyUser",value:function(e){return!(!e.includes(":")||e.includes("user://"))}},{key:"discoverHypertiesPerUserProfileData",value:function(e,t,r){var o=this,i=[],s={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/hyperty/userprofile/"+e}};return(t||r)&&(s.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){o._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):o.messageBus.postMessage(s,function(r){200===r.body.code?(r.body.value.map(function(e){e.hypertyID!=o.discoveryURL&&i.push(e)}),0===i.length?t([]):(l.log("[Discovery.discoverHypertiesPerUserProfileData] Reply log: ",i),t(i))):(l.warn("[Discovery.discoverHypertiesPerUserProfileData] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverHypertiesPerUserProfileDataDO",value:function(e,t,r){var o=this,i=arguments;return new n.default(function(e,t){o.discoverHypertiesPerUserProfileData.apply(o,i).then(function(t){e(o._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerUserProfileData",value:function(e,t,r){var o=this,i={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/dataObject/userprofile/"+e}};return(t||r)&&(i.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){o._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):o.messageBus.postMessage(i,function(r){200===r.body.code?(l.log("Reply log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerUserProfileData] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerUserProfileDataDO",value:function(e,t,r){var o=this,i=arguments;return new n.default(function(e,t){o.discoverDataObjectsPerUserProfileData.apply(o,i).then(function(t){return e(o._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHypertiesPerGUID",value:function(e,t,r){var o=this,i=[],s={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/hyperty/guid/"+e}};return(t||r)&&(s.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){o.messageBus.postMessage(s,function(n){200===n.body.code?(n.body.value.map(function(e){e.hypertyID!=o.discoveryURL&&i.push(e)}),0===i.length?r("No Hyperty was found"):(l.log("Reply log: ",i),t(i))):(l.warn("[Discovery.discoverHypertiesPerGUID] Error Reply for "+e+" Reason: ",n.body.description),t([]))})})}},{key:"discoverHypertiesPerGUIDDO",value:function(e,t,r){var o=this,i=arguments;return new n.default(function(e,t){o.discoverHypertiesPerGUID.apply(o,i).then(function(t){e(o._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerGUID",value:function(e,t,r){var o=this,i={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/dataObject/guid/"+e}};return(t||r)&&(i.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){o.messageBus.postMessage(i,function(r){200===r.body.code?(l.log("Reply log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerGUID] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerGUIDDO",value:function(e,t,r){var o=this,i=arguments;return new n.default(function(e,t){o.discoverDataObjectsPerGUID.apply(o,i).then(function(t){return e(o._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHyperties",value:function(e,t,r,o){var i,s=this,a=[];i=o||s.domain;var u={type:"read",from:s.discoveryURL,to:s.runtimeURL+"/discovery/",body:{resource:"/hyperty/user/"+e}};return u.body.criteria=t||r?{resources:r,dataSchemes:t,domain:i}:{domain:i},new n.default(function(t,r){s._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):s.messageBus.postMessage(u,function(r){200===r.body.code||500===r.body.code?(r.body.value.map(function(e){e.hypertyID!=s.discoveryURL&&a.push(e)}),l.log("[Discovery.discoverHyperties] Reply : ",a),t(a)):(l.warn("[Discovery.discoverHyperties] Error Reply for "+e+" Reason: ",r.body.description),t(a))})})}},{key:"discoverHypertiesDO",value:function(e,t,r,o){var i=this,s=arguments;return new n.default(function(e,t){i.discoverHyperties.apply(i,s).then(function(t){e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjects",value:function(e,t,r,o){var i,s=this;i=o||s.domain;var a={type:"read",from:s.discoveryURL,to:s.runtimeURL+"/discovery/",body:{resource:"/dataObject/user/"+e}};return a.body.criteria=t||r?{resources:r,dataSchemes:t,domain:i}:{domain:i},new n.default(function(t,r){s.messageBus.postMessage(a,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjects] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsDO",value:function(e,t,r,o){var i=this,s=arguments;return new n.default(function(e,t){i.discoverDataObjects.apply(i,s).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHypertyPerURL",value:function(e,t){var r,o=this;r=t||o.domain;var i={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/hyperty/url/"+e,criteria:{domain:r}}};return new n.default(function(t,r){o.messageBus.postMessage(i,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverHypertyPerURL] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverHypertyPerURLDO",value:function(e,t){var r=this,o=arguments;return new n.default(function(e,t){r.discoverHypertyPerURL.apply(r,o).then(function(t){return e(new u.default(t,r.runtimeURL,r.discoveryURL,r.messageBus,r))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectPerURL",value:function(e,t){var r,o=this;r=t||o.domain;var i={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/dataObject/url/"+e,criteria:{domain:r}}};return new n.default(function(t,r){o.messageBus.postMessage(i,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectPerURL] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectPerURLDO",value:function(e,t){var r=this,o=arguments;return new n.default(function(e,t){r.discoverDataObjectPerURL.apply(r,o).then(function(t){return e(new u.default(t,r.runtimeURL,r.discoveryURL,r.messageBus,r))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerName",value:function(e,t,r,o){var i,s=this;i=o||s.domain;var a={type:"read",from:s.discoveryURL,to:s.runtimeURL+"/discovery/",body:{resource:"/dataObject/name/"+e}};return a.body.criteria=t||r?{resources:r,dataSchemes:t,domain:i}:{domain:i},new n.default(function(t,r){s.messageBus.postMessage(a,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerName] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerNameDO",value:function(e,t,r,o){var i=this,s=arguments;return new n.default(function(e,t){i.discoverDataObjectsPerName.apply(i,s).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerReporter",value:function(e,t,r,o){var i,s=this;i=o||s.domain;var a={type:"read",from:s.discoveryURL,to:s.runtimeURL+"/discovery/",body:{resource:"/dataObject/reporter/"+e}};return a.body.criteria=t||r?{resources:r,dataSchemes:t,domain:i}:{domain:i},new n.default(function(t,r){s.messageBus.postMessage(a,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerName] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerReporterDO",value:function(e,t,r,o){var i=this,s=arguments;return new n.default(function(e,t){i.discoverDataObjectsPerReporter.apply(i,s).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"_convertToDiscoveredObject",value:function(e){var t=this;return e.map(function(e){return new u.default(e,t.runtimeURL,t.discoveryURL,t.messageBus,t)})}},{key:"discoverDataObject",value:function(e,t,r,o){var i,s=this;i=o||s.domain;var a={type:"read",from:s.discoveryURL,to:"domain://registry."+i,body:{resource:e,criteria:{resources:r,dataSchemes:t}}};return new n.default(function(t,r){s.messageBus.postMessage(a,function(r){if(l.log("[Discovery]",r),r.body.code>299)return l.warn("[Discovery.discoverDataObject] Error Reply for "+e+" Reason: ",r.body.description),t([]);var n=r.body.value;t(n||[])})})}},{key:"discoverHyperty",value:function(e,t,r,o){var i,s=this,u=(0,a.convertToUserURL)(e);return i=o||s.domain,new n.default(function(n,a){if(l.log("[Discovery.discoverHyperty] ACTIVE DOMAIN -> ",i,"user->",e,"schema->",t,"resources->",r,"domain->",o),e.includes(":")&&!e.includes("user://"))return l.log("[Discovery.discoverHyperty] "+e+" is legacy domain"),n({userID:e,hypertyID:e,schema:t,resources:r});var c={type:"read",from:s.discoveryURL,to:"domain://registry."+i,body:{resource:u,criteria:{resources:r,dataSchemes:t}}};l.info("[Discovery] msg to send->",c),s.messageBus.postMessage(c,function(e){l.info("[Discovery] ON discoverHyperty->",e);var t=e.body.value;t?n(t):a("No Hyperty was found")})})}},{key:"discoverHypertyPerUser",value:function(e,t){var r=this,o=void 0;return new n.default(function(n,i){if(e.includes(":")&&!e.includes("user://"))return l.log("[Discovery.discoverHyperty] "+e+"is legacy domain"),n({id:e,hypertyURL:e,descriptor:"unknown"});o=t||r.domain;var s="user://"+e.substring(e.indexOf("@")+1,e.length)+"/"+e.substring(0,e.indexOf("@")),a={type:"read",from:r.discoveryURL,to:"domain://registry."+o,body:{resource:s}};l.info("[Discovery] Message: ",a,o,s),r.messageBus.postMessage(a,function(t){l.info("[Discovery] message reply",t);var r=void 0,o=void 0,s=void 0,a=t.body.value;for(r in a)if(void 0!==a[r].lastModified)if(void 0===o)o=new Date(a[r].lastModified),s=r;else{var u=new Date(a[r].lastModified);o.getTime()<u.getTime()&&(o=u,s=r)}l.info("[Discovery] Last Hyperty: ",s,o);var c=s;if(void 0===c)return i("User Hyperty not found");var d={id:e,descriptor:a[c].descriptor,hypertyURL:c};l.info("[Discovery] ===> hypertyDiscovery messageBundle: ",d),n(d)})})}},{key:"discoverHypertiesPerUser",value:function(e,t){var r=this,o=void 0;return l.log("on Function->",e),new n.default(function(n,i){if(e.includes(":")&&!e.includes("user://")){l.log("[Discovery.discoverHyperty] is legacy domain");var s={userID:e,hypertyID:e,schema:schema,resources:resources};return n(s)}o=t||r.domain;var a="user://"+e.substring(e.indexOf("@")+1,e.length)+"/"+e.substring(0,e.indexOf("@")),u={type:"read",from:r.discoveryURL,to:"domain://registry."+o,body:{resource:a}};l.log("[Discovery] Message discoverHypertiesPerUser: ",u,o,a),r.messageBus.postMessage(u,function(e){l.info("[Discovery] discoverHypertiesPerUser reply",e);var t=e.body.value;if(!t)return i("User Hyperty not found");n(t)})})}},{key:"resumeDiscoveries",value:function(){var e=this;return l.log("[Discovery] resumeDiscoveries"),new n.default(function(t,r){var o={type:"read",from:e.discoveryURL,to:e.runtimeURL+"/subscriptions",body:{resource:e.discoveryURL}};e.messageBus.postMessage(o,function(r){l.log("[Discovery.resumeDiscoveries] reply: ",r);var o=[];200===r.body.code?(r.body.value.forEach(function(t){var r=t.split("/registration")[0];l.log("[Discovery.resumeDiscoveries] adding listener to: ",r),r.includes("hyperty://")?o.push(e.discoverHypertyPerURLDO(r)):o.push(e.discoverDataObjectPerURLDO(r))}),n.default.all(o).then(function(e){t(e)})):t([])})})}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=u(r(25)),o=u(r(3)),i=u(r(33)),s=u(r(5)),a=u(r(34));function u(e){return e&&e.__esModule?e:{default:e}}r(19);var c=function(e){function t(e,r,s,a,u){(0,o.default)(this,t);var c=(0,i.default)(this,(t.__proto__||(0,n.default)(t)).call(this,e.hypertyID||e.url,r,s,a));return c._data=e,c._discovery=u,c}return(0,a.default)(t,e),(0,s.default)(t,[{key:"data",get:function(){return this._data}}]),(0,s.default)(t,[{key:"check",value:function(){var e=this,t={body:{}};e._discoveredObjectURL.startsWith("hyperty://")?e._discovery.discoverHypertyPerURL(e._discoveredObjectURL).then(function(r){t.body.status=r.status,e._processNotification(t)}):e._discovery.discoverDataObjectsPerURL(e._discoveredObjectURL).then(function(r){t.body.status=r.status,e._processNotification(t)})}}]),t}(u(r(134)).default);t.default=c,e.exports=t.default},,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(18)),o=a(r(3)),i=a(r(5)),s=r(19);function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(t,r,n){(0,o.default)(this,e),this.messageBus=n,this.domain=(0,s.divideURL)(t).domain,this.owner=t,this.runtimeURL=r}return(0,i.default)(e,[{key:"discoverUserRegistered",value:function(e,t){var r=this;return new n.default(function(n,o){var i,s=e||".",a={type:"read",from:i=t||r.owner,to:r.runtimeURL+"/registry/",body:{resource:s,criteria:i}};r.messageBus.postMessage(a,function(e){var t=e.body.resource;t&&200===e.body.code?n(t):o("code: "+e.body.code+" No user was found")})})}},{key:"discoverIdentityPerIdP",value:function(e){var t=this;return new n.default(function(r,n){var o={type:"read",from:this.owner,to:t.runtimeURL+"/idm",body:{resource:e,criteria:"idp"}};t.messageBus.postMessage(o,function(e){200===e.body.code?r(e.body.value):n(e.body.code+" "+e.body.desc)})})}}]),e}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(18)),o=c(r(58)),i=c(r(3)),s=c(r(5)),a=(r(150),c(r(134))),u=c(r(172));function c(e){return e&&e.__esModule?e:{default:e}}var l=function(){function e(t,r,n,o,s,a){if((0,i.default)(this,e),!t)throw Error("Syncher is a necessary dependecy");if(!r)throw Error("Discover is a necessary dependecy");if(!n)throw Error("Domain is a necessary dependecy");if(!o)throw Error("Search is a necessary dependecy");this._syncher=t,this.discovery=r,this.search=o,this.myIdentity=s,this.controllerMode="reporter",this.child_cseq=0,this.domain=n,this._manager=a;var c=t.owner;this._objectDescURL="hyperty-catalogue://catalogue."+n+"/.well-known/dataschema/Communication",this._invitationsHandler=new u.default(c)}return(0,s.default)(e,[{key:"_setOnAddChildListener",value:function(e){var t=this;e.onAddChild(function(e){t.child_cseq+=1,console.info("[ChatManager.ChatController._setOnAddChildListener] new Child received: ",e),t._onMessage&&t._onMessage(e)})}},{key:"_onSubscribe",value:function(e){var t=this._dataObjectReporter;e.accept(),console.log("[ChatManager.ChatController.onSubscribe] event",e,t.url),console.log("[ChatManager.ChatController.onSubscribe] New user has subscribe this object: ",t.data,e.identity);var r=JSON.parse((0,o.default)(e.identity));r.hasOwnProperty("assertion")&&delete r.assertion;var n={hypertyURL:e.url,domain:e.domain,identity:r},i=e.identity.userProfile.userURL;console.log("[ChatManager.ChatController.onSubscribe]  new participant",n),e.identity.legacy&&(n.legacy=e.identity.legacy),t.data.participants[i]=n,console.log("[ChatManager.ChatController.onSubscribe] communicationObject OBJ chatcontroller",t.data.participants),console.log("[ChatManager.ChatController.onSubscribe - onSubscription] ",n),this._onUserAdded&&this._onUserAdded(n)}},{key:"_onUnsubscribe",value:function(e){var t=this._dataObjectReporter;console.log("[ChatManager.ChatController.onUnsubscribe] event",e,t.url);var r=e.identity.userProfile;console.log("[ChatManager.ChatController.onUnsubscribe]  participant left",r),e.identity.legacy&&(r.legacy=e.identity.legacy),delete t.data.participants[r.userURL],console.log("[ChatManager.ChatController.onUnsubscribe - this._onUserRemoved] ",this.onUserRemoved),this._onUserRemoved&&this._onUserRemoved(r)}},{key:"sendFile",value:function(e){var t=this,r="reporter"===t.controllerMode?t.dataObjectReporter:t.dataObjectObserver;return new n.default(function(n,o){var i={userProfile:t.myIdentity};r.addHypertyResource("resources","file",e,i).then(function(e){var o={value:e,identity:{userProfile:t.myIdentity},resource:e},i=new a.default(r.url,t._manager._runtimeURL,t._manager._hypertyURL,t._manager._bus);!function e(t,r,o,i){var s=i;t.sharingStatus.then(n(o)).catch(function(n){console.log("[ChatManager.ChatController.sendFile] share failed: ",n),s.onLive(r,function(){s.unsubscribeLive(r),t.share(!0),e(t,r,o,s)})})}(e,t._manager._hypertyURL,o,i)})}).catch(function(e){console.error("Reason:",e),reject(e)})}},{key:"send",value:function(e,t){var r=this,o="reporter"===r.controllerMode?r.dataObjectReporter:r.dataObjectObserver;return new n.default(function(n,i){r.child_cseq+=1;var s={type:"chat",content:e},u=t||{userProfile:r.myIdentity};o.addChild("resources",s,u).then(function(e){console.log("[ChatManager.ChatController][addChild - Chat Message]: ",e);var t={childId:e._childId,from:e._owner,value:e.data,type:"create",identity:u},i=new a.default(o.url,r._manager._runtimeURL,r._manager._hypertyURL,r._manager._bus);!function e(t,r,o,i){var s=i;t.sharingStatus.then(n(o)).catch(function(n){s.onLive(r,function(){s.unsubscribeLive(r),t.share(!0),e(t,r,o,s)})})}(e,r._manager._hypertyURL,t,i)}).catch(function(e){console.error("Reason:",e),i(e)})})}},{key:"onChange",value:function(e){this._onChange=e}},{key:"onMessage",value:function(e){this._onMessage=e}},{key:"onUserAdded",value:function(e){this._onUserAdded=e}},{key:"onUserRemoved",value:function(e){this._onUserRemoved=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"onResponse",value:function(e){this._onResponse=e}},{key:"addUser",value:function(e){var t=this,r=function(e){return console.log("Element:",e.length),0!==e.length};return new n.default(function(o,i){if(0===e.filter(r).length)return i("Don't have users to invite");console.info("[ChatManager.ChatController.addUsers ]: ",e);var s=[],a=[],u={};e.forEach(function(e){var r=t.discovery.discoverHypertiesDO(e.user,["comm"],["chat"],e.domain);s.push(r)}),n.default.all(s).then(function(e){console.log("[ChatManager.ChatController.addUsers] Users Discovery Results->",e);var r=[];e.forEach(function(e){e.forEach(function(e){"live"===e.data.status?(r.push(e.data.hypertyID),u[e.data.hypertyID]=e):a.length<5&&a.push(e)})}),console.info("[ChatManager.ChatController]------------------------ Syncher Create ---------------------- \n"),console.info("[ChatManager.ChatController]Selected Hyperties: !!! ",r),console.info("Have "+r.length+" users;");var n="reporter"===t.controllerMode?t.dataObjectReporter:t.dataObjectObserver;a.length>0&&t._invitationsHandler.inviteDisconnectedHyperties(a,n),n.inviteObservers(r),n.invitations.length>0&&t._invitationsHandler.processInvitations(u,n)}).then(function(){console.info("[ChatManager.ChatController]Are invited with success "+e.length+" users;"),o(!0)}).catch(function(e){console.error("An error occurred when trying to invite users;\n",e),i(e)})})}},{key:"addUserReq",value:function(e){var t=this,r=function(e){return console.log("Element:",e.length),0!==e.length};return new n.default(function(n,o){return 0===e.filter(r).length?o("[ChatManager.ChatController.addUserReq] Don't have users to add"):"observer"===!t.controllerMode?o("[ChatManager.ChatController.addUserReq] only allowed to Chat Observer"):void 0})}},{key:"onInvitationResponse",value:function(e){this._onInvitationResponse=e,this._invitationsHandler.invitationResponse=e}},{key:"removeUser",value:function(e){console.log("[ChatManager.ChatController]Not yet implemented: ",e)}},{key:"close",value:function(){var e=this;return new n.default(function(t,r){if("reporter"===e.controllerMode)e._invitationsHandler.cleanInvitations(e.dataObjectReporter).then(function(){try{delete e._manager._reportersControllers[e.dataObjectReporter.url],e.dataObjectReporter.delete(),t(!0),e._onClose&&e._onClose({code:200,desc:"deleted",url:e.dataObjectReporter.url})}catch(e){console.error(e),r(!1)}});else try{delete e._manager._observersControllers[e.dataObjectObserver.url],e.dataObjectObserver.unsubscribe(),t(!0)}catch(e){console.error(e),r(!1)}})}},{key:"invitationsHandler",get:function(){return this._invitationsHandler}},{key:"url",get:function(){return"reporter"===this.controllerMode?this.dataObjectReporter.url:this.dataObjectObserver.url}},{key:"dataObjectReporter",set:function(e){if(!e)throw new Error("[ChatController] The data object reporter is necessary parameter ");var t=this;t.controllerMode="reporter",e.onSubscription(function(e){switch(e.type){case"subscribe":t._onSubscribe(e);break;case"unsubscribe":t._onUnsubscribe(e)}}),t._setOnAddChildListener(e),e.onRead(function(e){e.accept()}),e.onExecute(function(e){switch(e.method){case"addUser":t.addUser(e.params[0]).then(function(){e.accept()}).catch(function(t){console.error("Reason:",t),e.reject(t)});break;case"removeUser":t.removeUser(e.params).then(function(){e.accept()}).catch(function(t){console.error("Reason:",t),e.reject(t)});break;default:e.reject("[ChatController.onExecute] Chat method execution not accepted by Reporter")}}),t._dataObjectReporter=e},get:function(){return this._dataObjectReporter}},{key:"messages",get:function(){return"reporter"===this.controllerMode?this._dataObjectReporter._childrenObjects.resources:this._dataObjectObserver._childrenObjects.resources}},{key:"dataObjectObserver",set:function(e){var t=this;t.controllerMode="observer",t._dataObjectObserver=e,e.onChange("*",function(e){if(console.info("[ChatManager.ChatController]Observer - onChange",e),e.field.includes("participants"))switch(e.cType){case"add":t._onUserAdded&&t._onUserAdded(e);break;case"remove":t._onUserRemoved&&t._onUserRemoved(e)}t._onChange&&t._onChange(e)}),t._setOnAddChildListener(e)},get:function(){return this._dataObjectObserver}},{key:"dataObject",get:function(){return"reporter"===this.controllerMode?this.dataObjectReporter:this.dataObjectObserver}},{key:"closeEvent",set:function(e){this._closeEvent=e,this._onClose&&this._onClose(e)},get:function(){return this._closeEvent}}]),e}();t.default=l,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserInfo=void 0;var n=s(r(171)),o=s(r(3)),i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}t.UserInfo=function e(t,r,s){var a;(0,o.default)(this,e);var u=(0,i.deepClone)(s);return s.hasOwnProperty("userProfile")||(u.userProfile=s),a={hypertyURL:t,domain:r},(0,n.default)(a,"domain",r),(0,n.default)(a,"identity",u),a}},,,,,,,,,,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ChatController=t.ChatManager=void 0;var n=i(r(168)),o=i(r(149));function i(e){return e&&e.__esModule?e:{default:e}}t.ChatManager=n.default,t.ChatController=o.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(78)),o=y(r(18)),i=y(r(3)),s=y(r(5)),a=y(r(148)),u=y(r(138)),c=y(r(131)),l=r(19),d=y(r(169)),f=r(170),p=y(r(149)),h=r(150);function y(e){return e&&e.__esModule?e:{default:e}}var v=function(){function e(t,r,n,o){if((0,i.default)(this,e),!t)throw new Error("[ChatManager.constructor] The myUrl is a needed parameter");if(!r)throw new Error("[ChatManager.constructor] The MiniBus is a needed parameter");if(!n)throw new Error("[ChatManager.constructor] The configuration is a needed parameter");o||(o=new c.default(t,r,n)),this._runtimeURL=n.runtimeURL;var s=(0,l.divideURL)(this._runtimeURL).domain,p=new u.default(t,n.runtimeURL,r),h=new a.default(t,n.runtimeURL,r);this._objectDescURL="hyperty-catalogue://catalogue."+s+"/.well-known/dataschema/Communication",this._reportersControllers={},this._observersControllers={},this._myUrl=t,this._bus=r,this._syncher=o,this._domain=s,this.discovery=p,this.identityManager=h,this.currentIdentity,this.search=new d.default(p,h),this.communicationObject=f.communicationObject,this.communicationChildren=f.communicationChildren,console.log("[ChatManager] Discover ",p),console.log("[ChatManager] Identity Manager ",h)}return(0,s.default)(e,[{key:"processNotification",value:function(e){if(console.log("[ChatManager.processNotification: ",e),"create"===e.type&&this._onInvitation&&this._onInvitation(e),"delete"===e.type){for(var t in e.ack(200),this._observersControllers[e.url].closeEvent=e,delete this._observersControllers[e.url],this._observersControllers.closeEvent=e,this.communicationObject=f.communicationObject,this._reportersControllers)this._reportersControllers[t].closeEvent(e);for(var r in this._observersControllers)this._observersControllers[r].closeEvent(e)}}},{key:"myIdentity",value:function(e){var t=this;return new o.default(function(r,n){if(console.info("[ChatManager.myIdentity]"),e)return r(e);t._myUrl.includes("hyperty://")?t.identityManager.discoverUserRegistered().then(function(e){r(e)}).catch(function(e){n(e)}):t.identityManager.discoverIdentityPerIdP().then(function(e){r(e)}).catch(function(e){n(e)})})}},{key:"create",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=this,s=i._syncher;return new o.default(function(a,u){i.communicationObject=f.communicationObject,i.communicationObject.cseq=1,i.communicationObject.startingTime=(new Date).toJSON(),i.communicationObject.status=f.CommunicationStatus.OPEN;var c=void 0;i.myIdentity().then(function(l){c=l,console.log("[ChatManager.create ] My Identity",l);var d=new h.UserInfo(i._myUrl,i._domain,l);i.communicationObject.participants[l.userURL]=d,console.log("[ChatManager.create ] participants: ",i.communicationObject.participants),console.log("[ChatManager.create ] communicationObject",i.communicationObject),console.info("[ChatManager.create] searching "+t);var f=[],y=[],v={};t.forEach(function(e){var t=i.discovery.discoverHypertiesDO(e.user,["comm"],["chat"],e.domain);f.push(t)}),o.default.all(f).then(function(t){console.log("[ChatManager.create] Users Discovery Results->",t);var o=[];t.forEach(function(e){e.forEach(function(e){"live"===e.data.status?(o.push(e.data.hypertyID),v[e.data.hypertyID]=e):y.length<5&&y.push(e)})}),console.info("[ChatManager] ---------------------- Syncher Create ---------------------- \n"),console.info("[ChatManager] Selected Hyperties: !!! ",o),console.info("Have "+o.length+" users;");var a=(0,n.default)({resources:["chat"],mutual:!0},r);return delete a.name,console.info("[ChatManager] input data:",a),s.create(i._objectDescURL,o,i.communicationObject,!0,!1,e,{},a)}).then(function(e){console.info("[ChatManager] 3. Return Create Data Object Reporter",e);var t=new p.default(s,i.discovery,i._domain,i.search,c,i);t.dataObjectReporter=e,i._reportersControllers[e.url]=t,console.log("[ChatManager] chatController invitationsHandler: ",t.invitationsHandler),e.invitations.length>0&&t.invitationsHandler.processInvitations(v,e),y.length>0&&t.invitationsHandler.inviteDisconnectedHyperties(y,e),a(t)}).catch(function(e){u(e)})}).catch(function(e){return console.log("[ChatManager.create] MyIdentity Error:",e),u(e)})})}},{key:"onInvitation",value:function(e){this._onInvitation=e}},{key:"join",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments[2],n=this;return new o.default(function(o,i){var s=n._syncher,a=void 0;console.info("[ChatManager] ------------------------ Syncher subscribe ---------------------- \n"),console.info("invitationURL",e),n.myIdentity(r).then(function(r){return a=r,s.subscribe(n._objectDescURL,e,!0,!1,t,r)}).then(function(e){console.info("Data Object Observer: ",e);var t=new p.default(s,n.discovery,n._domain,n.search,a,n);o(t),t.dataObjectObserver=e,n._observersControllers[e.url]=t}).catch(function(e){i(e)})})}}]),e}();t.default=v,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(42)),o=a(r(18)),i=a(r(3)),s=a(r(5));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(t,r){if((0,i.default)(this,e),!t)throw new Error("The discovery component is a needed parameter");if(!r)throw new Error("The identityManager component is a needed parameter");this.discovery=t,this.identityManager=r}return(0,s.default)(e,[{key:"myIdentity",value:function(){var e=this;return new o.default(function(t,r){e.identityManager.discoverUserRegistered().then(function(e){t(e)}).catch(function(e){r(e)})})}},{key:"hyperties",value:function(e,t,r){arguments.length>3&&void 0!==arguments[3]&&arguments[3]}},{key:"users",value:function(e,t,r,i){var s=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!e)throw new Error("You need to provide a list of users");if(!t)throw new Error("You need to provide a list of domains");if(!i)throw new Error("You need to provide a list of resources");if(!r)throw new Error("You need to provide a list of schemes");var a=this;return new o.default(function(u,c){if(console.info("[Search] Users: ",e,e.length),console.info("[Search] Domains: ",t,t.length),0===e.length)console.info("Don't have users to discovery"),u(e);else{var l=[];e.forEach(function(e,n){var o=t[n];console.info("[Search] Search user "+e+" for provided domain:",o),s?l.push(a.discovery.discoverHypertiesPerUserProfileData(e,r,i)):l.push(a.discovery.discoverHyperties(e,r,i,o))}),console.info("Requests promises: ",l),o.default.all(l.map(function(e){return e.then(function(e){return e},function(e){return e})})).then(function(e){console.info("[Search] Hyperties from new Discovery",e);var t=e.map(function(e){if(e.hasOwnProperty("hypertyID"))return e;var t=(0,n.default)(e).reduceRight(function(t,r){var n=new Date(e[r].lastModified);return new Date(e[t].lastModified).getTime()<n.getTime()?r:t});return e[t]}).filter(function(e){return e.hasOwnProperty("hypertyID")});console.log("Requests result: ",t),e.forEach(function(e){if("No Hyperty was found"!==e)return u(t)}),c("No Hyperty was found")}).catch(function(t){console.error(t),u(e)})}})}}]),e}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CommunicationStatus={OPEN:"open",PENDING:"pending",CLOSED:"closed",PAUSED:"paused",FAILED:"failed"},t.communicationObject={startingTime:"",status:"",participants:{}},t.communicationChildren={parent:"communication",listener:"resources",type:"HypertyResource"}},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(e,t,r){return t in e?(0,n.default)(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(42)),o=a(r(18)),i=a(r(3)),s=a(r(5));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(t){if((0,i.default)(this,e),!t)throw Error("hypertyURL is a necessary dependecy");this._hypertyURL=t,this._pending={}}return(0,s.default)(e,[{key:"inviteDisconnectedHyperties",value:function(e,t){var r=this;console.log("[GroupChatManager.InvitationsHandler.inviteDisconnectedHyperties] lets invite ",e),e.forEach(function(e){r._pending[t]||(r._pending[t]={}),r._pending[t][e.data.hypertyID]=e,e.onLive(r._hypertyURL,function(){console.log("[GroupChatManager.create] disconnected Hyperty is back to live",e),t.inviteObservers([e.data.hypertyID]),e.unsubscribeLive(r._hypertyURL),delete r._pending[t][e.data.hypertyID]})})}},{key:"processInvitations",value:function(e,t){var r=this,n=this,o=t.invitations||[];console.log("[GroupChatManager.InvitationsHandler.processInvitations] waiting for replies ",o,this._invitationsResponse),o.forEach(function(o){o.then(function(e){console.log("[GroupChatManager.InvitationsHandler.processInvitations] - OK: ",e,r._invitationsResponse),r._invitationsResponse&&r._invitationsResponse(e)}).catch(function(o){console.log("[GroupChatManager.InvitationsHandler.processInvitations] - NOT OK: ",o,r._invitationsResponse),r._invitationsResponse&&r._invitationsResponse(o),n.inviteDisconnectedHyperties([e[o.invited]],t)})})}},{key:"resumeDiscoveries",value:function(e,t){var r=this;return new o.default(function(i,s){var a={},u=[],c=[],l=[];e.resumeDiscoveries().then(function(e){console.log("[GroupChatManager.InvitationsHandler.resumeDiscoveries] found: ",e),e.forEach(function(e){e.data.resources&&"chat"===e.data.resources[0]&&(console.log("[GroupChatManager.InvitationsHandler.resumeDiscoveries] resuming: ",e),"live"===e.data.status?(a[e.data.hypertyID]=e,u.push(e.data.hypertyID),l.push(e.unsubscribeLive(r._hypertyURL))):c.push(e))}),c.length>0&&r.inviteDisconnectedHyperties(c,t),(0,n.default)(a).length>0?(t.inviteObservers(u),t.invitations.length>0&&r.processInvitations(a,t),o.default.all(l).then(function(){i()})):i()})}).catch(function(e){reject("[GroupChatManager.InvitationsHandler.resumeDiscoveries] failed | ",e)})}},{key:"cleanInvitations",value:function(e){var t=this,r=t._pending[e];return console.log("[GroupChatManager.InvitationsHandler.cleanInvitations] ",r),r?new o.default(function(e,i){var s=(0,n.default)(r),a=[];s.forEach(function(e){a.push(r[e].unsubscribeLive(t._hypertyURL))}),o.default.all(s).then(function(){e()})}):o.default.resolve()}},{key:"invitationResponse",set:function(e){this._invitationsResponse=e}}]),e}();t.default=u,e.exports=t.default}])})},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=194)}({0:function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},1:function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},10:function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},11:function(e,t,r){var n=r(8),o=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},119:function(e,t,r){r(120),e.exports=r(0).Object.assign},12:function(e,t,r){var n=r(55),o=r(30);e.exports=function(e){return n(o(e))}},120:function(e,t,r){var n=r(6);n(n.S+n.F,"Object",{assign:r(121)})},121:function(e,t,r){"use strict";var n=r(20),o=r(43),i=r(29),s=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=s(e),u=arguments.length,c=1,l=o.f,d=i.f;u>c;)for(var f,p=a(arguments[c++]),h=l?n(p).concat(l(p)):n(p),y=h.length,v=0;y>v;)d.call(p,f=h[v++])&&(r[f]=p[f]);return r}:u},13:function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},14:function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},15:function(e,t){e.exports=!0},151:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(78)),o=i(r(3));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i,s,a,u){(0,o.default)(this,e),t&&(this.preferred_username=t),i&&(this.picture=i),s&&(this.name=s),a&&(this.locale=a),r&&(this.userURL=r),u&&(0,n.default)(this,u)},e.exports=t.default},16:function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},194:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserProfile=void 0;var n=i(r(151)),o=i(r(195));function i(e){return e&&e.__esModule?e:{default:e}}t.UserProfile=n.default,t.default=o.default},195:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(151));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i,s,a,u,c,l){if((0,n.default)(this,e),!u)throw new Error("IDP should be a parameter");if(!t)throw new Error("username should be a parameter");this.idp=u,c&&(this.assertion=c),this.userProfile=new o.default(t,r,i,s,a,l)},e.exports=t.default},20:function(e,t,r){var n=r(45),o=r(37);e.exports=Object.keys||function(e){return n(e,o)}},21:function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},23:function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},24:function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},27:function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},28:function(e,t,r){var n=r(7),o=r(1).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},29:function(e,t){t.f={}.propertyIsEnumerable},3:function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},30:function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},31:function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},32:function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},35:function(e,t,r){var n=r(36)("keys"),o=r(23);e.exports=function(e){return n[e]||(n[e]=o(e))}},36:function(e,t,r){var n=r(0),o=r(1),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},37:function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},39:function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},4:function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},43:function(e,t){t.f=Object.getOwnPropertySymbols},45:function(e,t,r){var n=r(10),o=r(12),i=r(64)(!1),s=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=o(e),u=0,c=[];for(r in a)r!=s&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~i(c,r)||c.push(r));return c}},49:function(e,t,r){var n=r(31),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},55:function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},6:function(e,t,r){var n=r(1),o=r(0),i=r(14),s=r(11),a=r(10),u=function(e,t,r){var c,l,d,f=e&u.F,p=e&u.G,h=e&u.S,y=e&u.P,v=e&u.B,b=e&u.W,_=p?o:o[t]||(o[t]={}),m=_.prototype,g=p?n:h?n[t]:(n[t]||{}).prototype;for(c in p&&(r=t),r)(l=!f&&g&&void 0!==g[c])&&a(_,c)||(d=l?g[c]:r[c],_[c]=p&&"function"!=typeof g[c]?r[c]:v&&l?i(d,n):b&&g[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):y&&"function"==typeof d?i(Function.call,d):d,y&&((_.virtual||(_.virtual={}))[c]=d,e&u.R&&m&&!m[c]&&s(m,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},64:function(e,t,r){var n=r(12),o=r(49),i=r(65);e.exports=function(e){return function(t,r,s){var a,u=n(t),c=o(u.length),l=i(s,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},65:function(e,t,r){var n=r(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},7:function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},78:function(e,t,r){e.exports={default:r(119),__esModule:!0}},8:function(e,t,r){var n=r(9),o=r(39),i=r(27),s=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},9:function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}}})})},function(e,t,r){!function(t,r){e.exports=r()}("undefined"!=typeof self&&self,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=162)}([function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t,r){var n=r(36)("wks"),o=r(23),i=r(1).Symbol,s="function"==typeof i;(e.exports=function(e){return n[e]||(n[e]=s&&i[e]||(s?i:o)("Symbol."+e))}).store=n},function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),(0,n.default)(e,o.key,o)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){var n=r(1),o=r(0),i=r(14),s=r(11),a=r(10),u=function(e,t,r){var c,l,d,f=e&u.F,p=e&u.G,h=e&u.S,y=e&u.P,v=e&u.B,b=e&u.W,_=p?o:o[t]||(o[t]={}),m=_.prototype,g=p?n:h?n[t]:(n[t]||{}).prototype;for(c in p&&(r=t),r)(l=!f&&g&&void 0!==g[c])&&a(_,c)||(d=l?g[c]:r[c],_[c]=p&&"function"!=typeof g[c]?r[c]:v&&l?i(d,n):b&&g[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):y&&"function"==typeof d?i(Function.call,d):d,y&&((_.virtual||(_.virtual={}))[c]=d,e&u.R&&m&&!m[c]&&s(m,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){var n=r(9),o=r(39),i=r(27),s=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),o=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(55),o=r(30);e.exports=function(e){return n(o(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,r){e.exports={default:r(102),__esModule:!0}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(58)),o=i(r(42));function i(e){return e&&e.__esModule?e:{default:e}}function s(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi,"$1,$3,$4").split(",")}var r=t(e);if(r[0]===e&&!r[0].includes("@")){var n={type:"",domain:e,identity:""};return console.warn("[DivideURL] DivideURL don't support url without scheme. Please review your url address",e),n}return r[0]===e&&r[0].includes("@")&&(r=t((r[0]===e?"smtp":r[0])+"://"+r[0])),r[1].includes("@")&&(r[2]=r[0]+"://"+r[1],r[1]=r[1].substr(r[1].indexOf("@")+1)),{type:r[0],domain:r[1],identity:r[2]}}function a(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}t.divideURL=s,t.divideEmail=function(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,o.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,n.default)(e))},t.getUserURLFromEmail=a,t.getUserEmailFromURL=function(e){var t=s(e);return t.identity.replace("/","")+"@"+t.domain},t.convertToUserURL=function(e){if("user://"===e.substring(0,7)){var t=s(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return a(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(".");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&r.push(e)});var i=void 0;r.forEach(function(t){i=e.replace(t,"*+*"),n=i.split(".").map(function(e){return"*+*"===e?t:e})})}return console.log("[ServiceFramework.Utils.checkAttribute]",n),n},t.parseAttributes=function(e){if(e.includes("://")){var t=e.split(/([0-9a-zA-Z][-\w]*):\/\//g)[0],r=t.split("."),n=e.replace(t,"");if(e.includes("identity")){var o=n.split("identity.");console.log("array2 "+o),n=o[0].slice(".",-1),o=o[1].split("."),r.push(n,"identity"),r=r.concat(o)}else r.push(n);return r.filter(Boolean)}return e.split(".")}},function(e,t,r){var n=r(45),o=r(37);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){var n,o;!function(i,s){"use strict";void 0===(o="function"==typeof(n=function(){var e=function(){},t="undefined",r=["trace","debug","info","warn","error"];function n(e,t){var r=e[t];if("function"==typeof r.bind)return r.bind(e);try{return Function.prototype.bind.call(r,e)}catch(t){return function(){return Function.prototype.apply.apply(r,[e,arguments])}}}function o(t,n){for(var o=0;o<r.length;o++){var i=r[o];this[i]=o<t?e:this.methodFactory(i,t,n)}this.log=this.debug}function i(r,i,s){return function(r){return"debug"===r&&(r="log"),typeof console!==t&&(void 0!==console[r]?n(console,r):void 0!==console.log?n(console,"log"):e)}(r)||function(e,r,n){return function(){typeof console!==t&&(o.call(this,r,n),this[e].apply(this,arguments))}}.apply(this,arguments)}function s(e,n,s){var a,u=this,c="loglevel";function l(){var e;if(typeof window!==t){try{e=window.localStorage[c]}catch(e){}if(typeof e===t)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(c)+"=");-1!==n&&(e=/^([^;]+)/.exec(r.slice(n))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}e&&(c+=":"+e),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=s||i,u.getLevel=function(){return a},u.setLevel=function(n,i){if("string"==typeof n&&void 0!==u.levels[n.toUpperCase()]&&(n=u.levels[n.toUpperCase()]),!("number"==typeof n&&n>=0&&n<=u.levels.SILENT))throw"log.setLevel() called with invalid level: "+n;if(a=n,!1!==i&&function(e){var n=(r[e]||"silent").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[c]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(c)+"="+n+";"}catch(e){}}}(n),o.call(u,n,e),typeof console===t&&n<u.levels.SILENT)return"No console available for logging"},u.setDefaultLevel=function(e){l()||u.setLevel(e,!1)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)};var d=l();null==d&&(d=null==n?"WARN":n),u.setLevel(d,!1)}var a=new s,u={};a.getLogger=function(e){if("string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=u[e];return t||(t=u[e]=new s(e,a.getLevel(),a.methodFactory)),t};var c=typeof window!==t?window.log:void 0;return a.noConflict=function(){return typeof window!==t&&window.log===a&&(window.log=c),a},a.getLoggers=function(){return u},a})?n.call(t,r,t,e):n)||(e.exports=o)}()},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,r){e.exports={default:r(91),__esModule:!0}},function(e,t,r){var n=r(8).f,o=r(10),i=r(2)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,r){var n=r(7),o=r(1).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},function(e,t,r){"use strict";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(47));t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,n.default)(t))&&"function"!=typeof t?e:t}},function(e,t,r){"use strict";t.__esModule=!0;var n=s(r(93)),o=s(r(97)),i=s(r(47));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(n.default?(0,n.default)(e,t):e.__proto__=t)}},function(e,t,r){var n=r(36)("keys"),o=r(23);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t,r){var n=r(0),o=r(1),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(15)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(9),o=r(72),i=r(37),s=r(35)("IE_PROTO"),a=function(){},u=function(){var e,t=r(28)("iframe"),n=i.length;for(t.style.display="none",r(56).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[i[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(a.prototype=n(e),r=new a,a.prototype=null,r[s]=e):r=u(),void 0===t?r:o(r,t)}},function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)("div"),"a",{get:function(){return 7}}).a})},function(e,t,r){t.f=r(2)},function(e,t,r){var n=r(1),o=r(0),i=r(15),s=r(40),a=r(8).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||a(t,e,{value:s.f(e)})}},function(e,t,r){e.exports={default:r(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(6),o=r(0),i=r(13);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],s={};s[e]=t(r),n(n.S+n.F*i(function(){r(1)}),"Object",s)}},function(e,t,r){var n=r(10),o=r(12),i=r(64)(!1),s=r(35)("IE_PROTO");e.exports=function(e,t){var r,a=o(e),u=0,c=[];for(r in a)r!=s&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~i(c,r)||c.push(r));return c}},function(e,t,r){var n=r(29),o=r(16),i=r(12),s=r(27),a=r(10),u=r(39),c=Object.getOwnPropertyDescriptor;t.f=r(4)?c:function(e,t){if(e=i(e),t=s(t,!0),u)try{return c(e,t)}catch(e){}if(a(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t,r){"use strict";t.__esModule=!0;var n=s(r(79)),o=s(r(81)),i="function"==typeof o.default&&"symbol"==typeof n.default?function(e){return typeof e}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":typeof e};function s(e){return e&&e.__esModule?e:{default:e}}t.default="function"==typeof o.default&&"symbol"===i(n.default)?function(e){return void 0===e?"undefined":i(e)}:function(e){return e&&"function"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?"symbol":void 0===e?"undefined":i(e)}},function(e,t,r){"use strict";var n=r(15),o=r(6),i=r(50),s=r(11),a=r(17),u=r(71),c=r(26),l=r(53),d=r(2)("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,r,h,y,v,b){u(r,t,h);var _,m,g,O=function(e){if(!f&&e in R)return R[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},w=t+" Iterator",j="values"==y,k=!1,R=e.prototype,L=R[d]||R["@@iterator"]||y&&R[y],x=L||O(y),P=y?j?O("entries"):x:void 0,C="Array"==t&&R.entries||L;if(C&&(g=l(C.call(new e)))!==Object.prototype&&g.next&&(c(g,w,!0),n||"function"==typeof g[d]||s(g,d,p)),j&&L&&"values"!==L.name&&(k=!0,x=function(){return L.call(this)}),n&&!b||!f&&!k&&R[d]||s(R,d,x),a[t]=x,a[w]=p,y)if(_={values:j?x:O("values"),keys:v?x:O("keys"),entries:P},b)for(m in _)m in R||i(R,m,_[m]);else o(o.P+o.F*(f||k),t,_);return _}},function(e,t,r){var n=r(31),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){e.exports=r(11)},function(e,t,r){"use strict";var n=r(24);e.exports.f=function(e){return new function(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}(e)}},function(e,t,r){"use strict";var n=r(70)(!0);r(48)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){var n=r(10),o=r(32),i=r(35)("IE_PROTO"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,r){r(73);for(var n=r(1),o=r(11),i=r(17),s=r(2)("toStringTag"),a="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<a.length;u++){var c=a[u],l=n[c],d=l&&l.prototype;d&&!d[s]&&o(d,s,c),i[c]=i.Array}},function(e,t,r){var n=r(21);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(45),o=r(37).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){e.exports={default:r(76),__esModule:!0}},function(e,t,r){e.exports={default:r(61),__esModule:!0}},function(e,t){},function(e,t,r){r(62);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(6);n(n.S+n.F*!r(4),"Object",{defineProperty:r(8).f})},function(e,t,r){var n=r(21),o=r(2)("toStringTag"),i="Arguments"==n(function(){return arguments}());e.exports=function(e){var t,r,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:i?n(t):"Object"==(s=n(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,r){var n=r(12),o=r(49),i=r(65);e.exports=function(e){return function(t,r,s){var a,u=n(t),c=o(u.length),l=i(s,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},function(e,t,r){var n=r(9),o=r(24),i=r(2)("species");e.exports=function(e,t){var r,s=n(e).constructor;return void 0===s||void 0==(r=n(s)[i])?t:o(r)}},function(e,t,r){var n,o,i,s=r(14),a=r(108),u=r(56),c=r(28),l=r(1),d=l.process,f=l.setImmediate,p=l.clearImmediate,h=l.MessageChannel,y=l.Dispatch,v=0,b={},_=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},m=function(e){_.call(e.data)};f&&p||(f=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return b[++v]=function(){a("function"==typeof e?e:Function(e),t)},n(v),v},p=function(e){delete b[e]},"process"==r(21)(d)?n=function(e){d.nextTick(s(_,e,1))}:y&&y.now?n=function(e){y.now(s(_,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=m,n=s(i.postMessage,i,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+"","*")},l.addEventListener("message",m,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),_.call(e)}}:function(e){setTimeout(s(_,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(9),o=r(7),i=r(51);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(31),o=r(30);e.exports=function(e){return function(t,r){var i,s,a=String(o(t)),u=n(r),c=a.length;return u<0||u>=c?e?"":void 0:(i=a.charCodeAt(u))<55296||i>56319||u+1===c||(s=a.charCodeAt(u+1))<56320||s>57343?e?a.charAt(u):i:e?a.slice(u,u+2):s-56320+(i-55296<<10)+65536}}},function(e,t,r){"use strict";var n=r(38),o=r(16),i=r(26),s={};r(11)(s,r(2)("iterator"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(s,{next:o(1,r)}),i(e,t+" Iterator")}},function(e,t,r){var n=r(8),o=r(9),i=r(20);e.exports=r(4)?Object.defineProperties:function(e,t){o(e);for(var r,s=i(t),a=s.length,u=0;a>u;)n.f(e,r=s[u++],t[r]);return e}},function(e,t,r){"use strict";var n=r(74),o=r(75),i=r(17),s=r(12);e.exports=r(48)(Array,"Array",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])},"values"),i.Arguments=i.Array,n("keys"),n("values"),n("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){var n=r(0),o=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},function(e,t,r){var n=r(23)("meta"),o=r(7),i=r(10),s=r(8).f,a=0,u=Object.isExtensible||function(){return!0},c=!r(13)(function(){return u(Object.preventExtensions({}))}),l=function(e){s(e,n,{value:{i:"O"+ ++a,w:{}}})},d=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,n)){if(!u(e))return"F";if(!t)return"E";l(e)}return e[n].i},getWeak:function(e,t){if(!i(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},onFreeze:function(e){return c&&d.NEED&&u(e)&&!i(e,n)&&l(e),e}}},function(e,t,r){e.exports={default:r(119),__esModule:!0}},function(e,t,r){e.exports={default:r(80),__esModule:!0}},function(e,t,r){r(52),r(54),e.exports=r(40).f("iterator")},function(e,t,r){e.exports={default:r(82),__esModule:!0}},function(e,t,r){r(83),r(60),r(87),r(88),e.exports=r(0).Symbol},function(e,t,r){"use strict";var n=r(1),o=r(10),i=r(4),s=r(6),a=r(50),u=r(77).KEY,c=r(13),l=r(36),d=r(26),f=r(23),p=r(2),h=r(40),y=r(41),v=r(84),b=r(85),_=r(9),m=r(7),g=r(12),O=r(27),w=r(16),j=r(38),k=r(86),R=r(46),L=r(8),x=r(20),P=R.f,C=L.f,S=k.f,M=n.Symbol,U=n.JSON,D=U&&U.stringify,E=p("_hidden"),T=p("toPrimitive"),I={}.propertyIsEnumerable,H=l("symbol-registry"),A=l("symbols"),N=l("op-symbols"),F=Object.prototype,B="function"==typeof M,V=n.QObject,z=!V||!V.prototype||!V.prototype.findChild,G=i&&c(function(){return 7!=j(C({},"a",{get:function(){return C(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=P(F,t);n&&delete F[t],C(e,t,r),n&&e!==F&&C(F,t,n)}:C,q=function(e){var t=A[e]=j(M.prototype);return t._k=e,t},J=B&&"symbol"==typeof M.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof M},Z=function(e,t,r){return e===F&&Z(N,t,r),_(e),t=O(t,!0),_(r),o(A,t)?(r.enumerable?(o(e,E)&&e[E][t]&&(e[E][t]=!1),r=j(r,{enumerable:w(0,!1)})):(o(e,E)||C(e,E,w(1,{})),e[E][t]=!0),G(e,t,r)):C(e,t,r)},W=function(e,t){_(e);for(var r,n=v(t=g(t)),o=0,i=n.length;i>o;)Z(e,r=n[o++],t[r]);return e},Y=function(e){var t=I.call(this,e=O(e,!0));return!(this===F&&o(A,e)&&!o(N,e))&&(!(t||!o(this,e)||!o(A,e)||o(this,E)&&this[E][e])||t)},K=function(e,t){if(e=g(e),t=O(t,!0),e!==F||!o(A,t)||o(N,t)){var r=P(e,t);return!r||!o(A,t)||o(e,E)&&e[E][t]||(r.enumerable=!0),r}},$=function(e){for(var t,r=S(g(e)),n=[],i=0;r.length>i;)o(A,t=r[i++])||t==E||t==u||n.push(t);return n},X=function(e){for(var t,r=e===F,n=S(r?N:g(e)),i=[],s=0;n.length>s;)!o(A,t=n[s++])||r&&!o(F,t)||i.push(A[t]);return i};B||(a((M=function(){if(this instanceof M)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(r){this===F&&t.call(N,r),o(this,E)&&o(this[E],e)&&(this[E][e]=!1),G(this,e,w(1,r))};return i&&z&&G(F,e,{configurable:!0,set:t}),q(e)}).prototype,"toString",function(){return this._k}),R.f=K,L.f=Z,r(57).f=k.f=$,r(29).f=Y,r(43).f=X,i&&!r(15)&&a(F,"propertyIsEnumerable",Y,!0),h.f=function(e){return q(p(e))}),s(s.G+s.W+s.F*!B,{Symbol:M});for(var Q="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;Q.length>ee;)p(Q[ee++]);for(var te=x(p.store),re=0;te.length>re;)y(te[re++]);s(s.S+s.F*!B,"Symbol",{for:function(e){return o(H,e+="")?H[e]:H[e]=M(e)},keyFor:function(e){if(!J(e))throw TypeError(e+" is not a symbol!");for(var t in H)if(H[t]===e)return t},useSetter:function(){z=!0},useSimple:function(){z=!1}}),s(s.S+s.F*!B,"Object",{create:function(e,t){return void 0===t?j(e):W(j(e),t)},defineProperty:Z,defineProperties:W,getOwnPropertyDescriptor:K,getOwnPropertyNames:$,getOwnPropertySymbols:X}),U&&s(s.S+s.F*(!B||c(function(){var e=M();return"[null]"!=D([e])||"{}"!=D({a:e})||"{}"!=D(Object(e))})),"JSON",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(m(t)||void 0!==e)&&!J(e))return b(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!J(t))return t}),n[1]=t,D.apply(U,n)}}),M.prototype[T]||r(11)(M.prototype,T,M.prototype.valueOf),d(M,"Symbol"),d(Math,"Math",!0),d(n.JSON,"JSON",!0)},function(e,t,r){var n=r(20),o=r(43),i=r(29);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var s,a=r(e),u=i.f,c=0;a.length>c;)u.call(e,s=a[c++])&&t.push(s);return t}},function(e,t,r){var n=r(21);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n=r(12),o=r(57).f,i={}.toString,s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return s.slice()}}(e):o(n(e))}},function(e,t,r){r(41)("asyncIterator")},function(e,t,r){r(41)("observable")},function(e,t,r){r(90),e.exports=r(0).Object.keys},function(e,t,r){var n=r(32),o=r(20);r(44)("keys",function(){return function(e){return o(n(e))}})},function(e,t,r){r(92),e.exports=r(0).Object.getPrototypeOf},function(e,t,r){var n=r(32),o=r(53);r(44)("getPrototypeOf",function(){return function(e){return o(n(e))}})},function(e,t,r){e.exports={default:r(94),__esModule:!0}},function(e,t,r){r(95),e.exports=r(0).Object.setPrototypeOf},function(e,t,r){var n=r(6);n(n.S,"Object",{setPrototypeOf:r(96).set})},function(e,t,r){var n=r(7),o=r(9),i=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=r(14)(Function.call,r(46).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:i}},function(e,t,r){e.exports={default:r(98),__esModule:!0}},function(e,t,r){r(99);var n=r(0).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(6);n(n.S,"Object",{create:r(38)})},function(e,t,r){"use strict";t.__esModule=!0;var n=i(r(25)),o=i(r(125));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i){null===t&&(t=Function.prototype);var s=(0,o.default)(t,r);if(void 0===s){var a=(0,n.default)(t);return null===a?void 0:e(a,r,i)}if("value"in s)return s.value;var u=s.get;return void 0!==u?u.call(i):void 0}},function(e,t,r){var n=r(63),o=r(2)("iterator"),i=r(17);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[n(e)]}},function(e,t,r){r(60),r(52),r(54),r(103),r(114),r(115),e.exports=r(0).Promise},function(e,t,r){"use strict";var n,o,i,s,a=r(15),u=r(1),c=r(14),l=r(63),d=r(6),f=r(7),p=r(24),h=r(104),y=r(105),v=r(66),b=r(67).set,_=r(109)(),m=r(51),g=r(68),O=r(110),w=r(69),j=u.TypeError,k=u.process,R=k&&k.versions,L=R&&R.v8||"",x=u.Promise,P="process"==l(k),C=function(){},S=o=m.f,M=!!function(){try{var e=x.resolve(1),t=(e.constructor={})[r(2)("species")]=function(e){e(C,C)};return(P||"function"==typeof PromiseRejectionEvent)&&e.then(C)instanceof t&&0!==L.indexOf("6.6")&&-1===O.indexOf("Chrome/66")}catch(e){}}(),U=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},D=function(e,t){if(!e._n){e._n=!0;var r=e._c;_(function(){for(var n=e._v,o=1==e._s,i=0,s=function(t){var r,i,s,a=o?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{a?(o||(2==e._h&&I(e),e._h=1),!0===a?r=n:(l&&l.enter(),r=a(n),l&&(l.exit(),s=!0)),r===t.promise?c(j("Promise-chain cycle")):(i=U(r))?i.call(r,u,c):u(r)):c(n)}catch(e){l&&!s&&l.exit(),c(e)}};r.length>i;)s(r[i++]);e._c=[],e._n=!1,t&&!e._h&&E(e)})}},E=function(e){b.call(u,function(){var t,r,n,o=e._v,i=T(e);if(i&&(t=g(function(){P?k.emit("unhandledRejection",o,e):(r=u.onunhandledrejection)?r({promise:e,reason:o}):(n=u.console)&&n.error&&n.error("Unhandled promise rejection",o)}),e._h=P||T(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},T=function(e){return 1!==e._h&&0===(e._a||e._c).length},I=function(e){b.call(u,function(){var t;P?k.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},H=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),D(t,!0))},A=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw j("Promise can't be resolved itself");(t=U(e))?_(function(){var n={_w:r,_d:!1};try{t.call(e,c(A,n,1),c(H,n,1))}catch(e){H.call(n,e)}}):(r._v=e,r._s=1,D(r,!1))}catch(e){H.call({_w:r,_d:!1},e)}}};M||(x=function(e){h(this,x,"Promise","_h"),p(e),n.call(this);try{e(c(A,this,1),c(H,this,1))}catch(e){H.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(111)(x.prototype,{then:function(e,t){var r=S(v(this,x));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=P?k.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&D(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=c(A,e,1),this.reject=c(H,e,1)},m.f=S=function(e){return e===x||e===s?new i(e):o(e)}),d(d.G+d.W+d.F*!M,{Promise:x}),r(26)(x,"Promise"),r(112)("Promise"),s=r(0).Promise,d(d.S+d.F*!M,"Promise",{reject:function(e){var t=S(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!M),"Promise",{resolve:function(e){return w(a&&this===s?x:this,e)}}),d(d.S+d.F*!(M&&r(113)(function(e){x.all(e).catch(C)})),"Promise",{all:function(e){var t=this,r=S(t),n=r.resolve,o=r.reject,i=g(function(){var r=[],i=0,s=1;y(e,!1,function(e){var a=i++,u=!1;r.push(void 0),s++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--s||n(r))},o)}),--s||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=S(t),n=r.reject,o=g(function(){y(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(14),o=r(106),i=r(107),s=r(9),a=r(49),u=r(101),c={},l={};(t=e.exports=function(e,t,r,d,f){var p,h,y,v,b=f?function(){return e}:u(e),_=n(r,d,t?2:1),m=0;if("function"!=typeof b)throw TypeError(e+" is not iterable!");if(i(b)){for(p=a(e.length);p>m;m++)if((v=t?_(s(h=e[m])[0],h[1]):_(e[m]))===c||v===l)return v}else for(y=b.call(e);!(h=y.next()).done;)if((v=o(y,_,h.value,t))===c||v===l)return v}).BREAK=c,t.RETURN=l},function(e,t,r){var n=r(9);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(17),o=r(2)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),o=r(67).set,i=n.MutationObserver||n.WebKitMutationObserver,s=n.process,a=n.Promise,u="process"==r(21)(s);e.exports=function(){var e,t,r,c=function(){var n,o;for(u&&(n=s.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){s.nextTick(c)};else if(!i||n.navigator&&n.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);r=function(){l.then(c)}}else r=function(){o.call(n,c)};else{var d=!0,f=document.createTextNode("");new i(c).observe(f,{characterData:!0}),r=function(){f.data=d=!d}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){var n=r(1).navigator;e.exports=n&&n.userAgent||""},function(e,t,r){var n=r(11);e.exports=function(e,t,r){for(var o in t)r&&e[o]?e[o]=t[o]:n(e,o,t[o]);return e}},function(e,t,r){"use strict";var n=r(1),o=r(0),i=r(8),s=r(4),a=r(2)("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:n[e];s&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(2)("iterator"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],s=i[n]();s.next=function(){return{done:r=!0}},i[n]=function(){return s},e(i)}catch(e){}return r}},function(e,t,r){"use strict";var n=r(6),o=r(0),i=r(1),s=r(66),a=r(69);n(n.P+n.R,"Promise",{finally:function(e){var t=s(this,o.Promise||i.Promise),r="function"==typeof e;return this.then(r?function(r){return a(t,e()).then(function(){return r})}:e,r?function(r){return a(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){"use strict";var n=r(6),o=r(51),i=r(68);n(n.S,"Promise",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectType=t.ChangeType=void 0;var n=s(r(3)),o=s(r(5));r(123);var i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){(0,n.default)(this,e),this._observers=[],this._filters={},this._data=t||{},this._internalObserve(this._data)}return(0,o.default)(e,[{key:"observe",value:function(e){this._observers.push(e)}},{key:"find",value:function(e){var t=(0,i.parseAttributes)(e);return this._findWithSplit(t)}},{key:"findBefore",value:function(e){var t={},r=(0,i.parseAttributes)(e);return t.last=r.pop(),t.obj=this._findWithSplit(r),t}},{key:"_findWithSplit",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:"_internalObserve",value:function(e){var t=this;this._data=Object.deepObserve(e,function(e){e.every(function(e){t._onChanges(e)})})}},{key:"_fireEvent",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:"_onChanges",value:function(e){var t=e.object,r=void 0;t.constructor===Object&&(r=c.OBJECT),t.constructor===Array&&(r=c.ARRAY);var n=e.keypath,o=t[e.name];"update"!==e.type||n.includes(".length")||this._fireEvent({cType:u.UPDATE,oType:r,field:n,data:o}),"add"===e.type&&this._fireEvent({cType:u.ADD,oType:r,field:n,data:o}),"delete"===e.type&&this._fireEvent({cType:u.REMOVE,oType:r,field:n})}},{key:"data",get:function(){return this._data}}]),e}(),u=t.ChangeType={UPDATE:"update",ADD:"add",REMOVE:"remove"},c=t.ObjectType={OBJECT:"object",ARRAY:"array"};t.default=a},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(18)),o=c(r(3)),i=c(r(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=c(r(117)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=s.getLogger("DataObjectChild"),d=function(){function e(t){function r(e){throw"[DataObjectChild] "+e+" mandatory parameter is missing"}(0,o.default)(this,e),t.parent?this._parent=t.parent:r("parent"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.parentObject?this._parentObject=t.parentObject:r("parentObject"),t.name&&(this._name=t.name),t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._childId=t.url,t.data?this._syncObj=new a.default(t.data):this._syncObj=new a.default({}),l.log("[DataObjectChild -  Constructor] - ",this._syncObj),this._bus=this._parentObject._bus,this._owner=this._parentObject._owner,this._allocateListeners(),this._metadata=t,delete this._metadata.parentObject,this._sharingStatus=!1}return(0,i.default)(e,[{key:"share",value:function(e){var t=this;t._sharingStatus=new n.default(function(r,n){var o;o=e?t.metadata.parent:t.metadata.parent+"/children/"+t.metadata.children;var i=t.metadata;i.data=t.data;var s={type:"create",from:t.metadata.reporter,to:o,body:{resource:i.url,value:i}};if(t.identity&&(s.body.identity=t.identity),t._parentObject.data.hasOwnProperty("mutual")&&(s.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,u.deepClone)(s)),r();var a=t._bus.postMessage((0,u.deepClone)(s),function(e){if(e.to===t._reporter){t._bus.removeResponseListener(s.from,e.id),l.log("[Syncher.DataObjectChild.share] Parent reporter reply ",e);var o={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:"Unknown"};return e.body.code<300?r(o):n(o)}},!1);setTimeout(function(){return t._bus.removeResponseListener(s.from,a),n({code:408,desc:"timout"})},3e3)})}},{key:"store",value:function(){var e={},t=this.metadata.children+"."+this.metadata.url;e.value=this.metadata,e.identity=this.identity;var r={from:this.metadata.reporter,to:this._parentObject._syncher._subURL,type:"create",body:{resource:this.metadata.parent,attribute:t,value:e}};l.log("[DataObjectChild.store]:",r),this._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){"response"===t.type&&t.id===e._msgId&&(l.log("DataObjectChild.onResponse:",t),e._onResponse(t))}))}},{key:"_releaseListeners",value:function(){this._listener&&this._listener.remove()}},{key:"delete",value:function(){this._releaseListeners()}},{key:"onChange",value:function(e){this._syncObj.observe(function(t){l.log("[DataObjectChild - observer] - ",t),e(t)})}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.body.source,code:e.body.code};this._onResponseHandler&&this._onResponseHandler(t)}},{key:"shareable",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:"metadata",get:function(){return this._metadata}},{key:"childId",get:function(){return this._childId}},{key:"sharingStatus",get:function(){return this._sharingStatus}},{key:"data",get:function(){return this._syncObj.data}},{key:"identity",set:function(e){this._identity=e},get:function(){return this._identity}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){r(120),e.exports=r(0).Object.assign},function(e,t,r){var n=r(6);n(n.S+n.F,"Object",{assign:r(121)})},function(e,t,r){"use strict";var n=r(20),o=r(43),i=r(29),s=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=s(e),u=arguments.length,c=1,l=o.f,d=i.f;u>c;)for(var f,p=a(arguments[c++]),h=l?n(p).concat(l(p)):n(p),y=h.length,v=0;y>v;)d.call(p,f=h[v++])&&(r[f]=p[f]);return r}:u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(47)),o=y(r(18)),i=y(r(42)),s=y(r(78)),a=y(r(3)),u=y(r(5)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=r(117),d=y(l),f=y(r(118)),p=r(19),h=y(r(128));function y(e){return e&&e.__esModule?e:{default:e}}var v=c.getLogger("DataObject"),b=function(){function e(t){function r(e){throw"[DataObject] "+e+" mandatory parameter is missing"}(0,a.default)(this,e),t.syncher?this._syncher=t.syncher:r("syncher"),t.url?this._url=t.url:r("url"),t.created?this._created=t.created:r("created"),t.reporter?this._reporter=t.reporter:r("reporter"),t.runtime?this._runtime=t.runtime:r("runtime"),t.schema?this._schema=t.schema:r("schema"),t.name?this._name=t.name:r("name"),this._status=t.status,t.data?this._syncObj=new d.default(t.data):this._syncObj=new d.default({}),this._childrens=t.childrens,this._mutual=t.mutual,this._version=0,this._childId=0,this._childrenListeners=[],this._onAddChildrenHandler,this._resumed=t.resume,t.resume&&(this._version=t.version),this._owner=t.syncher._owner,this._bus=t.syncher._bus,t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._metadata=(0,s.default)(t),this._metadata.lastModified=this._metadata.created,delete this._metadata.data,delete this._metadata.syncher,delete this._metadata.authorise,this._hypertyResourceFactory=new h.default,this._childrenObjects={},this._sharedChilds=[]}return(0,u.default)(e,[{key:"_getLastChildId",value:function(){var e=this,t=e._owner+"#0";return(0,i.default)(e._childrens).filter(function(r){e._childrens[r].childId>t&&(t=e._childrens[r].childId)}),Number(t.split("#")[1])}},{key:"_allocateListeners",value:function(){var e=this,t=this,r=t._url+"/children/";v.log("[Data Object - AllocateListeners] - ",t._childrens),t._childrens&&t._childrens.forEach(function(n){var o=r+n,i=t._bus.addListener(o,function(r){if(r.from!==e._owner)switch(v.log("DataObject-Children-RCV: ",r),r.type){case"create":t._onChildCreate(r);break;case"delete":v.log(r);break;default:t._changeChildren(r)}});t._childrenListeners.push(i)})}},{key:"_releaseListeners",value:function(){var e=this;e._childrenListeners.forEach(function(e){e.remove()}),(0,i.default)(e._childrenObjects).forEach(function(t){(0,i.default)(e._childrenObjects[t]).forEach(function(r){e._childrenObjects[t][r]._releaseListeners()})})}},{key:"resumeChildrens",value:function(e){var t=this,r=this,n=this._owner+"#"+this._childId;(0,i.default)(e).forEach(function(o){var s=e[o];(0,i.default)(s).forEach(function(e){var i=!1;r._childrenObjects.hasOwnProperty(o)||(r._childrenObjects[o]={}),s[e].value.resourceType&&!r._childrenObjects[o].hasOwnProperty(e)?(r._childrenObjects[o][e]=r._resumeHypertyResource(s[e]),i=!0):r._childrenObjects[o].hasOwnProperty(e)||(r._childrenObjects[o][e]=r._resumeChild(s[e]),v.log("[DataObject.resumeChildrens] new DataObjectChild: ",r._childrenObjects[o][e]),i=!0),i&&e>n&&(n=e,v.log("[DataObjectReporter.resumeChildrens] - resuming: ",t._childrenObjects[o][e]))})}),this._childId=Number(n.split("#")[1])}},{key:"_resumeChild",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=new f.default(t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"_resumeHypertyResource",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t);r.identity=e.identity;var n={type:"create",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:"pause",value:function(){throw"Not implemented"}},{key:"resume",value:function(){throw"Not implemented"}},{key:"stop",value:function(){throw"Not implemented"}},{key:"addChild",value:function(e,t,r,n){var i=this,s=void 0;return new o.default(function(o){var a=i._url+"/children/"+e,u=i._getChildInput(n);u.data=t,u.children=e,s=new f.default(u),r&&(s.identity=r),s.share(),v.log("[DataObject.addChild] added ",s),s.onChange(function(e){i._onChange(e,{path:a,childId:u.url})}),i._childrenObjects.hasOwnProperty(e)||(i._childrenObjects[e]={}),i._childrenObjects[e][u.url]=s,o(s)})}},{key:"_deleteChildrens",value:function(){var e=this,t=[];return new o.default(function(r){if(e.childrens){v.log("[DataObject.deleteChildrens]",e.childrens);var n=void 0;for(n in e.childrens){var i=void 0;for(i in e.childrens[n]){var s=e.childrens[n][i];v.log("[DataObject._deleteChildrens] child",s),s.metadata.hasOwnProperty("resourceType")&&t.push(e.childrens[n][i].delete())}}}v.log("[DataObject._deleteChildrens] promises ",t),t.length>0?o.default.all(t).then(function(){r("[DataObject._deleteChildrens] done")}):r("[DataObject._deleteChildrens] nothing to delete")})}},{key:"_getChildInput",value:function(e){var t=(0,s.default)({},e);return this._childId++,t.url=this._owner+"#"+this._childId,t.parentObject=this,t.reporter=this._owner,t.created=(new Date).toISOString(),t.runtime=this._syncher._runtimeUrl,t.p2pHandler=this._syncher._p2pHandler,t.p2pRequester=this._syncher._p2pRequester,t.schema=this._schema,t.parent=this.url,t}},{key:"addHypertyResource",value:function(e,t,r,n,i){var s=this;return new o.default(function(o){var a=void 0,u=s._url+"/children/"+e,c=s._getChildInput(i);c.children=e,s._hypertyResourceFactory.createHypertyResourceWithContent(!0,t,r,c).then(function(t){a=t,n&&(a.identity=n),a.share(),v.log("[DataObject.addHypertyResource] added ",a),a.onChange(function(e){s._onChange(e,{path:u,childId:a.childId})}),s._childrenObjects.hasOwnProperty(e)||(s._childrenObjects[e]={}),s._childrenObjects[e][a.childId]=a,o(a)})})}},{key:"onAddChild",value:function(e){this._onAddChildrenHandler=e}},{key:"_onChildCreate",value:function(e){v.log("[DataObject._onChildCreate] receivedBy "+this._owner+" : ",e);var t={from:e.to,to:e.from,type:"response",id:e.id,body:{code:100}};this._bus.postMessage(t),e.body.value.resourceType?this._onHypertyResourceAdded(e):this._onChildAdded(e)}},{key:"_onChildAdded",value:function(e){var t=(0,p.deepClone)(e.body.value);t.parentObject=this;var r=t.children,n=new f.default(t);n.identity=e.body.identity,this._childrenObjects.hasOwnProperty(r)||(this._childrenObjects[r]={}),this._childrenObjects[r][t.url]=n,e.to===this.metadata.url&&n.store(),this._hypertyEvt(e,n)}},{key:"_onHypertyResourceAdded",value:function(e){var t=e.body.value,r=void 0,n=t.children;t.parentObject=this,(r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t)).identity=e.body.identity,this._childrenObjects.hasOwnProperty(n)||(this._childrenObjects[n]={}),this._childrenObjects[n][r.childId]=r,this._hypertyEvt(e,r),e.to===this.metadata.url&&r.store()}},{key:"_hypertyEvt",value:function(e,t){var r={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(r.resource=t),this._onAddChildrenHandler&&this._onAddChildrenHandler(r)}},{key:"_onChange",value:function(e,t){if(this._metadata.lastModified=(new Date).toISOString(),this._version++,"live"===this._status){var r={type:"update",from:this._url,to:this._url+"/changes",body:{version:this._version,source:this._owner,attribute:e.field,lastModified:this._metadata.lastModified}};v.log("[DataObject - _onChange] - ",e,t,r),e.oType===l.ObjectType.OBJECT?e.cType!==l.ChangeType.REMOVE&&(r.body.value=(0,p.deepClone)(e.data)):(r.body.attributeType=e.oType,r.body.value=e.data,e.cType!==l.ChangeType.UPDATE&&(r.body.operation=e.cType)),t&&(r.to=t.path,r.body.resource=t.childId),this.data._mutual||(r.body.mutual=this._mutual),this._bus.postMessage(r)}}},{key:"_changeObject",value:function(e,t){if(this._version+1<=t.body.version){this._version=t.body.version;var r,o=t.body.attribute;r="object"===(0,n.default)(t.body.value)?(0,p.deepClone)(t.body.value):t.body.value;var i=e.findBefore(o);if(t.body.lastModified?this._metadata.lastModified=t.body.lastModified:this._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===l.ObjectType.ARRAY)if(t.body.operation===l.ChangeType.ADD){var s=i.obj,a=i.last;Array.prototype.splice.apply(s,[a,0].concat(r))}else if(t.body.operation===l.ChangeType.REMOVE){var u=i.obj,c=i.last;u.splice(c,r)}else i.obj[i.last]=r;else t.body.hasOwnProperty("value")?i.obj[i.last]=r:delete i.obj[i.last]}else v.log("UNSYNCHRONIZED VERSION: (data => "+this._version+", msg => "+t.body.version+")")}},{key:"_changeChildren",value:function(e){var t=(0,p.divideURL)(e.to).identity,r=t?t.substring(t.lastIndexOf("/")+1):void 0,n=e.body.resource,o=this._childrenObjects[r][n];v.log("Change children: ",this._owner,e,r),o?this._changeObject(o._syncObj,e):v.warn("No children found for: ",n)}},{key:"metadata",get:function(){return this._metadata}},{key:"url",get:function(){return this._url}},{key:"schema",get:function(){return this._schema}},{key:"status",get:function(){return this._status}},{key:"data",get:function(){return this._syncObj.data}},{key:"childrens",get:function(){return this._childrenObjects}}]),e}();t.default=b,e.exports=t.default},function(e,t){!function(){"use strict";if(!Object.observe&&"function"==typeof Proxy){function e(e,t,r,n,o,i){var s,a=this;function u(e,n){if(u.delay=n,!u.pause&&a.changeset.length>0){if(!e){var o=a.changeset.filter(function(e){return!r||r.indexOf(e.type)>=0});o.length>0&&t(o)}a.changeset=[]}}return u.pause=o,u.delay=i,a.get=function(e,t){return"__observer__"===t?a:"unobserve"===t?function(){return Object.unobserve(e),e}:"deliver"===t?u:e[t]},a.target=e,a.changeset=[],a.target.__observerCallbacks__||(Object.defineProperty(e,"__observerCallbacks__",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,"__observers__",{enumerable:!1,configurable:!0,writable:!1,value:[]})),a.target.__observerCallbacks__.push(t),a.target.__observers__.push(this),s=new Proxy(e,a),u(!1,i),s}e.prototype.deliver=function(){return this.get(null,"deliver")},e.prototype.set=function(e,t,r){var n=e[t],o=void 0===n?"add":"update";if(e[t]=r,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(o)>=0)){var i={object:e,name:t,type:o},s=0===this.changeset.length,a=this.deliver();"update"===o&&(i.oldValue=n),this.changeset.push(i),s&&a(!1,"number"==typeof a.delay?a.delay:10)}return!0},e.prototype.deleteProperty=function(e,t){var r=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("delete")>=0){var n={object:e,name:t,type:"delete",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.defineProperty=function(e,t,r){if(Object.defineProperty(e,t,r),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("reconfigure")>=0){var n={object:e,name:t,type:"reconfigure"},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.setPrototypeOf=function(e,t){var r=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("setPrototype")>=0){var n={object:e,name:"__proto__",type:"setPrototype",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},e.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("preventExtensions")>=0){var t={object:e,type:"preventExtensions"},r=0===this.changeset.length,n=this.deliver();this.changeset.push(t),r&&n(!1,"number"==typeof n.delay?n.delay:10)}return!0},Object.observe=function(t,r,n,o,i,s){return new e(t,r,n,o,i,s)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(r,n){t===r&&(e.__observerCallbacks__.splice(n,1),delete e.__observers__[n].callback,e.__observers__.splice(n,1))})}},Array.observe=function(e,t,r,n,o,i){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError("First argument to Array.observer is not an Array");r=r||["add","update","delete","splice"];var s=new Proxy(e,{get:function(t,n){return"unobserve"===n?function(e){return e?Object.unobserve(t,e):t.unobserve()}:"splice"===n?function(n,o){if("number"!=typeof n||"number"!=typeof o)throw new TypeError("First two arguments to Array splice are not number, number");var i=this.slice(n,n+o),s=arguments.length>1?arguments.length-2:0,u={object:e,type:"splice",index:n,removed:i,addedCount:s};if(t.splice.apply(t,arguments),r.indexOf("splice")>=0){n=0===a.__observer__.changeset.length;var c=a.__observer__.deliver();a.__observer__.changeset.push(u),n&&c(!1,"number"==typeof c.delay?c.delay:10)}}:"push"===n?function(e){return this.splice(this.length,0,e)}:"pop"===n?function(){return this.splice(this.length-1,1)}:"unshift"===n?function(e){return this.splice(0,0,e)}:"shift"===n?function(){return this.splice(0,1)}:t[n]}}),a=Object.observe(s,function(e){var n=e.filter(function(e){return"length"!==e.name&&"add"!==e.name&&(!r||r.indexOf(e.type)>=0)});n.length>0&&t(n)},r,n,o,i);return a},Array.unobserve=function(e,t){return e.unobserve(t)}}Object.deepObserve=function(e,t,r){var n=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()};function o(e,r){Object.keys(e).forEach(function(o){if(("object"===n(e[o])||"array"===n(e[o]))&&!e[o].hasOwnProperty("__observers__")){var i=r.slice(0);i.push(o),e[o]=Object.deepObserve(e[o],t,i)}})}return o(e,r=r||[]),Object.observe(e,function(e){var n=[];e.forEach(function(e){var t=(r.length>0?r.join(".")+".":"")+e.name;"update"!==e.type&&"add"!==e.type||o(e.object,r),n.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),function e(t,r,o,i,s){i instanceof Object?Object.keys(i).forEach(function(a){if(!o||o[a]!==i[a]){var u=o&&void 0!==o[a]?o[a]:void 0,c=void 0===u?"add":"update",l=s+"."+a;n.push({name:t,object:r,type:c,oldValue:u,newValue:i[a],keypath:l}),e(t,r,u,i[a],l)}}):o instanceof Object&&Object.keys(o).forEach(function(a){var u=null===i?"update":"delete",c=s+"."+a;n.push({name:t,object:r,type:u,oldValue:o[a],newValue:i,keypath:c}),e(t,r,o[a],void 0,c)})}(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(n)})}}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(r(18)),o=f(r(25)),i=f(r(3)),s=f(r(5)),a=f(r(33)),u=f(r(34)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=f(r(129)),d=(r(19),f(r(130)));function f(e){return e&&e.__esModule?e:{default:e}}var p=c.getLogger("FileHypertyResource"),h=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e,r));return n.metadata.resourceType="file",n}return(0,u.default)(t,e),(0,s.default)(t,[{key:"init",value:function(e){var t=this;if(!e)throw new Error("[FileHypertyResource.constructor] missing mandatory *file* input ");return new n.default(function(r,n){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,p.log("[FileHypertyResource.init] file: ",e),t._isSender)switch(e.type.split("/")[0]){case"image":t._getImagePreview(e).then(function(n){t._metadata.preview=n,t._content=e,r()});break;default:t._content=e,r()}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),r()})}},{key:"_getImagePreview",value:function(e){var t=new FileReader;return new n.default(function(r,n){d.default.resize(e,{width:100,height:100},function(e,n){n?(t.readAsDataURL(e),t.onload=function(e){r(e.target.result)}):(p.warn("[FileHypertyResource._getImagePreview] unable to create image preview from original image "),r(void 0))})})}},{key:"toMessage",value:function(){}},{key:"name",get:function(){return this._metadata.name}},{key:"preview",get:function(){return this._metadata.preview}}]),t}(l.default);t.default=h,e.exports=t.default},function(e,t,r){e.exports={default:r(126),__esModule:!0}},function(e,t,r){r(127);var n=r(0).Object;e.exports=function(e,t){return n.getOwnPropertyDescriptor(e,t)}},function(e,t,r){var n=r(12),o=r(46).f;r(44)("getOwnPropertyDescriptor",function(){return function(e,t){return o(n(e),t)}})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(r(18)),o=a(r(3)),i=a(r(5)),s=a(r(124));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(){(0,o.default)(this,e)}return(0,i.default)(e,[{key:"createHypertyResource",value:function(e,t,r){var n=void 0;switch(t){case"file":n=new s.default(e,r);break;default:throw new Error("[HypertyResourceFactory.createHypertyResource] not supported type: ",t)}return n}},{key:"createHypertyResourceWithContent",value:function(e,t,r,o){var i=void 0;return new n.default(function(n){switch(t){case"file":i=new s.default(e,o);break;default:reject()}i.init(r).then(function(){return i.save()}).then(function(){n(i)})})}}]),e}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=p(r(18)),o=p(r(25)),i=p(r(3)),s=p(r(5)),a=p(r(33)),u=p(r(100)),c=p(r(34)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),d=r(19),f=p(r(118));function p(e){return e&&e.__esModule?e:{default:e}}var h=l.getLogger("HypertyResource"),y=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,r)),s=n;return s.arraybufferSizeLimit=5242880,s._isSender=e,s._localStorageURL=s._parentObject._syncher._runtimeUrl+"/storage",n}return(0,c.default)(t,e),(0,s.default)(t,[{key:"save",value:function(){var e=this;return new n.default(function(t,r){var n={from:e._owner,to:e._localStorageURL,type:"create",body:{value:(0,d.deepClone)(e._metadata)}};n.body.value.content=e._content,e._bus.postMessage(n,function(n){h.info("[HypertyResource.save] reply: ",n),e._bus.removeResponseListener(e._owner,n.id),200===n.body.code?(n.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(n.body.value)),t()):r(n.body.code+" "+n.body.desc)},!1)})}},{key:"read",value:function(e){var t=this;return h.info("[HypertyResource.read] ",this),new n.default(function(r,n){if(t.content)r(t);else{var o=t._getBestContentURL(t._metadata.contentURL);h.log("Storage:",o);var i={from:t._owner,to:o.url,type:"read",body:{resource:o.url+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(i.body.p2pRequester=t.metadata.p2pRequester,i.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(i,e).then(function(e){h.info("[HypertyResource] - get locally the resource:",e),r(t)}).catch(function(i){h.warn("[HypertyResource] - get locally the resource fail",i);var s={from:t._owner,to:o.remoteURL,type:"read",body:{resource:o.remoteURL+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(s.body.p2pRequester=t.metadata.p2pRequester,s.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(s,e).then(function(e){h.warn("[HypertyResource] - get remotely the resource",e),r(t)}).catch(function(e){h.warn("[HypertyResource] - get remotely the resource fail",e),n(e.body.code+" "+e.body.desc)})})}})}},{key:"_getBestResource",value:function(e,t){var r=this;return new n.default(function(n,o){var i=setTimeout(function(){return r._bus.removeResponseListener(r._owner,s),e.body.code=408,e.body.desc="Response timeout",o(e)},3e3),s=r._bus.postMessage(e,function(e){h.log("[HypertyResource.read] reply: ",e);var s=e.id;switch(clearTimeout(i),e.body.code){case 200:r._content=e.body.value.content,e.body.value.size<r.arraybufferSizeLimit&&r.save(),r._bus.removeResponseListener(r._owner,s),n(e);break;case 183:t(e.body.value);break;default:r._bus.removeResponseListener(r._owner,s),o(e)}},!1)})}},{key:"delete",value:function(){var e=this;h.info("[HypertyResource.delete]",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:"delete",body:{resources:e.metadata.contentURL}};return new n.default(function(r){e._bus.postMessage(t,function(e){e.body.code<300?r(!0):r(!1)})})}},{key:"_getBestContentURL",value:function(e){var t=e[0],r=t.substr(t.lastIndexOf("/")+1);return{url:this._localStorageURL,resource:r,remoteURL:t.substr(0,t.lastIndexOf("/"))}}},{key:"resourceType",get:function(){return this.metadata.resourceType}},{key:"mimetype",get:function(){return this._metadata.type}},{key:"content",get:function(){return this._content}},{key:"contentURL",get:function(){return this._metadata.contentURL}},{key:"shareable",get:function(){var e=(0,u.default)(t.prototype.__proto__||(0,o.default)(t.prototype),"metadata",this);return e.resourceType=this.resourceType,e}}]),t}(f.default);t.default=y,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s="undefined"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),a=s&&"undefined"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),u="undefined"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,c=u||"undefined"!=typeof Uint8Array&&"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof atob,l="undefined"!=typeof FileReader||"undefined"!=typeof URL,d=function(){function e(){(0,n.default)(this,e)}return(0,o.default)(e,null,[{key:"resize",value:function(t,r,n){if("function"==typeof r&&(n=r,r={width:640,height:480}),r.width,r.height,!e.isSupported()||!t.type.match(/image.*/))return n(t,!1),!1;if(t.type.match(/image\/gif/))return n(t,!1),!1;var o=document.createElement("img");return o.onload=function(i){var s=o.width,a=o.height,c=!1;if(s>=a&&s>r.width?(a*=r.width/s,s=r.width,c=!0):a>r.height&&(s*=r.height/a,a=r.height,c=!0),c){var l=document.createElement("canvas");if(l.width=s,l.height=a,l.getContext("2d").drawImage(o,0,0,s,a),u)l.toBlob(function(e){n(e,!0)},t.type);else{var d=e._toBlob(l,t.type);n(d,!0)}}else n(t,!1)},e._loadImage(o,t),!0}},{key:"_toBlob",value:function(e,t){var r=e.toDataURL(t).split(","),n=void 0;n=r[0].indexOf("base64")>=0?atob(r[1]):decodeURIComponent(r[1]);for(var o=new ArrayBuffer(n.length),i=new Uint8Array(o),u=0;u<n.length;u+=1)i[u]=n.charCodeAt(u);var c=r[0].split(":")[1].split(";")[0],l=null;if(s)l=new Blob([a?i:o],{type:c});else{var d=new BlobBuilder;d.append(o),l=d.getBlob(c)}return l}},{key:"_loadImage",value:function(e,t,r){if("undefined"==typeof URL){var n=new FileReader;n.onload=function(t){e.src=t.target.result,r&&r()},n.readAsDataURL(t)}else e.src=URL.createObjectURL(t),r&&r()}},{key:"isSupported",value:function(){return"undefined"!=typeof HTMLCanvasElement&&c&&l}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(r(18)),o=f(r(78)),i=f(r(3)),s=f(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19),c=f(r(132)),l=f(r(133)),d=f(r(135));function f(e){return e&&e.__esModule?e:{default:e}}var p=a.getLogger("Syncher"),h=function(){function e(t,r,n){(0,i.default)(this,e);var o=this;o._owner=t,o._bus=r,o._subURL=n.runtimeURL+"/sm",o._runtimeUrl=n.runtimeURL,o._p2pHandler=n.p2pHandler,o._p2pRequester=n.p2pRequester,o._reporters={},o._observers={},o._provisionals={},r.addListener(t,function(e){if(e.from!==t)switch(p.info("[Syncher] Syncher-RCV: ",e,o),e.type){case"forward":o._onForward(e);break;case"create":o._onRemoteCreate(e);break;case"delete":o._onRemoteDelete(e);break;case"execute":o._onExecute(e)}})}return(0,s.default)(e,[{key:"create",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"no name",a=arguments[6],c=arguments[7];if(!e)throw Error("[Syncher - Create] - You need specify the data object schema");if(!t)throw Error("[Syncher - Create] -The observers should be defined");c=c||{};var l=(0,o.default)({},c);return l.p2p=i,l.store=n,l.schema=e,l.authorise=t,l.p2pHandler=this._p2pHandler,l.p2pRequester=this._p2pRequester,l.data=r?(0,u.deepClone)(r):{},l.name=0===s.length?"no name":s,l.reporter=c.hasOwnProperty("reporter")&&"boolean"!=typeof c.reporter?c.reporter:this._owner,l.resume=!1,c?(l.mutual=!c.hasOwnProperty("mutual")||c.mutual,l.name=c.hasOwnProperty("name")?c.name:l.name):l.mutual=!0,c.hasOwnProperty("reuseURL")&&(l.resource=c.reuseURL),a&&(l.identity=a),p.log("[syncher - create] - create Reporter - createInput: ",l),this._create(l)}},{key:"resumeReporters",value:function(e){return p.log("[syncher - create] - resume Reporter - criteria: ",e),(0,o.default)(e,{resume:!0}),this._resumeCreate(e)}},{key:"subscribe",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments[5],a={};return a.p2p=n,a.store=r,a.schema=e,a.resource=t,s&&(a.identity=s),a.mutual=i,p.log("[syncher - subscribe] - subscribe criteria: ",a),(0,o.default)(a,{resume:!1}),this._subscribe(a)}},{key:"resumeObservers",value:function(e){var t=e||{};return(0,o.default)(t,{resume:!0}),this._resumeSubscribe(t)}},{key:"read",value:function(e){var t=this,r={type:"read",from:t._owner,to:e};return new n.default(function(e,n){t._bus.postMessage(r,function(i){p.log("[Syncher.read] reply: ",i);var s={},a={},u=0;if(i.body.code<300)if(i.body.value.hasOwnProperty("responses"))if(0===u)a=i.body.value,++u;else{delete i.body.value.responses;var c=void 0;for(c in i.body.value)s.hasOwnProperty(c)||(s[c]={}),(0,o.default)(s[c],i.body.value[c]);++u===a.responses&&(a.childrenObjects=s,delete a.responses,t._bus.removeResponseListener(r.from,i.id),e(a))}else t._bus.removeResponseListener(r.from,i.id),e(i.body.value);else n(i.body.desc)},!1)})}},{key:"onNotification",value:function(e){this._onNotificationHandler=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"_create",value:function(e){var t=this;return new n.default(function(r,n){var i=(0,o.default)({},e),s=e.resume;i.created=(new Date).toISOString(),i.runtime=t._runtimeUrl;var a=(0,u.deepClone)(i);delete a.p2p,delete a.store,delete a.observers,delete a.identity;var l={type:"create",from:t._owner,to:t._subURL,body:{resume:s,value:a}};l.body.schema=i.schema,i.p2p&&(l.body.p2p=i.p2p),i.store&&(l.body.store=i.store),i.identity&&(l.body.identity=i.identity),p.log("[syncher._create]: ",i,l),t._bus.postMessage(l,function(o){if(p.log("[syncher - create] - create-response: ",o),200===o.body.code){i.url=o.body.resource,i.status="live",i.syncher=t,i.childrens=o.body.childrenResources;var s=t._reporters[i.url];s||(s=new c.default(i),t._reporters[i.url]=s),s.inviteObservers(e.authorise,e.p2p),r(s)}else n(o.body.desc)})})}},{key:"_resumeCreate",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i=e.resume,s={type:"create",from:r._owner,to:r._subURL,body:{resume:i}};p.log("[syncher - create]: ",e,s),e&&(s.body.value=e,e.hasOwnProperty("reporter")?s.body.value.reporter=e.reporter:s.body.value.reporter=r._owner),e.p2p&&(s.body.p2p=e.p2p),e.store&&(s.body.store=e.store),e.observers&&(s.body.authorise=e.observers),e.identity&&(s.body.identity=e.identity),p.log("[syncher._resumeCreate] - resume message: ",s),r._bus.postMessage(s,function(e){if(p.log("[syncher._resumeCreate] - create-resumed-response: ",e),200===e.body.code){var i=e.body.value;for(var s in i){var a=i[s];a.data=(0,u.deepClone)(a.data)||{},a.childrenObjects&&(a.childrenObjects=(0,u.deepClone)(a.childrenObjects)),a.mutual=!1,a.resume=!0,a.status="live",a.syncher=r,p.log("[syncher._resumeCreate] - create-resumed-dataObjectReporter",a);var l=new c.default(a);a.childrenObjects&&l.resumeChildrens(a.childrenObjects),r._reporters[a.url]=l}n(r._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_subscribe",value:function(e){var t=this;return new n.default(function(r,n){var o={type:"subscribe",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(o.body.p2p=e.p2p),e.hasOwnProperty("store")&&(o.body.store=e.store),e.hasOwnProperty("schema")&&(o.body.schema=e.schema),e.hasOwnProperty("identity")&&(o.body.identity=e.identity),e.hasOwnProperty("resource")&&(o.body.resource=e.resource)),o.body.resume=e.resume,e.hasOwnProperty("mutual")&&(o.body.mutual=e.mutual),p.log("[syncher_subscribe] - subscribe message: ",e,o),t._bus.postMessage(o,function(o){p.log("[syncher] - subscribe-response: ",o);var i=o.body.resource,s=t._provisionals[i];if(delete t._provisionals[i],s&&s._releaseListeners(),o.body.code<200)p.log("[syncher] - new DataProvisional: ",o.body.childrenResources,i),s=new d.default(t._owner,i,t._bus,o.body.childrenResources),t._provisionals[i]=s;else if(200===o.body.code){p.log("[syncher] - new Data Object Observer: ",o,t._provisionals);var a=o.body.value;a.syncher=t,a.p2p=e.p2p,a.store=e.store,a.identity=e.identity,a.resume=!1,a.mutual=e.mutual;var u=t._observers[i];u?u.sync():(u=new l.default(a),t._observers[i]=u),p.log("[syncher] - new Data Object Observer already exist: ",u),r(u),s&&s.apply(u)}else n(o.body.desc)})})}},{key:"_resumeSubscribe",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i={type:"subscribe",from:r._owner,to:r._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(i.body.p2p=e.p2p),e.hasOwnProperty("store")&&(i.body.store=e.store),e.hasOwnProperty("schema")&&(i.body.schema=e.schema),e.hasOwnProperty("identity")&&(i.body.identity=e.identity),e.hasOwnProperty("resource")&&(i.body.resource=e.url)),i.body.resume=e.resume;var s=e.mutual;e.hasOwnProperty("mutual")&&(i.body.mutual=s),p.log("[syncher] - subscribe message: ",e,i),r._bus.postMessage(i,function(e){p.log("[syncher] - subscribe-resumed-response: ",e);var i=e.body.resource,s=r._provisionals[i];if(delete r._provisionals[i],s&&s._releaseListeners(),e.body.code<200)p.log("[syncher] - resume new DataProvisional: ",e,i),s=new d.default(r._owner,i,r._bus,e.body.childrenResources),r._provisionals[i]=s;else if(200===e.body.code){var a=e.body.value;for(var c in a){var f=a[c];p.log("[syncher] - Resume Object Observer: ",e,f,r._provisionals),f.childrenObjects&&(f.childrenObjects=(0,u.deepClone)(f.childrenObjects)),f.data=(0,u.deepClone)(f.data)||{},f.resume=!0,f.syncher=r,p.log("[syncher._resumeSubscribe] - create new dataObject: ",f);var h=new l.default(f);f.childrenObjects&&h.resumeChildrens(f.childrenObjects),p.log("[syncher._resumeSubscribe] - new dataObject",h),r._observers[h.url]=h,r._provisionals[h.url]&&r._provisionals[h.url].apply(h)}n(r._observers),t._onObserversResume&&t._onObserversResume(r._observers)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_onForward",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:"_onRemoteCreate",value:function(e){var t=this,r=e.from.slice(0,-13),n=(0,u.divideURL)(r).domain,o={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})}};t._onNotificationHandler&&(p.info("[Syncher] NOTIFICATION-EVENT: ",o),t._onNotificationHandler(o))}},{key:"_onRemoteDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(p.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:"_onExecute",value:function(e){var t=this,r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+"/registry/"||e.from===t._runtimeUrl+"/registry")&&e.body&&e.body.method&&"close"===e.body.method&&t._onClose){var n={type:"close",ack:function(e){e&&(r.body.code=e),t._bus.postMessage(r)}};p.info("[Syncher] Close-EVENT: ",n),t._onClose(n)}else t._bus.postMessage(r)}},{key:"onReportersResume",value:function(e){this._onReportersResume=e}},{key:"onObserversResume",value:function(e){this._onObserversResume=e}},{key:"owner",get:function(){return this._owner}},{key:"reporters",get:function(){return this._reporters}},{key:"observers",get:function(){return this._observers}}]),e}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(42)),o=y(r(58)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=y(r(122)),h=r(19);function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger("DataObjectReporter"),b=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._subscriptions={},n._syncObj.observe(function(e){v.log("[Syncher.DataObjectReporter] "+n.url+" publish change: ",e),n._onChange(e)}),n._allocateListeners(),n.invitations=[],n._childrenSizeThreshold=5e4,r}return(0,d.default)(t,e),(0,u.default)(t,[{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(v.log("[Syncher.DataObjectReporter] listener "+e._url+" Received: ",t),t.type){case"response":e._onResponse(t);break;case"read":e._onRead(t);break;case"execute":e._onExecute(t);break;case"create":e._onChildCreate(t)}})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_releaseListeners",this).call(this),this._objectListener.remove()}},{key:"inviteObservers",value:function(e,t){var r=this,n=e;n.length>0&&(v.log("[Syncher.DataObjectReporter] InviteObservers ",n,r._metadata),n.forEach(function(e){var n=new i.default(function(n,o){var i={type:"create",from:r._syncher._owner,to:r._syncher._subURL,body:{resume:!1,resource:r._url,schema:r._schema,value:r._metadata,authorise:[e]}};t&&(i.body.p2p=t),r.data.mutual||(i.body.mutual=r.data.mutual),r._bus.postMessage(i,function(t){v.log("[Syncher.DataObjectReporter] Invitation reply ",t);var r={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:"Unknown"};r.code<300?n(r):r.code>=300&&o(r)})});r.invitations.push(n)}))}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(t){v.log(t);var r={type:"delete",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(r,function(t){v.log("DataObjectReporter-DELETE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:"onSubscription",value:function(e){this._onSubscriptionHandler=e}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"onRead",value:function(e){this._onReadHandler=e}},{key:"onExecute",value:function(e){this._onExecuteHandler=e}},{key:"_onForward",value:function(e){switch(v.log("DataObjectReporter-RCV: ",e),e.body.type){case"subscribe":this._onSubscribe(e);break;case"unsubscribe":this._onUnSubscribe(e)}}},{key:"_onSubscribe",value:function(e){var t=this,r=e.body.from,n=(0,h.divideURL)(r),o=n.domain,i=!0;e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i=!1),v.log("[DataObjectReporter._onSubscribe]",e,o,n);var s={type:e.body.type,url:r,domain:o,identity:e.body.identity,nutual:i,accept:function(){var n={url:r,status:"live"};t._subscriptions[r]=n,t.metadata.subscriptions&&t.metadata.subscriptions.push(n.url);var o=(0,h.deepClone)(t._metadata);o.data=(0,h.deepClone)(t.data),o.version=t._version;var i={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:o}};return e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i.body.mutual=e.body.mutual,t.data.mutual=!1),t._bus.postMessage(i),n},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:403,desc:r}})}};t._onSubscriptionHandler&&(v.log("SUBSCRIPTION-EVENT: ",s),t._onSubscriptionHandler(s))}},{key:"_onUnSubscribe",value:function(e){var t=e.body.from,r=(0,h.divideURL)(t),n=r.domain;v.log("[DataObjectReporter._onUnSubscribe]",e,n,r),delete this._subscriptions[t],delete this.invitations[t];var o={type:e.body.type,url:t,domain:n,identity:e.body.identity};this._onSubscriptionHandler&&(v.log("UN-SUBSCRIPTION-EVENT: ",o),this._onSubscriptionHandler(o))}},{key:"_onResponse",value:function(e){var t={type:e.type,url:e.from,code:e.body.code};this._onResponseHandler&&(v.log("RESPONSE-EVENT: ",t),this._onResponseHandler(t))}},{key:"_onRead",value:function(e){var t=this,r=(0,o.default)(t.childrensJSON).length>t._childrenSizeThreshold,i={type:e.type,url:e.from,accept:function(){r?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}},s=[];t.metadata.subscriptions?s=t.metadata.subscriptions:t._subscriptions&&(s=(0,n.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=s.indexOf(e.from)?r?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(v.log("READ-EVENT: ",i),t._onReadHandler(i))}},{key:"_syncReply",value:function(e){var t=(0,h.deepClone)(this.metadata);t.data=(0,h.deepClone)(this.data),t.childrenObjects=(0,h.deepClone)(this.childrensJSON),t.version=this._version;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:t}};this._bus.postMessage(r)}},{key:"_syncReplyForLargeData",value:function(e){var t=this,r=(0,h.deepClone)(t.metadata);r.data=(0,h.deepClone)(t.data),r.version=t._version,delete r.childrenObjects;var n=void 0,i=[],s={};for(n in t._childrenObjects){var a=void 0;for(a in s[n]={},t._childrenObjects[n])(0,o.default)(s).length>t._childrenSizeThreshold&&(i.push(s),(s={})[n]={}),s[n][a]={},s[n][a].value=t._childrenObjects[n][a].metadata,s[n][a].identity=t._childrenObjects[n][a].identity}i.push(s),r.responses=i.length+1;var u={id:e.id,type:"response",from:e.to,to:e.from,body:{code:100,value:r}};t._bus.postMessage(u),i.forEach(function(e){var n=(0,h.deepClone)(u);n.body.value=e,n.body.value.responses=r.responses,setTimeout(function(){t._bus.postMessage(n)},50)})}},{key:"_onExecute",value:function(e){var t=this;if(!e.body.method)throw e;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}},n={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(r)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}};t._onExecuteHandler&&(v.log("[DataObjectReporter] EXECUTE-EVENT: ",n),t._onExecuteHandler(n))}},{key:"subscriptions",get:function(){return this._subscriptions}},{key:"childrensJSON",get:function(){var e={},t=void 0;for(t in this._childrenObjects){var r=void 0;for(r in e[t]={},this._childrenObjects[t])e[t][r]={},e[t][r].value=this._childrenObjects[t][r].metadata,e[t][r].identity=this._childrenObjects[t][r].identity}return e}}]),t}(p.default);t.default=b,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=y(r(42)),o=y(r(78)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=r(19),h=y(r(122));function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger("DataObjectObserver"),b="start",_="exact",m=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._version=e.version,n._filters={},n._syncObj.observe(function(e){n._onFilter(e)}),n._allocateListeners(),r}return(0,d.default)(t,e),(0,u.default)(t,[{key:"sync",value:function(){var e=this;return v.info("[DataObjectObserver_sync] synchronising "),new i.default(function(t,r){e._syncher.read(e._metadata.url).then(function(r){v.info("[DataObjectObserver_sync] value to sync: ",r),(0,o.default)(e.data,(0,p.deepClone)(r.data)),e._version=r.version,e._metadata.lastModified=r.lastModified,r.childrenObjects?(e.resumeChildrens(r.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){v.info("[DataObjectObserver_sync] sync failed: ",e),t(!1)})})}},{key:"_storeChildrens",value:function(){var e=this,t={};(0,n.default)(e._childrenObjects).forEach(function(r){var o=e._childrenObjects[r];t[r]={},(0,n.default)(o).forEach(function(e){t[r][e]={},t[r][e].value=o[e].metadata,t[r][e].identity=o[e].identity})});var r={from:e._owner,to:e._syncher._subURL,type:"create",body:{resource:e._url,attribute:"childrenObjects",value:t}};e._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_allocateListeners",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+"/changes",function(t){"update"===t.type&&(v.log("DataObjectObserver-"+e._url+"-RCV: ",t),e._changeObject(e._syncObj,t))})}},{key:"_releaseListeners",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),"_releaseListeners",this).call(this),this._changeListener.remove()}},{key:"delete",value:function(){var e=this;e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:"unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){v.log("DataObjectObserver-UNSUBSCRIBE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:"onChange",value:function(e,t){var r=e,n={type:_,callback:t},o=e.indexOf("*");o===e.length-1&&(0===o?n.type="any":(n.type=b,r=e.substr(0,e.length-1))),this._filters[r]=n}},{key:"_onFilter",value:function(e){var t=this;(0,n.default)(t._filters).forEach(function(r){var n=t._filters[r];"any"===n.type?n.callback(e):n.type===b?0===e.field.indexOf(r)&&n.callback(e):n.type===_&&e.field===r&&n.callback(e)})}},{key:"onDisconnected",value:function(e){var t=this;return new i.default(function(r,n){t._subscribeRegistration().then(function(){t._onDisconnected=e,r()}).catch(function(e){return n(e)})})}},{key:"_subscribeRegistration",value:function(){var e=this,t={type:"subscribe",from:this._owner,to:this._syncher._runtimeUrl+"/subscriptions",body:{resources:[this._url+"/registration"]}};return new i.default(function(r,n){e._bus.postMessage(t,function(t){v.log("[DataObjectObserver._subscribeRegistration] "+e._url+" rcved reply ",t),200===t.body.code?(e._generateListener(e._url+"/registration"),r()):(v.error("Error subscribing registration status for ",e._url),n("Error subscribing registration status for "+e._url))})})}},{key:"_generateListener",value:function(e){var t=this;t._bus.addListener(e,function(e){v.log("[DataObjectObserver.registrationNotification] "+t._url+": ",e),e.body.value&&"disconnected"===e.body.value&&t._onDisconnected&&(v.log("[DataObjectObserver] "+t._url+": was disconnected ",e),t._onDisconnected())})}},{key:"execute",value:function(e,t){var r=this,n=this;return new i.default(function(o,i){var s={type:"execute",from:r._owner,to:n._url,body:{method:e,params:t}};n._bus.postMessage(s,function(t){v.log("[DataObjectObserver.execute] "+n._url+" rcved reply ",t),200===t.body.code?o():(v.warn("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"),i("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"))})})}}]),t}(h.default);t.default=m,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(42)),o=c(r(18)),i=c(r(3)),s=c(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=a.getLogger("RegistrationStatus"),d=function(){function e(t,r,n,o){(0,i.default)(this,e),this._registryObjectURL=t,this._runtimeURL=r,this._domain=(0,u.divideURL)(r).domain,this._discoveredObjectURL=n,this._messageBus=o,this._subscriptionSet=!1,this._subscribers={live:{},disconnected:{}}}return(0,s.default)(e,[{key:"onLive",value:function(e,t){var r=this;return new o.default(function(n,o){r._subscriptionSet?(r._subscribers.live[e]=t,n()):r._subscribe().then(function(){r._subscribers.live[e]=t,n()}).catch(function(e){return o(e)})})}},{key:"onDisconnected",value:function(e,t){var r=this;return new o.default(function(n,o){r._subscriptionSet?(r._subscribers.disconnected[e]=t,n()):r._subscribe().then(function(){r._subscribers.disconnected[e]=t,n()}).catch(function(e){return o(e)})})}},{key:"_subscribe",value:function(){var e=this,t={type:"subscribe",from:this._discoveredObjectURL,to:this._runtimeURL+"/subscriptions",body:{resources:[this._registryObjectURL+"/registration"]}};return new o.default(function(r,n){e._messageBus.postMessage(t,function(t){l.log("[DiscoveredObject.subscribe] "+e._registryObjectURL+" rcved reply ",t),200===t.body.code?(e._generateListener(e._registryObjectURL+"/registration"),e._subscriptionSet=!0,r()):(l.error("Error subscribing ",e._registryObjectURL),n("Error subscribing "+e._registryObjectURL))})})}},{key:"_generateListener",value:function(e){var t=this;this._messageBus.addListener(e,function(e){l.log("[DiscoveredObject.notification] "+t._registryObjectURL+": ",e),t._processNotification(e)})}},{key:"_processNotification",value:function(e){var t=this,r=e.body.value;setTimeout(function(){(0,n.default)(t._subscribers[r]).forEach(function(e){return t._subscribers[r][e]()})},5e3)}},{key:"_unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:this._discoveredObjectURL,to:this._runtimeURL+"/subscriptions",body:{resource:this._registryObjectURL+"/registration"}};return new o.default(function(r,n){e._messageBus.postMessage(t,function(t){l.log("[DiscoveredObject.unsubscribe] "+e._registryObjectURL+" rcved reply ",t),200===t.body.code?r():(l.error("Error unsubscribing ",e._registryObjectURL),n("Error unsubscribing "+e._registryObjectURL))})})}},{key:"unsubscribeLive",value:function(e){var t=this;return new o.default(function(r,n){e in t._subscribers.live&&delete t._subscribers.live[e],t._areSubscriptionsEmpty()?t._unsubscribe().then(function(){return r()}).catch(function(e){return n(e)}):r()})}},{key:"unsubscribeDisconnected",value:function(e){var t=this;return new o.default(function(r,n){e in t._subscribers.disconnected?(delete t._subscribers.disconnected[e],t._areSubscriptionsEmpty()?t._unsubscribe().then(function(){return r()}).catch(function(e){return n(e)}):r()):n(e+" doesn't subscribe onDisconnected for "+t._registryObjectURL)})}},{key:"_areSubscriptionsEmpty",value:function(){return 0===(0,n.default)(this._subscribers.live).length&&0===(0,n.default)(this._subscribers.disconnected).length}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)).getLogger("DataProvisional"),a=function(){function e(t,r,o,i){(0,n.default)(this,e),this._owner=t,this._url=r,this._bus=o,this._children=i,this._changes=[],this._allocateListeners()}return(0,o.default)(e,[{key:"_allocateListeners",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){s.log("DataProvisional-"+e._url+"-RCV: ",t),e._changes.push(t)})}},{key:"_releaseListeners",value:function(){this._listener.remove()}},{key:"apply",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:"children",get:function(){return this._children}}]),e}();t.default=a,e.exports=t.default},,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(r(18)),o=c(r(3)),i=c(r(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=r(19),u=c(r(139));function c(e){return e&&e.__esModule?e:{default:e}}var l=s.getLogger("Discovery"),d=function(){function e(t,r,n){(0,o.default)(this,e),this.messageBus=n,this.runtimeURL=r,this.domain=(0,a.divideURL)(t).domain,this.discoveryURL=t}return(0,i.default)(e,[{key:"_isLegacyUser",value:function(e){return!(!e.includes(":")||e.includes("user://"))}},{key:"discoverHypertiesPerUserProfileData",value:function(e,t,r){var o=this,i=[],s={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/hyperty/userprofile/"+e}};return(t||r)&&(s.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){o._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):o.messageBus.postMessage(s,function(r){200===r.body.code?(r.body.value.map(function(e){e.hypertyID!=o.discoveryURL&&i.push(e)}),0===i.length?t([]):(l.log("[Discovery.discoverHypertiesPerUserProfileData] Reply log: ",i),t(i))):(l.warn("[Discovery.discoverHypertiesPerUserProfileData] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverHypertiesPerUserProfileDataDO",value:function(e,t,r){var o=this,i=arguments;return new n.default(function(e,t){o.discoverHypertiesPerUserProfileData.apply(o,i).then(function(t){e(o._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerUserProfileData",value:function(e,t,r){var o=this,i={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/dataObject/userprofile/"+e}};return(t||r)&&(i.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){o._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):o.messageBus.postMessage(i,function(r){200===r.body.code?(l.log("Reply log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerUserProfileData] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerUserProfileDataDO",value:function(e,t,r){var o=this,i=arguments;return new n.default(function(e,t){o.discoverDataObjectsPerUserProfileData.apply(o,i).then(function(t){return e(o._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHypertiesPerGUID",value:function(e,t,r){var o=this,i=[],s={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/hyperty/guid/"+e}};return(t||r)&&(s.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){o.messageBus.postMessage(s,function(n){200===n.body.code?(n.body.value.map(function(e){e.hypertyID!=o.discoveryURL&&i.push(e)}),0===i.length?r("No Hyperty was found"):(l.log("Reply log: ",i),t(i))):(l.warn("[Discovery.discoverHypertiesPerGUID] Error Reply for "+e+" Reason: ",n.body.description),t([]))})})}},{key:"discoverHypertiesPerGUIDDO",value:function(e,t,r){var o=this,i=arguments;return new n.default(function(e,t){o.discoverHypertiesPerGUID.apply(o,i).then(function(t){e(o._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerGUID",value:function(e,t,r){var o=this,i={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/dataObject/guid/"+e}};return(t||r)&&(i.body.criteria={resources:r,dataSchemes:t}),new n.default(function(t,r){o.messageBus.postMessage(i,function(r){200===r.body.code?(l.log("Reply log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerGUID] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerGUIDDO",value:function(e,t,r){var o=this,i=arguments;return new n.default(function(e,t){o.discoverDataObjectsPerGUID.apply(o,i).then(function(t){return e(o._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHyperties",value:function(e,t,r,o){var i,s=this,a=[];i=o||s.domain;var u={type:"read",from:s.discoveryURL,to:s.runtimeURL+"/discovery/",body:{resource:"/hyperty/user/"+e}};return u.body.criteria=t||r?{resources:r,dataSchemes:t,domain:i}:{domain:i},new n.default(function(t,r){s._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):s.messageBus.postMessage(u,function(r){200===r.body.code||500===r.body.code?(r.body.value.map(function(e){e.hypertyID!=s.discoveryURL&&a.push(e)}),l.log("[Discovery.discoverHyperties] Reply : ",a),t(a)):(l.warn("[Discovery.discoverHyperties] Error Reply for "+e+" Reason: ",r.body.description),t(a))})})}},{key:"discoverHypertiesDO",value:function(e,t,r,o){var i=this,s=arguments;return new n.default(function(e,t){i.discoverHyperties.apply(i,s).then(function(t){e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjects",value:function(e,t,r,o){var i,s=this;i=o||s.domain;var a={type:"read",from:s.discoveryURL,to:s.runtimeURL+"/discovery/",body:{resource:"/dataObject/user/"+e}};return a.body.criteria=t||r?{resources:r,dataSchemes:t,domain:i}:{domain:i},new n.default(function(t,r){s.messageBus.postMessage(a,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjects] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsDO",value:function(e,t,r,o){var i=this,s=arguments;return new n.default(function(e,t){i.discoverDataObjects.apply(i,s).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHypertyPerURL",value:function(e,t){var r,o=this;r=t||o.domain;var i={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/hyperty/url/"+e,criteria:{domain:r}}};return new n.default(function(t,r){o.messageBus.postMessage(i,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverHypertyPerURL] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverHypertyPerURLDO",value:function(e,t){var r=this,o=arguments;return new n.default(function(e,t){r.discoverHypertyPerURL.apply(r,o).then(function(t){return e(new u.default(t,r.runtimeURL,r.discoveryURL,r.messageBus,r))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectPerURL",value:function(e,t){var r,o=this;r=t||o.domain;var i={type:"read",from:o.discoveryURL,to:o.runtimeURL+"/discovery/",body:{resource:"/dataObject/url/"+e,criteria:{domain:r}}};return new n.default(function(t,r){o.messageBus.postMessage(i,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectPerURL] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectPerURLDO",value:function(e,t){var r=this,o=arguments;return new n.default(function(e,t){r.discoverDataObjectPerURL.apply(r,o).then(function(t){return e(new u.default(t,r.runtimeURL,r.discoveryURL,r.messageBus,r))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerName",value:function(e,t,r,o){var i,s=this;i=o||s.domain;var a={type:"read",from:s.discoveryURL,to:s.runtimeURL+"/discovery/",body:{resource:"/dataObject/name/"+e}};return a.body.criteria=t||r?{resources:r,dataSchemes:t,domain:i}:{domain:i},new n.default(function(t,r){s.messageBus.postMessage(a,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerName] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerNameDO",value:function(e,t,r,o){var i=this,s=arguments;return new n.default(function(e,t){i.discoverDataObjectsPerName.apply(i,s).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerReporter",value:function(e,t,r,o){var i,s=this;i=o||s.domain;var a={type:"read",from:s.discoveryURL,to:s.runtimeURL+"/discovery/",body:{resource:"/dataObject/reporter/"+e}};return a.body.criteria=t||r?{resources:r,dataSchemes:t,domain:i}:{domain:i},new n.default(function(t,r){s.messageBus.postMessage(a,function(r){200===r.body.code?(l.log("Reply Value Log: ",r.body.value),t(r.body.value)):(l.warn("[Discovery.discoverDataObjectsPerName] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerReporterDO",value:function(e,t,r,o){var i=this,s=arguments;return new n.default(function(e,t){i.discoverDataObjectsPerReporter.apply(i,s).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"_convertToDiscoveredObject",value:function(e){var t=this;return e.map(function(e){return new u.default(e,t.runtimeURL,t.discoveryURL,t.messageBus,t)})}},{key:"discoverDataObject",value:function(e,t,r,o){var i,s=this;i=o||s.domain;var a={type:"read",from:s.discoveryURL,to:"domain://registry."+i,body:{resource:e,criteria:{resources:r,dataSchemes:t}}};return new n.default(function(t,r){s.messageBus.postMessage(a,function(r){if(l.log("[Discovery]",r),r.body.code>299)return l.warn("[Discovery.discoverDataObject] Error Reply for "+e+" Reason: ",r.body.description),t([]);var n=r.body.value;t(n||[])})})}},{key:"discoverHyperty",value:function(e,t,r,o){var i,s=this,u=(0,a.convertToUserURL)(e);return i=o||s.domain,new n.default(function(n,a){if(l.log("[Discovery.discoverHyperty] ACTIVE DOMAIN -> ",i,"user->",e,"schema->",t,"resources->",r,"domain->",o),e.includes(":")&&!e.includes("user://"))return l.log("[Discovery.discoverHyperty] "+e+" is legacy domain"),n({userID:e,hypertyID:e,schema:t,resources:r});var c={type:"read",from:s.discoveryURL,to:"domain://registry."+i,body:{resource:u,criteria:{resources:r,dataSchemes:t}}};l.info("[Discovery] msg to send->",c),s.messageBus.postMessage(c,function(e){l.info("[Discovery] ON discoverHyperty->",e);var t=e.body.value;t?n(t):a("No Hyperty was found")})})}},{key:"discoverHypertyPerUser",value:function(e,t){var r=this,o=void 0;return new n.default(function(n,i){if(e.includes(":")&&!e.includes("user://"))return l.log("[Discovery.discoverHyperty] "+e+"is legacy domain"),n({id:e,hypertyURL:e,descriptor:"unknown"});o=t||r.domain;var s="user://"+e.substring(e.indexOf("@")+1,e.length)+"/"+e.substring(0,e.indexOf("@")),a={type:"read",from:r.discoveryURL,to:"domain://registry."+o,body:{resource:s}};l.info("[Discovery] Message: ",a,o,s),r.messageBus.postMessage(a,function(t){l.info("[Discovery] message reply",t);var r=void 0,o=void 0,s=void 0,a=t.body.value;for(r in a)if(void 0!==a[r].lastModified)if(void 0===o)o=new Date(a[r].lastModified),s=r;else{var u=new Date(a[r].lastModified);o.getTime()<u.getTime()&&(o=u,s=r)}l.info("[Discovery] Last Hyperty: ",s,o);var c=s;if(void 0===c)return i("User Hyperty not found");var d={id:e,descriptor:a[c].descriptor,hypertyURL:c};l.info("[Discovery] ===> hypertyDiscovery messageBundle: ",d),n(d)})})}},{key:"discoverHypertiesPerUser",value:function(e,t){var r=this,o=void 0;return l.log("on Function->",e),new n.default(function(n,i){if(e.includes(":")&&!e.includes("user://")){l.log("[Discovery.discoverHyperty] is legacy domain");var s={userID:e,hypertyID:e,schema:schema,resources:resources};return n(s)}o=t||r.domain;var a="user://"+e.substring(e.indexOf("@")+1,e.length)+"/"+e.substring(0,e.indexOf("@")),u={type:"read",from:r.discoveryURL,to:"domain://registry."+o,body:{resource:a}};l.log("[Discovery] Message discoverHypertiesPerUser: ",u,o,a),r.messageBus.postMessage(u,function(e){l.info("[Discovery] discoverHypertiesPerUser reply",e);var t=e.body.value;if(!t)return i("User Hyperty not found");n(t)})})}},{key:"resumeDiscoveries",value:function(){var e=this;return l.log("[Discovery] resumeDiscoveries"),new n.default(function(t,r){var o={type:"read",from:e.discoveryURL,to:e.runtimeURL+"/subscriptions",body:{resource:e.discoveryURL}};e.messageBus.postMessage(o,function(r){l.log("[Discovery.resumeDiscoveries] reply: ",r);var o=[];200===r.body.code?(r.body.value.forEach(function(t){var r=t.split("/registration")[0];l.log("[Discovery.resumeDiscoveries] adding listener to: ",r),r.includes("hyperty://")?o.push(e.discoverHypertyPerURLDO(r)):o.push(e.discoverDataObjectPerURLDO(r))}),n.default.all(o).then(function(e){t(e)})):t([])})})}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=u(r(25)),o=u(r(3)),i=u(r(33)),s=u(r(5)),a=u(r(34));function u(e){return e&&e.__esModule?e:{default:e}}r(19);var c=function(e){function t(e,r,s,a,u){(0,o.default)(this,t);var c=(0,i.default)(this,(t.__proto__||(0,n.default)(t)).call(this,e.hypertyID||e.url,r,s,a));return c._data=e,c._discovery=u,c}return(0,a.default)(t,e),(0,s.default)(t,[{key:"data",get:function(){return this._data}}]),(0,s.default)(t,[{key:"check",value:function(){var e=this,t={body:{}};e._discoveredObjectURL.startsWith("hyperty://")?e._discovery.discoverHypertyPerURL(e._discoveredObjectURL).then(function(r){t.body.status=r.status,e._processNotification(t)}):e._discovery.discoverDataObjectsPerURL(e._discoveredObjectURL).then(function(r){t.body.status=r.status,e._processNotification(t)})}}]),t}(u(r(134)).default);t.default=c,e.exports=t.default},,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(){(0,n.default)(this,e)}return(0,o.default)(e,[{key:"addEventListener",value:function(e,t){this[e]=t}},{key:"trigger",value:function(e,t){this[e]&&this[e](t)}}]),e}();t.default=s,e.exports=t.default},,,,,,,,,,,,,,,,,,,function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ContextReporter=t.ContextObserver=void 0;var n=i(r(163)),o=i(r(164));function i(e){return e&&e.__esModule?e:{default:e}}t.ContextObserver=n.default,t.ContextReporter=o.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=p(r(42)),o=p(r(18)),i=p(r(25)),s=p(r(3)),a=p(r(5)),u=p(r(33)),c=p(r(34)),l=p(r(131)),d=p(r(138)),f=r(19);function p(e){return e&&e.__esModule?e:{default:e}}var h=function(e){function t(e,r,n,o,a){if((0,s.default)(this,t),!e)throw new Error("The hypertyURL is a needed parameter");if(!r)throw new Error("The MiniBus is a needed parameter");if(!n)throw new Error("The configuration is a needed parameter ");var c=(0,u.default)(this,(t.__proto__||(0,i.default)(t)).call(this)),p=c;p._contextResourceTypes=o,p._url=e,p._discoverUsersPromises={},p._observePromises={},console.log("[ContextObserver] started with hypertyURL->",e),p._domain=(0,f.divideURL)(n.runtimeURL).domain,p._objectDescURL="hyperty-catalogue://catalogue."+p._domain+"/.well-known/dataschema/Context",p._users2observe=[],p._observers={},c._syncher=a||new l.default(e,r,n);var h=new d.default(e,n.runtimeURL,r);return p._discovery=h,p._discoveries={},window.discovery=p._discovery,c}return(0,c.default)(t,e),(0,a.default)(t,[{key:"start",value:function(e,t){var r=this;return console.log("[ContextObserver.start] "),new o.default(function(o,i){r._syncher.resumeObservers({store:!0}).then(function(i){var s=(0,n.default)(i);s.length>0?(console.log("[ContextObserver.start] resuming: ",i),r._observers=i,o(i),s.forEach(function(r){var n=i[r];e&&(context.data.values=e),n.sync(),t&&n.onDisconnected(t)})):o(!1)}).catch(function(e){console.info("[ContextObserver] Resume Observer failed | ",e),o(!1)})}).catch(function(e){reject("[ContextObserver] Start failed | ",e)})}},{key:"resumeDiscoveries",value:function(){var e=this;return new o.default(function(t,r){e._discovery.resumeDiscoveries().then(function(r){console.log("[ContextObserver._resumeDiscoveries] found: ",r),r.forEach(function(r){r.data.resources&&r.data.resources[0]===e._contextResourceTypes[0]&&(console.log("[ContextObserver._resumeDiscoveries] resuming: ",r),"live"===r.data.status?(t([r.data]),r.unsubscribeLive(e._url)):r.onLive(e._url,function(){console.log("[ContextObserver._resumeDiscoveries] disconnected Hyperty is back to live",r),t([r.data]),r.unsubscribeLive(e._url)}))})})}).catch(function(e){reject("[ContextObserver] resumeDiscoveries failed | ",e)})}},{key:"onResumeObserver",value:function(e){this._onResumeObserver=e}},{key:"discoverUsers",value:function(e,t){var r=this,n=e+"@"+t;return r._discoverUsersPromises[n]||(r._discoverUsersPromises[n]=new o.default(function(n,o){r._discovery.discoverHypertiesDO(e,["context"],r._contextResourceTypes,t).then(function(e){console.log("[ContextObserver.discoverUsers] discovery result->",e);var t=[],o=[];e.forEach(function(e){r._discoveries[e.data.hypertyID]=e,"live"===e.data.status?t.push(e.data):o.push(e)}),t.length>0?(console.log("[ContextObserver.discoverUsers] returning discovered hyperties data->",t),n(t)):o.length>0&&(console.log("[ContextObserver.discoverUsers] disconnected Hyperties ",o),o[0].onLive(r._url,function(){console.log("[ContextObserver.discoverUsers] disconnected Hyperty is back to live",o[0]),t.push(o[0].data),n(t),o[0].unsubscribeLive(r._url)}))})})),r._discoverUsersPromises[n]}},{key:"observe",value:function(e){var t=this;return t._observePromises[e.hypertyID]||(t._observePromises[e.hypertyID]=new o.default(function(r,n){t._users2observe.forEach(function(t){if(t._reporter===e.hypertyID)return r(t)}),t._discovery.discoverDataObjectsPerReporter(e.hypertyID,["context"],t._contextResourceTypes,t._domain).then(function(o){console.log("[ContextObserver.discoverAvailability] discovered context objects ",o);var i=0,s=void 0;o.forEach(function(e){e.hasOwnProperty("lastModified")&&e.hasOwnProperty("url")&&Date.parse(e.lastModified)>i&&(i=e.lastModified,s=e.url)}),0!=i&&s?r(t._subscribeContext(e,s)):n("[ContextObserver.observe] discovered DataObjecs are invalid",o)})})),t._observePromises[e.hypertyID]}},{key:"_subscribeContext",value:function(e,t){var r=this;return new o.default(function(e,n){r._users2observe.forEach(function(r){if(r.url===t)return e(r)}),r._syncher.subscribe(r._objectDescURL,t).then(function(t){console.log("[ContextObserver._subscribeContext] observer object",t),r._users2observe.push(t),t.onDisconnected(function(){console.log("[ContextObserver.onDisconnected]: ",t),t.data.values[0].value="unavailable",t.sync()}),e(t)})})}},{key:"_discoverAndSubscribeLegacyUsers",value:function(e){var t=this;return new o.default(function(r,n){t._discovery.discoverDataObjectsPerName(e).then(function(e){console.log("[ContextObserver._discoverAndSubscribeLegacyUsers] All DataObjects Result",e),e.forEach(function(e){"live"===e.status&&(console.log("Live obj",e),e.hypertyID||(e.hypertyID=e.reporter),t._subscribeContext(e.schema,e.url).then(function(e){return console.log("[ContextObserver._discoverAndSubscribeLegacyUsers] _subscribeContext",e),r(e)}))})}).catch(function(e){console.log("error ",e)})})}},{key:"unobserve",value:function(e){var t=this;t._users2observe.forEach(function(r,n){r.url===e&&(r.unsubscribe(),t._users2observe.splice(n,1))})}}]),t}(p(r(143)).default);t.default=h,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=p(r(42)),o=p(r(18)),i=p(r(25)),s=p(r(3)),a=p(r(5)),u=p(r(33)),c=p(r(34)),l=p(r(131)),d=p(r(143)),f=r(19);function p(e){return e&&e.__esModule?e:{default:e}}var h=function(e){function t(e,r,n,o){if((0,s.default)(this,t),!e)throw new Error("The hypertyURL is a needed parameter");if(!r)throw new Error("The MiniBus is a needed parameter");if(!n)throw new Error("The configuration is a needed parameter");var a=(0,u.default)(this,(t.__proto__||(0,i.default)(t)).call(this,e,r,n));return console.info("[ContextReporter] started with url: ",e),a.syncher=o||new l.default(e,r,n),a.domain=(0,f.divideURL)(n.runtimeURL).domain,a.contexts={},a.contextDescURL="hyperty-catalogue://catalogue."+a.domain+"/.well-known/dataschema/Context",a.syncher.onNotification(function(e){a.onNotification(e)}),a.syncher.onClose(function(e){console.log("[ContextReporter.onClose]"),a.setStatus(e.id,"unavailable"),e.ack()}),a}return(0,c.default)(t,e),(0,a.default)(t,[{key:"start",value:function(){var e=this,t=this;return new o.default(function(r,o){e.syncher.resumeReporters({store:!0}).then(function(e){var o=(0,n.default)(e);o.length>0?(console.log("[ContextReporter.start] resuming ",e[o[0]]),t.contexts=e,o.forEach(function(e){t._onSubscription(t.contexts[e])}),r(t.contexts)):(console.log("[ContextReporter.start] nothing to resume ",e),r(!1))}).catch(function(e){console.error("[ContextReporter] Resume failed | ",e)})}).catch(function(e){reject("[ContextReporter] Start failed | ",e)})}},{key:"processNotification",value:function(e){console.log("[ContextReporter.processNotification: ",e),e.ack()}},{key:"create",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"myContext",i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,a=this,u=void 0;return new o.default(function(o,c){u=i||s?i&&!s?{resources:r,expires:30,reporter:i}:!i&&s?{resources:r,expires:30,reuseURL:s}:{resources:r,expires:30,reuseURL:s,reporter:i}:{resources:r,expires:30},console.info("[ContextReporter.create] lets create a new User availability Context Object ",u),a.syncher.create(a.contextDescURL,[],t,!0,!1,n,null,u).then(function(t){a.contexts[e]=t,a._onSubscription(t),o(t)}).catch(function(e){c(e)})})}},{key:"_onSubscription",value:function(e){e.onSubscription(function(e){console.info("[ContextReporter._onSubscription] accepting: ",e),e.accept()})}},{key:"setContext",value:function(e,t){console.log("THIS [ContextReporter.setContext] before change :",this.contexts[e]),console.log("[ContextReporter.setContext] before change :",this.contexts[e].data),this.contexts[e].data.values=t,console.debug("[ContextReporter.setContext] after change :",this.contexts[e].data),this.trigger(e+"-context-update",t)}}]),t}(d.default);t.default=h,e.exports=t.default}])})}]).default});",
      "sourceCodeClassname": "slack.slack.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "1.00",
    "description": "Protostub to exchange messages with slack",
    "language": "javascript",
    "cguid": "46968ae37faa364f9cc07983229b5a641",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "slack.slack.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "VertxProtoStub": {
    "sourcePackage": {
      "sourceCode": "!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("activate",[],t):"object"==typeof exports?exports.activate=t():e.activate=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}();t.default=function(e,t,n){return{name:"VertxProtoStub",instance:new i(e,t,n)}};var i=function(){function e(t,n,o){var i=this;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The runtimeProtoStubURL is a needed parameter");if(!n)throw new Error("The bus is a needed parameter");if(!o)throw new Error("The config is a needed parameter");if(!o.url)throw new Error("The config.url is a needed parameter");if(!o.runtimeURL)throw new Error("The config.runtimeURL is a needed parameter");var s=this;this._id=0,this._continuousOpen=!0,this._runtimeProtoStubURL=t,this._bus=n,this._config=o,this._runtimeSessionURL=o.runtimeURL,this._reOpen=!1,n.addListener("*",function(e){console.log("[VertxProtoStub] outgoing message: ",e),s._open(function(){s._filter(e)&&(e.body||(e.body={}),e.body.via=i._runtimeProtoStubURL,console.log("[VertxProtoStub: ProtoStub -> MN]",e),s._sock.send(JSON.stringify(e)))})}),s._sendStatus("created")}return o(e,[{key:"connect",value:function(){this._continuousOpen=!0,this._open(function(){})}},{key:"disconnect",value:function(){this._continuousOpen=!1,this._sock&&this._sendClose()}},{key:"_sendOpen",value:function(e){var t=this;this._sendStatus("in-progress"),t._id++;var n={id:t._id,type:"open",from:t._runtimeSessionURL,to:"mn:/session"};t._reOpen&&(n.type="re-open");var o=!1;t._sessionCallback=function(i){"response"===i.type&i.id===n.id&&(o=!0,200===i.body.code?(i.body.runtimeToken&&(t._reOpen=!0,t._runtimeSessionURL=t._config.runtimeURL+"/"+i.body.runtimeToken),t._sendStatus("live"),e()):t._sendStatus("failed",i.body.desc))},t._sock.send(JSON.stringify(n)),setTimeout(function(){o||t._sendStatus("disconnected","Timeout from mn:/session")},3e3)}},{key:"_sendClose",value:function(){this._id++;var e={id:this._id,type:"close",from:this._runtimeSessionURL,to:"mn:/session"};this._reOpen=!1,this._runtimeSessionURL=this._config._runtimeURL,this._sock.send(JSON.stringify(e))}},{key:"_sendStatus",value:function(e,t){console.log("[VertxProtostub status changed] to ",e),this._state=e;var n={type:"update",from:this._runtimeProtoStubURL,to:this._runtimeProtoStubURL+"/status",body:{value:e}};t&&(n.body.desc=t),this._bus.postMessage(n)}},{key:"_waitReady",value:function(e){var t=this;1===t._sock.readyState?e():setTimeout(function(){t._waitReady(e)})}},{key:"_filter",value:function(e){return!e.body||e.body.via!==this._runtimeProtoStubURL}},{key:"_deliver",value:function(e){e.body||(e.body={}),e.body.via=this._runtimeProtoStubURL,console.log("[VertxProtoStub: MN -> ProtoStub]",e),this._bus.postMessage(e)}},{key:"_open",value:function(e){var t=this;this._continuousOpen&&(t._sock?t._waitReady(e):("ws"===t._config.url.substring(0,2)?t._sock=new WebSocket(t._config.url):t._sock=new SockJS(t._config.url),t._sock.onopen=function(){t._sendOpen(function(){e()})},t._sock.onmessage=function(e){var n=JSON.parse(e.data);console.log("[VertxProtoStub: MN -> SOCKET ON MESSAGE]",n),"mn:/session"===n.from?t._sessionCallback&&t._sessionCallback(n):t._filter(n)&&t._deliver(n)},t._sock.onclose=function(e){var n=void 0;n=1e3===e.code?"Normal closure, meaning that the purpose for which the connection was established has been fulfilled.":1001===e.code?"An endpoint is 'going away', such as a server going down or a browser having navigated away from a page.":1002===e.code?"An endpoint is terminating the connection due to a protocol error":1003===e.code?"An endpoint is terminating the connection because it has received a type of data it cannot accept (e.g., an endpoint that understands only text data MAY send this if it receives a binary message).":1004===e.code?"Reserved. The specific meaning might be defined in the future.":1005===e.code?"No status code was actually present.":1006===e.code?"The connection was closed abnormally, e.g., without sending or receiving a Close control frame":1007===e.code?"An endpoint is terminating the connection because it has received data within a message that was not consistent with the type of the message (e.g., non-UTF-8 [http://tools.ietf.org/html/rfc3629] data within a text message).":1008===e.code?'An endpoint is terminating the connection because it has received a message that "violates its policy". This reason is given either if there is no other sutible reason, or if there is a need to hide specific details about the policy.':1009===e.code?"An endpoint is terminating the connection because it has received a message that is too big for it to process.":1010===e.code?"An endpoint (client) is terminating the connection because it has expected the server to negotiate one or more extension, but the server didn't return them in the response message of the WebSocket handshake. <br /> Specifically, the extensions that are needed are: "+e.reason:1011===e.code?"A server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.":1015===e.code?"The connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).":"Unknown reason",delete t._sock,t._sendStatus("disconnected",n)}))}},{key:"config",get:function(){return this._config}},{key:"runtimeSession",get:function(){return this._runtimeSessionURL}}]),e}()}]).default});",
      "sourceCodeClassname": "default",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "1.00",
    "description": "Protostub to exchange messages with vertx",
    "language": "javascript",
    "cguid": "459ddec3ec1a17767da034fbe0988f1f9",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "objectName": "default",
    "configuration": {
      "url": "wss://msg-node.hysmart.rethink.ptinovacao.pt/localhost/ws"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "VertxProtoStubNode": {
    "sourcePackage": {
      "sourceCode": "!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("activate",[],t):"object"==typeof exports?exports.activate=t():e.activate=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function s(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,s),r.l=!0,r.exports}return s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=16)}([function(e,t,s){var i=s(19),r=i.Buffer;function n(e,t){for(var s in e)t[s]=e[s]}function o(e,t,s){return r(e,t,s)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?e.exports=i:(n(i,t),t.Buffer=o),n(r,o),o.from=function(e,t,s){if("number"==typeof e)throw new TypeError("Argument must not be a number");return r(e,t,s)},o.alloc=function(e,t,s){if("number"!=typeof e)throw new TypeError("Argument must be a number");var i=r(e);return void 0!==t?"string"==typeof s?i.fill(t,s):i.fill(t):i.fill(0),i},o.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r(e)},o.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i.SlowBuffer(e)}},function(e,t,s){"use strict";const i=s(0),r=s(20),n=s(21),o=s(4),a=i.Buffer,h=a.from([0,0,255,255]),c=a.from([0]),l=Symbol("write-in-progress"),u=Symbol("pending-close"),f=Symbol("total-length"),d=Symbol("callback"),_=Symbol("buffers"),p=Symbol("error"),m=Symbol("owner");let g;function y(e){this[_].push(e),this[f]+=e.length}function v(e){this[f]+=e.length,this[m]._maxPayload<1||this[f]<=this[m]._maxPayload?this[_].push(e):(this[p]=new Error("max payload size exceeded"),this[p].closeCode=1009,this.removeListener("data",v),this.reset())}function b(e){this[m]._inflate=null,this[d](e)}e.exports=class{constructor(e,t,s){if(this._maxPayload=0|s,this._options=e||{},this._threshold=void 0!==this._options.threshold?this._options.threshold:1024,this._isServer=!!t,this._deflate=null,this._inflate=null,this.params=null,!g){const e=void 0!==this._options.concurrencyLimit?this._options.concurrencyLimit:10;g=new r({concurrency:e})}}static get extensionName(){return"permessage-deflate"}offer(){const e={};return this._options.serverNoContextTakeover&&(e.server_no_context_takeover=!0),this._options.clientNoContextTakeover&&(e.client_no_context_takeover=!0),this._options.serverMaxWindowBits&&(e.server_max_window_bits=this._options.serverMaxWindowBits),this._options.clientMaxWindowBits?e.client_max_window_bits=this._options.clientMaxWindowBits:null==this._options.clientMaxWindowBits&&(e.client_max_window_bits=!0),e}accept(e){var t;return e=this.normalizeParams(e),t=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e),this.params=t,t}cleanup(){this._inflate&&(this._inflate[l]?this._inflate[u]=!0:(this._inflate.close(),this._inflate=null)),this._deflate&&(this._deflate[l]?this._deflate[u]=!0:(this._deflate.close(),this._deflate=null))}acceptAsServer(e){const t={};if(!e.some(e=>{if(!(!1===this._options.serverNoContextTakeover&&e.server_no_context_takeover||!1===this._options.serverMaxWindowBits&&e.server_max_window_bits||"number"==typeof this._options.serverMaxWindowBits&&"number"==typeof e.server_max_window_bits&&this._options.serverMaxWindowBits>e.server_max_window_bits||"number"==typeof this._options.clientMaxWindowBits&&!e.client_max_window_bits))return(this._options.serverNoContextTakeover||e.server_no_context_takeover)&&(t.server_no_context_takeover=!0),(this._options.clientNoContextTakeover||!1!==this._options.clientNoContextTakeover&&e.client_no_context_takeover)&&(t.client_no_context_takeover=!0),"number"==typeof this._options.serverMaxWindowBits?t.server_max_window_bits=this._options.serverMaxWindowBits:"number"==typeof e.server_max_window_bits&&(t.server_max_window_bits=e.server_max_window_bits),"number"==typeof this._options.clientMaxWindowBits?t.client_max_window_bits=this._options.clientMaxWindowBits:!1!==this._options.clientMaxWindowBits&&"number"==typeof e.client_max_window_bits&&(t.client_max_window_bits=e.client_max_window_bits),!0}))throw new Error("Doesn't support the offered configuration");return t}acceptAsClient(e){const t=e[0];if(!1===this._options.clientNoContextTakeover&&t.client_no_context_takeover)throw new Error('Invalid value for "client_no_context_takeover"');if("number"==typeof this._options.clientMaxWindowBits&&(!t.client_max_window_bits||t.client_max_window_bits>this._options.clientMaxWindowBits)||!1===this._options.clientMaxWindowBits&&t.client_max_window_bits)throw new Error('Invalid value for "client_max_window_bits"');return t}normalizeParams(e){return e.map(e=>(Object.keys(e).forEach(t=>{var s=e[t];if(s.length>1)throw new Error(`Multiple extension parameters for ${t}`);switch(s=s[0],t){case"server_no_context_takeover":case"client_no_context_takeover":if(!0!==s)throw new Error(`invalid extension parameter value for ${t} (${s})`);e[t]=!0;break;case"server_max_window_bits":case"client_max_window_bits":if("string"==typeof s&&(s=parseInt(s,10),Number.isNaN(s)||s<n.Z_MIN_WINDOWBITS||s>n.Z_MAX_WINDOWBITS))throw new Error(`invalid extension parameter value for ${t} (${s})`);if(!this._isServer&&!0===s)throw new Error(`Missing extension parameter value for ${t}`);e[t]=s;break;default:throw new Error(`Not defined extension parameter (${t})`)}}),e))}decompress(e,t,s){g.push(i=>{this._decompress(e,t,(e,t)=>{i(),s(e,t)})})}compress(e,t,s){g.push(i=>{this._compress(e,t,(e,t)=>{i(),s(e,t)})})}_decompress(e,t,s){const i=this._isServer?"client":"server";if(!this._inflate){const e=`${i}_max_window_bits`,t="number"!=typeof this.params[e]?n.Z_DEFAULT_WINDOWBITS:this.params[e];this._inflate=n.createInflateRaw({windowBits:t}),this._inflate[f]=0,this._inflate[_]=[],this._inflate[m]=this,this._inflate.on("error",b),this._inflate.on("data",v)}this._inflate[d]=s,this._inflate[l]=!0,this._inflate.write(e),t&&this._inflate.write(h),this._inflate.flush(()=>{const e=this._inflate[p];if(e)return this._inflate.close(),this._inflate=null,void s(e);const r=o.concat(this._inflate[_],this._inflate[f]);t&&this.params[`${i}_no_context_takeover`]||this._inflate[u]?(this._inflate.close(),this._inflate=null):(this._inflate[l]=!1,this._inflate[f]=0,this._inflate[_]=[]),s(null,r)})}_compress(e,t,s){if(!e||0===e.length)return void process.nextTick(s,null,c);const i=this._isServer?"server":"client";if(!this._deflate){const e=`${i}_max_window_bits`,t="number"!=typeof this.params[e]?n.Z_DEFAULT_WINDOWBITS:this.params[e];this._deflate=n.createDeflateRaw({memLevel:this._options.memLevel,level:this._options.level,flush:n.Z_SYNC_FLUSH,windowBits:t}),this._deflate[f]=0,this._deflate[_]=[],this._deflate.on("data",y)}this._deflate[l]=!0,this._deflate.write(e),this._deflate.flush(n.Z_SYNC_FLUSH,()=>{var e=o.concat(this._deflate[_],this._deflate[f]);t&&(e=e.slice(0,e.length-4)),t&&this.params[`${i}_no_context_takeover`]||this._deflate[u]?(this._deflate.close(),this._deflate=null):(this._deflate[l]=!1,this._deflate[f]=0,this._deflate[_]=[]),s(null,e)})}}},function(e,t,s){"use strict";const i=s(0).Buffer;t.BINARY_TYPES=["nodebuffer","arraybuffer","fragments"],t.GUID="258EAFA5-E914-47DA-95CA-C5AB0DC85B11",t.EMPTY_BUFFER=i.alloc(0),t.NOOP=(()=>{})},function(e,t){e.exports=require("crypto")},function(e,t,s){"use strict";
/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */const i=s(0).Buffer,r=(e,t)=>{const s=i.allocUnsafe(t);for(var r=0,n=0;n<e.length;n++){const t=e[n];t.copy(s,r),r+=t.length}return s};try{const t=s(22);e.exports=Object.assign({concat:r},t.BufferUtil||t)}catch(t){const s=(e,t,s,i,r)=>{for(var n=0;n<r;n++)s[i+n]=e[n]^t[3&n]},i=(e,t)=>{const s=e.length;for(var i=0;i<s;i++)e[i]^=t[3&i]};e.exports={concat:r,mask:s,unmask:i}}},function(e,t,s){"use strict";
/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */const i=s(6),r=s(3),n=s(7),o=s(18),a=s(8),h=s(9),c=s(1),l=s(26),u=s(12),f=s(2),d=s(13),_=s(15),p=[8,13],m=3e4;class g extends i{constructor(e,t,s){super(),t?"string"==typeof t?t=[t]:Array.isArray(t)||(s=t,t=[]):t=[],this.readyState=g.CONNECTING,this.bytesReceived=0,this.extensions={},this.protocol="",this._binaryType=f.BINARY_TYPES[0],this._finalize=this.finalize.bind(this),this._closeFrameReceived=!1,this._closeFrameSent=!1,this._closeMessage="",this._closeTimer=null,this._finalized=!1,this._closeCode=1006,this._receiver=null,this._sender=null,this._socket=null,this._ultron=null,Array.isArray(e)?function(e,t,s){this.protocolVersion=s.protocolVersion,this._maxPayload=s.maxPayload,this.extensions=s.extensions,this.protocol=s.protocol,this._isServer=!0,this.setSocket(e,t)}.call(this,e[0],e[1],s):function(e,t,s){if(s=Object.assign({protocolVersion:p[1],protocol:t.join(","),perMessageDeflate:!0,handshakeTimeout:null,localAddress:null,headers:null,family:null,origin:null,agent:null,host:null,checkServerIdentity:null,rejectUnauthorized:null,passphrase:null,ciphers:null,ecdhCurve:null,cert:null,key:null,pfx:null,ca:null},s),-1===p.indexOf(s.protocolVersion))throw new Error(`unsupported protocol version: ${s.protocolVersion} `+`(supported versions: ${p.join(", ")})`);this.protocolVersion=s.protocolVersion,this._isServer=!1,this.url=e;const i=h.parse(e),n="ws+unix:"===i.protocol;if(!(i.host||n&&i.path))throw new Error("invalid url");const l="wss:"===i.protocol||"https:"===i.protocol,d=r.randomBytes(16).toString("base64"),_=l?o:a;var m;const y={port:i.port||(l?443:80),host:i.hostname,path:"/",headers:{"Sec-WebSocket-Version":s.protocolVersion,"Sec-WebSocket-Key":d,Connection:"Upgrade",Upgrade:"websocket"}};s.headers&&Object.assign(y.headers,s.headers);s.perMessageDeflate&&(m=new c(!0!==s.perMessageDeflate?s.perMessageDeflate:{},!1),y.headers["Sec-WebSocket-Extensions"]=u.format({[c.extensionName]:m.offer()}));s.protocol&&(y.headers["Sec-WebSocket-Protocol"]=s.protocol);s.origin&&(s.protocolVersion<13?y.headers["Sec-WebSocket-Origin"]=s.origin:y.headers.Origin=s.origin);s.host&&(y.headers.Host=s.host);i.auth&&(y.auth=i.auth);s.localAddress&&(y.localAddress=s.localAddress);s.family&&(y.family=s.family);if(n){const e=i.path.split(":");y.socketPath=e[0],y.path=e[1]}else i.path&&("/"!==i.path.charAt(0)?y.path=`/${i.path}`:y.path=i.path);var v=s.agent;(null!=s.rejectUnauthorized||s.checkServerIdentity||s.passphrase||s.ciphers||s.ecdhCurve||s.cert||s.key||s.pfx||s.ca)&&(s.passphrase&&(y.passphrase=s.passphrase),s.ciphers&&(y.ciphers=s.ciphers),s.ecdhCurve&&(y.ecdhCurve=s.ecdhCurve),s.cert&&(y.cert=s.cert),s.key&&(y.key=s.key),s.pfx&&(y.pfx=s.pfx),s.ca&&(y.ca=s.ca),s.checkServerIdentity&&(y.checkServerIdentity=s.checkServerIdentity),null!=s.rejectUnauthorized&&(y.rejectUnauthorized=s.rejectUnauthorized),v||(v=new _.Agent(y)));v&&(y.agent=v);this._req=_.get(y),s.handshakeTimeout&&this._req.setTimeout(s.handshakeTimeout,()=>{this._req.abort(),this.finalize(new Error("opening handshake has timed out"))});this._req.on("error",e=>{this._req.aborted||(this._req=null,this.finalize(e))}),this._req.on("response",e=>{this.emit("unexpected-response",this._req,e)||(this._req.abort(),this.finalize(new Error(`unexpected server response (${e.statusCode})`)))}),this._req.on("upgrade",(e,t,i)=>{if(this.emit("headers",e.headers,e),this.readyState!==g.CONNECTING)return;this._req=null;const n=r.createHash("sha1").update(d+f.GUID,"binary").digest("base64");if(e.headers["sec-websocket-accept"]!==n)return t.destroy(),this.finalize(new Error("invalid server key"));const o=e.headers["sec-websocket-protocol"],a=(s.protocol||"").split(/, */);var h;if(!s.protocol&&o?h="server sent a subprotocol even though none requested":s.protocol&&!o?h="server sent no subprotocol even though requested":o&&-1===a.indexOf(o)&&(h="server responded with an invalid protocol"),h)return t.destroy(),this.finalize(new Error(h));if(o&&(this.protocol=o),m)try{const s=u.parse(e.headers["sec-websocket-extensions"]);s[c.extensionName]&&(m.accept(s[c.extensionName]),this.extensions[c.extensionName]=m)}catch(e){return t.destroy(),void this.finalize(new Error("invalid Sec-WebSocket-Extensions header"))}this.setSocket(t,i)})}.call(this,e,t,s)}get CONNECTING(){return g.CONNECTING}get CLOSING(){return g.CLOSING}get CLOSED(){return g.CLOSED}get OPEN(){return g.OPEN}get bufferedAmount(){var e=0;return this._socket&&(e=this._socket.bufferSize+this._sender._bufferedBytes),e}get binaryType(){return this._binaryType}set binaryType(e){f.BINARY_TYPES.indexOf(e)<0||(this._binaryType=e,this._receiver&&(this._receiver._binaryType=e))}setSocket(e,t){e.setTimeout(0),e.setNoDelay(),this._receiver=new d(this.extensions,this._maxPayload,this.binaryType),this._sender=new _(e,this.extensions),this._ultron=new n(e),this._socket=e,this._ultron.on("close",this._finalize),this._ultron.on("error",this._finalize),this._ultron.on("end",this._finalize),t.length>0&&e.unshift(t),this._ultron.on("data",e=>{this.bytesReceived+=e.length,this._receiver.add(e)}),this._receiver.onmessage=(e=>this.emit("message",e)),this._receiver.onping=(e=>{this.pong(e,!this._isServer,!0),this.emit("ping",e)}),this._receiver.onpong=(e=>this.emit("pong",e)),this._receiver.onclose=((e,t)=>{this._closeFrameReceived=!0,this._closeMessage=t,this._closeCode=e,this._finalized||this.close(e,t)}),this._receiver.onerror=((e,t)=>{this._closeMessage="",this._closeCode=t,this.readyState=g.CLOSING,this.emit("error",e),this.finalize(!0)}),this.readyState=g.OPEN,this.emit("open")}finalize(e){if(!this._finalized){if(this.readyState=g.CLOSING,this._finalized=!0,"object"==typeof e&&this.emit("error",e),!this._socket)return this.emitClose();clearTimeout(this._closeTimer),this._closeTimer=null,this._ultron.destroy(),this._ultron=null,this._socket.on("error",f.NOOP),e?this._socket.destroy():this._socket.end(),this._socket=null,this._sender=null,this._receiver.cleanup(()=>this.emitClose()),this._receiver=null}}emitClose(){this.readyState=g.CLOSED,this.emit("close",this._closeCode,this._closeMessage),this.extensions[c.extensionName]&&this.extensions[c.extensionName].cleanup(),this.extensions=null,this.removeAllListeners()}pause(){if(this.readyState!==g.OPEN)throw new Error("not opened");this._socket.pause()}resume(){if(this.readyState!==g.OPEN)throw new Error("not opened");this._socket.resume()}close(e,t){if(this.readyState!==g.CLOSED)return this.readyState===g.CONNECTING?(this._req.abort(),void this.finalize(new Error("closed before the connection is established"))):void(this.readyState!==g.CLOSING?(this.readyState=g.CLOSING,this._sender.close(e,t,!this._isServer,e=>{e||(this._closeFrameSent=!0,this._finalized||(this._closeFrameReceived&&this._socket.end(),this._closeTimer=setTimeout(this._finalize,m,!0)))})):this._closeFrameSent&&this._closeFrameReceived&&this._socket.end())}ping(e,t,s){if(this.readyState!==g.OPEN){if(s)return;throw new Error("not opened")}"number"==typeof e&&(e=e.toString()),void 0===t&&(t=!this._isServer),this._sender.ping(e||f.EMPTY_BUFFER,t)}pong(e,t,s){if(this.readyState!==g.OPEN){if(s)return;throw new Error("not opened")}"number"==typeof e&&(e=e.toString()),void 0===t&&(t=!this._isServer),this._sender.pong(e||f.EMPTY_BUFFER,t)}send(e,t,s){if("function"==typeof t&&(s=t,t={}),this.readyState!==g.OPEN){if(!s)throw new Error("not opened");return void s(new Error("not opened"))}"number"==typeof e&&(e=e.toString());const i=Object.assign({binary:"string"!=typeof e,mask:!this._isServer,compress:!0,fin:!0},t);this.extensions[c.extensionName]||(i.compress=!1),this._sender.send(e||f.EMPTY_BUFFER,i,s)}terminate(){if(this.readyState!==g.CLOSED)return this.readyState===g.CONNECTING?(this._req.abort(),void this.finalize(new Error("closed before the connection is established"))):void this.finalize(!0)}}g.CONNECTING=0,g.OPEN=1,g.CLOSING=2,g.CLOSED=3,["open","error","close","message"].forEach(e=>{Object.defineProperty(g.prototype,`on${e}`,{get(){const t=this.listeners(e);for(var s=0;s<t.length;s++)if(t[s]._listener)return t[s]._listener},set(t){const s=this.listeners(e);for(var i=0;i<s.length;i++)s[i]._listener&&this.removeListener(e,s[i]);this.addEventListener(e,t)}})}),g.prototype.addEventListener=l.addEventListener,g.prototype.removeEventListener=l.removeEventListener,e.exports=g},function(e,t){e.exports=require("events")},function(e,t,s){"use strict";var i=Object.prototype.hasOwnProperty,r=0;function n(e){if(!(this instanceof n))return new n(e);this.id=r++,this.ee=e}n.prototype.on=function(e,t,s){return t.__ultron=this.id,this.ee.on(e,t,s),this},n.prototype.once=function(e,t,s){return t.__ultron=this.id,this.ee.once(e,t,s),this},n.prototype.remove=function(){var e,t=arguments,s=this.ee;if(1===t.length&&"string"==typeof t[0])t=t[0].split(/[, ]+/);else if(!t.length)if(s.eventNames)t=s.eventNames();else if(s._events){for(e in t=[],s._events)i.call(s._events,e)&&t.push(e);Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(s._events)))}for(var r=0;r<t.length;r++)for(var n=s.listeners(t[r]),o=0;o<n.length;o++){if((e=n[o]).listener){if(e.listener.__ultron!==this.id)continue}else if(e.__ultron!==this.id)continue;s.removeListener(t[r],e)}return this},n.prototype.destroy=function(){return!!this.ee&&(this.remove(),this.ee=null,!0)},e.exports=n},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("url")},function(e,t,s){(function(i){var r=s(23),n=s(24),o=n.join,a=n.dirname,h=r.accessSync&&function(e){try{r.accessSync(e)}catch(e){return!1}return!0}||r.existsSync||n.existsSync,c={arrow:process.env.NODE_BINDINGS_ARROW||" → ",compiled:process.env.NODE_BINDINGS_COMPILED_DIR||"compiled",platform:process.platform,arch:process.arch,version:process.versions.node,bindings:"bindings.node",try:[["module_root","build","bindings"],["module_root","build","Debug","bindings"],["module_root","build","Release","bindings"],["module_root","out","Debug","bindings"],["module_root","Debug","bindings"],["module_root","out","Release","bindings"],["module_root","Release","bindings"],["module_root","build","default","bindings"],["module_root","compiled","version","platform","arch","bindings"]]};e.exports=t=function(e){"string"==typeof e?e={bindings:e}:e||(e={}),Object.keys(c).map(function(t){t in e||(e[t]=c[t])}),e.module_root||(e.module_root=t.getRoot(t.getFileName())),".node"!=n.extname(e.bindings)&&(e.bindings+=".node");for(var s,i,r,a=[],h=0,l=e.try.length;h<l;h++){s=o.apply(null,e.try[h].map(function(t){return e[t]||t})),a.push(s);try{return e.path,i=!function(){var e=new Error('Cannot find module "."');throw e.code="MODULE_NOT_FOUND",e}(),e.path||(i.path=s),i}catch(e){if(!/not find/i.test(e.message))throw e}}throw(r=new Error("Could not locate the bindings file. Tried:\n"+a.map(function(t){return e.arrow+t}).join("\n"))).tries=a,r},t.getFileName=function(e){var t,s=Error.prepareStackTrace,r=Error.stackTraceLimit,n={};return Error.stackTraceLimit=10,Error.prepareStackTrace=function(s,r){for(var n=0,o=r.length;n<o;n++)if((t=r[n].getFileName())!==i){if(!e)return;if(t!==e)return}},Error.captureStackTrace(n),Error.prepareStackTrace=s,Error.stackTraceLimit=r,t},t.getRoot=function(e){for(var t,s=a(e);;){if("."===s&&(s=process.cwd()),h(o(s,"package.json"))||h(o(s,"node_modules")))return s;if(t===s)throw new Error('Could not find module root given file: "'+e+'". Do you have a `package.json` file? ');t=s,s=o(s,"..")}}}).call(t,"/index.js")},function(e,t){function s(e){throw new Error("Cannot find module '"+e+"'.")}s.keys=function(){return[]},s.resolve=s,e.exports=s,s.id=11},function(e,t,s){"use strict";const i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0];function r(e,t,s){Object.prototype.hasOwnProperty.call(e,t)?e[t].push(s):e[t]=[s]}e.exports={format:function(e){return Object.keys(e).map(t=>{var s=e[t];return Array.isArray(s)||(s=[s]),s.map(e=>[t].concat(Object.keys(e).map(t=>{var s=e[t];return Array.isArray(s)||(s=[s]),s.map(e=>!0===e?t:`${t}=${e}`).join("; ")})).join("; ")).join(", ")}).join(", ")},parse:function(e){const t={};if(void 0===e||""===e)return t;for(var s,n,o={},a=!1,h=!1,c=!1,l=-1,u=-1,f=0;f<e.length;f++){const _=e.charCodeAt(f);if(void 0===s)if(-1===u&&1===i[_])-1===l&&(l=f);else if(32===_||9===_)-1===u&&-1!==l&&(u=f);else{if(59!==_&&44!==_)throw new Error(`unexpected character at index ${f}`);{if(-1===l)throw new Error(`unexpected character at index ${f}`);-1===u&&(u=f);const i=e.slice(l,u);44===_?(r(t,i,o),o={}):s=i,l=u=-1}}else if(void 0===n)if(-1===u&&1===i[_])-1===l&&(l=f);else if(32===_||9===_)-1===u&&-1!==l&&(u=f);else if(59===_||44===_){if(-1===l)throw new Error(`unexpected character at index ${f}`);-1===u&&(u=f),r(o,e.slice(l,u),!0),44===_&&(r(t,s,o),o={},s=void 0),l=u=-1}else{if(61!==_||-1===l||-1!==u)throw new Error(`unexpected character at index ${f}`);n=e.slice(l,f),l=u=-1}else if(h){if(1!==i[_])throw new Error(`unexpected character at index ${f}`);-1===l?l=f:a||(a=!0),h=!1}else if(c)if(1===i[_])-1===l&&(l=f);else if(34===_&&-1!==l)c=!1,u=f;else{if(92!==_)throw new Error(`unexpected character at index ${f}`);h=!0}else if(34===_&&61===e.charCodeAt(f-1))c=!0;else if(-1===u&&1===i[_])-1===l&&(l=f);else if(-1===l||32!==_&&9!==_){if(59!==_&&44!==_)throw new Error(`unexpected character at index ${f}`);if(-1===l)throw new Error(`unexpected character at index ${f}`);-1===u&&(u=f);var d=e.slice(l,u);a&&(d=d.replace(/\\/g,""),a=!1),r(o,n,d),44===_&&(r(t,s,o),o={},s=void 0),n=void 0,l=u=-1}else-1===u&&(u=f)}if(-1===l||c)throw new Error("unexpected end of input");-1===u&&(u=f);const _=e.slice(l,u);return void 0===s?r(t,_,{}):(void 0===n?r(o,_,!0):r(o,n,a?_.replace(/\\/g,""):_),r(t,s,o)),t}}},function(e,t,s){"use strict";
/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */const i=s(0),r=s(1),n=s(27),o=s(4),a=s(14),h=s(2),c=i.Buffer,l=0,u=1,f=2,d=3,_=4,p=5;function m(e,t){return 1===e.length?e[0]:e.length>1?o.concat(e,t):h.EMPTY_BUFFER}e.exports=class{constructor(e,t,s){this._binaryType=s||h.BINARY_TYPES[0],this._extensions=e||{},this._maxPayload=0|t,this._bufferedBytes=0,this._buffers=[],this._compressed=!1,this._payloadLength=0,this._fragmented=0,this._masked=!1,this._fin=!1,this._mask=null,this._opcode=0,this._totalPayloadLength=0,this._messageLength=0,this._fragments=[],this._cleanupCallback=null,this._hadError=!1,this._dead=!1,this._loop=!1,this.onmessage=null,this.onclose=null,this.onerror=null,this.onping=null,this.onpong=null,this._state=l}readBuffer(e){var t,s,i=0;if(this._bufferedBytes-=e,e===this._buffers[0].length)return this._buffers.shift();if(e<this._buffers[0].length)return t=this._buffers[0].slice(0,e),this._buffers[0]=this._buffers[0].slice(e),t;for(t=c.allocUnsafe(e);e>0;)e>=(s=this._buffers[0].length)?(this._buffers[0].copy(t,i),i+=s,this._buffers.shift()):(this._buffers[0].copy(t,i,0,e),this._buffers[0]=this._buffers[0].slice(e)),e-=s;return t}hasBufferedBytes(e){return this._bufferedBytes>=e||(this._loop=!1,this._dead&&this.cleanup(this._cleanupCallback),!1)}add(e){this._dead||(this._bufferedBytes+=e.length,this._buffers.push(e),this.startLoop())}startLoop(){for(this._loop=!0;this._loop;)switch(this._state){case l:this.getInfo();break;case u:this.getPayloadLength16();break;case f:this.getPayloadLength64();break;case d:this.getMask();break;case _:this.getData();break;default:this._loop=!1}}getInfo(){if(!this.hasBufferedBytes(2))return;const e=this.readBuffer(2);if(0!=(48&e[0]))return void this.error(new Error("RSV2 and RSV3 must be clear"),1002);const t=64==(64&e[0]);if(!t||this._extensions[r.extensionName]){if(this._fin=128==(128&e[0]),this._opcode=15&e[0],this._payloadLength=127&e[1],0===this._opcode){if(t)return void this.error(new Error("RSV1 must be clear"),1002);if(!this._fragmented)return void this.error(new Error(`invalid opcode: ${this._opcode}`),1002);this._opcode=this._fragmented}else if(1===this._opcode||2===this._opcode){if(this._fragmented)return void this.error(new Error(`invalid opcode: ${this._opcode}`),1002);this._compressed=t}else{if(!(this._opcode>7&&this._opcode<11))return void this.error(new Error(`invalid opcode: ${this._opcode}`),1002);if(!this._fin)return void this.error(new Error("FIN must be set"),1002);if(t)return void this.error(new Error("RSV1 must be clear"),1002);if(this._payloadLength>125)return void this.error(new Error("invalid payload length"),1002)}this._fin||this._fragmented||(this._fragmented=this._opcode),this._masked=128==(128&e[1]),126===this._payloadLength?this._state=u:127===this._payloadLength?this._state=f:this.haveLength()}else this.error(new Error("RSV1 must be clear"),1002)}getPayloadLength16(){this.hasBufferedBytes(2)&&(this._payloadLength=this.readBuffer(2).readUInt16BE(0,!0),this.haveLength())}getPayloadLength64(){if(!this.hasBufferedBytes(8))return;const e=this.readBuffer(8),t=e.readUInt32BE(0,!0);t>Math.pow(2,21)-1?this.error(new Error("max payload size exceeded"),1009):(this._payloadLength=t*Math.pow(2,32)+e.readUInt32BE(4,!0),this.haveLength())}haveLength(){this._opcode<8&&this.maxPayloadExceeded(this._payloadLength)||(this._masked?this._state=d:this._state=_)}getMask(){this.hasBufferedBytes(4)&&(this._mask=this.readBuffer(4),this._state=_)}getData(){var e=h.EMPTY_BUFFER;if(this._payloadLength){if(!this.hasBufferedBytes(this._payloadLength))return;e=this.readBuffer(this._payloadLength),this._masked&&o.unmask(e,this._mask)}this._opcode>7?this.controlMessage(e):this._compressed?(this._state=p,this.decompress(e)):this.pushFragment(e)&&this.dataMessage()}decompress(e){this._extensions[r.extensionName].decompress(e,this._fin,(e,t)=>{e?this.error(e,1009===e.closeCode?1009:1007):(this.pushFragment(t)&&this.dataMessage(),this.startLoop())})}dataMessage(){if(this._fin){const t=this._messageLength,s=this._fragments;if(this._totalPayloadLength=0,this._messageLength=0,this._fragmented=0,this._fragments=[],2===this._opcode){var e;e="nodebuffer"===this._binaryType?m(s,t):"arraybuffer"===this._binaryType?function(e){return 0===e.byteOffset&&e.byteLength===e.buffer.byteLength?e.buffer:e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}(m(s,t)):s,this.onmessage(e)}else{const e=m(s,t);if(!n(e))return void this.error(new Error("invalid utf8 sequence"),1007);this.onmessage(e.toString())}}this._state=l}controlMessage(e){if(8!==this._opcode)9===this._opcode?this.onping(e):this.onpong(e),this._state=l;else if(0===e.length)this.onclose(1e3,""),this._loop=!1,this.cleanup(this._cleanupCallback);else if(1===e.length)this.error(new Error("invalid payload length"),1002);else{const t=e.readUInt16BE(0,!0);if(!a.isValidErrorCode(t))return void this.error(new Error(`invalid status code: ${t}`),1002);const s=e.slice(2);if(!n(s))return void this.error(new Error("invalid utf8 sequence"),1007);this.onclose(t,s.toString()),this._loop=!1,this.cleanup(this._cleanupCallback)}}error(e,t){this.onerror(e,t),this._hadError=!0,this._loop=!1,this.cleanup(this._cleanupCallback)}maxPayloadExceeded(e){if(0===e||this._maxPayload<1)return!1;const t=this._totalPayloadLength+e;return t<=this._maxPayload?(this._totalPayloadLength=t,!1):(this.error(new Error("max payload size exceeded"),1009),!0)}pushFragment(e){if(0===e.length)return!0;const t=this._messageLength+e.length;return this._maxPayload<1||t<=this._maxPayload?(this._messageLength=t,this._fragments.push(e),!0):(this.error(new Error("max payload size exceeded"),1009),!1)}cleanup(e){this._dead=!0,this._hadError||!this._loop&&this._state!==p?(this._extensions=null,this._fragments=null,this._buffers=null,this._mask=null,this._cleanupCallback=null,this.onmessage=null,this.onclose=null,this.onerror=null,this.onping=null,this.onpong=null,e&&e()):this._cleanupCallback=e}}},function(e,t,s){"use strict";
/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */e.exports={isValidErrorCode:function(e){return e>=1e3&&e<=1013&&1004!==e&&1005!==e&&1006!==e||e>=3e3&&e<=4999},1000:"normal",1001:"going away",1002:"protocol error",1003:"unsupported data",1004:"reserved",1005:"reserved for extensions",1006:"reserved for extensions",1007:"inconsistent or invalid data",1008:"policy violation",1009:"message too big",1010:"extension handshake missing",1011:"an unexpected condition prevented the request from being fulfilled",1012:"service restart",1013:"try again later"}},function(e,t,s){"use strict";
/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */const i=s(0),r=s(3),n=s(1),o=s(4),a=s(14),h=s(2),c=i.Buffer;class l{constructor(e,t){this._extensions=t||{},this._socket=e,this._firstFragment=!0,this._compress=!1,this._bufferedBytes=0,this._deflating=!1,this._queue=[]}static frame(e,t){const s=e.length<1024||t.mask&&t.readOnly;var i=t.mask?6:2,n=e.length;e.length>=65536?(i+=8,n=127):e.length>125&&(i+=2,n=126);const a=c.allocUnsafe(s?e.length+i:i);if(a[0]=t.fin?128|t.opcode:t.opcode,t.rsv1&&(a[0]|=64),126===n?a.writeUInt16BE(e.length,2,!0):127===n&&(a.writeUInt32BE(0,2,!0),a.writeUInt32BE(e.length,6,!0)),!t.mask)return a[1]=n,s?(e.copy(a,i),[a]):[a,e];const h=r.randomBytes(4);return a[1]=128|n,a[i-4]=h[0],a[i-3]=h[1],a[i-2]=h[2],a[i-1]=h[3],s?(o.mask(e,h,a,i,e.length),[a]):(o.mask(e,h,e,0,e.length),[a,e])}close(e,t,s,i){var r;if(void 0===e)e=1e3;else if("number"!=typeof e||!a.isValidErrorCode(e))throw new Error("first argument must be a valid error code number");void 0===t||""===t?1e3===e?r=h.EMPTY_BUFFER:(r=c.allocUnsafe(2)).writeUInt16BE(e,0,!0):((r=c.allocUnsafe(2+c.byteLength(t))).writeUInt16BE(e,0,!0),r.write(t,2)),this._deflating?this.enqueue([this.doClose,r,s,i]):this.doClose(r,s,i)}doClose(e,t,s){this.sendFrame(l.frame(e,{fin:!0,rsv1:!1,opcode:8,mask:t,readOnly:!1}),s)}ping(e,t){var s=!0;c.isBuffer(e)||(e instanceof ArrayBuffer?e=c.from(e):ArrayBuffer.isView(e)?e=u(e):(e=c.from(e),s=!1)),this._deflating?this.enqueue([this.doPing,e,t,s]):this.doPing(e,t,s)}doPing(e,t,s){this.sendFrame(l.frame(e,{fin:!0,rsv1:!1,opcode:9,mask:t,readOnly:s}))}pong(e,t){var s=!0;c.isBuffer(e)||(e instanceof ArrayBuffer?e=c.from(e):ArrayBuffer.isView(e)?e=u(e):(e=c.from(e),s=!1)),this._deflating?this.enqueue([this.doPong,e,t,s]):this.doPong(e,t,s)}doPong(e,t,s){this.sendFrame(l.frame(e,{fin:!0,rsv1:!1,opcode:10,mask:t,readOnly:s}))}send(e,t,s){var i=t.binary?2:1,r=t.compress,o=!0;c.isBuffer(e)||(e instanceof ArrayBuffer?e=c.from(e):ArrayBuffer.isView(e)?e=u(e):(e=c.from(e),o=!1));const a=this._extensions[n.extensionName];if(this._firstFragment?(this._firstFragment=!1,r&&a&&(r=e.length>=a._threshold),this._compress=r):(r=!1,i=0),t.fin&&(this._firstFragment=!0),a){const n={fin:t.fin,rsv1:r,opcode:i,mask:t.mask,readOnly:o};this._deflating?this.enqueue([this.dispatch,e,this._compress,n,s]):this.dispatch(e,this._compress,n,s)}else this.sendFrame(l.frame(e,{fin:t.fin,rsv1:!1,opcode:i,mask:t.mask,readOnly:o}),s)}dispatch(e,t,s,i){if(!t)return void this.sendFrame(l.frame(e,s),i);const r=this._extensions[n.extensionName];this._deflating=!0,r.compress(e,s.fin,(e,t)=>{s.readOnly=!1,this.sendFrame(l.frame(t,s),i),this._deflating=!1,this.dequeue()})}dequeue(){for(;!this._deflating&&this._queue.length;){const e=this._queue.shift();this._bufferedBytes-=e[1].length,e[0].apply(this,e.slice(1))}}enqueue(e){this._bufferedBytes+=e[1].length,this._queue.push(e)}sendFrame(e,t){2===e.length?(this._socket.write(e[0]),this._socket.write(e[1],t)):this._socket.write(e[0],t)}}function u(e){const t=c.from(e.buffer);return e.byteLength!==e.buffer.byteLength?t.slice(e.byteOffset,e.byteOffset+e.byteLength):t}e.exports=l},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var s=0;s<t.length;s++){var i=t[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,s,i){return s&&e(t.prototype,s),i&&e(t,i),t}}();t.default=function(e,t,s){return{name:"VertxProtoStub",instance:new n(e,t,s)}};var r=function(e){return e&&e.__esModule?e:{default:e}}(s(17));var n=function(){function e(t,s,i){var r=this;if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The runtimeProtoStubURL is a needed parameter");if(!s)throw new Error("The bus is a needed parameter");if(!i)throw new Error("The config is a needed parameter");if(!i.url)throw new Error("The config.url is a needed parameter");if(!i.runtimeURL)throw new Error("The config.runtimeURL is a needed parameter");var n=this;this._id=0,this._continuousOpen=!0,this._runtimeProtoStubURL=t,this._bus=s,this._config=i,this._runtimeSessionURL=i.runtimeURL,this._reOpen=!1,s.addListener("*",function(e){console.log("[VertxProtoStub] outgoing message: ",e),n._open(function(){n._filter(e)&&(e.body||(e.body={}),e.body.via=r._runtimeProtoStubURL,console.log("[VertxProtoStub: ProtoStub -> MN]",e),n._sock.send(JSON.stringify(e)))})}),n._sendStatus("created")}return i(e,[{key:"connect",value:function(){this._continuousOpen=!0,this._open(function(){})}},{key:"disconnect",value:function(){this._continuousOpen=!1,this._sock&&this._sendClose()}},{key:"_sendOpen",value:function(e){var t=this;this._sendStatus("in-progress"),t._id++;var s={id:t._id,type:"open",from:t._runtimeSessionURL,to:"mn:/session"};t._reOpen&&(s.type="re-open");var i=!1;t._sessionCallback=function(r){"response"===r.type&r.id===s.id&&(i=!0,200===r.body.code?(r.body.runtimeToken&&(t._reOpen=!0,t._runtimeSessionURL=t._config.runtimeURL+"/"+r.body.runtimeToken),t._sendStatus("live"),e()):t._sendStatus("failed",r.body.desc))},t._sock.send(JSON.stringify(s)),setTimeout(function(){i||t._sendStatus("disconnected","Timeout from mn:/session")},3e3)}},{key:"_sendClose",value:function(){this._id++;var e={id:this._id,type:"close",from:this._runtimeSessionURL,to:"mn:/session"};this._reOpen=!1,this._runtimeSessionURL=this._config._runtimeURL,this._sock.send(JSON.stringify(e))}},{key:"_sendStatus",value:function(e,t){console.log("[VertxProtostub status changed] to ",e),this._state=e;var s={type:"update",from:this._runtimeProtoStubURL,to:this._runtimeProtoStubURL+"/status",body:{value:e}};t&&(s.body.desc=t),this._bus.postMessage(s)}},{key:"_waitReady",value:function(e){var t=this;1===t._sock.readyState?e():setTimeout(function(){t._waitReady(e)})}},{key:"_filter",value:function(e){return!e.body||e.body.via!==this._runtimeProtoStubURL}},{key:"_deliver",value:function(e){e.body||(e.body={}),e.body.via=this._runtimeProtoStubURL,console.log("[VertxProtoStub: MN -> ProtoStub]",e),this._bus.postMessage(e)}},{key:"_open",value:function(e){var t=this;this._continuousOpen&&(t._sock?t._waitReady(e):("ws"===t._config.url.substring(0,2)?t._sock=new r.default(t._config.url):t._sock=new SockJS(t._config.url),t._sock.onopen=function(){t._sendOpen(function(){e()})},t._sock.onmessage=function(e){var s=JSON.parse(e.data);console.log("[VertxProtoStub: MN -> SOCKET ON MESSAGE]",s),"mn:/session"===s.from?t._sessionCallback&&t._sessionCallback(s):t._filter(s)&&t._deliver(s)},t._sock.onclose=function(e){var s=void 0;s=1e3===e.code?"Normal closure, meaning that the purpose for which the connection was established has been fulfilled.":1001===e.code?"An endpoint is 'going away', such as a server going down or a browser having navigated away from a page.":1002===e.code?"An endpoint is terminating the connection due to a protocol error":1003===e.code?"An endpoint is terminating the connection because it has received a type of data it cannot accept (e.g., an endpoint that understands only text data MAY send this if it receives a binary message).":1004===e.code?"Reserved. The specific meaning might be defined in the future.":1005===e.code?"No status code was actually present.":1006===e.code?"The connection was closed abnormally, e.g., without sending or receiving a Close control frame":1007===e.code?"An endpoint is terminating the connection because it has received data within a message that was not consistent with the type of the message (e.g., non-UTF-8 [http://tools.ietf.org/html/rfc3629] data within a text message).":1008===e.code?'An endpoint is terminating the connection because it has received a message that "violates its policy". This reason is given either if there is no other sutible reason, or if there is a need to hide specific details about the policy.':1009===e.code?"An endpoint is terminating the connection because it has received a message that is too big for it to process.":1010===e.code?"An endpoint (client) is terminating the connection because it has expected the server to negotiate one or more extension, but the server didn't return them in the response message of the WebSocket handshake. <br /> Specifically, the extensions that are needed are: "+e.reason:1011===e.code?"A server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.":1015===e.code?"The connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).":"Unknown reason",delete t._sock,t._sendStatus("disconnected",s)}))}},{key:"config",get:function(){return this._config}},{key:"runtimeSession",get:function(){return this._runtimeSessionURL}}]),e}()},function(e,t,s){"use strict";
/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */const i=s(5);i.Server=s(30),i.Receiver=s(13),i.Sender=s(15),e.exports=i},function(e,t){e.exports=require("https")},function(e,t){e.exports=require("buffer")},function(e,t,s){"use strict";function i(e){if(!(this instanceof i))return new i(e);e=e||{},this.concurrency=e.concurrency||1/0,this.pending=0,this.jobs=[],this.cbs=[],this._done=function(){this.pending--,this._run()}.bind(this)}["push","unshift","splice"].forEach(function(e){i.prototype[e]=function(){var t=Array.prototype[e].apply(this.jobs,arguments);return this._run(),t}}),Object.defineProperty(i.prototype,"length",{get:function(){return this.pending+this.jobs.length}}),i.prototype._run=function(){if(this.pending!==this.concurrency){if(this.jobs.length){var e=this.jobs.shift();this.pending++,e(this._done),this._run()}if(0===this.pending)for(;0!==this.cbs.length;){var t=this.cbs.pop();process.nextTick(t)}}},i.prototype.onDone=function(e){"function"==typeof e&&(this.cbs.push(e),this._run())},e.exports=i},function(e,t){e.exports=require("zlib")},function(e,t,s){"use strict";try{e.exports=s(10)("bufferutil")}catch(t){e.exports=s(25)}},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t,s){"use strict";
/*!
 * bufferutil: WebSocket buffer utils
 * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */e.exports={mask:(e,t,s,i,r)=>{for(var n=0;n<r;n++)s[i+n]=e[n]^t[3&n]},unmask:(e,t)=>{const s=e.length;for(var i=0;i<s;i++)e[i]^=t[3&i]}}},function(e,t,s){"use strict";class i{constructor(e,t){this.target=t,this.type=e}}class r extends i{constructor(e,t){super("message",t),this.data=e}}class n extends i{constructor(e,t,s){super("close",s),this.wasClean=s._closeFrameReceived&&s._closeFrameSent,this.reason=t,this.code=e}}class o extends i{constructor(e){super("open",e)}}const a={addEventListener(e,t){function s(e){t.call(this,new r(e,this))}function i(e,s){t.call(this,new n(e,s,this))}function a(e){e.type="error",e.target=this,t.call(this,e)}function h(){t.call(this,new o(this))}"function"==typeof t&&("message"===e?(s._listener=t,this.on(e,s)):"close"===e?(i._listener=t,this.on(e,i)):"error"===e?(a._listener=t,this.on(e,a)):"open"===e?(h._listener=t,this.on(e,h)):this.on(e,t))},removeEventListener(e,t){const s=this.listeners(e);for(var i=0;i<s.length;i++)s[i]!==t&&s[i]._listener!==t||this.removeListener(e,s[i])}};e.exports=a},function(e,t,s){"use strict";
/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */try{const t=s(28);e.exports="object"==typeof t?t.Validation.isValidUTF8:t}catch(t){e.exports=(()=>!0)}},function(e,t,s){"use strict";try{e.exports=s(10)("validation")}catch(t){e.exports=s(29)}},function(e,t,s){"use strict";
/*!
 * UTF-8 validate: UTF-8 validation for WebSockets.
 * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */e.exports=(e=>{if(!Buffer.isBuffer(e))throw new TypeError("First argument needs to be a buffer");for(var t=e.length,s=0;s<t;)if(e[s]<128)s++;else if(192==(224&e[s])){if(s+1===t||128!=(192&e[s+1])||192==(254&e[s]))return!1;s+=2}else if(224==(240&e[s])){if(s+2>=t||128!=(192&e[s+1])||128!=(192&e[s+2])||224===e[s]&&128==(224&e[s+1])||237===e[s]&&160==(224&e[s+1]))return!1;s+=3}else{if(240!=(248&e[s]))return!1;if(s+3>=t||128!=(192&e[s+1])||128!=(192&e[s+2])||128!=(192&e[s+3])||240===e[s]&&128==(240&e[s+1])||244===e[s]&&e[s+1]>143||e[s]>244)return!1;s+=4}return!0})},function(e,t,s){"use strict";
/*!
 * ws: a node.js websocket client
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */const i=s(0),r=s(6),n=s(3),o=s(7),a=s(8),h=s(9),c=s(1),l=s(12),u=s(2),f=s(5),d=i.Buffer;function _(){this.destroy()}function p(e,t,s){e.writable&&(s=s||a.STATUS_CODES[t],e.write(`HTTP/1.1 ${t} ${a.STATUS_CODES[t]}\r\n`+"Connection: close\r\nContent-type: text/html\r\n"+`Content-Length: ${d.byteLength(s)}\r\n`+"\r\n"+s)),e.removeListener("error",_),e.destroy()}e.exports=class extends r{constructor(e,t){if(super(),null==(e=Object.assign({maxPayload:104857600,perMessageDeflate:!1,handleProtocols:null,clientTracking:!0,verifyClient:null,noServer:!1,backlog:null,server:null,host:null,path:null,port:null},e)).port&&!e.server&&!e.noServer)throw new TypeError("missing or invalid options");null!=e.port?(this._server=a.createServer((e,t)=>{const s=a.STATUS_CODES[426];t.writeHead(426,{"Content-Length":s.length,"Content-Type":"text/plain"}),t.end(s)}),this._server.listen(e.port,e.host,e.backlog,t)):e.server&&(this._server=e.server),this._server&&(this._ultron=new o(this._server),this._ultron.on("listening",()=>this.emit("listening")),this._ultron.on("error",e=>this.emit("error",e)),this._ultron.on("upgrade",(e,t,s)=>{this.handleUpgrade(e,t,s,t=>{this.emit("connection",t,e)})})),!0===e.perMessageDeflate&&(e.perMessageDeflate={}),e.clientTracking&&(this.clients=new Set),this.options=e}close(e){if(this.clients)for(const e of this.clients)e.terminate();const t=this._server;if(t&&(this._ultron.destroy(),this._ultron=this._server=null,null!=this.options.port))return t.close(e);e&&e()}shouldHandle(e){return!this.options.path||h.parse(e.url).pathname===this.options.path}handleUpgrade(e,t,s,i){t.on("error",_);const r=+e.headers["sec-websocket-version"],n={};if("GET"!==e.method||"websocket"!==e.headers.upgrade.toLowerCase()||!e.headers["sec-websocket-key"]||8!==r&&13!==r||!this.shouldHandle(e))return p(t,400);if(this.options.perMessageDeflate){const s=new c(this.options.perMessageDeflate,!0,this.options.maxPayload);try{const i=l.parse(e.headers["sec-websocket-extensions"]);i[c.extensionName]&&(s.accept(i[c.extensionName]),n[c.extensionName]=s)}catch(e){return p(t,400)}}var o=(e.headers["sec-websocket-protocol"]||"").split(/, */);if(this.options.handleProtocols){if(!1===(o=this.options.handleProtocols(o,e)))return p(t,401)}else o=o[0];if(this.options.verifyClient){const a={origin:e.headers[`${8===r?"sec-websocket-origin":"origin"}`],secure:!(!e.connection.authorized&&!e.connection.encrypted),req:e};if(2===this.options.verifyClient.length)return void this.options.verifyClient(a,(a,h,c)=>{if(!a)return p(t,h||401,c);this.completeUpgrade(o,n,r,e,t,s,i)});if(!this.options.verifyClient(a))return p(t,401)}this.completeUpgrade(o,n,r,e,t,s,i)}completeUpgrade(e,t,s,i,r,o,a){if(!r.readable||!r.writable)return r.destroy();const h=["HTTP/1.1 101 Switching Protocols","Upgrade: websocket","Connection: Upgrade",`Sec-WebSocket-Accept: ${n.createHash("sha1").update(i.headers["sec-websocket-key"]+u.GUID,"binary").digest("base64")}`];if(e&&h.push(`Sec-WebSocket-Protocol: ${e}`),t[c.extensionName]){const e=t[c.extensionName].params,s=l.format({[c.extensionName]:[e]});h.push(`Sec-WebSocket-Extensions: ${s}`)}this.emit("headers",h,i),r.write(h.concat("\r\n").join("\r\n"));const d=new f([r,o],null,{maxPayload:this.options.maxPayload,protocolVersion:s,extensions:t,protocol:e});this.clients&&(this.clients.add(d),d.on("close",()=>this.clients.delete(d))),r.removeListener("error",_),a(d)}}}])});",
      "sourceCodeClassname": "default",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "1.00",
    "description": "Protostub to exchange messages with vertx",
    "language": "javascript",
    "cguid": "41338ea57960781be06f8cf3c78cbf70f",
    "type": "ProtoStubs",
    "constraints": {
      "node": true
    },
    "objectName": "default",
    "configuration": {
      "url": "wss://msg-node.hysmart.rethink.ptinovacao.pt/localhost/ws"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "VertxAppProtoStub": {
    "sourcePackage": {
      "sourceCode": "(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("activate", [], factory);
	else if(typeof exports === 'object')
		exports["activate"] = factory();
	else
		root["activate"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 33);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcz9jMGIxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzPzViNjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFDQUFxQzs7QUFFckM7QUFDQTtBQUNBOztBQUVBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsVUFBVSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0Qzs7QUFFNUMiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxyXG5cdFx0ZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(41);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvZGVidWcvc3JjL2Jyb3dzZXIuanM/YWQ0NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBpcyB0aGUgd2ViIGJyb3dzZXIgaW1wbGVtZW50YXRpb24gb2YgYGRlYnVnKClgLlxuICpcbiAqIEV4cG9zZSBgZGVidWcoKWAgYXMgdGhlIG1vZHVsZS5cbiAqL1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2RlYnVnJyk7XG5leHBvcnRzLmxvZyA9IGxvZztcbmV4cG9ydHMuZm9ybWF0QXJncyA9IGZvcm1hdEFyZ3M7XG5leHBvcnRzLnNhdmUgPSBzYXZlO1xuZXhwb3J0cy5sb2FkID0gbG9hZDtcbmV4cG9ydHMudXNlQ29sb3JzID0gdXNlQ29sb3JzO1xuZXhwb3J0cy5zdG9yYWdlID0gJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZVxuICAgICAgICAgICAgICAgJiYgJ3VuZGVmaW5lZCcgIT0gdHlwZW9mIGNocm9tZS5zdG9yYWdlXG4gICAgICAgICAgICAgICAgICA/IGNocm9tZS5zdG9yYWdlLmxvY2FsXG4gICAgICAgICAgICAgICAgICA6IGxvY2Fsc3RvcmFnZSgpO1xuXG4vKipcbiAqIENvbG9ycy5cbiAqL1xuXG5leHBvcnRzLmNvbG9ycyA9IFtcbiAgJ2xpZ2h0c2VhZ3JlZW4nLFxuICAnZm9yZXN0Z3JlZW4nLFxuICAnZ29sZGVucm9kJyxcbiAgJ2RvZGdlcmJsdWUnLFxuICAnZGFya29yY2hpZCcsXG4gICdjcmltc29uJ1xuXTtcblxuLyoqXG4gKiBDdXJyZW50bHkgb25seSBXZWJLaXQtYmFzZWQgV2ViIEluc3BlY3RvcnMsIEZpcmVmb3ggPj0gdjMxLFxuICogYW5kIHRoZSBGaXJlYnVnIGV4dGVuc2lvbiAoYW55IEZpcmVmb3ggdmVyc2lvbikgYXJlIGtub3duXG4gKiB0byBzdXBwb3J0IFwiJWNcIiBDU1MgY3VzdG9taXphdGlvbnMuXG4gKlxuICogVE9ETzogYWRkIGEgYGxvY2FsU3RvcmFnZWAgdmFyaWFibGUgdG8gZXhwbGljaXRseSBlbmFibGUvZGlzYWJsZSBjb2xvcnNcbiAqL1xuXG5mdW5jdGlvbiB1c2VDb2xvcnMoKSB7XG4gIC8vIE5COiBJbiBhbiBFbGVjdHJvbiBwcmVsb2FkIHNjcmlwdCwgZG9jdW1lbnQgd2lsbCBiZSBkZWZpbmVkIGJ1dCBub3QgZnVsbHlcbiAgLy8gaW5pdGlhbGl6ZWQuIFNpbmNlIHdlIGtub3cgd2UncmUgaW4gQ2hyb21lLCB3ZSdsbCBqdXN0IGRldGVjdCB0aGlzIGNhc2VcbiAgLy8gZXhwbGljaXRseVxuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LnByb2Nlc3MgJiYgd2luZG93LnByb2Nlc3MudHlwZSA9PT0gJ3JlbmRlcmVyJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLy8gaXMgd2Via2l0PyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xNjQ1OTYwNi8zNzY3NzNcbiAgLy8gZG9jdW1lbnQgaXMgdW5kZWZpbmVkIGluIHJlYWN0LW5hdGl2ZTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZS9wdWxsLzE2MzJcbiAgcmV0dXJuICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLldlYmtpdEFwcGVhcmFuY2UpIHx8XG4gICAgLy8gaXMgZmlyZWJ1Zz8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzk4MTIwLzM3Njc3M1xuICAgICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuY29uc29sZSAmJiAod2luZG93LmNvbnNvbGUuZmlyZWJ1ZyB8fCAod2luZG93LmNvbnNvbGUuZXhjZXB0aW9uICYmIHdpbmRvdy5jb25zb2xlLnRhYmxlKSkpIHx8XG4gICAgLy8gaXMgZmlyZWZveCA+PSB2MzE/XG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9Ub29scy9XZWJfQ29uc29sZSNTdHlsaW5nX21lc3NhZ2VzXG4gICAgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci51c2VyQWdlbnQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9maXJlZm94XFwvKFxcZCspLykgJiYgcGFyc2VJbnQoUmVnRXhwLiQxLCAxMCkgPj0gMzEpIHx8XG4gICAgLy8gZG91YmxlIGNoZWNrIHdlYmtpdCBpbiB1c2VyQWdlbnQganVzdCBpbiBjYXNlIHdlIGFyZSBpbiBhIHdvcmtlclxuICAgICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IudXNlckFnZW50ICYmIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvYXBwbGV3ZWJraXRcXC8oXFxkKykvKSk7XG59XG5cbi8qKlxuICogTWFwICVqIHRvIGBKU09OLnN0cmluZ2lmeSgpYCwgc2luY2Ugbm8gV2ViIEluc3BlY3RvcnMgZG8gdGhhdCBieSBkZWZhdWx0LlxuICovXG5cbmV4cG9ydHMuZm9ybWF0dGVycy5qID0gZnVuY3Rpb24odikge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuICdbVW5leHBlY3RlZEpTT05QYXJzZUVycm9yXTogJyArIGVyci5tZXNzYWdlO1xuICB9XG59O1xuXG5cbi8qKlxuICogQ29sb3JpemUgbG9nIGFyZ3VtZW50cyBpZiBlbmFibGVkLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZm9ybWF0QXJncyhhcmdzKSB7XG4gIHZhciB1c2VDb2xvcnMgPSB0aGlzLnVzZUNvbG9ycztcblxuICBhcmdzWzBdID0gKHVzZUNvbG9ycyA/ICclYycgOiAnJylcbiAgICArIHRoaXMubmFtZXNwYWNlXG4gICAgKyAodXNlQ29sb3JzID8gJyAlYycgOiAnICcpXG4gICAgKyBhcmdzWzBdXG4gICAgKyAodXNlQ29sb3JzID8gJyVjICcgOiAnICcpXG4gICAgKyAnKycgKyBleHBvcnRzLmh1bWFuaXplKHRoaXMuZGlmZik7XG5cbiAgaWYgKCF1c2VDb2xvcnMpIHJldHVybjtcblxuICB2YXIgYyA9ICdjb2xvcjogJyArIHRoaXMuY29sb3I7XG4gIGFyZ3Muc3BsaWNlKDEsIDAsIGMsICdjb2xvcjogaW5oZXJpdCcpXG5cbiAgLy8gdGhlIGZpbmFsIFwiJWNcIiBpcyBzb21ld2hhdCB0cmlja3ksIGJlY2F1c2UgdGhlcmUgY291bGQgYmUgb3RoZXJcbiAgLy8gYXJndW1lbnRzIHBhc3NlZCBlaXRoZXIgYmVmb3JlIG9yIGFmdGVyIHRoZSAlYywgc28gd2UgbmVlZCB0b1xuICAvLyBmaWd1cmUgb3V0IHRoZSBjb3JyZWN0IGluZGV4IHRvIGluc2VydCB0aGUgQ1NTIGludG9cbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxhc3RDID0gMDtcbiAgYXJnc1swXS5yZXBsYWNlKC8lW2EtekEtWiVdL2csIGZ1bmN0aW9uKG1hdGNoKSB7XG4gICAgaWYgKCclJScgPT09IG1hdGNoKSByZXR1cm47XG4gICAgaW5kZXgrKztcbiAgICBpZiAoJyVjJyA9PT0gbWF0Y2gpIHtcbiAgICAgIC8vIHdlIG9ubHkgYXJlIGludGVyZXN0ZWQgaW4gdGhlICpsYXN0KiAlY1xuICAgICAgLy8gKHRoZSB1c2VyIG1heSBoYXZlIHByb3ZpZGVkIHRoZWlyIG93bilcbiAgICAgIGxhc3RDID0gaW5kZXg7XG4gICAgfVxuICB9KTtcblxuICBhcmdzLnNwbGljZShsYXN0QywgMCwgYyk7XG59XG5cbi8qKlxuICogSW52b2tlcyBgY29uc29sZS5sb2coKWAgd2hlbiBhdmFpbGFibGUuXG4gKiBOby1vcCB3aGVuIGBjb25zb2xlLmxvZ2AgaXMgbm90IGEgXCJmdW5jdGlvblwiLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gbG9nKCkge1xuICAvLyB0aGlzIGhhY2tlcnkgaXMgcmVxdWlyZWQgZm9yIElFOC85LCB3aGVyZVxuICAvLyB0aGUgYGNvbnNvbGUubG9nYCBmdW5jdGlvbiBkb2Vzbid0IGhhdmUgJ2FwcGx5J1xuICByZXR1cm4gJ29iamVjdCcgPT09IHR5cGVvZiBjb25zb2xlXG4gICAgJiYgY29uc29sZS5sb2dcbiAgICAmJiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbChjb25zb2xlLmxvZywgY29uc29sZSwgYXJndW1lbnRzKTtcbn1cblxuLyoqXG4gKiBTYXZlIGBuYW1lc3BhY2VzYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2F2ZShuYW1lc3BhY2VzKSB7XG4gIHRyeSB7XG4gICAgaWYgKG51bGwgPT0gbmFtZXNwYWNlcykge1xuICAgICAgZXhwb3J0cy5zdG9yYWdlLnJlbW92ZUl0ZW0oJ2RlYnVnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZyA9IG5hbWVzcGFjZXM7XG4gICAgfVxuICB9IGNhdGNoKGUpIHt9XG59XG5cbi8qKlxuICogTG9hZCBgbmFtZXNwYWNlc2AuXG4gKlxuICogQHJldHVybiB7U3RyaW5nfSByZXR1cm5zIHRoZSBwcmV2aW91c2x5IHBlcnNpc3RlZCBkZWJ1ZyBtb2Rlc1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gbG9hZCgpIHtcbiAgdmFyIHI7XG4gIHRyeSB7XG4gICAgciA9IGV4cG9ydHMuc3RvcmFnZS5kZWJ1ZztcbiAgfSBjYXRjaChlKSB7fVxuXG4gIC8vIElmIGRlYnVnIGlzbid0IHNldCBpbiBMUywgYW5kIHdlJ3JlIGluIEVsZWN0cm9uLCB0cnkgdG8gbG9hZCAkREVCVUdcbiAgaWYgKCFyICYmIHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiAnZW52JyBpbiBwcm9jZXNzKSB7XG4gICAgciA9IHByb2Nlc3MuZW52LkRFQlVHO1xuICB9XG5cbiAgcmV0dXJuIHI7XG59XG5cbi8qKlxuICogRW5hYmxlIG5hbWVzcGFjZXMgbGlzdGVkIGluIGBsb2NhbFN0b3JhZ2UuZGVidWdgIGluaXRpYWxseS5cbiAqL1xuXG5leHBvcnRzLmVuYWJsZShsb2FkKCkpO1xuXG4vKipcbiAqIExvY2Fsc3RvcmFnZSBhdHRlbXB0cyB0byByZXR1cm4gdGhlIGxvY2Fsc3RvcmFnZS5cbiAqXG4gKiBUaGlzIGlzIG5lY2Vzc2FyeSBiZWNhdXNlIHNhZmFyaSB0aHJvd3NcbiAqIHdoZW4gYSB1c2VyIGRpc2FibGVzIGNvb2tpZXMvbG9jYWxzdG9yYWdlXG4gKiBhbmQgeW91IGF0dGVtcHQgdG8gYWNjZXNzIGl0LlxuICpcbiAqIEByZXR1cm4ge0xvY2FsU3RvcmFnZX1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGxvY2Fsc3RvcmFnZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgfSBjYXRjaCAoZSkge31cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL2RlYnVnL3NyYy9icm93c2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , EventTarget = __webpack_require__(20)\n  ;\n\nfunction EventEmitter() {\n  EventTarget.call(this);\n}\n\ninherits(EventEmitter, EventTarget);\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  if (type) {\n    delete this._listeners[type];\n  } else {\n    this._listeners = {};\n  }\n};\n\nEventEmitter.prototype.once = function(type, listener) {\n  var self = this\n    , fired = false;\n\n  function g() {\n    self.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  this.on(type, g);\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var listeners = this._listeners[type];\n  if (!listeners) {\n    return;\n  }\n  var args = Array.prototype.slice.call(arguments, 1);\n  for (var i = 0; i < listeners.length; i++) {\n    listeners[i].apply(this, args);\n  }\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;\nEventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;\n\nmodule.exports.EventEmitter = EventEmitter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvZXZlbnQvZW1pdHRlci5qcz81NTA5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNCQUFzQjtBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRUYXJnZXQgPSByZXF1aXJlKCcuL2V2ZW50dGFyZ2V0JylcbiAgO1xuXG5mdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7XG4gIEV2ZW50VGFyZ2V0LmNhbGwodGhpcyk7XG59XG5cbmluaGVyaXRzKEV2ZW50RW1pdHRlciwgRXZlbnRUYXJnZXQpO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgaWYgKHR5cGUpIHtcbiAgICBkZWxldGUgdGhpcy5fbGlzdGVuZXJzW3R5cGVdO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX2xpc3RlbmVycyA9IHt9O1xuICB9XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uY2UgPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICB2YXIgc2VsZiA9IHRoaXNcbiAgICAsIGZpcmVkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gZygpIHtcbiAgICBzZWxmLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGcpO1xuXG4gICAgaWYgKCFmaXJlZCkge1xuICAgICAgZmlyZWQgPSB0cnVlO1xuICAgICAgbGlzdGVuZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG4gIH1cblxuICB0aGlzLm9uKHR5cGUsIGcpO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5lbWl0ID0gZnVuY3Rpb24odHlwZSkge1xuICB2YXIgbGlzdGVuZXJzID0gdGhpcy5fbGlzdGVuZXJzW3R5cGVdO1xuICBpZiAoIWxpc3RlbmVycykge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICB9XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IEV2ZW50VGFyZ2V0LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyO1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9IEV2ZW50VGFyZ2V0LnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyO1xuXG5tb2R1bGUuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9ldmVudC9lbWl0dGVyLmpzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar URL = __webpack_require__(19);\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:utils:url');\n}\n\nmodule.exports = {\n  getOrigin: function(url) {\n    if (!url) {\n      return null;\n    }\n\n    var p = new URL(url);\n    if (p.protocol === 'file:') {\n      return null;\n    }\n\n    var port = p.port;\n    if (!port) {\n      port = (p.protocol === 'https:') ? '443' : '80';\n    }\n\n    return p.protocol + '//' + p.hostname + ':' + port;\n  }\n\n, isOriginEqual: function(a, b) {\n    var res = this.getOrigin(a) === this.getOrigin(b);\n    debug('same', a, b, res);\n    return res;\n  }\n\n, isSchemeEqual: function(a, b) {\n    return (a.split(':')[0] === b.split(':')[0]);\n  }\n\n, addPath: function (url, path) {\n    var qs = url.split('?');\n    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');\n  }\n\n, addQuery: function (url, q) {\n    return url + (url.indexOf('?') === -1 ? ('?' + q) : ('&' + q));\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvdXJsLmpzPzA1ZGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IitDQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgVVJMID0gcmVxdWlyZSgndXJsLXBhcnNlJyk7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6dXRpbHM6dXJsJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRPcmlnaW46IGZ1bmN0aW9uKHVybCkge1xuICAgIGlmICghdXJsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgcCA9IG5ldyBVUkwodXJsKTtcbiAgICBpZiAocC5wcm90b2NvbCA9PT0gJ2ZpbGU6Jykge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHBvcnQgPSBwLnBvcnQ7XG4gICAgaWYgKCFwb3J0KSB7XG4gICAgICBwb3J0ID0gKHAucHJvdG9jb2wgPT09ICdodHRwczonKSA/ICc0NDMnIDogJzgwJztcbiAgICB9XG5cbiAgICByZXR1cm4gcC5wcm90b2NvbCArICcvLycgKyBwLmhvc3RuYW1lICsgJzonICsgcG9ydDtcbiAgfVxuXG4sIGlzT3JpZ2luRXF1YWw6IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgcmVzID0gdGhpcy5nZXRPcmlnaW4oYSkgPT09IHRoaXMuZ2V0T3JpZ2luKGIpO1xuICAgIGRlYnVnKCdzYW1lJywgYSwgYiwgcmVzKTtcbiAgICByZXR1cm4gcmVzO1xuICB9XG5cbiwgaXNTY2hlbWVFcXVhbDogZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiAoYS5zcGxpdCgnOicpWzBdID09PSBiLnNwbGl0KCc6JylbMF0pO1xuICB9XG5cbiwgYWRkUGF0aDogZnVuY3Rpb24gKHVybCwgcGF0aCkge1xuICAgIHZhciBxcyA9IHVybC5zcGxpdCgnPycpO1xuICAgIHJldHVybiBxc1swXSArIHBhdGggKyAocXNbMV0gPyAnPycgKyBxc1sxXSA6ICcnKTtcbiAgfVxuXG4sIGFkZFF1ZXJ5OiBmdW5jdGlvbiAodXJsLCBxKSB7XG4gICAgcmV0dXJuIHVybCArICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICgnPycgKyBxKSA6ICgnJicgKyBxKSk7XG4gIH1cbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi91dGlscy91cmwuanNcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = \"function\" === \"function\" && __webpack_require__(49);\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return JSON3;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(48)(module), __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvanNvbjMvbGliL2pzb24zLmpzP2I4NDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6InNEQUFBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLGtDQUFrQyxpREFBaUQ7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLG9EQUFvRDtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsOEJBQThCO0FBQ3ZFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLDZCQUE2QjtBQUM3Rix1RUFBdUUsaUNBQWlDO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRUFBb0U7QUFDcEU7QUFDQSx1Q0FBdUMsVUFBVTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxnQkFBZ0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFLDREQUE0RDtBQUM1RDtBQUNBO0FBQ0EsaURBQWlELE1BQU07QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLHdEQUF3RCwwRUFBMEUsT0FBTywwQkFBMEIsU0FBUztBQUM1SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxnRUFBZ0UsZ0JBQWdCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLDJCQUEyQjtBQUM1RjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLE9BQU87QUFDckMsMENBQTBDO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxLQUFLO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGdCQUFnQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxrQkFBa0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw2RkFBNkY7QUFDckgsbUVBQW1FO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG1HQUFtRztBQUM3SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLG1HQUFtRztBQUM3STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsVUFBVTtBQUNuRDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0ZBQXdGO0FBQ3hGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFBQTtBQUNMO0FBQ0EsQ0FBQyIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIEpTT04gdjMuMy4yIHwgaHR0cDovL2Jlc3RpZWpzLmdpdGh1Yi5pby9qc29uMyB8IENvcHlyaWdodCAyMDEyLTIwMTQsIEtpdCBDYW1icmlkZ2UgfCBodHRwOi8va2l0Lm1pdC1saWNlbnNlLm9yZyAqL1xuOyhmdW5jdGlvbiAoKSB7XG4gIC8vIERldGVjdCB0aGUgYGRlZmluZWAgZnVuY3Rpb24gZXhwb3NlZCBieSBhc3luY2hyb25vdXMgbW9kdWxlIGxvYWRlcnMuIFRoZVxuICAvLyBzdHJpY3QgYGRlZmluZWAgY2hlY2sgaXMgbmVjZXNzYXJ5IGZvciBjb21wYXRpYmlsaXR5IHdpdGggYHIuanNgLlxuICB2YXIgaXNMb2FkZXIgPSB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZDtcblxuICAvLyBBIHNldCBvZiB0eXBlcyB1c2VkIHRvIGRpc3Rpbmd1aXNoIG9iamVjdHMgZnJvbSBwcmltaXRpdmVzLlxuICB2YXIgb2JqZWN0VHlwZXMgPSB7XG4gICAgXCJmdW5jdGlvblwiOiB0cnVlLFxuICAgIFwib2JqZWN0XCI6IHRydWVcbiAgfTtcblxuICAvLyBEZXRlY3QgdGhlIGBleHBvcnRzYCBvYmplY3QgZXhwb3NlZCBieSBDb21tb25KUyBpbXBsZW1lbnRhdGlvbnMuXG4gIHZhciBmcmVlRXhwb3J0cyA9IG9iamVjdFR5cGVzW3R5cGVvZiBleHBvcnRzXSAmJiBleHBvcnRzICYmICFleHBvcnRzLm5vZGVUeXBlICYmIGV4cG9ydHM7XG5cbiAgLy8gVXNlIHRoZSBgZ2xvYmFsYCBvYmplY3QgZXhwb3NlZCBieSBOb2RlIChpbmNsdWRpbmcgQnJvd3NlcmlmeSB2aWFcbiAgLy8gYGluc2VydC1tb2R1bGUtZ2xvYmFsc2ApLCBOYXJ3aGFsLCBhbmQgUmluZ28gYXMgdGhlIGRlZmF1bHQgY29udGV4dCxcbiAgLy8gYW5kIHRoZSBgd2luZG93YCBvYmplY3QgaW4gYnJvd3NlcnMuIFJoaW5vIGV4cG9ydHMgYSBgZ2xvYmFsYCBmdW5jdGlvblxuICAvLyBpbnN0ZWFkLlxuICB2YXIgcm9vdCA9IG9iamVjdFR5cGVzW3R5cGVvZiB3aW5kb3ddICYmIHdpbmRvdyB8fCB0aGlzLFxuICAgICAgZnJlZUdsb2JhbCA9IGZyZWVFeHBvcnRzICYmIG9iamVjdFR5cGVzW3R5cGVvZiBtb2R1bGVdICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIHR5cGVvZiBnbG9iYWwgPT0gXCJvYmplY3RcIiAmJiBnbG9iYWw7XG5cbiAgaWYgKGZyZWVHbG9iYWwgJiYgKGZyZWVHbG9iYWxbXCJnbG9iYWxcIl0gPT09IGZyZWVHbG9iYWwgfHwgZnJlZUdsb2JhbFtcIndpbmRvd1wiXSA9PT0gZnJlZUdsb2JhbCB8fCBmcmVlR2xvYmFsW1wic2VsZlwiXSA9PT0gZnJlZUdsb2JhbCkpIHtcbiAgICByb290ID0gZnJlZUdsb2JhbDtcbiAgfVxuXG4gIC8vIFB1YmxpYzogSW5pdGlhbGl6ZXMgSlNPTiAzIHVzaW5nIHRoZSBnaXZlbiBgY29udGV4dGAgb2JqZWN0LCBhdHRhY2hpbmcgdGhlXG4gIC8vIGBzdHJpbmdpZnlgIGFuZCBgcGFyc2VgIGZ1bmN0aW9ucyB0byB0aGUgc3BlY2lmaWVkIGBleHBvcnRzYCBvYmplY3QuXG4gIGZ1bmN0aW9uIHJ1bkluQ29udGV4dChjb250ZXh0LCBleHBvcnRzKSB7XG4gICAgY29udGV4dCB8fCAoY29udGV4dCA9IHJvb3RbXCJPYmplY3RcIl0oKSk7XG4gICAgZXhwb3J0cyB8fCAoZXhwb3J0cyA9IHJvb3RbXCJPYmplY3RcIl0oKSk7XG5cbiAgICAvLyBOYXRpdmUgY29uc3RydWN0b3IgYWxpYXNlcy5cbiAgICB2YXIgTnVtYmVyID0gY29udGV4dFtcIk51bWJlclwiXSB8fCByb290W1wiTnVtYmVyXCJdLFxuICAgICAgICBTdHJpbmcgPSBjb250ZXh0W1wiU3RyaW5nXCJdIHx8IHJvb3RbXCJTdHJpbmdcIl0sXG4gICAgICAgIE9iamVjdCA9IGNvbnRleHRbXCJPYmplY3RcIl0gfHwgcm9vdFtcIk9iamVjdFwiXSxcbiAgICAgICAgRGF0ZSA9IGNvbnRleHRbXCJEYXRlXCJdIHx8IHJvb3RbXCJEYXRlXCJdLFxuICAgICAgICBTeW50YXhFcnJvciA9IGNvbnRleHRbXCJTeW50YXhFcnJvclwiXSB8fCByb290W1wiU3ludGF4RXJyb3JcIl0sXG4gICAgICAgIFR5cGVFcnJvciA9IGNvbnRleHRbXCJUeXBlRXJyb3JcIl0gfHwgcm9vdFtcIlR5cGVFcnJvclwiXSxcbiAgICAgICAgTWF0aCA9IGNvbnRleHRbXCJNYXRoXCJdIHx8IHJvb3RbXCJNYXRoXCJdLFxuICAgICAgICBuYXRpdmVKU09OID0gY29udGV4dFtcIkpTT05cIl0gfHwgcm9vdFtcIkpTT05cIl07XG5cbiAgICAvLyBEZWxlZ2F0ZSB0byB0aGUgbmF0aXZlIGBzdHJpbmdpZnlgIGFuZCBgcGFyc2VgIGltcGxlbWVudGF0aW9ucy5cbiAgICBpZiAodHlwZW9mIG5hdGl2ZUpTT04gPT0gXCJvYmplY3RcIiAmJiBuYXRpdmVKU09OKSB7XG4gICAgICBleHBvcnRzLnN0cmluZ2lmeSA9IG5hdGl2ZUpTT04uc3RyaW5naWZ5O1xuICAgICAgZXhwb3J0cy5wYXJzZSA9IG5hdGl2ZUpTT04ucGFyc2U7XG4gICAgfVxuXG4gICAgLy8gQ29udmVuaWVuY2UgYWxpYXNlcy5cbiAgICB2YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlLFxuICAgICAgICBnZXRDbGFzcyA9IG9iamVjdFByb3RvLnRvU3RyaW5nLFxuICAgICAgICBpc1Byb3BlcnR5LCBmb3JFYWNoLCB1bmRlZjtcblxuICAgIC8vIFRlc3QgdGhlIGBEYXRlI2dldFVUQypgIG1ldGhvZHMuIEJhc2VkIG9uIHdvcmsgYnkgQFlhZmZsZS5cbiAgICB2YXIgaXNFeHRlbmRlZCA9IG5ldyBEYXRlKC0zNTA5ODI3MzM0NTczMjkyKTtcbiAgICB0cnkge1xuICAgICAgLy8gVGhlIGBnZXRVVENGdWxsWWVhcmAsIGBNb250aGAsIGFuZCBgRGF0ZWAgbWV0aG9kcyByZXR1cm4gbm9uc2Vuc2ljYWxcbiAgICAgIC8vIHJlc3VsdHMgZm9yIGNlcnRhaW4gZGF0ZXMgaW4gT3BlcmEgPj0gMTAuNTMuXG4gICAgICBpc0V4dGVuZGVkID0gaXNFeHRlbmRlZC5nZXRVVENGdWxsWWVhcigpID09IC0xMDkyNTIgJiYgaXNFeHRlbmRlZC5nZXRVVENNb250aCgpID09PSAwICYmIGlzRXh0ZW5kZWQuZ2V0VVRDRGF0ZSgpID09PSAxICYmXG4gICAgICAgIC8vIFNhZmFyaSA8IDIuMC4yIHN0b3JlcyB0aGUgaW50ZXJuYWwgbWlsbGlzZWNvbmQgdGltZSB2YWx1ZSBjb3JyZWN0bHksXG4gICAgICAgIC8vIGJ1dCBjbGlwcyB0aGUgdmFsdWVzIHJldHVybmVkIGJ5IHRoZSBkYXRlIG1ldGhvZHMgdG8gdGhlIHJhbmdlIG9mXG4gICAgICAgIC8vIHNpZ25lZCAzMi1iaXQgaW50ZWdlcnMgKFstMiAqKiAzMSwgMiAqKiAzMSAtIDFdKS5cbiAgICAgICAgaXNFeHRlbmRlZC5nZXRVVENIb3VycygpID09IDEwICYmIGlzRXh0ZW5kZWQuZ2V0VVRDTWludXRlcygpID09IDM3ICYmIGlzRXh0ZW5kZWQuZ2V0VVRDU2Vjb25kcygpID09IDYgJiYgaXNFeHRlbmRlZC5nZXRVVENNaWxsaXNlY29uZHMoKSA9PSA3MDg7XG4gICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7fVxuXG4gICAgLy8gSW50ZXJuYWw6IERldGVybWluZXMgd2hldGhlciB0aGUgbmF0aXZlIGBKU09OLnN0cmluZ2lmeWAgYW5kIGBwYXJzZWBcbiAgICAvLyBpbXBsZW1lbnRhdGlvbnMgYXJlIHNwZWMtY29tcGxpYW50LiBCYXNlZCBvbiB3b3JrIGJ5IEtlbiBTbnlkZXIuXG4gICAgZnVuY3Rpb24gaGFzKG5hbWUpIHtcbiAgICAgIGlmIChoYXNbbmFtZV0gIT09IHVuZGVmKSB7XG4gICAgICAgIC8vIFJldHVybiBjYWNoZWQgZmVhdHVyZSB0ZXN0IHJlc3VsdC5cbiAgICAgICAgcmV0dXJuIGhhc1tuYW1lXTtcbiAgICAgIH1cbiAgICAgIHZhciBpc1N1cHBvcnRlZDtcbiAgICAgIGlmIChuYW1lID09IFwiYnVnLXN0cmluZy1jaGFyLWluZGV4XCIpIHtcbiAgICAgICAgLy8gSUUgPD0gNyBkb2Vzbid0IHN1cHBvcnQgYWNjZXNzaW5nIHN0cmluZyBjaGFyYWN0ZXJzIHVzaW5nIHNxdWFyZVxuICAgICAgICAvLyBicmFja2V0IG5vdGF0aW9uLiBJRSA4IG9ubHkgc3VwcG9ydHMgdGhpcyBmb3IgcHJpbWl0aXZlcy5cbiAgICAgICAgaXNTdXBwb3J0ZWQgPSBcImFcIlswXSAhPSBcImFcIjtcbiAgICAgIH0gZWxzZSBpZiAobmFtZSA9PSBcImpzb25cIikge1xuICAgICAgICAvLyBJbmRpY2F0ZXMgd2hldGhlciBib3RoIGBKU09OLnN0cmluZ2lmeWAgYW5kIGBKU09OLnBhcnNlYCBhcmVcbiAgICAgICAgLy8gc3VwcG9ydGVkLlxuICAgICAgICBpc1N1cHBvcnRlZCA9IGhhcyhcImpzb24tc3RyaW5naWZ5XCIpICYmIGhhcyhcImpzb24tcGFyc2VcIik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgdmFsdWUsIHNlcmlhbGl6ZWQgPSAne1wiYVwiOlsxLHRydWUsZmFsc2UsbnVsbCxcIlxcXFx1MDAwMFxcXFxiXFxcXG5cXFxcZlxcXFxyXFxcXHRcIl19JztcbiAgICAgICAgLy8gVGVzdCBgSlNPTi5zdHJpbmdpZnlgLlxuICAgICAgICBpZiAobmFtZSA9PSBcImpzb24tc3RyaW5naWZ5XCIpIHtcbiAgICAgICAgICB2YXIgc3RyaW5naWZ5ID0gZXhwb3J0cy5zdHJpbmdpZnksIHN0cmluZ2lmeVN1cHBvcnRlZCA9IHR5cGVvZiBzdHJpbmdpZnkgPT0gXCJmdW5jdGlvblwiICYmIGlzRXh0ZW5kZWQ7XG4gICAgICAgICAgaWYgKHN0cmluZ2lmeVN1cHBvcnRlZCkge1xuICAgICAgICAgICAgLy8gQSB0ZXN0IGZ1bmN0aW9uIG9iamVjdCB3aXRoIGEgY3VzdG9tIGB0b0pTT05gIG1ldGhvZC5cbiAgICAgICAgICAgICh2YWx1ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgICB9KS50b0pTT04gPSB2YWx1ZTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHN0cmluZ2lmeVN1cHBvcnRlZCA9XG4gICAgICAgICAgICAgICAgLy8gRmlyZWZveCAzLjFiMSBhbmQgYjIgc2VyaWFsaXplIHN0cmluZywgbnVtYmVyLCBhbmQgYm9vbGVhblxuICAgICAgICAgICAgICAgIC8vIHByaW1pdGl2ZXMgYXMgb2JqZWN0IGxpdGVyYWxzLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeSgwKSA9PT0gXCIwXCIgJiZcbiAgICAgICAgICAgICAgICAvLyBGRiAzLjFiMSwgYjIsIGFuZCBKU09OIDIgc2VyaWFsaXplIHdyYXBwZWQgcHJpbWl0aXZlcyBhcyBvYmplY3RcbiAgICAgICAgICAgICAgICAvLyBsaXRlcmFscy5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobmV3IE51bWJlcigpKSA9PT0gXCIwXCIgJiZcbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobmV3IFN0cmluZygpKSA9PSAnXCJcIicgJiZcbiAgICAgICAgICAgICAgICAvLyBGRiAzLjFiMSwgMiB0aHJvdyBhbiBlcnJvciBpZiB0aGUgdmFsdWUgaXMgYG51bGxgLCBgdW5kZWZpbmVkYCwgb3JcbiAgICAgICAgICAgICAgICAvLyBkb2VzIG5vdCBkZWZpbmUgYSBjYW5vbmljYWwgSlNPTiByZXByZXNlbnRhdGlvbiAodGhpcyBhcHBsaWVzIHRvXG4gICAgICAgICAgICAgICAgLy8gb2JqZWN0cyB3aXRoIGB0b0pTT05gIHByb3BlcnRpZXMgYXMgd2VsbCwgKnVubGVzcyogdGhleSBhcmUgbmVzdGVkXG4gICAgICAgICAgICAgICAgLy8gd2l0aGluIGFuIG9iamVjdCBvciBhcnJheSkuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KGdldENsYXNzKSA9PT0gdW5kZWYgJiZcbiAgICAgICAgICAgICAgICAvLyBJRSA4IHNlcmlhbGl6ZXMgYHVuZGVmaW5lZGAgYXMgYFwidW5kZWZpbmVkXCJgLiBTYWZhcmkgPD0gNS4xLjcgYW5kXG4gICAgICAgICAgICAgICAgLy8gRkYgMy4xYjMgcGFzcyB0aGlzIHRlc3QuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KHVuZGVmKSA9PT0gdW5kZWYgJiZcbiAgICAgICAgICAgICAgICAvLyBTYWZhcmkgPD0gNS4xLjcgYW5kIEZGIDMuMWIzIHRocm93IGBFcnJvcmBzIGFuZCBgVHlwZUVycm9yYHMsXG4gICAgICAgICAgICAgICAgLy8gcmVzcGVjdGl2ZWx5LCBpZiB0aGUgdmFsdWUgaXMgb21pdHRlZCBlbnRpcmVseS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoKSA9PT0gdW5kZWYgJiZcbiAgICAgICAgICAgICAgICAvLyBGRiAzLjFiMSwgMiB0aHJvdyBhbiBlcnJvciBpZiB0aGUgZ2l2ZW4gdmFsdWUgaXMgbm90IGEgbnVtYmVyLFxuICAgICAgICAgICAgICAgIC8vIHN0cmluZywgYXJyYXksIG9iamVjdCwgQm9vbGVhbiwgb3IgYG51bGxgIGxpdGVyYWwuIFRoaXMgYXBwbGllcyB0b1xuICAgICAgICAgICAgICAgIC8vIG9iamVjdHMgd2l0aCBjdXN0b20gYHRvSlNPTmAgbWV0aG9kcyBhcyB3ZWxsLCB1bmxlc3MgdGhleSBhcmUgbmVzdGVkXG4gICAgICAgICAgICAgICAgLy8gaW5zaWRlIG9iamVjdCBvciBhcnJheSBsaXRlcmFscy4gWVVJIDMuMC4wYjEgaWdub3JlcyBjdXN0b20gYHRvSlNPTmBcbiAgICAgICAgICAgICAgICAvLyBtZXRob2RzIGVudGlyZWx5LlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeSh2YWx1ZSkgPT09IFwiMVwiICYmXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KFt2YWx1ZV0pID09IFwiWzFdXCIgJiZcbiAgICAgICAgICAgICAgICAvLyBQcm90b3R5cGUgPD0gMS42LjEgc2VyaWFsaXplcyBgW3VuZGVmaW5lZF1gIGFzIGBcIltdXCJgIGluc3RlYWQgb2ZcbiAgICAgICAgICAgICAgICAvLyBgXCJbbnVsbF1cImAuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KFt1bmRlZl0pID09IFwiW251bGxdXCIgJiZcbiAgICAgICAgICAgICAgICAvLyBZVUkgMy4wLjBiMSBmYWlscyB0byBzZXJpYWxpemUgYG51bGxgIGxpdGVyYWxzLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShudWxsKSA9PSBcIm51bGxcIiAmJlxuICAgICAgICAgICAgICAgIC8vIEZGIDMuMWIxLCAyIGhhbHRzIHNlcmlhbGl6YXRpb24gaWYgYW4gYXJyYXkgY29udGFpbnMgYSBmdW5jdGlvbjpcbiAgICAgICAgICAgICAgICAvLyBgWzEsIHRydWUsIGdldENsYXNzLCAxXWAgc2VyaWFsaXplcyBhcyBcIlsxLHRydWUsXSxcIi4gRkYgMy4xYjNcbiAgICAgICAgICAgICAgICAvLyBlbGlkZXMgbm9uLUpTT04gdmFsdWVzIGZyb20gb2JqZWN0cyBhbmQgYXJyYXlzLCB1bmxlc3MgdGhleVxuICAgICAgICAgICAgICAgIC8vIGRlZmluZSBjdXN0b20gYHRvSlNPTmAgbWV0aG9kcy5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoW3VuZGVmLCBnZXRDbGFzcywgbnVsbF0pID09IFwiW251bGwsbnVsbCxudWxsXVwiICYmXG4gICAgICAgICAgICAgICAgLy8gU2ltcGxlIHNlcmlhbGl6YXRpb24gdGVzdC4gRkYgMy4xYjEgdXNlcyBVbmljb2RlIGVzY2FwZSBzZXF1ZW5jZXNcbiAgICAgICAgICAgICAgICAvLyB3aGVyZSBjaGFyYWN0ZXIgZXNjYXBlIGNvZGVzIGFyZSBleHBlY3RlZCAoZS5nLiwgYFxcYmAgPT4gYFxcdTAwMDhgKS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkoeyBcImFcIjogW3ZhbHVlLCB0cnVlLCBmYWxzZSwgbnVsbCwgXCJcXHgwMFxcYlxcblxcZlxcclxcdFwiXSB9KSA9PSBzZXJpYWxpemVkICYmXG4gICAgICAgICAgICAgICAgLy8gRkYgMy4xYjEgYW5kIGIyIGlnbm9yZSB0aGUgYGZpbHRlcmAgYW5kIGB3aWR0aGAgYXJndW1lbnRzLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShudWxsLCB2YWx1ZSkgPT09IFwiMVwiICYmXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KFsxLCAyXSwgbnVsbCwgMSkgPT0gXCJbXFxuIDEsXFxuIDJcXG5dXCIgJiZcbiAgICAgICAgICAgICAgICAvLyBKU09OIDIsIFByb3RvdHlwZSA8PSAxLjcsIGFuZCBvbGRlciBXZWJLaXQgYnVpbGRzIGluY29ycmVjdGx5XG4gICAgICAgICAgICAgICAgLy8gc2VyaWFsaXplIGV4dGVuZGVkIHllYXJzLlxuICAgICAgICAgICAgICAgIHN0cmluZ2lmeShuZXcgRGF0ZSgtOC42NGUxNSkpID09ICdcIi0yNzE4MjEtMDQtMjBUMDA6MDA6MDAuMDAwWlwiJyAmJlxuICAgICAgICAgICAgICAgIC8vIFRoZSBtaWxsaXNlY29uZHMgYXJlIG9wdGlvbmFsIGluIEVTIDUsIGJ1dCByZXF1aXJlZCBpbiA1LjEuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG5ldyBEYXRlKDguNjRlMTUpKSA9PSAnXCIrMjc1NzYwLTA5LTEzVDAwOjAwOjAwLjAwMFpcIicgJiZcbiAgICAgICAgICAgICAgICAvLyBGaXJlZm94IDw9IDExLjAgaW5jb3JyZWN0bHkgc2VyaWFsaXplcyB5ZWFycyBwcmlvciB0byAwIGFzIG5lZ2F0aXZlXG4gICAgICAgICAgICAgICAgLy8gZm91ci1kaWdpdCB5ZWFycyBpbnN0ZWFkIG9mIHNpeC1kaWdpdCB5ZWFycy4gQ3JlZGl0czogQFlhZmZsZS5cbiAgICAgICAgICAgICAgICBzdHJpbmdpZnkobmV3IERhdGUoLTYyMTk4NzU1MmU1KSkgPT0gJ1wiLTAwMDAwMS0wMS0wMVQwMDowMDowMC4wMDBaXCInICYmXG4gICAgICAgICAgICAgICAgLy8gU2FmYXJpIDw9IDUuMS41IGFuZCBPcGVyYSA+PSAxMC41MyBpbmNvcnJlY3RseSBzZXJpYWxpemUgbWlsbGlzZWNvbmRcbiAgICAgICAgICAgICAgICAvLyB2YWx1ZXMgbGVzcyB0aGFuIDEwMDAuIENyZWRpdHM6IEBZYWZmbGUuXG4gICAgICAgICAgICAgICAgc3RyaW5naWZ5KG5ldyBEYXRlKC0xKSkgPT0gJ1wiMTk2OS0xMi0zMVQyMzo1OTo1OS45OTlaXCInO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7XG4gICAgICAgICAgICAgIHN0cmluZ2lmeVN1cHBvcnRlZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpc1N1cHBvcnRlZCA9IHN0cmluZ2lmeVN1cHBvcnRlZDtcbiAgICAgICAgfVxuICAgICAgICAvLyBUZXN0IGBKU09OLnBhcnNlYC5cbiAgICAgICAgaWYgKG5hbWUgPT0gXCJqc29uLXBhcnNlXCIpIHtcbiAgICAgICAgICB2YXIgcGFyc2UgPSBleHBvcnRzLnBhcnNlO1xuICAgICAgICAgIGlmICh0eXBlb2YgcGFyc2UgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAvLyBGRiAzLjFiMSwgYjIgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYSBiYXJlIGxpdGVyYWwgaXMgcHJvdmlkZWQuXG4gICAgICAgICAgICAgIC8vIENvbmZvcm1pbmcgaW1wbGVtZW50YXRpb25zIHNob3VsZCBhbHNvIGNvZXJjZSB0aGUgaW5pdGlhbCBhcmd1bWVudCB0b1xuICAgICAgICAgICAgICAvLyBhIHN0cmluZyBwcmlvciB0byBwYXJzaW5nLlxuICAgICAgICAgICAgICBpZiAocGFyc2UoXCIwXCIpID09PSAwICYmICFwYXJzZShmYWxzZSkpIHtcbiAgICAgICAgICAgICAgICAvLyBTaW1wbGUgcGFyc2luZyB0ZXN0LlxuICAgICAgICAgICAgICAgIHZhbHVlID0gcGFyc2Uoc2VyaWFsaXplZCk7XG4gICAgICAgICAgICAgICAgdmFyIHBhcnNlU3VwcG9ydGVkID0gdmFsdWVbXCJhXCJdLmxlbmd0aCA9PSA1ICYmIHZhbHVlW1wiYVwiXVswXSA9PT0gMTtcbiAgICAgICAgICAgICAgICBpZiAocGFyc2VTdXBwb3J0ZWQpIHtcbiAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNhZmFyaSA8PSA1LjEuMiBhbmQgRkYgMy4xYjEgYWxsb3cgdW5lc2NhcGVkIHRhYnMgaW4gc3RyaW5ncy5cbiAgICAgICAgICAgICAgICAgICAgcGFyc2VTdXBwb3J0ZWQgPSAhcGFyc2UoJ1wiXFx0XCInKTtcbiAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge31cbiAgICAgICAgICAgICAgICAgIGlmIChwYXJzZVN1cHBvcnRlZCkge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIEZGIDQuMCBhbmQgNC4wLjEgYWxsb3cgbGVhZGluZyBgK2Agc2lnbnMgYW5kIGxlYWRpbmdcbiAgICAgICAgICAgICAgICAgICAgICAvLyBkZWNpbWFsIHBvaW50cy4gRkYgNC4wLCA0LjAuMSwgYW5kIElFIDktMTAgYWxzbyBhbGxvd1xuICAgICAgICAgICAgICAgICAgICAgIC8vIGNlcnRhaW4gb2N0YWwgbGl0ZXJhbHMuXG4gICAgICAgICAgICAgICAgICAgICAgcGFyc2VTdXBwb3J0ZWQgPSBwYXJzZShcIjAxXCIpICE9PSAxO1xuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChleGNlcHRpb24pIHt9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBpZiAocGFyc2VTdXBwb3J0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBGRiA0LjAsIDQuMC4xLCBhbmQgUmhpbm8gMS43UjMtUjQgYWxsb3cgdHJhaWxpbmcgZGVjaW1hbFxuICAgICAgICAgICAgICAgICAgICAgIC8vIHBvaW50cy4gVGhlc2UgZW52aXJvbm1lbnRzLCBhbG9uZyB3aXRoIEZGIDMuMWIxIGFuZCAyLFxuICAgICAgICAgICAgICAgICAgICAgIC8vIGFsc28gYWxsb3cgdHJhaWxpbmcgY29tbWFzIGluIEpTT04gb2JqZWN0cyBhbmQgYXJyYXlzLlxuICAgICAgICAgICAgICAgICAgICAgIHBhcnNlU3VwcG9ydGVkID0gcGFyc2UoXCIxLlwiKSAhPT0gMTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7fVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7XG4gICAgICAgICAgICAgIHBhcnNlU3VwcG9ydGVkID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlzU3VwcG9ydGVkID0gcGFyc2VTdXBwb3J0ZWQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBoYXNbbmFtZV0gPSAhIWlzU3VwcG9ydGVkO1xuICAgIH1cblxuICAgIGlmICghaGFzKFwianNvblwiKSkge1xuICAgICAgLy8gQ29tbW9uIGBbW0NsYXNzXV1gIG5hbWUgYWxpYXNlcy5cbiAgICAgIHZhciBmdW5jdGlvbkNsYXNzID0gXCJbb2JqZWN0IEZ1bmN0aW9uXVwiLFxuICAgICAgICAgIGRhdGVDbGFzcyA9IFwiW29iamVjdCBEYXRlXVwiLFxuICAgICAgICAgIG51bWJlckNsYXNzID0gXCJbb2JqZWN0IE51bWJlcl1cIixcbiAgICAgICAgICBzdHJpbmdDbGFzcyA9IFwiW29iamVjdCBTdHJpbmddXCIsXG4gICAgICAgICAgYXJyYXlDbGFzcyA9IFwiW29iamVjdCBBcnJheV1cIixcbiAgICAgICAgICBib29sZWFuQ2xhc3MgPSBcIltvYmplY3QgQm9vbGVhbl1cIjtcblxuICAgICAgLy8gRGV0ZWN0IGluY29tcGxldGUgc3VwcG9ydCBmb3IgYWNjZXNzaW5nIHN0cmluZyBjaGFyYWN0ZXJzIGJ5IGluZGV4LlxuICAgICAgdmFyIGNoYXJJbmRleEJ1Z2d5ID0gaGFzKFwiYnVnLXN0cmluZy1jaGFyLWluZGV4XCIpO1xuXG4gICAgICAvLyBEZWZpbmUgYWRkaXRpb25hbCB1dGlsaXR5IG1ldGhvZHMgaWYgdGhlIGBEYXRlYCBtZXRob2RzIGFyZSBidWdneS5cbiAgICAgIGlmICghaXNFeHRlbmRlZCkge1xuICAgICAgICB2YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xuICAgICAgICAvLyBBIG1hcHBpbmcgYmV0d2VlbiB0aGUgbW9udGhzIG9mIHRoZSB5ZWFyIGFuZCB0aGUgbnVtYmVyIG9mIGRheXMgYmV0d2VlblxuICAgICAgICAvLyBKYW51YXJ5IDFzdCBhbmQgdGhlIGZpcnN0IG9mIHRoZSByZXNwZWN0aXZlIG1vbnRoLlxuICAgICAgICB2YXIgTW9udGhzID0gWzAsIDMxLCA1OSwgOTAsIDEyMCwgMTUxLCAxODEsIDIxMiwgMjQzLCAyNzMsIDMwNCwgMzM0XTtcbiAgICAgICAgLy8gSW50ZXJuYWw6IENhbGN1bGF0ZXMgdGhlIG51bWJlciBvZiBkYXlzIGJldHdlZW4gdGhlIFVuaXggZXBvY2ggYW5kIHRoZVxuICAgICAgICAvLyBmaXJzdCBkYXkgb2YgdGhlIGdpdmVuIG1vbnRoLlxuICAgICAgICB2YXIgZ2V0RGF5ID0gZnVuY3Rpb24gKHllYXIsIG1vbnRoKSB7XG4gICAgICAgICAgcmV0dXJuIE1vbnRoc1ttb250aF0gKyAzNjUgKiAoeWVhciAtIDE5NzApICsgZmxvb3IoKHllYXIgLSAxOTY5ICsgKG1vbnRoID0gKyhtb250aCA+IDEpKSkgLyA0KSAtIGZsb29yKCh5ZWFyIC0gMTkwMSArIG1vbnRoKSAvIDEwMCkgKyBmbG9vcigoeWVhciAtIDE2MDEgKyBtb250aCkgLyA0MDApO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICAvLyBJbnRlcm5hbDogRGV0ZXJtaW5lcyBpZiBhIHByb3BlcnR5IGlzIGEgZGlyZWN0IHByb3BlcnR5IG9mIHRoZSBnaXZlblxuICAgICAgLy8gb2JqZWN0LiBEZWxlZ2F0ZXMgdG8gdGhlIG5hdGl2ZSBgT2JqZWN0I2hhc093blByb3BlcnR5YCBtZXRob2QuXG4gICAgICBpZiAoIShpc1Byb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHkpKSB7XG4gICAgICAgIGlzUHJvcGVydHkgPSBmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICAgICAgICB2YXIgbWVtYmVycyA9IHt9LCBjb25zdHJ1Y3RvcjtcbiAgICAgICAgICBpZiAoKG1lbWJlcnMuX19wcm90b19fID0gbnVsbCwgbWVtYmVycy5fX3Byb3RvX18gPSB7XG4gICAgICAgICAgICAvLyBUaGUgKnByb3RvKiBwcm9wZXJ0eSBjYW5ub3QgYmUgc2V0IG11bHRpcGxlIHRpbWVzIGluIHJlY2VudFxuICAgICAgICAgICAgLy8gdmVyc2lvbnMgb2YgRmlyZWZveCBhbmQgU2VhTW9ua2V5LlxuICAgICAgICAgICAgXCJ0b1N0cmluZ1wiOiAxXG4gICAgICAgICAgfSwgbWVtYmVycykudG9TdHJpbmcgIT0gZ2V0Q2xhc3MpIHtcbiAgICAgICAgICAgIC8vIFNhZmFyaSA8PSAyLjAuMyBkb2Vzbid0IGltcGxlbWVudCBgT2JqZWN0I2hhc093blByb3BlcnR5YCwgYnV0XG4gICAgICAgICAgICAvLyBzdXBwb3J0cyB0aGUgbXV0YWJsZSAqcHJvdG8qIHByb3BlcnR5LlxuICAgICAgICAgICAgaXNQcm9wZXJ0eSA9IGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAvLyBDYXB0dXJlIGFuZCBicmVhayB0aGUgb2JqZWN0J3MgcHJvdG90eXBlIGNoYWluIChzZWUgc2VjdGlvbiA4LjYuMlxuICAgICAgICAgICAgICAvLyBvZiB0aGUgRVMgNS4xIHNwZWMpLiBUaGUgcGFyZW50aGVzaXplZCBleHByZXNzaW9uIHByZXZlbnRzIGFuXG4gICAgICAgICAgICAgIC8vIHVuc2FmZSB0cmFuc2Zvcm1hdGlvbiBieSB0aGUgQ2xvc3VyZSBDb21waWxlci5cbiAgICAgICAgICAgICAgdmFyIG9yaWdpbmFsID0gdGhpcy5fX3Byb3RvX18sIHJlc3VsdCA9IHByb3BlcnR5IGluICh0aGlzLl9fcHJvdG9fXyA9IG51bGwsIHRoaXMpO1xuICAgICAgICAgICAgICAvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBwcm90b3R5cGUgY2hhaW4uXG4gICAgICAgICAgICAgIHRoaXMuX19wcm90b19fID0gb3JpZ2luYWw7XG4gICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBDYXB0dXJlIGEgcmVmZXJlbmNlIHRvIHRoZSB0b3AtbGV2ZWwgYE9iamVjdGAgY29uc3RydWN0b3IuXG4gICAgICAgICAgICBjb25zdHJ1Y3RvciA9IG1lbWJlcnMuY29uc3RydWN0b3I7XG4gICAgICAgICAgICAvLyBVc2UgdGhlIGBjb25zdHJ1Y3RvcmAgcHJvcGVydHkgdG8gc2ltdWxhdGUgYE9iamVjdCNoYXNPd25Qcm9wZXJ0eWAgaW5cbiAgICAgICAgICAgIC8vIG90aGVyIGVudmlyb25tZW50cy5cbiAgICAgICAgICAgIGlzUHJvcGVydHkgPSBmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICAgICAgICAgICAgdmFyIHBhcmVudCA9ICh0aGlzLmNvbnN0cnVjdG9yIHx8IGNvbnN0cnVjdG9yKS5wcm90b3R5cGU7XG4gICAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0eSBpbiB0aGlzICYmICEocHJvcGVydHkgaW4gcGFyZW50ICYmIHRoaXNbcHJvcGVydHldID09PSBwYXJlbnRbcHJvcGVydHldKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuICAgICAgICAgIG1lbWJlcnMgPSBudWxsO1xuICAgICAgICAgIHJldHVybiBpc1Byb3BlcnR5LmNhbGwodGhpcywgcHJvcGVydHkpO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICAvLyBJbnRlcm5hbDogTm9ybWFsaXplcyB0aGUgYGZvci4uLmluYCBpdGVyYXRpb24gYWxnb3JpdGhtIGFjcm9zc1xuICAgICAgLy8gZW52aXJvbm1lbnRzLiBFYWNoIGVudW1lcmF0ZWQga2V5IGlzIHlpZWxkZWQgdG8gYSBgY2FsbGJhY2tgIGZ1bmN0aW9uLlxuICAgICAgZm9yRWFjaCA9IGZ1bmN0aW9uIChvYmplY3QsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBzaXplID0gMCwgUHJvcGVydGllcywgbWVtYmVycywgcHJvcGVydHk7XG5cbiAgICAgICAgLy8gVGVzdHMgZm9yIGJ1Z3MgaW4gdGhlIGN1cnJlbnQgZW52aXJvbm1lbnQncyBgZm9yLi4uaW5gIGFsZ29yaXRobS4gVGhlXG4gICAgICAgIC8vIGB2YWx1ZU9mYCBwcm9wZXJ0eSBpbmhlcml0cyB0aGUgbm9uLWVudW1lcmFibGUgZmxhZyBmcm9tXG4gICAgICAgIC8vIGBPYmplY3QucHJvdG90eXBlYCBpbiBvbGRlciB2ZXJzaW9ucyBvZiBJRSwgTmV0c2NhcGUsIGFuZCBNb3ppbGxhLlxuICAgICAgICAoUHJvcGVydGllcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB0aGlzLnZhbHVlT2YgPSAwO1xuICAgICAgICB9KS5wcm90b3R5cGUudmFsdWVPZiA9IDA7XG5cbiAgICAgICAgLy8gSXRlcmF0ZSBvdmVyIGEgbmV3IGluc3RhbmNlIG9mIHRoZSBgUHJvcGVydGllc2AgY2xhc3MuXG4gICAgICAgIG1lbWJlcnMgPSBuZXcgUHJvcGVydGllcygpO1xuICAgICAgICBmb3IgKHByb3BlcnR5IGluIG1lbWJlcnMpIHtcbiAgICAgICAgICAvLyBJZ25vcmUgYWxsIHByb3BlcnRpZXMgaW5oZXJpdGVkIGZyb20gYE9iamVjdC5wcm90b3R5cGVgLlxuICAgICAgICAgIGlmIChpc1Byb3BlcnR5LmNhbGwobWVtYmVycywgcHJvcGVydHkpKSB7XG4gICAgICAgICAgICBzaXplKys7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFByb3BlcnRpZXMgPSBtZW1iZXJzID0gbnVsbDtcblxuICAgICAgICAvLyBOb3JtYWxpemUgdGhlIGl0ZXJhdGlvbiBhbGdvcml0aG0uXG4gICAgICAgIGlmICghc2l6ZSkge1xuICAgICAgICAgIC8vIEEgbGlzdCBvZiBub24tZW51bWVyYWJsZSBwcm9wZXJ0aWVzIGluaGVyaXRlZCBmcm9tIGBPYmplY3QucHJvdG90eXBlYC5cbiAgICAgICAgICBtZW1iZXJzID0gW1widmFsdWVPZlwiLCBcInRvU3RyaW5nXCIsIFwidG9Mb2NhbGVTdHJpbmdcIiwgXCJwcm9wZXJ0eUlzRW51bWVyYWJsZVwiLCBcImlzUHJvdG90eXBlT2ZcIiwgXCJoYXNPd25Qcm9wZXJ0eVwiLCBcImNvbnN0cnVjdG9yXCJdO1xuICAgICAgICAgIC8vIElFIDw9IDgsIE1vemlsbGEgMS4wLCBhbmQgTmV0c2NhcGUgNi4yIGlnbm9yZSBzaGFkb3dlZCBub24tZW51bWVyYWJsZVxuICAgICAgICAgIC8vIHByb3BlcnRpZXMuXG4gICAgICAgICAgZm9yRWFjaCA9IGZ1bmN0aW9uIChvYmplY3QsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgaXNGdW5jdGlvbiA9IGdldENsYXNzLmNhbGwob2JqZWN0KSA9PSBmdW5jdGlvbkNsYXNzLCBwcm9wZXJ0eSwgbGVuZ3RoO1xuICAgICAgICAgICAgdmFyIGhhc1Byb3BlcnR5ID0gIWlzRnVuY3Rpb24gJiYgdHlwZW9mIG9iamVjdC5jb25zdHJ1Y3RvciAhPSBcImZ1bmN0aW9uXCIgJiYgb2JqZWN0VHlwZXNbdHlwZW9mIG9iamVjdC5oYXNPd25Qcm9wZXJ0eV0gJiYgb2JqZWN0Lmhhc093blByb3BlcnR5IHx8IGlzUHJvcGVydHk7XG4gICAgICAgICAgICBmb3IgKHByb3BlcnR5IGluIG9iamVjdCkge1xuICAgICAgICAgICAgICAvLyBHZWNrbyA8PSAxLjAgZW51bWVyYXRlcyB0aGUgYHByb3RvdHlwZWAgcHJvcGVydHkgb2YgZnVuY3Rpb25zIHVuZGVyXG4gICAgICAgICAgICAgIC8vIGNlcnRhaW4gY29uZGl0aW9uczsgSUUgZG9lcyBub3QuXG4gICAgICAgICAgICAgIGlmICghKGlzRnVuY3Rpb24gJiYgcHJvcGVydHkgPT0gXCJwcm90b3R5cGVcIikgJiYgaGFzUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKHByb3BlcnR5KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gTWFudWFsbHkgaW52b2tlIHRoZSBjYWxsYmFjayBmb3IgZWFjaCBub24tZW51bWVyYWJsZSBwcm9wZXJ0eS5cbiAgICAgICAgICAgIGZvciAobGVuZ3RoID0gbWVtYmVycy5sZW5ndGg7IHByb3BlcnR5ID0gbWVtYmVyc1stLWxlbmd0aF07IGhhc1Byb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkgJiYgY2FsbGJhY2socHJvcGVydHkpKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2UgaWYgKHNpemUgPT0gMikge1xuICAgICAgICAgIC8vIFNhZmFyaSA8PSAyLjAuNCBlbnVtZXJhdGVzIHNoYWRvd2VkIHByb3BlcnRpZXMgdHdpY2UuXG4gICAgICAgICAgZm9yRWFjaCA9IGZ1bmN0aW9uIChvYmplY3QsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAvLyBDcmVhdGUgYSBzZXQgb2YgaXRlcmF0ZWQgcHJvcGVydGllcy5cbiAgICAgICAgICAgIHZhciBtZW1iZXJzID0ge30sIGlzRnVuY3Rpb24gPSBnZXRDbGFzcy5jYWxsKG9iamVjdCkgPT0gZnVuY3Rpb25DbGFzcywgcHJvcGVydHk7XG4gICAgICAgICAgICBmb3IgKHByb3BlcnR5IGluIG9iamVjdCkge1xuICAgICAgICAgICAgICAvLyBTdG9yZSBlYWNoIHByb3BlcnR5IG5hbWUgdG8gcHJldmVudCBkb3VibGUgZW51bWVyYXRpb24uIFRoZVxuICAgICAgICAgICAgICAvLyBgcHJvdG90eXBlYCBwcm9wZXJ0eSBvZiBmdW5jdGlvbnMgaXMgbm90IGVudW1lcmF0ZWQgZHVlIHRvIGNyb3NzLVxuICAgICAgICAgICAgICAvLyBlbnZpcm9ubWVudCBpbmNvbnNpc3RlbmNpZXMuXG4gICAgICAgICAgICAgIGlmICghKGlzRnVuY3Rpb24gJiYgcHJvcGVydHkgPT0gXCJwcm90b3R5cGVcIikgJiYgIWlzUHJvcGVydHkuY2FsbChtZW1iZXJzLCBwcm9wZXJ0eSkgJiYgKG1lbWJlcnNbcHJvcGVydHldID0gMSkgJiYgaXNQcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2socHJvcGVydHkpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBObyBidWdzIGRldGVjdGVkOyB1c2UgdGhlIHN0YW5kYXJkIGBmb3IuLi5pbmAgYWxnb3JpdGhtLlxuICAgICAgICAgIGZvckVhY2ggPSBmdW5jdGlvbiAob2JqZWN0LCBjYWxsYmFjaykge1xuICAgICAgICAgICAgdmFyIGlzRnVuY3Rpb24gPSBnZXRDbGFzcy5jYWxsKG9iamVjdCkgPT0gZnVuY3Rpb25DbGFzcywgcHJvcGVydHksIGlzQ29uc3RydWN0b3I7XG4gICAgICAgICAgICBmb3IgKHByb3BlcnR5IGluIG9iamVjdCkge1xuICAgICAgICAgICAgICBpZiAoIShpc0Z1bmN0aW9uICYmIHByb3BlcnR5ID09IFwicHJvdG90eXBlXCIpICYmIGlzUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KSAmJiAhKGlzQ29uc3RydWN0b3IgPSBwcm9wZXJ0eSA9PT0gXCJjb25zdHJ1Y3RvclwiKSkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKHByb3BlcnR5KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gTWFudWFsbHkgaW52b2tlIHRoZSBjYWxsYmFjayBmb3IgdGhlIGBjb25zdHJ1Y3RvcmAgcHJvcGVydHkgZHVlIHRvXG4gICAgICAgICAgICAvLyBjcm9zcy1lbnZpcm9ubWVudCBpbmNvbnNpc3RlbmNpZXMuXG4gICAgICAgICAgICBpZiAoaXNDb25zdHJ1Y3RvciB8fCBpc1Byb3BlcnR5LmNhbGwob2JqZWN0LCAocHJvcGVydHkgPSBcImNvbnN0cnVjdG9yXCIpKSkge1xuICAgICAgICAgICAgICBjYWxsYmFjayhwcm9wZXJ0eSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZm9yRWFjaChvYmplY3QsIGNhbGxiYWNrKTtcbiAgICAgIH07XG5cbiAgICAgIC8vIFB1YmxpYzogU2VyaWFsaXplcyBhIEphdmFTY3JpcHQgYHZhbHVlYCBhcyBhIEpTT04gc3RyaW5nLiBUaGUgb3B0aW9uYWxcbiAgICAgIC8vIGBmaWx0ZXJgIGFyZ3VtZW50IG1heSBzcGVjaWZ5IGVpdGhlciBhIGZ1bmN0aW9uIHRoYXQgYWx0ZXJzIGhvdyBvYmplY3QgYW5kXG4gICAgICAvLyBhcnJheSBtZW1iZXJzIGFyZSBzZXJpYWxpemVkLCBvciBhbiBhcnJheSBvZiBzdHJpbmdzIGFuZCBudW1iZXJzIHRoYXRcbiAgICAgIC8vIGluZGljYXRlcyB3aGljaCBwcm9wZXJ0aWVzIHNob3VsZCBiZSBzZXJpYWxpemVkLiBUaGUgb3B0aW9uYWwgYHdpZHRoYFxuICAgICAgLy8gYXJndW1lbnQgbWF5IGJlIGVpdGhlciBhIHN0cmluZyBvciBudW1iZXIgdGhhdCBzcGVjaWZpZXMgdGhlIGluZGVudGF0aW9uXG4gICAgICAvLyBsZXZlbCBvZiB0aGUgb3V0cHV0LlxuICAgICAgaWYgKCFoYXMoXCJqc29uLXN0cmluZ2lmeVwiKSkge1xuICAgICAgICAvLyBJbnRlcm5hbDogQSBtYXAgb2YgY29udHJvbCBjaGFyYWN0ZXJzIGFuZCB0aGVpciBlc2NhcGVkIGVxdWl2YWxlbnRzLlxuICAgICAgICB2YXIgRXNjYXBlcyA9IHtcbiAgICAgICAgICA5MjogXCJcXFxcXFxcXFwiLFxuICAgICAgICAgIDM0OiAnXFxcXFwiJyxcbiAgICAgICAgICA4OiBcIlxcXFxiXCIsXG4gICAgICAgICAgMTI6IFwiXFxcXGZcIixcbiAgICAgICAgICAxMDogXCJcXFxcblwiLFxuICAgICAgICAgIDEzOiBcIlxcXFxyXCIsXG4gICAgICAgICAgOTogXCJcXFxcdFwiXG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IENvbnZlcnRzIGB2YWx1ZWAgaW50byBhIHplcm8tcGFkZGVkIHN0cmluZyBzdWNoIHRoYXQgaXRzXG4gICAgICAgIC8vIGxlbmd0aCBpcyBhdCBsZWFzdCBlcXVhbCB0byBgd2lkdGhgLiBUaGUgYHdpZHRoYCBtdXN0IGJlIDw9IDYuXG4gICAgICAgIHZhciBsZWFkaW5nWmVyb2VzID0gXCIwMDAwMDBcIjtcbiAgICAgICAgdmFyIHRvUGFkZGVkU3RyaW5nID0gZnVuY3Rpb24gKHdpZHRoLCB2YWx1ZSkge1xuICAgICAgICAgIC8vIFRoZSBgfHwgMGAgZXhwcmVzc2lvbiBpcyBuZWNlc3NhcnkgdG8gd29yayBhcm91bmQgYSBidWcgaW5cbiAgICAgICAgICAvLyBPcGVyYSA8PSA3LjU0dTIgd2hlcmUgYDAgPT0gLTBgLCBidXQgYFN0cmluZygtMCkgIT09IFwiMFwiYC5cbiAgICAgICAgICByZXR1cm4gKGxlYWRpbmdaZXJvZXMgKyAodmFsdWUgfHwgMCkpLnNsaWNlKC13aWR0aCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IERvdWJsZS1xdW90ZXMgYSBzdHJpbmcgYHZhbHVlYCwgcmVwbGFjaW5nIGFsbCBBU0NJSSBjb250cm9sXG4gICAgICAgIC8vIGNoYXJhY3RlcnMgKGNoYXJhY3RlcnMgd2l0aCBjb2RlIHVuaXQgdmFsdWVzIGJldHdlZW4gMCBhbmQgMzEpIHdpdGhcbiAgICAgICAgLy8gdGhlaXIgZXNjYXBlZCBlcXVpdmFsZW50cy4gVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiB0aGVcbiAgICAgICAgLy8gYFF1b3RlKHZhbHVlKWAgb3BlcmF0aW9uIGRlZmluZWQgaW4gRVMgNS4xIHNlY3Rpb24gMTUuMTIuMy5cbiAgICAgICAgdmFyIHVuaWNvZGVQcmVmaXggPSBcIlxcXFx1MDBcIjtcbiAgICAgICAgdmFyIHF1b3RlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdCA9ICdcIicsIGluZGV4ID0gMCwgbGVuZ3RoID0gdmFsdWUubGVuZ3RoLCB1c2VDaGFySW5kZXggPSAhY2hhckluZGV4QnVnZ3kgfHwgbGVuZ3RoID4gMTA7XG4gICAgICAgICAgdmFyIHN5bWJvbHMgPSB1c2VDaGFySW5kZXggJiYgKGNoYXJJbmRleEJ1Z2d5ID8gdmFsdWUuc3BsaXQoXCJcIikgOiB2YWx1ZSk7XG4gICAgICAgICAgZm9yICg7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICB2YXIgY2hhckNvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KGluZGV4KTtcbiAgICAgICAgICAgIC8vIElmIHRoZSBjaGFyYWN0ZXIgaXMgYSBjb250cm9sIGNoYXJhY3RlciwgYXBwZW5kIGl0cyBVbmljb2RlIG9yXG4gICAgICAgICAgICAvLyBzaG9ydGhhbmQgZXNjYXBlIHNlcXVlbmNlOyBvdGhlcndpc2UsIGFwcGVuZCB0aGUgY2hhcmFjdGVyIGFzLWlzLlxuICAgICAgICAgICAgc3dpdGNoIChjaGFyQ29kZSkge1xuICAgICAgICAgICAgICBjYXNlIDg6IGNhc2UgOTogY2FzZSAxMDogY2FzZSAxMjogY2FzZSAxMzogY2FzZSAzNDogY2FzZSA5MjpcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gRXNjYXBlc1tjaGFyQ29kZV07XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlIDwgMzIpIHtcbiAgICAgICAgICAgICAgICAgIHJlc3VsdCArPSB1bmljb2RlUHJlZml4ICsgdG9QYWRkZWRTdHJpbmcoMiwgY2hhckNvZGUudG9TdHJpbmcoMTYpKTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gdXNlQ2hhckluZGV4ID8gc3ltYm9sc1tpbmRleF0gOiB2YWx1ZS5jaGFyQXQoaW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgJ1wiJztcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogUmVjdXJzaXZlbHkgc2VyaWFsaXplcyBhbiBvYmplY3QuIEltcGxlbWVudHMgdGhlXG4gICAgICAgIC8vIGBTdHIoa2V5LCBob2xkZXIpYCwgYEpPKHZhbHVlKWAsIGFuZCBgSkEodmFsdWUpYCBvcGVyYXRpb25zLlxuICAgICAgICB2YXIgc2VyaWFsaXplID0gZnVuY3Rpb24gKHByb3BlcnR5LCBvYmplY3QsIGNhbGxiYWNrLCBwcm9wZXJ0aWVzLCB3aGl0ZXNwYWNlLCBpbmRlbnRhdGlvbiwgc3RhY2spIHtcbiAgICAgICAgICB2YXIgdmFsdWUsIGNsYXNzTmFtZSwgeWVhciwgbW9udGgsIGRhdGUsIHRpbWUsIGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzLCBtaWxsaXNlY29uZHMsIHJlc3VsdHMsIGVsZW1lbnQsIGluZGV4LCBsZW5ndGgsIHByZWZpeCwgcmVzdWx0O1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBOZWNlc3NhcnkgZm9yIGhvc3Qgb2JqZWN0IHN1cHBvcnQuXG4gICAgICAgICAgICB2YWx1ZSA9IG9iamVjdFtwcm9wZXJ0eV07XG4gICAgICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7fVxuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJvYmplY3RcIiAmJiB2YWx1ZSkge1xuICAgICAgICAgICAgY2xhc3NOYW1lID0gZ2V0Q2xhc3MuY2FsbCh2YWx1ZSk7XG4gICAgICAgICAgICBpZiAoY2xhc3NOYW1lID09IGRhdGVDbGFzcyAmJiAhaXNQcm9wZXJ0eS5jYWxsKHZhbHVlLCBcInRvSlNPTlwiKSkge1xuICAgICAgICAgICAgICBpZiAodmFsdWUgPiAtMSAvIDAgJiYgdmFsdWUgPCAxIC8gMCkge1xuICAgICAgICAgICAgICAgIC8vIERhdGVzIGFyZSBzZXJpYWxpemVkIGFjY29yZGluZyB0byB0aGUgYERhdGUjdG9KU09OYCBtZXRob2RcbiAgICAgICAgICAgICAgICAvLyBzcGVjaWZpZWQgaW4gRVMgNS4xIHNlY3Rpb24gMTUuOS41LjQ0LiBTZWUgc2VjdGlvbiAxNS45LjEuMTVcbiAgICAgICAgICAgICAgICAvLyBmb3IgdGhlIElTTyA4NjAxIGRhdGUgdGltZSBzdHJpbmcgZm9ybWF0LlxuICAgICAgICAgICAgICAgIGlmIChnZXREYXkpIHtcbiAgICAgICAgICAgICAgICAgIC8vIE1hbnVhbGx5IGNvbXB1dGUgdGhlIHllYXIsIG1vbnRoLCBkYXRlLCBob3VycywgbWludXRlcyxcbiAgICAgICAgICAgICAgICAgIC8vIHNlY29uZHMsIGFuZCBtaWxsaXNlY29uZHMgaWYgdGhlIGBnZXRVVEMqYCBtZXRob2RzIGFyZVxuICAgICAgICAgICAgICAgICAgLy8gYnVnZ3kuIEFkYXB0ZWQgZnJvbSBAWWFmZmxlJ3MgYGRhdGUtc2hpbWAgcHJvamVjdC5cbiAgICAgICAgICAgICAgICAgIGRhdGUgPSBmbG9vcih2YWx1ZSAvIDg2NGU1KTtcbiAgICAgICAgICAgICAgICAgIGZvciAoeWVhciA9IGZsb29yKGRhdGUgLyAzNjUuMjQyNSkgKyAxOTcwIC0gMTsgZ2V0RGF5KHllYXIgKyAxLCAwKSA8PSBkYXRlOyB5ZWFyKyspO1xuICAgICAgICAgICAgICAgICAgZm9yIChtb250aCA9IGZsb29yKChkYXRlIC0gZ2V0RGF5KHllYXIsIDApKSAvIDMwLjQyKTsgZ2V0RGF5KHllYXIsIG1vbnRoICsgMSkgPD0gZGF0ZTsgbW9udGgrKyk7XG4gICAgICAgICAgICAgICAgICBkYXRlID0gMSArIGRhdGUgLSBnZXREYXkoeWVhciwgbW9udGgpO1xuICAgICAgICAgICAgICAgICAgLy8gVGhlIGB0aW1lYCB2YWx1ZSBzcGVjaWZpZXMgdGhlIHRpbWUgd2l0aGluIHRoZSBkYXkgKHNlZSBFU1xuICAgICAgICAgICAgICAgICAgLy8gNS4xIHNlY3Rpb24gMTUuOS4xLjIpLiBUaGUgZm9ybXVsYSBgKEEgJSBCICsgQikgJSBCYCBpcyB1c2VkXG4gICAgICAgICAgICAgICAgICAvLyB0byBjb21wdXRlIGBBIG1vZHVsbyBCYCwgYXMgdGhlIGAlYCBvcGVyYXRvciBkb2VzIG5vdFxuICAgICAgICAgICAgICAgICAgLy8gY29ycmVzcG9uZCB0byB0aGUgYG1vZHVsb2Agb3BlcmF0aW9uIGZvciBuZWdhdGl2ZSBudW1iZXJzLlxuICAgICAgICAgICAgICAgICAgdGltZSA9ICh2YWx1ZSAlIDg2NGU1ICsgODY0ZTUpICUgODY0ZTU7XG4gICAgICAgICAgICAgICAgICAvLyBUaGUgaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMsIGFuZCBtaWxsaXNlY29uZHMgYXJlIG9idGFpbmVkIGJ5XG4gICAgICAgICAgICAgICAgICAvLyBkZWNvbXBvc2luZyB0aGUgdGltZSB3aXRoaW4gdGhlIGRheS4gU2VlIHNlY3Rpb24gMTUuOS4xLjEwLlxuICAgICAgICAgICAgICAgICAgaG91cnMgPSBmbG9vcih0aW1lIC8gMzZlNSkgJSAyNDtcbiAgICAgICAgICAgICAgICAgIG1pbnV0ZXMgPSBmbG9vcih0aW1lIC8gNmU0KSAlIDYwO1xuICAgICAgICAgICAgICAgICAgc2Vjb25kcyA9IGZsb29yKHRpbWUgLyAxZTMpICUgNjA7XG4gICAgICAgICAgICAgICAgICBtaWxsaXNlY29uZHMgPSB0aW1lICUgMWUzO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICB5ZWFyID0gdmFsdWUuZ2V0VVRDRnVsbFllYXIoKTtcbiAgICAgICAgICAgICAgICAgIG1vbnRoID0gdmFsdWUuZ2V0VVRDTW9udGgoKTtcbiAgICAgICAgICAgICAgICAgIGRhdGUgPSB2YWx1ZS5nZXRVVENEYXRlKCk7XG4gICAgICAgICAgICAgICAgICBob3VycyA9IHZhbHVlLmdldFVUQ0hvdXJzKCk7XG4gICAgICAgICAgICAgICAgICBtaW51dGVzID0gdmFsdWUuZ2V0VVRDTWludXRlcygpO1xuICAgICAgICAgICAgICAgICAgc2Vjb25kcyA9IHZhbHVlLmdldFVUQ1NlY29uZHMoKTtcbiAgICAgICAgICAgICAgICAgIG1pbGxpc2Vjb25kcyA9IHZhbHVlLmdldFVUQ01pbGxpc2Vjb25kcygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBTZXJpYWxpemUgZXh0ZW5kZWQgeWVhcnMgY29ycmVjdGx5LlxuICAgICAgICAgICAgICAgIHZhbHVlID0gKHllYXIgPD0gMCB8fCB5ZWFyID49IDFlNCA/ICh5ZWFyIDwgMCA/IFwiLVwiIDogXCIrXCIpICsgdG9QYWRkZWRTdHJpbmcoNiwgeWVhciA8IDAgPyAteWVhciA6IHllYXIpIDogdG9QYWRkZWRTdHJpbmcoNCwgeWVhcikpICtcbiAgICAgICAgICAgICAgICAgIFwiLVwiICsgdG9QYWRkZWRTdHJpbmcoMiwgbW9udGggKyAxKSArIFwiLVwiICsgdG9QYWRkZWRTdHJpbmcoMiwgZGF0ZSkgK1xuICAgICAgICAgICAgICAgICAgLy8gTW9udGhzLCBkYXRlcywgaG91cnMsIG1pbnV0ZXMsIGFuZCBzZWNvbmRzIHNob3VsZCBoYXZlIHR3b1xuICAgICAgICAgICAgICAgICAgLy8gZGlnaXRzOyBtaWxsaXNlY29uZHMgc2hvdWxkIGhhdmUgdGhyZWUuXG4gICAgICAgICAgICAgICAgICBcIlRcIiArIHRvUGFkZGVkU3RyaW5nKDIsIGhvdXJzKSArIFwiOlwiICsgdG9QYWRkZWRTdHJpbmcoMiwgbWludXRlcykgKyBcIjpcIiArIHRvUGFkZGVkU3RyaW5nKDIsIHNlY29uZHMpICtcbiAgICAgICAgICAgICAgICAgIC8vIE1pbGxpc2Vjb25kcyBhcmUgb3B0aW9uYWwgaW4gRVMgNS4wLCBidXQgcmVxdWlyZWQgaW4gNS4xLlxuICAgICAgICAgICAgICAgICAgXCIuXCIgKyB0b1BhZGRlZFN0cmluZygzLCBtaWxsaXNlY29uZHMpICsgXCJaXCI7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBudWxsO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZS50b0pTT04gPT0gXCJmdW5jdGlvblwiICYmICgoY2xhc3NOYW1lICE9IG51bWJlckNsYXNzICYmIGNsYXNzTmFtZSAhPSBzdHJpbmdDbGFzcyAmJiBjbGFzc05hbWUgIT0gYXJyYXlDbGFzcykgfHwgaXNQcm9wZXJ0eS5jYWxsKHZhbHVlLCBcInRvSlNPTlwiKSkpIHtcbiAgICAgICAgICAgICAgLy8gUHJvdG90eXBlIDw9IDEuNi4xIGFkZHMgbm9uLXN0YW5kYXJkIGB0b0pTT05gIG1ldGhvZHMgdG8gdGhlXG4gICAgICAgICAgICAgIC8vIGBOdW1iZXJgLCBgU3RyaW5nYCwgYERhdGVgLCBhbmQgYEFycmF5YCBwcm90b3R5cGVzLiBKU09OIDNcbiAgICAgICAgICAgICAgLy8gaWdub3JlcyBhbGwgYHRvSlNPTmAgbWV0aG9kcyBvbiB0aGVzZSBvYmplY3RzIHVubGVzcyB0aGV5IGFyZVxuICAgICAgICAgICAgICAvLyBkZWZpbmVkIGRpcmVjdGx5IG9uIGFuIGluc3RhbmNlLlxuICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvSlNPTihwcm9wZXJ0eSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgLy8gSWYgYSByZXBsYWNlbWVudCBmdW5jdGlvbiB3YXMgcHJvdmlkZWQsIGNhbGwgaXQgdG8gb2J0YWluIHRoZSB2YWx1ZVxuICAgICAgICAgICAgLy8gZm9yIHNlcmlhbGl6YXRpb24uXG4gICAgICAgICAgICB2YWx1ZSA9IGNhbGxiYWNrLmNhbGwob2JqZWN0LCBwcm9wZXJ0eSwgdmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBcIm51bGxcIjtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2xhc3NOYW1lID0gZ2V0Q2xhc3MuY2FsbCh2YWx1ZSk7XG4gICAgICAgICAgaWYgKGNsYXNzTmFtZSA9PSBib29sZWFuQ2xhc3MpIHtcbiAgICAgICAgICAgIC8vIEJvb2xlYW5zIGFyZSByZXByZXNlbnRlZCBsaXRlcmFsbHkuXG4gICAgICAgICAgICByZXR1cm4gXCJcIiArIHZhbHVlO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY2xhc3NOYW1lID09IG51bWJlckNsYXNzKSB7XG4gICAgICAgICAgICAvLyBKU09OIG51bWJlcnMgbXVzdCBiZSBmaW5pdGUuIGBJbmZpbml0eWAgYW5kIGBOYU5gIGFyZSBzZXJpYWxpemVkIGFzXG4gICAgICAgICAgICAvLyBgXCJudWxsXCJgLlxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID4gLTEgLyAwICYmIHZhbHVlIDwgMSAvIDAgPyBcIlwiICsgdmFsdWUgOiBcIm51bGxcIjtcbiAgICAgICAgICB9IGVsc2UgaWYgKGNsYXNzTmFtZSA9PSBzdHJpbmdDbGFzcykge1xuICAgICAgICAgICAgLy8gU3RyaW5ncyBhcmUgZG91YmxlLXF1b3RlZCBhbmQgZXNjYXBlZC5cbiAgICAgICAgICAgIHJldHVybiBxdW90ZShcIlwiICsgdmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBSZWN1cnNpdmVseSBzZXJpYWxpemUgb2JqZWN0cyBhbmQgYXJyYXlzLlxuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIGN5Y2xpYyBzdHJ1Y3R1cmVzLiBUaGlzIGlzIGEgbGluZWFyIHNlYXJjaDsgcGVyZm9ybWFuY2VcbiAgICAgICAgICAgIC8vIGlzIGludmVyc2VseSBwcm9wb3J0aW9uYWwgdG8gdGhlIG51bWJlciBvZiB1bmlxdWUgbmVzdGVkIG9iamVjdHMuXG4gICAgICAgICAgICBmb3IgKGxlbmd0aCA9IHN0YWNrLmxlbmd0aDsgbGVuZ3RoLS07KSB7XG4gICAgICAgICAgICAgIGlmIChzdGFja1tsZW5ndGhdID09PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIC8vIEN5Y2xpYyBzdHJ1Y3R1cmVzIGNhbm5vdCBiZSBzZXJpYWxpemVkIGJ5IGBKU09OLnN0cmluZ2lmeWAuXG4gICAgICAgICAgICAgICAgdGhyb3cgVHlwZUVycm9yKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEFkZCB0aGUgb2JqZWN0IHRvIHRoZSBzdGFjayBvZiB0cmF2ZXJzZWQgb2JqZWN0cy5cbiAgICAgICAgICAgIHN0YWNrLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgcmVzdWx0cyA9IFtdO1xuICAgICAgICAgICAgLy8gU2F2ZSB0aGUgY3VycmVudCBpbmRlbnRhdGlvbiBsZXZlbCBhbmQgaW5kZW50IG9uZSBhZGRpdGlvbmFsIGxldmVsLlxuICAgICAgICAgICAgcHJlZml4ID0gaW5kZW50YXRpb247XG4gICAgICAgICAgICBpbmRlbnRhdGlvbiArPSB3aGl0ZXNwYWNlO1xuICAgICAgICAgICAgaWYgKGNsYXNzTmFtZSA9PSBhcnJheUNsYXNzKSB7XG4gICAgICAgICAgICAgIC8vIFJlY3Vyc2l2ZWx5IHNlcmlhbGl6ZSBhcnJheSBlbGVtZW50cy5cbiAgICAgICAgICAgICAgZm9yIChpbmRleCA9IDAsIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50ID0gc2VyaWFsaXplKGluZGV4LCB2YWx1ZSwgY2FsbGJhY2ssIHByb3BlcnRpZXMsIHdoaXRlc3BhY2UsIGluZGVudGF0aW9uLCBzdGFjayk7XG4gICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKGVsZW1lbnQgPT09IHVuZGVmID8gXCJudWxsXCIgOiBlbGVtZW50KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXN1bHQgPSByZXN1bHRzLmxlbmd0aCA/ICh3aGl0ZXNwYWNlID8gXCJbXFxuXCIgKyBpbmRlbnRhdGlvbiArIHJlc3VsdHMuam9pbihcIixcXG5cIiArIGluZGVudGF0aW9uKSArIFwiXFxuXCIgKyBwcmVmaXggKyBcIl1cIiA6IChcIltcIiArIHJlc3VsdHMuam9pbihcIixcIikgKyBcIl1cIikpIDogXCJbXVwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy8gUmVjdXJzaXZlbHkgc2VyaWFsaXplIG9iamVjdCBtZW1iZXJzLiBNZW1iZXJzIGFyZSBzZWxlY3RlZCBmcm9tXG4gICAgICAgICAgICAgIC8vIGVpdGhlciBhIHVzZXItc3BlY2lmaWVkIGxpc3Qgb2YgcHJvcGVydHkgbmFtZXMsIG9yIHRoZSBvYmplY3RcbiAgICAgICAgICAgICAgLy8gaXRzZWxmLlxuICAgICAgICAgICAgICBmb3JFYWNoKHByb3BlcnRpZXMgfHwgdmFsdWUsIGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgIHZhciBlbGVtZW50ID0gc2VyaWFsaXplKHByb3BlcnR5LCB2YWx1ZSwgY2FsbGJhY2ssIHByb3BlcnRpZXMsIHdoaXRlc3BhY2UsIGluZGVudGF0aW9uLCBzdGFjayk7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQgIT09IHVuZGVmKSB7XG4gICAgICAgICAgICAgICAgICAvLyBBY2NvcmRpbmcgdG8gRVMgNS4xIHNlY3Rpb24gMTUuMTIuMzogXCJJZiBgZ2FwYCB7d2hpdGVzcGFjZX1cbiAgICAgICAgICAgICAgICAgIC8vIGlzIG5vdCB0aGUgZW1wdHkgc3RyaW5nLCBsZXQgYG1lbWJlcmAge3F1b3RlKHByb3BlcnR5KSArIFwiOlwifVxuICAgICAgICAgICAgICAgICAgLy8gYmUgdGhlIGNvbmNhdGVuYXRpb24gb2YgYG1lbWJlcmAgYW5kIHRoZSBgc3BhY2VgIGNoYXJhY3Rlci5cIlxuICAgICAgICAgICAgICAgICAgLy8gVGhlIFwiYHNwYWNlYCBjaGFyYWN0ZXJcIiByZWZlcnMgdG8gdGhlIGxpdGVyYWwgc3BhY2VcbiAgICAgICAgICAgICAgICAgIC8vIGNoYXJhY3Rlciwgbm90IHRoZSBgc3BhY2VgIHt3aWR0aH0gYXJndW1lbnQgcHJvdmlkZWQgdG9cbiAgICAgICAgICAgICAgICAgIC8vIGBKU09OLnN0cmluZ2lmeWAuXG4gICAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2gocXVvdGUocHJvcGVydHkpICsgXCI6XCIgKyAod2hpdGVzcGFjZSA/IFwiIFwiIDogXCJcIikgKyBlbGVtZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICByZXN1bHQgPSByZXN1bHRzLmxlbmd0aCA/ICh3aGl0ZXNwYWNlID8gXCJ7XFxuXCIgKyBpbmRlbnRhdGlvbiArIHJlc3VsdHMuam9pbihcIixcXG5cIiArIGluZGVudGF0aW9uKSArIFwiXFxuXCIgKyBwcmVmaXggKyBcIn1cIiA6IChcIntcIiArIHJlc3VsdHMuam9pbihcIixcIikgKyBcIn1cIikpIDogXCJ7fVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSBvYmplY3QgZnJvbSB0aGUgdHJhdmVyc2VkIG9iamVjdCBzdGFjay5cbiAgICAgICAgICAgIHN0YWNrLnBvcCgpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gUHVibGljOiBgSlNPTi5zdHJpbmdpZnlgLiBTZWUgRVMgNS4xIHNlY3Rpb24gMTUuMTIuMy5cbiAgICAgICAgZXhwb3J0cy5zdHJpbmdpZnkgPSBmdW5jdGlvbiAoc291cmNlLCBmaWx0ZXIsIHdpZHRoKSB7XG4gICAgICAgICAgdmFyIHdoaXRlc3BhY2UsIGNhbGxiYWNrLCBwcm9wZXJ0aWVzLCBjbGFzc05hbWU7XG4gICAgICAgICAgaWYgKG9iamVjdFR5cGVzW3R5cGVvZiBmaWx0ZXJdICYmIGZpbHRlcikge1xuICAgICAgICAgICAgaWYgKChjbGFzc05hbWUgPSBnZXRDbGFzcy5jYWxsKGZpbHRlcikpID09IGZ1bmN0aW9uQ2xhc3MpIHtcbiAgICAgICAgICAgICAgY2FsbGJhY2sgPSBmaWx0ZXI7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGNsYXNzTmFtZSA9PSBhcnJheUNsYXNzKSB7XG4gICAgICAgICAgICAgIC8vIENvbnZlcnQgdGhlIHByb3BlcnR5IG5hbWVzIGFycmF5IGludG8gYSBtYWtlc2hpZnQgc2V0LlxuICAgICAgICAgICAgICBwcm9wZXJ0aWVzID0ge307XG4gICAgICAgICAgICAgIGZvciAodmFyIGluZGV4ID0gMCwgbGVuZ3RoID0gZmlsdGVyLmxlbmd0aCwgdmFsdWU7IGluZGV4IDwgbGVuZ3RoOyB2YWx1ZSA9IGZpbHRlcltpbmRleCsrXSwgKChjbGFzc05hbWUgPSBnZXRDbGFzcy5jYWxsKHZhbHVlKSksIGNsYXNzTmFtZSA9PSBzdHJpbmdDbGFzcyB8fCBjbGFzc05hbWUgPT0gbnVtYmVyQ2xhc3MpICYmIChwcm9wZXJ0aWVzW3ZhbHVlXSA9IDEpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHdpZHRoKSB7XG4gICAgICAgICAgICBpZiAoKGNsYXNzTmFtZSA9IGdldENsYXNzLmNhbGwod2lkdGgpKSA9PSBudW1iZXJDbGFzcykge1xuICAgICAgICAgICAgICAvLyBDb252ZXJ0IHRoZSBgd2lkdGhgIHRvIGFuIGludGVnZXIgYW5kIGNyZWF0ZSBhIHN0cmluZyBjb250YWluaW5nXG4gICAgICAgICAgICAgIC8vIGB3aWR0aGAgbnVtYmVyIG9mIHNwYWNlIGNoYXJhY3RlcnMuXG4gICAgICAgICAgICAgIGlmICgod2lkdGggLT0gd2lkdGggJSAxKSA+IDApIHtcbiAgICAgICAgICAgICAgICBmb3IgKHdoaXRlc3BhY2UgPSBcIlwiLCB3aWR0aCA+IDEwICYmICh3aWR0aCA9IDEwKTsgd2hpdGVzcGFjZS5sZW5ndGggPCB3aWR0aDsgd2hpdGVzcGFjZSArPSBcIiBcIik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY2xhc3NOYW1lID09IHN0cmluZ0NsYXNzKSB7XG4gICAgICAgICAgICAgIHdoaXRlc3BhY2UgPSB3aWR0aC5sZW5ndGggPD0gMTAgPyB3aWR0aCA6IHdpZHRoLnNsaWNlKDAsIDEwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gT3BlcmEgPD0gNy41NHUyIGRpc2NhcmRzIHRoZSB2YWx1ZXMgYXNzb2NpYXRlZCB3aXRoIGVtcHR5IHN0cmluZyBrZXlzXG4gICAgICAgICAgLy8gKGBcIlwiYCkgb25seSBpZiB0aGV5IGFyZSB1c2VkIGRpcmVjdGx5IHdpdGhpbiBhbiBvYmplY3QgbWVtYmVyIGxpc3RcbiAgICAgICAgICAvLyAoZS5nLiwgYCEoXCJcIiBpbiB7IFwiXCI6IDF9KWApLlxuICAgICAgICAgIHJldHVybiBzZXJpYWxpemUoXCJcIiwgKHZhbHVlID0ge30sIHZhbHVlW1wiXCJdID0gc291cmNlLCB2YWx1ZSksIGNhbGxiYWNrLCBwcm9wZXJ0aWVzLCB3aGl0ZXNwYWNlLCBcIlwiLCBbXSk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIC8vIFB1YmxpYzogUGFyc2VzIGEgSlNPTiBzb3VyY2Ugc3RyaW5nLlxuICAgICAgaWYgKCFoYXMoXCJqc29uLXBhcnNlXCIpKSB7XG4gICAgICAgIHZhciBmcm9tQ2hhckNvZGUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlO1xuXG4gICAgICAgIC8vIEludGVybmFsOiBBIG1hcCBvZiBlc2NhcGVkIGNvbnRyb2wgY2hhcmFjdGVycyBhbmQgdGhlaXIgdW5lc2NhcGVkXG4gICAgICAgIC8vIGVxdWl2YWxlbnRzLlxuICAgICAgICB2YXIgVW5lc2NhcGVzID0ge1xuICAgICAgICAgIDkyOiBcIlxcXFxcIixcbiAgICAgICAgICAzNDogJ1wiJyxcbiAgICAgICAgICA0NzogXCIvXCIsXG4gICAgICAgICAgOTg6IFwiXFxiXCIsXG4gICAgICAgICAgMTE2OiBcIlxcdFwiLFxuICAgICAgICAgIDExMDogXCJcXG5cIixcbiAgICAgICAgICAxMDI6IFwiXFxmXCIsXG4gICAgICAgICAgMTE0OiBcIlxcclwiXG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IFN0b3JlcyB0aGUgcGFyc2VyIHN0YXRlLlxuICAgICAgICB2YXIgSW5kZXgsIFNvdXJjZTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogUmVzZXRzIHRoZSBwYXJzZXIgc3RhdGUgYW5kIHRocm93cyBhIGBTeW50YXhFcnJvcmAuXG4gICAgICAgIHZhciBhYm9ydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBJbmRleCA9IFNvdXJjZSA9IG51bGw7XG4gICAgICAgICAgdGhyb3cgU3ludGF4RXJyb3IoKTtcbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogUmV0dXJucyB0aGUgbmV4dCB0b2tlbiwgb3IgYFwiJFwiYCBpZiB0aGUgcGFyc2VyIGhhcyByZWFjaGVkXG4gICAgICAgIC8vIHRoZSBlbmQgb2YgdGhlIHNvdXJjZSBzdHJpbmcuIEEgdG9rZW4gbWF5IGJlIGEgc3RyaW5nLCBudW1iZXIsIGBudWxsYFxuICAgICAgICAvLyBsaXRlcmFsLCBvciBCb29sZWFuIGxpdGVyYWwuXG4gICAgICAgIHZhciBsZXggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIHNvdXJjZSA9IFNvdXJjZSwgbGVuZ3RoID0gc291cmNlLmxlbmd0aCwgdmFsdWUsIGJlZ2luLCBwb3NpdGlvbiwgaXNTaWduZWQsIGNoYXJDb2RlO1xuICAgICAgICAgIHdoaWxlIChJbmRleCA8IGxlbmd0aCkge1xuICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCk7XG4gICAgICAgICAgICBzd2l0Y2ggKGNoYXJDb2RlKSB7XG4gICAgICAgICAgICAgIGNhc2UgOTogY2FzZSAxMDogY2FzZSAxMzogY2FzZSAzMjpcbiAgICAgICAgICAgICAgICAvLyBTa2lwIHdoaXRlc3BhY2UgdG9rZW5zLCBpbmNsdWRpbmcgdGFicywgY2FycmlhZ2UgcmV0dXJucywgbGluZVxuICAgICAgICAgICAgICAgIC8vIGZlZWRzLCBhbmQgc3BhY2UgY2hhcmFjdGVycy5cbiAgICAgICAgICAgICAgICBJbmRleCsrO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICBjYXNlIDEyMzogY2FzZSAxMjU6IGNhc2UgOTE6IGNhc2UgOTM6IGNhc2UgNTg6IGNhc2UgNDQ6XG4gICAgICAgICAgICAgICAgLy8gUGFyc2UgYSBwdW5jdHVhdG9yIHRva2VuIChge2AsIGB9YCwgYFtgLCBgXWAsIGA6YCwgb3IgYCxgKSBhdFxuICAgICAgICAgICAgICAgIC8vIHRoZSBjdXJyZW50IHBvc2l0aW9uLlxuICAgICAgICAgICAgICAgIHZhbHVlID0gY2hhckluZGV4QnVnZ3kgPyBzb3VyY2UuY2hhckF0KEluZGV4KSA6IHNvdXJjZVtJbmRleF07XG4gICAgICAgICAgICAgICAgSW5kZXgrKztcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICAgIGNhc2UgMzQ6XG4gICAgICAgICAgICAgICAgLy8gYFwiYCBkZWxpbWl0cyBhIEpTT04gc3RyaW5nOyBhZHZhbmNlIHRvIHRoZSBuZXh0IGNoYXJhY3RlciBhbmRcbiAgICAgICAgICAgICAgICAvLyBiZWdpbiBwYXJzaW5nIHRoZSBzdHJpbmcuIFN0cmluZyB0b2tlbnMgYXJlIHByZWZpeGVkIHdpdGggdGhlXG4gICAgICAgICAgICAgICAgLy8gc2VudGluZWwgYEBgIGNoYXJhY3RlciB0byBkaXN0aW5ndWlzaCB0aGVtIGZyb20gcHVuY3R1YXRvcnMgYW5kXG4gICAgICAgICAgICAgICAgLy8gZW5kLW9mLXN0cmluZyB0b2tlbnMuXG4gICAgICAgICAgICAgICAgZm9yICh2YWx1ZSA9IFwiQFwiLCBJbmRleCsrOyBJbmRleCA8IGxlbmd0aDspIHtcbiAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlIDwgMzIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVW5lc2NhcGVkIEFTQ0lJIGNvbnRyb2wgY2hhcmFjdGVycyAodGhvc2Ugd2l0aCBhIGNvZGUgdW5pdFxuICAgICAgICAgICAgICAgICAgICAvLyBsZXNzIHRoYW4gdGhlIHNwYWNlIGNoYXJhY3RlcikgYXJlIG5vdCBwZXJtaXR0ZWQuXG4gICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNoYXJDb2RlID09IDkyKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEEgcmV2ZXJzZSBzb2xpZHVzIChgXFxgKSBtYXJrcyB0aGUgYmVnaW5uaW5nIG9mIGFuIGVzY2FwZWRcbiAgICAgICAgICAgICAgICAgICAgLy8gY29udHJvbCBjaGFyYWN0ZXIgKGluY2x1ZGluZyBgXCJgLCBgXFxgLCBhbmQgYC9gKSBvciBVbmljb2RlXG4gICAgICAgICAgICAgICAgICAgIC8vIGVzY2FwZSBzZXF1ZW5jZS5cbiAgICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdCgrK0luZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChjaGFyQ29kZSkge1xuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgOTI6IGNhc2UgMzQ6IGNhc2UgNDc6IGNhc2UgOTg6IGNhc2UgMTE2OiBjYXNlIDExMDogY2FzZSAxMDI6IGNhc2UgMTE0OlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmV2aXZlIGVzY2FwZWQgY29udHJvbCBjaGFyYWN0ZXJzLlxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgKz0gVW5lc2NhcGVzW2NoYXJDb2RlXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIEluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIDExNzpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGBcXHVgIG1hcmtzIHRoZSBiZWdpbm5pbmcgb2YgYSBVbmljb2RlIGVzY2FwZSBzZXF1ZW5jZS5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFkdmFuY2UgdG8gdGhlIGZpcnN0IGNoYXJhY3RlciBhbmQgdmFsaWRhdGUgdGhlXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBmb3VyLWRpZ2l0IGNvZGUgcG9pbnQuXG4gICAgICAgICAgICAgICAgICAgICAgICBiZWdpbiA9ICsrSW5kZXg7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHBvc2l0aW9uID0gSW5kZXggKyA0OyBJbmRleCA8IHBvc2l0aW9uOyBJbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBIHZhbGlkIHNlcXVlbmNlIGNvbXByaXNlcyBmb3VyIGhleGRpZ2l0cyAoY2FzZS1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gaW5zZW5zaXRpdmUpIHRoYXQgZm9ybSBhIHNpbmdsZSBoZXhhZGVjaW1hbCB2YWx1ZS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEoY2hhckNvZGUgPj0gNDggJiYgY2hhckNvZGUgPD0gNTcgfHwgY2hhckNvZGUgPj0gOTcgJiYgY2hhckNvZGUgPD0gMTAyIHx8IGNoYXJDb2RlID49IDY1ICYmIGNoYXJDb2RlIDw9IDcwKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEludmFsaWQgVW5pY29kZSBlc2NhcGUgc2VxdWVuY2UuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmV2aXZlIHRoZSBlc2NhcGVkIGNoYXJhY3Rlci5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlICs9IGZyb21DaGFyQ29kZShcIjB4XCIgKyBzb3VyY2Uuc2xpY2UoYmVnaW4sIEluZGV4KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gSW52YWxpZCBlc2NhcGUgc2VxdWVuY2UuXG4gICAgICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPT0gMzQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBBbiB1bmVzY2FwZWQgZG91YmxlLXF1b3RlIGNoYXJhY3RlciBtYXJrcyB0aGUgZW5kIG9mIHRoZVxuICAgICAgICAgICAgICAgICAgICAgIC8vIHN0cmluZy5cbiAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgYmVnaW4gPSBJbmRleDtcbiAgICAgICAgICAgICAgICAgICAgLy8gT3B0aW1pemUgZm9yIHRoZSBjb21tb24gY2FzZSB3aGVyZSBhIHN0cmluZyBpcyB2YWxpZC5cbiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKGNoYXJDb2RlID49IDMyICYmIGNoYXJDb2RlICE9IDkyICYmIGNoYXJDb2RlICE9IDM0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdCgrK0luZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBBcHBlbmQgdGhlIHN0cmluZyBhcy1pcy5cbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgKz0gc291cmNlLnNsaWNlKGJlZ2luLCBJbmRleCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzb3VyY2UuY2hhckNvZGVBdChJbmRleCkgPT0gMzQpIHtcbiAgICAgICAgICAgICAgICAgIC8vIEFkdmFuY2UgdG8gdGhlIG5leHQgY2hhcmFjdGVyIGFuZCByZXR1cm4gdGhlIHJldml2ZWQgc3RyaW5nLlxuICAgICAgICAgICAgICAgICAgSW5kZXgrKztcbiAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gVW50ZXJtaW5hdGVkIHN0cmluZy5cbiAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIC8vIFBhcnNlIG51bWJlcnMgYW5kIGxpdGVyYWxzLlxuICAgICAgICAgICAgICAgIGJlZ2luID0gSW5kZXg7XG4gICAgICAgICAgICAgICAgLy8gQWR2YW5jZSBwYXN0IHRoZSBuZWdhdGl2ZSBzaWduLCBpZiBvbmUgaXMgc3BlY2lmaWVkLlxuICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA9PSA0NSkge1xuICAgICAgICAgICAgICAgICAgaXNTaWduZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdCgrK0luZGV4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gUGFyc2UgYW4gaW50ZWdlciBvciBmbG9hdGluZy1wb2ludCB2YWx1ZS5cbiAgICAgICAgICAgICAgICBpZiAoY2hhckNvZGUgPj0gNDggJiYgY2hhckNvZGUgPD0gNTcpIHtcbiAgICAgICAgICAgICAgICAgIC8vIExlYWRpbmcgemVyb2VzIGFyZSBpbnRlcnByZXRlZCBhcyBvY3RhbCBsaXRlcmFscy5cbiAgICAgICAgICAgICAgICAgIGlmIChjaGFyQ29kZSA9PSA0OCAmJiAoKGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoSW5kZXggKyAxKSksIGNoYXJDb2RlID49IDQ4ICYmIGNoYXJDb2RlIDw9IDU3KSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBJbGxlZ2FsIG9jdGFsIGxpdGVyYWwuXG4gICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBpc1NpZ25lZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgLy8gUGFyc2UgdGhlIGludGVnZXIgY29tcG9uZW50LlxuICAgICAgICAgICAgICAgICAgZm9yICg7IEluZGV4IDwgbGVuZ3RoICYmICgoY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChJbmRleCkpLCBjaGFyQ29kZSA+PSA0OCAmJiBjaGFyQ29kZSA8PSA1Nyk7IEluZGV4KyspO1xuICAgICAgICAgICAgICAgICAgLy8gRmxvYXRzIGNhbm5vdCBjb250YWluIGEgbGVhZGluZyBkZWNpbWFsIHBvaW50OyBob3dldmVyLCB0aGlzXG4gICAgICAgICAgICAgICAgICAvLyBjYXNlIGlzIGFscmVhZHkgYWNjb3VudGVkIGZvciBieSB0aGUgcGFyc2VyLlxuICAgICAgICAgICAgICAgICAgaWYgKHNvdXJjZS5jaGFyQ29kZUF0KEluZGV4KSA9PSA0Nikge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9ICsrSW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIC8vIFBhcnNlIHRoZSBkZWNpbWFsIGNvbXBvbmVudC5cbiAgICAgICAgICAgICAgICAgICAgZm9yICg7IHBvc2l0aW9uIDwgbGVuZ3RoICYmICgoY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChwb3NpdGlvbikpLCBjaGFyQ29kZSA+PSA0OCAmJiBjaGFyQ29kZSA8PSA1Nyk7IHBvc2l0aW9uKyspO1xuICAgICAgICAgICAgICAgICAgICBpZiAocG9zaXRpb24gPT0gSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBJbGxlZ2FsIHRyYWlsaW5nIGRlY2ltYWwuXG4gICAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBJbmRleCA9IHBvc2l0aW9uO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgLy8gUGFyc2UgZXhwb25lbnRzLiBUaGUgYGVgIGRlbm90aW5nIHRoZSBleHBvbmVudCBpc1xuICAgICAgICAgICAgICAgICAgLy8gY2FzZS1pbnNlbnNpdGl2ZS5cbiAgICAgICAgICAgICAgICAgIGNoYXJDb2RlID0gc291cmNlLmNoYXJDb2RlQXQoSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlID09IDEwMSB8fCBjaGFyQ29kZSA9PSA2OSkge1xuICAgICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KCsrSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAvLyBTa2lwIHBhc3QgdGhlIHNpZ24gZm9sbG93aW5nIHRoZSBleHBvbmVudCwgaWYgb25lIGlzXG4gICAgICAgICAgICAgICAgICAgIC8vIHNwZWNpZmllZC5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoYXJDb2RlID09IDQzIHx8IGNoYXJDb2RlID09IDQ1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgSW5kZXgrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBQYXJzZSB0aGUgZXhwb25lbnRpYWwgY29tcG9uZW50LlxuICAgICAgICAgICAgICAgICAgICBmb3IgKHBvc2l0aW9uID0gSW5kZXg7IHBvc2l0aW9uIDwgbGVuZ3RoICYmICgoY2hhckNvZGUgPSBzb3VyY2UuY2hhckNvZGVBdChwb3NpdGlvbikpLCBjaGFyQ29kZSA+PSA0OCAmJiBjaGFyQ29kZSA8PSA1Nyk7IHBvc2l0aW9uKyspO1xuICAgICAgICAgICAgICAgICAgICBpZiAocG9zaXRpb24gPT0gSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBJbGxlZ2FsIGVtcHR5IGV4cG9uZW50LlxuICAgICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgSW5kZXggPSBwb3NpdGlvbjtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIC8vIENvZXJjZSB0aGUgcGFyc2VkIHZhbHVlIHRvIGEgSmF2YVNjcmlwdCBudW1iZXIuXG4gICAgICAgICAgICAgICAgICByZXR1cm4gK3NvdXJjZS5zbGljZShiZWdpbiwgSW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBBIG5lZ2F0aXZlIHNpZ24gbWF5IG9ubHkgcHJlY2VkZSBudW1iZXJzLlxuICAgICAgICAgICAgICAgIGlmIChpc1NpZ25lZCkge1xuICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gYHRydWVgLCBgZmFsc2VgLCBhbmQgYG51bGxgIGxpdGVyYWxzLlxuICAgICAgICAgICAgICAgIGlmIChzb3VyY2Uuc2xpY2UoSW5kZXgsIEluZGV4ICsgNCkgPT0gXCJ0cnVlXCIpIHtcbiAgICAgICAgICAgICAgICAgIEluZGV4ICs9IDQ7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNvdXJjZS5zbGljZShJbmRleCwgSW5kZXggKyA1KSA9PSBcImZhbHNlXCIpIHtcbiAgICAgICAgICAgICAgICAgIEluZGV4ICs9IDU7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzb3VyY2Uuc2xpY2UoSW5kZXgsIEluZGV4ICsgNCkgPT0gXCJudWxsXCIpIHtcbiAgICAgICAgICAgICAgICAgIEluZGV4ICs9IDQ7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gVW5yZWNvZ25pemVkIHRva2VuLlxuICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIFJldHVybiB0aGUgc2VudGluZWwgYCRgIGNoYXJhY3RlciBpZiB0aGUgcGFyc2VyIGhhcyByZWFjaGVkIHRoZSBlbmRcbiAgICAgICAgICAvLyBvZiB0aGUgc291cmNlIHN0cmluZy5cbiAgICAgICAgICByZXR1cm4gXCIkXCI7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSW50ZXJuYWw6IFBhcnNlcyBhIEpTT04gYHZhbHVlYCB0b2tlbi5cbiAgICAgICAgdmFyIGdldCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgIHZhciByZXN1bHRzLCBoYXNNZW1iZXJzO1xuICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIiRcIikge1xuICAgICAgICAgICAgLy8gVW5leHBlY3RlZCBlbmQgb2YgaW5wdXQuXG4gICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIGlmICgoY2hhckluZGV4QnVnZ3kgPyB2YWx1ZS5jaGFyQXQoMCkgOiB2YWx1ZVswXSkgPT0gXCJAXCIpIHtcbiAgICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSBzZW50aW5lbCBgQGAgY2hhcmFjdGVyLlxuICAgICAgICAgICAgICByZXR1cm4gdmFsdWUuc2xpY2UoMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBQYXJzZSBvYmplY3QgYW5kIGFycmF5IGxpdGVyYWxzLlxuICAgICAgICAgICAgaWYgKHZhbHVlID09IFwiW1wiKSB7XG4gICAgICAgICAgICAgIC8vIFBhcnNlcyBhIEpTT04gYXJyYXksIHJldHVybmluZyBhIG5ldyBKYXZhU2NyaXB0IGFycmF5LlxuICAgICAgICAgICAgICByZXN1bHRzID0gW107XG4gICAgICAgICAgICAgIGZvciAoOzsgaGFzTWVtYmVycyB8fCAoaGFzTWVtYmVycyA9IHRydWUpKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBsZXgoKTtcbiAgICAgICAgICAgICAgICAvLyBBIGNsb3Npbmcgc3F1YXJlIGJyYWNrZXQgbWFya3MgdGhlIGVuZCBvZiB0aGUgYXJyYXkgbGl0ZXJhbC5cbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCJdXCIpIHtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgYXJyYXkgbGl0ZXJhbCBjb250YWlucyBlbGVtZW50cywgdGhlIGN1cnJlbnQgdG9rZW5cbiAgICAgICAgICAgICAgICAvLyBzaG91bGQgYmUgYSBjb21tYSBzZXBhcmF0aW5nIHRoZSBwcmV2aW91cyBlbGVtZW50IGZyb20gdGhlXG4gICAgICAgICAgICAgICAgLy8gbmV4dC5cbiAgICAgICAgICAgICAgICBpZiAoaGFzTWVtYmVycykge1xuICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwiLFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbGV4KCk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIl1cIikge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIFVuZXhwZWN0ZWQgdHJhaWxpbmcgYCxgIGluIGFycmF5IGxpdGVyYWwuXG4gICAgICAgICAgICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQSBgLGAgbXVzdCBzZXBhcmF0ZSBlYWNoIGFycmF5IGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEVsaXNpb25zIGFuZCBsZWFkaW5nIGNvbW1hcyBhcmUgbm90IHBlcm1pdHRlZC5cbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCIsXCIpIHtcbiAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChnZXQodmFsdWUpKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT0gXCJ7XCIpIHtcbiAgICAgICAgICAgICAgLy8gUGFyc2VzIGEgSlNPTiBvYmplY3QsIHJldHVybmluZyBhIG5ldyBKYXZhU2NyaXB0IG9iamVjdC5cbiAgICAgICAgICAgICAgcmVzdWx0cyA9IHt9O1xuICAgICAgICAgICAgICBmb3IgKDs7IGhhc01lbWJlcnMgfHwgKGhhc01lbWJlcnMgPSB0cnVlKSkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gbGV4KCk7XG4gICAgICAgICAgICAgICAgLy8gQSBjbG9zaW5nIGN1cmx5IGJyYWNlIG1hcmtzIHRoZSBlbmQgb2YgdGhlIG9iamVjdCBsaXRlcmFsLlxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIn1cIikge1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBvYmplY3QgbGl0ZXJhbCBjb250YWlucyBtZW1iZXJzLCB0aGUgY3VycmVudCB0b2tlblxuICAgICAgICAgICAgICAgIC8vIHNob3VsZCBiZSBhIGNvbW1hIHNlcGFyYXRvci5cbiAgICAgICAgICAgICAgICBpZiAoaGFzTWVtYmVycykge1xuICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09IFwiLFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbGV4KCk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBcIn1cIikge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIFVuZXhwZWN0ZWQgdHJhaWxpbmcgYCxgIGluIG9iamVjdCBsaXRlcmFsLlxuICAgICAgICAgICAgICAgICAgICAgIGFib3J0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEEgYCxgIG11c3Qgc2VwYXJhdGUgZWFjaCBvYmplY3QgbWVtYmVyLlxuICAgICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBMZWFkaW5nIGNvbW1hcyBhcmUgbm90IHBlcm1pdHRlZCwgb2JqZWN0IHByb3BlcnR5IG5hbWVzIG11c3QgYmVcbiAgICAgICAgICAgICAgICAvLyBkb3VibGUtcXVvdGVkIHN0cmluZ3MsIGFuZCBhIGA6YCBtdXN0IHNlcGFyYXRlIGVhY2ggcHJvcGVydHlcbiAgICAgICAgICAgICAgICAvLyBuYW1lIGFuZCB2YWx1ZS5cbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gXCIsXCIgfHwgdHlwZW9mIHZhbHVlICE9IFwic3RyaW5nXCIgfHwgKGNoYXJJbmRleEJ1Z2d5ID8gdmFsdWUuY2hhckF0KDApIDogdmFsdWVbMF0pICE9IFwiQFwiIHx8IGxleCgpICE9IFwiOlwiKSB7XG4gICAgICAgICAgICAgICAgICBhYm9ydCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXN1bHRzW3ZhbHVlLnNsaWNlKDEpXSA9IGdldChsZXgoKSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBVbmV4cGVjdGVkIHRva2VuIGVuY291bnRlcmVkLlxuICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEludGVybmFsOiBVcGRhdGVzIGEgdHJhdmVyc2VkIG9iamVjdCBtZW1iZXIuXG4gICAgICAgIHZhciB1cGRhdGUgPSBmdW5jdGlvbiAoc291cmNlLCBwcm9wZXJ0eSwgY2FsbGJhY2spIHtcbiAgICAgICAgICB2YXIgZWxlbWVudCA9IHdhbGsoc291cmNlLCBwcm9wZXJ0eSwgY2FsbGJhY2spO1xuICAgICAgICAgIGlmIChlbGVtZW50ID09PSB1bmRlZikge1xuICAgICAgICAgICAgZGVsZXRlIHNvdXJjZVtwcm9wZXJ0eV07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNvdXJjZVtwcm9wZXJ0eV0gPSBlbGVtZW50O1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICAvLyBJbnRlcm5hbDogUmVjdXJzaXZlbHkgdHJhdmVyc2VzIGEgcGFyc2VkIEpTT04gb2JqZWN0LCBpbnZva2luZyB0aGVcbiAgICAgICAgLy8gYGNhbGxiYWNrYCBmdW5jdGlvbiBmb3IgZWFjaCB2YWx1ZS4gVGhpcyBpcyBhbiBpbXBsZW1lbnRhdGlvbiBvZiB0aGVcbiAgICAgICAgLy8gYFdhbGsoaG9sZGVyLCBuYW1lKWAgb3BlcmF0aW9uIGRlZmluZWQgaW4gRVMgNS4xIHNlY3Rpb24gMTUuMTIuMi5cbiAgICAgICAgdmFyIHdhbGsgPSBmdW5jdGlvbiAoc291cmNlLCBwcm9wZXJ0eSwgY2FsbGJhY2spIHtcbiAgICAgICAgICB2YXIgdmFsdWUgPSBzb3VyY2VbcHJvcGVydHldLCBsZW5ndGg7XG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiICYmIHZhbHVlKSB7XG4gICAgICAgICAgICAvLyBgZm9yRWFjaGAgY2FuJ3QgYmUgdXNlZCB0byB0cmF2ZXJzZSBhbiBhcnJheSBpbiBPcGVyYSA8PSA4LjU0XG4gICAgICAgICAgICAvLyBiZWNhdXNlIGl0cyBgT2JqZWN0I2hhc093blByb3BlcnR5YCBpbXBsZW1lbnRhdGlvbiByZXR1cm5zIGBmYWxzZWBcbiAgICAgICAgICAgIC8vIGZvciBhcnJheSBpbmRpY2VzIChlLmcuLCBgIVsxLCAyLCAzXS5oYXNPd25Qcm9wZXJ0eShcIjBcIilgKS5cbiAgICAgICAgICAgIGlmIChnZXRDbGFzcy5jYWxsKHZhbHVlKSA9PSBhcnJheUNsYXNzKSB7XG4gICAgICAgICAgICAgIGZvciAobGVuZ3RoID0gdmFsdWUubGVuZ3RoOyBsZW5ndGgtLTspIHtcbiAgICAgICAgICAgICAgICB1cGRhdGUodmFsdWUsIGxlbmd0aCwgY2FsbGJhY2spO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBmb3JFYWNoKHZhbHVlLCBmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGUodmFsdWUsIHByb3BlcnR5LCBjYWxsYmFjayk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gY2FsbGJhY2suY2FsbChzb3VyY2UsIHByb3BlcnR5LCB2YWx1ZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gUHVibGljOiBgSlNPTi5wYXJzZWAuIFNlZSBFUyA1LjEgc2VjdGlvbiAxNS4xMi4yLlxuICAgICAgICBleHBvcnRzLnBhcnNlID0gZnVuY3Rpb24gKHNvdXJjZSwgY2FsbGJhY2spIHtcbiAgICAgICAgICB2YXIgcmVzdWx0LCB2YWx1ZTtcbiAgICAgICAgICBJbmRleCA9IDA7XG4gICAgICAgICAgU291cmNlID0gXCJcIiArIHNvdXJjZTtcbiAgICAgICAgICByZXN1bHQgPSBnZXQobGV4KCkpO1xuICAgICAgICAgIC8vIElmIGEgSlNPTiBzdHJpbmcgY29udGFpbnMgbXVsdGlwbGUgdG9rZW5zLCBpdCBpcyBpbnZhbGlkLlxuICAgICAgICAgIGlmIChsZXgoKSAhPSBcIiRcIikge1xuICAgICAgICAgICAgYWJvcnQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gUmVzZXQgdGhlIHBhcnNlciBzdGF0ZS5cbiAgICAgICAgICBJbmRleCA9IFNvdXJjZSA9IG51bGw7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrICYmIGdldENsYXNzLmNhbGwoY2FsbGJhY2spID09IGZ1bmN0aW9uQ2xhc3MgPyB3YWxrKCh2YWx1ZSA9IHt9LCB2YWx1ZVtcIlwiXSA9IHJlc3VsdCwgdmFsdWUpLCBcIlwiLCBjYWxsYmFjaykgOiByZXN1bHQ7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuXG4gICAgZXhwb3J0c1tcInJ1bkluQ29udGV4dFwiXSA9IHJ1bkluQ29udGV4dDtcbiAgICByZXR1cm4gZXhwb3J0cztcbiAgfVxuXG4gIGlmIChmcmVlRXhwb3J0cyAmJiAhaXNMb2FkZXIpIHtcbiAgICAvLyBFeHBvcnQgZm9yIENvbW1vbkpTIGVudmlyb25tZW50cy5cbiAgICBydW5JbkNvbnRleHQocm9vdCwgZnJlZUV4cG9ydHMpO1xuICB9IGVsc2Uge1xuICAgIC8vIEV4cG9ydCBmb3Igd2ViIGJyb3dzZXJzIGFuZCBKYXZhU2NyaXB0IGVuZ2luZXMuXG4gICAgdmFyIG5hdGl2ZUpTT04gPSByb290LkpTT04sXG4gICAgICAgIHByZXZpb3VzSlNPTiA9IHJvb3RbXCJKU09OM1wiXSxcbiAgICAgICAgaXNSZXN0b3JlZCA9IGZhbHNlO1xuXG4gICAgdmFyIEpTT04zID0gcnVuSW5Db250ZXh0KHJvb3QsIChyb290W1wiSlNPTjNcIl0gPSB7XG4gICAgICAvLyBQdWJsaWM6IFJlc3RvcmVzIHRoZSBvcmlnaW5hbCB2YWx1ZSBvZiB0aGUgZ2xvYmFsIGBKU09OYCBvYmplY3QgYW5kXG4gICAgICAvLyByZXR1cm5zIGEgcmVmZXJlbmNlIHRvIHRoZSBgSlNPTjNgIG9iamVjdC5cbiAgICAgIFwibm9Db25mbGljdFwiOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghaXNSZXN0b3JlZCkge1xuICAgICAgICAgIGlzUmVzdG9yZWQgPSB0cnVlO1xuICAgICAgICAgIHJvb3QuSlNPTiA9IG5hdGl2ZUpTT047XG4gICAgICAgICAgcm9vdFtcIkpTT04zXCJdID0gcHJldmlvdXNKU09OO1xuICAgICAgICAgIG5hdGl2ZUpTT04gPSBwcmV2aW91c0pTT04gPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBKU09OMztcbiAgICAgIH1cbiAgICB9KSk7XG5cbiAgICByb290LkpTT04gPSB7XG4gICAgICBcInBhcnNlXCI6IEpTT04zLnBhcnNlLFxuICAgICAgXCJzdHJpbmdpZnlcIjogSlNPTjMuc3RyaW5naWZ5XG4gICAgfTtcbiAgfVxuXG4gIC8vIEV4cG9ydCBmb3IgYXN5bmNocm9ub3VzIG1vZHVsZSBsb2FkZXJzLlxuICBpZiAoaXNMb2FkZXIpIHtcbiAgICBkZWZpbmUoZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIEpTT04zO1xuICAgIH0pO1xuICB9XG59KS5jYWxsKHRoaXMpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvanNvbjMvbGliL2pzb24zLmpzXG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar random = __webpack_require__(8);\n\nvar onUnload = {}\n  , afterUnload = false\n    // detect google chrome packaged apps because they don't allow the 'unload' event\n  , isChromePackagedApp = global.chrome && global.chrome.app && global.chrome.app.runtime\n  ;\n\nmodule.exports = {\n  attachEvent: function(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.addEventListener(event, listener, false);\n    } else if (global.document && global.attachEvent) {\n      // IE quirks.\n      // According to: http://stevesouders.com/misc/test-postmessage.php\n      // the message gets delivered only to 'document', not 'window'.\n      global.document.attachEvent('on' + event, listener);\n      // I get 'window' for ie8.\n      global.attachEvent('on' + event, listener);\n    }\n  }\n\n, detachEvent: function(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.removeEventListener(event, listener, false);\n    } else if (global.document && global.detachEvent) {\n      global.document.detachEvent('on' + event, listener);\n      global.detachEvent('on' + event, listener);\n    }\n  }\n\n, unloadAdd: function(listener) {\n    if (isChromePackagedApp) {\n      return null;\n    }\n\n    var ref = random.string(8);\n    onUnload[ref] = listener;\n    if (afterUnload) {\n      setTimeout(this.triggerUnloadCallbacks, 0);\n    }\n    return ref;\n  }\n\n, unloadDel: function(ref) {\n    if (ref in onUnload) {\n      delete onUnload[ref];\n    }\n  }\n\n, triggerUnloadCallbacks: function() {\n    for (var ref in onUnload) {\n      onUnload[ref]();\n      delete onUnload[ref];\n    }\n  }\n};\n\nvar unloadTriggered = function() {\n  if (afterUnload) {\n    return;\n  }\n  afterUnload = true;\n  module.exports.triggerUnloadCallbacks();\n};\n\n// 'unload' alone is not reliable in opera within an iframe, but we\n// can't use `beforeunload` as IE fires it on javascript: links.\nif (!isChromePackagedApp) {\n  module.exports.attachEvent('unload', unloadTriggered);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvZXZlbnQuanM/ODM5MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOENBQUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHJhbmRvbSA9IHJlcXVpcmUoJy4vcmFuZG9tJyk7XG5cbnZhciBvblVubG9hZCA9IHt9XG4gICwgYWZ0ZXJVbmxvYWQgPSBmYWxzZVxuICAgIC8vIGRldGVjdCBnb29nbGUgY2hyb21lIHBhY2thZ2VkIGFwcHMgYmVjYXVzZSB0aGV5IGRvbid0IGFsbG93IHRoZSAndW5sb2FkJyBldmVudFxuICAsIGlzQ2hyb21lUGFja2FnZWRBcHAgPSBnbG9iYWwuY2hyb21lICYmIGdsb2JhbC5jaHJvbWUuYXBwICYmIGdsb2JhbC5jaHJvbWUuYXBwLnJ1bnRpbWVcbiAgO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYXR0YWNoRXZlbnQ6IGZ1bmN0aW9uKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgIGlmICh0eXBlb2YgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICB9IGVsc2UgaWYgKGdsb2JhbC5kb2N1bWVudCAmJiBnbG9iYWwuYXR0YWNoRXZlbnQpIHtcbiAgICAgIC8vIElFIHF1aXJrcy5cbiAgICAgIC8vIEFjY29yZGluZyB0bzogaHR0cDovL3N0ZXZlc291ZGVycy5jb20vbWlzYy90ZXN0LXBvc3RtZXNzYWdlLnBocFxuICAgICAgLy8gdGhlIG1lc3NhZ2UgZ2V0cyBkZWxpdmVyZWQgb25seSB0byAnZG9jdW1lbnQnLCBub3QgJ3dpbmRvdycuXG4gICAgICBnbG9iYWwuZG9jdW1lbnQuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgICAvLyBJIGdldCAnd2luZG93JyBmb3IgaWU4LlxuICAgICAgZ2xvYmFsLmF0dGFjaEV2ZW50KCdvbicgKyBldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfVxuXG4sIGRldGFjaEV2ZW50OiBmdW5jdGlvbihldmVudCwgbGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgZ2xvYmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgfSBlbHNlIGlmIChnbG9iYWwuZG9jdW1lbnQgJiYgZ2xvYmFsLmRldGFjaEV2ZW50KSB7XG4gICAgICBnbG9iYWwuZG9jdW1lbnQuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgICBnbG9iYWwuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgfVxuICB9XG5cbiwgdW5sb2FkQWRkOiBmdW5jdGlvbihsaXN0ZW5lcikge1xuICAgIGlmIChpc0Nocm9tZVBhY2thZ2VkQXBwKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgcmVmID0gcmFuZG9tLnN0cmluZyg4KTtcbiAgICBvblVubG9hZFtyZWZdID0gbGlzdGVuZXI7XG4gICAgaWYgKGFmdGVyVW5sb2FkKSB7XG4gICAgICBzZXRUaW1lb3V0KHRoaXMudHJpZ2dlclVubG9hZENhbGxiYWNrcywgMCk7XG4gICAgfVxuICAgIHJldHVybiByZWY7XG4gIH1cblxuLCB1bmxvYWREZWw6IGZ1bmN0aW9uKHJlZikge1xuICAgIGlmIChyZWYgaW4gb25VbmxvYWQpIHtcbiAgICAgIGRlbGV0ZSBvblVubG9hZFtyZWZdO1xuICAgIH1cbiAgfVxuXG4sIHRyaWdnZXJVbmxvYWRDYWxsYmFja3M6IGZ1bmN0aW9uKCkge1xuICAgIGZvciAodmFyIHJlZiBpbiBvblVubG9hZCkge1xuICAgICAgb25VbmxvYWRbcmVmXSgpO1xuICAgICAgZGVsZXRlIG9uVW5sb2FkW3JlZl07XG4gICAgfVxuICB9XG59O1xuXG52YXIgdW5sb2FkVHJpZ2dlcmVkID0gZnVuY3Rpb24oKSB7XG4gIGlmIChhZnRlclVubG9hZCkge1xuICAgIHJldHVybjtcbiAgfVxuICBhZnRlclVubG9hZCA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzLnRyaWdnZXJVbmxvYWRDYWxsYmFja3MoKTtcbn07XG5cbi8vICd1bmxvYWQnIGFsb25lIGlzIG5vdCByZWxpYWJsZSBpbiBvcGVyYSB3aXRoaW4gYW4gaWZyYW1lLCBidXQgd2Vcbi8vIGNhbid0IHVzZSBgYmVmb3JldW5sb2FkYCBhcyBJRSBmaXJlcyBpdCBvbiBqYXZhc2NyaXB0OiBsaW5rcy5cbmlmICghaXNDaHJvbWVQYWNrYWdlZEFwcCkge1xuICBtb2R1bGUuZXhwb3J0cy5hdHRhY2hFdmVudCgndW5sb2FkJywgdW5sb2FkVHJpZ2dlcmVkKTtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3V0aWxzL2V2ZW50LmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* global crypto:true */\nvar crypto = __webpack_require__(38);\n\n// This string has length 32, a power of 2, so the modulus doesn't introduce a\n// bias.\nvar _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';\nmodule.exports = {\n  string: function(length) {\n    var max = _randomStringChars.length;\n    var bytes = crypto.randomBytes(length);\n    var ret = [];\n    for (var i = 0; i < length; i++) {\n      ret.push(_randomStringChars.substr(bytes[i] % max, 1));\n    }\n    return ret.join('');\n  }\n\n, number: function(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n, numberString: function(max) {\n    var t = ('' + (max - 1)).length;\n    var p = new Array(t + 1).join('0');\n    return (p + this.number(max)).slice(-t);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvcmFuZG9tLmpzP2U3ODQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFlBQVk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKiBnbG9iYWwgY3J5cHRvOnRydWUgKi9cbnZhciBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcblxuLy8gVGhpcyBzdHJpbmcgaGFzIGxlbmd0aCAzMiwgYSBwb3dlciBvZiAyLCBzbyB0aGUgbW9kdWx1cyBkb2Vzbid0IGludHJvZHVjZSBhXG4vLyBiaWFzLlxudmFyIF9yYW5kb21TdHJpbmdDaGFycyA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NSc7XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc3RyaW5nOiBmdW5jdGlvbihsZW5ndGgpIHtcbiAgICB2YXIgbWF4ID0gX3JhbmRvbVN0cmluZ0NoYXJzLmxlbmd0aDtcbiAgICB2YXIgYnl0ZXMgPSBjcnlwdG8ucmFuZG9tQnl0ZXMobGVuZ3RoKTtcbiAgICB2YXIgcmV0ID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgcmV0LnB1c2goX3JhbmRvbVN0cmluZ0NoYXJzLnN1YnN0cihieXRlc1tpXSAlIG1heCwgMSkpO1xuICAgIH1cbiAgICByZXR1cm4gcmV0LmpvaW4oJycpO1xuICB9XG5cbiwgbnVtYmVyOiBmdW5jdGlvbihtYXgpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbWF4KTtcbiAgfVxuXG4sIG51bWJlclN0cmluZzogZnVuY3Rpb24obWF4KSB7XG4gICAgdmFyIHQgPSAoJycgKyAobWF4IC0gMSkpLmxlbmd0aDtcbiAgICB2YXIgcCA9IG5ldyBBcnJheSh0ICsgMSkuam9pbignMCcpO1xuICAgIHJldHVybiAocCArIHRoaXMubnVtYmVyKG1heCkpLnNsaWNlKC10KTtcbiAgfVxufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3V0aWxzL3JhbmRvbS5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar inherits = __webpack_require__(0)\n  , urlUtils = __webpack_require__(5)\n  , SenderReceiver = __webpack_require__(21)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:ajax-based');\n}\n\nfunction createAjaxSender(AjaxObject) {\n  return function(url, payload, callback) {\n    debug('create ajax sender', url, payload);\n    var opt = {};\n    if (typeof payload === 'string') {\n      opt.headers = {'Content-type':'text/plain'};\n    }\n    var ajaxUrl = urlUtils.addPath(url, '/xhr_send');\n    var xo = new AjaxObject('POST', ajaxUrl, payload, opt);\n    xo.once('finish', function(status) {\n      debug('finish', status);\n      xo = null;\n\n      if (status !== 200 && status !== 204) {\n        return callback(new Error('http status ' + status));\n      }\n      callback();\n    });\n    return function() {\n      debug('abort');\n      xo.close();\n      xo = null;\n\n      var err = new Error('Aborted');\n      err.code = 1000;\n      callback(err);\n    };\n  };\n}\n\nfunction AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {\n  SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);\n}\n\ninherits(AjaxBasedTransport, SenderReceiver);\n\nmodule.exports = AjaxBasedTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2xpYi9hamF4LWJhc2VkLmpzPzQ2OWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IitDQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvdXJsJylcbiAgLCBTZW5kZXJSZWNlaXZlciA9IHJlcXVpcmUoJy4vc2VuZGVyLXJlY2VpdmVyJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OmFqYXgtYmFzZWQnKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQWpheFNlbmRlcihBamF4T2JqZWN0KSB7XG4gIHJldHVybiBmdW5jdGlvbih1cmwsIHBheWxvYWQsIGNhbGxiYWNrKSB7XG4gICAgZGVidWcoJ2NyZWF0ZSBhamF4IHNlbmRlcicsIHVybCwgcGF5bG9hZCk7XG4gICAgdmFyIG9wdCA9IHt9O1xuICAgIGlmICh0eXBlb2YgcGF5bG9hZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG9wdC5oZWFkZXJzID0geydDb250ZW50LXR5cGUnOid0ZXh0L3BsYWluJ307XG4gICAgfVxuICAgIHZhciBhamF4VXJsID0gdXJsVXRpbHMuYWRkUGF0aCh1cmwsICcveGhyX3NlbmQnKTtcbiAgICB2YXIgeG8gPSBuZXcgQWpheE9iamVjdCgnUE9TVCcsIGFqYXhVcmwsIHBheWxvYWQsIG9wdCk7XG4gICAgeG8ub25jZSgnZmluaXNoJywgZnVuY3Rpb24oc3RhdHVzKSB7XG4gICAgICBkZWJ1ZygnZmluaXNoJywgc3RhdHVzKTtcbiAgICAgIHhvID0gbnVsbDtcblxuICAgICAgaWYgKHN0YXR1cyAhPT0gMjAwICYmIHN0YXR1cyAhPT0gMjA0KSB7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhuZXcgRXJyb3IoJ2h0dHAgc3RhdHVzICcgKyBzdGF0dXMpKTtcbiAgICAgIH1cbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ2Fib3J0Jyk7XG4gICAgICB4by5jbG9zZSgpO1xuICAgICAgeG8gPSBudWxsO1xuXG4gICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdBYm9ydGVkJyk7XG4gICAgICBlcnIuY29kZSA9IDEwMDA7XG4gICAgICBjYWxsYmFjayhlcnIpO1xuICAgIH07XG4gIH07XG59XG5cbmZ1bmN0aW9uIEFqYXhCYXNlZFRyYW5zcG9ydCh0cmFuc1VybCwgdXJsU3VmZml4LCBSZWNlaXZlciwgQWpheE9iamVjdCkge1xuICBTZW5kZXJSZWNlaXZlci5jYWxsKHRoaXMsIHRyYW5zVXJsLCB1cmxTdWZmaXgsIGNyZWF0ZUFqYXhTZW5kZXIoQWpheE9iamVjdCksIFJlY2VpdmVyLCBBamF4T2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoQWpheEJhc2VkVHJhbnNwb3J0LCBTZW5kZXJSZWNlaXZlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gQWpheEJhc2VkVHJhbnNwb3J0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2xpYi9hamF4LWJhc2VkLmpzXG4vLyBtb2R1bGUgaWQgPSA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , XhrDriver = __webpack_require__(22)\n  ;\n\nfunction XHRLocalObject(method, url, payload /*, opts */) {\n  XhrDriver.call(this, method, url, payload, {\n    noCredentials: true\n  });\n}\n\ninherits(XHRLocalObject, XhrDriver);\n\nXHRLocalObject.enabled = XhrDriver.enabled;\n\nmodule.exports = XHRLocalObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci94aHItbG9jYWwuanM/OWE0YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBOztBQUVBIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgWGhyRHJpdmVyID0gcmVxdWlyZSgnLi4vZHJpdmVyL3hocicpXG4gIDtcblxuZnVuY3Rpb24gWEhSTG9jYWxPYmplY3QobWV0aG9kLCB1cmwsIHBheWxvYWQgLyosIG9wdHMgKi8pIHtcbiAgWGhyRHJpdmVyLmNhbGwodGhpcywgbWV0aG9kLCB1cmwsIHBheWxvYWQsIHtcbiAgICBub0NyZWRlbnRpYWxzOiB0cnVlXG4gIH0pO1xufVxuXG5pbmhlcml0cyhYSFJMb2NhbE9iamVjdCwgWGhyRHJpdmVyKTtcblxuWEhSTG9jYWxPYmplY3QuZW5hYmxlZCA9IFhockRyaXZlci5lbmFibGVkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhIUkxvY2FsT2JqZWN0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci94aHItbG9jYWwuanNcbi8vIG1vZHVsZSBpZCA9IDEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nmodule.exports = {\n  isOpera: function() {\n    return global.navigator &&\n      /opera/i.test(global.navigator.userAgent);\n  }\n\n, isKonqueror: function() {\n    return global.navigator &&\n      /konqueror/i.test(global.navigator.userAgent);\n  }\n\n  // #187 wrap document.domain in try/catch because of WP8 from file:///\n, hasDomain: function () {\n    // non-browser client always has a domain\n    if (!global.document) {\n      return true;\n    }\n\n    try {\n      return !!global.document.domain;\n    } catch (e) {\n      return false;\n    }\n  }\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvYnJvd3Nlci5qcz84OTRkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI4Q0FBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNPcGVyYTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGdsb2JhbC5uYXZpZ2F0b3IgJiZcbiAgICAgIC9vcGVyYS9pLnRlc3QoZ2xvYmFsLm5hdmlnYXRvci51c2VyQWdlbnQpO1xuICB9XG5cbiwgaXNLb25xdWVyb3I6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBnbG9iYWwubmF2aWdhdG9yICYmXG4gICAgICAva29ucXVlcm9yL2kudGVzdChnbG9iYWwubmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH1cblxuICAvLyAjMTg3IHdyYXAgZG9jdW1lbnQuZG9tYWluIGluIHRyeS9jYXRjaCBiZWNhdXNlIG9mIFdQOCBmcm9tIGZpbGU6Ly8vXG4sIGhhc0RvbWFpbjogZnVuY3Rpb24gKCkge1xuICAgIC8vIG5vbi1icm93c2VyIGNsaWVudCBhbHdheXMgaGFzIGEgZG9tYWluXG4gICAgaWYgKCFnbG9iYWwuZG9jdW1lbnQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICByZXR1cm4gISFnbG9iYWwuZG9jdW1lbnQuZG9tYWluO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi91dGlscy9icm93c2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, global) {\n\nvar eventUtils = __webpack_require__(7)\n  , JSON3 = __webpack_require__(6)\n  , browser = __webpack_require__(11)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:utils:iframe');\n}\n\nmodule.exports = {\n  WPrefix: '_jp'\n, currentWindowId: null\n\n, polluteGlobalNamespace: function() {\n    if (!(module.exports.WPrefix in global)) {\n      global[module.exports.WPrefix] = {};\n    }\n  }\n\n, postMessage: function(type, data) {\n    if (global.parent !== global) {\n      global.parent.postMessage(JSON3.stringify({\n        windowId: module.exports.currentWindowId\n      , type: type\n      , data: data || ''\n      }), '*');\n    } else {\n      debug('Cannot postMessage, no parent window.', type, data);\n    }\n  }\n\n, createIframe: function(iframeUrl, errorCallback) {\n    var iframe = global.document.createElement('iframe');\n    var tref, unloadRef;\n    var unattach = function() {\n      debug('unattach');\n      clearTimeout(tref);\n      // Explorer had problems with that.\n      try {\n        iframe.onload = null;\n      } catch (x) {}\n      iframe.onerror = null;\n    };\n    var cleanup = function() {\n      debug('cleanup');\n      if (iframe) {\n        unattach();\n        // This timeout makes chrome fire onbeforeunload event\n        // within iframe. Without the timeout it goes straight to\n        // onunload.\n        setTimeout(function() {\n          if (iframe) {\n            iframe.parentNode.removeChild(iframe);\n          }\n          iframe = null;\n        }, 0);\n        eventUtils.unloadDel(unloadRef);\n      }\n    };\n    var onerror = function(err) {\n      debug('onerror', err);\n      if (iframe) {\n        cleanup();\n        errorCallback(err);\n      }\n    };\n    var post = function(msg, origin) {\n      debug('post', msg, origin);\n      try {\n        // When the iframe is not loaded, IE raises an exception\n        // on 'contentWindow'.\n        setTimeout(function() {\n          if (iframe && iframe.contentWindow) {\n            iframe.contentWindow.postMessage(msg, origin);\n          }\n        }, 0);\n      } catch (x) {}\n    };\n\n    iframe.src = iframeUrl;\n    iframe.style.display = 'none';\n    iframe.style.position = 'absolute';\n    iframe.onerror = function() {\n      onerror('onerror');\n    };\n    iframe.onload = function() {\n      debug('onload');\n      // `onload` is triggered before scripts on the iframe are\n      // executed. Give it few seconds to actually load stuff.\n      clearTimeout(tref);\n      tref = setTimeout(function() {\n        onerror('onload timeout');\n      }, 2000);\n    };\n    global.document.body.appendChild(iframe);\n    tref = setTimeout(function() {\n      onerror('timeout');\n    }, 15000);\n    unloadRef = eventUtils.unloadAdd(cleanup);\n    return {\n      post: post\n    , cleanup: cleanup\n    , loaded: unattach\n    };\n  }\n\n/* jshint undef: false, newcap: false */\n/* eslint no-undef: 0, new-cap: 0 */\n, createHtmlfile: function(iframeUrl, errorCallback) {\n    var axo = ['Active'].concat('Object').join('X');\n    var doc = new global[axo]('htmlfile');\n    var tref, unloadRef;\n    var iframe;\n    var unattach = function() {\n      clearTimeout(tref);\n      iframe.onerror = null;\n    };\n    var cleanup = function() {\n      if (doc) {\n        unattach();\n        eventUtils.unloadDel(unloadRef);\n        iframe.parentNode.removeChild(iframe);\n        iframe = doc = null;\n        CollectGarbage();\n      }\n    };\n    var onerror = function(r)  {\n      debug('onerror', r);\n      if (doc) {\n        cleanup();\n        errorCallback(r);\n      }\n    };\n    var post = function(msg, origin) {\n      try {\n        // When the iframe is not loaded, IE raises an exception\n        // on 'contentWindow'.\n        setTimeout(function() {\n          if (iframe && iframe.contentWindow) {\n              iframe.contentWindow.postMessage(msg, origin);\n          }\n        }, 0);\n      } catch (x) {}\n    };\n\n    doc.open();\n    doc.write('<html><s' + 'cript>' +\n              'document.domain=\"' + global.document.domain + '\";' +\n              '</s' + 'cript></html>');\n    doc.close();\n    doc.parentWindow[module.exports.WPrefix] = global[module.exports.WPrefix];\n    var c = doc.createElement('div');\n    doc.body.appendChild(c);\n    iframe = doc.createElement('iframe');\n    c.appendChild(iframe);\n    iframe.src = iframeUrl;\n    iframe.onerror = function() {\n      onerror('onerror');\n    };\n    tref = setTimeout(function() {\n      onerror('timeout');\n    }, 15000);\n    unloadRef = eventUtils.unloadAdd(cleanup);\n    return {\n      post: post\n    , cleanup: cleanup\n    , loaded: unattach\n    };\n  }\n};\n\nmodule.exports.iframeEnabled = false;\nif (global.document) {\n  // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with\n  // huge delay, or not at all.\n  module.exports.iframeEnabled = (typeof global.postMessage === 'function' ||\n    typeof global.postMessage === 'object') && (!browser.isKonqueror());\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvaWZyYW1lLmpzPzg3ZGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6InVEQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0EsZ0VBQWdFO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBldmVudFV0aWxzID0gcmVxdWlyZSgnLi9ldmVudCcpXG4gICwgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpXG4gICwgYnJvd3NlciA9IHJlcXVpcmUoJy4vYnJvd3NlcicpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDp1dGlsczppZnJhbWUnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFdQcmVmaXg6ICdfanAnXG4sIGN1cnJlbnRXaW5kb3dJZDogbnVsbFxuXG4sIHBvbGx1dGVHbG9iYWxOYW1lc3BhY2U6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghKG1vZHVsZS5leHBvcnRzLldQcmVmaXggaW4gZ2xvYmFsKSkge1xuICAgICAgZ2xvYmFsW21vZHVsZS5leHBvcnRzLldQcmVmaXhdID0ge307XG4gICAgfVxuICB9XG5cbiwgcG9zdE1lc3NhZ2U6IGZ1bmN0aW9uKHR5cGUsIGRhdGEpIHtcbiAgICBpZiAoZ2xvYmFsLnBhcmVudCAhPT0gZ2xvYmFsKSB7XG4gICAgICBnbG9iYWwucGFyZW50LnBvc3RNZXNzYWdlKEpTT04zLnN0cmluZ2lmeSh7XG4gICAgICAgIHdpbmRvd0lkOiBtb2R1bGUuZXhwb3J0cy5jdXJyZW50V2luZG93SWRcbiAgICAgICwgdHlwZTogdHlwZVxuICAgICAgLCBkYXRhOiBkYXRhIHx8ICcnXG4gICAgICB9KSwgJyonKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGVidWcoJ0Nhbm5vdCBwb3N0TWVzc2FnZSwgbm8gcGFyZW50IHdpbmRvdy4nLCB0eXBlLCBkYXRhKTtcbiAgICB9XG4gIH1cblxuLCBjcmVhdGVJZnJhbWU6IGZ1bmN0aW9uKGlmcmFtZVVybCwgZXJyb3JDYWxsYmFjaykge1xuICAgIHZhciBpZnJhbWUgPSBnbG9iYWwuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgdmFyIHRyZWYsIHVubG9hZFJlZjtcbiAgICB2YXIgdW5hdHRhY2ggPSBmdW5jdGlvbigpIHtcbiAgICAgIGRlYnVnKCd1bmF0dGFjaCcpO1xuICAgICAgY2xlYXJUaW1lb3V0KHRyZWYpO1xuICAgICAgLy8gRXhwbG9yZXIgaGFkIHByb2JsZW1zIHdpdGggdGhhdC5cbiAgICAgIHRyeSB7XG4gICAgICAgIGlmcmFtZS5vbmxvYWQgPSBudWxsO1xuICAgICAgfSBjYXRjaCAoeCkge31cbiAgICAgIGlmcmFtZS5vbmVycm9yID0gbnVsbDtcbiAgICB9O1xuICAgIHZhciBjbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gICAgICBkZWJ1ZygnY2xlYW51cCcpO1xuICAgICAgaWYgKGlmcmFtZSkge1xuICAgICAgICB1bmF0dGFjaCgpO1xuICAgICAgICAvLyBUaGlzIHRpbWVvdXQgbWFrZXMgY2hyb21lIGZpcmUgb25iZWZvcmV1bmxvYWQgZXZlbnRcbiAgICAgICAgLy8gd2l0aGluIGlmcmFtZS4gV2l0aG91dCB0aGUgdGltZW91dCBpdCBnb2VzIHN0cmFpZ2h0IHRvXG4gICAgICAgIC8vIG9udW5sb2FkLlxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmIChpZnJhbWUpIHtcbiAgICAgICAgICAgIGlmcmFtZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmcmFtZSA9IG51bGw7XG4gICAgICAgIH0sIDApO1xuICAgICAgICBldmVudFV0aWxzLnVubG9hZERlbCh1bmxvYWRSZWYpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIG9uZXJyb3IgPSBmdW5jdGlvbihlcnIpIHtcbiAgICAgIGRlYnVnKCdvbmVycm9yJywgZXJyKTtcbiAgICAgIGlmIChpZnJhbWUpIHtcbiAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICBlcnJvckNhbGxiYWNrKGVycik7XG4gICAgICB9XG4gICAgfTtcbiAgICB2YXIgcG9zdCA9IGZ1bmN0aW9uKG1zZywgb3JpZ2luKSB7XG4gICAgICBkZWJ1ZygncG9zdCcsIG1zZywgb3JpZ2luKTtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFdoZW4gdGhlIGlmcmFtZSBpcyBub3QgbG9hZGVkLCBJRSByYWlzZXMgYW4gZXhjZXB0aW9uXG4gICAgICAgIC8vIG9uICdjb250ZW50V2luZG93Jy5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoaWZyYW1lICYmIGlmcmFtZS5jb250ZW50V2luZG93KSB7XG4gICAgICAgICAgICBpZnJhbWUuY29udGVudFdpbmRvdy5wb3N0TWVzc2FnZShtc2csIG9yaWdpbik7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAwKTtcbiAgICAgIH0gY2F0Y2ggKHgpIHt9XG4gICAgfTtcblxuICAgIGlmcmFtZS5zcmMgPSBpZnJhbWVVcmw7XG4gICAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgaWZyYW1lLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICBpZnJhbWUub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgb25lcnJvcignb25lcnJvcicpO1xuICAgIH07XG4gICAgaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ29ubG9hZCcpO1xuICAgICAgLy8gYG9ubG9hZGAgaXMgdHJpZ2dlcmVkIGJlZm9yZSBzY3JpcHRzIG9uIHRoZSBpZnJhbWUgYXJlXG4gICAgICAvLyBleGVjdXRlZC4gR2l2ZSBpdCBmZXcgc2Vjb25kcyB0byBhY3R1YWxseSBsb2FkIHN0dWZmLlxuICAgICAgY2xlYXJUaW1lb3V0KHRyZWYpO1xuICAgICAgdHJlZiA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIG9uZXJyb3IoJ29ubG9hZCB0aW1lb3V0Jyk7XG4gICAgICB9LCAyMDAwKTtcbiAgICB9O1xuICAgIGdsb2JhbC5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gICAgdHJlZiA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBvbmVycm9yKCd0aW1lb3V0Jyk7XG4gICAgfSwgMTUwMDApO1xuICAgIHVubG9hZFJlZiA9IGV2ZW50VXRpbHMudW5sb2FkQWRkKGNsZWFudXApO1xuICAgIHJldHVybiB7XG4gICAgICBwb3N0OiBwb3N0XG4gICAgLCBjbGVhbnVwOiBjbGVhbnVwXG4gICAgLCBsb2FkZWQ6IHVuYXR0YWNoXG4gICAgfTtcbiAgfVxuXG4vKiBqc2hpbnQgdW5kZWY6IGZhbHNlLCBuZXdjYXA6IGZhbHNlICovXG4vKiBlc2xpbnQgbm8tdW5kZWY6IDAsIG5ldy1jYXA6IDAgKi9cbiwgY3JlYXRlSHRtbGZpbGU6IGZ1bmN0aW9uKGlmcmFtZVVybCwgZXJyb3JDYWxsYmFjaykge1xuICAgIHZhciBheG8gPSBbJ0FjdGl2ZSddLmNvbmNhdCgnT2JqZWN0Jykuam9pbignWCcpO1xuICAgIHZhciBkb2MgPSBuZXcgZ2xvYmFsW2F4b10oJ2h0bWxmaWxlJyk7XG4gICAgdmFyIHRyZWYsIHVubG9hZFJlZjtcbiAgICB2YXIgaWZyYW1lO1xuICAgIHZhciB1bmF0dGFjaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRyZWYpO1xuICAgICAgaWZyYW1lLm9uZXJyb3IgPSBudWxsO1xuICAgIH07XG4gICAgdmFyIGNsZWFudXAgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChkb2MpIHtcbiAgICAgICAgdW5hdHRhY2goKTtcbiAgICAgICAgZXZlbnRVdGlscy51bmxvYWREZWwodW5sb2FkUmVmKTtcbiAgICAgICAgaWZyYW1lLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgICAgICAgaWZyYW1lID0gZG9jID0gbnVsbDtcbiAgICAgICAgQ29sbGVjdEdhcmJhZ2UoKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBvbmVycm9yID0gZnVuY3Rpb24ocikgIHtcbiAgICAgIGRlYnVnKCdvbmVycm9yJywgcik7XG4gICAgICBpZiAoZG9jKSB7XG4gICAgICAgIGNsZWFudXAoKTtcbiAgICAgICAgZXJyb3JDYWxsYmFjayhyKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBwb3N0ID0gZnVuY3Rpb24obXNnLCBvcmlnaW4pIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFdoZW4gdGhlIGlmcmFtZSBpcyBub3QgbG9hZGVkLCBJRSByYWlzZXMgYW4gZXhjZXB0aW9uXG4gICAgICAgIC8vIG9uICdjb250ZW50V2luZG93Jy5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoaWZyYW1lICYmIGlmcmFtZS5jb250ZW50V2luZG93KSB7XG4gICAgICAgICAgICAgIGlmcmFtZS5jb250ZW50V2luZG93LnBvc3RNZXNzYWdlKG1zZywgb3JpZ2luKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIDApO1xuICAgICAgfSBjYXRjaCAoeCkge31cbiAgICB9O1xuXG4gICAgZG9jLm9wZW4oKTtcbiAgICBkb2Mud3JpdGUoJzxodG1sPjxzJyArICdjcmlwdD4nICtcbiAgICAgICAgICAgICAgJ2RvY3VtZW50LmRvbWFpbj1cIicgKyBnbG9iYWwuZG9jdW1lbnQuZG9tYWluICsgJ1wiOycgK1xuICAgICAgICAgICAgICAnPC9zJyArICdjcmlwdD48L2h0bWw+Jyk7XG4gICAgZG9jLmNsb3NlKCk7XG4gICAgZG9jLnBhcmVudFdpbmRvd1ttb2R1bGUuZXhwb3J0cy5XUHJlZml4XSA9IGdsb2JhbFttb2R1bGUuZXhwb3J0cy5XUHJlZml4XTtcbiAgICB2YXIgYyA9IGRvYy5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBkb2MuYm9keS5hcHBlbmRDaGlsZChjKTtcbiAgICBpZnJhbWUgPSBkb2MuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgYy5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICAgIGlmcmFtZS5zcmMgPSBpZnJhbWVVcmw7XG4gICAgaWZyYW1lLm9uZXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgICAgIG9uZXJyb3IoJ29uZXJyb3InKTtcbiAgICB9O1xuICAgIHRyZWYgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgb25lcnJvcigndGltZW91dCcpO1xuICAgIH0sIDE1MDAwKTtcbiAgICB1bmxvYWRSZWYgPSBldmVudFV0aWxzLnVubG9hZEFkZChjbGVhbnVwKTtcbiAgICByZXR1cm4ge1xuICAgICAgcG9zdDogcG9zdFxuICAgICwgY2xlYW51cDogY2xlYW51cFxuICAgICwgbG9hZGVkOiB1bmF0dGFjaFxuICAgIH07XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmlmcmFtZUVuYWJsZWQgPSBmYWxzZTtcbmlmIChnbG9iYWwuZG9jdW1lbnQpIHtcbiAgLy8gcG9zdE1lc3NhZ2UgbWlzYmVoYXZlcyBpbiBrb25xdWVyb3IgNC42LjUgLSB0aGUgbWVzc2FnZXMgYXJlIGRlbGl2ZXJlZCB3aXRoXG4gIC8vIGh1Z2UgZGVsYXksIG9yIG5vdCBhdCBhbGwuXG4gIG1vZHVsZS5leHBvcnRzLmlmcmFtZUVuYWJsZWQgPSAodHlwZW9mIGdsb2JhbC5wb3N0TWVzc2FnZSA9PT0gJ2Z1bmN0aW9uJyB8fFxuICAgIHR5cGVvZiBnbG9iYWwucG9zdE1lc3NhZ2UgPT09ICdvYmplY3QnKSAmJiAoIWJyb3dzZXIuaXNLb25xdWVyb3IoKSk7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi91dGlscy9pZnJhbWUuanNcbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar inherits = __webpack_require__(0)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:receiver:xhr');\n}\n\nfunction XhrReceiver(url, AjaxObject) {\n  debug(url);\n  EventEmitter.call(this);\n  var self = this;\n\n  this.bufferPosition = 0;\n\n  this.xo = new AjaxObject('POST', url, null);\n  this.xo.on('chunk', this._chunkHandler.bind(this));\n  this.xo.once('finish', function(status, text) {\n    debug('finish', status, text);\n    self._chunkHandler(status, text);\n    self.xo = null;\n    var reason = status === 200 ? 'network' : 'permanent';\n    debug('close', reason);\n    self.emit('close', null, reason);\n    self._cleanup();\n  });\n}\n\ninherits(XhrReceiver, EventEmitter);\n\nXhrReceiver.prototype._chunkHandler = function(status, text) {\n  debug('_chunkHandler', status);\n  if (status !== 200 || !text) {\n    return;\n  }\n\n  for (var idx = -1; ; this.bufferPosition += idx + 1) {\n    var buf = text.slice(this.bufferPosition);\n    idx = buf.indexOf('\\n');\n    if (idx === -1) {\n      break;\n    }\n    var msg = buf.slice(0, idx);\n    if (msg) {\n      debug('message', msg);\n      this.emit('message', msg);\n    }\n  }\n};\n\nXhrReceiver.prototype._cleanup = function() {\n  debug('_cleanup');\n  this.removeAllListeners();\n};\n\nXhrReceiver.prototype.abort = function() {\n  debug('abort');\n  if (this.xo) {\n    this.xo.close();\n    debug('close');\n    this.emit('close', null, 'user');\n    this.xo = null;\n  }\n  this._cleanup();\n};\n\nmodule.exports = XhrReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3JlY2VpdmVyL3hoci5qcz8yMDE5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIrQ0FBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsRUFBRTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnJlY2VpdmVyOnhocicpO1xufVxuXG5mdW5jdGlvbiBYaHJSZWNlaXZlcih1cmwsIEFqYXhPYmplY3QpIHtcbiAgZGVidWcodXJsKTtcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICB0aGlzLmJ1ZmZlclBvc2l0aW9uID0gMDtcblxuICB0aGlzLnhvID0gbmV3IEFqYXhPYmplY3QoJ1BPU1QnLCB1cmwsIG51bGwpO1xuICB0aGlzLnhvLm9uKCdjaHVuaycsIHRoaXMuX2NodW5rSGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgdGhpcy54by5vbmNlKCdmaW5pc2gnLCBmdW5jdGlvbihzdGF0dXMsIHRleHQpIHtcbiAgICBkZWJ1ZygnZmluaXNoJywgc3RhdHVzLCB0ZXh0KTtcbiAgICBzZWxmLl9jaHVua0hhbmRsZXIoc3RhdHVzLCB0ZXh0KTtcbiAgICBzZWxmLnhvID0gbnVsbDtcbiAgICB2YXIgcmVhc29uID0gc3RhdHVzID09PSAyMDAgPyAnbmV0d29yaycgOiAncGVybWFuZW50JztcbiAgICBkZWJ1ZygnY2xvc2UnLCByZWFzb24pO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCBudWxsLCByZWFzb24pO1xuICAgIHNlbGYuX2NsZWFudXAoKTtcbiAgfSk7XG59XG5cbmluaGVyaXRzKFhoclJlY2VpdmVyLCBFdmVudEVtaXR0ZXIpO1xuXG5YaHJSZWNlaXZlci5wcm90b3R5cGUuX2NodW5rSGFuZGxlciA9IGZ1bmN0aW9uKHN0YXR1cywgdGV4dCkge1xuICBkZWJ1ZygnX2NodW5rSGFuZGxlcicsIHN0YXR1cyk7XG4gIGlmIChzdGF0dXMgIT09IDIwMCB8fCAhdGV4dCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZvciAodmFyIGlkeCA9IC0xOyA7IHRoaXMuYnVmZmVyUG9zaXRpb24gKz0gaWR4ICsgMSkge1xuICAgIHZhciBidWYgPSB0ZXh0LnNsaWNlKHRoaXMuYnVmZmVyUG9zaXRpb24pO1xuICAgIGlkeCA9IGJ1Zi5pbmRleE9mKCdcXG4nKTtcbiAgICBpZiAoaWR4ID09PSAtMSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHZhciBtc2cgPSBidWYuc2xpY2UoMCwgaWR4KTtcbiAgICBpZiAobXNnKSB7XG4gICAgICBkZWJ1ZygnbWVzc2FnZScsIG1zZyk7XG4gICAgICB0aGlzLmVtaXQoJ21lc3NhZ2UnLCBtc2cpO1xuICAgIH1cbiAgfVxufTtcblxuWGhyUmVjZWl2ZXIucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfY2xlYW51cCcpO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxuWGhyUmVjZWl2ZXIucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdhYm9ydCcpO1xuICBpZiAodGhpcy54bykge1xuICAgIHRoaXMueG8uY2xvc2UoKTtcbiAgICBkZWJ1ZygnY2xvc2UnKTtcbiAgICB0aGlzLmVtaXQoJ2Nsb3NlJywgbnVsbCwgJ3VzZXInKTtcbiAgICB0aGlzLnhvID0gbnVsbDtcbiAgfVxuICB0aGlzLl9jbGVhbnVwKCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhoclJlY2VpdmVyO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3JlY2VpdmVyL3hoci5qc1xuLy8gbW9kdWxlIGlkID0gMTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , XhrDriver = __webpack_require__(22)\n  ;\n\nfunction XHRCorsObject(method, url, payload, opts) {\n  XhrDriver.call(this, method, url, payload, opts);\n}\n\ninherits(XHRCorsObject, XhrDriver);\n\nXHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;\n\nmodule.exports = XHRCorsObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci94aHItY29ycy5qcz80ZmNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEiLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBYaHJEcml2ZXIgPSByZXF1aXJlKCcuLi9kcml2ZXIveGhyJylcbiAgO1xuXG5mdW5jdGlvbiBYSFJDb3JzT2JqZWN0KG1ldGhvZCwgdXJsLCBwYXlsb2FkLCBvcHRzKSB7XG4gIFhockRyaXZlci5jYWxsKHRoaXMsIG1ldGhvZCwgdXJsLCBwYXlsb2FkLCBvcHRzKTtcbn1cblxuaW5oZXJpdHMoWEhSQ29yc09iamVjdCwgWGhyRHJpdmVyKTtcblxuWEhSQ29yc09iamVjdC5lbmFibGVkID0gWGhyRHJpdmVyLmVuYWJsZWQgJiYgWGhyRHJpdmVyLnN1cHBvcnRzQ09SUztcblxubW9kdWxlLmV4cG9ydHMgPSBYSFJDb3JzT2JqZWN0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci94aHItY29ycy5qc1xuLy8gbW9kdWxlIGlkID0gMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, global) {\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(0)\n  , eventUtils = __webpack_require__(7)\n  , browser = __webpack_require__(11)\n  , urlUtils = __webpack_require__(5)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:sender:xdr');\n}\n\n// References:\n//   http://ajaxian.com/archives/100-line-ajax-wrapper\n//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx\n\nfunction XDRObject(method, url, payload) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function() {\n    self._start(method, url, payload);\n  }, 0);\n}\n\ninherits(XDRObject, EventEmitter);\n\nXDRObject.prototype._start = function(method, url, payload) {\n  debug('_start');\n  var self = this;\n  var xdr = new global.XDomainRequest();\n  // IE caches even POSTs\n  url = urlUtils.addQuery(url, 't=' + (+new Date()));\n\n  xdr.onerror = function() {\n    debug('onerror');\n    self._error();\n  };\n  xdr.ontimeout = function() {\n    debug('ontimeout');\n    self._error();\n  };\n  xdr.onprogress = function() {\n    debug('progress', xdr.responseText);\n    self.emit('chunk', 200, xdr.responseText);\n  };\n  xdr.onload = function() {\n    debug('load');\n    self.emit('finish', 200, xdr.responseText);\n    self._cleanup(false);\n  };\n  this.xdr = xdr;\n  this.unloadRef = eventUtils.unloadAdd(function() {\n    self._cleanup(true);\n  });\n  try {\n    // Fails with AccessDenied if port number is bogus\n    this.xdr.open(method, url);\n    if (this.timeout) {\n      this.xdr.timeout = this.timeout;\n    }\n    this.xdr.send(payload);\n  } catch (x) {\n    this._error();\n  }\n};\n\nXDRObject.prototype._error = function() {\n  this.emit('finish', 0, '');\n  this._cleanup(false);\n};\n\nXDRObject.prototype._cleanup = function(abort) {\n  debug('cleanup', abort);\n  if (!this.xdr) {\n    return;\n  }\n  this.removeAllListeners();\n  eventUtils.unloadDel(this.unloadRef);\n\n  this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;\n  if (abort) {\n    try {\n      this.xdr.abort();\n    } catch (x) {}\n  }\n  this.unloadRef = this.xdr = null;\n};\n\nXDRObject.prototype.close = function() {\n  debug('close');\n  this._cleanup(true);\n};\n\n// IE 8/9 if the request target uses the same scheme - #79\nXDRObject.enabled = !!(global.XDomainRequest && browser.hasDomain());\n\nmodule.exports = XDRObject;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci94ZHIuanM/MDY0NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoidURBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIxNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIGV2ZW50VXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy9ldmVudCcpXG4gICwgYnJvd3NlciA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2Jyb3dzZXInKVxuICAsIHVybFV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvdXJsJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnNlbmRlcjp4ZHInKTtcbn1cblxuLy8gUmVmZXJlbmNlczpcbi8vICAgaHR0cDovL2FqYXhpYW4uY29tL2FyY2hpdmVzLzEwMC1saW5lLWFqYXgtd3JhcHBlclxuLy8gICBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvY2MyODgwNjAodj1WUy44NSkuYXNweFxuXG5mdW5jdGlvbiBYRFJPYmplY3QobWV0aG9kLCB1cmwsIHBheWxvYWQpIHtcbiAgZGVidWcobWV0aG9kLCB1cmwpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgc2VsZi5fc3RhcnQobWV0aG9kLCB1cmwsIHBheWxvYWQpO1xuICB9LCAwKTtcbn1cblxuaW5oZXJpdHMoWERST2JqZWN0LCBFdmVudEVtaXR0ZXIpO1xuXG5YRFJPYmplY3QucHJvdG90eXBlLl9zdGFydCA9IGZ1bmN0aW9uKG1ldGhvZCwgdXJsLCBwYXlsb2FkKSB7XG4gIGRlYnVnKCdfc3RhcnQnKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgeGRyID0gbmV3IGdsb2JhbC5YRG9tYWluUmVxdWVzdCgpO1xuICAvLyBJRSBjYWNoZXMgZXZlbiBQT1NUc1xuICB1cmwgPSB1cmxVdGlscy5hZGRRdWVyeSh1cmwsICd0PScgKyAoK25ldyBEYXRlKCkpKTtcblxuICB4ZHIub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbmVycm9yJyk7XG4gICAgc2VsZi5fZXJyb3IoKTtcbiAgfTtcbiAgeGRyLm9udGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbnRpbWVvdXQnKTtcbiAgICBzZWxmLl9lcnJvcigpO1xuICB9O1xuICB4ZHIub25wcm9ncmVzcyA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdwcm9ncmVzcycsIHhkci5yZXNwb25zZVRleHQpO1xuICAgIHNlbGYuZW1pdCgnY2h1bmsnLCAyMDAsIHhkci5yZXNwb25zZVRleHQpO1xuICB9O1xuICB4ZHIub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ2xvYWQnKTtcbiAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIDIwMCwgeGRyLnJlc3BvbnNlVGV4dCk7XG4gICAgc2VsZi5fY2xlYW51cChmYWxzZSk7XG4gIH07XG4gIHRoaXMueGRyID0geGRyO1xuICB0aGlzLnVubG9hZFJlZiA9IGV2ZW50VXRpbHMudW5sb2FkQWRkKGZ1bmN0aW9uKCkge1xuICAgIHNlbGYuX2NsZWFudXAodHJ1ZSk7XG4gIH0pO1xuICB0cnkge1xuICAgIC8vIEZhaWxzIHdpdGggQWNjZXNzRGVuaWVkIGlmIHBvcnQgbnVtYmVyIGlzIGJvZ3VzXG4gICAgdGhpcy54ZHIub3BlbihtZXRob2QsIHVybCk7XG4gICAgaWYgKHRoaXMudGltZW91dCkge1xuICAgICAgdGhpcy54ZHIudGltZW91dCA9IHRoaXMudGltZW91dDtcbiAgICB9XG4gICAgdGhpcy54ZHIuc2VuZChwYXlsb2FkKTtcbiAgfSBjYXRjaCAoeCkge1xuICAgIHRoaXMuX2Vycm9yKCk7XG4gIH1cbn07XG5cblhEUk9iamVjdC5wcm90b3R5cGUuX2Vycm9yID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuZW1pdCgnZmluaXNoJywgMCwgJycpO1xuICB0aGlzLl9jbGVhbnVwKGZhbHNlKTtcbn07XG5cblhEUk9iamVjdC5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbihhYm9ydCkge1xuICBkZWJ1ZygnY2xlYW51cCcsIGFib3J0KTtcbiAgaWYgKCF0aGlzLnhkcikge1xuICAgIHJldHVybjtcbiAgfVxuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICBldmVudFV0aWxzLnVubG9hZERlbCh0aGlzLnVubG9hZFJlZik7XG5cbiAgdGhpcy54ZHIub250aW1lb3V0ID0gdGhpcy54ZHIub25lcnJvciA9IHRoaXMueGRyLm9ucHJvZ3Jlc3MgPSB0aGlzLnhkci5vbmxvYWQgPSBudWxsO1xuICBpZiAoYWJvcnQpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy54ZHIuYWJvcnQoKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9XG4gIHRoaXMudW5sb2FkUmVmID0gdGhpcy54ZHIgPSBudWxsO1xufTtcblxuWERST2JqZWN0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnY2xvc2UnKTtcbiAgdGhpcy5fY2xlYW51cCh0cnVlKTtcbn07XG5cbi8vIElFIDgvOSBpZiB0aGUgcmVxdWVzdCB0YXJnZXQgdXNlcyB0aGUgc2FtZSBzY2hlbWUgLSAjNzlcblhEUk9iamVjdC5lbmFibGVkID0gISEoZ2xvYmFsLlhEb21haW5SZXF1ZXN0ICYmIGJyb3dzZXIuaGFzRG9tYWluKCkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFhEUk9iamVjdDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9zZW5kZXIveGRyLmpzXG4vLyBtb2R1bGUgaWQgPSAxNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar inherits = __webpack_require__(0)\n  , IframeTransport = __webpack_require__(26)\n  , objectUtils = __webpack_require__(17)\n  ;\n\nmodule.exports = function(transport) {\n\n  function IframeWrapTransport(transUrl, baseUrl) {\n    IframeTransport.call(this, transport.transportName, transUrl, baseUrl);\n  }\n\n  inherits(IframeWrapTransport, IframeTransport);\n\n  IframeWrapTransport.enabled = function(url, info) {\n    if (!global.document) {\n      return false;\n    }\n\n    var iframeInfo = objectUtils.extend({}, info);\n    iframeInfo.sameOrigin = true;\n    return transport.enabled(iframeInfo) && IframeTransport.enabled();\n  };\n\n  IframeWrapTransport.transportName = 'iframe-' + transport.transportName;\n  IframeWrapTransport.needBody = true;\n  IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)\n\n  IframeWrapTransport.facadeTransport = transport;\n\n  return IframeWrapTransport;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2xpYi9pZnJhbWUtd3JhcC5qcz9hZjdkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI4Q0FBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EseUZBQXlGOztBQUV6Rjs7QUFFQTtBQUNBIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgSWZyYW1lVHJhbnNwb3J0ID0gcmVxdWlyZSgnLi4vaWZyYW1lJylcbiAgLCBvYmplY3RVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL29iamVjdCcpXG4gIDtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih0cmFuc3BvcnQpIHtcblxuICBmdW5jdGlvbiBJZnJhbWVXcmFwVHJhbnNwb3J0KHRyYW5zVXJsLCBiYXNlVXJsKSB7XG4gICAgSWZyYW1lVHJhbnNwb3J0LmNhbGwodGhpcywgdHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUsIHRyYW5zVXJsLCBiYXNlVXJsKTtcbiAgfVxuXG4gIGluaGVyaXRzKElmcmFtZVdyYXBUcmFuc3BvcnQsIElmcmFtZVRyYW5zcG9ydCk7XG5cbiAgSWZyYW1lV3JhcFRyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24odXJsLCBpbmZvKSB7XG4gICAgaWYgKCFnbG9iYWwuZG9jdW1lbnQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgaWZyYW1lSW5mbyA9IG9iamVjdFV0aWxzLmV4dGVuZCh7fSwgaW5mbyk7XG4gICAgaWZyYW1lSW5mby5zYW1lT3JpZ2luID0gdHJ1ZTtcbiAgICByZXR1cm4gdHJhbnNwb3J0LmVuYWJsZWQoaWZyYW1lSW5mbykgJiYgSWZyYW1lVHJhbnNwb3J0LmVuYWJsZWQoKTtcbiAgfTtcblxuICBJZnJhbWVXcmFwVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAnaWZyYW1lLScgKyB0cmFuc3BvcnQudHJhbnNwb3J0TmFtZTtcbiAgSWZyYW1lV3JhcFRyYW5zcG9ydC5uZWVkQm9keSA9IHRydWU7XG4gIElmcmFtZVdyYXBUcmFuc3BvcnQucm91bmRUcmlwcyA9IElmcmFtZVRyYW5zcG9ydC5yb3VuZFRyaXBzICsgdHJhbnNwb3J0LnJvdW5kVHJpcHMgLSAxOyAvLyBodG1sLCBqYXZhc2NyaXB0ICgyKSArIHRyYW5zcG9ydCAtIG5vIENPUlMgKDEpXG5cbiAgSWZyYW1lV3JhcFRyYW5zcG9ydC5mYWNhZGVUcmFuc3BvcnQgPSB0cmFuc3BvcnQ7XG5cbiAgcmV0dXJuIElmcmFtZVdyYXBUcmFuc3BvcnQ7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2xpYi9pZnJhbWUtd3JhcC5qc1xuLy8gbW9kdWxlIGlkID0gMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n  isObject: function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  }\n\n, extend: function(obj) {\n    if (!this.isObject(obj)) {\n      return obj;\n    }\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n      for (prop in source) {\n        if (Object.prototype.hasOwnProperty.call(source, prop)) {\n          obj[prop] = source[prop];\n        }\n      }\n    }\n    return obj;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvb2JqZWN0LmpzPzg3OGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFlBQVk7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc09iamVjdDogZnVuY3Rpb24ob2JqKSB7XG4gICAgdmFyIHR5cGUgPSB0eXBlb2Ygb2JqO1xuICAgIHJldHVybiB0eXBlID09PSAnZnVuY3Rpb24nIHx8IHR5cGUgPT09ICdvYmplY3QnICYmICEhb2JqO1xuICB9XG5cbiwgZXh0ZW5kOiBmdW5jdGlvbihvYmopIHtcbiAgICBpZiAoIXRoaXMuaXNPYmplY3Qob2JqKSkge1xuICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgdmFyIHNvdXJjZSwgcHJvcDtcbiAgICBmb3IgKHZhciBpID0gMSwgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG4gICAgICBmb3IgKHByb3AgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBwcm9wKSkge1xuICAgICAgICAgIG9ialtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqO1xuICB9XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSAxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction Event(eventType) {\n  this.type = eventType;\n}\n\nEvent.prototype.initEvent = function(eventType, canBubble, cancelable) {\n  this.type = eventType;\n  this.bubbles = canBubble;\n  this.cancelable = cancelable;\n  this.timeStamp = +new Date();\n  return this;\n};\n\nEvent.prototype.stopPropagation = function() {};\nEvent.prototype.preventDefault  = function() {};\n\nEvent.CAPTURING_PHASE = 1;\nEvent.AT_TARGET       = 2;\nEvent.BUBBLING_PHASE  = 3;\n\nmodule.exports = Event;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvZXZlbnQvZXZlbnQuanM/YWEwZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIEV2ZW50KGV2ZW50VHlwZSkge1xuICB0aGlzLnR5cGUgPSBldmVudFR5cGU7XG59XG5cbkV2ZW50LnByb3RvdHlwZS5pbml0RXZlbnQgPSBmdW5jdGlvbihldmVudFR5cGUsIGNhbkJ1YmJsZSwgY2FuY2VsYWJsZSkge1xuICB0aGlzLnR5cGUgPSBldmVudFR5cGU7XG4gIHRoaXMuYnViYmxlcyA9IGNhbkJ1YmJsZTtcbiAgdGhpcy5jYW5jZWxhYmxlID0gY2FuY2VsYWJsZTtcbiAgdGhpcy50aW1lU3RhbXAgPSArbmV3IERhdGUoKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudC5wcm90b3R5cGUuc3RvcFByb3BhZ2F0aW9uID0gZnVuY3Rpb24oKSB7fTtcbkV2ZW50LnByb3RvdHlwZS5wcmV2ZW50RGVmYXVsdCAgPSBmdW5jdGlvbigpIHt9O1xuXG5FdmVudC5DQVBUVVJJTkdfUEhBU0UgPSAxO1xuRXZlbnQuQVRfVEFSR0VUICAgICAgID0gMjtcbkV2ZW50LkJVQkJMSU5HX1BIQVNFICA9IDM7XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9ldmVudC9ldmVudC5qc1xuLy8gbW9kdWxlIGlkID0gMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar required = __webpack_require__(39)\n  , qs = __webpack_require__(40)\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @api public\n */\nfunction lolcation(loc) {\n  var location = global && global.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new URL(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new URL(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @api private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @api private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @api public\n */\nfunction URL(address, location, parser) {\n  if (!(this instanceof URL)) {\n    return new URL(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL}\n * @api public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String}\n * @api public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nURL.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nURL.extractProtocol = extractProtocol;\nURL.location = lolcation;\nURL.qs = qs;\n\nmodule.exports = URL;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvdXJsLXBhcnNlL2luZGV4LmpzP2FiZDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjhDQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxjQUFjOztBQUVkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EseURBQXlEO0FBQ3pELEdBQUc7QUFDSCxzQ0FBc0M7QUFDdEM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsT0FBTztBQUNyQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsY0FBYztBQUN6QixXQUFXLGlCQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEseUJBQXlCO0FBQ2pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsaUJBQWlCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLGtCQUFrQjtBQUNuQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciByZXF1aXJlZCA9IHJlcXVpcmUoJ3JlcXVpcmVzLXBvcnQnKVxuICAsIHFzID0gcmVxdWlyZSgncXVlcnlzdHJpbmdpZnknKVxuICAsIHByb3RvY29scmUgPSAvXihbYS16XVthLXowLTkuKy1dKjopPyhcXC9cXC8pPyhbXFxTXFxzXSopL2lcbiAgLCBzbGFzaGVzID0gL15bQS1aYS16XVtBLVphLXowLTkrLS5dKjpcXC9cXC8vO1xuXG4vKipcbiAqIFRoZXNlIGFyZSB0aGUgcGFyc2UgcnVsZXMgZm9yIHRoZSBVUkwgcGFyc2VyLCBpdCBpbmZvcm1zIHRoZSBwYXJzZXJcbiAqIGFib3V0OlxuICpcbiAqIDAuIFRoZSBjaGFyIGl0IE5lZWRzIHRvIHBhcnNlLCBpZiBpdCdzIGEgc3RyaW5nIGl0IHNob3VsZCBiZSBkb25lIHVzaW5nXG4gKiAgICBpbmRleE9mLCBSZWdFeHAgdXNpbmcgZXhlYyBhbmQgTmFOIG1lYW5zIHNldCBhcyBjdXJyZW50IHZhbHVlLlxuICogMS4gVGhlIHByb3BlcnR5IHdlIHNob3VsZCBzZXQgd2hlbiBwYXJzaW5nIHRoaXMgdmFsdWUuXG4gKiAyLiBJbmRpY2F0aW9uIGlmIGl0J3MgYmFja3dhcmRzIG9yIGZvcndhcmQgcGFyc2luZywgd2hlbiBzZXQgYXMgbnVtYmVyIGl0J3NcbiAqICAgIHRoZSB2YWx1ZSBvZiBleHRyYSBjaGFycyB0aGF0IHNob3VsZCBiZSBzcGxpdCBvZmYuXG4gKiAzLiBJbmhlcml0IGZyb20gbG9jYXRpb24gaWYgbm9uIGV4aXN0aW5nIGluIHRoZSBwYXJzZXIuXG4gKiA0LiBgdG9Mb3dlckNhc2VgIHRoZSByZXN1bHRpbmcgdmFsdWUuXG4gKi9cbnZhciBydWxlcyA9IFtcbiAgWycjJywgJ2hhc2gnXSwgICAgICAgICAgICAgICAgICAgICAgICAvLyBFeHRyYWN0IGZyb20gdGhlIGJhY2suXG4gIFsnPycsICdxdWVyeSddLCAgICAgICAgICAgICAgICAgICAgICAgLy8gRXh0cmFjdCBmcm9tIHRoZSBiYWNrLlxuICBbJy8nLCAncGF0aG5hbWUnXSwgICAgICAgICAgICAgICAgICAgIC8vIEV4dHJhY3QgZnJvbSB0aGUgYmFjay5cbiAgWydAJywgJ2F1dGgnLCAxXSwgICAgICAgICAgICAgICAgICAgICAvLyBFeHRyYWN0IGZyb20gdGhlIGZyb250LlxuICBbTmFOLCAnaG9zdCcsIHVuZGVmaW5lZCwgMSwgMV0sICAgICAgIC8vIFNldCBsZWZ0IG92ZXIgdmFsdWUuXG4gIFsvOihcXGQrKSQvLCAncG9ydCcsIHVuZGVmaW5lZCwgMV0sICAgIC8vIFJlZ0V4cCB0aGUgYmFjay5cbiAgW05hTiwgJ2hvc3RuYW1lJywgdW5kZWZpbmVkLCAxLCAxXSAgICAvLyBTZXQgbGVmdCBvdmVyLlxuXTtcblxuLyoqXG4gKiBUaGVzZSBwcm9wZXJ0aWVzIHNob3VsZCBub3QgYmUgY29waWVkIG9yIGluaGVyaXRlZCBmcm9tLiBUaGlzIGlzIG9ubHkgbmVlZGVkXG4gKiBmb3IgYWxsIG5vbiBibG9iIFVSTCdzIGFzIGEgYmxvYiBVUkwgZG9lcyBub3QgaW5jbHVkZSBhIGhhc2gsIG9ubHkgdGhlXG4gKiBvcmlnaW4uXG4gKlxuICogQHR5cGUge09iamVjdH1cbiAqIEBwcml2YXRlXG4gKi9cbnZhciBpZ25vcmUgPSB7IGhhc2g6IDEsIHF1ZXJ5OiAxIH07XG5cbi8qKlxuICogVGhlIGxvY2F0aW9uIG9iamVjdCBkaWZmZXJzIHdoZW4geW91ciBjb2RlIGlzIGxvYWRlZCB0aHJvdWdoIGEgbm9ybWFsIHBhZ2UsXG4gKiBXb3JrZXIgb3IgdGhyb3VnaCBhIHdvcmtlciB1c2luZyBhIGJsb2IuIEFuZCB3aXRoIHRoZSBibG9iYmxlIGJlZ2lucyB0aGVcbiAqIHRyb3VibGUgYXMgdGhlIGxvY2F0aW9uIG9iamVjdCB3aWxsIGNvbnRhaW4gdGhlIFVSTCBvZiB0aGUgYmxvYiwgbm90IHRoZVxuICogbG9jYXRpb24gb2YgdGhlIHBhZ2Ugd2hlcmUgb3VyIGNvZGUgaXMgbG9hZGVkIGluLiBUaGUgYWN0dWFsIG9yaWdpbiBpc1xuICogZW5jb2RlZCBpbiB0aGUgYHBhdGhuYW1lYCBzbyB3ZSBjYW4gdGhhbmtmdWxseSBnZW5lcmF0ZSBhIGdvb2QgXCJkZWZhdWx0XCJcbiAqIGxvY2F0aW9uIGZyb20gaXQgc28gd2UgY2FuIGdlbmVyYXRlIHByb3BlciByZWxhdGl2ZSBVUkwncyBhZ2Fpbi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IGxvYyBPcHRpb25hbCBkZWZhdWx0IGxvY2F0aW9uIG9iamVjdC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IGxvbGNhdGlvbiBvYmplY3QuXG4gKiBAYXBpIHB1YmxpY1xuICovXG5mdW5jdGlvbiBsb2xjYXRpb24obG9jKSB7XG4gIHZhciBsb2NhdGlvbiA9IGdsb2JhbCAmJiBnbG9iYWwubG9jYXRpb24gfHwge307XG4gIGxvYyA9IGxvYyB8fCBsb2NhdGlvbjtcblxuICB2YXIgZmluYWxkZXN0aW5hdGlvbiA9IHt9XG4gICAgLCB0eXBlID0gdHlwZW9mIGxvY1xuICAgICwga2V5O1xuXG4gIGlmICgnYmxvYjonID09PSBsb2MucHJvdG9jb2wpIHtcbiAgICBmaW5hbGRlc3RpbmF0aW9uID0gbmV3IFVSTCh1bmVzY2FwZShsb2MucGF0aG5hbWUpLCB7fSk7XG4gIH0gZWxzZSBpZiAoJ3N0cmluZycgPT09IHR5cGUpIHtcbiAgICBmaW5hbGRlc3RpbmF0aW9uID0gbmV3IFVSTChsb2MsIHt9KTtcbiAgICBmb3IgKGtleSBpbiBpZ25vcmUpIGRlbGV0ZSBmaW5hbGRlc3RpbmF0aW9uW2tleV07XG4gIH0gZWxzZSBpZiAoJ29iamVjdCcgPT09IHR5cGUpIHtcbiAgICBmb3IgKGtleSBpbiBsb2MpIHtcbiAgICAgIGlmIChrZXkgaW4gaWdub3JlKSBjb250aW51ZTtcbiAgICAgIGZpbmFsZGVzdGluYXRpb25ba2V5XSA9IGxvY1trZXldO1xuICAgIH1cblxuICAgIGlmIChmaW5hbGRlc3RpbmF0aW9uLnNsYXNoZXMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZmluYWxkZXN0aW5hdGlvbi5zbGFzaGVzID0gc2xhc2hlcy50ZXN0KGxvYy5ocmVmKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmluYWxkZXN0aW5hdGlvbjtcbn1cblxuLyoqXG4gKiBAdHlwZWRlZiBQcm90b2NvbEV4dHJhY3RcbiAqIEB0eXBlIE9iamVjdFxuICogQHByb3BlcnR5IHtTdHJpbmd9IHByb3RvY29sIFByb3RvY29sIG1hdGNoZWQgaW4gdGhlIFVSTCwgaW4gbG93ZXJjYXNlLlxuICogQHByb3BlcnR5IHtCb29sZWFufSBzbGFzaGVzIGB0cnVlYCBpZiBwcm90b2NvbCBpcyBmb2xsb3dlZCBieSBcIi8vXCIsIGVsc2UgYGZhbHNlYC5cbiAqIEBwcm9wZXJ0eSB7U3RyaW5nfSByZXN0IFJlc3Qgb2YgdGhlIFVSTCB0aGF0IGlzIG5vdCBwYXJ0IG9mIHRoZSBwcm90b2NvbC5cbiAqL1xuXG4vKipcbiAqIEV4dHJhY3QgcHJvdG9jb2wgaW5mb3JtYXRpb24gZnJvbSBhIFVSTCB3aXRoL3dpdGhvdXQgZG91YmxlIHNsYXNoIChcIi8vXCIpLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBhZGRyZXNzIFVSTCB3ZSB3YW50IHRvIGV4dHJhY3QgZnJvbS5cbiAqIEByZXR1cm4ge1Byb3RvY29sRXh0cmFjdH0gRXh0cmFjdGVkIGluZm9ybWF0aW9uLlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RQcm90b2NvbChhZGRyZXNzKSB7XG4gIHZhciBtYXRjaCA9IHByb3RvY29scmUuZXhlYyhhZGRyZXNzKTtcblxuICByZXR1cm4ge1xuICAgIHByb3RvY29sOiBtYXRjaFsxXSA/IG1hdGNoWzFdLnRvTG93ZXJDYXNlKCkgOiAnJyxcbiAgICBzbGFzaGVzOiAhIW1hdGNoWzJdLFxuICAgIHJlc3Q6IG1hdGNoWzNdXG4gIH07XG59XG5cbi8qKlxuICogUmVzb2x2ZSBhIHJlbGF0aXZlIFVSTCBwYXRobmFtZSBhZ2FpbnN0IGEgYmFzZSBVUkwgcGF0aG5hbWUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHJlbGF0aXZlIFBhdGhuYW1lIG9mIHRoZSByZWxhdGl2ZSBVUkwuXG4gKiBAcGFyYW0ge1N0cmluZ30gYmFzZSBQYXRobmFtZSBvZiB0aGUgYmFzZSBVUkwuXG4gKiBAcmV0dXJuIHtTdHJpbmd9IFJlc29sdmVkIHBhdGhuYW1lLlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmUocmVsYXRpdmUsIGJhc2UpIHtcbiAgdmFyIHBhdGggPSAoYmFzZSB8fCAnLycpLnNwbGl0KCcvJykuc2xpY2UoMCwgLTEpLmNvbmNhdChyZWxhdGl2ZS5zcGxpdCgnLycpKVxuICAgICwgaSA9IHBhdGgubGVuZ3RoXG4gICAgLCBsYXN0ID0gcGF0aFtpIC0gMV1cbiAgICAsIHVuc2hpZnQgPSBmYWxzZVxuICAgICwgdXAgPSAwO1xuXG4gIHdoaWxlIChpLS0pIHtcbiAgICBpZiAocGF0aFtpXSA9PT0gJy4nKSB7XG4gICAgICBwYXRoLnNwbGljZShpLCAxKTtcbiAgICB9IGVsc2UgaWYgKHBhdGhbaV0gPT09ICcuLicpIHtcbiAgICAgIHBhdGguc3BsaWNlKGksIDEpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBpZiAoaSA9PT0gMCkgdW5zaGlmdCA9IHRydWU7XG4gICAgICBwYXRoLnNwbGljZShpLCAxKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKHVuc2hpZnQpIHBhdGgudW5zaGlmdCgnJyk7XG4gIGlmIChsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJykgcGF0aC5wdXNoKCcnKTtcblxuICByZXR1cm4gcGF0aC5qb2luKCcvJyk7XG59XG5cbi8qKlxuICogVGhlIGFjdHVhbCBVUkwgaW5zdGFuY2UuIEluc3RlYWQgb2YgcmV0dXJuaW5nIGFuIG9iamVjdCB3ZSd2ZSBvcHRlZC1pbiB0b1xuICogY3JlYXRlIGFuIGFjdHVhbCBjb25zdHJ1Y3RvciBhcyBpdCdzIG11Y2ggbW9yZSBtZW1vcnkgZWZmaWNpZW50IGFuZFxuICogZmFzdGVyIGFuZCBpdCBwbGVhc2VzIG15IE9DRC5cbiAqXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7U3RyaW5nfSBhZGRyZXNzIFVSTCB3ZSB3YW50IHRvIHBhcnNlLlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBsb2NhdGlvbiBMb2NhdGlvbiBkZWZhdWx0cyBmb3IgcmVsYXRpdmUgcGF0aHMuXG4gKiBAcGFyYW0ge0Jvb2xlYW58RnVuY3Rpb259IHBhcnNlciBQYXJzZXIgZm9yIHRoZSBxdWVyeSBzdHJpbmcuXG4gKiBAYXBpIHB1YmxpY1xuICovXG5mdW5jdGlvbiBVUkwoYWRkcmVzcywgbG9jYXRpb24sIHBhcnNlcikge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgVVJMKSkge1xuICAgIHJldHVybiBuZXcgVVJMKGFkZHJlc3MsIGxvY2F0aW9uLCBwYXJzZXIpO1xuICB9XG5cbiAgdmFyIHJlbGF0aXZlLCBleHRyYWN0ZWQsIHBhcnNlLCBpbnN0cnVjdGlvbiwgaW5kZXgsIGtleVxuICAgICwgaW5zdHJ1Y3Rpb25zID0gcnVsZXMuc2xpY2UoKVxuICAgICwgdHlwZSA9IHR5cGVvZiBsb2NhdGlvblxuICAgICwgdXJsID0gdGhpc1xuICAgICwgaSA9IDA7XG5cbiAgLy9cbiAgLy8gVGhlIGZvbGxvd2luZyBpZiBzdGF0ZW1lbnRzIGFsbG93cyB0aGlzIG1vZHVsZSB0d28gaGF2ZSBjb21wYXRpYmlsaXR5IHdpdGhcbiAgLy8gMiBkaWZmZXJlbnQgQVBJOlxuICAvL1xuICAvLyAxLiBOb2RlLmpzJ3MgYHVybC5wYXJzZWAgYXBpIHdoaWNoIGFjY2VwdHMgYSBVUkwsIGJvb2xlYW4gYXMgYXJndW1lbnRzXG4gIC8vICAgIHdoZXJlIHRoZSBib29sZWFuIGluZGljYXRlcyB0aGF0IHRoZSBxdWVyeSBzdHJpbmcgc2hvdWxkIGFsc28gYmUgcGFyc2VkLlxuICAvL1xuICAvLyAyLiBUaGUgYFVSTGAgaW50ZXJmYWNlIG9mIHRoZSBicm93c2VyIHdoaWNoIGFjY2VwdHMgYSBVUkwsIG9iamVjdCBhc1xuICAvLyAgICBhcmd1bWVudHMuIFRoZSBzdXBwbGllZCBvYmplY3Qgd2lsbCBiZSB1c2VkIGFzIGRlZmF1bHQgdmFsdWVzIC8gZmFsbC1iYWNrXG4gIC8vICAgIGZvciByZWxhdGl2ZSBwYXRocy5cbiAgLy9cbiAgaWYgKCdvYmplY3QnICE9PSB0eXBlICYmICdzdHJpbmcnICE9PSB0eXBlKSB7XG4gICAgcGFyc2VyID0gbG9jYXRpb247XG4gICAgbG9jYXRpb24gPSBudWxsO1xuICB9XG5cbiAgaWYgKHBhcnNlciAmJiAnZnVuY3Rpb24nICE9PSB0eXBlb2YgcGFyc2VyKSBwYXJzZXIgPSBxcy5wYXJzZTtcblxuICBsb2NhdGlvbiA9IGxvbGNhdGlvbihsb2NhdGlvbik7XG5cbiAgLy9cbiAgLy8gRXh0cmFjdCBwcm90b2NvbCBpbmZvcm1hdGlvbiBiZWZvcmUgcnVubmluZyB0aGUgaW5zdHJ1Y3Rpb25zLlxuICAvL1xuICBleHRyYWN0ZWQgPSBleHRyYWN0UHJvdG9jb2woYWRkcmVzcyB8fCAnJyk7XG4gIHJlbGF0aXZlID0gIWV4dHJhY3RlZC5wcm90b2NvbCAmJiAhZXh0cmFjdGVkLnNsYXNoZXM7XG4gIHVybC5zbGFzaGVzID0gZXh0cmFjdGVkLnNsYXNoZXMgfHwgcmVsYXRpdmUgJiYgbG9jYXRpb24uc2xhc2hlcztcbiAgdXJsLnByb3RvY29sID0gZXh0cmFjdGVkLnByb3RvY29sIHx8IGxvY2F0aW9uLnByb3RvY29sIHx8ICcnO1xuICBhZGRyZXNzID0gZXh0cmFjdGVkLnJlc3Q7XG5cbiAgLy9cbiAgLy8gV2hlbiB0aGUgYXV0aG9yaXR5IGNvbXBvbmVudCBpcyBhYnNlbnQgdGhlIFVSTCBzdGFydHMgd2l0aCBhIHBhdGhcbiAgLy8gY29tcG9uZW50LlxuICAvL1xuICBpZiAoIWV4dHJhY3RlZC5zbGFzaGVzKSBpbnN0cnVjdGlvbnNbMl0gPSBbLyguKikvLCAncGF0aG5hbWUnXTtcblxuICBmb3IgKDsgaSA8IGluc3RydWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgIGluc3RydWN0aW9uID0gaW5zdHJ1Y3Rpb25zW2ldO1xuICAgIHBhcnNlID0gaW5zdHJ1Y3Rpb25bMF07XG4gICAga2V5ID0gaW5zdHJ1Y3Rpb25bMV07XG5cbiAgICBpZiAocGFyc2UgIT09IHBhcnNlKSB7XG4gICAgICB1cmxba2V5XSA9IGFkZHJlc3M7XG4gICAgfSBlbHNlIGlmICgnc3RyaW5nJyA9PT0gdHlwZW9mIHBhcnNlKSB7XG4gICAgICBpZiAofihpbmRleCA9IGFkZHJlc3MuaW5kZXhPZihwYXJzZSkpKSB7XG4gICAgICAgIGlmICgnbnVtYmVyJyA9PT0gdHlwZW9mIGluc3RydWN0aW9uWzJdKSB7XG4gICAgICAgICAgdXJsW2tleV0gPSBhZGRyZXNzLnNsaWNlKDAsIGluZGV4KTtcbiAgICAgICAgICBhZGRyZXNzID0gYWRkcmVzcy5zbGljZShpbmRleCArIGluc3RydWN0aW9uWzJdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB1cmxba2V5XSA9IGFkZHJlc3Muc2xpY2UoaW5kZXgpO1xuICAgICAgICAgIGFkZHJlc3MgPSBhZGRyZXNzLnNsaWNlKDAsIGluZGV4KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoKGluZGV4ID0gcGFyc2UuZXhlYyhhZGRyZXNzKSkpIHtcbiAgICAgIHVybFtrZXldID0gaW5kZXhbMV07XG4gICAgICBhZGRyZXNzID0gYWRkcmVzcy5zbGljZSgwLCBpbmRleC5pbmRleCk7XG4gICAgfVxuXG4gICAgdXJsW2tleV0gPSB1cmxba2V5XSB8fCAoXG4gICAgICByZWxhdGl2ZSAmJiBpbnN0cnVjdGlvblszXSA/IGxvY2F0aW9uW2tleV0gfHwgJycgOiAnJ1xuICAgICk7XG5cbiAgICAvL1xuICAgIC8vIEhvc3RuYW1lLCBob3N0IGFuZCBwcm90b2NvbCBzaG91bGQgYmUgbG93ZXJjYXNlZCBzbyB0aGV5IGNhbiBiZSB1c2VkIHRvXG4gICAgLy8gY3JlYXRlIGEgcHJvcGVyIGBvcmlnaW5gLlxuICAgIC8vXG4gICAgaWYgKGluc3RydWN0aW9uWzRdKSB1cmxba2V5XSA9IHVybFtrZXldLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICAvL1xuICAvLyBBbHNvIHBhcnNlIHRoZSBzdXBwbGllZCBxdWVyeSBzdHJpbmcgaW4gdG8gYW4gb2JqZWN0LiBJZiB3ZSdyZSBzdXBwbGllZFxuICAvLyB3aXRoIGEgY3VzdG9tIHBhcnNlciBhcyBmdW5jdGlvbiB1c2UgdGhhdCBpbnN0ZWFkIG9mIHRoZSBkZWZhdWx0IGJ1aWxkLWluXG4gIC8vIHBhcnNlci5cbiAgLy9cbiAgaWYgKHBhcnNlcikgdXJsLnF1ZXJ5ID0gcGFyc2VyKHVybC5xdWVyeSk7XG5cbiAgLy9cbiAgLy8gSWYgdGhlIFVSTCBpcyByZWxhdGl2ZSwgcmVzb2x2ZSB0aGUgcGF0aG5hbWUgYWdhaW5zdCB0aGUgYmFzZSBVUkwuXG4gIC8vXG4gIGlmIChcbiAgICAgIHJlbGF0aXZlXG4gICAgJiYgbG9jYXRpb24uc2xhc2hlc1xuICAgICYmIHVybC5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJ1xuICAgICYmICh1cmwucGF0aG5hbWUgIT09ICcnIHx8IGxvY2F0aW9uLnBhdGhuYW1lICE9PSAnJylcbiAgKSB7XG4gICAgdXJsLnBhdGhuYW1lID0gcmVzb2x2ZSh1cmwucGF0aG5hbWUsIGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfVxuXG4gIC8vXG4gIC8vIFdlIHNob3VsZCBub3QgYWRkIHBvcnQgbnVtYmVycyBpZiB0aGV5IGFyZSBhbHJlYWR5IHRoZSBkZWZhdWx0IHBvcnQgbnVtYmVyXG4gIC8vIGZvciBhIGdpdmVuIHByb3RvY29sLiBBcyB0aGUgaG9zdCBhbHNvIGNvbnRhaW5zIHRoZSBwb3J0IG51bWJlciB3ZSdyZSBnb2luZ1xuICAvLyBvdmVycmlkZSBpdCB3aXRoIHRoZSBob3N0bmFtZSB3aGljaCBjb250YWlucyBubyBwb3J0IG51bWJlci5cbiAgLy9cbiAgaWYgKCFyZXF1aXJlZCh1cmwucG9ydCwgdXJsLnByb3RvY29sKSkge1xuICAgIHVybC5ob3N0ID0gdXJsLmhvc3RuYW1lO1xuICAgIHVybC5wb3J0ID0gJyc7XG4gIH1cblxuICAvL1xuICAvLyBQYXJzZSBkb3duIHRoZSBgYXV0aGAgZm9yIHRoZSB1c2VybmFtZSBhbmQgcGFzc3dvcmQuXG4gIC8vXG4gIHVybC51c2VybmFtZSA9IHVybC5wYXNzd29yZCA9ICcnO1xuICBpZiAodXJsLmF1dGgpIHtcbiAgICBpbnN0cnVjdGlvbiA9IHVybC5hdXRoLnNwbGl0KCc6Jyk7XG4gICAgdXJsLnVzZXJuYW1lID0gaW5zdHJ1Y3Rpb25bMF0gfHwgJyc7XG4gICAgdXJsLnBhc3N3b3JkID0gaW5zdHJ1Y3Rpb25bMV0gfHwgJyc7XG4gIH1cblxuICB1cmwub3JpZ2luID0gdXJsLnByb3RvY29sICYmIHVybC5ob3N0ICYmIHVybC5wcm90b2NvbCAhPT0gJ2ZpbGU6J1xuICAgID8gdXJsLnByb3RvY29sICsnLy8nKyB1cmwuaG9zdFxuICAgIDogJ251bGwnO1xuXG4gIC8vXG4gIC8vIFRoZSBocmVmIGlzIGp1c3QgdGhlIGNvbXBpbGVkIHJlc3VsdC5cbiAgLy9cbiAgdXJsLmhyZWYgPSB1cmwudG9TdHJpbmcoKTtcbn1cblxuLyoqXG4gKiBUaGlzIGlzIGNvbnZlbmllbmNlIG1ldGhvZCBmb3IgY2hhbmdpbmcgcHJvcGVydGllcyBpbiB0aGUgVVJMIGluc3RhbmNlIHRvXG4gKiBpbnN1cmUgdGhhdCB0aGV5IGFsbCBwcm9wYWdhdGUgY29ycmVjdGx5LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXJ0ICAgICAgICAgIFByb3BlcnR5IHdlIG5lZWQgdG8gYWRqdXN0LlxuICogQHBhcmFtIHtNaXhlZH0gdmFsdWUgICAgICAgICAgVGhlIG5ld2x5IGFzc2lnbmVkIHZhbHVlLlxuICogQHBhcmFtIHtCb29sZWFufEZ1bmN0aW9ufSBmbiAgV2hlbiBzZXR0aW5nIHRoZSBxdWVyeSwgaXQgd2lsbCBiZSB0aGUgZnVuY3Rpb25cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZWQgdG8gcGFyc2UgdGhlIHF1ZXJ5LlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV2hlbiBzZXR0aW5nIHRoZSBwcm90b2NvbCwgZG91YmxlIHNsYXNoIHdpbGwgYmVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZWQgZnJvbSB0aGUgZmluYWwgdXJsIGlmIGl0IGlzIHRydWUuXG4gKiBAcmV0dXJucyB7VVJMfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gc2V0KHBhcnQsIHZhbHVlLCBmbikge1xuICB2YXIgdXJsID0gdGhpcztcblxuICBzd2l0Y2ggKHBhcnQpIHtcbiAgICBjYXNlICdxdWVyeSc6XG4gICAgICBpZiAoJ3N0cmluZycgPT09IHR5cGVvZiB2YWx1ZSAmJiB2YWx1ZS5sZW5ndGgpIHtcbiAgICAgICAgdmFsdWUgPSAoZm4gfHwgcXMucGFyc2UpKHZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgdXJsW3BhcnRdID0gdmFsdWU7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3BvcnQnOlxuICAgICAgdXJsW3BhcnRdID0gdmFsdWU7XG5cbiAgICAgIGlmICghcmVxdWlyZWQodmFsdWUsIHVybC5wcm90b2NvbCkpIHtcbiAgICAgICAgdXJsLmhvc3QgPSB1cmwuaG9zdG5hbWU7XG4gICAgICAgIHVybFtwYXJ0XSA9ICcnO1xuICAgICAgfSBlbHNlIGlmICh2YWx1ZSkge1xuICAgICAgICB1cmwuaG9zdCA9IHVybC5ob3N0bmFtZSArJzonKyB2YWx1ZTtcbiAgICAgIH1cblxuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdob3N0bmFtZSc6XG4gICAgICB1cmxbcGFydF0gPSB2YWx1ZTtcblxuICAgICAgaWYgKHVybC5wb3J0KSB2YWx1ZSArPSAnOicrIHVybC5wb3J0O1xuICAgICAgdXJsLmhvc3QgPSB2YWx1ZTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnaG9zdCc6XG4gICAgICB1cmxbcGFydF0gPSB2YWx1ZTtcblxuICAgICAgaWYgKC86XFxkKyQvLnRlc3QodmFsdWUpKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUuc3BsaXQoJzonKTtcbiAgICAgICAgdXJsLnBvcnQgPSB2YWx1ZS5wb3AoKTtcbiAgICAgICAgdXJsLmhvc3RuYW1lID0gdmFsdWUuam9pbignOicpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdXJsLmhvc3RuYW1lID0gdmFsdWU7XG4gICAgICAgIHVybC5wb3J0ID0gJyc7XG4gICAgICB9XG5cbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAncHJvdG9jb2wnOlxuICAgICAgdXJsLnByb3RvY29sID0gdmFsdWUudG9Mb3dlckNhc2UoKTtcbiAgICAgIHVybC5zbGFzaGVzID0gIWZuO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdwYXRobmFtZSc6XG4gICAgY2FzZSAnaGFzaCc6XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgdmFyIGNoYXIgPSBwYXJ0ID09PSAncGF0aG5hbWUnID8gJy8nIDogJyMnO1xuICAgICAgICB1cmxbcGFydF0gPSB2YWx1ZS5jaGFyQXQoMCkgIT09IGNoYXIgPyBjaGFyICsgdmFsdWUgOiB2YWx1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHVybFtwYXJ0XSA9IHZhbHVlO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdXJsW3BhcnRdID0gdmFsdWU7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGlucyA9IHJ1bGVzW2ldO1xuXG4gICAgaWYgKGluc1s0XSkgdXJsW2luc1sxXV0gPSB1cmxbaW5zWzFdXS50b0xvd2VyQ2FzZSgpO1xuICB9XG5cbiAgdXJsLm9yaWdpbiA9IHVybC5wcm90b2NvbCAmJiB1cmwuaG9zdCAmJiB1cmwucHJvdG9jb2wgIT09ICdmaWxlOidcbiAgICA/IHVybC5wcm90b2NvbCArJy8vJysgdXJsLmhvc3RcbiAgICA6ICdudWxsJztcblxuICB1cmwuaHJlZiA9IHVybC50b1N0cmluZygpO1xuXG4gIHJldHVybiB1cmw7XG59XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBwcm9wZXJ0aWVzIGJhY2sgaW4gdG8gYSB2YWxpZCBhbmQgZnVsbCBVUkwgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHN0cmluZ2lmeSBPcHRpb25hbCBxdWVyeSBzdHJpbmdpZnkgZnVuY3Rpb24uXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcoc3RyaW5naWZ5KSB7XG4gIGlmICghc3RyaW5naWZ5IHx8ICdmdW5jdGlvbicgIT09IHR5cGVvZiBzdHJpbmdpZnkpIHN0cmluZ2lmeSA9IHFzLnN0cmluZ2lmeTtcblxuICB2YXIgcXVlcnlcbiAgICAsIHVybCA9IHRoaXNcbiAgICAsIHByb3RvY29sID0gdXJsLnByb3RvY29sO1xuXG4gIGlmIChwcm90b2NvbCAmJiBwcm90b2NvbC5jaGFyQXQocHJvdG9jb2wubGVuZ3RoIC0gMSkgIT09ICc6JykgcHJvdG9jb2wgKz0gJzonO1xuXG4gIHZhciByZXN1bHQgPSBwcm90b2NvbCArICh1cmwuc2xhc2hlcyA/ICcvLycgOiAnJyk7XG5cbiAgaWYgKHVybC51c2VybmFtZSkge1xuICAgIHJlc3VsdCArPSB1cmwudXNlcm5hbWU7XG4gICAgaWYgKHVybC5wYXNzd29yZCkgcmVzdWx0ICs9ICc6JysgdXJsLnBhc3N3b3JkO1xuICAgIHJlc3VsdCArPSAnQCc7XG4gIH1cblxuICByZXN1bHQgKz0gdXJsLmhvc3QgKyB1cmwucGF0aG5hbWU7XG5cbiAgcXVlcnkgPSAnb2JqZWN0JyA9PT0gdHlwZW9mIHVybC5xdWVyeSA/IHN0cmluZ2lmeSh1cmwucXVlcnkpIDogdXJsLnF1ZXJ5O1xuICBpZiAocXVlcnkpIHJlc3VsdCArPSAnPycgIT09IHF1ZXJ5LmNoYXJBdCgwKSA/ICc/JysgcXVlcnkgOiBxdWVyeTtcblxuICBpZiAodXJsLmhhc2gpIHJlc3VsdCArPSB1cmwuaGFzaDtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5VUkwucHJvdG90eXBlID0geyBzZXQ6IHNldCwgdG9TdHJpbmc6IHRvU3RyaW5nIH07XG5cbi8vXG4vLyBFeHBvc2UgdGhlIFVSTCBwYXJzZXIgYW5kIHNvbWUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzIHRoYXQgbWlnaHQgYmUgdXNlZnVsIGZvclxuLy8gb3RoZXJzIG9yIHRlc3RpbmcuXG4vL1xuVVJMLmV4dHJhY3RQcm90b2NvbCA9IGV4dHJhY3RQcm90b2NvbDtcblVSTC5sb2NhdGlvbiA9IGxvbGNhdGlvbjtcblVSTC5xcyA9IHFzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVSTDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3VybC1wYXJzZS9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///19\n");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* Simplified implementation of DOM2 EventTarget.\n *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget\n */\n\nfunction EventTarget() {\n  this._listeners = {};\n}\n\nEventTarget.prototype.addEventListener = function(eventType, listener) {\n  if (!(eventType in this._listeners)) {\n    this._listeners[eventType] = [];\n  }\n  var arr = this._listeners[eventType];\n  // #4\n  if (arr.indexOf(listener) === -1) {\n    // Make a copy so as not to interfere with a current dispatchEvent.\n    arr = arr.concat([listener]);\n  }\n  this._listeners[eventType] = arr;\n};\n\nEventTarget.prototype.removeEventListener = function(eventType, listener) {\n  var arr = this._listeners[eventType];\n  if (!arr) {\n    return;\n  }\n  var idx = arr.indexOf(listener);\n  if (idx !== -1) {\n    if (arr.length > 1) {\n      // Make a copy so as not to interfere with a current dispatchEvent.\n      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));\n    } else {\n      delete this._listeners[eventType];\n    }\n    return;\n  }\n};\n\nEventTarget.prototype.dispatchEvent = function(event) {\n  var t = event.type;\n  var args = Array.prototype.slice.call(arguments, 0);\n  // TODO: This doesn't match the real behavior; per spec, onfoo get\n  // their place in line from the /first/ time they're set from\n  // non-null. Although WebKit bumps it to the end every time it's\n  // set.\n  if (this['on' + t]) {\n    this['on' + t].apply(this, args);\n  }\n  if (t in this._listeners) {\n    // Grab a reference to the listeners list. removeEventListener may alter the list.\n    var listeners = this._listeners[t];\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(this, args);\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvZXZlbnQvZXZlbnR0YXJnZXQuanM/Mjk5ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsc0JBQXNCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKiBTaW1wbGlmaWVkIGltcGxlbWVudGF0aW9uIG9mIERPTTIgRXZlbnRUYXJnZXQuXG4gKiAgIGh0dHA6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0yLUV2ZW50cy9ldmVudHMuaHRtbCNFdmVudHMtRXZlbnRUYXJnZXRcbiAqL1xuXG5mdW5jdGlvbiBFdmVudFRhcmdldCgpIHtcbiAgdGhpcy5fbGlzdGVuZXJzID0ge307XG59XG5cbkV2ZW50VGFyZ2V0LnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnRUeXBlLCBsaXN0ZW5lcikge1xuICBpZiAoIShldmVudFR5cGUgaW4gdGhpcy5fbGlzdGVuZXJzKSkge1xuICAgIHRoaXMuX2xpc3RlbmVyc1tldmVudFR5cGVdID0gW107XG4gIH1cbiAgdmFyIGFyciA9IHRoaXMuX2xpc3RlbmVyc1tldmVudFR5cGVdO1xuICAvLyAjNFxuICBpZiAoYXJyLmluZGV4T2YobGlzdGVuZXIpID09PSAtMSkge1xuICAgIC8vIE1ha2UgYSBjb3B5IHNvIGFzIG5vdCB0byBpbnRlcmZlcmUgd2l0aCBhIGN1cnJlbnQgZGlzcGF0Y2hFdmVudC5cbiAgICBhcnIgPSBhcnIuY29uY2F0KFtsaXN0ZW5lcl0pO1xuICB9XG4gIHRoaXMuX2xpc3RlbmVyc1tldmVudFR5cGVdID0gYXJyO1xufTtcblxuRXZlbnRUYXJnZXQucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbihldmVudFR5cGUsIGxpc3RlbmVyKSB7XG4gIHZhciBhcnIgPSB0aGlzLl9saXN0ZW5lcnNbZXZlbnRUeXBlXTtcbiAgaWYgKCFhcnIpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIGlkeCA9IGFyci5pbmRleE9mKGxpc3RlbmVyKTtcbiAgaWYgKGlkeCAhPT0gLTEpIHtcbiAgICBpZiAoYXJyLmxlbmd0aCA+IDEpIHtcbiAgICAgIC8vIE1ha2UgYSBjb3B5IHNvIGFzIG5vdCB0byBpbnRlcmZlcmUgd2l0aCBhIGN1cnJlbnQgZGlzcGF0Y2hFdmVudC5cbiAgICAgIHRoaXMuX2xpc3RlbmVyc1tldmVudFR5cGVdID0gYXJyLnNsaWNlKDAsIGlkeCkuY29uY2F0KGFyci5zbGljZShpZHggKyAxKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGV0ZSB0aGlzLl9saXN0ZW5lcnNbZXZlbnRUeXBlXTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG59O1xuXG5FdmVudFRhcmdldC5wcm90b3R5cGUuZGlzcGF0Y2hFdmVudCA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gIHZhciB0ID0gZXZlbnQudHlwZTtcbiAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDApO1xuICAvLyBUT0RPOiBUaGlzIGRvZXNuJ3QgbWF0Y2ggdGhlIHJlYWwgYmVoYXZpb3I7IHBlciBzcGVjLCBvbmZvbyBnZXRcbiAgLy8gdGhlaXIgcGxhY2UgaW4gbGluZSBmcm9tIHRoZSAvZmlyc3QvIHRpbWUgdGhleSdyZSBzZXQgZnJvbVxuICAvLyBub24tbnVsbC4gQWx0aG91Z2ggV2ViS2l0IGJ1bXBzIGl0IHRvIHRoZSBlbmQgZXZlcnkgdGltZSBpdCdzXG4gIC8vIHNldC5cbiAgaWYgKHRoaXNbJ29uJyArIHRdKSB7XG4gICAgdGhpc1snb24nICsgdF0uYXBwbHkodGhpcywgYXJncyk7XG4gIH1cbiAgaWYgKHQgaW4gdGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgLy8gR3JhYiBhIHJlZmVyZW5jZSB0byB0aGUgbGlzdGVuZXJzIGxpc3QuIHJlbW92ZUV2ZW50TGlzdGVuZXIgbWF5IGFsdGVyIHRoZSBsaXN0LlxuICAgIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9saXN0ZW5lcnNbdF07XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxpc3RlbmVyc1tpXS5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICB9XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRUYXJnZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9ldmVudC9ldmVudHRhcmdldC5qc1xuLy8gbW9kdWxlIGlkID0gMjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar inherits = __webpack_require__(0)\n  , urlUtils = __webpack_require__(5)\n  , BufferedSender = __webpack_require__(45)\n  , Polling = __webpack_require__(46)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:sender-receiver');\n}\n\nfunction SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {\n  var pollUrl = urlUtils.addPath(transUrl, urlSuffix);\n  debug(pollUrl);\n  var self = this;\n  BufferedSender.call(this, transUrl, senderFunc);\n\n  this.poll = new Polling(Receiver, pollUrl, AjaxObject);\n  this.poll.on('message', function(msg) {\n    debug('poll message', msg);\n    self.emit('message', msg);\n  });\n  this.poll.once('close', function(code, reason) {\n    debug('poll close', code, reason);\n    self.poll = null;\n    self.emit('close', code, reason);\n    self.close();\n  });\n}\n\ninherits(SenderReceiver, BufferedSender);\n\nSenderReceiver.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  if (this.poll) {\n    this.poll.abort();\n    this.poll = null;\n  }\n  this.stop();\n};\n\nmodule.exports = SenderReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2xpYi9zZW5kZXItcmVjZWl2ZXIuanM/ZmRhOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiK0NBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIEJ1ZmZlcmVkU2VuZGVyID0gcmVxdWlyZSgnLi9idWZmZXJlZC1zZW5kZXInKVxuICAsIFBvbGxpbmcgPSByZXF1aXJlKCcuL3BvbGxpbmcnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6c2VuZGVyLXJlY2VpdmVyJyk7XG59XG5cbmZ1bmN0aW9uIFNlbmRlclJlY2VpdmVyKHRyYW5zVXJsLCB1cmxTdWZmaXgsIHNlbmRlckZ1bmMsIFJlY2VpdmVyLCBBamF4T2JqZWN0KSB7XG4gIHZhciBwb2xsVXJsID0gdXJsVXRpbHMuYWRkUGF0aCh0cmFuc1VybCwgdXJsU3VmZml4KTtcbiAgZGVidWcocG9sbFVybCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgQnVmZmVyZWRTZW5kZXIuY2FsbCh0aGlzLCB0cmFuc1VybCwgc2VuZGVyRnVuYyk7XG5cbiAgdGhpcy5wb2xsID0gbmV3IFBvbGxpbmcoUmVjZWl2ZXIsIHBvbGxVcmwsIEFqYXhPYmplY3QpO1xuICB0aGlzLnBvbGwub24oJ21lc3NhZ2UnLCBmdW5jdGlvbihtc2cpIHtcbiAgICBkZWJ1ZygncG9sbCBtZXNzYWdlJywgbXNnKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBtc2cpO1xuICB9KTtcbiAgdGhpcy5wb2xsLm9uY2UoJ2Nsb3NlJywgZnVuY3Rpb24oY29kZSwgcmVhc29uKSB7XG4gICAgZGVidWcoJ3BvbGwgY2xvc2UnLCBjb2RlLCByZWFzb24pO1xuICAgIHNlbGYucG9sbCA9IG51bGw7XG4gICAgc2VsZi5lbWl0KCdjbG9zZScsIGNvZGUsIHJlYXNvbik7XG4gICAgc2VsZi5jbG9zZSgpO1xuICB9KTtcbn1cblxuaW5oZXJpdHMoU2VuZGVyUmVjZWl2ZXIsIEJ1ZmZlcmVkU2VuZGVyKTtcblxuU2VuZGVyUmVjZWl2ZXIucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbG9zZScpO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICBpZiAodGhpcy5wb2xsKSB7XG4gICAgdGhpcy5wb2xsLmFib3J0KCk7XG4gICAgdGhpcy5wb2xsID0gbnVsbDtcbiAgfVxuICB0aGlzLnN0b3AoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU2VuZGVyUmVjZWl2ZXI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvbGliL3NlbmRlci1yZWNlaXZlci5qc1xuLy8gbW9kdWxlIGlkID0gMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(0)\n  , utils = __webpack_require__(7)\n  , urlUtils = __webpack_require__(5)\n  , XHR = global.XMLHttpRequest\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:browser:xhr');\n}\n\nfunction AbstractXHRObject(method, url, payload, opts) {\n  debug(method, url);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function () {\n    self._start(method, url, payload, opts);\n  }, 0);\n}\n\ninherits(AbstractXHRObject, EventEmitter);\n\nAbstractXHRObject.prototype._start = function(method, url, payload, opts) {\n  var self = this;\n\n  try {\n    this.xhr = new XHR();\n  } catch (x) {}\n\n  if (!this.xhr) {\n    debug('no xhr');\n    this.emit('finish', 0, 'no xhr support');\n    this._cleanup();\n    return;\n  }\n\n  // several browsers cache POSTs\n  url = urlUtils.addQuery(url, 't=' + (+new Date()));\n\n  // Explorer tends to keep connection open, even after the\n  // tab gets closed: http://bugs.jquery.com/ticket/5280\n  this.unloadRef = utils.unloadAdd(function() {\n    debug('unload cleanup');\n    self._cleanup(true);\n  });\n  try {\n    this.xhr.open(method, url, true);\n    if (this.timeout && 'timeout' in this.xhr) {\n      this.xhr.timeout = this.timeout;\n      this.xhr.ontimeout = function() {\n        debug('xhr timeout');\n        self.emit('finish', 0, '');\n        self._cleanup(false);\n      };\n    }\n  } catch (e) {\n    debug('exception', e);\n    // IE raises an exception on wrong port.\n    this.emit('finish', 0, '');\n    this._cleanup(false);\n    return;\n  }\n\n  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {\n    debug('withCredentials');\n    // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :\n    // \"This never affects same-site requests.\"\n\n    this.xhr.withCredentials = 'true';\n  }\n  if (opts && opts.headers) {\n    for (var key in opts.headers) {\n      this.xhr.setRequestHeader(key, opts.headers[key]);\n    }\n  }\n\n  this.xhr.onreadystatechange = function() {\n    if (self.xhr) {\n      var x = self.xhr;\n      var text, status;\n      debug('readyState', x.readyState);\n      switch (x.readyState) {\n      case 3:\n        // IE doesn't like peeking into responseText or status\n        // on Microsoft.XMLHTTP and readystate=3\n        try {\n          status = x.status;\n          text = x.responseText;\n        } catch (e) {}\n        debug('status', status);\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n        if (status === 1223) {\n          status = 204;\n        }\n\n        // IE does return readystate == 3 for 404 answers.\n        if (status === 200 && text && text.length > 0) {\n          debug('chunk');\n          self.emit('chunk', status, text);\n        }\n        break;\n      case 4:\n        status = x.status;\n        debug('status', status);\n        // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450\n        if (status === 1223) {\n          status = 204;\n        }\n        // IE returns this for a bad port\n        // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx\n        if (status === 12005 || status === 12029) {\n          status = 0;\n        }\n\n        debug('finish', status, x.responseText);\n        self.emit('finish', status, x.responseText);\n        self._cleanup(false);\n        break;\n      }\n    }\n  };\n\n  try {\n    self.xhr.send(payload);\n  } catch (e) {\n    self.emit('finish', 0, '');\n    self._cleanup(false);\n  }\n};\n\nAbstractXHRObject.prototype._cleanup = function(abort) {\n  debug('cleanup');\n  if (!this.xhr) {\n    return;\n  }\n  this.removeAllListeners();\n  utils.unloadDel(this.unloadRef);\n\n  // IE needs this field to be a function\n  this.xhr.onreadystatechange = function() {};\n  if (this.xhr.ontimeout) {\n    this.xhr.ontimeout = null;\n  }\n\n  if (abort) {\n    try {\n      this.xhr.abort();\n    } catch (x) {}\n  }\n  this.unloadRef = this.xhr = null;\n};\n\nAbstractXHRObject.prototype.close = function() {\n  debug('close');\n  this._cleanup(true);\n};\n\nAbstractXHRObject.enabled = !!XHR;\n// override XMLHttpRequest for IE6/7\n// obfuscate to avoid firewalls\nvar axo = ['Active'].concat('Object').join('X');\nif (!AbstractXHRObject.enabled && (axo in global)) {\n  debug('overriding xmlhttprequest');\n  XHR = function() {\n    try {\n      return new global[axo]('Microsoft.XMLHTTP');\n    } catch (e) {\n      return null;\n    }\n  };\n  AbstractXHRObject.enabled = !!new XHR();\n}\n\nvar cors = false;\ntry {\n  cors = 'withCredentials' in new XHR();\n} catch (ignored) {}\n\nAbstractXHRObject.supportsCORS = cors;\n\nmodule.exports = AbstractXHRObject;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2Jyb3dzZXIvYWJzdHJhY3QteGhyLmpzPzYwMzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6InVEQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7O0FBRUEiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCB1dGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2V2ZW50JylcbiAgLCB1cmxVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3VybCcpXG4gICwgWEhSID0gZ2xvYmFsLlhNTEh0dHBSZXF1ZXN0XG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpicm93c2VyOnhocicpO1xufVxuXG5mdW5jdGlvbiBBYnN0cmFjdFhIUk9iamVjdChtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cykge1xuICBkZWJ1ZyhtZXRob2QsIHVybCk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG5cbiAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgc2VsZi5fc3RhcnQobWV0aG9kLCB1cmwsIHBheWxvYWQsIG9wdHMpO1xuICB9LCAwKTtcbn1cblxuaW5oZXJpdHMoQWJzdHJhY3RYSFJPYmplY3QsIEV2ZW50RW1pdHRlcik7XG5cbkFic3RyYWN0WEhST2JqZWN0LnByb3RvdHlwZS5fc3RhcnQgPSBmdW5jdGlvbihtZXRob2QsIHVybCwgcGF5bG9hZCwgb3B0cykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgdHJ5IHtcbiAgICB0aGlzLnhociA9IG5ldyBYSFIoKTtcbiAgfSBjYXRjaCAoeCkge31cblxuICBpZiAoIXRoaXMueGhyKSB7XG4gICAgZGVidWcoJ25vIHhocicpO1xuICAgIHRoaXMuZW1pdCgnZmluaXNoJywgMCwgJ25vIHhociBzdXBwb3J0Jyk7XG4gICAgdGhpcy5fY2xlYW51cCgpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIHNldmVyYWwgYnJvd3NlcnMgY2FjaGUgUE9TVHNcbiAgdXJsID0gdXJsVXRpbHMuYWRkUXVlcnkodXJsLCAndD0nICsgKCtuZXcgRGF0ZSgpKSk7XG5cbiAgLy8gRXhwbG9yZXIgdGVuZHMgdG8ga2VlcCBjb25uZWN0aW9uIG9wZW4sIGV2ZW4gYWZ0ZXIgdGhlXG4gIC8vIHRhYiBnZXRzIGNsb3NlZDogaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvNTI4MFxuICB0aGlzLnVubG9hZFJlZiA9IHV0aWxzLnVubG9hZEFkZChmdW5jdGlvbigpIHtcbiAgICBkZWJ1ZygndW5sb2FkIGNsZWFudXAnKTtcbiAgICBzZWxmLl9jbGVhbnVwKHRydWUpO1xuICB9KTtcbiAgdHJ5IHtcbiAgICB0aGlzLnhoci5vcGVuKG1ldGhvZCwgdXJsLCB0cnVlKTtcbiAgICBpZiAodGhpcy50aW1lb3V0ICYmICd0aW1lb3V0JyBpbiB0aGlzLnhocikge1xuICAgICAgdGhpcy54aHIudGltZW91dCA9IHRoaXMudGltZW91dDtcbiAgICAgIHRoaXMueGhyLm9udGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBkZWJ1ZygneGhyIHRpbWVvdXQnKTtcbiAgICAgICAgc2VsZi5lbWl0KCdmaW5pc2gnLCAwLCAnJyk7XG4gICAgICAgIHNlbGYuX2NsZWFudXAoZmFsc2UpO1xuICAgICAgfTtcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBkZWJ1ZygnZXhjZXB0aW9uJywgZSk7XG4gICAgLy8gSUUgcmFpc2VzIGFuIGV4Y2VwdGlvbiBvbiB3cm9uZyBwb3J0LlxuICAgIHRoaXMuZW1pdCgnZmluaXNoJywgMCwgJycpO1xuICAgIHRoaXMuX2NsZWFudXAoZmFsc2UpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICgoIW9wdHMgfHwgIW9wdHMubm9DcmVkZW50aWFscykgJiYgQWJzdHJhY3RYSFJPYmplY3Quc3VwcG9ydHNDT1JTKSB7XG4gICAgZGVidWcoJ3dpdGhDcmVkZW50aWFscycpO1xuICAgIC8vIE1vemlsbGEgZG9jcyBzYXlzIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL1hNTEh0dHBSZXF1ZXN0IDpcbiAgICAvLyBcIlRoaXMgbmV2ZXIgYWZmZWN0cyBzYW1lLXNpdGUgcmVxdWVzdHMuXCJcblxuICAgIHRoaXMueGhyLndpdGhDcmVkZW50aWFscyA9ICd0cnVlJztcbiAgfVxuICBpZiAob3B0cyAmJiBvcHRzLmhlYWRlcnMpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gb3B0cy5oZWFkZXJzKSB7XG4gICAgICB0aGlzLnhoci5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgb3B0cy5oZWFkZXJzW2tleV0pO1xuICAgIH1cbiAgfVxuXG4gIHRoaXMueGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgIGlmIChzZWxmLnhocikge1xuICAgICAgdmFyIHggPSBzZWxmLnhocjtcbiAgICAgIHZhciB0ZXh0LCBzdGF0dXM7XG4gICAgICBkZWJ1ZygncmVhZHlTdGF0ZScsIHgucmVhZHlTdGF0ZSk7XG4gICAgICBzd2l0Y2ggKHgucmVhZHlTdGF0ZSkge1xuICAgICAgY2FzZSAzOlxuICAgICAgICAvLyBJRSBkb2Vzbid0IGxpa2UgcGVla2luZyBpbnRvIHJlc3BvbnNlVGV4dCBvciBzdGF0dXNcbiAgICAgICAgLy8gb24gTWljcm9zb2Z0LlhNTEhUVFAgYW5kIHJlYWR5c3RhdGU9M1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHN0YXR1cyA9IHguc3RhdHVzO1xuICAgICAgICAgIHRleHQgPSB4LnJlc3BvbnNlVGV4dDtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgZGVidWcoJ3N0YXR1cycsIHN0YXR1cyk7XG4gICAgICAgIC8vIElFIHJldHVybnMgMTIyMyBmb3IgMjA0OiBodHRwOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xNDUwXG4gICAgICAgIGlmIChzdGF0dXMgPT09IDEyMjMpIHtcbiAgICAgICAgICBzdGF0dXMgPSAyMDQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBJRSBkb2VzIHJldHVybiByZWFkeXN0YXRlID09IDMgZm9yIDQwNCBhbnN3ZXJzLlxuICAgICAgICBpZiAoc3RhdHVzID09PSAyMDAgJiYgdGV4dCAmJiB0ZXh0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBkZWJ1ZygnY2h1bmsnKTtcbiAgICAgICAgICBzZWxmLmVtaXQoJ2NodW5rJywgc3RhdHVzLCB0ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgNDpcbiAgICAgICAgc3RhdHVzID0geC5zdGF0dXM7XG4gICAgICAgIGRlYnVnKCdzdGF0dXMnLCBzdGF0dXMpO1xuICAgICAgICAvLyBJRSByZXR1cm5zIDEyMjMgZm9yIDIwNDogaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTQ1MFxuICAgICAgICBpZiAoc3RhdHVzID09PSAxMjIzKSB7XG4gICAgICAgICAgc3RhdHVzID0gMjA0O1xuICAgICAgICB9XG4gICAgICAgIC8vIElFIHJldHVybnMgdGhpcyBmb3IgYSBiYWQgcG9ydFxuICAgICAgICAvLyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvd2luZG93cy9kZXNrdG9wL2FhMzgzNzcwKHY9dnMuODUpLmFzcHhcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gMTIwMDUgfHwgc3RhdHVzID09PSAxMjAyOSkge1xuICAgICAgICAgIHN0YXR1cyA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBkZWJ1ZygnZmluaXNoJywgc3RhdHVzLCB4LnJlc3BvbnNlVGV4dCk7XG4gICAgICAgIHNlbGYuZW1pdCgnZmluaXNoJywgc3RhdHVzLCB4LnJlc3BvbnNlVGV4dCk7XG4gICAgICAgIHNlbGYuX2NsZWFudXAoZmFsc2UpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgdHJ5IHtcbiAgICBzZWxmLnhoci5zZW5kKHBheWxvYWQpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgc2VsZi5lbWl0KCdmaW5pc2gnLCAwLCAnJyk7XG4gICAgc2VsZi5fY2xlYW51cChmYWxzZSk7XG4gIH1cbn07XG5cbkFic3RyYWN0WEhST2JqZWN0LnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKGFib3J0KSB7XG4gIGRlYnVnKCdjbGVhbnVwJyk7XG4gIGlmICghdGhpcy54aHIpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgdXRpbHMudW5sb2FkRGVsKHRoaXMudW5sb2FkUmVmKTtcblxuICAvLyBJRSBuZWVkcyB0aGlzIGZpZWxkIHRvIGJlIGEgZnVuY3Rpb25cbiAgdGhpcy54aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7fTtcbiAgaWYgKHRoaXMueGhyLm9udGltZW91dCkge1xuICAgIHRoaXMueGhyLm9udGltZW91dCA9IG51bGw7XG4gIH1cblxuICBpZiAoYWJvcnQpIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy54aHIuYWJvcnQoKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9XG4gIHRoaXMudW5sb2FkUmVmID0gdGhpcy54aHIgPSBudWxsO1xufTtcblxuQWJzdHJhY3RYSFJPYmplY3QucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbG9zZScpO1xuICB0aGlzLl9jbGVhbnVwKHRydWUpO1xufTtcblxuQWJzdHJhY3RYSFJPYmplY3QuZW5hYmxlZCA9ICEhWEhSO1xuLy8gb3ZlcnJpZGUgWE1MSHR0cFJlcXVlc3QgZm9yIElFNi83XG4vLyBvYmZ1c2NhdGUgdG8gYXZvaWQgZmlyZXdhbGxzXG52YXIgYXhvID0gWydBY3RpdmUnXS5jb25jYXQoJ09iamVjdCcpLmpvaW4oJ1gnKTtcbmlmICghQWJzdHJhY3RYSFJPYmplY3QuZW5hYmxlZCAmJiAoYXhvIGluIGdsb2JhbCkpIHtcbiAgZGVidWcoJ292ZXJyaWRpbmcgeG1saHR0cHJlcXVlc3QnKTtcbiAgWEhSID0gZnVuY3Rpb24oKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBuZXcgZ2xvYmFsW2F4b10oJ01pY3Jvc29mdC5YTUxIVFRQJyk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9O1xuICBBYnN0cmFjdFhIUk9iamVjdC5lbmFibGVkID0gISFuZXcgWEhSKCk7XG59XG5cbnZhciBjb3JzID0gZmFsc2U7XG50cnkge1xuICBjb3JzID0gJ3dpdGhDcmVkZW50aWFscycgaW4gbmV3IFhIUigpO1xufSBjYXRjaCAoaWdub3JlZCkge31cblxuQWJzdHJhY3RYSFJPYmplY3Quc3VwcG9ydHNDT1JTID0gY29ycztcblxubW9kdWxlLmV4cG9ydHMgPSBBYnN0cmFjdFhIUk9iamVjdDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9icm93c2VyL2Fic3RyYWN0LXhoci5qc1xuLy8gbW9kdWxlIGlkID0gMjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , AjaxBasedTransport = __webpack_require__(9)\n  , XhrReceiver = __webpack_require__(13)\n  , XDRObject = __webpack_require__(15)\n  ;\n\n// According to:\n//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests\n//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\n\nfunction XdrStreamingTransport(transUrl) {\n  if (!XDRObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);\n}\n\ninherits(XdrStreamingTransport, AjaxBasedTransport);\n\nXdrStreamingTransport.enabled = function(info) {\n  if (info.cookie_needed || info.nullOrigin) {\n    return false;\n  }\n  return XDRObject.enabled && info.sameScheme;\n};\n\nXdrStreamingTransport.transportName = 'xdr-streaming';\nXdrStreamingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XdrStreamingTransport;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3hkci1zdHJlYW1pbmcuanM/ZGVhZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EscUNBQXFDOztBQUVyQyIsImZpbGUiOiIyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICAsIFhoclJlY2VpdmVyID0gcmVxdWlyZSgnLi9yZWNlaXZlci94aHInKVxuICAsIFhEUk9iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hkcicpXG4gIDtcblxuLy8gQWNjb3JkaW5nIHRvOlxuLy8gICBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzE2NDE1MDcvZGV0ZWN0LWJyb3dzZXItc3VwcG9ydC1mb3ItY3Jvc3MtZG9tYWluLXhtbGh0dHByZXF1ZXN0c1xuLy8gICBodHRwOi8vaGFja3MubW96aWxsYS5vcmcvMjAwOS8wNy9jcm9zcy1zaXRlLXhtbGh0dHByZXF1ZXN0LXdpdGgtY29ycy9cblxuZnVuY3Rpb24gWGRyU3RyZWFtaW5nVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghWERST2JqZWN0LmVuYWJsZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBjcmVhdGVkIHdoZW4gZGlzYWJsZWQnKTtcbiAgfVxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy94aHJfc3RyZWFtaW5nJywgWGhyUmVjZWl2ZXIsIFhEUk9iamVjdCk7XG59XG5cbmluaGVyaXRzKFhkclN0cmVhbWluZ1RyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuWGRyU3RyZWFtaW5nVHJhbnNwb3J0LmVuYWJsZWQgPSBmdW5jdGlvbihpbmZvKSB7XG4gIGlmIChpbmZvLmNvb2tpZV9uZWVkZWQgfHwgaW5mby5udWxsT3JpZ2luKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiBYRFJPYmplY3QuZW5hYmxlZCAmJiBpbmZvLnNhbWVTY2hlbWU7XG59O1xuXG5YZHJTdHJlYW1pbmdUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSA9ICd4ZHItc3RyZWFtaW5nJztcblhkclN0cmVhbWluZ1RyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjsgLy8gcHJlZmxpZ2h0LCBhamF4XG5cbm1vZHVsZS5leHBvcnRzID0gWGRyU3RyZWFtaW5nVHJhbnNwb3J0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3hkci1zdHJlYW1pbmcuanNcbi8vIG1vZHVsZSBpZCA9IDIzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , AjaxBasedTransport = __webpack_require__(9)\n  , EventSourceReceiver = __webpack_require__(47)\n  , XHRCorsObject = __webpack_require__(14)\n  , EventSourceDriver = __webpack_require__(25)\n  ;\n\nfunction EventSourceTransport(transUrl) {\n  if (!EventSourceTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);\n}\n\ninherits(EventSourceTransport, AjaxBasedTransport);\n\nEventSourceTransport.enabled = function() {\n  return !!EventSourceDriver;\n};\n\nEventSourceTransport.transportName = 'eventsource';\nEventSourceTransport.roundTrips = 2;\n\nmodule.exports = EventSourceTransport;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2V2ZW50c291cmNlLmpzP2I4ZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBBamF4QmFzZWRUcmFuc3BvcnQgPSByZXF1aXJlKCcuL2xpYi9hamF4LWJhc2VkJylcbiAgLCBFdmVudFNvdXJjZVJlY2VpdmVyID0gcmVxdWlyZSgnLi9yZWNlaXZlci9ldmVudHNvdXJjZScpXG4gICwgWEhSQ29yc09iamVjdCA9IHJlcXVpcmUoJy4vc2VuZGVyL3hoci1jb3JzJylcbiAgLCBFdmVudFNvdXJjZURyaXZlciA9IHJlcXVpcmUoJ2V2ZW50c291cmNlJylcbiAgO1xuXG5mdW5jdGlvbiBFdmVudFNvdXJjZVRyYW5zcG9ydCh0cmFuc1VybCkge1xuICBpZiAoIUV2ZW50U291cmNlVHJhbnNwb3J0LmVuYWJsZWQoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG5cbiAgQWpheEJhc2VkVHJhbnNwb3J0LmNhbGwodGhpcywgdHJhbnNVcmwsICcvZXZlbnRzb3VyY2UnLCBFdmVudFNvdXJjZVJlY2VpdmVyLCBYSFJDb3JzT2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoRXZlbnRTb3VyY2VUcmFuc3BvcnQsIEFqYXhCYXNlZFRyYW5zcG9ydCk7XG5cbkV2ZW50U291cmNlVHJhbnNwb3J0LmVuYWJsZWQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuICEhRXZlbnRTb3VyY2VEcml2ZXI7XG59O1xuXG5FdmVudFNvdXJjZVRyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ2V2ZW50c291cmNlJztcbkV2ZW50U291cmNlVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50U291cmNlVHJhbnNwb3J0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2V2ZW50c291cmNlLmpzXG4vLyBtb2R1bGUgaWQgPSAyNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {module.exports = global.EventSource;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2Jyb3dzZXIvZXZlbnRzb3VyY2UuanM/NjJlNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLkV2ZW50U291cmNlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2Jyb3dzZXIvZXZlbnRzb3VyY2UuanNcbi8vIG1vZHVsZSBpZCA9IDI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///25\n");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\n// Few cool transports do work only for same-origin. In order to make\n// them work cross-domain we shall use iframe, served from the\n// remote domain. New browsers have capabilities to communicate with\n// cross domain iframe using postMessage(). In IE it was implemented\n// from IE 8+, but of course, IE got some details wrong:\n//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx\n//    http://stevesouders.com/misc/test-postmessage.php\n\nvar inherits = __webpack_require__(0)\n  , JSON3 = __webpack_require__(6)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , version = __webpack_require__(27)\n  , urlUtils = __webpack_require__(5)\n  , iframeUtils = __webpack_require__(12)\n  , eventUtils = __webpack_require__(7)\n  , random = __webpack_require__(8)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:transport:iframe');\n}\n\nfunction IframeTransport(transport, transUrl, baseUrl) {\n  if (!IframeTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n  EventEmitter.call(this);\n\n  var self = this;\n  this.origin = urlUtils.getOrigin(baseUrl);\n  this.baseUrl = baseUrl;\n  this.transUrl = transUrl;\n  this.transport = transport;\n  this.windowId = random.string(8);\n\n  var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;\n  debug(transport, transUrl, iframeUrl);\n\n  this.iframeObj = iframeUtils.createIframe(iframeUrl, function(r) {\n    debug('err callback');\n    self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');\n    self.close();\n  });\n\n  this.onmessageCallback = this._message.bind(this);\n  eventUtils.attachEvent('message', this.onmessageCallback);\n}\n\ninherits(IframeTransport, EventEmitter);\n\nIframeTransport.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  if (this.iframeObj) {\n    eventUtils.detachEvent('message', this.onmessageCallback);\n    try {\n      // When the iframe is not loaded, IE raises an exception\n      // on 'contentWindow'.\n      this.postMessage('c');\n    } catch (x) {}\n    this.iframeObj.cleanup();\n    this.iframeObj = null;\n    this.onmessageCallback = this.iframeObj = null;\n  }\n};\n\nIframeTransport.prototype._message = function(e) {\n  debug('message', e.data);\n  if (!urlUtils.isOriginEqual(e.origin, this.origin)) {\n    debug('not same origin', e.origin, this.origin);\n    return;\n  }\n\n  var iframeMessage;\n  try {\n    iframeMessage = JSON3.parse(e.data);\n  } catch (ignored) {\n    debug('bad json', e.data);\n    return;\n  }\n\n  if (iframeMessage.windowId !== this.windowId) {\n    debug('mismatched window id', iframeMessage.windowId, this.windowId);\n    return;\n  }\n\n  switch (iframeMessage.type) {\n  case 's':\n    this.iframeObj.loaded();\n    // window global dependency\n    this.postMessage('s', JSON3.stringify([\n      version\n    , this.transport\n    , this.transUrl\n    , this.baseUrl\n    ]));\n    break;\n  case 't':\n    this.emit('message', iframeMessage.data);\n    break;\n  case 'c':\n    var cdata;\n    try {\n      cdata = JSON3.parse(iframeMessage.data);\n    } catch (ignored) {\n      debug('bad json', iframeMessage.data);\n      return;\n    }\n    this.emit('close', cdata[0], cdata[1]);\n    this.close();\n    break;\n  }\n};\n\nIframeTransport.prototype.postMessage = function(type, data) {\n  debug('postMessage', type, data);\n  this.iframeObj.post(JSON3.stringify({\n    windowId: this.windowId\n  , type: type\n  , data: data || ''\n  }), this.origin);\n};\n\nIframeTransport.prototype.send = function(message) {\n  debug('send', message);\n  this.postMessage('m', message);\n};\n\nIframeTransport.enabled = function() {\n  return iframeUtils.iframeEnabled;\n};\n\nIframeTransport.transportName = 'iframe';\nIframeTransport.roundTrips = 2;\n\nmodule.exports = IframeTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2lmcmFtZS5qcz8xODMzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIrQ0FBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gRmV3IGNvb2wgdHJhbnNwb3J0cyBkbyB3b3JrIG9ubHkgZm9yIHNhbWUtb3JpZ2luLiBJbiBvcmRlciB0byBtYWtlXG4vLyB0aGVtIHdvcmsgY3Jvc3MtZG9tYWluIHdlIHNoYWxsIHVzZSBpZnJhbWUsIHNlcnZlZCBmcm9tIHRoZVxuLy8gcmVtb3RlIGRvbWFpbi4gTmV3IGJyb3dzZXJzIGhhdmUgY2FwYWJpbGl0aWVzIHRvIGNvbW11bmljYXRlIHdpdGhcbi8vIGNyb3NzIGRvbWFpbiBpZnJhbWUgdXNpbmcgcG9zdE1lc3NhZ2UoKS4gSW4gSUUgaXQgd2FzIGltcGxlbWVudGVkXG4vLyBmcm9tIElFIDgrLCBidXQgb2YgY291cnNlLCBJRSBnb3Qgc29tZSBkZXRhaWxzIHdyb25nOlxuLy8gICAgaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2NjMTk3MDE1KHY9VlMuODUpLmFzcHhcbi8vICAgIGh0dHA6Ly9zdGV2ZXNvdWRlcnMuY29tL21pc2MvdGVzdC1wb3N0bWVzc2FnZS5waHBcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIHZlcnNpb24gPSByZXF1aXJlKCcuLi92ZXJzaW9uJylcbiAgLCB1cmxVdGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzL3VybCcpXG4gICwgaWZyYW1lVXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy9pZnJhbWUnKVxuICAsIGV2ZW50VXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy9ldmVudCcpXG4gICwgcmFuZG9tID0gcmVxdWlyZSgnLi4vdXRpbHMvcmFuZG9tJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OnRyYW5zcG9ydDppZnJhbWUnKTtcbn1cblxuZnVuY3Rpb24gSWZyYW1lVHJhbnNwb3J0KHRyYW5zcG9ydCwgdHJhbnNVcmwsIGJhc2VVcmwpIHtcbiAgaWYgKCFJZnJhbWVUcmFuc3BvcnQuZW5hYmxlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG5cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB0aGlzLm9yaWdpbiA9IHVybFV0aWxzLmdldE9yaWdpbihiYXNlVXJsKTtcbiAgdGhpcy5iYXNlVXJsID0gYmFzZVVybDtcbiAgdGhpcy50cmFuc1VybCA9IHRyYW5zVXJsO1xuICB0aGlzLnRyYW5zcG9ydCA9IHRyYW5zcG9ydDtcbiAgdGhpcy53aW5kb3dJZCA9IHJhbmRvbS5zdHJpbmcoOCk7XG5cbiAgdmFyIGlmcmFtZVVybCA9IHVybFV0aWxzLmFkZFBhdGgoYmFzZVVybCwgJy9pZnJhbWUuaHRtbCcpICsgJyMnICsgdGhpcy53aW5kb3dJZDtcbiAgZGVidWcodHJhbnNwb3J0LCB0cmFuc1VybCwgaWZyYW1lVXJsKTtcblxuICB0aGlzLmlmcmFtZU9iaiA9IGlmcmFtZVV0aWxzLmNyZWF0ZUlmcmFtZShpZnJhbWVVcmwsIGZ1bmN0aW9uKHIpIHtcbiAgICBkZWJ1ZygnZXJyIGNhbGxiYWNrJyk7XG4gICAgc2VsZi5lbWl0KCdjbG9zZScsIDEwMDYsICdVbmFibGUgdG8gbG9hZCBhbiBpZnJhbWUgKCcgKyByICsgJyknKTtcbiAgICBzZWxmLmNsb3NlKCk7XG4gIH0pO1xuXG4gIHRoaXMub25tZXNzYWdlQ2FsbGJhY2sgPSB0aGlzLl9tZXNzYWdlLmJpbmQodGhpcyk7XG4gIGV2ZW50VXRpbHMuYXR0YWNoRXZlbnQoJ21lc3NhZ2UnLCB0aGlzLm9ubWVzc2FnZUNhbGxiYWNrKTtcbn1cblxuaW5oZXJpdHMoSWZyYW1lVHJhbnNwb3J0LCBFdmVudEVtaXR0ZXIpO1xuXG5JZnJhbWVUcmFuc3BvcnQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbG9zZScpO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICBpZiAodGhpcy5pZnJhbWVPYmopIHtcbiAgICBldmVudFV0aWxzLmRldGFjaEV2ZW50KCdtZXNzYWdlJywgdGhpcy5vbm1lc3NhZ2VDYWxsYmFjayk7XG4gICAgdHJ5IHtcbiAgICAgIC8vIFdoZW4gdGhlIGlmcmFtZSBpcyBub3QgbG9hZGVkLCBJRSByYWlzZXMgYW4gZXhjZXB0aW9uXG4gICAgICAvLyBvbiAnY29udGVudFdpbmRvdycuXG4gICAgICB0aGlzLnBvc3RNZXNzYWdlKCdjJyk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgICB0aGlzLmlmcmFtZU9iai5jbGVhbnVwKCk7XG4gICAgdGhpcy5pZnJhbWVPYmogPSBudWxsO1xuICAgIHRoaXMub25tZXNzYWdlQ2FsbGJhY2sgPSB0aGlzLmlmcmFtZU9iaiA9IG51bGw7XG4gIH1cbn07XG5cbklmcmFtZVRyYW5zcG9ydC5wcm90b3R5cGUuX21lc3NhZ2UgPSBmdW5jdGlvbihlKSB7XG4gIGRlYnVnKCdtZXNzYWdlJywgZS5kYXRhKTtcbiAgaWYgKCF1cmxVdGlscy5pc09yaWdpbkVxdWFsKGUub3JpZ2luLCB0aGlzLm9yaWdpbikpIHtcbiAgICBkZWJ1Zygnbm90IHNhbWUgb3JpZ2luJywgZS5vcmlnaW4sIHRoaXMub3JpZ2luKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgaWZyYW1lTWVzc2FnZTtcbiAgdHJ5IHtcbiAgICBpZnJhbWVNZXNzYWdlID0gSlNPTjMucGFyc2UoZS5kYXRhKTtcbiAgfSBjYXRjaCAoaWdub3JlZCkge1xuICAgIGRlYnVnKCdiYWQganNvbicsIGUuZGF0YSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGlmcmFtZU1lc3NhZ2Uud2luZG93SWQgIT09IHRoaXMud2luZG93SWQpIHtcbiAgICBkZWJ1ZygnbWlzbWF0Y2hlZCB3aW5kb3cgaWQnLCBpZnJhbWVNZXNzYWdlLndpbmRvd0lkLCB0aGlzLndpbmRvd0lkKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBzd2l0Y2ggKGlmcmFtZU1lc3NhZ2UudHlwZSkge1xuICBjYXNlICdzJzpcbiAgICB0aGlzLmlmcmFtZU9iai5sb2FkZWQoKTtcbiAgICAvLyB3aW5kb3cgZ2xvYmFsIGRlcGVuZGVuY3lcbiAgICB0aGlzLnBvc3RNZXNzYWdlKCdzJywgSlNPTjMuc3RyaW5naWZ5KFtcbiAgICAgIHZlcnNpb25cbiAgICAsIHRoaXMudHJhbnNwb3J0XG4gICAgLCB0aGlzLnRyYW5zVXJsXG4gICAgLCB0aGlzLmJhc2VVcmxcbiAgICBdKSk7XG4gICAgYnJlYWs7XG4gIGNhc2UgJ3QnOlxuICAgIHRoaXMuZW1pdCgnbWVzc2FnZScsIGlmcmFtZU1lc3NhZ2UuZGF0YSk7XG4gICAgYnJlYWs7XG4gIGNhc2UgJ2MnOlxuICAgIHZhciBjZGF0YTtcbiAgICB0cnkge1xuICAgICAgY2RhdGEgPSBKU09OMy5wYXJzZShpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgIH0gY2F0Y2ggKGlnbm9yZWQpIHtcbiAgICAgIGRlYnVnKCdiYWQganNvbicsIGlmcmFtZU1lc3NhZ2UuZGF0YSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZW1pdCgnY2xvc2UnLCBjZGF0YVswXSwgY2RhdGFbMV0pO1xuICAgIHRoaXMuY2xvc2UoKTtcbiAgICBicmVhaztcbiAgfVxufTtcblxuSWZyYW1lVHJhbnNwb3J0LnByb3RvdHlwZS5wb3N0TWVzc2FnZSA9IGZ1bmN0aW9uKHR5cGUsIGRhdGEpIHtcbiAgZGVidWcoJ3Bvc3RNZXNzYWdlJywgdHlwZSwgZGF0YSk7XG4gIHRoaXMuaWZyYW1lT2JqLnBvc3QoSlNPTjMuc3RyaW5naWZ5KHtcbiAgICB3aW5kb3dJZDogdGhpcy53aW5kb3dJZFxuICAsIHR5cGU6IHR5cGVcbiAgLCBkYXRhOiBkYXRhIHx8ICcnXG4gIH0pLCB0aGlzLm9yaWdpbik7XG59O1xuXG5JZnJhbWVUcmFuc3BvcnQucHJvdG90eXBlLnNlbmQgPSBmdW5jdGlvbihtZXNzYWdlKSB7XG4gIGRlYnVnKCdzZW5kJywgbWVzc2FnZSk7XG4gIHRoaXMucG9zdE1lc3NhZ2UoJ20nLCBtZXNzYWdlKTtcbn07XG5cbklmcmFtZVRyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBpZnJhbWVVdGlscy5pZnJhbWVFbmFibGVkO1xufTtcblxuSWZyYW1lVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAnaWZyYW1lJztcbklmcmFtZVRyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjtcblxubW9kdWxlLmV4cG9ydHMgPSBJZnJhbWVUcmFuc3BvcnQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvaWZyYW1lLmpzXG4vLyBtb2R1bGUgaWQgPSAyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26\n");

/***/ }),
/* 27 */
/***/ (function(module, exports) {

eval("module.exports = '1.0.3';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdmVyc2lvbi5qcz80ODE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSAnMS4wLjMnO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3ZlcnNpb24uanNcbi8vIG1vZHVsZSBpZCA9IDI3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///27\n");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , HtmlfileReceiver = __webpack_require__(50)\n  , XHRLocalObject = __webpack_require__(10)\n  , AjaxBasedTransport = __webpack_require__(9)\n  ;\n\nfunction HtmlFileTransport(transUrl) {\n  if (!HtmlfileReceiver.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);\n}\n\ninherits(HtmlFileTransport, AjaxBasedTransport);\n\nHtmlFileTransport.enabled = function(info) {\n  return HtmlfileReceiver.enabled && info.sameOrigin;\n};\n\nHtmlFileTransport.transportName = 'htmlfile';\nHtmlFileTransport.roundTrips = 2;\n\nmodule.exports = HtmlFileTransport;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2h0bWxmaWxlLmpzPzBhMTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBIdG1sZmlsZVJlY2VpdmVyID0gcmVxdWlyZSgnLi9yZWNlaXZlci9odG1sZmlsZScpXG4gICwgWEhSTG9jYWxPYmplY3QgPSByZXF1aXJlKCcuL3NlbmRlci94aHItbG9jYWwnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICA7XG5cbmZ1bmN0aW9uIEh0bWxGaWxlVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghSHRtbGZpbGVSZWNlaXZlci5lbmFibGVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc3BvcnQgY3JlYXRlZCB3aGVuIGRpc2FibGVkJyk7XG4gIH1cbiAgQWpheEJhc2VkVHJhbnNwb3J0LmNhbGwodGhpcywgdHJhbnNVcmwsICcvaHRtbGZpbGUnLCBIdG1sZmlsZVJlY2VpdmVyLCBYSFJMb2NhbE9iamVjdCk7XG59XG5cbmluaGVyaXRzKEh0bWxGaWxlVHJhbnNwb3J0LCBBamF4QmFzZWRUcmFuc3BvcnQpO1xuXG5IdG1sRmlsZVRyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oaW5mbykge1xuICByZXR1cm4gSHRtbGZpbGVSZWNlaXZlci5lbmFibGVkICYmIGluZm8uc2FtZU9yaWdpbjtcbn07XG5cbkh0bWxGaWxlVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAnaHRtbGZpbGUnO1xuSHRtbEZpbGVUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7XG5cbm1vZHVsZS5leHBvcnRzID0gSHRtbEZpbGVUcmFuc3BvcnQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvaHRtbGZpbGUuanNcbi8vIG1vZHVsZSBpZCA9IDI4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , AjaxBasedTransport = __webpack_require__(9)\n  , XhrReceiver = __webpack_require__(13)\n  , XHRCorsObject = __webpack_require__(14)\n  , XHRLocalObject = __webpack_require__(10)\n  ;\n\nfunction XhrPollingTransport(transUrl) {\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);\n}\n\ninherits(XhrPollingTransport, AjaxBasedTransport);\n\nXhrPollingTransport.enabled = function(info) {\n  if (info.nullOrigin) {\n    return false;\n  }\n\n  if (XHRLocalObject.enabled && info.sameOrigin) {\n    return true;\n  }\n  return XHRCorsObject.enabled;\n};\n\nXhrPollingTransport.transportName = 'xhr-polling';\nXhrPollingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XhrPollingTransport;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3hoci1wb2xsaW5nLmpzPzlkNTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUNBQW1DOztBQUVuQyIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICAsIFhoclJlY2VpdmVyID0gcmVxdWlyZSgnLi9yZWNlaXZlci94aHInKVxuICAsIFhIUkNvcnNPYmplY3QgPSByZXF1aXJlKCcuL3NlbmRlci94aHItY29ycycpXG4gICwgWEhSTG9jYWxPYmplY3QgPSByZXF1aXJlKCcuL3NlbmRlci94aHItbG9jYWwnKVxuICA7XG5cbmZ1bmN0aW9uIFhoclBvbGxpbmdUcmFuc3BvcnQodHJhbnNVcmwpIHtcbiAgaWYgKCFYSFJMb2NhbE9iamVjdC5lbmFibGVkICYmICFYSFJDb3JzT2JqZWN0LmVuYWJsZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBjcmVhdGVkIHdoZW4gZGlzYWJsZWQnKTtcbiAgfVxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy94aHInLCBYaHJSZWNlaXZlciwgWEhSQ29yc09iamVjdCk7XG59XG5cbmluaGVyaXRzKFhoclBvbGxpbmdUcmFuc3BvcnQsIEFqYXhCYXNlZFRyYW5zcG9ydCk7XG5cblhoclBvbGxpbmdUcmFuc3BvcnQuZW5hYmxlZCA9IGZ1bmN0aW9uKGluZm8pIHtcbiAgaWYgKGluZm8ubnVsbE9yaWdpbikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChYSFJMb2NhbE9iamVjdC5lbmFibGVkICYmIGluZm8uc2FtZU9yaWdpbikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBYSFJDb3JzT2JqZWN0LmVuYWJsZWQ7XG59O1xuXG5YaHJQb2xsaW5nVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAneGhyLXBvbGxpbmcnO1xuWGhyUG9sbGluZ1RyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjsgLy8gcHJlZmxpZ2h0LCBhamF4XG5cbm1vZHVsZS5leHBvcnRzID0gWGhyUG9sbGluZ1RyYW5zcG9ydDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC94aHItcG9sbGluZy5qc1xuLy8gbW9kdWxlIGlkID0gMjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nmodule.exports = global.location || {\n  origin: 'http://localhost:80'\n, protocol: 'http'\n, host: 'localhost'\n, port: 80\n, href: 'http://localhost/'\n, hash: ''\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvbG9jYXRpb24uanM/YmZhYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOENBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIzMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBnbG9iYWwubG9jYXRpb24gfHwge1xuICBvcmlnaW46ICdodHRwOi8vbG9jYWxob3N0OjgwJ1xuLCBwcm90b2NvbDogJ2h0dHAnXG4sIGhvc3Q6ICdsb2NhbGhvc3QnXG4sIHBvcnQ6IDgwXG4sIGhyZWY6ICdodHRwOi8vbG9jYWxob3N0LydcbiwgaGFzaDogJydcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9sb2NhdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gMzBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///30\n");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , JSON3 = __webpack_require__(6)\n  , XHRLocalObject = __webpack_require__(10)\n  , InfoAjax = __webpack_require__(32)\n  ;\n\nfunction InfoReceiverIframe(transUrl) {\n  var self = this;\n  EventEmitter.call(this);\n\n  this.ir = new InfoAjax(transUrl, XHRLocalObject);\n  this.ir.once('finish', function(info, rtt) {\n    self.ir = null;\n    self.emit('message', JSON3.stringify([info, rtt]));\n  });\n}\n\ninherits(InfoReceiverIframe, EventEmitter);\n\nInfoReceiverIframe.transportName = 'iframe-info-receiver';\n\nInfoReceiverIframe.prototype.close = function() {\n  if (this.ir) {\n    this.ir.close();\n    this.ir = null;\n  }\n  this.removeAllListeners();\n};\n\nmodule.exports = InfoReceiverIframe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvaW5mby1pZnJhbWUtcmVjZWl2ZXIuanM/Mjc5NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpXG4gICwgWEhSTG9jYWxPYmplY3QgPSByZXF1aXJlKCcuL3RyYW5zcG9ydC9zZW5kZXIveGhyLWxvY2FsJylcbiAgLCBJbmZvQWpheCA9IHJlcXVpcmUoJy4vaW5mby1hamF4JylcbiAgO1xuXG5mdW5jdGlvbiBJbmZvUmVjZWl2ZXJJZnJhbWUodHJhbnNVcmwpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB0aGlzLmlyID0gbmV3IEluZm9BamF4KHRyYW5zVXJsLCBYSFJMb2NhbE9iamVjdCk7XG4gIHRoaXMuaXIub25jZSgnZmluaXNoJywgZnVuY3Rpb24oaW5mbywgcnR0KSB7XG4gICAgc2VsZi5pciA9IG51bGw7XG4gICAgc2VsZi5lbWl0KCdtZXNzYWdlJywgSlNPTjMuc3RyaW5naWZ5KFtpbmZvLCBydHRdKSk7XG4gIH0pO1xufVxuXG5pbmhlcml0cyhJbmZvUmVjZWl2ZXJJZnJhbWUsIEV2ZW50RW1pdHRlcik7XG5cbkluZm9SZWNlaXZlcklmcmFtZS50cmFuc3BvcnROYW1lID0gJ2lmcmFtZS1pbmZvLXJlY2VpdmVyJztcblxuSW5mb1JlY2VpdmVySWZyYW1lLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5pcikge1xuICAgIHRoaXMuaXIuY2xvc2UoKTtcbiAgICB0aGlzLmlyID0gbnVsbDtcbiAgfVxuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbmZvUmVjZWl2ZXJJZnJhbWU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9pbmZvLWlmcmFtZS1yZWNlaXZlci5qc1xuLy8gbW9kdWxlIGlkID0gMzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///31\n");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(0)\n  , JSON3 = __webpack_require__(6)\n  , objectUtils = __webpack_require__(17)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:info-ajax');\n}\n\nfunction InfoAjax(url, AjaxObject) {\n  EventEmitter.call(this);\n\n  var self = this;\n  var t0 = +new Date();\n  this.xo = new AjaxObject('GET', url);\n\n  this.xo.once('finish', function(status, text) {\n    var info, rtt;\n    if (status === 200) {\n      rtt = (+new Date()) - t0;\n      if (text) {\n        try {\n          info = JSON3.parse(text);\n        } catch (e) {\n          debug('bad json', text);\n        }\n      }\n\n      if (!objectUtils.isObject(info)) {\n        info = {};\n      }\n    }\n    self.emit('finish', info, rtt);\n    self.removeAllListeners();\n  });\n}\n\ninherits(InfoAjax, EventEmitter);\n\nInfoAjax.prototype.close = function() {\n  this.removeAllListeners();\n  this.xo.close();\n};\n\nmodule.exports = InfoAjax;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvaW5mby1hamF4LmpzPzgxN2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IitDQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKVxuICAsIG9iamVjdFV0aWxzID0gcmVxdWlyZSgnLi91dGlscy9vYmplY3QnKVxuICA7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6aW5mby1hamF4Jyk7XG59XG5cbmZ1bmN0aW9uIEluZm9BamF4KHVybCwgQWpheE9iamVjdCkge1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciB0MCA9ICtuZXcgRGF0ZSgpO1xuICB0aGlzLnhvID0gbmV3IEFqYXhPYmplY3QoJ0dFVCcsIHVybCk7XG5cbiAgdGhpcy54by5vbmNlKCdmaW5pc2gnLCBmdW5jdGlvbihzdGF0dXMsIHRleHQpIHtcbiAgICB2YXIgaW5mbywgcnR0O1xuICAgIGlmIChzdGF0dXMgPT09IDIwMCkge1xuICAgICAgcnR0ID0gKCtuZXcgRGF0ZSgpKSAtIHQwO1xuICAgICAgaWYgKHRleHQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpbmZvID0gSlNPTjMucGFyc2UodGV4dCk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBkZWJ1ZygnYmFkIGpzb24nLCB0ZXh0KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoIW9iamVjdFV0aWxzLmlzT2JqZWN0KGluZm8pKSB7XG4gICAgICAgIGluZm8gPSB7fTtcbiAgICAgIH1cbiAgICB9XG4gICAgc2VsZi5lbWl0KCdmaW5pc2gnLCBpbmZvLCBydHQpO1xuICAgIHNlbGYucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIH0pO1xufVxuXG5pbmhlcml0cyhJbmZvQWpheCwgRXZlbnRFbWl0dGVyKTtcblxuSW5mb0FqYXgucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIHRoaXMueG8uY2xvc2UoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW5mb0FqYXg7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9pbmZvLWFqYXguanNcbi8vIG1vZHVsZSBpZCA9IDMyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///32\n");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Copyright 2016 PT Inovação e Sistemas SA\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Copyright 2016 INESC-ID\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Copyright 2016 QUOBIS NETWORKS SL\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Copyright 2016 ORANGE SA\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Copyright 2016 Deutsche Telekom AG\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Copyright 2016 Apizee\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Licensed under the Apache License, Version 2.0 (the \"License\");\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * you may not use this file except in compliance with the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * You may obtain a copy of the License at\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     *   http://www.apache.org/licenses/LICENSE-2.0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * Unless required by applicable law or agreed to in writing, software\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * distributed under the License is distributed on an \"AS IS\" BASIS,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * See the License for the specific language governing permissions and\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     * limitations under the License.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **/\n\n\nexports.default = activate;\n\nvar _vertx3EventbusClient = __webpack_require__(34);\n\nvar _vertx3EventbusClient2 = _interopRequireDefault(_vertx3EventbusClient);\n\nvar _WalletManager = __webpack_require__(67);\n\nvar _Syncher = __webpack_require__(68);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VertxAppProtoStub = function () {\n  /**\n   * Vertx ProtoStub creation\n   * @param  {string} runtimeProtoStubURL - URL used internally for message delivery point. Not used for MessageNode deliver.\n   * @param  {MiniBus} bus - MiniBus used to send/receive messages. Normally connected to the MessageBus.\n   * @param  {Object} config - Mandatory fields are: \"url\" of the MessageNode address and \"runtimeURL\".\n   * @return {VertxAppProtoStub}\n   */\n  function VertxAppProtoStub(runtimeProtoStubURL, bus, config) {\n    _classCallCheck(this, VertxAppProtoStub);\n\n    if (!runtimeProtoStubURL) throw new Error('The runtimeProtoStubURL is a needed parameter');\n    if (!bus) throw new Error('The bus is a needed parameter');\n    if (!config) throw new Error('The config is a needed parameter');\n\n    if (!config.url) throw new Error('The config.url is a needed parameter');\n    if (!config.runtimeURL) throw new Error('The config.runtimeURL is a needed parameter');\n\n    //https://vertx-runtime.hysmart.rethink.ptinovacao.pt/eventbus\n\n    var _this = this;\n    console.log(\"[VertxAppProtoStub] VERTX APP PROTOSTUB\", _this, _vertx3EventbusClient2.default);\n\n    console.log(\"[VertxAppProtoStub] VERTX APP PROTOSTUB eb\", _vertx3EventbusClient2.default);\n\n    this._id = 0;\n\n    this._runtimeProtoStubURL = runtimeProtoStubURL;\n    this._bus = bus;\n    this._config = config;\n    this._domain = config.domain;\n    this._streams = config.streams;\n    this._publicWallets = config.publicWallets;\n\n    this._runtimeSessionURL = config.runtimeURL;\n\n    this._syncher = new _Syncher.Syncher(this._runtimeProtoStubURL, this._bus, this._config);\n    this._walletReporter = new _WalletManager.WalletReporter(this._runtimeProtoStubURL, this._bus, this._config, this._syncher);\n    console.log('[VertxAppProtoStub] this._contextReporter', this._contextReporter);\n    this._eb = null;\n    this._walletReporterDataObject = null;\n    this._publicWalletsReporterDataObject = null;\n    this._alreadyListening = [];\n    this._dataObjectsURL = {};\n\n    _this._sendStatus('created');\n\n    // used to save data of each observer saving data and timestamp to publish to vertx\n    _this._dataObservers = {};\n\n    //used to save identity of each stream url\n    _this._dataStreamIdentity = {};\n\n    //used to save data of each stream url\n    _this._dataStreamData = {};\n\n    //used to save hypertyWallet of each AddressWallet\n    _this._hypertyWalletAddress = {};\n\n    //used to save contextUrl of vertxRemote Stream\n    _this._contextUrlToRemoveStream = {};\n\n    //Listener to accept subscribe request of ContextReporters\n    bus.addListener('domain://msg-node.sharing-cities-dsm/sm', function (msg) {\n      console.log('[VertxAppProtoStub] Message on (domain://msg-node.sharing-cities-dsm/sm) : ', msg);\n      var msgResponse = {\n        id: msg.id,\n        type: 'response',\n        from: msg.to,\n        to: msg.from,\n        body: {\n          code: 200\n        }\n      };\n      _this._bus.postMessage(msgResponse);\n    });\n\n    bus.addListener('*', function (msg) {\n      console.log('[VertxAppProtoStub] Message ', msg, _this._eb, JSON.stringify(_this._dataStreamIdentity));\n\n      if (_this._eb === null) {\n        _this._eb = new _vertx3EventbusClient2.default(config.url, { \"vertxbus_ping_interval\": config.vertxbus_ping_interval });\n        console.log('[VertxAppProtoStub] Eventbus', _this._eb);\n        var test = _this._eb.enableReconnect(true);\n        console.log('[VertxAppProtoStub]', test);\n        _this._eventBusUsage().then(function (result) {\n          console.log('[VertxAppProtoStub] Message _eventBusUsage', result);\n          if (result) {\n            _this._SubscriptionManager(msg);\n          }\n        });\n      } else {\n        var waitForEB = function waitForEB() {\n          console.log('[VertxAppProtoStub] Waiting for SockJS readyState', _this._eb.sockJSConn.readyState, '(', WebSocket.OPEN, ')');\n          if (WebSocket.OPEN === _this._eb.sockJSConn.readyState) {\n            _this._SubscriptionManager(msg);\n            clearTimeout(_timer);\n          }\n        };\n\n        var _timer = setTimeout(waitForEB, 2000);\n      }\n    });\n  }\n\n  _createClass(VertxAppProtoStub, [{\n    key: 'createWallet',\n    value: function createWallet(msg) {\n      var _this = this;\n      var walletManagerAddress = msg.to;\n\n      // 1 - send to wallet manager (request to create wallet)\n      var hypertyURL = msg.from;\n      msg.type = msg.body.type;\n      msg.from = hypertyURL;\n      delete msg.body;\n\n      _this._eb.send(walletManagerAddress, msg, function (reply_err, reply) {\n\n        if (reply_err == null) {\n          //  2 - call create() method on reporter (send as reply)\n          console.log(\"[VertxAppProtoStub] Received reply \", reply, '\\nfrom msg', msg);\n\n          _this._setUpReporter(reply.body.identity.userProfile.userURL, null, { balance: 0, transactions: [] }, ['wallet'], reply.body.identity.userProfile.userURL, null, true).then(function (result) {\n\n            if (result != null) {\n\n              // TODO 3 - send 200 OK to wallet manager\n              var responseMsg = {};\n              responseMsg.body = {};\n              responseMsg.body.value = result.data;\n              responseMsg.body.code = 200;\n\n              reply.reply(responseMsg, function (reply_err, reply2) {\n\n                // 4 - send reply back to the JS wallet hyperty\n                console.log;\n                var responseMsg = {\n                  id: msg.id,\n                  type: 'response',\n                  from: msg.to,\n                  to: hypertyURL,\n                  body: {\n                    wallet: reply2.body.wallet,\n                    code: 200,\n                    reporter_url: result.url,\n                    publics_url: _this._publicWalletsReporterDataObject.url\n                  }\n                };\n                console.log('[VertxAppProtoStub] wallet returned from vertx', reply2.body.wallet);\n                if (reply2.body.wallet.balance != 0) {\n                  var balance1 = JSON.parse(JSON.stringify(reply2.body.wallet.balance));\n                  _this._walletReporterDataObject.data.balance = balance1;\n                }\n\n                var transactions = JSON.parse(JSON.stringify(reply2.body.wallet.transactions));\n                _this._walletReporterDataObject.data.transactions = transactions;\n                var addressChanges = reply2.body.wallet.address + '/changes';\n\n                _this._eb.registerHandler(addressChanges, function (error, message) {\n                  console.log('[VertxAppProtoStub]  new change on wallet', message);\n                  _this._walletReporterDataObject.data.balance = message.body.body.balance;\n                  _this._walletReporterDataObject.data.transactions = message.body.body.transactions;\n                });\n\n                console.log('[VertxAppProtoStub] sending reply back to wallet JS', responseMsg);\n\n                _this._bus.postMessage(responseMsg);\n              });\n            }\n          }).catch(function (result) {\n            //debugger;\n          });\n        }\n      });\n    }\n  }, {\n    key: 'createWalletPub',\n    value: function createWalletPub(msg) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n\n        var walletManagerAddress = msg.to;\n        // 1 - send to wallet manager (request to create wallet)\n        var hypertyURL = msg.from;\n        msg.type = msg.body.type;\n        msg.from = hypertyURL;\n        delete msg.body;\n\n        _this._eb.send(walletManagerAddress, msg, function (reply_err, reply) {\n\n          if (reply_err == null) {\n            //  2 - call create() method on reporter (send as reply)\n            console.log(\"[VertxAppProtoStub] Received reply \", reply, '\\nfrom msg', msg);\n\n            _this._setUpReporter(reply.body.identity.userProfile.userURL, null, { wallets: [] }, ['wallet'], reply.body.identity.userProfile.userURL, null, true, true).then(function (result) {\n\n              if (result != null) {\n\n                // TODO 3 - send 200 OK to wallet manager\n                var responseMsg = {};\n                responseMsg.body = {};\n                responseMsg.body.value = result.data;\n                responseMsg.body.code = 200;\n\n                reply.reply(responseMsg, function (reply_err, reply2) {\n\n                  // 4 - send reply back to the JS wallet hyperty\n\n                  console.log('[VertxAppProtoStub] wallet returned from vertx', reply2.body.wallet);\n\n                  _this._publicWalletsReporterDataObject.data.wallets = reply2.body.wallet.wallets;\n                  _this._eb.registerHandler('wallet://public-wallets/changes', function (error, message) {\n                    console.log('[VertxAppProtoStub]  new change on wallet', message);\n                    _this._publicWalletsReporterDataObject.data.wallets = message.body.body.wallets;\n                  });\n\n                  console.log('[VertxAppProtoStub] sending reply back to wallet JS', responseMsg);\n                  resolve(true);\n                });\n              }\n            }).catch(function (result) {\n              //debugger;\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: '_SubscriptionManager',\n    value: function _SubscriptionManager(msg) {\n      console.log('[VertxAppProtoStub] handling messages', msg);\n      var _this = this;\n      if (msg.hasOwnProperty('body') && msg.body.hasOwnProperty('type')) {\n\n        // To Handle Message read type to get for example shops List\n        if (msg.body.type === 'read') {\n          //debugger;\n          console.log('[VertxAppProtoStub]  New Read Message', _this._dataStreamData, JSON.stringify(_this._dataStreamData[msg.to]));\n          var responseMsg = {\n            from: msg.to,\n            to: msg.from,\n            id: msg.id,\n            type: 'response'\n          };\n          responseMsg.body = {};\n\n          responseMsg.body.value = JSON.parse(JSON.stringify(_this._dataStreamData[msg.to]));\n          //responseMsg.body.value = _this._dataStreamData[msg.to];\n          responseMsg.body.code = 200;\n          _this._bus.postMessage(responseMsg);\n        }\n\n        if (msg.body.type === 'create') {\n          if (msg.body.resource == 'wallet') {\n            _this.createWallet(msg);\n          } else {\n            _this.smartIotIntegration(msg);\n          }\n        } else if (msg.body.type === 'delete') {\n          _this.smartIotIntegration(msg);\n        }\n      } else if (msg.type === 'create' && msg.from.includes('/subscription')) {\n        console.log('[VertxAppProtoStub] TO INVITE MSG', msg);\n\n        // handle message subscribe before invite Vertx\n        _this._eb.registerHandler(msg.from, function (error, messageFROMsubscription) {\n\n          console.log('[VertxAppProtoStub] subscription message: ', messageFROMsubscription);\n          var messageToSubscribe = messageFROMsubscription.body;\n          if (messageToSubscribe.to.includes('/subscription')) {\n            var schema_url = 'hyperty-catalogue://catalogue.' + _this._domain + '/.well-known/dataschema/Context';\n            var contextUrl = messageToSubscribe.to.split(\"/subscription\")[0];\n\n            // should resume observers, if dont have go to _setUpObserver\n\n            _this._resumeObservers(contextUrl).then(function (result) {\n              if (result == false) {\n                _this._setUpObserver(messageToSubscribe.body.identity, contextUrl, schema_url).then(function (result) {\n                  if (result) {\n                    var response = { body: { code: 200 } };\n                    messageFROMsubscription.reply(response);\n                  } else {\n                    var _response = { body: { code: 406 } };\n                    messageFROMsubscription.reply(_response);\n                  }\n                });\n              } else {\n                var changesAddress = result.url + \"/changes\";\n                _this._alreadyListening.push(changesAddress);\n                _this._bus.addListener(changesAddress, function (event) {\n                  _this._eb.send(event.to, event.body.value, function (reply_err, reply) {\n                    if (reply_err == null) {\n                      console.log(\"[VertxAppProtoStub] Received reply from change \", reply);\n                    }\n                  });\n                });\n                var response = { body: { code: 200 } };\n                messageFROMsubscription.reply(response);\n              }\n            }).catch(function (error) {\n              //debugger;\n            });\n\n            _this._setUpObserver(messageToSubscribe.body.identity, contextUrl, schema_url).then(function (result) {\n              if (result) {\n                var response = { body: { code: 200 } };\n                messageFROMsubscription.reply(response);\n              } else {\n                var _response2 = { body: { code: 406 } };\n                messageFROMsubscription.reply(_response2);\n              }\n            });\n          }\n        });\n\n        // check if identity exists\n\n        //Message to invite Vertx to Subscribe a Reporter\n        var userURL = void 0;\n        var guid = void 0;\n        if (msg.body.identity) {\n          userURL = msg.body.identity.userProfile.userURL;\n          guid = msg.body.identity.userProfile.guid;\n        } else {\n          userURL = msg.body.value.reporter;\n        }\n        var inviteMessage = {\n          type: 'create',\n          from: msg.from,\n          to: msg.to,\n          identity: { userProfile: { userURL: userURL, guid: guid } }\n          //Invite Vertx to subscribe...\n        };_this._eb.publish(msg.to, inviteMessage);\n\n        var msgResponse = {\n          id: msg.id,\n          type: 'response',\n          from: msg.to,\n          to: msg.from,\n          body: {\n            code: 200\n          }\n        };\n        _this._bus.postMessage(msgResponse);\n      } else if (msg.to.includes('/changes') && !_this._alreadyListening.includes(msg.to)) {\n        console.log('[VertxAppProtoStub] new change ', msg);\n        _this._eb.publish(msg.to, msg.body.value, function (reply_err, reply) {\n          if (reply_err == null) {\n            console.log(\"[VertxAppProtoStub] Received reply from change \", reply);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'smartIotIntegration',\n    value: function smartIotIntegration(msg) {\n\n      var _this = this;\n      var smartIotStubAddress = msg.to;\n\n      msg.type = msg.body.type;\n      delete msg.body.from;\n      delete msg.body.type;\n\n      _this._eb.send(smartIotStubAddress, msg, function (reply_err, reply) {\n        console.log('[VertxAppProtoStub] smartIot Integration', reply, reply_err);\n        if (reply_err == null) {\n\n          _this._sendReplyMsg(msg, reply.body.body);\n          /*\n          if (msg.body.resource == 'device') {\n            _this._sendReplyMsg(msg,reply.body.body);\n          } else if (msg.body.resource == 'stream') {\n             if (reply.body.body.code == 200) {\n              let objUrl = 'context://sharing-cities-dsm/' + msg.body.platformID + '/' + msg.body.platformUID;\n              let schemaURL = 'hyperty-catalogue://catalogue.' + _this._domain + '/.well-known/dataschema/Context';\n              let onChangesObjURL = objUrl + '/changes';\n               //TODO: we should save reporter->url? to associate it??!\n              _this._eb.registerHandler(onChangesObjURL, function (error, message) {\n                console.log('[VertxAppProtoStub] received a new change: ', JSON.stringify(message), _this._dataObjectsURL);\n                //TODO new data on reporter,, to update?\n              });\n              _this._resumeReporters(objUrl, msg.identity.userProfile.userURL).then(function (reporterResumed) {\n              console.log('[VertxAppProtoStub] reporter resumed', reporterResumed );\n              if (reporterResumed != false) {\n                 _this._dataObjectsURL[reporterResumed.url] = reporterResumed;\n                   reporterResumed.onSubscription(function (event) {\n                  event.accept();\n                  console.log('[VertxAppProtoStub] new subs', event);\n                });\n                _this._sendReplyMsg(msg,reply.body.body);\n              } else {\n                _this._setUpReporter(msg.identity.userProfile.userURL, schemaURL, {}, ['smartiot_context'], objUrl, objUrl, false).then(function (result) {\n                  _this._dataObjectsURL[result.url] = result;\n                  result.onSubscription(function (event) {\n                    event.accept();\n                    console.log('[VertxAppProtoStub] new subs', event);\n                  });\n                  _this._sendReplyMsg(msg,reply.body.body);\n                 }).catch(function (result) {\n                  debugger;\n                });\n              }\n               }).catch(function (error) {\n              debugger;\n            });\n             }\n          }\n          */\n        } else {\n          console.log('[VertxAppProtoStub] no reply', msg);\n        }\n      });\n    }\n  }, {\n    key: '_sendReplyMsg',\n    value: function _sendReplyMsg(msg, body) {\n      var _this = this;\n\n      var responseMsg = {\n        id: msg.id,\n        type: 'response',\n        from: msg.to,\n        to: msg.from,\n        body: body\n      };\n      console.log('[VertxAppProtoStub] sending reply back to Device Manager', responseMsg);\n      _this._bus.postMessage(responseMsg);\n    }\n  }, {\n    key: '_configAvailableStreams',\n    value: function _configAvailableStreams() {\n      var _this = this;\n      return new Promise(function (resolve) {\n        console.log('[VertxAppProtoStub] EB on readyState(OPEN) Streams', _this._streams);\n        var count = 0;\n        _this._streams.forEach(function (stream) {\n          console.log('[VertxAppProtoStub] Stream', stream, _this._eb.sockJSConn.readyState);\n          var msg = { type: 'read' };\n\n          _this._eb.send(stream.stream, msg, function (reply_err, reply) {\n            if (reply_err == null) {\n\n              count++;\n              console.log(\"[VertxAppProtoStub] Received reply \", reply.body);\n\n              _this._dataStreamIdentity[stream.stream] = reply.body.identity;\n              _this._dataStreamData[stream.stream] = reply.body.data;\n\n              if (count == _this._streams.length) {\n                resolve();\n              }\n\n              var reuseURL = _this._formCtxUrl(stream);\n              var schemaURL = 'hyperty-catalogue://catalogue.' + _this._domain + '/.well-known/dataschema/Context';\n              //_this._setUpReporter(reply.body.identity.userProfile.userURL, reply.body.data, stream.resources, stream.name, reuseURL)\n\n\n              _this._resumeReporters(stream.name, reply.body.identity.userProfile.userURL).then(function (reporter) {\n                console.log('VertxAppProtoStub]._resumeReporters (result)  ', reporter);\n                if (reporter == false) {\n                  _this._setUpReporter(reply.body.identity.userProfile.userURL, schemaURL, reply.body.data, stream.resources, stream.name, reuseURL).then(function (result) {\n                    if (result) {\n\n                      _this._eb.registerHandler(reuseURL, function (error, message) {\n                        console.log('[VertxAppProtoStub] received a message on : ', result, JSON.stringify(message));\n                        //TODO new data on reporter,, to update? or not? should be static?\n                      });\n                    }\n                  });\n                } else {\n                  reporter.data.values = reply.body.data.values;\n                  reporter.onSubscription(function (event) {\n                    event.accept();\n                    console.log('[VertxAppProtoStub] new subs', event);\n                  });\n                }\n              }).catch(function (error) {\n                //debugger;\n              });\n            } else {\n              console.log(\"[VertxAppProtoStub] No reply\", reply_err);\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: '_setUpPublicWallets',\n    value: function _setUpPublicWallets() {\n      var _this = this;\n      return new Promise(function (resolve) {\n\n        var createPub = {\n          type: 'create',\n          to: 'hyperty://sharing-cities-dsm/wallet-manager',\n          from: _this._runtimeSessionURL,\n          identity: _this._publicWallets\n        };\n\n        _this._eb.send('hyperty://sharing-cities-dsm/wallet-manager', createPub, function (reply_err, reply) {\n          if (reply_err == null) {\n\n            console.log(\"[VertxAppProtoStub] Received reply public wallets\", reply);\n\n            var responseMsg = {};\n            responseMsg.body = {};\n            responseMsg.body.value = {};\n            responseMsg.body.code = 200;\n\n            reply.reply(responseMsg, function (reply_err, reply2) {\n\n              console.log(\"[VertxAppProtoStub] Received reply2 public wallets\", reply);\n            });\n            resolve();\n          }\n        });\n      });\n    }\n  }, {\n    key: '_resumeReporters',\n    value: function _resumeReporters(name, reporterURL) {\n      console.log('[VertxAppProtoStub._resumeReporters] Resuming reporter out', name, reporterURL);\n      var _this = this;\n      //debugger;\n      return new Promise(function (resolve, reject) {\n        _this._syncher.resumeReporters({ store: true, reporter: reporterURL }).then(function (reporters) {\n          console.log('[VertxAppProtoStub._resumeReporters] Resuming reporter in', name, reporterURL);\n          console.log('[VertxAppProtoStub._resumeReporters] Reporters resumed', reporters);\n          //debugger;\n\n          var reportersList = Object.keys(reporters);\n\n          if (reportersList.length > 0) {\n\n            reportersList.forEach(function (dataObjectReporterURL) {\n\n              console.log('[VertxAppProtoStub._resumeReporters] ', name, dataObjectReporterURL);\n              console.log('[VertxAppProtoStub._resumeReporters] ', name, reporters[dataObjectReporterURL]);\n\n              if (reporterURL == reporters[dataObjectReporterURL].metadata.reporter && reporters[dataObjectReporterURL].metadata.name == name) {\n                return resolve(reporters[dataObjectReporterURL]);\n              }\n            });\n            return resolve(false);\n          } else {\n            return resolve(false);\n          }\n        }).catch(function (reason) {\n          console.info('[VertxAppProtoStub._resumeReporters] Reporters:', reason);\n        });\n      });\n    }\n  }, {\n    key: '_resumeObservers',\n    value: function _resumeObservers(contextUrl) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        //debugger;\n        _this._syncher.resumeObservers({ store: true }).then(function (observers) {\n          //debugger;\n          console.log('[VertxAppProtoStub] Resuming observer : ', observers, _this, _this._onResume);\n\n          var observersList = Object.keys(observers);\n          if (observersList.length > 0) {\n            //debugger;\n            observersList.forEach(function (dataObjectObserverURL) {\n              console.log('[VertxAppProtoStub].syncher.resumeObserver: ', dataObjectObserverURL);\n              if (contextUrl == dataObjectObserverURL) {\n                resolve(observers[dataObjectObserverURL]);\n              }\n            });\n          } else {\n            resolve(false);\n          }\n          resolve(false);\n        }).catch(function (reason) {\n          console.info('[GroupChatManager] Resume Observer | ', reason);\n        });\n      });\n    }\n  }, {\n    key: '_formCtxUrl',\n    value: function _formCtxUrl(stream) {\n      var _this = this;\n      var ID = _this._config.runtimeURL.split('/')[3];\n      return 'context://' + _this._config.host + '/' + ID + '/' + stream.id;\n    }\n  }, {\n    key: '_setUpReporter',\n    value: function _setUpReporter(identityURL, objectDescURL, data, resources, name, reuseURL) {\n      var createWallet = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n      var isPubWallet = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n\n        if (!createWallet) {\n          var input = {\n            resources: resources,\n            expires: 3600,\n            reporter: identityURL,\n            reuseURL: reuseURL,\n            domain_registration: false\n            //debugger;\n          };_this._syncher.create(objectDescURL, [], data, true, false, name, null, input).then(function (reporter) {\n            console.log('[VertxAppProtoStub] REPORTER RETURNED', reporter);\n            reporter.onSubscription(function (event) {\n              event.accept();\n              console.log('[VertxAppProtoStub] new subs', event);\n            });\n            resolve(reporter);\n          }).catch(function (err) {\n            console.error('[VertxAppProtoStub] err', err);\n            resolve(null);\n          });\n        } else {\n\n          console.log('[VertxAppProtoStub._setUpReporter] Wallet RESUME/CREATE');\n          _this._resumeReporters(name, name).then(function (wallet) {\n            //debugger;\n            console.log('[VertxAppProtoStub._setUpReporter] Wallet resumed', wallet);\n            if (wallet != false) {\n\n              if (isPubWallet) {\n                _this._publicWalletsReporterDataObject = wallet;\n              } else {\n                _this._walletReporterDataObject = wallet;\n              }\n\n              wallet.onSubscription(function (event) {\n                event.accept();\n                console.log('[VertxAppProtoStub._setUpReporter] new subs', event);\n              });\n              resolve(wallet);\n            } else {\n              _this._walletReporter.create(data, resources, name, identityURL, reuseURL, false).then(function (wallet) {\n                console.log('[VertxAppProtoStub._setUpReporter] Wallet created', wallet);\n\n                if (isPubWallet) {\n                  _this._publicWalletsReporterDataObject = wallet;\n                } else {\n                  _this._walletReporterDataObject = wallet;\n                }\n\n                wallet.onSubscription(function (event) {\n                  event.accept();\n                  console.log('[VertxAppProtoStub._setUpReporter] new subs', event);\n                });\n                resolve(wallet);\n              }).catch(function (err) {\n                console.error('[VertxAppProtoStub] err', err);\n                resolve(null);\n              });\n            }\n          }).catch(function (error) {});\n        }\n      });\n    }\n\n    //let schema_url = 'hyperty-catalogue://catalogue.localhost/.well-known/dataschema/Context';\n\n  }, {\n    key: '_setUpObserver',\n    value: function _setUpObserver(identityToUse, contextUrl, schemaUrl) {\n      var _this = this;\n      //MessageBodyIdentity Constructor\n      return new Promise(function (resolve) {\n        _this._syncher.subscribe(schemaUrl, contextUrl, true, false, true, identityToUse).then(function (obj) {\n          console.log('[VertxAppProtoStub] subscribe success', obj);\n          resolve(true);\n        }).catch(function (error) {\n          resolve(false);\n          console.log('[VertxAppProtoStub] error', error);\n        });\n      });\n    }\n  }, {\n    key: '_eventBusUsage',\n    value: function _eventBusUsage() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        console.log('[VertxAppProtoStub] waiting for eb Open state(', _this._eb.sockJSConn.readyState, ')', _this._eb);\n\n        _this._eb.onopen = function () {\n          console.log('[VertxAppProtoStub] _this._eb-> open');\n\n          function waitForEB1() {\n            console.log('[VertxAppProtoStub] Waiting for SockJS readyState', _this._eb.sockJSConn.readyState, '(', WebSocket.OPEN, ')');\n            if (WebSocket.OPEN === _this._eb.sockJSConn.readyState) {\n              _this._configAvailableStreams().then(function () {\n\n                var toCreatePub = {\n                  type: 'create',\n                  to: 'hyperty://sharing-cities-dsm/wallet-manager',\n                  from: _this._runtimeSessionURL,\n                  identity: _this._publicWallets.identity,\n                  body: { type: 'create' }\n                };\n                _this.createWalletPub(toCreatePub).then(function () {\n                  clearTimeout(timer1);\n                  resolve(true);\n                });\n                /*\n                _this._setUpPublicWallets().then(function (result) {\n                 }).catch(function (error) {\n                 });*/\n              });\n            }\n          }\n          var timer1 = setTimeout(waitForEB1, 200);\n        };\n\n        _this._eb.onerror = function (e) {\n          console.log('[VertxAppProtoStub] General error: ', e); // this does happen\n        };\n      });\n    }\n\n    /**\n     * Get the configuration for this ProtoStub\n    * @return {Object} - Mandatory fields are: \"url\" of the MessageNode address and \"runtimeURL\".\n        */\n\n  }, {\n    key: '_sendStatus',\n    value: function _sendStatus(value, reason) {\n      var _this = this;\n      console.log('[VertxAppProtoStub status changed] to ', value);\n      _this._state = value;\n      var msg = {\n        type: 'update',\n        from: _this._runtimeProtoStubURL,\n        to: _this._runtimeProtoStubURL + '/status',\n        body: {\n          value: value\n        }\n      };\n      if (reason) {\n        msg.body.desc = reason;\n      }\n      _this._bus.postMessage(msg);\n    }\n  }, {\n    key: 'config',\n    get: function get() {\n      return this._config;\n    }\n  }, {\n    key: 'runtimeSession',\n    get: function get() {\n      return this._runtimeSessionURL;\n    }\n  }]);\n\n  return VertxAppProtoStub;\n}();\n\nfunction activate(url, bus, config) {\n  return {\n    name: 'VertxAppProtoStub',\n    instance: new VertxAppProtoStub(url, bus, config)\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9WZXJ0eEFwcFByb3RvU3R1Yi5wcy5qcz84MjljIl0sIm5hbWVzIjpbImFjdGl2YXRlIiwiVmVydHhBcHBQcm90b1N0dWIiLCJydW50aW1lUHJvdG9TdHViVVJMIiwiYnVzIiwiY29uZmlnIiwiRXJyb3IiLCJ1cmwiLCJydW50aW1lVVJMIiwiX3RoaXMiLCJjb25zb2xlIiwibG9nIiwiRXZlbnRCdXMiLCJfaWQiLCJfcnVudGltZVByb3RvU3R1YlVSTCIsIl9idXMiLCJfY29uZmlnIiwiX2RvbWFpbiIsImRvbWFpbiIsIl9zdHJlYW1zIiwic3RyZWFtcyIsIl9wdWJsaWNXYWxsZXRzIiwicHVibGljV2FsbGV0cyIsIl9ydW50aW1lU2Vzc2lvblVSTCIsIl9zeW5jaGVyIiwiU3luY2hlciIsIl93YWxsZXRSZXBvcnRlciIsIldhbGxldFJlcG9ydGVyIiwiX2NvbnRleHRSZXBvcnRlciIsIl9lYiIsIl93YWxsZXRSZXBvcnRlckRhdGFPYmplY3QiLCJfcHVibGljV2FsbGV0c1JlcG9ydGVyRGF0YU9iamVjdCIsIl9hbHJlYWR5TGlzdGVuaW5nIiwiX2RhdGFPYmplY3RzVVJMIiwiX3NlbmRTdGF0dXMiLCJfZGF0YU9ic2VydmVycyIsIl9kYXRhU3RyZWFtSWRlbnRpdHkiLCJfZGF0YVN0cmVhbURhdGEiLCJfaHlwZXJ0eVdhbGxldEFkZHJlc3MiLCJfY29udGV4dFVybFRvUmVtb3ZlU3RyZWFtIiwiYWRkTGlzdGVuZXIiLCJtc2ciLCJtc2dSZXNwb25zZSIsImlkIiwidHlwZSIsImZyb20iLCJ0byIsImJvZHkiLCJjb2RlIiwicG9zdE1lc3NhZ2UiLCJKU09OIiwic3RyaW5naWZ5IiwidmVydHhidXNfcGluZ19pbnRlcnZhbCIsInRlc3QiLCJlbmFibGVSZWNvbm5lY3QiLCJfZXZlbnRCdXNVc2FnZSIsInRoZW4iLCJyZXN1bHQiLCJfU3Vic2NyaXB0aW9uTWFuYWdlciIsIndhaXRGb3JFQiIsInNvY2tKU0Nvbm4iLCJyZWFkeVN0YXRlIiwiV2ViU29ja2V0IiwiT1BFTiIsImNsZWFyVGltZW91dCIsInRpbWVyIiwic2V0VGltZW91dCIsIndhbGxldE1hbmFnZXJBZGRyZXNzIiwiaHlwZXJ0eVVSTCIsInNlbmQiLCJyZXBseV9lcnIiLCJyZXBseSIsIl9zZXRVcFJlcG9ydGVyIiwiaWRlbnRpdHkiLCJ1c2VyUHJvZmlsZSIsInVzZXJVUkwiLCJiYWxhbmNlIiwidHJhbnNhY3Rpb25zIiwicmVzcG9uc2VNc2ciLCJ2YWx1ZSIsImRhdGEiLCJyZXBseTIiLCJ3YWxsZXQiLCJyZXBvcnRlcl91cmwiLCJwdWJsaWNzX3VybCIsImJhbGFuY2UxIiwicGFyc2UiLCJhZGRyZXNzQ2hhbmdlcyIsImFkZHJlc3MiLCJyZWdpc3RlckhhbmRsZXIiLCJlcnJvciIsIm1lc3NhZ2UiLCJjYXRjaCIsIlByb21pc2UiLCJyZXNvbHZlIiwid2FsbGV0cyIsImhhc093blByb3BlcnR5IiwicmVzb3VyY2UiLCJjcmVhdGVXYWxsZXQiLCJzbWFydElvdEludGVncmF0aW9uIiwiaW5jbHVkZXMiLCJtZXNzYWdlRlJPTXN1YnNjcmlwdGlvbiIsIm1lc3NhZ2VUb1N1YnNjcmliZSIsInNjaGVtYV91cmwiLCJjb250ZXh0VXJsIiwic3BsaXQiLCJfcmVzdW1lT2JzZXJ2ZXJzIiwiX3NldFVwT2JzZXJ2ZXIiLCJyZXNwb25zZSIsImNoYW5nZXNBZGRyZXNzIiwicHVzaCIsImV2ZW50IiwiZ3VpZCIsInJlcG9ydGVyIiwiaW52aXRlTWVzc2FnZSIsInB1Ymxpc2giLCJzbWFydElvdFN0dWJBZGRyZXNzIiwiX3NlbmRSZXBseU1zZyIsImNvdW50IiwiZm9yRWFjaCIsInN0cmVhbSIsImxlbmd0aCIsInJldXNlVVJMIiwiX2Zvcm1DdHhVcmwiLCJzY2hlbWFVUkwiLCJfcmVzdW1lUmVwb3J0ZXJzIiwibmFtZSIsInJlc291cmNlcyIsInZhbHVlcyIsIm9uU3Vic2NyaXB0aW9uIiwiYWNjZXB0IiwiY3JlYXRlUHViIiwicmVwb3J0ZXJVUkwiLCJyZWplY3QiLCJyZXN1bWVSZXBvcnRlcnMiLCJzdG9yZSIsInJlcG9ydGVycyIsInJlcG9ydGVyc0xpc3QiLCJPYmplY3QiLCJrZXlzIiwiZGF0YU9iamVjdFJlcG9ydGVyVVJMIiwibWV0YWRhdGEiLCJyZWFzb24iLCJpbmZvIiwicmVzdW1lT2JzZXJ2ZXJzIiwib2JzZXJ2ZXJzIiwiX29uUmVzdW1lIiwib2JzZXJ2ZXJzTGlzdCIsImRhdGFPYmplY3RPYnNlcnZlclVSTCIsIklEIiwiaG9zdCIsImlkZW50aXR5VVJMIiwib2JqZWN0RGVzY1VSTCIsImlzUHViV2FsbGV0IiwiaW5wdXQiLCJleHBpcmVzIiwiZG9tYWluX3JlZ2lzdHJhdGlvbiIsImNyZWF0ZSIsImVyciIsImlkZW50aXR5VG9Vc2UiLCJzY2hlbWFVcmwiLCJzdWJzY3JpYmUiLCJvYmoiLCJvbm9wZW4iLCJ3YWl0Rm9yRUIxIiwiX2NvbmZpZ0F2YWlsYWJsZVN0cmVhbXMiLCJ0b0NyZWF0ZVB1YiIsImNyZWF0ZVdhbGxldFB1YiIsInRpbWVyMSIsIm9uZXJyb3IiLCJlIiwiX3N0YXRlIiwiZGVzYyIsImluc3RhbmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7cWpCQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0JBbXpCd0JBLFE7O0FBN3hCeEI7Ozs7QUFDQTs7QUFDQTs7Ozs7O0lBR01DLGlCO0FBQ0o7Ozs7Ozs7QUFPQSw2QkFBWUMsbUJBQVosRUFBaUNDLEdBQWpDLEVBQXNDQyxNQUF0QyxFQUE4QztBQUFBOztBQUM1QyxRQUFJLENBQUNGLG1CQUFMLEVBQTBCLE1BQU0sSUFBSUcsS0FBSixDQUFVLCtDQUFWLENBQU47QUFDMUIsUUFBSSxDQUFDRixHQUFMLEVBQVUsTUFBTSxJQUFJRSxLQUFKLENBQVUsK0JBQVYsQ0FBTjtBQUNWLFFBQUksQ0FBQ0QsTUFBTCxFQUFhLE1BQU0sSUFBSUMsS0FBSixDQUFVLGtDQUFWLENBQU47O0FBRWIsUUFBSSxDQUFDRCxPQUFPRSxHQUFaLEVBQWlCLE1BQU0sSUFBSUQsS0FBSixDQUFVLHNDQUFWLENBQU47QUFDakIsUUFBSSxDQUFDRCxPQUFPRyxVQUFaLEVBQXdCLE1BQU0sSUFBSUYsS0FBSixDQUFVLDZDQUFWLENBQU47O0FBRXhCOztBQUVBLFFBQUlHLFFBQVEsSUFBWjtBQUNBQyxZQUFRQyxHQUFSLENBQVkseUNBQVosRUFBdURGLEtBQXZELEVBQThERyw4QkFBOUQ7O0FBRUFGLFlBQVFDLEdBQVIsQ0FBWSw0Q0FBWixFQUEwREMsOEJBQTFEOztBQUVBLFNBQUtDLEdBQUwsR0FBVyxDQUFYOztBQUVBLFNBQUtDLG9CQUFMLEdBQTRCWCxtQkFBNUI7QUFDQSxTQUFLWSxJQUFMLEdBQVlYLEdBQVo7QUFDQSxTQUFLWSxPQUFMLEdBQWVYLE1BQWY7QUFDQSxTQUFLWSxPQUFMLEdBQWVaLE9BQU9hLE1BQXRCO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQmQsT0FBT2UsT0FBdkI7QUFDQSxTQUFLQyxjQUFMLEdBQXNCaEIsT0FBT2lCLGFBQTdCOztBQUVBLFNBQUtDLGtCQUFMLEdBQTBCbEIsT0FBT0csVUFBakM7O0FBRUEsU0FBS2dCLFFBQUwsR0FBZ0IsSUFBSUMsZ0JBQUosQ0FBWSxLQUFLWCxvQkFBakIsRUFBdUMsS0FBS0MsSUFBNUMsRUFBa0QsS0FBS0MsT0FBdkQsQ0FBaEI7QUFDQSxTQUFLVSxlQUFMLEdBQXVCLElBQUlDLDZCQUFKLENBQW1CLEtBQUtiLG9CQUF4QixFQUE4QyxLQUFLQyxJQUFuRCxFQUF5RCxLQUFLQyxPQUE5RCxFQUF1RSxLQUFLUSxRQUE1RSxDQUF2QjtBQUNBZCxZQUFRQyxHQUFSLENBQVksMkNBQVosRUFBeUQsS0FBS2lCLGdCQUE5RDtBQUNBLFNBQUtDLEdBQUwsR0FBVyxJQUFYO0FBQ0EsU0FBS0MseUJBQUwsR0FBaUMsSUFBakM7QUFDQSxTQUFLQyxnQ0FBTCxHQUF3QyxJQUF4QztBQUNBLFNBQUtDLGlCQUFMLEdBQXlCLEVBQXpCO0FBQ0EsU0FBS0MsZUFBTCxHQUF1QixFQUF2Qjs7QUFLQXhCLFVBQU15QixXQUFOLENBQWtCLFNBQWxCOztBQUVBO0FBQ0F6QixVQUFNMEIsY0FBTixHQUF1QixFQUF2Qjs7QUFFQTtBQUNBMUIsVUFBTTJCLG1CQUFOLEdBQTRCLEVBQTVCOztBQUVBO0FBQ0EzQixVQUFNNEIsZUFBTixHQUF3QixFQUF4Qjs7QUFFQTtBQUNBNUIsVUFBTTZCLHFCQUFOLEdBQThCLEVBQTlCOztBQUVBO0FBQ0E3QixVQUFNOEIseUJBQU4sR0FBa0MsRUFBbEM7O0FBSUE7QUFDQW5DLFFBQUlvQyxXQUFKLENBQWdCLHlDQUFoQixFQUEyRCxVQUFDQyxHQUFELEVBQVM7QUFDbEUvQixjQUFRQyxHQUFSLENBQVksNkVBQVosRUFBMkY4QixHQUEzRjtBQUNBLFVBQUlDLGNBQWM7QUFDaEJDLFlBQUlGLElBQUlFLEVBRFE7QUFFaEJDLGNBQU0sVUFGVTtBQUdoQkMsY0FBTUosSUFBSUssRUFITTtBQUloQkEsWUFBSUwsSUFBSUksSUFKUTtBQUtoQkUsY0FBTTtBQUNKQyxnQkFBTTtBQURGO0FBTFUsT0FBbEI7QUFTQXZDLFlBQU1NLElBQU4sQ0FBV2tDLFdBQVgsQ0FBdUJQLFdBQXZCO0FBRUQsS0FiRDs7QUFnQkF0QyxRQUFJb0MsV0FBSixDQUFnQixHQUFoQixFQUFxQixVQUFDQyxHQUFELEVBQVM7QUFDNUIvQixjQUFRQyxHQUFSLENBQVksOEJBQVosRUFBNEM4QixHQUE1QyxFQUFpRGhDLE1BQU1vQixHQUF2RCxFQUE0RHFCLEtBQUtDLFNBQUwsQ0FBZTFDLE1BQU0yQixtQkFBckIsQ0FBNUQ7O0FBRUEsVUFBSTNCLE1BQU1vQixHQUFOLEtBQWMsSUFBbEIsRUFBd0I7QUFDdEJwQixjQUFNb0IsR0FBTixHQUFZLElBQUlqQiw4QkFBSixDQUFhUCxPQUFPRSxHQUFwQixFQUF5QixFQUFFLDBCQUEwQkYsT0FBTytDLHNCQUFuQyxFQUF6QixDQUFaO0FBQ0ExQyxnQkFBUUMsR0FBUixDQUFZLDhCQUFaLEVBQTRDRixNQUFNb0IsR0FBbEQ7QUFDQSxZQUFJd0IsT0FBTzVDLE1BQU1vQixHQUFOLENBQVV5QixlQUFWLENBQTBCLElBQTFCLENBQVg7QUFDQTVDLGdCQUFRQyxHQUFSLENBQVkscUJBQVosRUFBb0MwQyxJQUFwQztBQUNBNUMsY0FBTThDLGNBQU4sR0FBdUJDLElBQXZCLENBQTRCLFVBQVVDLE1BQVYsRUFBa0I7QUFDNUMvQyxrQkFBUUMsR0FBUixDQUFZLDRDQUFaLEVBQTBEOEMsTUFBMUQ7QUFDQSxjQUFJQSxNQUFKLEVBQVk7QUFDVmhELGtCQUFNaUQsb0JBQU4sQ0FBMkJqQixHQUEzQjtBQUNEO0FBQ0YsU0FMRDtBQU1ELE9BWEQsTUFhSztBQUFBLFlBRU1rQixTQUZOLEdBRUgsU0FBU0EsU0FBVCxHQUFxQjtBQUNuQmpELGtCQUFRQyxHQUFSLENBQVksbURBQVosRUFBaUVGLE1BQU1vQixHQUFOLENBQVUrQixVQUFWLENBQXFCQyxVQUF0RixFQUFrRyxHQUFsRyxFQUF1R0MsVUFBVUMsSUFBakgsRUFBdUgsR0FBdkg7QUFDQSxjQUFJRCxVQUFVQyxJQUFWLEtBQW1CdEQsTUFBTW9CLEdBQU4sQ0FBVStCLFVBQVYsQ0FBcUJDLFVBQTVDLEVBQXdEO0FBQ3REcEQsa0JBQU1pRCxvQkFBTixDQUEyQmpCLEdBQTNCO0FBQ0F1Qix5QkFBYUMsTUFBYjtBQUNEO0FBQ0YsU0FSRTs7QUFVSCxZQUFJQSxTQUFRQyxXQUFXUCxTQUFYLEVBQXNCLElBQXRCLENBQVo7QUFDRDtBQUVGLEtBN0JEO0FBK0JEOzs7O2lDQUVZbEIsRyxFQUFLO0FBQ2hCLFVBQUloQyxRQUFRLElBQVo7QUFDQSxVQUFNMEQsdUJBQXVCMUIsSUFBSUssRUFBakM7O0FBRUE7QUFDQSxVQUFJc0IsYUFBYTNCLElBQUlJLElBQXJCO0FBQ0FKLFVBQUlHLElBQUosR0FBV0gsSUFBSU0sSUFBSixDQUFTSCxJQUFwQjtBQUNBSCxVQUFJSSxJQUFKLEdBQVd1QixVQUFYO0FBQ0EsYUFBTzNCLElBQUlNLElBQVg7O0FBRUF0QyxZQUFNb0IsR0FBTixDQUFVd0MsSUFBVixDQUFlRixvQkFBZixFQUFxQzFCLEdBQXJDLEVBQTBDLFVBQVU2QixTQUFWLEVBQXFCQyxLQUFyQixFQUE0Qjs7QUFFcEUsWUFBSUQsYUFBYSxJQUFqQixFQUF1QjtBQUNyQjtBQUNBNUQsa0JBQVFDLEdBQVIsQ0FBWSxxQ0FBWixFQUFtRDRELEtBQW5ELEVBQTBELFlBQTFELEVBQXdFOUIsR0FBeEU7O0FBRUFoQyxnQkFBTStELGNBQU4sQ0FBcUJELE1BQU14QixJQUFOLENBQVcwQixRQUFYLENBQW9CQyxXQUFwQixDQUFnQ0MsT0FBckQsRUFBOEQsSUFBOUQsRUFBb0UsRUFBRUMsU0FBUyxDQUFYLEVBQWNDLGNBQWMsRUFBNUIsRUFBcEUsRUFBc0csQ0FBQyxRQUFELENBQXRHLEVBQWtITixNQUFNeEIsSUFBTixDQUFXMEIsUUFBWCxDQUFvQkMsV0FBcEIsQ0FBZ0NDLE9BQWxKLEVBQTJKLElBQTNKLEVBQWlLLElBQWpLLEVBQXVLbkIsSUFBdkssQ0FBNEssVUFBVUMsTUFBVixFQUFrQjs7QUFFNUwsZ0JBQUlBLFVBQVUsSUFBZCxFQUFvQjs7QUFFbEI7QUFDQSxrQkFBSXFCLGNBQWMsRUFBbEI7QUFDQUEsMEJBQVkvQixJQUFaLEdBQW1CLEVBQW5CO0FBQ0ErQiwwQkFBWS9CLElBQVosQ0FBaUJnQyxLQUFqQixHQUF5QnRCLE9BQU91QixJQUFoQztBQUNBRiwwQkFBWS9CLElBQVosQ0FBaUJDLElBQWpCLEdBQXdCLEdBQXhCOztBQUVBdUIsb0JBQU1BLEtBQU4sQ0FBWU8sV0FBWixFQUF5QixVQUFVUixTQUFWLEVBQXFCVyxNQUFyQixFQUE2Qjs7QUFFcEQ7QUFDQXZFLHdCQUFRQyxHQUFSO0FBQ0Esb0JBQUltRSxjQUFjO0FBQ2hCbkMsc0JBQUlGLElBQUlFLEVBRFE7QUFFaEJDLHdCQUFNLFVBRlU7QUFHaEJDLHdCQUFNSixJQUFJSyxFQUhNO0FBSWhCQSxzQkFBSXNCLFVBSlk7QUFLaEJyQix3QkFBTTtBQUNKbUMsNEJBQVFELE9BQU9sQyxJQUFQLENBQVltQyxNQURoQjtBQUVKbEMsMEJBQU0sR0FGRjtBQUdKbUMsa0NBQWMxQixPQUFPbEQsR0FIakI7QUFJSjZFLGlDQUFhM0UsTUFBTXNCLGdDQUFOLENBQXVDeEI7QUFKaEQ7QUFMVSxpQkFBbEI7QUFZQUcsd0JBQVFDLEdBQVIsQ0FBWSxnREFBWixFQUE4RHNFLE9BQU9sQyxJQUFQLENBQVltQyxNQUExRTtBQUNBLG9CQUFJRCxPQUFPbEMsSUFBUCxDQUFZbUMsTUFBWixDQUFtQk4sT0FBbkIsSUFBOEIsQ0FBbEMsRUFBcUM7QUFDbkMsc0JBQUlTLFdBQVduQyxLQUFLb0MsS0FBTCxDQUFXcEMsS0FBS0MsU0FBTCxDQUFlOEIsT0FBT2xDLElBQVAsQ0FBWW1DLE1BQVosQ0FBbUJOLE9BQWxDLENBQVgsQ0FBZjtBQUNBbkUsd0JBQU1xQix5QkFBTixDQUFnQ2tELElBQWhDLENBQXFDSixPQUFyQyxHQUErQ1MsUUFBL0M7QUFDRDs7QUFHRCxvQkFBSVIsZUFBZTNCLEtBQUtvQyxLQUFMLENBQVdwQyxLQUFLQyxTQUFMLENBQWU4QixPQUFPbEMsSUFBUCxDQUFZbUMsTUFBWixDQUFtQkwsWUFBbEMsQ0FBWCxDQUFuQjtBQUNFcEUsc0JBQU1xQix5QkFBTixDQUFnQ2tELElBQWhDLENBQXFDSCxZQUFyQyxHQUFvREEsWUFBcEQ7QUFDRixvQkFBSVUsaUJBQWlCTixPQUFPbEMsSUFBUCxDQUFZbUMsTUFBWixDQUFtQk0sT0FBbkIsR0FBNkIsVUFBbEQ7O0FBR0EvRSxzQkFBTW9CLEdBQU4sQ0FBVTRELGVBQVYsQ0FBMEJGLGNBQTFCLEVBQTBDLFVBQVVHLEtBQVYsRUFBaUJDLE9BQWpCLEVBQTBCO0FBQ2xFakYsMEJBQVFDLEdBQVIsQ0FBWSwyQ0FBWixFQUF5RGdGLE9BQXpEO0FBQ0FsRix3QkFBTXFCLHlCQUFOLENBQWdDa0QsSUFBaEMsQ0FBcUNKLE9BQXJDLEdBQStDZSxRQUFRNUMsSUFBUixDQUFhQSxJQUFiLENBQWtCNkIsT0FBakU7QUFDQW5FLHdCQUFNcUIseUJBQU4sQ0FBZ0NrRCxJQUFoQyxDQUFxQ0gsWUFBckMsR0FBb0RjLFFBQVE1QyxJQUFSLENBQWFBLElBQWIsQ0FBa0I4QixZQUF0RTtBQUNELGlCQUpEOztBQU1BbkUsd0JBQVFDLEdBQVIsQ0FBWSxxREFBWixFQUFtRW1FLFdBQW5FOztBQUVBckUsc0JBQU1NLElBQU4sQ0FBV2tDLFdBQVgsQ0FBdUI2QixXQUF2QjtBQUVELGVBdENEO0FBdUNEO0FBQ0YsV0FsREQsRUFrREdjLEtBbERILENBa0RTLFVBQVVuQyxNQUFWLEVBQWtCO0FBQ3pCO0FBQ0QsV0FwREQ7QUFxREQ7QUFDRixPQTVERDtBQTZERDs7O29DQUdlaEIsRyxFQUFLO0FBQ25CLFVBQUloQyxRQUFRLElBQVo7O0FBRUEsYUFBTyxJQUFJb0YsT0FBSixDQUFZLFVBQVVDLE9BQVYsRUFBbUI7O0FBRXBDLFlBQU0zQix1QkFBdUIxQixJQUFJSyxFQUFqQztBQUNBO0FBQ0EsWUFBSXNCLGFBQWEzQixJQUFJSSxJQUFyQjtBQUNBSixZQUFJRyxJQUFKLEdBQVdILElBQUlNLElBQUosQ0FBU0gsSUFBcEI7QUFDQUgsWUFBSUksSUFBSixHQUFXdUIsVUFBWDtBQUNBLGVBQU8zQixJQUFJTSxJQUFYOztBQUVBdEMsY0FBTW9CLEdBQU4sQ0FBVXdDLElBQVYsQ0FBZUYsb0JBQWYsRUFBcUMxQixHQUFyQyxFQUEwQyxVQUFVNkIsU0FBVixFQUFxQkMsS0FBckIsRUFBNEI7O0FBRXBFLGNBQUlELGFBQWEsSUFBakIsRUFBdUI7QUFDckI7QUFDQTVELG9CQUFRQyxHQUFSLENBQVkscUNBQVosRUFBbUQ0RCxLQUFuRCxFQUEwRCxZQUExRCxFQUF3RTlCLEdBQXhFOztBQUVBaEMsa0JBQU0rRCxjQUFOLENBQXFCRCxNQUFNeEIsSUFBTixDQUFXMEIsUUFBWCxDQUFvQkMsV0FBcEIsQ0FBZ0NDLE9BQXJELEVBQThELElBQTlELEVBQW9FLEVBQUVvQixTQUFTLEVBQVgsRUFBcEUsRUFBcUYsQ0FBQyxRQUFELENBQXJGLEVBQWlHeEIsTUFBTXhCLElBQU4sQ0FBVzBCLFFBQVgsQ0FBb0JDLFdBQXBCLENBQWdDQyxPQUFqSSxFQUEwSSxJQUExSSxFQUFnSixJQUFoSixFQUFzSixJQUF0SixFQUE0Sm5CLElBQTVKLENBQWlLLFVBQVVDLE1BQVYsRUFBa0I7O0FBRWpMLGtCQUFJQSxVQUFVLElBQWQsRUFBb0I7O0FBRWxCO0FBQ0Esb0JBQUlxQixjQUFjLEVBQWxCO0FBQ0FBLDRCQUFZL0IsSUFBWixHQUFtQixFQUFuQjtBQUNBK0IsNEJBQVkvQixJQUFaLENBQWlCZ0MsS0FBakIsR0FBeUJ0QixPQUFPdUIsSUFBaEM7QUFDQUYsNEJBQVkvQixJQUFaLENBQWlCQyxJQUFqQixHQUF3QixHQUF4Qjs7QUFFQXVCLHNCQUFNQSxLQUFOLENBQVlPLFdBQVosRUFBeUIsVUFBVVIsU0FBVixFQUFxQlcsTUFBckIsRUFBNkI7O0FBRXBEOztBQUVBdkUsMEJBQVFDLEdBQVIsQ0FBWSxnREFBWixFQUE4RHNFLE9BQU9sQyxJQUFQLENBQVltQyxNQUExRTs7QUFFQXpFLHdCQUFNc0IsZ0NBQU4sQ0FBdUNpRCxJQUF2QyxDQUE0Q2UsT0FBNUMsR0FBc0RkLE9BQU9sQyxJQUFQLENBQVltQyxNQUFaLENBQW1CYSxPQUF6RTtBQUNBdEYsd0JBQU1vQixHQUFOLENBQVU0RCxlQUFWLENBQTBCLGlDQUExQixFQUE2RCxVQUFVQyxLQUFWLEVBQWlCQyxPQUFqQixFQUEwQjtBQUNyRmpGLDRCQUFRQyxHQUFSLENBQVksMkNBQVosRUFBeURnRixPQUF6RDtBQUNBbEYsMEJBQU1zQixnQ0FBTixDQUF1Q2lELElBQXZDLENBQTRDZSxPQUE1QyxHQUFzREosUUFBUTVDLElBQVIsQ0FBYUEsSUFBYixDQUFrQmdELE9BQXhFO0FBQ0QsbUJBSEQ7O0FBS0FyRiwwQkFBUUMsR0FBUixDQUFZLHFEQUFaLEVBQW1FbUUsV0FBbkU7QUFDQWdCLDBCQUFRLElBQVI7QUFFRCxpQkFmRDtBQWdCRDtBQUNGLGFBM0JELEVBMkJHRixLQTNCSCxDQTJCUyxVQUFVbkMsTUFBVixFQUFrQjtBQUN6QjtBQUNELGFBN0JEO0FBOEJEO0FBQ0YsU0FyQ0Q7QUF1Q0QsT0FoRE0sQ0FBUDtBQWtERDs7O3lDQUdvQmhCLEcsRUFBSztBQUN4Qi9CLGNBQVFDLEdBQVIsQ0FBWSx1Q0FBWixFQUFxRDhCLEdBQXJEO0FBQ0EsVUFBSWhDLFFBQVEsSUFBWjtBQUNBLFVBQUlnQyxJQUFJdUQsY0FBSixDQUFtQixNQUFuQixLQUE4QnZELElBQUlNLElBQUosQ0FBU2lELGNBQVQsQ0FBd0IsTUFBeEIsQ0FBbEMsRUFBbUU7O0FBRWpFO0FBQ0EsWUFBSXZELElBQUlNLElBQUosQ0FBU0gsSUFBVCxLQUFrQixNQUF0QixFQUE4QjtBQUM1QjtBQUNBbEMsa0JBQVFDLEdBQVIsQ0FBWSx1Q0FBWixFQUFxREYsTUFBTTRCLGVBQTNELEVBQTRFYSxLQUFLQyxTQUFMLENBQWUxQyxNQUFNNEIsZUFBTixDQUFzQkksSUFBSUssRUFBMUIsQ0FBZixDQUE1RTtBQUNBLGNBQUlnQyxjQUFjO0FBQ2hCakMsa0JBQU1KLElBQUlLLEVBRE07QUFFaEJBLGdCQUFJTCxJQUFJSSxJQUZRO0FBR2hCRixnQkFBSUYsSUFBSUUsRUFIUTtBQUloQkMsa0JBQU07QUFKVSxXQUFsQjtBQU1Ba0Msc0JBQVkvQixJQUFaLEdBQW1CLEVBQW5COztBQUVBK0Isc0JBQVkvQixJQUFaLENBQWlCZ0MsS0FBakIsR0FBeUI3QixLQUFLb0MsS0FBTCxDQUFXcEMsS0FBS0MsU0FBTCxDQUFlMUMsTUFBTTRCLGVBQU4sQ0FBc0JJLElBQUlLLEVBQTFCLENBQWYsQ0FBWCxDQUF6QjtBQUNBO0FBQ0FnQyxzQkFBWS9CLElBQVosQ0FBaUJDLElBQWpCLEdBQXdCLEdBQXhCO0FBQ0F2QyxnQkFBTU0sSUFBTixDQUFXa0MsV0FBWCxDQUF1QjZCLFdBQXZCO0FBQ0Q7O0FBRUQsWUFBSXJDLElBQUlNLElBQUosQ0FBU0gsSUFBVCxLQUFrQixRQUF0QixFQUFnQztBQUM5QixjQUFJSCxJQUFJTSxJQUFKLENBQVNrRCxRQUFULElBQXFCLFFBQXpCLEVBQW1DO0FBQ2pDeEYsa0JBQU15RixZQUFOLENBQW1CekQsR0FBbkI7QUFDRCxXQUZELE1BRU87QUFDTGhDLGtCQUFNMEYsbUJBQU4sQ0FBMEIxRCxHQUExQjtBQUNEO0FBQ0YsU0FORCxNQU1PLElBQUdBLElBQUlNLElBQUosQ0FBU0gsSUFBVCxLQUFrQixRQUFyQixFQUErQjtBQUNwQ25DLGdCQUFNMEYsbUJBQU4sQ0FBMEIxRCxHQUExQjtBQUNEO0FBRUYsT0E5QkQsTUE4Qk8sSUFBSUEsSUFBSUcsSUFBSixLQUFhLFFBQWIsSUFBeUJILElBQUlJLElBQUosQ0FBU3VELFFBQVQsQ0FBa0IsZUFBbEIsQ0FBN0IsRUFBaUU7QUFDdEUxRixnQkFBUUMsR0FBUixDQUFZLG1DQUFaLEVBQWlEOEIsR0FBakQ7O0FBRUE7QUFDQWhDLGNBQU1vQixHQUFOLENBQVU0RCxlQUFWLENBQTBCaEQsSUFBSUksSUFBOUIsRUFBb0MsVUFBVTZDLEtBQVYsRUFBaUJXLHVCQUFqQixFQUEwQzs7QUFFNUUzRixrQkFBUUMsR0FBUixDQUFZLDRDQUFaLEVBQTBEMEYsdUJBQTFEO0FBQ0EsY0FBSUMscUJBQXFCRCx3QkFBd0J0RCxJQUFqRDtBQUNBLGNBQUl1RCxtQkFBbUJ4RCxFQUFuQixDQUFzQnNELFFBQXRCLENBQStCLGVBQS9CLENBQUosRUFBcUQ7QUFDbkQsZ0JBQUlHLGFBQWEsbUNBQW1DOUYsTUFBTVEsT0FBekMsR0FBbUQsaUNBQXBFO0FBQ0EsZ0JBQUl1RixhQUFhRixtQkFBbUJ4RCxFQUFuQixDQUFzQjJELEtBQXRCLENBQTRCLGVBQTVCLEVBQTZDLENBQTdDLENBQWpCOztBQUVBOztBQUVBaEcsa0JBQU1pRyxnQkFBTixDQUF1QkYsVUFBdkIsRUFBbUNoRCxJQUFuQyxDQUF3QyxVQUFVQyxNQUFWLEVBQWtCO0FBQ3hELGtCQUFJQSxVQUFVLEtBQWQsRUFBcUI7QUFDbkJoRCxzQkFBTWtHLGNBQU4sQ0FBcUJMLG1CQUFtQnZELElBQW5CLENBQXdCMEIsUUFBN0MsRUFBdUQrQixVQUF2RCxFQUFtRUQsVUFBbkUsRUFBK0UvQyxJQUEvRSxDQUFvRixVQUFVQyxNQUFWLEVBQWtCO0FBQ3BHLHNCQUFJQSxNQUFKLEVBQVk7QUFDVix3QkFBSW1ELFdBQVcsRUFBRTdELE1BQU0sRUFBRUMsTUFBTSxHQUFSLEVBQVIsRUFBZjtBQUNBcUQsNENBQXdCOUIsS0FBeEIsQ0FBOEJxQyxRQUE5QjtBQUNELG1CQUhELE1BR087QUFDTCx3QkFBSUEsWUFBVyxFQUFFN0QsTUFBTSxFQUFFQyxNQUFNLEdBQVIsRUFBUixFQUFmO0FBQ0FxRCw0Q0FBd0I5QixLQUF4QixDQUE4QnFDLFNBQTlCO0FBQ0Q7QUFDRixpQkFSRDtBQVNELGVBVkQsTUFVTztBQUNMLG9CQUFJQyxpQkFBaUJwRCxPQUFPbEQsR0FBUCxHQUFhLFVBQWxDO0FBQ0FFLHNCQUFNdUIsaUJBQU4sQ0FBd0I4RSxJQUF4QixDQUE2QkQsY0FBN0I7QUFDQXBHLHNCQUFNTSxJQUFOLENBQVd5QixXQUFYLENBQXVCcUUsY0FBdkIsRUFBdUMsVUFBQ0UsS0FBRCxFQUFXO0FBQ2hEdEcsd0JBQU1vQixHQUFOLENBQVV3QyxJQUFWLENBQWUwQyxNQUFNakUsRUFBckIsRUFBeUJpRSxNQUFNaEUsSUFBTixDQUFXZ0MsS0FBcEMsRUFBMkMsVUFBVVQsU0FBVixFQUFxQkMsS0FBckIsRUFBNEI7QUFDckUsd0JBQUlELGFBQWEsSUFBakIsRUFBdUI7QUFDckI1RCw4QkFBUUMsR0FBUixDQUFZLGlEQUFaLEVBQStENEQsS0FBL0Q7QUFDRDtBQUNGLG1CQUpEO0FBS0QsaUJBTkQ7QUFPQSxvQkFBSXFDLFdBQVcsRUFBRTdELE1BQU0sRUFBRUMsTUFBTSxHQUFSLEVBQVIsRUFBZjtBQUNBcUQsd0NBQXdCOUIsS0FBeEIsQ0FBOEJxQyxRQUE5QjtBQUNEO0FBQ0YsYUF4QkQsRUF3QkdoQixLQXhCSCxDQXdCUyxVQUFVRixLQUFWLEVBQWlCO0FBQ3hCO0FBQ0QsYUExQkQ7O0FBNEJBakYsa0JBQU1rRyxjQUFOLENBQXFCTCxtQkFBbUJ2RCxJQUFuQixDQUF3QjBCLFFBQTdDLEVBQXVEK0IsVUFBdkQsRUFBbUVELFVBQW5FLEVBQStFL0MsSUFBL0UsQ0FBb0YsVUFBVUMsTUFBVixFQUFrQjtBQUNwRyxrQkFBSUEsTUFBSixFQUFZO0FBQ1Ysb0JBQUltRCxXQUFXLEVBQUU3RCxNQUFNLEVBQUVDLE1BQU0sR0FBUixFQUFSLEVBQWY7QUFDQXFELHdDQUF3QjlCLEtBQXhCLENBQThCcUMsUUFBOUI7QUFDRCxlQUhELE1BR087QUFDTCxvQkFBSUEsYUFBVyxFQUFFN0QsTUFBTSxFQUFFQyxNQUFNLEdBQVIsRUFBUixFQUFmO0FBQ0FxRCx3Q0FBd0I5QixLQUF4QixDQUE4QnFDLFVBQTlCO0FBQ0Q7QUFDRixhQVJEO0FBU0Q7QUFDRixTQWhERDs7QUFrREE7O0FBRUE7QUFDQSxZQUFJakMsZ0JBQUo7QUFDQSxZQUFJcUMsYUFBSjtBQUNBLFlBQUl2RSxJQUFJTSxJQUFKLENBQVMwQixRQUFiLEVBQXVCO0FBQ3JCRSxvQkFBVWxDLElBQUlNLElBQUosQ0FBUzBCLFFBQVQsQ0FBa0JDLFdBQWxCLENBQThCQyxPQUF4QztBQUNBcUMsaUJBQU92RSxJQUFJTSxJQUFKLENBQVMwQixRQUFULENBQWtCQyxXQUFsQixDQUE4QnNDLElBQXJDO0FBQ0QsU0FIRCxNQUlLO0FBQ0hyQyxvQkFBVWxDLElBQUlNLElBQUosQ0FBU2dDLEtBQVQsQ0FBZWtDLFFBQXpCO0FBQ0Q7QUFDRCxZQUFJQyxnQkFBZ0I7QUFDbEJ0RSxnQkFBTSxRQURZO0FBRWxCQyxnQkFBTUosSUFBSUksSUFGUTtBQUdsQkMsY0FBSUwsSUFBSUssRUFIVTtBQUlsQjJCLG9CQUFVLEVBQUVDLGFBQWEsRUFBRUMsU0FBU0EsT0FBWCxFQUFvQnFDLE1BQU1BLElBQTFCLEVBQWY7QUFFWjtBQU5vQixTQUFwQixDQU9BdkcsTUFBTW9CLEdBQU4sQ0FBVXNGLE9BQVYsQ0FBa0IxRSxJQUFJSyxFQUF0QixFQUEwQm9FLGFBQTFCOztBQUVBLFlBQUl4RSxjQUFjO0FBQ2hCQyxjQUFJRixJQUFJRSxFQURRO0FBRWhCQyxnQkFBTSxVQUZVO0FBR2hCQyxnQkFBTUosSUFBSUssRUFITTtBQUloQkEsY0FBSUwsSUFBSUksSUFKUTtBQUtoQkUsZ0JBQU07QUFDSkMsa0JBQU07QUFERjtBQUxVLFNBQWxCO0FBU0F2QyxjQUFNTSxJQUFOLENBQVdrQyxXQUFYLENBQXVCUCxXQUF2QjtBQUVELE9BdEZNLE1Bc0ZBLElBQUlELElBQUlLLEVBQUosQ0FBT3NELFFBQVAsQ0FBZ0IsVUFBaEIsS0FBK0IsQ0FBQzNGLE1BQU11QixpQkFBTixDQUF3Qm9FLFFBQXhCLENBQWlDM0QsSUFBSUssRUFBckMsQ0FBcEMsRUFBOEU7QUFDbkZwQyxnQkFBUUMsR0FBUixDQUFZLGlDQUFaLEVBQStDOEIsR0FBL0M7QUFDQWhDLGNBQU1vQixHQUFOLENBQVVzRixPQUFWLENBQWtCMUUsSUFBSUssRUFBdEIsRUFBMEJMLElBQUlNLElBQUosQ0FBU2dDLEtBQW5DLEVBQTBDLFVBQVVULFNBQVYsRUFBcUJDLEtBQXJCLEVBQTRCO0FBQ3BFLGNBQUlELGFBQWEsSUFBakIsRUFBdUI7QUFDckI1RCxvQkFBUUMsR0FBUixDQUFZLGlEQUFaLEVBQStENEQsS0FBL0Q7QUFDRDtBQUNGLFNBSkQ7QUFLRDtBQUNGOzs7d0NBRW1COUIsRyxFQUFJOztBQUV0QixVQUFJaEMsUUFBUSxJQUFaO0FBQ0EsVUFBTTJHLHNCQUFzQjNFLElBQUlLLEVBQWhDOztBQUVBTCxVQUFJRyxJQUFKLEdBQVdILElBQUlNLElBQUosQ0FBU0gsSUFBcEI7QUFDQSxhQUFPSCxJQUFJTSxJQUFKLENBQVNGLElBQWhCO0FBQ0EsYUFBT0osSUFBSU0sSUFBSixDQUFTSCxJQUFoQjs7QUFFQW5DLFlBQU1vQixHQUFOLENBQVV3QyxJQUFWLENBQWUrQyxtQkFBZixFQUFvQzNFLEdBQXBDLEVBQXlDLFVBQVU2QixTQUFWLEVBQXFCQyxLQUFyQixFQUE0QjtBQUNuRTdELGdCQUFRQyxHQUFSLENBQVksMENBQVosRUFBd0Q0RCxLQUF4RCxFQUE4REQsU0FBOUQ7QUFDQSxZQUFJQSxhQUFhLElBQWpCLEVBQXVCOztBQUdyQjdELGdCQUFNNEcsYUFBTixDQUFvQjVFLEdBQXBCLEVBQXdCOEIsTUFBTXhCLElBQU4sQ0FBV0EsSUFBbkM7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFERCxTQXpERCxNQXlETztBQUNQckMsa0JBQVFDLEdBQVIsQ0FBWSw4QkFBWixFQUE0QzhCLEdBQTVDO0FBRUQ7QUFDQSxPQS9ERDtBQWtFRDs7O2tDQUNhQSxHLEVBQUlNLEksRUFBTTtBQUN0QixVQUFJdEMsUUFBUSxJQUFaOztBQUVBLFVBQUlxRSxjQUFjO0FBQ2hCbkMsWUFBSUYsSUFBSUUsRUFEUTtBQUVoQkMsY0FBTSxVQUZVO0FBR2hCQyxjQUFNSixJQUFJSyxFQUhNO0FBSWhCQSxZQUFJTCxJQUFJSSxJQUpRO0FBS2hCRSxjQUFNQTtBQUxVLE9BQWxCO0FBT0FyQyxjQUFRQyxHQUFSLENBQVksMERBQVosRUFBd0VtRSxXQUF4RTtBQUNBckUsWUFBTU0sSUFBTixDQUFXa0MsV0FBWCxDQUF1QjZCLFdBQXZCO0FBQ0Q7Ozs4Q0FFeUI7QUFDeEIsVUFBSXJFLFFBQVEsSUFBWjtBQUNBLGFBQU8sSUFBSW9GLE9BQUosQ0FBWSxVQUFVQyxPQUFWLEVBQW1CO0FBQ3BDcEYsZ0JBQVFDLEdBQVIsQ0FBWSxvREFBWixFQUFrRUYsTUFBTVUsUUFBeEU7QUFDQSxZQUFJbUcsUUFBUSxDQUFaO0FBQ0E3RyxjQUFNVSxRQUFOLENBQWVvRyxPQUFmLENBQXVCLFVBQVVDLE1BQVYsRUFBa0I7QUFDdkM5RyxrQkFBUUMsR0FBUixDQUFZLDRCQUFaLEVBQTBDNkcsTUFBMUMsRUFBa0QvRyxNQUFNb0IsR0FBTixDQUFVK0IsVUFBVixDQUFxQkMsVUFBdkU7QUFDQSxjQUFJcEIsTUFBTSxFQUFFRyxNQUFNLE1BQVIsRUFBVjs7QUFFQW5DLGdCQUFNb0IsR0FBTixDQUFVd0MsSUFBVixDQUFlbUQsT0FBT0EsTUFBdEIsRUFBOEIvRSxHQUE5QixFQUFtQyxVQUFVNkIsU0FBVixFQUFxQkMsS0FBckIsRUFBNEI7QUFDN0QsZ0JBQUlELGFBQWEsSUFBakIsRUFBdUI7O0FBRXJCZ0Q7QUFDQTVHLHNCQUFRQyxHQUFSLENBQVkscUNBQVosRUFBbUQ0RCxNQUFNeEIsSUFBekQ7O0FBRUF0QyxvQkFBTTJCLG1CQUFOLENBQTBCb0YsT0FBT0EsTUFBakMsSUFBMkNqRCxNQUFNeEIsSUFBTixDQUFXMEIsUUFBdEQ7QUFDQWhFLG9CQUFNNEIsZUFBTixDQUFzQm1GLE9BQU9BLE1BQTdCLElBQXVDakQsTUFBTXhCLElBQU4sQ0FBV2lDLElBQWxEOztBQUVBLGtCQUFJc0MsU0FBUzdHLE1BQU1VLFFBQU4sQ0FBZXNHLE1BQTVCLEVBQW9DO0FBQ2xDM0I7QUFDRDs7QUFFRCxrQkFBSTRCLFdBQVdqSCxNQUFNa0gsV0FBTixDQUFrQkgsTUFBbEIsQ0FBZjtBQUNBLGtCQUFJSSxZQUFZLG1DQUFtQ25ILE1BQU1RLE9BQXpDLEdBQW1ELGlDQUFuRTtBQUNBOzs7QUFHQVIsb0JBQU1vSCxnQkFBTixDQUF1QkwsT0FBT00sSUFBOUIsRUFBb0N2RCxNQUFNeEIsSUFBTixDQUFXMEIsUUFBWCxDQUFvQkMsV0FBcEIsQ0FBZ0NDLE9BQXBFLEVBQTZFbkIsSUFBN0UsQ0FBa0YsVUFBVXlELFFBQVYsRUFBb0I7QUFDcEd2Ryx3QkFBUUMsR0FBUixDQUFZLGdEQUFaLEVBQThEc0csUUFBOUQ7QUFDQSxvQkFBSUEsWUFBWSxLQUFoQixFQUF1QjtBQUNyQnhHLHdCQUFNK0QsY0FBTixDQUFxQkQsTUFBTXhCLElBQU4sQ0FBVzBCLFFBQVgsQ0FBb0JDLFdBQXBCLENBQWdDQyxPQUFyRCxFQUE4RGlELFNBQTlELEVBQXlFckQsTUFBTXhCLElBQU4sQ0FBV2lDLElBQXBGLEVBQTBGd0MsT0FBT08sU0FBakcsRUFBNEdQLE9BQU9NLElBQW5ILEVBQXlISixRQUF6SCxFQUFtSWxFLElBQW5JLENBQXdJLFVBQVVDLE1BQVYsRUFBa0I7QUFDeEosd0JBQUlBLE1BQUosRUFBWTs7QUFFVmhELDRCQUFNb0IsR0FBTixDQUFVNEQsZUFBVixDQUEwQmlDLFFBQTFCLEVBQW9DLFVBQVVoQyxLQUFWLEVBQWlCQyxPQUFqQixFQUEwQjtBQUM1RGpGLGdDQUFRQyxHQUFSLENBQVksOENBQVosRUFBNEQ4QyxNQUE1RCxFQUFvRVAsS0FBS0MsU0FBTCxDQUFld0MsT0FBZixDQUFwRTtBQUNBO0FBRUQsdUJBSkQ7QUFLRDtBQUNGLG1CQVREO0FBVUQsaUJBWEQsTUFXTztBQUNMc0IsMkJBQVNqQyxJQUFULENBQWNnRCxNQUFkLEdBQXVCekQsTUFBTXhCLElBQU4sQ0FBV2lDLElBQVgsQ0FBZ0JnRCxNQUF2QztBQUNBZiwyQkFBU2dCLGNBQVQsQ0FBd0IsVUFBVWxCLEtBQVYsRUFBaUI7QUFDdkNBLDBCQUFNbUIsTUFBTjtBQUNBeEgsNEJBQVFDLEdBQVIsQ0FBWSw4QkFBWixFQUE0Q29HLEtBQTVDO0FBQ0QsbUJBSEQ7QUFJRDtBQUVGLGVBckJELEVBcUJHbkIsS0FyQkgsQ0FxQlMsVUFBVUYsS0FBVixFQUFpQjtBQUN4QjtBQUNELGVBdkJEO0FBeUJELGFBMUNELE1BMENPO0FBQ0xoRixzQkFBUUMsR0FBUixDQUFZLDhCQUFaLEVBQTRDMkQsU0FBNUM7QUFDRDtBQUNGLFdBOUNEO0FBK0NELFNBbkREO0FBcURELE9BeERNLENBQVA7QUEwREQ7OzswQ0FFcUI7QUFDcEIsVUFBSTdELFFBQVEsSUFBWjtBQUNBLGFBQU8sSUFBSW9GLE9BQUosQ0FBWSxVQUFVQyxPQUFWLEVBQW1COztBQUVwQyxZQUFJcUMsWUFBWTtBQUNkdkYsZ0JBQU0sUUFEUTtBQUViRSxjQUFJLDZDQUZTO0FBR2JELGdCQUFNcEMsTUFBTWMsa0JBSEM7QUFJYmtELG9CQUFVaEUsTUFBTVk7QUFKSCxTQUFoQjs7QUFPQ1osY0FBTW9CLEdBQU4sQ0FBVXdDLElBQVYsQ0FBZSw2Q0FBZixFQUE4RDhELFNBQTlELEVBQXlFLFVBQVU3RCxTQUFWLEVBQXFCQyxLQUFyQixFQUE0QjtBQUNuRyxjQUFJRCxhQUFhLElBQWpCLEVBQXVCOztBQUVyQjVELG9CQUFRQyxHQUFSLENBQVksbURBQVosRUFBaUU0RCxLQUFqRTs7QUFFQSxnQkFBSU8sY0FBYyxFQUFsQjtBQUNBQSx3QkFBWS9CLElBQVosR0FBbUIsRUFBbkI7QUFDQStCLHdCQUFZL0IsSUFBWixDQUFpQmdDLEtBQWpCLEdBQXlCLEVBQXpCO0FBQ0FELHdCQUFZL0IsSUFBWixDQUFpQkMsSUFBakIsR0FBd0IsR0FBeEI7O0FBRUF1QixrQkFBTUEsS0FBTixDQUFZTyxXQUFaLEVBQXlCLFVBQVVSLFNBQVYsRUFBcUJXLE1BQXJCLEVBQTZCOztBQUVwRHZFLHNCQUFRQyxHQUFSLENBQVksb0RBQVosRUFBa0U0RCxLQUFsRTtBQUVELGFBSkQ7QUFLQXVCO0FBQ0Q7QUFDRixTQWpCRDtBQW1CRixPQTVCTSxDQUFQO0FBNkJEOzs7cUNBRWdCZ0MsSSxFQUFNTSxXLEVBQWE7QUFDbEMxSCxjQUFRQyxHQUFSLENBQVksNERBQVosRUFBMEVtSCxJQUExRSxFQUFnRk0sV0FBaEY7QUFDQSxVQUFJM0gsUUFBUSxJQUFaO0FBQ0E7QUFDQSxhQUFPLElBQUlvRixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVdUMsTUFBVixFQUFxQjtBQUN0QzVILGNBQU1lLFFBQU4sQ0FBZThHLGVBQWYsQ0FBK0IsRUFBRUMsT0FBTyxJQUFULEVBQWV0QixVQUFVbUIsV0FBekIsRUFBL0IsRUFBdUU1RSxJQUF2RSxDQUE0RSxVQUFDZ0YsU0FBRCxFQUFlO0FBQ3pGOUgsa0JBQVFDLEdBQVIsQ0FBWSwyREFBWixFQUF5RW1ILElBQXpFLEVBQStFTSxXQUEvRTtBQUNBMUgsa0JBQVFDLEdBQVIsQ0FBWSx3REFBWixFQUFzRTZILFNBQXRFO0FBQ0E7O0FBRUEsY0FBSUMsZ0JBQWdCQyxPQUFPQyxJQUFQLENBQVlILFNBQVosQ0FBcEI7O0FBRUEsY0FBSUMsY0FBY2hCLE1BQWQsR0FBdUIsQ0FBM0IsRUFBOEI7O0FBRTVCZ0IsMEJBQWNsQixPQUFkLENBQXNCLFVBQUNxQixxQkFBRCxFQUEyQjs7QUFFL0NsSSxzQkFBUUMsR0FBUixDQUFZLHVDQUFaLEVBQXFEbUgsSUFBckQsRUFBMkRjLHFCQUEzRDtBQUNBbEksc0JBQVFDLEdBQVIsQ0FBWSx1Q0FBWixFQUFxRG1ILElBQXJELEVBQTJEVSxVQUFVSSxxQkFBVixDQUEzRDs7QUFFQSxrQkFBSVIsZUFBZUksVUFBVUkscUJBQVYsRUFBaUNDLFFBQWpDLENBQTBDNUIsUUFBekQsSUFBcUV1QixVQUFVSSxxQkFBVixFQUFpQ0MsUUFBakMsQ0FBMENmLElBQTFDLElBQWtEQSxJQUEzSCxFQUFpSTtBQUMvSCx1QkFBT2hDLFFBQVEwQyxVQUFVSSxxQkFBVixDQUFSLENBQVA7QUFDRDtBQUNGLGFBUkQ7QUFTQSxtQkFBTzlDLFFBQVEsS0FBUixDQUFQO0FBQ0QsV0FaRCxNQVlPO0FBQ0wsbUJBQU9BLFFBQVEsS0FBUixDQUFQO0FBQ0Q7QUFDRixTQXRCRCxFQXNCR0YsS0F0QkgsQ0FzQlMsVUFBQ2tELE1BQUQsRUFBWTtBQUNuQnBJLGtCQUFRcUksSUFBUixDQUFhLGlEQUFiLEVBQWdFRCxNQUFoRTtBQUNELFNBeEJEO0FBeUJELE9BMUJNLENBQVA7QUEyQkQ7OztxQ0FFZ0J0QyxVLEVBQVk7QUFDM0IsVUFBSS9GLFFBQVEsSUFBWjs7QUFFQSxhQUFPLElBQUlvRixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVdUMsTUFBVixFQUFxQjtBQUN0QztBQUNBNUgsY0FBTWUsUUFBTixDQUFld0gsZUFBZixDQUErQixFQUFFVCxPQUFPLElBQVQsRUFBL0IsRUFBZ0QvRSxJQUFoRCxDQUFxRCxVQUFDeUYsU0FBRCxFQUFlO0FBQ2xFO0FBQ0F2SSxrQkFBUUMsR0FBUixDQUFZLDBDQUFaLEVBQXdEc0ksU0FBeEQsRUFBbUV4SSxLQUFuRSxFQUEwRUEsTUFBTXlJLFNBQWhGOztBQUVBLGNBQUlDLGdCQUFnQlQsT0FBT0MsSUFBUCxDQUFZTSxTQUFaLENBQXBCO0FBQ0EsY0FBSUUsY0FBYzFCLE1BQWQsR0FBdUIsQ0FBM0IsRUFBOEI7QUFDNUI7QUFDQTBCLDBCQUFjNUIsT0FBZCxDQUFzQixVQUFDNkIscUJBQUQsRUFBMkI7QUFDL0MxSSxzQkFBUUMsR0FBUixDQUFZLDhDQUFaLEVBQTREeUkscUJBQTVEO0FBQ0Esa0JBQUk1QyxjQUFjNEMscUJBQWxCLEVBQXlDO0FBQ3ZDdEQsd0JBQVFtRCxVQUFVRyxxQkFBVixDQUFSO0FBQ0Q7QUFDRixhQUxEO0FBTUQsV0FSRCxNQVFPO0FBQ0x0RCxvQkFBUSxLQUFSO0FBQ0Q7QUFDREEsa0JBQVEsS0FBUjtBQUVELFNBbEJELEVBa0JHRixLQWxCSCxDQWtCUyxVQUFDa0QsTUFBRCxFQUFZO0FBQ25CcEksa0JBQVFxSSxJQUFSLENBQWEsdUNBQWIsRUFBc0RELE1BQXREO0FBQ0QsU0FwQkQ7QUFxQkQsT0F2Qk0sQ0FBUDtBQXdCRDs7O2dDQUVXdEIsTSxFQUFRO0FBQ2xCLFVBQUkvRyxRQUFRLElBQVo7QUFDQSxVQUFJNEksS0FBSzVJLE1BQU1PLE9BQU4sQ0FBY1IsVUFBZCxDQUF5QmlHLEtBQXpCLENBQStCLEdBQS9CLEVBQW9DLENBQXBDLENBQVQ7QUFDQSxhQUFPLGVBQWVoRyxNQUFNTyxPQUFOLENBQWNzSSxJQUE3QixHQUFvQyxHQUFwQyxHQUEwQ0QsRUFBMUMsR0FBK0MsR0FBL0MsR0FBcUQ3QixPQUFPN0UsRUFBbkU7QUFDRDs7O21DQUVjNEcsVyxFQUFhQyxhLEVBQWV4RSxJLEVBQU0rQyxTLEVBQVdELEksRUFBTUosUSxFQUFxRDtBQUFBLFVBQTNDeEIsWUFBMkMsdUVBQTVCLEtBQTRCO0FBQUEsVUFBckJ1RCxXQUFxQix1RUFBUCxLQUFPOztBQUNySCxVQUFJaEosUUFBUSxJQUFaO0FBQ0EsYUFBTyxJQUFJb0YsT0FBSixDQUFZLFVBQVVDLE9BQVYsRUFBbUJ1QyxNQUFuQixFQUEyQjs7QUFFNUMsWUFBSSxDQUFDbkMsWUFBTCxFQUFtQjtBQUNqQixjQUFJd0QsUUFBUTtBQUNWM0IsdUJBQVdBLFNBREQ7QUFFVjRCLHFCQUFTLElBRkM7QUFHVjFDLHNCQUFVc0MsV0FIQTtBQUlWN0Isc0JBQVVBLFFBSkE7QUFLVmtDLGlDQUFxQjtBQUV2QjtBQVBZLFdBQVosQ0FRQW5KLE1BQU1lLFFBQU4sQ0FBZXFJLE1BQWYsQ0FBc0JMLGFBQXRCLEVBQXFDLEVBQXJDLEVBQXlDeEUsSUFBekMsRUFBK0MsSUFBL0MsRUFBcUQsS0FBckQsRUFBNEQ4QyxJQUE1RCxFQUFrRSxJQUFsRSxFQUF3RTRCLEtBQXhFLEVBQ0dsRyxJQURILENBQ1EsVUFBQ3lELFFBQUQsRUFBYztBQUNsQnZHLG9CQUFRQyxHQUFSLENBQVksdUNBQVosRUFBcURzRyxRQUFyRDtBQUNBQSxxQkFBU2dCLGNBQVQsQ0FBd0IsVUFBVWxCLEtBQVYsRUFBaUI7QUFDdkNBLG9CQUFNbUIsTUFBTjtBQUNBeEgsc0JBQVFDLEdBQVIsQ0FBWSw4QkFBWixFQUE0Q29HLEtBQTVDO0FBQ0QsYUFIRDtBQUlBakIsb0JBQVFtQixRQUFSO0FBRUQsV0FUSCxFQVNLckIsS0FUTCxDQVNXLFVBQVVrRSxHQUFWLEVBQWU7QUFDdEJwSixvQkFBUWdGLEtBQVIsQ0FBYyx5QkFBZCxFQUF5Q29FLEdBQXpDO0FBQ0FoRSxvQkFBUSxJQUFSO0FBQ0QsV0FaSDtBQWFELFNBdEJELE1Bc0JPOztBQUVMcEYsa0JBQVFDLEdBQVIsQ0FBWSx5REFBWjtBQUNBRixnQkFBTW9ILGdCQUFOLENBQXVCQyxJQUF2QixFQUE2QkEsSUFBN0IsRUFBbUN0RSxJQUFuQyxDQUF3QyxVQUFVMEIsTUFBVixFQUFrQjtBQUN4RDtBQUNBeEUsb0JBQVFDLEdBQVIsQ0FBWSxtREFBWixFQUFpRXVFLE1BQWpFO0FBQ0EsZ0JBQUlBLFVBQVUsS0FBZCxFQUFxQjs7QUFFbkIsa0JBQUl1RSxXQUFKLEVBQWlCO0FBQ2ZoSixzQkFBTXNCLGdDQUFOLEdBQXlDbUQsTUFBekM7QUFDRCxlQUZELE1BRU87QUFDTHpFLHNCQUFNcUIseUJBQU4sR0FBa0NvRCxNQUFsQztBQUNEOztBQUdEQSxxQkFBTytDLGNBQVAsQ0FBc0IsVUFBVWxCLEtBQVYsRUFBaUI7QUFDckNBLHNCQUFNbUIsTUFBTjtBQUNBeEgsd0JBQVFDLEdBQVIsQ0FBWSw2Q0FBWixFQUEyRG9HLEtBQTNEO0FBQ0QsZUFIRDtBQUlBakIsc0JBQVFaLE1BQVI7QUFFRCxhQWZELE1BZU87QUFDTHpFLG9CQUFNaUIsZUFBTixDQUFzQm1JLE1BQXRCLENBQTZCN0UsSUFBN0IsRUFBbUMrQyxTQUFuQyxFQUE4Q0QsSUFBOUMsRUFBb0R5QixXQUFwRCxFQUFpRTdCLFFBQWpFLEVBQTJFLEtBQTNFLEVBQWtGbEUsSUFBbEYsQ0FBdUYsVUFBVTBCLE1BQVYsRUFBa0I7QUFDdkd4RSx3QkFBUUMsR0FBUixDQUFZLG1EQUFaLEVBQWlFdUUsTUFBakU7O0FBRUEsb0JBQUl1RSxXQUFKLEVBQWlCO0FBQ2ZoSix3QkFBTXNCLGdDQUFOLEdBQXlDbUQsTUFBekM7QUFDRCxpQkFGRCxNQUVPO0FBQ0x6RSx3QkFBTXFCLHlCQUFOLEdBQWtDb0QsTUFBbEM7QUFDRDs7QUFHREEsdUJBQU8rQyxjQUFQLENBQXNCLFVBQVVsQixLQUFWLEVBQWlCO0FBQ3JDQSx3QkFBTW1CLE1BQU47QUFDQXhILDBCQUFRQyxHQUFSLENBQVksNkNBQVosRUFBMkRvRyxLQUEzRDtBQUNELGlCQUhEO0FBSUFqQix3QkFBUVosTUFBUjtBQUNELGVBZkQsRUFlR1UsS0FmSCxDQWVTLFVBQVVrRSxHQUFWLEVBQWU7QUFDdEJwSix3QkFBUWdGLEtBQVIsQ0FBYyx5QkFBZCxFQUF5Q29FLEdBQXpDO0FBQ0FoRSx3QkFBUSxJQUFSO0FBQ0QsZUFsQkQ7QUFtQkQ7QUFDRixXQXZDRCxFQXVDR0YsS0F2Q0gsQ0F1Q1MsVUFBVUYsS0FBVixFQUFpQixDQUV6QixDQXpDRDtBQTJDRDtBQUVGLE9BeEVNLENBQVA7QUF5RUQ7O0FBRUQ7Ozs7bUNBQ2VxRSxhLEVBQWV2RCxVLEVBQVl3RCxTLEVBQVc7QUFDbkQsVUFBSXZKLFFBQVEsSUFBWjtBQUNBO0FBQ0EsYUFBTyxJQUFJb0YsT0FBSixDQUFZLFVBQVVDLE9BQVYsRUFBbUI7QUFDcENyRixjQUFNZSxRQUFOLENBQWV5SSxTQUFmLENBQXlCRCxTQUF6QixFQUFvQ3hELFVBQXBDLEVBQWdELElBQWhELEVBQXNELEtBQXRELEVBQTZELElBQTdELEVBQW1FdUQsYUFBbkUsRUFBa0Z2RyxJQUFsRixDQUF1RixVQUFVMEcsR0FBVixFQUFlO0FBQ3BHeEosa0JBQVFDLEdBQVIsQ0FBWSx1Q0FBWixFQUFxRHVKLEdBQXJEO0FBQ0FwRSxrQkFBUSxJQUFSO0FBQ0QsU0FIRCxFQUdHRixLQUhILENBR1MsVUFBVUYsS0FBVixFQUFpQjtBQUN4Qkksa0JBQVEsS0FBUjtBQUNBcEYsa0JBQVFDLEdBQVIsQ0FBWSwyQkFBWixFQUF5QytFLEtBQXpDO0FBQ0QsU0FORDtBQU9ELE9BUk0sQ0FBUDtBQVNEOzs7cUNBRWdCO0FBQ2YsVUFBSWpGLFFBQVEsSUFBWjs7QUFFQSxhQUFPLElBQUlvRixPQUFKLENBQVksVUFBVUMsT0FBVixFQUFtQnVDLE1BQW5CLEVBQTJCO0FBQzVDM0gsZ0JBQVFDLEdBQVIsQ0FBWSxnREFBWixFQUE2REYsTUFBTW9CLEdBQU4sQ0FBVStCLFVBQVYsQ0FBcUJDLFVBQWxGLEVBQThGLEdBQTlGLEVBQW1HcEQsTUFBTW9CLEdBQXpHOztBQUVBcEIsY0FBTW9CLEdBQU4sQ0FBVXNJLE1BQVYsR0FBbUIsWUFBTTtBQUN2QnpKLGtCQUFRQyxHQUFSLENBQVksc0NBQVo7O0FBRUEsbUJBQVN5SixVQUFULEdBQXNCO0FBQ3BCMUosb0JBQVFDLEdBQVIsQ0FBWSxtREFBWixFQUFpRUYsTUFBTW9CLEdBQU4sQ0FBVStCLFVBQVYsQ0FBcUJDLFVBQXRGLEVBQWtHLEdBQWxHLEVBQXVHQyxVQUFVQyxJQUFqSCxFQUF1SCxHQUF2SDtBQUNBLGdCQUFJRCxVQUFVQyxJQUFWLEtBQW1CdEQsTUFBTW9CLEdBQU4sQ0FBVStCLFVBQVYsQ0FBcUJDLFVBQTVDLEVBQXdEO0FBQ3REcEQsb0JBQU00Six1QkFBTixHQUFnQzdHLElBQWhDLENBQXFDLFlBQVk7O0FBRS9DLG9CQUFJOEcsY0FBYztBQUNWMUgsd0JBQU0sUUFESTtBQUVURSxzQkFBSSw2Q0FGSztBQUdURCx3QkFBTXBDLE1BQU1jLGtCQUhIO0FBSVRrRCw0QkFBVWhFLE1BQU1ZLGNBQU4sQ0FBcUJvRCxRQUp0QjtBQUtUMUIsd0JBQU0sRUFBQ0gsTUFBTSxRQUFQO0FBTEcsaUJBQWxCO0FBT0FuQyxzQkFBTThKLGVBQU4sQ0FBc0JELFdBQXRCLEVBQW1DOUcsSUFBbkMsQ0FBd0MsWUFBWTtBQUNsRFEsK0JBQWF3RyxNQUFiO0FBQ0ExRSwwQkFBUSxJQUFSO0FBQ0QsaUJBSEQ7QUFJQTs7OztBQVFELGVBckJEO0FBc0JEO0FBQ0Y7QUFDRCxjQUFJMEUsU0FBU3RHLFdBQVdrRyxVQUFYLEVBQXVCLEdBQXZCLENBQWI7QUFDRCxTQS9CRDs7QUFpQ0EzSixjQUFNb0IsR0FBTixDQUFVNEksT0FBVixHQUFvQixVQUFVQyxDQUFWLEVBQWE7QUFDL0JoSyxrQkFBUUMsR0FBUixDQUFZLHFDQUFaLEVBQW1EK0osQ0FBbkQsRUFEK0IsQ0FDd0I7QUFDeEQsU0FGRDtBQUdELE9BdkNNLENBQVA7QUF3Q0Q7O0FBR0Q7Ozs7Ozs7Z0NBUVkzRixLLEVBQU8rRCxNLEVBQVE7QUFDekIsVUFBSXJJLFFBQVEsSUFBWjtBQUNBQyxjQUFRQyxHQUFSLENBQVksd0NBQVosRUFBc0RvRSxLQUF0RDtBQUNBdEUsWUFBTWtLLE1BQU4sR0FBZTVGLEtBQWY7QUFDQSxVQUFJdEMsTUFBTTtBQUNSRyxjQUFNLFFBREU7QUFFUkMsY0FBTXBDLE1BQU1LLG9CQUZKO0FBR1JnQyxZQUFJckMsTUFBTUssb0JBQU4sR0FBNkIsU0FIekI7QUFJUmlDLGNBQU07QUFDSmdDLGlCQUFPQTtBQURIO0FBSkUsT0FBVjtBQVFBLFVBQUkrRCxNQUFKLEVBQVk7QUFDVnJHLFlBQUlNLElBQUosQ0FBUzZILElBQVQsR0FBZ0I5QixNQUFoQjtBQUNEO0FBQ0RySSxZQUFNTSxJQUFOLENBQVdrQyxXQUFYLENBQXVCUixHQUF2QjtBQUNEOzs7d0JBcEJZO0FBQUUsYUFBTyxLQUFLekIsT0FBWjtBQUFzQjs7O3dCQUVoQjtBQUFFLGFBQU8sS0FBS08sa0JBQVo7QUFBaUM7Ozs7OztBQXFCM0MsU0FBU3RCLFFBQVQsQ0FBa0JNLEdBQWxCLEVBQXVCSCxHQUF2QixFQUE0QkMsTUFBNUIsRUFBb0M7QUFDakQsU0FBTztBQUNMeUgsVUFBTSxtQkFERDtBQUVMK0MsY0FBVSxJQUFJM0ssaUJBQUosQ0FBc0JLLEdBQXRCLEVBQTJCSCxHQUEzQixFQUFnQ0MsTUFBaEM7QUFGTCxHQUFQO0FBSUQiLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXG4qIENvcHlyaWdodCAyMDE2IElORVNDLUlEXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxuKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0FcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcbiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU5cbipcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4qIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKiovXG5pbXBvcnQgRXZlbnRCdXMgZnJvbSAndmVydHgzLWV2ZW50YnVzLWNsaWVudCc7XG5pbXBvcnQgeyBXYWxsZXRSZXBvcnRlciB9IGZyb20gJ3NlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvV2FsbGV0TWFuYWdlcic7XG5pbXBvcnQgeyBTeW5jaGVyIH0gZnJvbSAnc2VydmljZS1mcmFtZXdvcmsvZGlzdC9TeW5jaGVyJztcblxuXG5jbGFzcyBWZXJ0eEFwcFByb3RvU3R1YiB7XG4gIC8qKlxuICAgKiBWZXJ0eCBQcm90b1N0dWIgY3JlYXRpb25cbiAgICogQHBhcmFtICB7c3RyaW5nfSBydW50aW1lUHJvdG9TdHViVVJMIC0gVVJMIHVzZWQgaW50ZXJuYWxseSBmb3IgbWVzc2FnZSBkZWxpdmVyeSBwb2ludC4gTm90IHVzZWQgZm9yIE1lc3NhZ2VOb2RlIGRlbGl2ZXIuXG4gICAqIEBwYXJhbSAge01pbmlCdXN9IGJ1cyAtIE1pbmlCdXMgdXNlZCB0byBzZW5kL3JlY2VpdmUgbWVzc2FnZXMuIE5vcm1hbGx5IGNvbm5lY3RlZCB0byB0aGUgTWVzc2FnZUJ1cy5cbiAgICogQHBhcmFtICB7T2JqZWN0fSBjb25maWcgLSBNYW5kYXRvcnkgZmllbGRzIGFyZTogXCJ1cmxcIiBvZiB0aGUgTWVzc2FnZU5vZGUgYWRkcmVzcyBhbmQgXCJydW50aW1lVVJMXCIuXG4gICAqIEByZXR1cm4ge1ZlcnR4QXBwUHJvdG9TdHVifVxuICAgKi9cbiAgY29uc3RydWN0b3IocnVudGltZVByb3RvU3R1YlVSTCwgYnVzLCBjb25maWcpIHtcbiAgICBpZiAoIXJ1bnRpbWVQcm90b1N0dWJVUkwpIHRocm93IG5ldyBFcnJvcignVGhlIHJ1bnRpbWVQcm90b1N0dWJVUkwgaXMgYSBuZWVkZWQgcGFyYW1ldGVyJyk7XG4gICAgaWYgKCFidXMpIHRocm93IG5ldyBFcnJvcignVGhlIGJ1cyBpcyBhIG5lZWRlZCBwYXJhbWV0ZXInKTtcbiAgICBpZiAoIWNvbmZpZykgdGhyb3cgbmV3IEVycm9yKCdUaGUgY29uZmlnIGlzIGEgbmVlZGVkIHBhcmFtZXRlcicpO1xuXG4gICAgaWYgKCFjb25maWcudXJsKSB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBjb25maWcudXJsIGlzIGEgbmVlZGVkIHBhcmFtZXRlcicpO1xuICAgIGlmICghY29uZmlnLnJ1bnRpbWVVUkwpIHRocm93IG5ldyBFcnJvcignVGhlIGNvbmZpZy5ydW50aW1lVVJMIGlzIGEgbmVlZGVkIHBhcmFtZXRlcicpO1xuXG4gICAgLy9odHRwczovL3ZlcnR4LXJ1bnRpbWUuaHlzbWFydC5yZXRoaW5rLnB0aW5vdmFjYW8ucHQvZXZlbnRidXNcblxuICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgY29uc29sZS5sb2coXCJbVmVydHhBcHBQcm90b1N0dWJdIFZFUlRYIEFQUCBQUk9UT1NUVUJcIiwgX3RoaXMsIEV2ZW50QnVzKTtcblxuICAgIGNvbnNvbGUubG9nKFwiW1ZlcnR4QXBwUHJvdG9TdHViXSBWRVJUWCBBUFAgUFJPVE9TVFVCIGViXCIsIEV2ZW50QnVzKTtcblxuICAgIHRoaXMuX2lkID0gMDtcblxuICAgIHRoaXMuX3J1bnRpbWVQcm90b1N0dWJVUkwgPSBydW50aW1lUHJvdG9TdHViVVJMO1xuICAgIHRoaXMuX2J1cyA9IGJ1cztcbiAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XG4gICAgdGhpcy5fZG9tYWluID0gY29uZmlnLmRvbWFpbjtcbiAgICB0aGlzLl9zdHJlYW1zID0gY29uZmlnLnN0cmVhbXM7XG4gICAgdGhpcy5fcHVibGljV2FsbGV0cyA9IGNvbmZpZy5wdWJsaWNXYWxsZXRzO1xuXG4gICAgdGhpcy5fcnVudGltZVNlc3Npb25VUkwgPSBjb25maWcucnVudGltZVVSTDtcblxuICAgIHRoaXMuX3N5bmNoZXIgPSBuZXcgU3luY2hlcih0aGlzLl9ydW50aW1lUHJvdG9TdHViVVJMLCB0aGlzLl9idXMsIHRoaXMuX2NvbmZpZyk7XG4gICAgdGhpcy5fd2FsbGV0UmVwb3J0ZXIgPSBuZXcgV2FsbGV0UmVwb3J0ZXIodGhpcy5fcnVudGltZVByb3RvU3R1YlVSTCwgdGhpcy5fYnVzLCB0aGlzLl9jb25maWcsIHRoaXMuX3N5bmNoZXIpO1xuICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWJdIHRoaXMuX2NvbnRleHRSZXBvcnRlcicsIHRoaXMuX2NvbnRleHRSZXBvcnRlcik7XG4gICAgdGhpcy5fZWIgPSBudWxsO1xuICAgIHRoaXMuX3dhbGxldFJlcG9ydGVyRGF0YU9iamVjdCA9IG51bGw7XG4gICAgdGhpcy5fcHVibGljV2FsbGV0c1JlcG9ydGVyRGF0YU9iamVjdCA9IG51bGw7XG4gICAgdGhpcy5fYWxyZWFkeUxpc3RlbmluZyA9IFtdO1xuICAgIHRoaXMuX2RhdGFPYmplY3RzVVJMID0ge307XG5cblxuXG5cbiAgICBfdGhpcy5fc2VuZFN0YXR1cygnY3JlYXRlZCcpO1xuXG4gICAgLy8gdXNlZCB0byBzYXZlIGRhdGEgb2YgZWFjaCBvYnNlcnZlciBzYXZpbmcgZGF0YSBhbmQgdGltZXN0YW1wIHRvIHB1Ymxpc2ggdG8gdmVydHhcbiAgICBfdGhpcy5fZGF0YU9ic2VydmVycyA9IHt9O1xuXG4gICAgLy91c2VkIHRvIHNhdmUgaWRlbnRpdHkgb2YgZWFjaCBzdHJlYW0gdXJsXG4gICAgX3RoaXMuX2RhdGFTdHJlYW1JZGVudGl0eSA9IHt9O1xuXG4gICAgLy91c2VkIHRvIHNhdmUgZGF0YSBvZiBlYWNoIHN0cmVhbSB1cmxcbiAgICBfdGhpcy5fZGF0YVN0cmVhbURhdGEgPSB7fTtcblxuICAgIC8vdXNlZCB0byBzYXZlIGh5cGVydHlXYWxsZXQgb2YgZWFjaCBBZGRyZXNzV2FsbGV0XG4gICAgX3RoaXMuX2h5cGVydHlXYWxsZXRBZGRyZXNzID0ge307XG5cbiAgICAvL3VzZWQgdG8gc2F2ZSBjb250ZXh0VXJsIG9mIHZlcnR4UmVtb3RlIFN0cmVhbVxuICAgIF90aGlzLl9jb250ZXh0VXJsVG9SZW1vdmVTdHJlYW0gPSB7fTtcblxuXG5cbiAgICAvL0xpc3RlbmVyIHRvIGFjY2VwdCBzdWJzY3JpYmUgcmVxdWVzdCBvZiBDb250ZXh0UmVwb3J0ZXJzXG4gICAgYnVzLmFkZExpc3RlbmVyKCdkb21haW46Ly9tc2ctbm9kZS5zaGFyaW5nLWNpdGllcy1kc20vc20nLCAobXNnKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSBNZXNzYWdlIG9uIChkb21haW46Ly9tc2ctbm9kZS5zaGFyaW5nLWNpdGllcy1kc20vc20pIDogJywgbXNnKTtcbiAgICAgIGxldCBtc2dSZXNwb25zZSA9IHtcbiAgICAgICAgaWQ6IG1zZy5pZCxcbiAgICAgICAgdHlwZTogJ3Jlc3BvbnNlJyxcbiAgICAgICAgZnJvbTogbXNnLnRvLFxuICAgICAgICB0bzogbXNnLmZyb20sXG4gICAgICAgIGJvZHk6IHtcbiAgICAgICAgICBjb2RlOiAyMDBcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2UobXNnUmVzcG9uc2UpO1xuXG4gICAgfSk7XG5cblxuICAgIGJ1cy5hZGRMaXN0ZW5lcignKicsIChtc2cpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWJdIE1lc3NhZ2UgJywgbXNnLCBfdGhpcy5fZWIsIEpTT04uc3RyaW5naWZ5KF90aGlzLl9kYXRhU3RyZWFtSWRlbnRpdHkpKTtcblxuICAgICAgaWYgKF90aGlzLl9lYiA9PT0gbnVsbCkge1xuICAgICAgICBfdGhpcy5fZWIgPSBuZXcgRXZlbnRCdXMoY29uZmlnLnVybCwgeyBcInZlcnR4YnVzX3BpbmdfaW50ZXJ2YWxcIjogY29uZmlnLnZlcnR4YnVzX3BpbmdfaW50ZXJ2YWwgfSk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWJdIEV2ZW50YnVzJywgX3RoaXMuX2ViKTtcbiAgICAgICAgbGV0IHRlc3QgPSBfdGhpcy5fZWIuZW5hYmxlUmVjb25uZWN0KHRydWUpO1xuICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXScsICB0ZXN0KTtcbiAgICAgICAgX3RoaXMuX2V2ZW50QnVzVXNhZ2UoKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSBNZXNzYWdlIF9ldmVudEJ1c1VzYWdlJywgcmVzdWx0KTtcbiAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICBfdGhpcy5fU3Vic2NyaXB0aW9uTWFuYWdlcihtc2cpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGVsc2Uge1xuXG4gICAgICAgIGZ1bmN0aW9uIHdhaXRGb3JFQigpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSBXYWl0aW5nIGZvciBTb2NrSlMgcmVhZHlTdGF0ZScsIF90aGlzLl9lYi5zb2NrSlNDb25uLnJlYWR5U3RhdGUsICcoJywgV2ViU29ja2V0Lk9QRU4sICcpJyk7XG4gICAgICAgICAgaWYgKFdlYlNvY2tldC5PUEVOID09PSBfdGhpcy5fZWIuc29ja0pTQ29ubi5yZWFkeVN0YXRlKSB7XG4gICAgICAgICAgICBfdGhpcy5fU3Vic2NyaXB0aW9uTWFuYWdlcihtc2cpO1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgdGltZXIgPSBzZXRUaW1lb3V0KHdhaXRGb3JFQiwgMjAwMCk7XG4gICAgICB9XG5cbiAgICB9KTtcblxuICB9XG5cbiAgY3JlYXRlV2FsbGV0KG1zZykge1xuICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgY29uc3Qgd2FsbGV0TWFuYWdlckFkZHJlc3MgPSBtc2cudG87XG5cbiAgICAvLyAxIC0gc2VuZCB0byB3YWxsZXQgbWFuYWdlciAocmVxdWVzdCB0byBjcmVhdGUgd2FsbGV0KVxuICAgIGxldCBoeXBlcnR5VVJMID0gbXNnLmZyb207XG4gICAgbXNnLnR5cGUgPSBtc2cuYm9keS50eXBlO1xuICAgIG1zZy5mcm9tID0gaHlwZXJ0eVVSTDtcbiAgICBkZWxldGUgbXNnLmJvZHk7XG5cbiAgICBfdGhpcy5fZWIuc2VuZCh3YWxsZXRNYW5hZ2VyQWRkcmVzcywgbXNnLCBmdW5jdGlvbiAocmVwbHlfZXJyLCByZXBseSkge1xuXG4gICAgICBpZiAocmVwbHlfZXJyID09IG51bGwpIHtcbiAgICAgICAgLy8gIDIgLSBjYWxsIGNyZWF0ZSgpIG1ldGhvZCBvbiByZXBvcnRlciAoc2VuZCBhcyByZXBseSlcbiAgICAgICAgY29uc29sZS5sb2coXCJbVmVydHhBcHBQcm90b1N0dWJdIFJlY2VpdmVkIHJlcGx5IFwiLCByZXBseSwgJ1xcbmZyb20gbXNnJywgbXNnKTtcblxuICAgICAgICBfdGhpcy5fc2V0VXBSZXBvcnRlcihyZXBseS5ib2R5LmlkZW50aXR5LnVzZXJQcm9maWxlLnVzZXJVUkwsIG51bGwsIHsgYmFsYW5jZTogMCwgdHJhbnNhY3Rpb25zOiBbXSB9LCBbJ3dhbGxldCddLCByZXBseS5ib2R5LmlkZW50aXR5LnVzZXJQcm9maWxlLnVzZXJVUkwsIG51bGwsIHRydWUpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuXG4gICAgICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG5cbiAgICAgICAgICAgIC8vIFRPRE8gMyAtIHNlbmQgMjAwIE9LIHRvIHdhbGxldCBtYW5hZ2VyXG4gICAgICAgICAgICBsZXQgcmVzcG9uc2VNc2cgPSB7fTtcbiAgICAgICAgICAgIHJlc3BvbnNlTXNnLmJvZHkgPSB7fTtcbiAgICAgICAgICAgIHJlc3BvbnNlTXNnLmJvZHkudmFsdWUgPSByZXN1bHQuZGF0YTtcbiAgICAgICAgICAgIHJlc3BvbnNlTXNnLmJvZHkuY29kZSA9IDIwMDtcblxuICAgICAgICAgICAgcmVwbHkucmVwbHkocmVzcG9uc2VNc2csIGZ1bmN0aW9uIChyZXBseV9lcnIsIHJlcGx5Mikge1xuXG4gICAgICAgICAgICAgIC8vIDQgLSBzZW5kIHJlcGx5IGJhY2sgdG8gdGhlIEpTIHdhbGxldCBoeXBlcnR5XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nXG4gICAgICAgICAgICAgIGxldCByZXNwb25zZU1zZyA9IHtcbiAgICAgICAgICAgICAgICBpZDogbXNnLmlkLFxuICAgICAgICAgICAgICAgIHR5cGU6ICdyZXNwb25zZScsXG4gICAgICAgICAgICAgICAgZnJvbTogbXNnLnRvLFxuICAgICAgICAgICAgICAgIHRvOiBoeXBlcnR5VVJMLFxuICAgICAgICAgICAgICAgIGJvZHk6IHtcbiAgICAgICAgICAgICAgICAgIHdhbGxldDogcmVwbHkyLmJvZHkud2FsbGV0LFxuICAgICAgICAgICAgICAgICAgY29kZTogMjAwLFxuICAgICAgICAgICAgICAgICAgcmVwb3J0ZXJfdXJsOiByZXN1bHQudXJsLFxuICAgICAgICAgICAgICAgICAgcHVibGljc191cmw6IF90aGlzLl9wdWJsaWNXYWxsZXRzUmVwb3J0ZXJEYXRhT2JqZWN0LnVybFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gd2FsbGV0IHJldHVybmVkIGZyb20gdmVydHgnLCByZXBseTIuYm9keS53YWxsZXQpO1xuICAgICAgICAgICAgICBpZiAocmVwbHkyLmJvZHkud2FsbGV0LmJhbGFuY2UgIT0gMCkge1xuICAgICAgICAgICAgICAgIGxldCBiYWxhbmNlMSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocmVwbHkyLmJvZHkud2FsbGV0LmJhbGFuY2UpKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5fd2FsbGV0UmVwb3J0ZXJEYXRhT2JqZWN0LmRhdGEuYmFsYW5jZSA9IGJhbGFuY2UxO1xuICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICBsZXQgdHJhbnNhY3Rpb25zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyZXBseTIuYm9keS53YWxsZXQudHJhbnNhY3Rpb25zKSk7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3dhbGxldFJlcG9ydGVyRGF0YU9iamVjdC5kYXRhLnRyYW5zYWN0aW9ucyA9IHRyYW5zYWN0aW9ucztcbiAgICAgICAgICAgICAgbGV0IGFkZHJlc3NDaGFuZ2VzID0gcmVwbHkyLmJvZHkud2FsbGV0LmFkZHJlc3MgKyAnL2NoYW5nZXMnO1xuXG5cbiAgICAgICAgICAgICAgX3RoaXMuX2ViLnJlZ2lzdGVySGFuZGxlcihhZGRyZXNzQ2hhbmdlcywgZnVuY3Rpb24gKGVycm9yLCBtZXNzYWdlKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gIG5ldyBjaGFuZ2Ugb24gd2FsbGV0JywgbWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgX3RoaXMuX3dhbGxldFJlcG9ydGVyRGF0YU9iamVjdC5kYXRhLmJhbGFuY2UgPSBtZXNzYWdlLmJvZHkuYm9keS5iYWxhbmNlO1xuICAgICAgICAgICAgICAgIF90aGlzLl93YWxsZXRSZXBvcnRlckRhdGFPYmplY3QuZGF0YS50cmFuc2FjdGlvbnMgPSBtZXNzYWdlLmJvZHkuYm9keS50cmFuc2FjdGlvbnM7XG4gICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWJdIHNlbmRpbmcgcmVwbHkgYmFjayB0byB3YWxsZXQgSlMnLCByZXNwb25zZU1zZyk7XG5cbiAgICAgICAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyZXNwb25zZU1zZyk7XG5cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgIC8vZGVidWdnZXI7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cblxuICBjcmVhdGVXYWxsZXRQdWIobXNnKSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuXG4gICAgICBjb25zdCB3YWxsZXRNYW5hZ2VyQWRkcmVzcyA9IG1zZy50bztcbiAgICAgIC8vIDEgLSBzZW5kIHRvIHdhbGxldCBtYW5hZ2VyIChyZXF1ZXN0IHRvIGNyZWF0ZSB3YWxsZXQpXG4gICAgICBsZXQgaHlwZXJ0eVVSTCA9IG1zZy5mcm9tO1xuICAgICAgbXNnLnR5cGUgPSBtc2cuYm9keS50eXBlO1xuICAgICAgbXNnLmZyb20gPSBoeXBlcnR5VVJMO1xuICAgICAgZGVsZXRlIG1zZy5ib2R5O1xuXG4gICAgICBfdGhpcy5fZWIuc2VuZCh3YWxsZXRNYW5hZ2VyQWRkcmVzcywgbXNnLCBmdW5jdGlvbiAocmVwbHlfZXJyLCByZXBseSkge1xuXG4gICAgICAgIGlmIChyZXBseV9lcnIgPT0gbnVsbCkge1xuICAgICAgICAgIC8vICAyIC0gY2FsbCBjcmVhdGUoKSBtZXRob2Qgb24gcmVwb3J0ZXIgKHNlbmQgYXMgcmVwbHkpXG4gICAgICAgICAgY29uc29sZS5sb2coXCJbVmVydHhBcHBQcm90b1N0dWJdIFJlY2VpdmVkIHJlcGx5IFwiLCByZXBseSwgJ1xcbmZyb20gbXNnJywgbXNnKTtcblxuICAgICAgICAgIF90aGlzLl9zZXRVcFJlcG9ydGVyKHJlcGx5LmJvZHkuaWRlbnRpdHkudXNlclByb2ZpbGUudXNlclVSTCwgbnVsbCwgeyB3YWxsZXRzOiBbXSB9LCBbJ3dhbGxldCddLCByZXBseS5ib2R5LmlkZW50aXR5LnVzZXJQcm9maWxlLnVzZXJVUkwsIG51bGwsIHRydWUsIHRydWUpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuXG4gICAgICAgICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcblxuICAgICAgICAgICAgICAvLyBUT0RPIDMgLSBzZW5kIDIwMCBPSyB0byB3YWxsZXQgbWFuYWdlclxuICAgICAgICAgICAgICBsZXQgcmVzcG9uc2VNc2cgPSB7fTtcbiAgICAgICAgICAgICAgcmVzcG9uc2VNc2cuYm9keSA9IHt9O1xuICAgICAgICAgICAgICByZXNwb25zZU1zZy5ib2R5LnZhbHVlID0gcmVzdWx0LmRhdGE7XG4gICAgICAgICAgICAgIHJlc3BvbnNlTXNnLmJvZHkuY29kZSA9IDIwMDtcblxuICAgICAgICAgICAgICByZXBseS5yZXBseShyZXNwb25zZU1zZywgZnVuY3Rpb24gKHJlcGx5X2VyciwgcmVwbHkyKSB7XG5cbiAgICAgICAgICAgICAgICAvLyA0IC0gc2VuZCByZXBseSBiYWNrIHRvIHRoZSBKUyB3YWxsZXQgaHlwZXJ0eVxuXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gd2FsbGV0IHJldHVybmVkIGZyb20gdmVydHgnLCByZXBseTIuYm9keS53YWxsZXQpO1xuXG4gICAgICAgICAgICAgICAgX3RoaXMuX3B1YmxpY1dhbGxldHNSZXBvcnRlckRhdGFPYmplY3QuZGF0YS53YWxsZXRzID0gcmVwbHkyLmJvZHkud2FsbGV0LndhbGxldHM7XG4gICAgICAgICAgICAgICAgX3RoaXMuX2ViLnJlZ2lzdGVySGFuZGxlcignd2FsbGV0Oi8vcHVibGljLXdhbGxldHMvY2hhbmdlcycsIGZ1bmN0aW9uIChlcnJvciwgbWVzc2FnZSkge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gIG5ldyBjaGFuZ2Ugb24gd2FsbGV0JywgbWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgICBfdGhpcy5fcHVibGljV2FsbGV0c1JlcG9ydGVyRGF0YU9iamVjdC5kYXRhLndhbGxldHMgPSBtZXNzYWdlLmJvZHkuYm9keS53YWxsZXRzO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gc2VuZGluZyByZXBseSBiYWNrIHRvIHdhbGxldCBKUycsIHJlc3BvbnNlTXNnKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIC8vZGVidWdnZXI7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgfSk7XG5cbiAgfVxuXG5cbiAgX1N1YnNjcmlwdGlvbk1hbmFnZXIobXNnKSB7XG4gICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gaGFuZGxpbmcgbWVzc2FnZXMnLCBtc2cpO1xuICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgaWYgKG1zZy5oYXNPd25Qcm9wZXJ0eSgnYm9keScpICYmIG1zZy5ib2R5Lmhhc093blByb3BlcnR5KCd0eXBlJykpIHtcblxuICAgICAgLy8gVG8gSGFuZGxlIE1lc3NhZ2UgcmVhZCB0eXBlIHRvIGdldCBmb3IgZXhhbXBsZSBzaG9wcyBMaXN0XG4gICAgICBpZiAobXNnLmJvZHkudHlwZSA9PT0gJ3JlYWQnKSB7XG4gICAgICAgIC8vZGVidWdnZXI7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWJdICBOZXcgUmVhZCBNZXNzYWdlJywgX3RoaXMuX2RhdGFTdHJlYW1EYXRhLCBKU09OLnN0cmluZ2lmeShfdGhpcy5fZGF0YVN0cmVhbURhdGFbbXNnLnRvXSkpO1xuICAgICAgICBsZXQgcmVzcG9uc2VNc2cgPSB7XG4gICAgICAgICAgZnJvbTogbXNnLnRvLFxuICAgICAgICAgIHRvOiBtc2cuZnJvbSxcbiAgICAgICAgICBpZDogbXNnLmlkLFxuICAgICAgICAgIHR5cGU6ICdyZXNwb25zZSdcbiAgICAgICAgfTtcbiAgICAgICAgcmVzcG9uc2VNc2cuYm9keSA9IHt9O1xuXG4gICAgICAgIHJlc3BvbnNlTXNnLmJvZHkudmFsdWUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KF90aGlzLl9kYXRhU3RyZWFtRGF0YVttc2cudG9dKSk7XG4gICAgICAgIC8vcmVzcG9uc2VNc2cuYm9keS52YWx1ZSA9IF90aGlzLl9kYXRhU3RyZWFtRGF0YVttc2cudG9dO1xuICAgICAgICByZXNwb25zZU1zZy5ib2R5LmNvZGUgPSAyMDA7XG4gICAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2UocmVzcG9uc2VNc2cpO1xuICAgICAgfVxuXG4gICAgICBpZiAobXNnLmJvZHkudHlwZSA9PT0gJ2NyZWF0ZScpIHtcbiAgICAgICAgaWYgKG1zZy5ib2R5LnJlc291cmNlID09ICd3YWxsZXQnKSB7XG4gICAgICAgICAgX3RoaXMuY3JlYXRlV2FsbGV0KG1zZyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMuc21hcnRJb3RJbnRlZ3JhdGlvbihtc2cpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYobXNnLmJvZHkudHlwZSA9PT0gJ2RlbGV0ZScpIHtcbiAgICAgICAgX3RoaXMuc21hcnRJb3RJbnRlZ3JhdGlvbihtc2cpO1xuICAgICAgfVxuXG4gICAgfSBlbHNlIGlmIChtc2cudHlwZSA9PT0gJ2NyZWF0ZScgJiYgbXNnLmZyb20uaW5jbHVkZXMoJy9zdWJzY3JpcHRpb24nKSkge1xuICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gVE8gSU5WSVRFIE1TRycsIG1zZyk7XG5cbiAgICAgIC8vIGhhbmRsZSBtZXNzYWdlIHN1YnNjcmliZSBiZWZvcmUgaW52aXRlIFZlcnR4XG4gICAgICBfdGhpcy5fZWIucmVnaXN0ZXJIYW5kbGVyKG1zZy5mcm9tLCBmdW5jdGlvbiAoZXJyb3IsIG1lc3NhZ2VGUk9Nc3Vic2NyaXB0aW9uKSB7XG5cbiAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gc3Vic2NyaXB0aW9uIG1lc3NhZ2U6ICcsIG1lc3NhZ2VGUk9Nc3Vic2NyaXB0aW9uKTtcbiAgICAgICAgbGV0IG1lc3NhZ2VUb1N1YnNjcmliZSA9IG1lc3NhZ2VGUk9Nc3Vic2NyaXB0aW9uLmJvZHk7XG4gICAgICAgIGlmIChtZXNzYWdlVG9TdWJzY3JpYmUudG8uaW5jbHVkZXMoJy9zdWJzY3JpcHRpb24nKSkge1xuICAgICAgICAgIGxldCBzY2hlbWFfdXJsID0gJ2h5cGVydHktY2F0YWxvZ3VlOi8vY2F0YWxvZ3VlLicgKyBfdGhpcy5fZG9tYWluICsgJy8ud2VsbC1rbm93bi9kYXRhc2NoZW1hL0NvbnRleHQnO1xuICAgICAgICAgIGxldCBjb250ZXh0VXJsID0gbWVzc2FnZVRvU3Vic2NyaWJlLnRvLnNwbGl0KFwiL3N1YnNjcmlwdGlvblwiKVswXTtcblxuICAgICAgICAgIC8vIHNob3VsZCByZXN1bWUgb2JzZXJ2ZXJzLCBpZiBkb250IGhhdmUgZ28gdG8gX3NldFVwT2JzZXJ2ZXJcblxuICAgICAgICAgIF90aGlzLl9yZXN1bWVPYnNlcnZlcnMoY29udGV4dFVybCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAocmVzdWx0ID09IGZhbHNlKSB7XG4gICAgICAgICAgICAgIF90aGlzLl9zZXRVcE9ic2VydmVyKG1lc3NhZ2VUb1N1YnNjcmliZS5ib2R5LmlkZW50aXR5LCBjb250ZXh0VXJsLCBzY2hlbWFfdXJsKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICBsZXQgcmVzcG9uc2UgPSB7IGJvZHk6IHsgY29kZTogMjAwIH0gfTtcbiAgICAgICAgICAgICAgICAgIG1lc3NhZ2VGUk9Nc3Vic2NyaXB0aW9uLnJlcGx5KHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgbGV0IHJlc3BvbnNlID0geyBib2R5OiB7IGNvZGU6IDQwNiB9IH07XG4gICAgICAgICAgICAgICAgICBtZXNzYWdlRlJPTXN1YnNjcmlwdGlvbi5yZXBseShyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGxldCBjaGFuZ2VzQWRkcmVzcyA9IHJlc3VsdC51cmwgKyBcIi9jaGFuZ2VzXCI7XG4gICAgICAgICAgICAgIF90aGlzLl9hbHJlYWR5TGlzdGVuaW5nLnB1c2goY2hhbmdlc0FkZHJlc3MpO1xuICAgICAgICAgICAgICBfdGhpcy5fYnVzLmFkZExpc3RlbmVyKGNoYW5nZXNBZGRyZXNzLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fZWIuc2VuZChldmVudC50bywgZXZlbnQuYm9keS52YWx1ZSwgZnVuY3Rpb24gKHJlcGx5X2VyciwgcmVwbHkpIHtcbiAgICAgICAgICAgICAgICAgIGlmIChyZXBseV9lcnIgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIltWZXJ0eEFwcFByb3RvU3R1Yl0gUmVjZWl2ZWQgcmVwbHkgZnJvbSBjaGFuZ2UgXCIsIHJlcGx5KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIGxldCByZXNwb25zZSA9IHsgYm9keTogeyBjb2RlOiAyMDAgfSB9O1xuICAgICAgICAgICAgICBtZXNzYWdlRlJPTXN1YnNjcmlwdGlvbi5yZXBseShyZXNwb25zZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAvL2RlYnVnZ2VyO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgX3RoaXMuX3NldFVwT2JzZXJ2ZXIobWVzc2FnZVRvU3Vic2NyaWJlLmJvZHkuaWRlbnRpdHksIGNvbnRleHRVcmwsIHNjaGVtYV91cmwpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgICBsZXQgcmVzcG9uc2UgPSB7IGJvZHk6IHsgY29kZTogMjAwIH0gfTtcbiAgICAgICAgICAgICAgbWVzc2FnZUZST01zdWJzY3JpcHRpb24ucmVwbHkocmVzcG9uc2UpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgbGV0IHJlc3BvbnNlID0geyBib2R5OiB7IGNvZGU6IDQwNiB9IH07XG4gICAgICAgICAgICAgIG1lc3NhZ2VGUk9Nc3Vic2NyaXB0aW9uLnJlcGx5KHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIC8vIGNoZWNrIGlmIGlkZW50aXR5IGV4aXN0c1xuXG4gICAgICAvL01lc3NhZ2UgdG8gaW52aXRlIFZlcnR4IHRvIFN1YnNjcmliZSBhIFJlcG9ydGVyXG4gICAgICBsZXQgdXNlclVSTDtcbiAgICAgIGxldCBndWlkO1xuICAgICAgaWYgKG1zZy5ib2R5LmlkZW50aXR5KSB7XG4gICAgICAgIHVzZXJVUkwgPSBtc2cuYm9keS5pZGVudGl0eS51c2VyUHJvZmlsZS51c2VyVVJMO1xuICAgICAgICBndWlkID0gbXNnLmJvZHkuaWRlbnRpdHkudXNlclByb2ZpbGUuZ3VpZDtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB1c2VyVVJMID0gbXNnLmJvZHkudmFsdWUucmVwb3J0ZXI7XG4gICAgICB9XG4gICAgICBsZXQgaW52aXRlTWVzc2FnZSA9IHtcbiAgICAgICAgdHlwZTogJ2NyZWF0ZScsXG4gICAgICAgIGZyb206IG1zZy5mcm9tLFxuICAgICAgICB0bzogbXNnLnRvLFxuICAgICAgICBpZGVudGl0eTogeyB1c2VyUHJvZmlsZTogeyB1c2VyVVJMOiB1c2VyVVJMLCBndWlkOiBndWlkIH0gfVxuICAgICAgfVxuICAgICAgLy9JbnZpdGUgVmVydHggdG8gc3Vic2NyaWJlLi4uXG4gICAgICBfdGhpcy5fZWIucHVibGlzaChtc2cudG8sIGludml0ZU1lc3NhZ2UpO1xuXG4gICAgICBsZXQgbXNnUmVzcG9uc2UgPSB7XG4gICAgICAgIGlkOiBtc2cuaWQsXG4gICAgICAgIHR5cGU6ICdyZXNwb25zZScsXG4gICAgICAgIGZyb206IG1zZy50byxcbiAgICAgICAgdG86IG1zZy5mcm9tLFxuICAgICAgICBib2R5OiB7XG4gICAgICAgICAgY29kZTogMjAwXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKG1zZ1Jlc3BvbnNlKTtcblxuICAgIH0gZWxzZSBpZiAobXNnLnRvLmluY2x1ZGVzKCcvY2hhbmdlcycpICYmICFfdGhpcy5fYWxyZWFkeUxpc3RlbmluZy5pbmNsdWRlcyhtc2cudG8pKSB7XG4gICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSBuZXcgY2hhbmdlICcsIG1zZyk7XG4gICAgICBfdGhpcy5fZWIucHVibGlzaChtc2cudG8sIG1zZy5ib2R5LnZhbHVlLCBmdW5jdGlvbiAocmVwbHlfZXJyLCByZXBseSkge1xuICAgICAgICBpZiAocmVwbHlfZXJyID09IG51bGwpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIltWZXJ0eEFwcFByb3RvU3R1Yl0gUmVjZWl2ZWQgcmVwbHkgZnJvbSBjaGFuZ2UgXCIsIHJlcGx5KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgc21hcnRJb3RJbnRlZ3JhdGlvbihtc2cpe1xuXG4gICAgbGV0IF90aGlzID0gdGhpcztcbiAgICBjb25zdCBzbWFydElvdFN0dWJBZGRyZXNzID0gbXNnLnRvO1xuXG4gICAgbXNnLnR5cGUgPSBtc2cuYm9keS50eXBlO1xuICAgIGRlbGV0ZSBtc2cuYm9keS5mcm9tO1xuICAgIGRlbGV0ZSBtc2cuYm9keS50eXBlO1xuXG4gICAgX3RoaXMuX2ViLnNlbmQoc21hcnRJb3RTdHViQWRkcmVzcywgbXNnLCBmdW5jdGlvbiAocmVwbHlfZXJyLCByZXBseSkge1xuICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gc21hcnRJb3QgSW50ZWdyYXRpb24nLCByZXBseSxyZXBseV9lcnIpO1xuICAgICAgaWYgKHJlcGx5X2VyciA9PSBudWxsKSB7XG5cblxuICAgICAgICBfdGhpcy5fc2VuZFJlcGx5TXNnKG1zZyxyZXBseS5ib2R5LmJvZHkpO1xuICAgICAgICAvKlxuICAgICAgICBpZiAobXNnLmJvZHkucmVzb3VyY2UgPT0gJ2RldmljZScpIHtcbiAgICAgICAgICBfdGhpcy5fc2VuZFJlcGx5TXNnKG1zZyxyZXBseS5ib2R5LmJvZHkpO1xuICAgICAgICB9IGVsc2UgaWYgKG1zZy5ib2R5LnJlc291cmNlID09ICdzdHJlYW0nKSB7XG5cbiAgICAgICAgICBpZiAocmVwbHkuYm9keS5ib2R5LmNvZGUgPT0gMjAwKSB7XG4gICAgICAgICAgICBsZXQgb2JqVXJsID0gJ2NvbnRleHQ6Ly9zaGFyaW5nLWNpdGllcy1kc20vJyArIG1zZy5ib2R5LnBsYXRmb3JtSUQgKyAnLycgKyBtc2cuYm9keS5wbGF0Zm9ybVVJRDtcbiAgICAgICAgICAgIGxldCBzY2hlbWFVUkwgPSAnaHlwZXJ0eS1jYXRhbG9ndWU6Ly9jYXRhbG9ndWUuJyArIF90aGlzLl9kb21haW4gKyAnLy53ZWxsLWtub3duL2RhdGFzY2hlbWEvQ29udGV4dCc7XG4gICAgICAgICAgICBsZXQgb25DaGFuZ2VzT2JqVVJMID0gb2JqVXJsICsgJy9jaGFuZ2VzJztcblxuICAgICAgICAgICAgLy9UT0RPOiB3ZSBzaG91bGQgc2F2ZSByZXBvcnRlci0+dXJsPyB0byBhc3NvY2lhdGUgaXQ/PyFcbiAgICAgICAgICAgIF90aGlzLl9lYi5yZWdpc3RlckhhbmRsZXIob25DaGFuZ2VzT2JqVVJMLCBmdW5jdGlvbiAoZXJyb3IsIG1lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gcmVjZWl2ZWQgYSBuZXcgY2hhbmdlOiAnLCBKU09OLnN0cmluZ2lmeShtZXNzYWdlKSwgX3RoaXMuX2RhdGFPYmplY3RzVVJMKTtcbiAgICAgICAgICAgICAgLy9UT0RPIG5ldyBkYXRhIG9uIHJlcG9ydGVyLCwgdG8gdXBkYXRlP1xuICAgICAgICAgICAgfSk7XG5cblxuICAgICAgICAgIF90aGlzLl9yZXN1bWVSZXBvcnRlcnMob2JqVXJsLCBtc2cuaWRlbnRpdHkudXNlclByb2ZpbGUudXNlclVSTCkudGhlbihmdW5jdGlvbiAocmVwb3J0ZXJSZXN1bWVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSByZXBvcnRlciByZXN1bWVkJywgcmVwb3J0ZXJSZXN1bWVkICk7XG4gICAgICAgICAgICBpZiAocmVwb3J0ZXJSZXN1bWVkICE9IGZhbHNlKSB7XG5cbiAgICAgICAgICAgICAgX3RoaXMuX2RhdGFPYmplY3RzVVJMW3JlcG9ydGVyUmVzdW1lZC51cmxdID0gcmVwb3J0ZXJSZXN1bWVkO1xuXG5cblxuICAgICAgICAgICAgICByZXBvcnRlclJlc3VtZWQub25TdWJzY3JpcHRpb24oZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgZXZlbnQuYWNjZXB0KCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gbmV3IHN1YnMnLCBldmVudCk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICBfdGhpcy5fc2VuZFJlcGx5TXNnKG1zZyxyZXBseS5ib2R5LmJvZHkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgX3RoaXMuX3NldFVwUmVwb3J0ZXIobXNnLmlkZW50aXR5LnVzZXJQcm9maWxlLnVzZXJVUkwsIHNjaGVtYVVSTCwge30sIFsnc21hcnRpb3RfY29udGV4dCddLCBvYmpVcmwsIG9ialVybCwgZmFsc2UpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIF90aGlzLl9kYXRhT2JqZWN0c1VSTFtyZXN1bHQudXJsXSA9IHJlc3VsdDtcbiAgICAgICAgICAgICAgICByZXN1bHQub25TdWJzY3JpcHRpb24oZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICBldmVudC5hY2NlcHQoKTtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWJdIG5ldyBzdWJzJywgZXZlbnQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIF90aGlzLl9zZW5kUmVwbHlNc2cobXNnLHJlcGx5LmJvZHkuYm9keSk7XG5cbiAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGRlYnVnZ2VyO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuXG5cbiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGRlYnVnZ2VyO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICovXG4gICAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gbm8gcmVwbHknLCBtc2cpO1xuXG4gICAgfVxuICAgIH0pO1xuXG5cbiAgfVxuICBfc2VuZFJlcGx5TXNnKG1zZyxib2R5KSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcblxuICAgIGxldCByZXNwb25zZU1zZyA9IHtcbiAgICAgIGlkOiBtc2cuaWQsXG4gICAgICB0eXBlOiAncmVzcG9uc2UnLFxuICAgICAgZnJvbTogbXNnLnRvLFxuICAgICAgdG86IG1zZy5mcm9tLFxuICAgICAgYm9keTogYm9keVxuICAgIH07XG4gICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gc2VuZGluZyByZXBseSBiYWNrIHRvIERldmljZSBNYW5hZ2VyJywgcmVzcG9uc2VNc2cpO1xuICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2UocmVzcG9uc2VNc2cpO1xuICB9XG5cbiAgX2NvbmZpZ0F2YWlsYWJsZVN0cmVhbXMoKSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWJdIEVCIG9uIHJlYWR5U3RhdGUoT1BFTikgU3RyZWFtcycsIF90aGlzLl9zdHJlYW1zKTtcbiAgICAgIGxldCBjb3VudCA9IDA7XG4gICAgICBfdGhpcy5fc3RyZWFtcy5mb3JFYWNoKGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gU3RyZWFtJywgc3RyZWFtLCBfdGhpcy5fZWIuc29ja0pTQ29ubi5yZWFkeVN0YXRlKTtcbiAgICAgICAgbGV0IG1zZyA9IHsgdHlwZTogJ3JlYWQnIH07XG5cbiAgICAgICAgX3RoaXMuX2ViLnNlbmQoc3RyZWFtLnN0cmVhbSwgbXNnLCBmdW5jdGlvbiAocmVwbHlfZXJyLCByZXBseSkge1xuICAgICAgICAgIGlmIChyZXBseV9lcnIgPT0gbnVsbCkge1xuXG4gICAgICAgICAgICBjb3VudCsrO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJbVmVydHhBcHBQcm90b1N0dWJdIFJlY2VpdmVkIHJlcGx5IFwiLCByZXBseS5ib2R5KTtcblxuICAgICAgICAgICAgX3RoaXMuX2RhdGFTdHJlYW1JZGVudGl0eVtzdHJlYW0uc3RyZWFtXSA9IHJlcGx5LmJvZHkuaWRlbnRpdHk7XG4gICAgICAgICAgICBfdGhpcy5fZGF0YVN0cmVhbURhdGFbc3RyZWFtLnN0cmVhbV0gPSByZXBseS5ib2R5LmRhdGE7XG5cbiAgICAgICAgICAgIGlmIChjb3VudCA9PSBfdGhpcy5fc3RyZWFtcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgcmV1c2VVUkwgPSBfdGhpcy5fZm9ybUN0eFVybChzdHJlYW0pO1xuICAgICAgICAgICAgbGV0IHNjaGVtYVVSTCA9ICdoeXBlcnR5LWNhdGFsb2d1ZTovL2NhdGFsb2d1ZS4nICsgX3RoaXMuX2RvbWFpbiArICcvLndlbGwta25vd24vZGF0YXNjaGVtYS9Db250ZXh0JztcbiAgICAgICAgICAgIC8vX3RoaXMuX3NldFVwUmVwb3J0ZXIocmVwbHkuYm9keS5pZGVudGl0eS51c2VyUHJvZmlsZS51c2VyVVJMLCByZXBseS5ib2R5LmRhdGEsIHN0cmVhbS5yZXNvdXJjZXMsIHN0cmVhbS5uYW1lLCByZXVzZVVSTClcblxuXG4gICAgICAgICAgICBfdGhpcy5fcmVzdW1lUmVwb3J0ZXJzKHN0cmVhbS5uYW1lLCByZXBseS5ib2R5LmlkZW50aXR5LnVzZXJQcm9maWxlLnVzZXJVUkwpLnRoZW4oZnVuY3Rpb24gKHJlcG9ydGVyKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdWZXJ0eEFwcFByb3RvU3R1Yl0uX3Jlc3VtZVJlcG9ydGVycyAocmVzdWx0KSAgJywgcmVwb3J0ZXIpO1xuICAgICAgICAgICAgICBpZiAocmVwb3J0ZXIgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fc2V0VXBSZXBvcnRlcihyZXBseS5ib2R5LmlkZW50aXR5LnVzZXJQcm9maWxlLnVzZXJVUkwsIHNjaGVtYVVSTCwgcmVwbHkuYm9keS5kYXRhLCBzdHJlYW0ucmVzb3VyY2VzLCBzdHJlYW0ubmFtZSwgcmV1c2VVUkwpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xuXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLl9lYi5yZWdpc3RlckhhbmRsZXIocmV1c2VVUkwsIGZ1bmN0aW9uIChlcnJvciwgbWVzc2FnZSkge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWJdIHJlY2VpdmVkIGEgbWVzc2FnZSBvbiA6ICcsIHJlc3VsdCwgSlNPTi5zdHJpbmdpZnkobWVzc2FnZSkpO1xuICAgICAgICAgICAgICAgICAgICAgIC8vVE9ETyBuZXcgZGF0YSBvbiByZXBvcnRlciwsIHRvIHVwZGF0ZT8gb3Igbm90PyBzaG91bGQgYmUgc3RhdGljP1xuXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlcG9ydGVyLmRhdGEudmFsdWVzID0gcmVwbHkuYm9keS5kYXRhLnZhbHVlcztcbiAgICAgICAgICAgICAgICByZXBvcnRlci5vblN1YnNjcmlwdGlvbihmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LmFjY2VwdCgpO1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gbmV3IHN1YnMnLCBldmVudCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAgIC8vZGVidWdnZXI7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIltWZXJ0eEFwcFByb3RvU3R1Yl0gTm8gcmVwbHlcIiwgcmVwbHlfZXJyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICB9KTtcblxuICB9XG5cbiAgX3NldFVwUHVibGljV2FsbGV0cygpIHtcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuXG4gICAgICBsZXQgY3JlYXRlUHViID0ge1xuXHQgICAgICAgdHlwZTogJ2NyZWF0ZScsXG4gICAgICAgICB0bzogJ2h5cGVydHk6Ly9zaGFyaW5nLWNpdGllcy1kc20vd2FsbGV0LW1hbmFnZXInLFxuICAgICAgICAgZnJvbTogX3RoaXMuX3J1bnRpbWVTZXNzaW9uVVJMLFxuICAgICAgICAgaWRlbnRpdHk6IF90aGlzLl9wdWJsaWNXYWxsZXRzXG4gICAgICAgfVxuXG4gICAgICAgX3RoaXMuX2ViLnNlbmQoJ2h5cGVydHk6Ly9zaGFyaW5nLWNpdGllcy1kc20vd2FsbGV0LW1hbmFnZXInLCBjcmVhdGVQdWIsIGZ1bmN0aW9uIChyZXBseV9lcnIsIHJlcGx5KSB7XG4gICAgICAgICBpZiAocmVwbHlfZXJyID09IG51bGwpIHtcblxuICAgICAgICAgICBjb25zb2xlLmxvZyhcIltWZXJ0eEFwcFByb3RvU3R1Yl0gUmVjZWl2ZWQgcmVwbHkgcHVibGljIHdhbGxldHNcIiwgcmVwbHkpO1xuXG4gICAgICAgICAgIGxldCByZXNwb25zZU1zZyA9IHt9O1xuICAgICAgICAgICByZXNwb25zZU1zZy5ib2R5ID0ge307XG4gICAgICAgICAgIHJlc3BvbnNlTXNnLmJvZHkudmFsdWUgPSB7fTtcbiAgICAgICAgICAgcmVzcG9uc2VNc2cuYm9keS5jb2RlID0gMjAwO1xuXG4gICAgICAgICAgIHJlcGx5LnJlcGx5KHJlc3BvbnNlTXNnLCBmdW5jdGlvbiAocmVwbHlfZXJyLCByZXBseTIpIHtcblxuICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiW1ZlcnR4QXBwUHJvdG9TdHViXSBSZWNlaXZlZCByZXBseTIgcHVibGljIHdhbGxldHNcIiwgcmVwbHkpO1xuXG4gICAgICAgICAgIH0pO1xuICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICB9XG4gICAgICAgfSk7XG5cbiAgICB9KTtcbiAgfVxuXG4gIF9yZXN1bWVSZXBvcnRlcnMobmFtZSwgcmVwb3J0ZXJVUkwpIHtcbiAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViLl9yZXN1bWVSZXBvcnRlcnNdIFJlc3VtaW5nIHJlcG9ydGVyIG91dCcsIG5hbWUsIHJlcG9ydGVyVVJMKTtcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xuICAgIC8vZGVidWdnZXI7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIF90aGlzLl9zeW5jaGVyLnJlc3VtZVJlcG9ydGVycyh7IHN0b3JlOiB0cnVlLCByZXBvcnRlcjogcmVwb3J0ZXJVUkwgfSkudGhlbigocmVwb3J0ZXJzKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWIuX3Jlc3VtZVJlcG9ydGVyc10gUmVzdW1pbmcgcmVwb3J0ZXIgaW4nLCBuYW1lLCByZXBvcnRlclVSTCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWIuX3Jlc3VtZVJlcG9ydGVyc10gUmVwb3J0ZXJzIHJlc3VtZWQnLCByZXBvcnRlcnMpO1xuICAgICAgICAvL2RlYnVnZ2VyO1xuXG4gICAgICAgIGxldCByZXBvcnRlcnNMaXN0ID0gT2JqZWN0LmtleXMocmVwb3J0ZXJzKTtcblxuICAgICAgICBpZiAocmVwb3J0ZXJzTGlzdC5sZW5ndGggPiAwKSB7XG5cbiAgICAgICAgICByZXBvcnRlcnNMaXN0LmZvckVhY2goKGRhdGFPYmplY3RSZXBvcnRlclVSTCkgPT4ge1xuXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViLl9yZXN1bWVSZXBvcnRlcnNdICcsIG5hbWUsIGRhdGFPYmplY3RSZXBvcnRlclVSTCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViLl9yZXN1bWVSZXBvcnRlcnNdICcsIG5hbWUsIHJlcG9ydGVyc1tkYXRhT2JqZWN0UmVwb3J0ZXJVUkxdKTtcblxuICAgICAgICAgICAgaWYgKHJlcG9ydGVyVVJMID09IHJlcG9ydGVyc1tkYXRhT2JqZWN0UmVwb3J0ZXJVUkxdLm1ldGFkYXRhLnJlcG9ydGVyICYmIHJlcG9ydGVyc1tkYXRhT2JqZWN0UmVwb3J0ZXJVUkxdLm1ldGFkYXRhLm5hbWUgPT0gbmFtZSkge1xuICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShyZXBvcnRlcnNbZGF0YU9iamVjdFJlcG9ydGVyVVJMXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuIHJlc29sdmUoZmFsc2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiByZXNvbHZlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfSkuY2F0Y2goKHJlYXNvbikgPT4ge1xuICAgICAgICBjb25zb2xlLmluZm8oJ1tWZXJ0eEFwcFByb3RvU3R1Yi5fcmVzdW1lUmVwb3J0ZXJzXSBSZXBvcnRlcnM6JywgcmVhc29uKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgX3Jlc3VtZU9ic2VydmVycyhjb250ZXh0VXJsKSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAvL2RlYnVnZ2VyO1xuICAgICAgX3RoaXMuX3N5bmNoZXIucmVzdW1lT2JzZXJ2ZXJzKHsgc3RvcmU6IHRydWUgfSkudGhlbigob2JzZXJ2ZXJzKSA9PiB7XG4gICAgICAgIC8vZGVidWdnZXI7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWJdIFJlc3VtaW5nIG9ic2VydmVyIDogJywgb2JzZXJ2ZXJzLCBfdGhpcywgX3RoaXMuX29uUmVzdW1lKTtcblxuICAgICAgICBsZXQgb2JzZXJ2ZXJzTGlzdCA9IE9iamVjdC5rZXlzKG9ic2VydmVycyk7XG4gICAgICAgIGlmIChvYnNlcnZlcnNMaXN0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAvL2RlYnVnZ2VyO1xuICAgICAgICAgIG9ic2VydmVyc0xpc3QuZm9yRWFjaCgoZGF0YU9iamVjdE9ic2VydmVyVVJMKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXS5zeW5jaGVyLnJlc3VtZU9ic2VydmVyOiAnLCBkYXRhT2JqZWN0T2JzZXJ2ZXJVUkwpO1xuICAgICAgICAgICAgaWYgKGNvbnRleHRVcmwgPT0gZGF0YU9iamVjdE9ic2VydmVyVVJMKSB7XG4gICAgICAgICAgICAgIHJlc29sdmUob2JzZXJ2ZXJzW2RhdGFPYmplY3RPYnNlcnZlclVSTF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlc29sdmUoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICAgIHJlc29sdmUoZmFsc2UpO1xuXG4gICAgICB9KS5jYXRjaCgocmVhc29uKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuaW5mbygnW0dyb3VwQ2hhdE1hbmFnZXJdIFJlc3VtZSBPYnNlcnZlciB8ICcsIHJlYXNvbik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIF9mb3JtQ3R4VXJsKHN0cmVhbSkge1xuICAgIGxldCBfdGhpcyA9IHRoaXM7XG4gICAgbGV0IElEID0gX3RoaXMuX2NvbmZpZy5ydW50aW1lVVJMLnNwbGl0KCcvJylbM107XG4gICAgcmV0dXJuICdjb250ZXh0Oi8vJyArIF90aGlzLl9jb25maWcuaG9zdCArICcvJyArIElEICsgJy8nICsgc3RyZWFtLmlkO1xuICB9XG5cbiAgX3NldFVwUmVwb3J0ZXIoaWRlbnRpdHlVUkwsIG9iamVjdERlc2NVUkwsIGRhdGEsIHJlc291cmNlcywgbmFtZSwgcmV1c2VVUkwsIGNyZWF0ZVdhbGxldCA9IGZhbHNlLCBpc1B1YldhbGxldCA9IGZhbHNlKSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuXG4gICAgICBpZiAoIWNyZWF0ZVdhbGxldCkge1xuICAgICAgICBsZXQgaW5wdXQgPSB7XG4gICAgICAgICAgcmVzb3VyY2VzOiByZXNvdXJjZXMsXG4gICAgICAgICAgZXhwaXJlczogMzYwMCxcbiAgICAgICAgICByZXBvcnRlcjogaWRlbnRpdHlVUkwsXG4gICAgICAgICAgcmV1c2VVUkw6IHJldXNlVVJMLFxuICAgICAgICAgIGRvbWFpbl9yZWdpc3RyYXRpb246IGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgLy9kZWJ1Z2dlcjtcbiAgICAgICAgX3RoaXMuX3N5bmNoZXIuY3JlYXRlKG9iamVjdERlc2NVUkwsIFtdLCBkYXRhLCB0cnVlLCBmYWxzZSwgbmFtZSwgbnVsbCwgaW5wdXQpXG4gICAgICAgICAgLnRoZW4oKHJlcG9ydGVyKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSBSRVBPUlRFUiBSRVRVUk5FRCcsIHJlcG9ydGVyKTtcbiAgICAgICAgICAgIHJlcG9ydGVyLm9uU3Vic2NyaXB0aW9uKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICBldmVudC5hY2NlcHQoKTtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gbmV3IHN1YnMnLCBldmVudCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc29sdmUocmVwb3J0ZXIpO1xuXG4gICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignW1ZlcnR4QXBwUHJvdG9TdHViXSBlcnInLCBlcnIpO1xuICAgICAgICAgICAgcmVzb2x2ZShudWxsKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yi5fc2V0VXBSZXBvcnRlcl0gV2FsbGV0IFJFU1VNRS9DUkVBVEUnKTtcbiAgICAgICAgX3RoaXMuX3Jlc3VtZVJlcG9ydGVycyhuYW1lLCBuYW1lKS50aGVuKGZ1bmN0aW9uICh3YWxsZXQpIHtcbiAgICAgICAgICAvL2RlYnVnZ2VyO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWIuX3NldFVwUmVwb3J0ZXJdIFdhbGxldCByZXN1bWVkJywgd2FsbGV0KTtcbiAgICAgICAgICBpZiAod2FsbGV0ICE9IGZhbHNlKSB7XG5cbiAgICAgICAgICAgIGlmIChpc1B1YldhbGxldCkge1xuICAgICAgICAgICAgICBfdGhpcy5fcHVibGljV2FsbGV0c1JlcG9ydGVyRGF0YU9iamVjdCA9IHdhbGxldDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIF90aGlzLl93YWxsZXRSZXBvcnRlckRhdGFPYmplY3QgPSB3YWxsZXQ7XG4gICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgd2FsbGV0Lm9uU3Vic2NyaXB0aW9uKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICBldmVudC5hY2NlcHQoKTtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yi5fc2V0VXBSZXBvcnRlcl0gbmV3IHN1YnMnLCBldmVudCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc29sdmUod2FsbGV0KTtcblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfdGhpcy5fd2FsbGV0UmVwb3J0ZXIuY3JlYXRlKGRhdGEsIHJlc291cmNlcywgbmFtZSwgaWRlbnRpdHlVUkwsIHJldXNlVVJMLCBmYWxzZSkudGhlbihmdW5jdGlvbiAod2FsbGV0KSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbVmVydHhBcHBQcm90b1N0dWIuX3NldFVwUmVwb3J0ZXJdIFdhbGxldCBjcmVhdGVkJywgd2FsbGV0KTtcblxuICAgICAgICAgICAgICBpZiAoaXNQdWJXYWxsZXQpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fcHVibGljV2FsbGV0c1JlcG9ydGVyRGF0YU9iamVjdCA9IHdhbGxldDtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fd2FsbGV0UmVwb3J0ZXJEYXRhT2JqZWN0ID0gd2FsbGV0O1xuICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICB3YWxsZXQub25TdWJzY3JpcHRpb24oZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgZXZlbnQuYWNjZXB0KCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yi5fc2V0VXBSZXBvcnRlcl0gbmV3IHN1YnMnLCBldmVudCk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICByZXNvbHZlKHdhbGxldCk7XG4gICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gZXJyJywgZXJyKTtcbiAgICAgICAgICAgICAgcmVzb2x2ZShudWxsKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG5cbiAgICAgICAgfSk7XG5cbiAgICAgIH1cblxuICAgIH0pO1xuICB9XG5cbiAgLy9sZXQgc2NoZW1hX3VybCA9ICdoeXBlcnR5LWNhdGFsb2d1ZTovL2NhdGFsb2d1ZS5sb2NhbGhvc3QvLndlbGwta25vd24vZGF0YXNjaGVtYS9Db250ZXh0JztcbiAgX3NldFVwT2JzZXJ2ZXIoaWRlbnRpdHlUb1VzZSwgY29udGV4dFVybCwgc2NoZW1hVXJsKSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAvL01lc3NhZ2VCb2R5SWRlbnRpdHkgQ29uc3RydWN0b3JcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgIF90aGlzLl9zeW5jaGVyLnN1YnNjcmliZShzY2hlbWFVcmwsIGNvbnRleHRVcmwsIHRydWUsIGZhbHNlLCB0cnVlLCBpZGVudGl0eVRvVXNlKS50aGVuKGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1tWZXJ0eEFwcFByb3RvU3R1Yl0gc3Vic2NyaWJlIHN1Y2Nlc3MnLCBvYmopO1xuICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgIHJlc29sdmUoZmFsc2UpO1xuICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSBlcnJvcicsIGVycm9yKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgX2V2ZW50QnVzVXNhZ2UoKSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSB3YWl0aW5nIGZvciBlYiBPcGVuIHN0YXRlKCcsX3RoaXMuX2ViLnNvY2tKU0Nvbm4ucmVhZHlTdGF0ZSwgJyknLCBfdGhpcy5fZWIpO1xuXG4gICAgICBfdGhpcy5fZWIub25vcGVuID0gKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSBfdGhpcy5fZWItPiBvcGVuJyk7XG5cbiAgICAgICAgZnVuY3Rpb24gd2FpdEZvckVCMSgpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSBXYWl0aW5nIGZvciBTb2NrSlMgcmVhZHlTdGF0ZScsIF90aGlzLl9lYi5zb2NrSlNDb25uLnJlYWR5U3RhdGUsICcoJywgV2ViU29ja2V0Lk9QRU4sICcpJyk7XG4gICAgICAgICAgaWYgKFdlYlNvY2tldC5PUEVOID09PSBfdGhpcy5fZWIuc29ja0pTQ29ubi5yZWFkeVN0YXRlKSB7XG4gICAgICAgICAgICBfdGhpcy5fY29uZmlnQXZhaWxhYmxlU3RyZWFtcygpLnRoZW4oZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgIGxldCB0b0NyZWF0ZVB1YiA9IHtcbiAgICAgICAgICAgICAgXHQgICAgICAgdHlwZTogJ2NyZWF0ZScsXG4gICAgICAgICAgICAgICAgICAgICAgIHRvOiAnaHlwZXJ0eTovL3NoYXJpbmctY2l0aWVzLWRzbS93YWxsZXQtbWFuYWdlcicsXG4gICAgICAgICAgICAgICAgICAgICAgIGZyb206IF90aGlzLl9ydW50aW1lU2Vzc2lvblVSTCxcbiAgICAgICAgICAgICAgICAgICAgICAgaWRlbnRpdHk6IF90aGlzLl9wdWJsaWNXYWxsZXRzLmlkZW50aXR5LFxuICAgICAgICAgICAgICAgICAgICAgICBib2R5OiB7dHlwZTogJ2NyZWF0ZSd9XG4gICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF90aGlzLmNyZWF0ZVdhbGxldFB1Yih0b0NyZWF0ZVB1YikudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyMSk7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgIF90aGlzLl9zZXRVcFB1YmxpY1dhbGxldHMoKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcblxuICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcblxuICAgICAgICAgICAgICB9KTsqL1xuXG5cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsZXQgdGltZXIxID0gc2V0VGltZW91dCh3YWl0Rm9yRUIxLCAyMDApO1xuICAgICAgfTtcblxuICAgICAgX3RoaXMuX2ViLm9uZXJyb3IgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViXSBHZW5lcmFsIGVycm9yOiAnLCBlKTsgLy8gdGhpcyBkb2VzIGhhcHBlblxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cblxuICAvKipcbiAgICogR2V0IHRoZSBjb25maWd1cmF0aW9uIGZvciB0aGlzIFByb3RvU3R1YlxuICAqIEByZXR1cm4ge09iamVjdH0gLSBNYW5kYXRvcnkgZmllbGRzIGFyZTogXCJ1cmxcIiBvZiB0aGUgTWVzc2FnZU5vZGUgYWRkcmVzcyBhbmQgXCJydW50aW1lVVJMXCIuXG4gICAgICAqL1xuICBnZXQgY29uZmlnKCkgeyByZXR1cm4gdGhpcy5fY29uZmlnOyB9XG5cbiAgZ2V0IHJ1bnRpbWVTZXNzaW9uKCkgeyByZXR1cm4gdGhpcy5fcnVudGltZVNlc3Npb25VUkw7IH1cblxuICBfc2VuZFN0YXR1cyh2YWx1ZSwgcmVhc29uKSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcbiAgICBjb25zb2xlLmxvZygnW1ZlcnR4QXBwUHJvdG9TdHViIHN0YXR1cyBjaGFuZ2VkXSB0byAnLCB2YWx1ZSk7XG4gICAgX3RoaXMuX3N0YXRlID0gdmFsdWU7XG4gICAgbGV0IG1zZyA9IHtcbiAgICAgIHR5cGU6ICd1cGRhdGUnLFxuICAgICAgZnJvbTogX3RoaXMuX3J1bnRpbWVQcm90b1N0dWJVUkwsXG4gICAgICB0bzogX3RoaXMuX3J1bnRpbWVQcm90b1N0dWJVUkwgKyAnL3N0YXR1cycsXG4gICAgICBib2R5OiB7XG4gICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgfVxuICAgIH07XG4gICAgaWYgKHJlYXNvbikge1xuICAgICAgbXNnLmJvZHkuZGVzYyA9IHJlYXNvbjtcbiAgICB9XG4gICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShtc2cpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFjdGl2YXRlKHVybCwgYnVzLCBjb25maWcpIHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnVmVydHhBcHBQcm90b1N0dWInLFxuICAgIGluc3RhbmNlOiBuZXcgVmVydHhBcHBQcm90b1N0dWIodXJsLCBidXMsIGNvbmZpZylcbiAgfTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL1ZlcnR4QXBwUHJvdG9TdHViLnBzLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///33\n");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *   Copyright (c) 2011-2015 The original author or authors\n *   ------------------------------------------------------\n *   All rights reserved. This program and the accompanying materials\n *   are made available under the terms of the Eclipse Public License v1.0\n *   and Apache License v2.0 which accompanies this distribution.\n *\n *       The Eclipse Public License is available at\n *       http://www.eclipse.org/legal/epl-v10.html\n *\n *       The Apache License v2.0 is available at\n *       http://www.opensource.org/licenses/apache2.0.php\n *\n *   You may elect to redistribute this code under either of these licenses.\n */\n!function (factory) {\n  if (true) {\n    // CommonJS loader\n    var SockJS = __webpack_require__(35);\n    if (!SockJS) {\n      throw new Error('vertx-eventbus.js requires sockjs-client, see http://sockjs.org');\n    }\n    factory(SockJS);\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD loader\n    define('vertx-eventbus', ['sockjs'], factory);\n  } else {\n    // plain old include\n    if (typeof this.SockJS === 'undefined') {\n      throw new Error('vertx-eventbus.js requires sockjs-client, see http://sockjs.org');\n    }\n\n    EventBus = factory(this.SockJS);\n  }\n}(function (SockJS) {\n\n  function makeUUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (a, b) {\n      return b = Math.random() * 16, (a == 'y' ? b & 3 | 8 : b | 0).toString(16);\n    });\n  }\n\n  function mergeHeaders(defaultHeaders, headers) {\n    if (defaultHeaders) {\n      if (!headers) {\n        return defaultHeaders;\n      }\n\n      for (var headerName in defaultHeaders) {\n        if (defaultHeaders.hasOwnProperty(headerName)) {\n          // user can overwrite the default headers\n          if (typeof headers[headerName] === 'undefined') {\n            headers[headerName] = defaultHeaders[headerName];\n          }\n        }\n      }\n    }\n\n    // headers are required to be a object\n    return headers || {};\n  }\n\n  /**\n   * EventBus\n   *\n   * @param url\n   * @param options\n   * @constructor\n   */\n  var EventBus = function (url, options) {\n    var self = this;\n\n    options = options || {};\n\n    // attributes\n    this.pingInterval = options.vertxbus_ping_interval || 5000;\n    this.pingTimerID = null;\n\n    this.reconnectEnabled = false;\n    this.reconnectAttempts = 0;\n    this.reconnectTimerID = null;\n    // adapted from backo\n    this.maxReconnectAttempts = options.vertxbus_reconnect_attempts_max || Infinity;\n    this.reconnectDelayMin = options.vertxbus_reconnect_delay_min || 1000;\n    this.reconnectDelayMax = options.vertxbus_reconnect_delay_max || 5000;\n    this.reconnectExponent = options.vertxbus_reconnect_exponent || 2;\n    this.randomizationFactor = options.vertxbus_randomization_factor || 0.5;\n    var getReconnectDelay = function() {\n      var ms = self.reconnectDelayMin * Math.pow(self.reconnectExponent, self.reconnectAttempts);\n      if (self.randomizationFactor) {\n        var rand =  Math.random();\n        var deviation = Math.floor(rand * self.randomizationFactor * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n      }\n      return Math.min(ms, self.reconnectDelayMax) | 0;\n    };\n\n    this.defaultHeaders = null;\n\n    // default event handlers\n    this.onerror = function (err) {\n      try {\n        console.error(err);\n      } catch (e) {\n        // dev tools are disabled so we cannot use console on IE\n      }\n    };\n\n    var setupSockJSConnection = function () {\n      self.sockJSConn = new SockJS(url, null, options);\n      self.state = EventBus.CONNECTING;\n\n      // handlers and reply handlers are tied to the state of the socket\n      // they are added onopen or when sending, so reset when reconnecting\n      self.handlers = {};\n      self.replyHandlers = {};\n\n      self.sockJSConn.onopen = function () {\n        self.enablePing(true);\n        self.state = EventBus.OPEN;\n        self.onopen && self.onopen();\n        if (self.reconnectTimerID) {\n          self.reconnectAttempts = 0;\n          // fire separate event for reconnects\n          // consistent behavior with adding handlers onopen\n          self.onreconnect && self.onreconnect();\n        }\n      };\n\n      self.sockJSConn.onclose = function (e) {\n        self.state = EventBus.CLOSED;\n        if (self.pingTimerID) clearInterval(self.pingTimerID);\n        if (self.reconnectEnabled && self.reconnectAttempts < self.maxReconnectAttempts) {\n          self.sockJSConn = null;\n          // set id so users can cancel\n          self.reconnectTimerID = setTimeout(setupSockJSConnection, getReconnectDelay());\n          ++self.reconnectAttempts;\n        }\n        self.onclose && self.onclose(e);\n      };\n\n      self.sockJSConn.onmessage = function (e) {\n        var json = JSON.parse(e.data);\n\n        // define a reply function on the message itself\n        if (json.replyAddress) {\n          Object.defineProperty(json, 'reply', {\n            value: function (message, headers, callback) {\n              self.send(json.replyAddress, message, headers, callback);\n            }\n          });\n        }\n\n        if (self.handlers[json.address]) {\n          // iterate all registered handlers\n          var handlers = self.handlers[json.address];\n          for (var i = 0; i < handlers.length; i++) {\n            if (json.type === 'err') {\n              handlers[i]({ failureCode: json.failureCode, failureType: json.failureType, message: json.message });\n            } else {\n              handlers[i](null, json);\n            }\n          }\n        } else if (self.replyHandlers[json.address]) {\n          // Might be a reply message\n          var handler = self.replyHandlers[json.address];\n          delete self.replyHandlers[json.address];\n          if (json.type === 'err') {\n            handler({ failureCode: json.failureCode, failureType: json.failureType, message: json.message });\n          } else {\n            handler(null, json);\n          }\n        } else {\n          if (json.type === 'err') {\n            self.onerror(json);\n          } else {\n            try {\n              console.warn('No handler found for message: ', json);\n            } catch (e) {\n              // dev tools are disabled so we cannot use console on IE\n            }\n          }\n        }\n      }\n    };\n\n    // function cannot be anonymous and self-calling due to pseudo-recursion\n    setupSockJSConnection();\n  };\n\n  /**\n   * Send a message\n   *\n   * @param {String} address\n   * @param {Object} message\n   * @param {Object} [headers]\n   * @param {Function} [callback]\n   */\n  EventBus.prototype.send = function (address, message, headers, callback) {\n    // are we ready?\n    if (this.state != EventBus.OPEN) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (typeof headers === 'function') {\n      callback = headers;\n      headers = {};\n    }\n\n    var envelope = {\n      type: 'send',\n      address: address,\n      headers: mergeHeaders(this.defaultHeaders, headers),\n      body: message\n    };\n\n    if (callback) {\n      var replyAddress = makeUUID();\n      envelope.replyAddress = replyAddress;\n      this.replyHandlers[replyAddress] = callback;\n    }\n\n    this.sockJSConn.send(JSON.stringify(envelope));\n  };\n\n  /**\n   * Publish a message\n   *\n   * @param {String} address\n   * @param {Object} message\n   * @param {Object} [headers]\n   */\n  EventBus.prototype.publish = function (address, message, headers) {\n    // are we ready?\n    if (this.state != EventBus.OPEN) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    this.sockJSConn.send(JSON.stringify({\n      type: 'publish',\n      address: address,\n      headers: mergeHeaders(this.defaultHeaders, headers),\n      body: message\n    }));\n  };\n\n  /**\n   * Register a new handler\n   *\n   * @param {String} address\n   * @param {Object} [headers]\n   * @param {Function} callback\n   */\n  EventBus.prototype.registerHandler = function (address, headers, callback) {\n    // are we ready?\n    if (this.state != EventBus.OPEN) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (typeof headers === 'function') {\n      callback = headers;\n      headers = {};\n    }\n\n    // ensure it is an array\n    if (!this.handlers[address]) {\n      this.handlers[address] = [];\n      // First handler for this address so we should register the connection\n      this.sockJSConn.send(JSON.stringify({\n        type: 'register',\n        address: address,\n        headers: mergeHeaders(this.defaultHeaders, headers)\n      }));\n    }\n\n    this.handlers[address].push(callback);\n  };\n\n  /**\n   * Unregister a handler\n   *\n   * @param {String} address\n   * @param {Object} [headers]\n   * @param {Function} callback\n   */\n  EventBus.prototype.unregisterHandler = function (address, headers, callback) {\n    // are we ready?\n    if (this.state != EventBus.OPEN) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    var handlers = this.handlers[address];\n\n    if (handlers) {\n\n      if (typeof headers === 'function') {\n        callback = headers;\n        headers = {};\n      }\n\n      var idx = handlers.indexOf(callback);\n      if (idx != -1) {\n        handlers.splice(idx, 1);\n        if (handlers.length === 0) {\n          // No more local handlers so we should unregister the connection\n          this.sockJSConn.send(JSON.stringify({\n            type: 'unregister',\n            address: address,\n            headers: mergeHeaders(this.defaultHeaders, headers)\n          }));\n\n          delete this.handlers[address];\n        }\n      }\n    }\n  };\n\n  /**\n   * Closes the connection to the EventBus Bridge,\n   * preventing any reconnect attempts\n   */\n  EventBus.prototype.close = function () {\n    this.state = EventBus.CLOSING;\n    this.enableReconnect(false);\n    this.sockJSConn.close();\n  };\n\n  EventBus.CONNECTING = 0;\n  EventBus.OPEN = 1;\n  EventBus.CLOSING = 2;\n  EventBus.CLOSED = 3;\n\n  EventBus.prototype.enablePing = function (enable) {\n    var self = this;\n\n    if (enable) {\n      var sendPing = function () {\n        self.sockJSConn.send(JSON.stringify({ type: 'ping' }));\n      };\n\n      if (self.pingInterval > 0) {\n        // Send the first ping then send a ping every pingInterval milliseconds\n        sendPing();\n        self.pingTimerID = setInterval(sendPing, self.pingInterval);\n      }\n    } else {\n      if (self.pingTimerID) {\n        clearInterval(self.pingTimerID);\n        self.pingTimerID = null;\n      }\n    }\n  };\n\n  EventBus.prototype.enableReconnect = function (enable) {\n    var self = this;\n\n    self.reconnectEnabled = enable;\n    if (!enable && self.reconnectTimerID) {\n      clearTimeout(self.reconnectTimerID);\n      self.reconnectTimerID = null;\n      self.reconnectAttempts = 0;\n    }\n  };\n\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = EventBus;\n    } else {\n      exports.EventBus = EventBus;\n    }\n  } else {\n    return EventBus;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvdmVydHgzLWV2ZW50YnVzLWNsaWVudC92ZXJ0eC1ldmVudGJ1cy5qcz84YTQ5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixxQkFBcUI7QUFDOUM7QUFDQSwyQkFBMkIsc0ZBQXNGO0FBQ2pILGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsc0ZBQXNGO0FBQzNHLFdBQVc7QUFDWDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQixhQUFhLE9BQU87QUFDcEIsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEIsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEIsYUFBYSxPQUFPO0FBQ3BCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQixhQUFhLE9BQU87QUFDcEIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZDQUE2QyxlQUFlO0FBQzVEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogICBDb3B5cmlnaHQgKGMpIDIwMTEtMjAxNSBUaGUgb3JpZ2luYWwgYXV0aG9yIG9yIGF1dGhvcnNcbiAqICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHNcbiAqICAgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSB2MS4wXG4gKiAgIGFuZCBBcGFjaGUgTGljZW5zZSB2Mi4wIHdoaWNoIGFjY29tcGFuaWVzIHRoaXMgZGlzdHJpYnV0aW9uLlxuICpcbiAqICAgICAgIFRoZSBFY2xpcHNlIFB1YmxpYyBMaWNlbnNlIGlzIGF2YWlsYWJsZSBhdFxuICogICAgICAgaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtdjEwLmh0bWxcbiAqXG4gKiAgICAgICBUaGUgQXBhY2hlIExpY2Vuc2UgdjIuMCBpcyBhdmFpbGFibGUgYXRcbiAqICAgICAgIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvYXBhY2hlMi4wLnBocFxuICpcbiAqICAgWW91IG1heSBlbGVjdCB0byByZWRpc3RyaWJ1dGUgdGhpcyBjb2RlIHVuZGVyIGVpdGhlciBvZiB0aGVzZSBsaWNlbnNlcy5cbiAqL1xuIWZ1bmN0aW9uIChmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgcmVxdWlyZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIENvbW1vbkpTIGxvYWRlclxuICAgIHZhciBTb2NrSlMgPSByZXF1aXJlKCdzb2NranMtY2xpZW50Jyk7XG4gICAgaWYgKCFTb2NrSlMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcigndmVydHgtZXZlbnRidXMuanMgcmVxdWlyZXMgc29ja2pzLWNsaWVudCwgc2VlIGh0dHA6Ly9zb2NranMub3JnJyk7XG4gICAgfVxuICAgIGZhY3RvcnkoU29ja0pTKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAvLyBBTUQgbG9hZGVyXG4gICAgZGVmaW5lKCd2ZXJ0eC1ldmVudGJ1cycsIFsnc29ja2pzJ10sIGZhY3RvcnkpO1xuICB9IGVsc2Uge1xuICAgIC8vIHBsYWluIG9sZCBpbmNsdWRlXG4gICAgaWYgKHR5cGVvZiB0aGlzLlNvY2tKUyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcigndmVydHgtZXZlbnRidXMuanMgcmVxdWlyZXMgc29ja2pzLWNsaWVudCwgc2VlIGh0dHA6Ly9zb2NranMub3JnJyk7XG4gICAgfVxuXG4gICAgRXZlbnRCdXMgPSBmYWN0b3J5KHRoaXMuU29ja0pTKTtcbiAgfVxufShmdW5jdGlvbiAoU29ja0pTKSB7XG5cbiAgZnVuY3Rpb24gbWFrZVVVSUQoKSB7XG4gICAgcmV0dXJuICd4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgnLnJlcGxhY2UoL1t4eV0vZywgZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBiID0gTWF0aC5yYW5kb20oKSAqIDE2LCAoYSA9PSAneScgPyBiICYgMyB8IDggOiBiIHwgMCkudG9TdHJpbmcoMTYpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gbWVyZ2VIZWFkZXJzKGRlZmF1bHRIZWFkZXJzLCBoZWFkZXJzKSB7XG4gICAgaWYgKGRlZmF1bHRIZWFkZXJzKSB7XG4gICAgICBpZiAoIWhlYWRlcnMpIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRIZWFkZXJzO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBoZWFkZXJOYW1lIGluIGRlZmF1bHRIZWFkZXJzKSB7XG4gICAgICAgIGlmIChkZWZhdWx0SGVhZGVycy5oYXNPd25Qcm9wZXJ0eShoZWFkZXJOYW1lKSkge1xuICAgICAgICAgIC8vIHVzZXIgY2FuIG92ZXJ3cml0ZSB0aGUgZGVmYXVsdCBoZWFkZXJzXG4gICAgICAgICAgaWYgKHR5cGVvZiBoZWFkZXJzW2hlYWRlck5hbWVdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgaGVhZGVyc1toZWFkZXJOYW1lXSA9IGRlZmF1bHRIZWFkZXJzW2hlYWRlck5hbWVdO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhlYWRlcnMgYXJlIHJlcXVpcmVkIHRvIGJlIGEgb2JqZWN0XG4gICAgcmV0dXJuIGhlYWRlcnMgfHwge307XG4gIH1cblxuICAvKipcbiAgICogRXZlbnRCdXNcbiAgICpcbiAgICogQHBhcmFtIHVybFxuICAgKiBAcGFyYW0gb3B0aW9uc1xuICAgKiBAY29uc3RydWN0b3JcbiAgICovXG4gIHZhciBFdmVudEJ1cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAgIC8vIGF0dHJpYnV0ZXNcbiAgICB0aGlzLnBpbmdJbnRlcnZhbCA9IG9wdGlvbnMudmVydHhidXNfcGluZ19pbnRlcnZhbCB8fCA1MDAwO1xuICAgIHRoaXMucGluZ1RpbWVySUQgPSBudWxsO1xuXG4gICAgdGhpcy5yZWNvbm5lY3RFbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5yZWNvbm5lY3RBdHRlbXB0cyA9IDA7XG4gICAgdGhpcy5yZWNvbm5lY3RUaW1lcklEID0gbnVsbDtcbiAgICAvLyBhZGFwdGVkIGZyb20gYmFja29cbiAgICB0aGlzLm1heFJlY29ubmVjdEF0dGVtcHRzID0gb3B0aW9ucy52ZXJ0eGJ1c19yZWNvbm5lY3RfYXR0ZW1wdHNfbWF4IHx8IEluZmluaXR5O1xuICAgIHRoaXMucmVjb25uZWN0RGVsYXlNaW4gPSBvcHRpb25zLnZlcnR4YnVzX3JlY29ubmVjdF9kZWxheV9taW4gfHwgMTAwMDtcbiAgICB0aGlzLnJlY29ubmVjdERlbGF5TWF4ID0gb3B0aW9ucy52ZXJ0eGJ1c19yZWNvbm5lY3RfZGVsYXlfbWF4IHx8IDUwMDA7XG4gICAgdGhpcy5yZWNvbm5lY3RFeHBvbmVudCA9IG9wdGlvbnMudmVydHhidXNfcmVjb25uZWN0X2V4cG9uZW50IHx8IDI7XG4gICAgdGhpcy5yYW5kb21pemF0aW9uRmFjdG9yID0gb3B0aW9ucy52ZXJ0eGJ1c19yYW5kb21pemF0aW9uX2ZhY3RvciB8fCAwLjU7XG4gICAgdmFyIGdldFJlY29ubmVjdERlbGF5ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgbXMgPSBzZWxmLnJlY29ubmVjdERlbGF5TWluICogTWF0aC5wb3coc2VsZi5yZWNvbm5lY3RFeHBvbmVudCwgc2VsZi5yZWNvbm5lY3RBdHRlbXB0cyk7XG4gICAgICBpZiAoc2VsZi5yYW5kb21pemF0aW9uRmFjdG9yKSB7XG4gICAgICAgIHZhciByYW5kID0gIE1hdGgucmFuZG9tKCk7XG4gICAgICAgIHZhciBkZXZpYXRpb24gPSBNYXRoLmZsb29yKHJhbmQgKiBzZWxmLnJhbmRvbWl6YXRpb25GYWN0b3IgKiBtcyk7XG4gICAgICAgIG1zID0gKE1hdGguZmxvb3IocmFuZCAqIDEwKSAmIDEpID09IDAgID8gbXMgLSBkZXZpYXRpb24gOiBtcyArIGRldmlhdGlvbjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBNYXRoLm1pbihtcywgc2VsZi5yZWNvbm5lY3REZWxheU1heCkgfCAwO1xuICAgIH07XG5cbiAgICB0aGlzLmRlZmF1bHRIZWFkZXJzID0gbnVsbDtcblxuICAgIC8vIGRlZmF1bHQgZXZlbnQgaGFuZGxlcnNcbiAgICB0aGlzLm9uZXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGRldiB0b29scyBhcmUgZGlzYWJsZWQgc28gd2UgY2Fubm90IHVzZSBjb25zb2xlIG9uIElFXG4gICAgICB9XG4gICAgfTtcblxuICAgIHZhciBzZXR1cFNvY2tKU0Nvbm5lY3Rpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICBzZWxmLnNvY2tKU0Nvbm4gPSBuZXcgU29ja0pTKHVybCwgbnVsbCwgb3B0aW9ucyk7XG4gICAgICBzZWxmLnN0YXRlID0gRXZlbnRCdXMuQ09OTkVDVElORztcblxuICAgICAgLy8gaGFuZGxlcnMgYW5kIHJlcGx5IGhhbmRsZXJzIGFyZSB0aWVkIHRvIHRoZSBzdGF0ZSBvZiB0aGUgc29ja2V0XG4gICAgICAvLyB0aGV5IGFyZSBhZGRlZCBvbm9wZW4gb3Igd2hlbiBzZW5kaW5nLCBzbyByZXNldCB3aGVuIHJlY29ubmVjdGluZ1xuICAgICAgc2VsZi5oYW5kbGVycyA9IHt9O1xuICAgICAgc2VsZi5yZXBseUhhbmRsZXJzID0ge307XG5cbiAgICAgIHNlbGYuc29ja0pTQ29ubi5vbm9wZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNlbGYuZW5hYmxlUGluZyh0cnVlKTtcbiAgICAgICAgc2VsZi5zdGF0ZSA9IEV2ZW50QnVzLk9QRU47XG4gICAgICAgIHNlbGYub25vcGVuICYmIHNlbGYub25vcGVuKCk7XG4gICAgICAgIGlmIChzZWxmLnJlY29ubmVjdFRpbWVySUQpIHtcbiAgICAgICAgICBzZWxmLnJlY29ubmVjdEF0dGVtcHRzID0gMDtcbiAgICAgICAgICAvLyBmaXJlIHNlcGFyYXRlIGV2ZW50IGZvciByZWNvbm5lY3RzXG4gICAgICAgICAgLy8gY29uc2lzdGVudCBiZWhhdmlvciB3aXRoIGFkZGluZyBoYW5kbGVycyBvbm9wZW5cbiAgICAgICAgICBzZWxmLm9ucmVjb25uZWN0ICYmIHNlbGYub25yZWNvbm5lY3QoKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgc2VsZi5zb2NrSlNDb25uLm9uY2xvc2UgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBzZWxmLnN0YXRlID0gRXZlbnRCdXMuQ0xPU0VEO1xuICAgICAgICBpZiAoc2VsZi5waW5nVGltZXJJRCkgY2xlYXJJbnRlcnZhbChzZWxmLnBpbmdUaW1lcklEKTtcbiAgICAgICAgaWYgKHNlbGYucmVjb25uZWN0RW5hYmxlZCAmJiBzZWxmLnJlY29ubmVjdEF0dGVtcHRzIDwgc2VsZi5tYXhSZWNvbm5lY3RBdHRlbXB0cykge1xuICAgICAgICAgIHNlbGYuc29ja0pTQ29ubiA9IG51bGw7XG4gICAgICAgICAgLy8gc2V0IGlkIHNvIHVzZXJzIGNhbiBjYW5jZWxcbiAgICAgICAgICBzZWxmLnJlY29ubmVjdFRpbWVySUQgPSBzZXRUaW1lb3V0KHNldHVwU29ja0pTQ29ubmVjdGlvbiwgZ2V0UmVjb25uZWN0RGVsYXkoKSk7XG4gICAgICAgICAgKytzZWxmLnJlY29ubmVjdEF0dGVtcHRzO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYub25jbG9zZSAmJiBzZWxmLm9uY2xvc2UoZSk7XG4gICAgICB9O1xuXG4gICAgICBzZWxmLnNvY2tKU0Nvbm4ub25tZXNzYWdlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIGpzb24gPSBKU09OLnBhcnNlKGUuZGF0YSk7XG5cbiAgICAgICAgLy8gZGVmaW5lIGEgcmVwbHkgZnVuY3Rpb24gb24gdGhlIG1lc3NhZ2UgaXRzZWxmXG4gICAgICAgIGlmIChqc29uLnJlcGx5QWRkcmVzcykge1xuICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShqc29uLCAncmVwbHknLCB7XG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKG1lc3NhZ2UsIGhlYWRlcnMsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgIHNlbGYuc2VuZChqc29uLnJlcGx5QWRkcmVzcywgbWVzc2FnZSwgaGVhZGVycywgY2FsbGJhY2spO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNlbGYuaGFuZGxlcnNbanNvbi5hZGRyZXNzXSkge1xuICAgICAgICAgIC8vIGl0ZXJhdGUgYWxsIHJlZ2lzdGVyZWQgaGFuZGxlcnNcbiAgICAgICAgICB2YXIgaGFuZGxlcnMgPSBzZWxmLmhhbmRsZXJzW2pzb24uYWRkcmVzc107XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBoYW5kbGVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGpzb24udHlwZSA9PT0gJ2VycicpIHtcbiAgICAgICAgICAgICAgaGFuZGxlcnNbaV0oeyBmYWlsdXJlQ29kZToganNvbi5mYWlsdXJlQ29kZSwgZmFpbHVyZVR5cGU6IGpzb24uZmFpbHVyZVR5cGUsIG1lc3NhZ2U6IGpzb24ubWVzc2FnZSB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGhhbmRsZXJzW2ldKG51bGwsIGpzb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChzZWxmLnJlcGx5SGFuZGxlcnNbanNvbi5hZGRyZXNzXSkge1xuICAgICAgICAgIC8vIE1pZ2h0IGJlIGEgcmVwbHkgbWVzc2FnZVxuICAgICAgICAgIHZhciBoYW5kbGVyID0gc2VsZi5yZXBseUhhbmRsZXJzW2pzb24uYWRkcmVzc107XG4gICAgICAgICAgZGVsZXRlIHNlbGYucmVwbHlIYW5kbGVyc1tqc29uLmFkZHJlc3NdO1xuICAgICAgICAgIGlmIChqc29uLnR5cGUgPT09ICdlcnInKSB7XG4gICAgICAgICAgICBoYW5kbGVyKHsgZmFpbHVyZUNvZGU6IGpzb24uZmFpbHVyZUNvZGUsIGZhaWx1cmVUeXBlOiBqc29uLmZhaWx1cmVUeXBlLCBtZXNzYWdlOiBqc29uLm1lc3NhZ2UgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGhhbmRsZXIobnVsbCwganNvbik7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChqc29uLnR5cGUgPT09ICdlcnInKSB7XG4gICAgICAgICAgICBzZWxmLm9uZXJyb3IoanNvbik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUud2FybignTm8gaGFuZGxlciBmb3VuZCBmb3IgbWVzc2FnZTogJywganNvbik7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgIC8vIGRldiB0b29scyBhcmUgZGlzYWJsZWQgc28gd2UgY2Fubm90IHVzZSBjb25zb2xlIG9uIElFXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8vIGZ1bmN0aW9uIGNhbm5vdCBiZSBhbm9ueW1vdXMgYW5kIHNlbGYtY2FsbGluZyBkdWUgdG8gcHNldWRvLXJlY3Vyc2lvblxuICAgIHNldHVwU29ja0pTQ29ubmVjdGlvbigpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBTZW5kIGEgbWVzc2FnZVxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gYWRkcmVzc1xuICAgKiBAcGFyYW0ge09iamVjdH0gbWVzc2FnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gW2hlYWRlcnNdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja11cbiAgICovXG4gIEV2ZW50QnVzLnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24gKGFkZHJlc3MsIG1lc3NhZ2UsIGhlYWRlcnMsIGNhbGxiYWNrKSB7XG4gICAgLy8gYXJlIHdlIHJlYWR5P1xuICAgIGlmICh0aGlzLnN0YXRlICE9IEV2ZW50QnVzLk9QRU4pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSU5WQUxJRF9TVEFURV9FUlInKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGhlYWRlcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNhbGxiYWNrID0gaGVhZGVycztcbiAgICAgIGhlYWRlcnMgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgZW52ZWxvcGUgPSB7XG4gICAgICB0eXBlOiAnc2VuZCcsXG4gICAgICBhZGRyZXNzOiBhZGRyZXNzLFxuICAgICAgaGVhZGVyczogbWVyZ2VIZWFkZXJzKHRoaXMuZGVmYXVsdEhlYWRlcnMsIGhlYWRlcnMpLFxuICAgICAgYm9keTogbWVzc2FnZVxuICAgIH07XG5cbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIHZhciByZXBseUFkZHJlc3MgPSBtYWtlVVVJRCgpO1xuICAgICAgZW52ZWxvcGUucmVwbHlBZGRyZXNzID0gcmVwbHlBZGRyZXNzO1xuICAgICAgdGhpcy5yZXBseUhhbmRsZXJzW3JlcGx5QWRkcmVzc10gPSBjYWxsYmFjaztcbiAgICB9XG5cbiAgICB0aGlzLnNvY2tKU0Nvbm4uc2VuZChKU09OLnN0cmluZ2lmeShlbnZlbG9wZSkpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBQdWJsaXNoIGEgbWVzc2FnZVxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gYWRkcmVzc1xuICAgKiBAcGFyYW0ge09iamVjdH0gbWVzc2FnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gW2hlYWRlcnNdXG4gICAqL1xuICBFdmVudEJ1cy5wcm90b3R5cGUucHVibGlzaCA9IGZ1bmN0aW9uIChhZGRyZXNzLCBtZXNzYWdlLCBoZWFkZXJzKSB7XG4gICAgLy8gYXJlIHdlIHJlYWR5P1xuICAgIGlmICh0aGlzLnN0YXRlICE9IEV2ZW50QnVzLk9QRU4pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSU5WQUxJRF9TVEFURV9FUlInKTtcbiAgICB9XG5cbiAgICB0aGlzLnNvY2tKU0Nvbm4uc2VuZChKU09OLnN0cmluZ2lmeSh7XG4gICAgICB0eXBlOiAncHVibGlzaCcsXG4gICAgICBhZGRyZXNzOiBhZGRyZXNzLFxuICAgICAgaGVhZGVyczogbWVyZ2VIZWFkZXJzKHRoaXMuZGVmYXVsdEhlYWRlcnMsIGhlYWRlcnMpLFxuICAgICAgYm9keTogbWVzc2FnZVxuICAgIH0pKTtcbiAgfTtcblxuICAvKipcbiAgICogUmVnaXN0ZXIgYSBuZXcgaGFuZGxlclxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gYWRkcmVzc1xuICAgKiBAcGFyYW0ge09iamVjdH0gW2hlYWRlcnNdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBFdmVudEJ1cy5wcm90b3R5cGUucmVnaXN0ZXJIYW5kbGVyID0gZnVuY3Rpb24gKGFkZHJlc3MsIGhlYWRlcnMsIGNhbGxiYWNrKSB7XG4gICAgLy8gYXJlIHdlIHJlYWR5P1xuICAgIGlmICh0aGlzLnN0YXRlICE9IEV2ZW50QnVzLk9QRU4pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSU5WQUxJRF9TVEFURV9FUlInKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGhlYWRlcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNhbGxiYWNrID0gaGVhZGVycztcbiAgICAgIGhlYWRlcnMgPSB7fTtcbiAgICB9XG5cbiAgICAvLyBlbnN1cmUgaXQgaXMgYW4gYXJyYXlcbiAgICBpZiAoIXRoaXMuaGFuZGxlcnNbYWRkcmVzc10pIHtcbiAgICAgIHRoaXMuaGFuZGxlcnNbYWRkcmVzc10gPSBbXTtcbiAgICAgIC8vIEZpcnN0IGhhbmRsZXIgZm9yIHRoaXMgYWRkcmVzcyBzbyB3ZSBzaG91bGQgcmVnaXN0ZXIgdGhlIGNvbm5lY3Rpb25cbiAgICAgIHRoaXMuc29ja0pTQ29ubi5zZW5kKEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgdHlwZTogJ3JlZ2lzdGVyJyxcbiAgICAgICAgYWRkcmVzczogYWRkcmVzcyxcbiAgICAgICAgaGVhZGVyczogbWVyZ2VIZWFkZXJzKHRoaXMuZGVmYXVsdEhlYWRlcnMsIGhlYWRlcnMpXG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgdGhpcy5oYW5kbGVyc1thZGRyZXNzXS5wdXNoKGNhbGxiYWNrKTtcbiAgfTtcblxuICAvKipcbiAgICogVW5yZWdpc3RlciBhIGhhbmRsZXJcbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IGFkZHJlc3NcbiAgICogQHBhcmFtIHtPYmplY3R9IFtoZWFkZXJzXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgRXZlbnRCdXMucHJvdG90eXBlLnVucmVnaXN0ZXJIYW5kbGVyID0gZnVuY3Rpb24gKGFkZHJlc3MsIGhlYWRlcnMsIGNhbGxiYWNrKSB7XG4gICAgLy8gYXJlIHdlIHJlYWR5P1xuICAgIGlmICh0aGlzLnN0YXRlICE9IEV2ZW50QnVzLk9QRU4pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSU5WQUxJRF9TVEFURV9FUlInKTtcbiAgICB9XG5cbiAgICB2YXIgaGFuZGxlcnMgPSB0aGlzLmhhbmRsZXJzW2FkZHJlc3NdO1xuXG4gICAgaWYgKGhhbmRsZXJzKSB7XG5cbiAgICAgIGlmICh0eXBlb2YgaGVhZGVycyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBjYWxsYmFjayA9IGhlYWRlcnM7XG4gICAgICAgIGhlYWRlcnMgPSB7fTtcbiAgICAgIH1cblxuICAgICAgdmFyIGlkeCA9IGhhbmRsZXJzLmluZGV4T2YoY2FsbGJhY2spO1xuICAgICAgaWYgKGlkeCAhPSAtMSkge1xuICAgICAgICBoYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcbiAgICAgICAgaWYgKGhhbmRsZXJzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIC8vIE5vIG1vcmUgbG9jYWwgaGFuZGxlcnMgc28gd2Ugc2hvdWxkIHVucmVnaXN0ZXIgdGhlIGNvbm5lY3Rpb25cbiAgICAgICAgICB0aGlzLnNvY2tKU0Nvbm4uc2VuZChKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICB0eXBlOiAndW5yZWdpc3RlcicsXG4gICAgICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLFxuICAgICAgICAgICAgaGVhZGVyczogbWVyZ2VIZWFkZXJzKHRoaXMuZGVmYXVsdEhlYWRlcnMsIGhlYWRlcnMpXG4gICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgZGVsZXRlIHRoaXMuaGFuZGxlcnNbYWRkcmVzc107XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgLyoqXG4gICAqIENsb3NlcyB0aGUgY29ubmVjdGlvbiB0byB0aGUgRXZlbnRCdXMgQnJpZGdlLFxuICAgKiBwcmV2ZW50aW5nIGFueSByZWNvbm5lY3QgYXR0ZW1wdHNcbiAgICovXG4gIEV2ZW50QnVzLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnN0YXRlID0gRXZlbnRCdXMuQ0xPU0lORztcbiAgICB0aGlzLmVuYWJsZVJlY29ubmVjdChmYWxzZSk7XG4gICAgdGhpcy5zb2NrSlNDb25uLmNsb3NlKCk7XG4gIH07XG5cbiAgRXZlbnRCdXMuQ09OTkVDVElORyA9IDA7XG4gIEV2ZW50QnVzLk9QRU4gPSAxO1xuICBFdmVudEJ1cy5DTE9TSU5HID0gMjtcbiAgRXZlbnRCdXMuQ0xPU0VEID0gMztcblxuICBFdmVudEJ1cy5wcm90b3R5cGUuZW5hYmxlUGluZyA9IGZ1bmN0aW9uIChlbmFibGUpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICBpZiAoZW5hYmxlKSB7XG4gICAgICB2YXIgc2VuZFBpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNlbGYuc29ja0pTQ29ubi5zZW5kKEpTT04uc3RyaW5naWZ5KHsgdHlwZTogJ3BpbmcnIH0pKTtcbiAgICAgIH07XG5cbiAgICAgIGlmIChzZWxmLnBpbmdJbnRlcnZhbCA+IDApIHtcbiAgICAgICAgLy8gU2VuZCB0aGUgZmlyc3QgcGluZyB0aGVuIHNlbmQgYSBwaW5nIGV2ZXJ5IHBpbmdJbnRlcnZhbCBtaWxsaXNlY29uZHNcbiAgICAgICAgc2VuZFBpbmcoKTtcbiAgICAgICAgc2VsZi5waW5nVGltZXJJRCA9IHNldEludGVydmFsKHNlbmRQaW5nLCBzZWxmLnBpbmdJbnRlcnZhbCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChzZWxmLnBpbmdUaW1lcklEKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwoc2VsZi5waW5nVGltZXJJRCk7XG4gICAgICAgIHNlbGYucGluZ1RpbWVySUQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBFdmVudEJ1cy5wcm90b3R5cGUuZW5hYmxlUmVjb25uZWN0ID0gZnVuY3Rpb24gKGVuYWJsZSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgIHNlbGYucmVjb25uZWN0RW5hYmxlZCA9IGVuYWJsZTtcbiAgICBpZiAoIWVuYWJsZSAmJiBzZWxmLnJlY29ubmVjdFRpbWVySUQpIHtcbiAgICAgIGNsZWFyVGltZW91dChzZWxmLnJlY29ubmVjdFRpbWVySUQpO1xuICAgICAgc2VsZi5yZWNvbm5lY3RUaW1lcklEID0gbnVsbDtcbiAgICAgIHNlbGYucmVjb25uZWN0QXR0ZW1wdHMgPSAwO1xuICAgIH1cbiAgfTtcblxuICBpZiAodHlwZW9mIGV4cG9ydHMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgICBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBFdmVudEJ1cztcbiAgICB9IGVsc2Uge1xuICAgICAgZXhwb3J0cy5FdmVudEJ1cyA9IEV2ZW50QnVzO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gRXZlbnRCdXM7XG4gIH1cbn0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvdmVydHgzLWV2ZW50YnVzLWNsaWVudC92ZXJ0eC1ldmVudGJ1cy5qc1xuLy8gbW9kdWxlIGlkID0gMzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///34\n");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar transportList = __webpack_require__(36);\n\nmodule.exports = __webpack_require__(55)(transportList);\n\n// TODO can't get rid of this until all servers do\nif ('_sockjs_onload' in global) {\n  setTimeout(global._sockjs_onload, 1);\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvZW50cnkuanM/ZmJlNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOENBQUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB0cmFuc3BvcnRMaXN0ID0gcmVxdWlyZSgnLi90cmFuc3BvcnQtbGlzdCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbWFpbicpKHRyYW5zcG9ydExpc3QpO1xuXG4vLyBUT0RPIGNhbid0IGdldCByaWQgb2YgdGhpcyB1bnRpbCBhbGwgc2VydmVycyBkb1xuaWYgKCdfc29ja2pzX29ubG9hZCcgaW4gZ2xvYmFsKSB7XG4gIHNldFRpbWVvdXQoZ2xvYmFsLl9zb2NranNfb25sb2FkLCAxKTtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL2VudHJ5LmpzXG4vLyBtb2R1bGUgaWQgPSAzNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35\n");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = [\n  // streaming transports\n  __webpack_require__(37)\n, __webpack_require__(44)\n, __webpack_require__(23)\n, __webpack_require__(24)\n, __webpack_require__(16)(__webpack_require__(24))\n\n  // polling transports\n, __webpack_require__(28)\n, __webpack_require__(16)(__webpack_require__(28))\n, __webpack_require__(29)\n, __webpack_require__(51)\n, __webpack_require__(16)(__webpack_require__(29))\n, __webpack_require__(52)\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0LWxpc3QuanM/ZTgyZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFtcbiAgLy8gc3RyZWFtaW5nIHRyYW5zcG9ydHNcbiAgcmVxdWlyZSgnLi90cmFuc3BvcnQvd2Vic29ja2V0JylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQveGhyLXN0cmVhbWluZycpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L3hkci1zdHJlYW1pbmcnKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC9ldmVudHNvdXJjZScpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L2xpYi9pZnJhbWUtd3JhcCcpKHJlcXVpcmUoJy4vdHJhbnNwb3J0L2V2ZW50c291cmNlJykpXG5cbiAgLy8gcG9sbGluZyB0cmFuc3BvcnRzXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L2h0bWxmaWxlJylcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQvbGliL2lmcmFtZS13cmFwJykocmVxdWlyZSgnLi90cmFuc3BvcnQvaHRtbGZpbGUnKSlcbiwgcmVxdWlyZSgnLi90cmFuc3BvcnQveGhyLXBvbGxpbmcnKVxuLCByZXF1aXJlKCcuL3RyYW5zcG9ydC94ZHItcG9sbGluZycpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L2xpYi9pZnJhbWUtd3JhcCcpKHJlcXVpcmUoJy4vdHJhbnNwb3J0L3hoci1wb2xsaW5nJykpXG4sIHJlcXVpcmUoJy4vdHJhbnNwb3J0L2pzb25wLXBvbGxpbmcnKVxuXTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC1saXN0LmpzXG4vLyBtb2R1bGUgaWQgPSAzNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///36\n");

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(7)\n  , urlUtils = __webpack_require__(5)\n  , inherits = __webpack_require__(0)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , WebsocketDriver = __webpack_require__(43)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:websocket');\n}\n\nfunction WebSocketTransport(transUrl) {\n  if (!WebSocketTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  EventEmitter.call(this);\n  debug('constructor', transUrl);\n\n  var self = this;\n  var url = urlUtils.addPath(transUrl, '/websocket');\n  if (url.slice(0, 5) === 'https') {\n    url = 'wss' + url.slice(5);\n  } else {\n    url = 'ws' + url.slice(4);\n  }\n  this.url = url;\n\n  this.ws = new WebsocketDriver(this.url);\n  this.ws.onmessage = function(e) {\n    debug('message event', e.data);\n    self.emit('message', e.data);\n  };\n  // Firefox has an interesting bug. If a websocket connection is\n  // created after onunload, it stays alive even when user\n  // navigates away from the page. In such situation let's lie -\n  // let's not open the ws connection at all. See:\n  // https://github.com/sockjs/sockjs-client/issues/28\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085\n  this.unloadRef = utils.unloadAdd(function() {\n    debug('unload');\n    self.ws.close();\n  });\n  this.ws.onclose = function(e) {\n    debug('close event', e.code, e.reason);\n    self.emit('close', e.code, e.reason);\n    self._cleanup();\n  };\n  this.ws.onerror = function(e) {\n    debug('error event', e);\n    self.emit('close', 1006, 'WebSocket connection broken');\n    self._cleanup();\n  };\n}\n\ninherits(WebSocketTransport, EventEmitter);\n\nWebSocketTransport.prototype.send = function(data) {\n  var msg = '[' + data + ']';\n  debug('send', msg);\n  this.ws.send(msg);\n};\n\nWebSocketTransport.prototype.close = function() {\n  debug('close');\n  if (this.ws) {\n    this.ws.close();\n  }\n  this._cleanup();\n};\n\nWebSocketTransport.prototype._cleanup = function() {\n  debug('_cleanup');\n  var ws = this.ws;\n  if (ws) {\n    ws.onmessage = ws.onclose = ws.onerror = null;\n  }\n  utils.unloadDel(this.unloadRef);\n  this.unloadRef = this.ws = null;\n  this.removeAllListeners();\n};\n\nWebSocketTransport.enabled = function() {\n  debug('enabled');\n  return !!WebsocketDriver;\n};\nWebSocketTransport.transportName = 'websocket';\n\n// In theory, ws should require 1 round trip. But in chrome, this is\n// not very stable over SSL. Most likely a ws connection requires a\n// separate SSL connection, in which case 2 round trips are an\n// absolute minumum.\nWebSocketTransport.roundTrips = 2;\n\nmodule.exports = WebSocketTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3dlYnNvY2tldC5qcz85ZTNjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIrQ0FBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjM3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy9ldmVudCcpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy91cmwnKVxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIFdlYnNvY2tldERyaXZlciA9IHJlcXVpcmUoJy4vZHJpdmVyL3dlYnNvY2tldCcpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDp3ZWJzb2NrZXQnKTtcbn1cblxuZnVuY3Rpb24gV2ViU29ja2V0VHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghV2ViU29ja2V0VHJhbnNwb3J0LmVuYWJsZWQoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVHJhbnNwb3J0IGNyZWF0ZWQgd2hlbiBkaXNhYmxlZCcpO1xuICB9XG5cbiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7XG4gIGRlYnVnKCdjb25zdHJ1Y3RvcicsIHRyYW5zVXJsKTtcblxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciB1cmwgPSB1cmxVdGlscy5hZGRQYXRoKHRyYW5zVXJsLCAnL3dlYnNvY2tldCcpO1xuICBpZiAodXJsLnNsaWNlKDAsIDUpID09PSAnaHR0cHMnKSB7XG4gICAgdXJsID0gJ3dzcycgKyB1cmwuc2xpY2UoNSk7XG4gIH0gZWxzZSB7XG4gICAgdXJsID0gJ3dzJyArIHVybC5zbGljZSg0KTtcbiAgfVxuICB0aGlzLnVybCA9IHVybDtcblxuICB0aGlzLndzID0gbmV3IFdlYnNvY2tldERyaXZlcih0aGlzLnVybCk7XG4gIHRoaXMud3Mub25tZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdtZXNzYWdlIGV2ZW50JywgZS5kYXRhKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBlLmRhdGEpO1xuICB9O1xuICAvLyBGaXJlZm94IGhhcyBhbiBpbnRlcmVzdGluZyBidWcuIElmIGEgd2Vic29ja2V0IGNvbm5lY3Rpb24gaXNcbiAgLy8gY3JlYXRlZCBhZnRlciBvbnVubG9hZCwgaXQgc3RheXMgYWxpdmUgZXZlbiB3aGVuIHVzZXJcbiAgLy8gbmF2aWdhdGVzIGF3YXkgZnJvbSB0aGUgcGFnZS4gSW4gc3VjaCBzaXR1YXRpb24gbGV0J3MgbGllIC1cbiAgLy8gbGV0J3Mgbm90IG9wZW4gdGhlIHdzIGNvbm5lY3Rpb24gYXQgYWxsLiBTZWU6XG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zb2NranMvc29ja2pzLWNsaWVudC9pc3N1ZXMvMjhcbiAgLy8gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njk2MDg1XG4gIHRoaXMudW5sb2FkUmVmID0gdXRpbHMudW5sb2FkQWRkKGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd1bmxvYWQnKTtcbiAgICBzZWxmLndzLmNsb3NlKCk7XG4gIH0pO1xuICB0aGlzLndzLm9uY2xvc2UgPSBmdW5jdGlvbihlKSB7XG4gICAgZGVidWcoJ2Nsb3NlIGV2ZW50JywgZS5jb2RlLCBlLnJlYXNvbik7XG4gICAgc2VsZi5lbWl0KCdjbG9zZScsIGUuY29kZSwgZS5yZWFzb24pO1xuICAgIHNlbGYuX2NsZWFudXAoKTtcbiAgfTtcbiAgdGhpcy53cy5vbmVycm9yID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdlcnJvciBldmVudCcsIGUpO1xuICAgIHNlbGYuZW1pdCgnY2xvc2UnLCAxMDA2LCAnV2ViU29ja2V0IGNvbm5lY3Rpb24gYnJva2VuJyk7XG4gICAgc2VsZi5fY2xlYW51cCgpO1xuICB9O1xufVxuXG5pbmhlcml0cyhXZWJTb2NrZXRUcmFuc3BvcnQsIEV2ZW50RW1pdHRlcik7XG5cbldlYlNvY2tldFRyYW5zcG9ydC5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgdmFyIG1zZyA9ICdbJyArIGRhdGEgKyAnXSc7XG4gIGRlYnVnKCdzZW5kJywgbXNnKTtcbiAgdGhpcy53cy5zZW5kKG1zZyk7XG59O1xuXG5XZWJTb2NrZXRUcmFuc3BvcnQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbG9zZScpO1xuICBpZiAodGhpcy53cykge1xuICAgIHRoaXMud3MuY2xvc2UoKTtcbiAgfVxuICB0aGlzLl9jbGVhbnVwKCk7XG59O1xuXG5XZWJTb2NrZXRUcmFuc3BvcnQucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfY2xlYW51cCcpO1xuICB2YXIgd3MgPSB0aGlzLndzO1xuICBpZiAod3MpIHtcbiAgICB3cy5vbm1lc3NhZ2UgPSB3cy5vbmNsb3NlID0gd3Mub25lcnJvciA9IG51bGw7XG4gIH1cbiAgdXRpbHMudW5sb2FkRGVsKHRoaXMudW5sb2FkUmVmKTtcbiAgdGhpcy51bmxvYWRSZWYgPSB0aGlzLndzID0gbnVsbDtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbldlYlNvY2tldFRyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdlbmFibGVkJyk7XG4gIHJldHVybiAhIVdlYnNvY2tldERyaXZlcjtcbn07XG5XZWJTb2NrZXRUcmFuc3BvcnQudHJhbnNwb3J0TmFtZSA9ICd3ZWJzb2NrZXQnO1xuXG4vLyBJbiB0aGVvcnksIHdzIHNob3VsZCByZXF1aXJlIDEgcm91bmQgdHJpcC4gQnV0IGluIGNocm9tZSwgdGhpcyBpc1xuLy8gbm90IHZlcnkgc3RhYmxlIG92ZXIgU1NMLiBNb3N0IGxpa2VseSBhIHdzIGNvbm5lY3Rpb24gcmVxdWlyZXMgYVxuLy8gc2VwYXJhdGUgU1NMIGNvbm5lY3Rpb24sIGluIHdoaWNoIGNhc2UgMiByb3VuZCB0cmlwcyBhcmUgYW5cbi8vIGFic29sdXRlIG1pbnVtdW0uXG5XZWJTb2NrZXRUcmFuc3BvcnQucm91bmRUcmlwcyA9IDI7XG5cbm1vZHVsZS5leHBvcnRzID0gV2ViU29ja2V0VHJhbnNwb3J0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3dlYnNvY2tldC5qc1xuLy8gbW9kdWxlIGlkID0gMzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///37\n");

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nif (global.crypto && global.crypto.getRandomValues) {\n  module.exports.randomBytes = function(length) {\n    var bytes = new Uint8Array(length);\n    global.crypto.getRandomValues(bytes);\n    return bytes;\n  };\n} else {\n  module.exports.randomBytes = function(length) {\n    var bytes = new Array(length);\n    for (var i = 0; i < length; i++) {\n      bytes[i] = Math.floor(Math.random() * 256);\n    }\n    return bytes;\n  };\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvYnJvd3Nlci1jcnlwdG8uanM/Yjk3YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOENBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxtQkFBbUIsWUFBWTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAoZ2xvYmFsLmNyeXB0byAmJiBnbG9iYWwuY3J5cHRvLmdldFJhbmRvbVZhbHVlcykge1xuICBtb2R1bGUuZXhwb3J0cy5yYW5kb21CeXRlcyA9IGZ1bmN0aW9uKGxlbmd0aCkge1xuICAgIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCk7XG4gICAgZ2xvYmFsLmNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYnl0ZXMpO1xuICAgIHJldHVybiBieXRlcztcbiAgfTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzLnJhbmRvbUJ5dGVzID0gZnVuY3Rpb24obGVuZ3RoKSB7XG4gICAgdmFyIGJ5dGVzID0gbmV3IEFycmF5KGxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgYnl0ZXNbaV0gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXM7XG4gIH07XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi91dGlscy9icm93c2VyLWNyeXB0by5qc1xuLy8gbW9kdWxlIGlkID0gMzhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///38\n");

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvcmVxdWlyZXMtcG9ydC9pbmRleC5qcz83MjZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjM5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENoZWNrIGlmIHdlJ3JlIHJlcXVpcmVkIHRvIGFkZCBhIHBvcnQgbnVtYmVyLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyNkZWZhdWx0LXBvcnRcbiAqIEBwYXJhbSB7TnVtYmVyfFN0cmluZ30gcG9ydCBQb3J0IG51bWJlciB3ZSBuZWVkIHRvIGNoZWNrXG4gKiBAcGFyYW0ge1N0cmluZ30gcHJvdG9jb2wgUHJvdG9jb2wgd2UgbmVlZCB0byBjaGVjayBhZ2FpbnN0LlxuICogQHJldHVybnMge0Jvb2xlYW59IElzIGl0IGEgZGVmYXVsdCBwb3J0IGZvciB0aGUgZ2l2ZW4gcHJvdG9jb2xcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlcXVpcmVkKHBvcnQsIHByb3RvY29sKSB7XG4gIHByb3RvY29sID0gcHJvdG9jb2wuc3BsaXQoJzonKVswXTtcbiAgcG9ydCA9ICtwb3J0O1xuXG4gIGlmICghcG9ydCkgcmV0dXJuIGZhbHNlO1xuXG4gIHN3aXRjaCAocHJvdG9jb2wpIHtcbiAgICBjYXNlICdodHRwJzpcbiAgICBjYXNlICd3cyc6XG4gICAgcmV0dXJuIHBvcnQgIT09IDgwO1xuXG4gICAgY2FzZSAnaHR0cHMnOlxuICAgIGNhc2UgJ3dzcyc6XG4gICAgcmV0dXJuIHBvcnQgIT09IDQ0MztcblxuICAgIGNhc2UgJ2Z0cCc6XG4gICAgcmV0dXJuIHBvcnQgIT09IDIxO1xuXG4gICAgY2FzZSAnZ29waGVyJzpcbiAgICByZXR1cm4gcG9ydCAhPT0gNzA7XG5cbiAgICBjYXNlICdmaWxlJzpcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gcG9ydCAhPT0gMDtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9yZXF1aXJlcy1wb3J0L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAzOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    if (key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmdpZnkvaW5kZXguanM/ZDk1OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI0MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogRGVjb2RlIGEgVVJJIGVuY29kZWQgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dCBUaGUgVVJJIGVuY29kZWQgc3RyaW5nLlxuICogQHJldHVybnMge1N0cmluZ30gVGhlIGRlY29kZWQgc3RyaW5nLlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGRlY29kZShpbnB1dCkge1xuICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGlucHV0LnJlcGxhY2UoL1xcKy9nLCAnICcpKTtcbn1cblxuLyoqXG4gKiBTaW1wbGUgcXVlcnkgc3RyaW5nIHBhcnNlci5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gcXVlcnkgVGhlIHF1ZXJ5IHN0cmluZyB0aGF0IG5lZWRzIHRvIGJlIHBhcnNlZC5cbiAqIEByZXR1cm5zIHtPYmplY3R9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5mdW5jdGlvbiBxdWVyeXN0cmluZyhxdWVyeSkge1xuICB2YXIgcGFyc2VyID0gLyhbXj0/Jl0rKT0/KFteJl0qKS9nXG4gICAgLCByZXN1bHQgPSB7fVxuICAgICwgcGFydDtcblxuICB3aGlsZSAocGFydCA9IHBhcnNlci5leGVjKHF1ZXJ5KSkge1xuICAgIHZhciBrZXkgPSBkZWNvZGUocGFydFsxXSlcbiAgICAgICwgdmFsdWUgPSBkZWNvZGUocGFydFsyXSk7XG5cbiAgICAvL1xuICAgIC8vIFByZXZlbnQgb3ZlcnJpZGluZyBvZiBleGlzdGluZyBwcm9wZXJ0aWVzLiBUaGlzIGVuc3VyZXMgdGhhdCBidWlsZC1pblxuICAgIC8vIG1ldGhvZHMgbGlrZSBgdG9TdHJpbmdgIG9yIF9fcHJvdG9fXyBhcmUgbm90IG92ZXJyaWRlbiBieSBtYWxpY2lvdXNcbiAgICAvLyBxdWVyeXN0cmluZ3MuXG4gICAgLy9cbiAgICBpZiAoa2V5IGluIHJlc3VsdCkgY29udGludWU7XG4gICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGEgcXVlcnkgc3RyaW5nIHRvIGFuIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqIE9iamVjdCB0aGF0IHNob3VsZCBiZSB0cmFuc2Zvcm1lZC5cbiAqIEBwYXJhbSB7U3RyaW5nfSBwcmVmaXggT3B0aW9uYWwgcHJlZml4LlxuICogQHJldHVybnMge1N0cmluZ31cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIHF1ZXJ5c3RyaW5naWZ5KG9iaiwgcHJlZml4KSB7XG4gIHByZWZpeCA9IHByZWZpeCB8fCAnJztcblxuICB2YXIgcGFpcnMgPSBbXTtcblxuICAvL1xuICAvLyBPcHRpb25hbGx5IHByZWZpeCB3aXRoIGEgJz8nIGlmIG5lZWRlZFxuICAvL1xuICBpZiAoJ3N0cmluZycgIT09IHR5cGVvZiBwcmVmaXgpIHByZWZpeCA9ICc/JztcblxuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKGhhcy5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgcGFpcnMucHVzaChlbmNvZGVVUklDb21wb25lbnQoa2V5KSArJz0nKyBlbmNvZGVVUklDb21wb25lbnQob2JqW2tleV0pKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGFpcnMubGVuZ3RoID8gcHJlZml4ICsgcGFpcnMuam9pbignJicpIDogJyc7XG59XG5cbi8vXG4vLyBFeHBvc2UgdGhlIG1vZHVsZS5cbi8vXG5leHBvcnRzLnN0cmluZ2lmeSA9IHF1ZXJ5c3RyaW5naWZ5O1xuZXhwb3J0cy5wYXJzZSA9IHF1ZXJ5c3RyaW5nO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmdpZnkvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDQwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///40\n");

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(42);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvZGVidWcvc3JjL2RlYnVnLmpzPzQ1OGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsaUJBQWlCO0FBQ3BDO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixTQUFTO0FBQzFCLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQSx5Q0FBeUMsU0FBUztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxTQUFTO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogVGhpcyBpcyB0aGUgY29tbW9uIGxvZ2ljIGZvciBib3RoIHRoZSBOb2RlLmpzIGFuZCB3ZWIgYnJvd3NlclxuICogaW1wbGVtZW50YXRpb25zIG9mIGBkZWJ1ZygpYC5cbiAqXG4gKiBFeHBvc2UgYGRlYnVnKClgIGFzIHRoZSBtb2R1bGUuXG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gY3JlYXRlRGVidWcuZGVidWcgPSBjcmVhdGVEZWJ1Z1snZGVmYXVsdCddID0gY3JlYXRlRGVidWc7XG5leHBvcnRzLmNvZXJjZSA9IGNvZXJjZTtcbmV4cG9ydHMuZGlzYWJsZSA9IGRpc2FibGU7XG5leHBvcnRzLmVuYWJsZSA9IGVuYWJsZTtcbmV4cG9ydHMuZW5hYmxlZCA9IGVuYWJsZWQ7XG5leHBvcnRzLmh1bWFuaXplID0gcmVxdWlyZSgnbXMnKTtcblxuLyoqXG4gKiBUaGUgY3VycmVudGx5IGFjdGl2ZSBkZWJ1ZyBtb2RlIG5hbWVzLCBhbmQgbmFtZXMgdG8gc2tpcC5cbiAqL1xuXG5leHBvcnRzLm5hbWVzID0gW107XG5leHBvcnRzLnNraXBzID0gW107XG5cbi8qKlxuICogTWFwIG9mIHNwZWNpYWwgXCIlblwiIGhhbmRsaW5nIGZ1bmN0aW9ucywgZm9yIHRoZSBkZWJ1ZyBcImZvcm1hdFwiIGFyZ3VtZW50LlxuICpcbiAqIFZhbGlkIGtleSBuYW1lcyBhcmUgYSBzaW5nbGUsIGxvd2VyIG9yIHVwcGVyLWNhc2UgbGV0dGVyLCBpLmUuIFwiblwiIGFuZCBcIk5cIi5cbiAqL1xuXG5leHBvcnRzLmZvcm1hdHRlcnMgPSB7fTtcblxuLyoqXG4gKiBQcmV2aW91cyBsb2cgdGltZXN0YW1wLlxuICovXG5cbnZhciBwcmV2VGltZTtcblxuLyoqXG4gKiBTZWxlY3QgYSBjb2xvci5cbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNlbGVjdENvbG9yKG5hbWVzcGFjZSkge1xuICB2YXIgaGFzaCA9IDAsIGk7XG5cbiAgZm9yIChpIGluIG5hbWVzcGFjZSkge1xuICAgIGhhc2ggID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBuYW1lc3BhY2UuY2hhckNvZGVBdChpKTtcbiAgICBoYXNoIHw9IDA7IC8vIENvbnZlcnQgdG8gMzJiaXQgaW50ZWdlclxuICB9XG5cbiAgcmV0dXJuIGV4cG9ydHMuY29sb3JzW01hdGguYWJzKGhhc2gpICUgZXhwb3J0cy5jb2xvcnMubGVuZ3RoXTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBkZWJ1Z2dlciB3aXRoIHRoZSBnaXZlbiBgbmFtZXNwYWNlYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlRGVidWcobmFtZXNwYWNlKSB7XG5cbiAgZnVuY3Rpb24gZGVidWcoKSB7XG4gICAgLy8gZGlzYWJsZWQ/XG4gICAgaWYgKCFkZWJ1Zy5lbmFibGVkKSByZXR1cm47XG5cbiAgICB2YXIgc2VsZiA9IGRlYnVnO1xuXG4gICAgLy8gc2V0IGBkaWZmYCB0aW1lc3RhbXBcbiAgICB2YXIgY3VyciA9ICtuZXcgRGF0ZSgpO1xuICAgIHZhciBtcyA9IGN1cnIgLSAocHJldlRpbWUgfHwgY3Vycik7XG4gICAgc2VsZi5kaWZmID0gbXM7XG4gICAgc2VsZi5wcmV2ID0gcHJldlRpbWU7XG4gICAgc2VsZi5jdXJyID0gY3VycjtcbiAgICBwcmV2VGltZSA9IGN1cnI7XG5cbiAgICAvLyB0dXJuIHRoZSBgYXJndW1lbnRzYCBpbnRvIGEgcHJvcGVyIEFycmF5XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cblxuICAgIGFyZ3NbMF0gPSBleHBvcnRzLmNvZXJjZShhcmdzWzBdKTtcblxuICAgIGlmICgnc3RyaW5nJyAhPT0gdHlwZW9mIGFyZ3NbMF0pIHtcbiAgICAgIC8vIGFueXRoaW5nIGVsc2UgbGV0J3MgaW5zcGVjdCB3aXRoICVPXG4gICAgICBhcmdzLnVuc2hpZnQoJyVPJyk7XG4gICAgfVxuXG4gICAgLy8gYXBwbHkgYW55IGBmb3JtYXR0ZXJzYCB0cmFuc2Zvcm1hdGlvbnNcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIGFyZ3NbMF0gPSBhcmdzWzBdLnJlcGxhY2UoLyUoW2EtekEtWiVdKS9nLCBmdW5jdGlvbihtYXRjaCwgZm9ybWF0KSB7XG4gICAgICAvLyBpZiB3ZSBlbmNvdW50ZXIgYW4gZXNjYXBlZCAlIHRoZW4gZG9uJ3QgaW5jcmVhc2UgdGhlIGFycmF5IGluZGV4XG4gICAgICBpZiAobWF0Y2ggPT09ICclJScpIHJldHVybiBtYXRjaDtcbiAgICAgIGluZGV4Kys7XG4gICAgICB2YXIgZm9ybWF0dGVyID0gZXhwb3J0cy5mb3JtYXR0ZXJzW2Zvcm1hdF07XG4gICAgICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGZvcm1hdHRlcikge1xuICAgICAgICB2YXIgdmFsID0gYXJnc1tpbmRleF07XG4gICAgICAgIG1hdGNoID0gZm9ybWF0dGVyLmNhbGwoc2VsZiwgdmFsKTtcblxuICAgICAgICAvLyBub3cgd2UgbmVlZCB0byByZW1vdmUgYGFyZ3NbaW5kZXhdYCBzaW5jZSBpdCdzIGlubGluZWQgaW4gdGhlIGBmb3JtYXRgXG4gICAgICAgIGFyZ3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgaW5kZXgtLTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXRjaDtcbiAgICB9KTtcblxuICAgIC8vIGFwcGx5IGVudi1zcGVjaWZpYyBmb3JtYXR0aW5nIChjb2xvcnMsIGV0Yy4pXG4gICAgZXhwb3J0cy5mb3JtYXRBcmdzLmNhbGwoc2VsZiwgYXJncyk7XG5cbiAgICB2YXIgbG9nRm4gPSBkZWJ1Zy5sb2cgfHwgZXhwb3J0cy5sb2cgfHwgY29uc29sZS5sb2cuYmluZChjb25zb2xlKTtcbiAgICBsb2dGbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgfVxuXG4gIGRlYnVnLm5hbWVzcGFjZSA9IG5hbWVzcGFjZTtcbiAgZGVidWcuZW5hYmxlZCA9IGV4cG9ydHMuZW5hYmxlZChuYW1lc3BhY2UpO1xuICBkZWJ1Zy51c2VDb2xvcnMgPSBleHBvcnRzLnVzZUNvbG9ycygpO1xuICBkZWJ1Zy5jb2xvciA9IHNlbGVjdENvbG9yKG5hbWVzcGFjZSk7XG5cbiAgLy8gZW52LXNwZWNpZmljIGluaXRpYWxpemF0aW9uIGxvZ2ljIGZvciBkZWJ1ZyBpbnN0YW5jZXNcbiAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBleHBvcnRzLmluaXQpIHtcbiAgICBleHBvcnRzLmluaXQoZGVidWcpO1xuICB9XG5cbiAgcmV0dXJuIGRlYnVnO1xufVxuXG4vKipcbiAqIEVuYWJsZXMgYSBkZWJ1ZyBtb2RlIGJ5IG5hbWVzcGFjZXMuIFRoaXMgY2FuIGluY2x1ZGUgbW9kZXNcbiAqIHNlcGFyYXRlZCBieSBhIGNvbG9uIGFuZCB3aWxkY2FyZHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZXNcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZW5hYmxlKG5hbWVzcGFjZXMpIHtcbiAgZXhwb3J0cy5zYXZlKG5hbWVzcGFjZXMpO1xuXG4gIGV4cG9ydHMubmFtZXMgPSBbXTtcbiAgZXhwb3J0cy5za2lwcyA9IFtdO1xuXG4gIHZhciBzcGxpdCA9ICh0eXBlb2YgbmFtZXNwYWNlcyA9PT0gJ3N0cmluZycgPyBuYW1lc3BhY2VzIDogJycpLnNwbGl0KC9bXFxzLF0rLyk7XG4gIHZhciBsZW4gPSBzcGxpdC5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgIGlmICghc3BsaXRbaV0pIGNvbnRpbnVlOyAvLyBpZ25vcmUgZW1wdHkgc3RyaW5nc1xuICAgIG5hbWVzcGFjZXMgPSBzcGxpdFtpXS5yZXBsYWNlKC9cXCovZywgJy4qPycpO1xuICAgIGlmIChuYW1lc3BhY2VzWzBdID09PSAnLScpIHtcbiAgICAgIGV4cG9ydHMuc2tpcHMucHVzaChuZXcgUmVnRXhwKCdeJyArIG5hbWVzcGFjZXMuc3Vic3RyKDEpICsgJyQnKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV4cG9ydHMubmFtZXMucHVzaChuZXcgUmVnRXhwKCdeJyArIG5hbWVzcGFjZXMgKyAnJCcpKTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNhYmxlIGRlYnVnIG91dHB1dC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gIGV4cG9ydHMuZW5hYmxlKCcnKTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIG1vZGUgbmFtZSBpcyBlbmFibGVkLCBmYWxzZSBvdGhlcndpc2UuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIGVuYWJsZWQobmFtZSkge1xuICB2YXIgaSwgbGVuO1xuICBmb3IgKGkgPSAwLCBsZW4gPSBleHBvcnRzLnNraXBzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKGV4cG9ydHMuc2tpcHNbaV0udGVzdChuYW1lKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBmb3IgKGkgPSAwLCBsZW4gPSBleHBvcnRzLm5hbWVzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgaWYgKGV4cG9ydHMubmFtZXNbaV0udGVzdChuYW1lKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBDb2VyY2UgYHZhbGAuXG4gKlxuICogQHBhcmFtIHtNaXhlZH0gdmFsXG4gKiBAcmV0dXJuIHtNaXhlZH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNvZXJjZSh2YWwpIHtcbiAgaWYgKHZhbCBpbnN0YW5jZW9mIEVycm9yKSByZXR1cm4gdmFsLnN0YWNrIHx8IHZhbC5tZXNzYWdlO1xuICByZXR1cm4gdmFsO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvZGVidWcvc3JjL2RlYnVnLmpzXG4vLyBtb2R1bGUgaWQgPSA0MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///41\n");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvbXMvaW5kZXguanM/Y2I0MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QixXQUFXLE9BQU87QUFDbEIsWUFBWSxNQUFNO0FBQ2xCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhlbHBlcnMuXG4gKi9cblxudmFyIHMgPSAxMDAwO1xudmFyIG0gPSBzICogNjA7XG52YXIgaCA9IG0gKiA2MDtcbnZhciBkID0gaCAqIDI0O1xudmFyIHkgPSBkICogMzY1LjI1O1xuXG4vKipcbiAqIFBhcnNlIG9yIGZvcm1hdCB0aGUgZ2l2ZW4gYHZhbGAuXG4gKlxuICogT3B0aW9uczpcbiAqXG4gKiAgLSBgbG9uZ2AgdmVyYm9zZSBmb3JtYXR0aW5nIFtmYWxzZV1cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHZhbFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHRocm93cyB7RXJyb3J9IHRocm93IGFuIGVycm9yIGlmIHZhbCBpcyBub3QgYSBub24tZW1wdHkgc3RyaW5nIG9yIGEgbnVtYmVyXG4gKiBAcmV0dXJuIHtTdHJpbmd8TnVtYmVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHZhbCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuICBpZiAodHlwZSA9PT0gJ3N0cmluZycgJiYgdmFsLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gcGFyc2UodmFsKTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnbnVtYmVyJyAmJiBpc05hTih2YWwpID09PSBmYWxzZSkge1xuICAgIHJldHVybiBvcHRpb25zLmxvbmcgPyBmbXRMb25nKHZhbCkgOiBmbXRTaG9ydCh2YWwpO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAndmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD0nICtcbiAgICAgIEpTT04uc3RyaW5naWZ5KHZhbClcbiAgKTtcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGBzdHJgIGFuZCByZXR1cm4gbWlsbGlzZWNvbmRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0cikge1xuICBzdHIgPSBTdHJpbmcoc3RyKTtcbiAgaWYgKHN0ci5sZW5ndGggPiAxMDApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIG1hdGNoID0gL14oKD86XFxkKyk/XFwuP1xcZCspICoobWlsbGlzZWNvbmRzP3xtc2Vjcz98bXN8c2Vjb25kcz98c2Vjcz98c3xtaW51dGVzP3xtaW5zP3xtfGhvdXJzP3xocnM/fGh8ZGF5cz98ZHx5ZWFycz98eXJzP3x5KT8kL2kuZXhlYyhcbiAgICBzdHJcbiAgKTtcbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgbiA9IHBhcnNlRmxvYXQobWF0Y2hbMV0pO1xuICB2YXIgdHlwZSA9IChtYXRjaFsyXSB8fCAnbXMnKS50b0xvd2VyQ2FzZSgpO1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICd5ZWFycyc6XG4gICAgY2FzZSAneWVhcic6XG4gICAgY2FzZSAneXJzJzpcbiAgICBjYXNlICd5cic6XG4gICAgY2FzZSAneSc6XG4gICAgICByZXR1cm4gbiAqIHk7XG4gICAgY2FzZSAnZGF5cyc6XG4gICAgY2FzZSAnZGF5JzpcbiAgICBjYXNlICdkJzpcbiAgICAgIHJldHVybiBuICogZDtcbiAgICBjYXNlICdob3Vycyc6XG4gICAgY2FzZSAnaG91cic6XG4gICAgY2FzZSAnaHJzJzpcbiAgICBjYXNlICdocic6XG4gICAgY2FzZSAnaCc6XG4gICAgICByZXR1cm4gbiAqIGg7XG4gICAgY2FzZSAnbWludXRlcyc6XG4gICAgY2FzZSAnbWludXRlJzpcbiAgICBjYXNlICdtaW5zJzpcbiAgICBjYXNlICdtaW4nOlxuICAgIGNhc2UgJ20nOlxuICAgICAgcmV0dXJuIG4gKiBtO1xuICAgIGNhc2UgJ3NlY29uZHMnOlxuICAgIGNhc2UgJ3NlY29uZCc6XG4gICAgY2FzZSAnc2Vjcyc6XG4gICAgY2FzZSAnc2VjJzpcbiAgICBjYXNlICdzJzpcbiAgICAgIHJldHVybiBuICogcztcbiAgICBjYXNlICdtaWxsaXNlY29uZHMnOlxuICAgIGNhc2UgJ21pbGxpc2Vjb25kJzpcbiAgICBjYXNlICdtc2Vjcyc6XG4gICAgY2FzZSAnbXNlYyc6XG4gICAgY2FzZSAnbXMnOlxuICAgICAgcmV0dXJuIG47XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuLyoqXG4gKiBTaG9ydCBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmbXRTaG9ydChtcykge1xuICBpZiAobXMgPj0gZCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gZCkgKyAnZCc7XG4gIH1cbiAgaWYgKG1zID49IGgpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIGgpICsgJ2gnO1xuICB9XG4gIGlmIChtcyA+PSBtKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBtKSArICdtJztcbiAgfVxuICBpZiAobXMgPj0gcykge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gcykgKyAncyc7XG4gIH1cbiAgcmV0dXJuIG1zICsgJ21zJztcbn1cblxuLyoqXG4gKiBMb25nIGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdExvbmcobXMpIHtcbiAgcmV0dXJuIHBsdXJhbChtcywgZCwgJ2RheScpIHx8XG4gICAgcGx1cmFsKG1zLCBoLCAnaG91cicpIHx8XG4gICAgcGx1cmFsKG1zLCBtLCAnbWludXRlJykgfHxcbiAgICBwbHVyYWwobXMsIHMsICdzZWNvbmQnKSB8fFxuICAgIG1zICsgJyBtcyc7XG59XG5cbi8qKlxuICogUGx1cmFsaXphdGlvbiBoZWxwZXIuXG4gKi9cblxuZnVuY3Rpb24gcGx1cmFsKG1zLCBuLCBuYW1lKSB7XG4gIGlmIChtcyA8IG4pIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKG1zIDwgbiAqIDEuNSkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKG1zIC8gbikgKyAnICcgKyBuYW1lO1xuICB9XG4gIHJldHVybiBNYXRoLmNlaWwobXMgLyBuKSArICcgJyArIG5hbWUgKyAncyc7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9tcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gNDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///42\n");

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {module.exports = global.WebSocket || global.MozWebSocket;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2Jyb3dzZXIvd2Vic29ja2V0LmpzP2E5NmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGdsb2JhbC5XZWJTb2NrZXQgfHwgZ2xvYmFsLk1veldlYlNvY2tldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9icm93c2VyL3dlYnNvY2tldC5qc1xuLy8gbW9kdWxlIGlkID0gNDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///43\n");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar inherits = __webpack_require__(0)\n  , AjaxBasedTransport = __webpack_require__(9)\n  , XhrReceiver = __webpack_require__(13)\n  , XHRCorsObject = __webpack_require__(14)\n  , XHRLocalObject = __webpack_require__(10)\n  , browser = __webpack_require__(11)\n  ;\n\nfunction XhrStreamingTransport(transUrl) {\n  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);\n}\n\ninherits(XhrStreamingTransport, AjaxBasedTransport);\n\nXhrStreamingTransport.enabled = function(info) {\n  if (info.nullOrigin) {\n    return false;\n  }\n  // Opera doesn't support xhr-streaming #60\n  // But it might be able to #92\n  if (browser.isOpera()) {\n    return false;\n  }\n\n  return XHRCorsObject.enabled;\n};\n\nXhrStreamingTransport.transportName = 'xhr-streaming';\nXhrStreamingTransport.roundTrips = 2; // preflight, ajax\n\n// Safari gets confused when a streaming ajax request is started\n// before onload. This causes the load indicator to spin indefinetely.\n// Only require body when used in a browser\nXhrStreamingTransport.needBody = !!global.document;\n\nmodule.exports = XhrStreamingTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3hoci1zdHJlYW1pbmcuanM/MDI0YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOENBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EscUNBQXFDOztBQUVyQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiI0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICAsIFhoclJlY2VpdmVyID0gcmVxdWlyZSgnLi9yZWNlaXZlci94aHInKVxuICAsIFhIUkNvcnNPYmplY3QgPSByZXF1aXJlKCcuL3NlbmRlci94aHItY29ycycpXG4gICwgWEhSTG9jYWxPYmplY3QgPSByZXF1aXJlKCcuL3NlbmRlci94aHItbG9jYWwnKVxuICAsIGJyb3dzZXIgPSByZXF1aXJlKCcuLi91dGlscy9icm93c2VyJylcbiAgO1xuXG5mdW5jdGlvbiBYaHJTdHJlYW1pbmdUcmFuc3BvcnQodHJhbnNVcmwpIHtcbiAgaWYgKCFYSFJMb2NhbE9iamVjdC5lbmFibGVkICYmICFYSFJDb3JzT2JqZWN0LmVuYWJsZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBjcmVhdGVkIHdoZW4gZGlzYWJsZWQnKTtcbiAgfVxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy94aHJfc3RyZWFtaW5nJywgWGhyUmVjZWl2ZXIsIFhIUkNvcnNPYmplY3QpO1xufVxuXG5pbmhlcml0cyhYaHJTdHJlYW1pbmdUcmFuc3BvcnQsIEFqYXhCYXNlZFRyYW5zcG9ydCk7XG5cblhoclN0cmVhbWluZ1RyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oaW5mbykge1xuICBpZiAoaW5mby5udWxsT3JpZ2luKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vIE9wZXJhIGRvZXNuJ3Qgc3VwcG9ydCB4aHItc3RyZWFtaW5nICM2MFxuICAvLyBCdXQgaXQgbWlnaHQgYmUgYWJsZSB0byAjOTJcbiAgaWYgKGJyb3dzZXIuaXNPcGVyYSgpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIFhIUkNvcnNPYmplY3QuZW5hYmxlZDtcbn07XG5cblhoclN0cmVhbWluZ1RyYW5zcG9ydC50cmFuc3BvcnROYW1lID0gJ3hoci1zdHJlYW1pbmcnO1xuWGhyU3RyZWFtaW5nVHJhbnNwb3J0LnJvdW5kVHJpcHMgPSAyOyAvLyBwcmVmbGlnaHQsIGFqYXhcblxuLy8gU2FmYXJpIGdldHMgY29uZnVzZWQgd2hlbiBhIHN0cmVhbWluZyBhamF4IHJlcXVlc3QgaXMgc3RhcnRlZFxuLy8gYmVmb3JlIG9ubG9hZC4gVGhpcyBjYXVzZXMgdGhlIGxvYWQgaW5kaWNhdG9yIHRvIHNwaW4gaW5kZWZpbmV0ZWx5LlxuLy8gT25seSByZXF1aXJlIGJvZHkgd2hlbiB1c2VkIGluIGEgYnJvd3NlclxuWGhyU3RyZWFtaW5nVHJhbnNwb3J0Lm5lZWRCb2R5ID0gISFnbG9iYWwuZG9jdW1lbnQ7XG5cbm1vZHVsZS5leHBvcnRzID0gWGhyU3RyZWFtaW5nVHJhbnNwb3J0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3hoci1zdHJlYW1pbmcuanNcbi8vIG1vZHVsZSBpZCA9IDQ0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///44\n");

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar inherits = __webpack_require__(0)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:buffered-sender');\n}\n\nfunction BufferedSender(url, sender) {\n  debug(url);\n  EventEmitter.call(this);\n  this.sendBuffer = [];\n  this.sender = sender;\n  this.url = url;\n}\n\ninherits(BufferedSender, EventEmitter);\n\nBufferedSender.prototype.send = function(message) {\n  debug('send', message);\n  this.sendBuffer.push(message);\n  if (!this.sendStop) {\n    this.sendSchedule();\n  }\n};\n\n// For polling transports in a situation when in the message callback,\n// new message is being send. If the sending connection was started\n// before receiving one, it is possible to saturate the network and\n// timeout due to the lack of receiving socket. To avoid that we delay\n// sending messages by some small time, in order to let receiving\n// connection be started beforehand. This is only a halfmeasure and\n// does not fix the big problem, but it does make the tests go more\n// stable on slow networks.\nBufferedSender.prototype.sendScheduleWait = function() {\n  debug('sendScheduleWait');\n  var self = this;\n  var tref;\n  this.sendStop = function() {\n    debug('sendStop');\n    self.sendStop = null;\n    clearTimeout(tref);\n  };\n  tref = setTimeout(function() {\n    debug('timeout');\n    self.sendStop = null;\n    self.sendSchedule();\n  }, 25);\n};\n\nBufferedSender.prototype.sendSchedule = function() {\n  debug('sendSchedule', this.sendBuffer.length);\n  var self = this;\n  if (this.sendBuffer.length > 0) {\n    var payload = '[' + this.sendBuffer.join(',') + ']';\n    this.sendStop = this.sender(this.url, payload, function(err) {\n      self.sendStop = null;\n      if (err) {\n        debug('error', err);\n        self.emit('close', err.code || 1006, 'Sending error: ' + err);\n        self._cleanup();\n      } else {\n        self.sendScheduleWait();\n      }\n    });\n    this.sendBuffer = [];\n  }\n};\n\nBufferedSender.prototype._cleanup = function() {\n  debug('_cleanup');\n  this.removeAllListeners();\n};\n\nBufferedSender.prototype.stop = function() {\n  debug('stop');\n  this._cleanup();\n  if (this.sendStop) {\n    this.sendStop();\n    this.sendStop = null;\n  }\n};\n\nmodule.exports = BufferedSender;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2xpYi9idWZmZXJlZC1zZW5kZXIuanM/MjNlZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiK0NBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OmJ1ZmZlcmVkLXNlbmRlcicpO1xufVxuXG5mdW5jdGlvbiBCdWZmZXJlZFNlbmRlcih1cmwsIHNlbmRlcikge1xuICBkZWJ1Zyh1cmwpO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcbiAgdGhpcy5zZW5kQnVmZmVyID0gW107XG4gIHRoaXMuc2VuZGVyID0gc2VuZGVyO1xuICB0aGlzLnVybCA9IHVybDtcbn1cblxuaW5oZXJpdHMoQnVmZmVyZWRTZW5kZXIsIEV2ZW50RW1pdHRlcik7XG5cbkJ1ZmZlcmVkU2VuZGVyLnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24obWVzc2FnZSkge1xuICBkZWJ1Zygnc2VuZCcsIG1lc3NhZ2UpO1xuICB0aGlzLnNlbmRCdWZmZXIucHVzaChtZXNzYWdlKTtcbiAgaWYgKCF0aGlzLnNlbmRTdG9wKSB7XG4gICAgdGhpcy5zZW5kU2NoZWR1bGUoKTtcbiAgfVxufTtcblxuLy8gRm9yIHBvbGxpbmcgdHJhbnNwb3J0cyBpbiBhIHNpdHVhdGlvbiB3aGVuIGluIHRoZSBtZXNzYWdlIGNhbGxiYWNrLFxuLy8gbmV3IG1lc3NhZ2UgaXMgYmVpbmcgc2VuZC4gSWYgdGhlIHNlbmRpbmcgY29ubmVjdGlvbiB3YXMgc3RhcnRlZFxuLy8gYmVmb3JlIHJlY2VpdmluZyBvbmUsIGl0IGlzIHBvc3NpYmxlIHRvIHNhdHVyYXRlIHRoZSBuZXR3b3JrIGFuZFxuLy8gdGltZW91dCBkdWUgdG8gdGhlIGxhY2sgb2YgcmVjZWl2aW5nIHNvY2tldC4gVG8gYXZvaWQgdGhhdCB3ZSBkZWxheVxuLy8gc2VuZGluZyBtZXNzYWdlcyBieSBzb21lIHNtYWxsIHRpbWUsIGluIG9yZGVyIHRvIGxldCByZWNlaXZpbmdcbi8vIGNvbm5lY3Rpb24gYmUgc3RhcnRlZCBiZWZvcmVoYW5kLiBUaGlzIGlzIG9ubHkgYSBoYWxmbWVhc3VyZSBhbmRcbi8vIGRvZXMgbm90IGZpeCB0aGUgYmlnIHByb2JsZW0sIGJ1dCBpdCBkb2VzIG1ha2UgdGhlIHRlc3RzIGdvIG1vcmVcbi8vIHN0YWJsZSBvbiBzbG93IG5ldHdvcmtzLlxuQnVmZmVyZWRTZW5kZXIucHJvdG90eXBlLnNlbmRTY2hlZHVsZVdhaXQgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ3NlbmRTY2hlZHVsZVdhaXQnKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgdHJlZjtcbiAgdGhpcy5zZW5kU3RvcCA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdzZW5kU3RvcCcpO1xuICAgIHNlbGYuc2VuZFN0b3AgPSBudWxsO1xuICAgIGNsZWFyVGltZW91dCh0cmVmKTtcbiAgfTtcbiAgdHJlZiA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ3RpbWVvdXQnKTtcbiAgICBzZWxmLnNlbmRTdG9wID0gbnVsbDtcbiAgICBzZWxmLnNlbmRTY2hlZHVsZSgpO1xuICB9LCAyNSk7XG59O1xuXG5CdWZmZXJlZFNlbmRlci5wcm90b3R5cGUuc2VuZFNjaGVkdWxlID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdzZW5kU2NoZWR1bGUnLCB0aGlzLnNlbmRCdWZmZXIubGVuZ3RoKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBpZiAodGhpcy5zZW5kQnVmZmVyLmxlbmd0aCA+IDApIHtcbiAgICB2YXIgcGF5bG9hZCA9ICdbJyArIHRoaXMuc2VuZEJ1ZmZlci5qb2luKCcsJykgKyAnXSc7XG4gICAgdGhpcy5zZW5kU3RvcCA9IHRoaXMuc2VuZGVyKHRoaXMudXJsLCBwYXlsb2FkLCBmdW5jdGlvbihlcnIpIHtcbiAgICAgIHNlbGYuc2VuZFN0b3AgPSBudWxsO1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBkZWJ1ZygnZXJyb3InLCBlcnIpO1xuICAgICAgICBzZWxmLmVtaXQoJ2Nsb3NlJywgZXJyLmNvZGUgfHwgMTAwNiwgJ1NlbmRpbmcgZXJyb3I6ICcgKyBlcnIpO1xuICAgICAgICBzZWxmLl9jbGVhbnVwKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWxmLnNlbmRTY2hlZHVsZVdhaXQoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnNlbmRCdWZmZXIgPSBbXTtcbiAgfVxufTtcblxuQnVmZmVyZWRTZW5kZXIucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfY2xlYW51cCcpO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxuQnVmZmVyZWRTZW5kZXIucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ3N0b3AnKTtcbiAgdGhpcy5fY2xlYW51cCgpO1xuICBpZiAodGhpcy5zZW5kU3RvcCkge1xuICAgIHRoaXMuc2VuZFN0b3AoKTtcbiAgICB0aGlzLnNlbmRTdG9wID0gbnVsbDtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBCdWZmZXJlZFNlbmRlcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9saWIvYnVmZmVyZWQtc2VuZGVyLmpzXG4vLyBtb2R1bGUgaWQgPSA0NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///45\n");

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar inherits = __webpack_require__(0)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:polling');\n}\n\nfunction Polling(Receiver, receiveUrl, AjaxObject) {\n  debug(receiveUrl);\n  EventEmitter.call(this);\n  this.Receiver = Receiver;\n  this.receiveUrl = receiveUrl;\n  this.AjaxObject = AjaxObject;\n  this._scheduleReceiver();\n}\n\ninherits(Polling, EventEmitter);\n\nPolling.prototype._scheduleReceiver = function() {\n  debug('_scheduleReceiver');\n  var self = this;\n  var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);\n\n  poll.on('message', function(msg) {\n    debug('message', msg);\n    self.emit('message', msg);\n  });\n\n  poll.once('close', function(code, reason) {\n    debug('close', code, reason, self.pollIsClosing);\n    self.poll = poll = null;\n\n    if (!self.pollIsClosing) {\n      if (reason === 'network') {\n        self._scheduleReceiver();\n      } else {\n        self.emit('close', code || 1006, reason);\n        self.removeAllListeners();\n      }\n    }\n  });\n};\n\nPolling.prototype.abort = function() {\n  debug('abort');\n  this.removeAllListeners();\n  this.pollIsClosing = true;\n  if (this.poll) {\n    this.poll.abort();\n  }\n};\n\nmodule.exports = Polling;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2xpYi9wb2xsaW5nLmpzP2ZhYjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IitDQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6IjQ2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpwb2xsaW5nJyk7XG59XG5cbmZ1bmN0aW9uIFBvbGxpbmcoUmVjZWl2ZXIsIHJlY2VpdmVVcmwsIEFqYXhPYmplY3QpIHtcbiAgZGVidWcocmVjZWl2ZVVybCk7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuICB0aGlzLlJlY2VpdmVyID0gUmVjZWl2ZXI7XG4gIHRoaXMucmVjZWl2ZVVybCA9IHJlY2VpdmVVcmw7XG4gIHRoaXMuQWpheE9iamVjdCA9IEFqYXhPYmplY3Q7XG4gIHRoaXMuX3NjaGVkdWxlUmVjZWl2ZXIoKTtcbn1cblxuaW5oZXJpdHMoUG9sbGluZywgRXZlbnRFbWl0dGVyKTtcblxuUG9sbGluZy5wcm90b3R5cGUuX3NjaGVkdWxlUmVjZWl2ZXIgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ19zY2hlZHVsZVJlY2VpdmVyJyk7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdmFyIHBvbGwgPSB0aGlzLnBvbGwgPSBuZXcgdGhpcy5SZWNlaXZlcih0aGlzLnJlY2VpdmVVcmwsIHRoaXMuQWpheE9iamVjdCk7XG5cbiAgcG9sbC5vbignbWVzc2FnZScsIGZ1bmN0aW9uKG1zZykge1xuICAgIGRlYnVnKCdtZXNzYWdlJywgbXNnKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBtc2cpO1xuICB9KTtcblxuICBwb2xsLm9uY2UoJ2Nsb3NlJywgZnVuY3Rpb24oY29kZSwgcmVhc29uKSB7XG4gICAgZGVidWcoJ2Nsb3NlJywgY29kZSwgcmVhc29uLCBzZWxmLnBvbGxJc0Nsb3NpbmcpO1xuICAgIHNlbGYucG9sbCA9IHBvbGwgPSBudWxsO1xuXG4gICAgaWYgKCFzZWxmLnBvbGxJc0Nsb3NpbmcpIHtcbiAgICAgIGlmIChyZWFzb24gPT09ICduZXR3b3JrJykge1xuICAgICAgICBzZWxmLl9zY2hlZHVsZVJlY2VpdmVyKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWxmLmVtaXQoJ2Nsb3NlJywgY29kZSB8fCAxMDA2LCByZWFzb24pO1xuICAgICAgICBzZWxmLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuXG5Qb2xsaW5nLnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnYWJvcnQnKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgdGhpcy5wb2xsSXNDbG9zaW5nID0gdHJ1ZTtcbiAgaWYgKHRoaXMucG9sbCkge1xuICAgIHRoaXMucG9sbC5hYm9ydCgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBvbGxpbmc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvbGliL3BvbGxpbmcuanNcbi8vIG1vZHVsZSBpZCA9IDQ2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///46\n");

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar inherits = __webpack_require__(0)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , EventSourceDriver = __webpack_require__(25)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:receiver:eventsource');\n}\n\nfunction EventSourceReceiver(url) {\n  debug(url);\n  EventEmitter.call(this);\n\n  var self = this;\n  var es = this.es = new EventSourceDriver(url);\n  es.onmessage = function(e) {\n    debug('message', e.data);\n    self.emit('message', decodeURI(e.data));\n  };\n  es.onerror = function(e) {\n    debug('error', es.readyState, e);\n    // ES on reconnection has readyState = 0 or 1.\n    // on network error it's CLOSED = 2\n    var reason = (es.readyState !== 2 ? 'network' : 'permanent');\n    self._cleanup();\n    self._close(reason);\n  };\n}\n\ninherits(EventSourceReceiver, EventEmitter);\n\nEventSourceReceiver.prototype.abort = function() {\n  debug('abort');\n  this._cleanup();\n  this._close('user');\n};\n\nEventSourceReceiver.prototype._cleanup = function() {\n  debug('cleanup');\n  var es = this.es;\n  if (es) {\n    es.onmessage = es.onerror = null;\n    es.close();\n    this.es = null;\n  }\n};\n\nEventSourceReceiver.prototype._close = function(reason) {\n  debug('close', reason);\n  var self = this;\n  // Safari and chrome < 15 crash if we close window before\n  // waiting for ES cleanup. See:\n  // https://code.google.com/p/chromium/issues/detail?id=89155\n  setTimeout(function() {\n    self.emit('close', null, reason);\n    self.removeAllListeners();\n  }, 200);\n};\n\nmodule.exports = EventSourceReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3JlY2VpdmVyL2V2ZW50c291cmNlLmpzP2M3M2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IitDQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwiZmlsZSI6IjQ3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgRXZlbnRTb3VyY2VEcml2ZXIgPSByZXF1aXJlKCdldmVudHNvdXJjZScpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpyZWNlaXZlcjpldmVudHNvdXJjZScpO1xufVxuXG5mdW5jdGlvbiBFdmVudFNvdXJjZVJlY2VpdmVyKHVybCkge1xuICBkZWJ1Zyh1cmwpO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBlcyA9IHRoaXMuZXMgPSBuZXcgRXZlbnRTb3VyY2VEcml2ZXIodXJsKTtcbiAgZXMub25tZXNzYWdlID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdtZXNzYWdlJywgZS5kYXRhKTtcbiAgICBzZWxmLmVtaXQoJ21lc3NhZ2UnLCBkZWNvZGVVUkkoZS5kYXRhKSk7XG4gIH07XG4gIGVzLm9uZXJyb3IgPSBmdW5jdGlvbihlKSB7XG4gICAgZGVidWcoJ2Vycm9yJywgZXMucmVhZHlTdGF0ZSwgZSk7XG4gICAgLy8gRVMgb24gcmVjb25uZWN0aW9uIGhhcyByZWFkeVN0YXRlID0gMCBvciAxLlxuICAgIC8vIG9uIG5ldHdvcmsgZXJyb3IgaXQncyBDTE9TRUQgPSAyXG4gICAgdmFyIHJlYXNvbiA9IChlcy5yZWFkeVN0YXRlICE9PSAyID8gJ25ldHdvcmsnIDogJ3Blcm1hbmVudCcpO1xuICAgIHNlbGYuX2NsZWFudXAoKTtcbiAgICBzZWxmLl9jbG9zZShyZWFzb24pO1xuICB9O1xufVxuXG5pbmhlcml0cyhFdmVudFNvdXJjZVJlY2VpdmVyLCBFdmVudEVtaXR0ZXIpO1xuXG5FdmVudFNvdXJjZVJlY2VpdmVyLnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnYWJvcnQnKTtcbiAgdGhpcy5fY2xlYW51cCgpO1xuICB0aGlzLl9jbG9zZSgndXNlcicpO1xufTtcblxuRXZlbnRTb3VyY2VSZWNlaXZlci5wcm90b3R5cGUuX2NsZWFudXAgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ2NsZWFudXAnKTtcbiAgdmFyIGVzID0gdGhpcy5lcztcbiAgaWYgKGVzKSB7XG4gICAgZXMub25tZXNzYWdlID0gZXMub25lcnJvciA9IG51bGw7XG4gICAgZXMuY2xvc2UoKTtcbiAgICB0aGlzLmVzID0gbnVsbDtcbiAgfVxufTtcblxuRXZlbnRTb3VyY2VSZWNlaXZlci5wcm90b3R5cGUuX2Nsb3NlID0gZnVuY3Rpb24ocmVhc29uKSB7XG4gIGRlYnVnKCdjbG9zZScsIHJlYXNvbik7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgLy8gU2FmYXJpIGFuZCBjaHJvbWUgPCAxNSBjcmFzaCBpZiB3ZSBjbG9zZSB3aW5kb3cgYmVmb3JlXG4gIC8vIHdhaXRpbmcgZm9yIEVTIGNsZWFudXAuIFNlZTpcbiAgLy8gaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTg5MTU1XG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgc2VsZi5lbWl0KCdjbG9zZScsIG51bGwsIHJlYXNvbik7XG4gICAgc2VsZi5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgfSwgMjAwKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRTb3VyY2VSZWNlaXZlcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9yZWNlaXZlci9ldmVudHNvdXJjZS5qc1xuLy8gbW9kdWxlIGlkID0gNDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///47\n");

/***/ }),
/* 48 */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2MzYzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjQ4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihtb2R1bGUpIHtcclxuXHRpZighbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xyXG5cdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XHJcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcclxuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxyXG5cdFx0aWYoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XHJcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcclxuXHR9XHJcblx0cmV0dXJuIG1vZHVsZTtcclxufTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzXG4vLyBtb2R1bGUgaWQgPSA0OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///48\n");

/***/ }),
/* 49 */
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vYW1kLW9wdGlvbnMuanM/NWY3MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwiZmlsZSI6IjQ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBfX3dlYnBhY2tfYW1kX29wdGlvbnNfXyAqL1xyXG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19hbWRfb3B0aW9uc19fO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9hbWQtb3B0aW9ucy5qc1xuLy8gbW9kdWxlIGlkID0gNDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///49\n");

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, global) {\n\nvar inherits = __webpack_require__(0)\n  , iframeUtils = __webpack_require__(12)\n  , urlUtils = __webpack_require__(5)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  , random = __webpack_require__(8)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:receiver:htmlfile');\n}\n\nfunction HtmlfileReceiver(url) {\n  debug(url);\n  EventEmitter.call(this);\n  var self = this;\n  iframeUtils.polluteGlobalNamespace();\n\n  this.id = 'a' + random.string(6);\n  url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));\n\n  debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);\n  var constructFunc = HtmlfileReceiver.htmlfileEnabled ?\n      iframeUtils.createHtmlfile : iframeUtils.createIframe;\n\n  global[iframeUtils.WPrefix][this.id] = {\n    start: function() {\n      debug('start');\n      self.iframeObj.loaded();\n    }\n  , message: function(data) {\n      debug('message', data);\n      self.emit('message', data);\n    }\n  , stop: function() {\n      debug('stop');\n      self._cleanup();\n      self._close('network');\n    }\n  };\n  this.iframeObj = constructFunc(url, function() {\n    debug('callback');\n    self._cleanup();\n    self._close('permanent');\n  });\n}\n\ninherits(HtmlfileReceiver, EventEmitter);\n\nHtmlfileReceiver.prototype.abort = function() {\n  debug('abort');\n  this._cleanup();\n  this._close('user');\n};\n\nHtmlfileReceiver.prototype._cleanup = function() {\n  debug('_cleanup');\n  if (this.iframeObj) {\n    this.iframeObj.cleanup();\n    this.iframeObj = null;\n  }\n  delete global[iframeUtils.WPrefix][this.id];\n};\n\nHtmlfileReceiver.prototype._close = function(reason) {\n  debug('_close', reason);\n  this.emit('close', null, reason);\n  this.removeAllListeners();\n};\n\nHtmlfileReceiver.htmlfileEnabled = false;\n\n// obfuscate to avoid firewalls\nvar axo = ['Active'].concat('Object').join('X');\nif (axo in global) {\n  try {\n    HtmlfileReceiver.htmlfileEnabled = !!new global[axo]('htmlfile');\n  } catch (x) {}\n}\n\nHtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;\n\nmodule.exports = HtmlfileReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3JlY2VpdmVyL2h0bWxmaWxlLmpzPzM3MDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6InVEQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUEiLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBpZnJhbWVVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2lmcmFtZScpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuLi8uLi91dGlscy91cmwnKVxuICAsIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIHJhbmRvbSA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3JhbmRvbScpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpyZWNlaXZlcjpodG1sZmlsZScpO1xufVxuXG5mdW5jdGlvbiBIdG1sZmlsZVJlY2VpdmVyKHVybCkge1xuICBkZWJ1Zyh1cmwpO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBpZnJhbWVVdGlscy5wb2xsdXRlR2xvYmFsTmFtZXNwYWNlKCk7XG5cbiAgdGhpcy5pZCA9ICdhJyArIHJhbmRvbS5zdHJpbmcoNik7XG4gIHVybCA9IHVybFV0aWxzLmFkZFF1ZXJ5KHVybCwgJ2M9JyArIGRlY29kZVVSSUNvbXBvbmVudChpZnJhbWVVdGlscy5XUHJlZml4ICsgJy4nICsgdGhpcy5pZCkpO1xuXG4gIGRlYnVnKCd1c2luZyBodG1sZmlsZScsIEh0bWxmaWxlUmVjZWl2ZXIuaHRtbGZpbGVFbmFibGVkKTtcbiAgdmFyIGNvbnN0cnVjdEZ1bmMgPSBIdG1sZmlsZVJlY2VpdmVyLmh0bWxmaWxlRW5hYmxlZCA/XG4gICAgICBpZnJhbWVVdGlscy5jcmVhdGVIdG1sZmlsZSA6IGlmcmFtZVV0aWxzLmNyZWF0ZUlmcmFtZTtcblxuICBnbG9iYWxbaWZyYW1lVXRpbHMuV1ByZWZpeF1bdGhpcy5pZF0gPSB7XG4gICAgc3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZGVidWcoJ3N0YXJ0Jyk7XG4gICAgICBzZWxmLmlmcmFtZU9iai5sb2FkZWQoKTtcbiAgICB9XG4gICwgbWVzc2FnZTogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgZGVidWcoJ21lc3NhZ2UnLCBkYXRhKTtcbiAgICAgIHNlbGYuZW1pdCgnbWVzc2FnZScsIGRhdGEpO1xuICAgIH1cbiAgLCBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIGRlYnVnKCdzdG9wJyk7XG4gICAgICBzZWxmLl9jbGVhbnVwKCk7XG4gICAgICBzZWxmLl9jbG9zZSgnbmV0d29yaycpO1xuICAgIH1cbiAgfTtcbiAgdGhpcy5pZnJhbWVPYmogPSBjb25zdHJ1Y3RGdW5jKHVybCwgZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ2NhbGxiYWNrJyk7XG4gICAgc2VsZi5fY2xlYW51cCgpO1xuICAgIHNlbGYuX2Nsb3NlKCdwZXJtYW5lbnQnKTtcbiAgfSk7XG59XG5cbmluaGVyaXRzKEh0bWxmaWxlUmVjZWl2ZXIsIEV2ZW50RW1pdHRlcik7XG5cbkh0bWxmaWxlUmVjZWl2ZXIucHJvdG90eXBlLmFib3J0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdhYm9ydCcpO1xuICB0aGlzLl9jbGVhbnVwKCk7XG4gIHRoaXMuX2Nsb3NlKCd1c2VyJyk7XG59O1xuXG5IdG1sZmlsZVJlY2VpdmVyLnByb3RvdHlwZS5fY2xlYW51cCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnX2NsZWFudXAnKTtcbiAgaWYgKHRoaXMuaWZyYW1lT2JqKSB7XG4gICAgdGhpcy5pZnJhbWVPYmouY2xlYW51cCgpO1xuICAgIHRoaXMuaWZyYW1lT2JqID0gbnVsbDtcbiAgfVxuICBkZWxldGUgZ2xvYmFsW2lmcmFtZVV0aWxzLldQcmVmaXhdW3RoaXMuaWRdO1xufTtcblxuSHRtbGZpbGVSZWNlaXZlci5wcm90b3R5cGUuX2Nsb3NlID0gZnVuY3Rpb24ocmVhc29uKSB7XG4gIGRlYnVnKCdfY2xvc2UnLCByZWFzb24pO1xuICB0aGlzLmVtaXQoJ2Nsb3NlJywgbnVsbCwgcmVhc29uKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbkh0bWxmaWxlUmVjZWl2ZXIuaHRtbGZpbGVFbmFibGVkID0gZmFsc2U7XG5cbi8vIG9iZnVzY2F0ZSB0byBhdm9pZCBmaXJld2FsbHNcbnZhciBheG8gPSBbJ0FjdGl2ZSddLmNvbmNhdCgnT2JqZWN0Jykuam9pbignWCcpO1xuaWYgKGF4byBpbiBnbG9iYWwpIHtcbiAgdHJ5IHtcbiAgICBIdG1sZmlsZVJlY2VpdmVyLmh0bWxmaWxlRW5hYmxlZCA9ICEhbmV3IGdsb2JhbFtheG9dKCdodG1sZmlsZScpO1xuICB9IGNhdGNoICh4KSB7fVxufVxuXG5IdG1sZmlsZVJlY2VpdmVyLmVuYWJsZWQgPSBIdG1sZmlsZVJlY2VpdmVyLmh0bWxmaWxlRW5hYmxlZCB8fCBpZnJhbWVVdGlscy5pZnJhbWVFbmFibGVkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEh0bWxmaWxlUmVjZWl2ZXI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvcmVjZWl2ZXIvaHRtbGZpbGUuanNcbi8vIG1vZHVsZSBpZCA9IDUwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///50\n");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , AjaxBasedTransport = __webpack_require__(9)\n  , XdrStreamingTransport = __webpack_require__(23)\n  , XhrReceiver = __webpack_require__(13)\n  , XDRObject = __webpack_require__(15)\n  ;\n\nfunction XdrPollingTransport(transUrl) {\n  if (!XDRObject.enabled) {\n    throw new Error('Transport created when disabled');\n  }\n  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);\n}\n\ninherits(XdrPollingTransport, AjaxBasedTransport);\n\nXdrPollingTransport.enabled = XdrStreamingTransport.enabled;\nXdrPollingTransport.transportName = 'xdr-polling';\nXdrPollingTransport.roundTrips = 2; // preflight, ajax\n\nmodule.exports = XdrPollingTransport;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3hkci1wb2xsaW5nLmpzPzA3MTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsbUNBQW1DOztBQUVuQyIsImZpbGUiOiI1MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIEFqYXhCYXNlZFRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vbGliL2FqYXgtYmFzZWQnKVxuICAsIFhkclN0cmVhbWluZ1RyYW5zcG9ydCA9IHJlcXVpcmUoJy4veGRyLXN0cmVhbWluZycpXG4gICwgWGhyUmVjZWl2ZXIgPSByZXF1aXJlKCcuL3JlY2VpdmVyL3hocicpXG4gICwgWERST2JqZWN0ID0gcmVxdWlyZSgnLi9zZW5kZXIveGRyJylcbiAgO1xuXG5mdW5jdGlvbiBYZHJQb2xsaW5nVHJhbnNwb3J0KHRyYW5zVXJsKSB7XG4gIGlmICghWERST2JqZWN0LmVuYWJsZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBjcmVhdGVkIHdoZW4gZGlzYWJsZWQnKTtcbiAgfVxuICBBamF4QmFzZWRUcmFuc3BvcnQuY2FsbCh0aGlzLCB0cmFuc1VybCwgJy94aHInLCBYaHJSZWNlaXZlciwgWERST2JqZWN0KTtcbn1cblxuaW5oZXJpdHMoWGRyUG9sbGluZ1RyYW5zcG9ydCwgQWpheEJhc2VkVHJhbnNwb3J0KTtcblxuWGRyUG9sbGluZ1RyYW5zcG9ydC5lbmFibGVkID0gWGRyU3RyZWFtaW5nVHJhbnNwb3J0LmVuYWJsZWQ7XG5YZHJQb2xsaW5nVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAneGRyLXBvbGxpbmcnO1xuWGRyUG9sbGluZ1RyYW5zcG9ydC5yb3VuZFRyaXBzID0gMjsgLy8gcHJlZmxpZ2h0LCBhamF4XG5cbm1vZHVsZS5leHBvcnRzID0gWGRyUG9sbGluZ1RyYW5zcG9ydDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC94ZHItcG9sbGluZy5qc1xuLy8gbW9kdWxlIGlkID0gNTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///51\n");

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n// The simplest and most robust transport, using the well-know cross\n// domain hack - JSONP. This transport is quite inefficient - one\n// message could use up to one http request. But at least it works almost\n// everywhere.\n// Known limitations:\n//   o you will get a spinning cursor\n//   o for Konqueror a dumb timer is needed to detect errors\n\nvar inherits = __webpack_require__(0)\n  , SenderReceiver = __webpack_require__(21)\n  , JsonpReceiver = __webpack_require__(53)\n  , jsonpSender = __webpack_require__(54)\n  ;\n\nfunction JsonPTransport(transUrl) {\n  if (!JsonPTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n  SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);\n}\n\ninherits(JsonPTransport, SenderReceiver);\n\nJsonPTransport.enabled = function() {\n  return !!global.document;\n};\n\nJsonPTransport.transportName = 'jsonp-polling';\nJsonPTransport.roundTrips = 1;\nJsonPTransport.needBody = true;\n\nmodule.exports = JsonPTransport;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L2pzb25wLXBvbGxpbmcuanM/NjFiMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOENBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiI1Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gVGhlIHNpbXBsZXN0IGFuZCBtb3N0IHJvYnVzdCB0cmFuc3BvcnQsIHVzaW5nIHRoZSB3ZWxsLWtub3cgY3Jvc3Ncbi8vIGRvbWFpbiBoYWNrIC0gSlNPTlAuIFRoaXMgdHJhbnNwb3J0IGlzIHF1aXRlIGluZWZmaWNpZW50IC0gb25lXG4vLyBtZXNzYWdlIGNvdWxkIHVzZSB1cCB0byBvbmUgaHR0cCByZXF1ZXN0LiBCdXQgYXQgbGVhc3QgaXQgd29ya3MgYWxtb3N0XG4vLyBldmVyeXdoZXJlLlxuLy8gS25vd24gbGltaXRhdGlvbnM6XG4vLyAgIG8geW91IHdpbGwgZ2V0IGEgc3Bpbm5pbmcgY3Vyc29yXG4vLyAgIG8gZm9yIEtvbnF1ZXJvciBhIGR1bWIgdGltZXIgaXMgbmVlZGVkIHRvIGRldGVjdCBlcnJvcnNcblxudmFyIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICAsIFNlbmRlclJlY2VpdmVyID0gcmVxdWlyZSgnLi9saWIvc2VuZGVyLXJlY2VpdmVyJylcbiAgLCBKc29ucFJlY2VpdmVyID0gcmVxdWlyZSgnLi9yZWNlaXZlci9qc29ucCcpXG4gICwganNvbnBTZW5kZXIgPSByZXF1aXJlKCcuL3NlbmRlci9qc29ucCcpXG4gIDtcblxuZnVuY3Rpb24gSnNvblBUcmFuc3BvcnQodHJhbnNVcmwpIHtcbiAgaWYgKCFKc29uUFRyYW5zcG9ydC5lbmFibGVkKCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zcG9ydCBjcmVhdGVkIHdoZW4gZGlzYWJsZWQnKTtcbiAgfVxuICBTZW5kZXJSZWNlaXZlci5jYWxsKHRoaXMsIHRyYW5zVXJsLCAnL2pzb25wJywganNvbnBTZW5kZXIsIEpzb25wUmVjZWl2ZXIpO1xufVxuXG5pbmhlcml0cyhKc29uUFRyYW5zcG9ydCwgU2VuZGVyUmVjZWl2ZXIpO1xuXG5Kc29uUFRyYW5zcG9ydC5lbmFibGVkID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAhIWdsb2JhbC5kb2N1bWVudDtcbn07XG5cbkpzb25QVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWUgPSAnanNvbnAtcG9sbGluZyc7XG5Kc29uUFRyYW5zcG9ydC5yb3VuZFRyaXBzID0gMTtcbkpzb25QVHJhbnNwb3J0Lm5lZWRCb2R5ID0gdHJ1ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBKc29uUFRyYW5zcG9ydDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9qc29ucC1wb2xsaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSA1MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///52\n");

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, global) {\n\nvar utils = __webpack_require__(12)\n  , random = __webpack_require__(8)\n  , browser = __webpack_require__(11)\n  , urlUtils = __webpack_require__(5)\n  , inherits = __webpack_require__(0)\n  , EventEmitter = __webpack_require__(4).EventEmitter\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:receiver:jsonp');\n}\n\nfunction JsonpReceiver(url) {\n  debug(url);\n  var self = this;\n  EventEmitter.call(this);\n\n  utils.polluteGlobalNamespace();\n\n  this.id = 'a' + random.string(6);\n  var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));\n\n  global[utils.WPrefix][this.id] = this._callback.bind(this);\n  this._createScript(urlWithId);\n\n  // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.\n  this.timeoutId = setTimeout(function() {\n    debug('timeout');\n    self._abort(new Error('JSONP script loaded abnormally (timeout)'));\n  }, JsonpReceiver.timeout);\n}\n\ninherits(JsonpReceiver, EventEmitter);\n\nJsonpReceiver.prototype.abort = function() {\n  debug('abort');\n  if (global[utils.WPrefix][this.id]) {\n    var err = new Error('JSONP user aborted read');\n    err.code = 1000;\n    this._abort(err);\n  }\n};\n\nJsonpReceiver.timeout = 35000;\nJsonpReceiver.scriptErrorTimeout = 1000;\n\nJsonpReceiver.prototype._callback = function(data) {\n  debug('_callback', data);\n  this._cleanup();\n\n  if (this.aborting) {\n    return;\n  }\n\n  if (data) {\n    debug('message', data);\n    this.emit('message', data);\n  }\n  this.emit('close', null, 'network');\n  this.removeAllListeners();\n};\n\nJsonpReceiver.prototype._abort = function(err) {\n  debug('_abort', err);\n  this._cleanup();\n  this.aborting = true;\n  this.emit('close', err.code, err.message);\n  this.removeAllListeners();\n};\n\nJsonpReceiver.prototype._cleanup = function() {\n  debug('_cleanup');\n  clearTimeout(this.timeoutId);\n  if (this.script2) {\n    this.script2.parentNode.removeChild(this.script2);\n    this.script2 = null;\n  }\n  if (this.script) {\n    var script = this.script;\n    // Unfortunately, you can't really abort script loading of\n    // the script.\n    script.parentNode.removeChild(script);\n    script.onreadystatechange = script.onerror =\n        script.onload = script.onclick = null;\n    this.script = null;\n  }\n  delete global[utils.WPrefix][this.id];\n};\n\nJsonpReceiver.prototype._scriptError = function() {\n  debug('_scriptError');\n  var self = this;\n  if (this.errorTimer) {\n    return;\n  }\n\n  this.errorTimer = setTimeout(function() {\n    if (!self.loadedOkay) {\n      self._abort(new Error('JSONP script loaded abnormally (onerror)'));\n    }\n  }, JsonpReceiver.scriptErrorTimeout);\n};\n\nJsonpReceiver.prototype._createScript = function(url) {\n  debug('_createScript', url);\n  var self = this;\n  var script = this.script = global.document.createElement('script');\n  var script2;  // Opera synchronous load trick.\n\n  script.id = 'a' + random.string(8);\n  script.src = url;\n  script.type = 'text/javascript';\n  script.charset = 'UTF-8';\n  script.onerror = this._scriptError.bind(this);\n  script.onload = function() {\n    debug('onload');\n    self._abort(new Error('JSONP script loaded abnormally (onload)'));\n  };\n\n  // IE9 fires 'error' event after onreadystatechange or before, in random order.\n  // Use loadedOkay to determine if actually errored\n  script.onreadystatechange = function() {\n    debug('onreadystatechange', script.readyState);\n    if (/loaded|closed/.test(script.readyState)) {\n      if (script && script.htmlFor && script.onclick) {\n        self.loadedOkay = true;\n        try {\n          // In IE, actually execute the script.\n          script.onclick();\n        } catch (x) {}\n      }\n      if (script) {\n        self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));\n      }\n    }\n  };\n  // IE: event/htmlFor/onclick trick.\n  // One can't rely on proper order for onreadystatechange. In order to\n  // make sure, set a 'htmlFor' and 'event' properties, so that\n  // script code will be installed as 'onclick' handler for the\n  // script object. Later, onreadystatechange, manually execute this\n  // code. FF and Chrome doesn't work with 'event' and 'htmlFor'\n  // set. For reference see:\n  //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\n  // Also, read on that about script ordering:\n  //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order\n  if (typeof script.async === 'undefined' && global.document.attachEvent) {\n    // According to mozilla docs, in recent browsers script.async defaults\n    // to 'true', so we may use it to detect a good browser:\n    // https://developer.mozilla.org/en/HTML/Element/script\n    if (!browser.isOpera()) {\n      // Naively assume we're in IE\n      try {\n        script.htmlFor = script.id;\n        script.event = 'onclick';\n      } catch (x) {}\n      script.async = true;\n    } else {\n      // Opera, second sync script hack\n      script2 = this.script2 = global.document.createElement('script');\n      script2.text = \"try{var a = document.getElementById('\" + script.id + \"'); if(a)a.onerror();}catch(x){};\";\n      script.async = script2.async = false;\n    }\n  }\n  if (typeof script.async !== 'undefined') {\n    script.async = true;\n  }\n\n  var head = global.document.getElementsByTagName('head')[0];\n  head.insertBefore(script, head.firstChild);\n  if (script2) {\n    head.insertBefore(script2, head.firstChild);\n  }\n};\n\nmodule.exports = JsonpReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3JlY2VpdmVyL2pzb25wLmpzPzI3ZjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6InVEQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYzs7QUFFZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDBCQUEwQixxREFBcUQsbUJBQW1CLFdBQVc7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiI1My5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvaWZyYW1lJylcbiAgLCByYW5kb20gPSByZXF1aXJlKCcuLi8uLi91dGlscy9yYW5kb20nKVxuICAsIGJyb3dzZXIgPSByZXF1aXJlKCcuLi8uLi91dGlscy9icm93c2VyJylcbiAgLCB1cmxVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3VybCcpXG4gICwgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpyZWNlaXZlcjpqc29ucCcpO1xufVxuXG5mdW5jdGlvbiBKc29ucFJlY2VpdmVyKHVybCkge1xuICBkZWJ1Zyh1cmwpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHV0aWxzLnBvbGx1dGVHbG9iYWxOYW1lc3BhY2UoKTtcblxuICB0aGlzLmlkID0gJ2EnICsgcmFuZG9tLnN0cmluZyg2KTtcbiAgdmFyIHVybFdpdGhJZCA9IHVybFV0aWxzLmFkZFF1ZXJ5KHVybCwgJ2M9JyArIGVuY29kZVVSSUNvbXBvbmVudCh1dGlscy5XUHJlZml4ICsgJy4nICsgdGhpcy5pZCkpO1xuXG4gIGdsb2JhbFt1dGlscy5XUHJlZml4XVt0aGlzLmlkXSA9IHRoaXMuX2NhbGxiYWNrLmJpbmQodGhpcyk7XG4gIHRoaXMuX2NyZWF0ZVNjcmlwdCh1cmxXaXRoSWQpO1xuXG4gIC8vIEZhbGxiYWNrIG1vc3RseSBmb3IgS29ucXVlcm9yIC0gc3R1cGlkIHRpbWVyLCAzNSBzZWNvbmRzIHNoYWxsIGJlIHBsZW50eS5cbiAgdGhpcy50aW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCd0aW1lb3V0Jyk7XG4gICAgc2VsZi5fYWJvcnQobmV3IEVycm9yKCdKU09OUCBzY3JpcHQgbG9hZGVkIGFibm9ybWFsbHkgKHRpbWVvdXQpJykpO1xuICB9LCBKc29ucFJlY2VpdmVyLnRpbWVvdXQpO1xufVxuXG5pbmhlcml0cyhKc29ucFJlY2VpdmVyLCBFdmVudEVtaXR0ZXIpO1xuXG5Kc29ucFJlY2VpdmVyLnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uKCkge1xuICBkZWJ1ZygnYWJvcnQnKTtcbiAgaWYgKGdsb2JhbFt1dGlscy5XUHJlZml4XVt0aGlzLmlkXSkge1xuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ0pTT05QIHVzZXIgYWJvcnRlZCByZWFkJyk7XG4gICAgZXJyLmNvZGUgPSAxMDAwO1xuICAgIHRoaXMuX2Fib3J0KGVycik7XG4gIH1cbn07XG5cbkpzb25wUmVjZWl2ZXIudGltZW91dCA9IDM1MDAwO1xuSnNvbnBSZWNlaXZlci5zY3JpcHRFcnJvclRpbWVvdXQgPSAxMDAwO1xuXG5Kc29ucFJlY2VpdmVyLnByb3RvdHlwZS5fY2FsbGJhY2sgPSBmdW5jdGlvbihkYXRhKSB7XG4gIGRlYnVnKCdfY2FsbGJhY2snLCBkYXRhKTtcbiAgdGhpcy5fY2xlYW51cCgpO1xuXG4gIGlmICh0aGlzLmFib3J0aW5nKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGRhdGEpIHtcbiAgICBkZWJ1ZygnbWVzc2FnZScsIGRhdGEpO1xuICAgIHRoaXMuZW1pdCgnbWVzc2FnZScsIGRhdGEpO1xuICB9XG4gIHRoaXMuZW1pdCgnY2xvc2UnLCBudWxsLCAnbmV0d29yaycpO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xufTtcblxuSnNvbnBSZWNlaXZlci5wcm90b3R5cGUuX2Fib3J0ID0gZnVuY3Rpb24oZXJyKSB7XG4gIGRlYnVnKCdfYWJvcnQnLCBlcnIpO1xuICB0aGlzLl9jbGVhbnVwKCk7XG4gIHRoaXMuYWJvcnRpbmcgPSB0cnVlO1xuICB0aGlzLmVtaXQoJ2Nsb3NlJywgZXJyLmNvZGUsIGVyci5tZXNzYWdlKTtcbiAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbkpzb25wUmVjZWl2ZXIucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfY2xlYW51cCcpO1xuICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0SWQpO1xuICBpZiAodGhpcy5zY3JpcHQyKSB7XG4gICAgdGhpcy5zY3JpcHQyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5zY3JpcHQyKTtcbiAgICB0aGlzLnNjcmlwdDIgPSBudWxsO1xuICB9XG4gIGlmICh0aGlzLnNjcmlwdCkge1xuICAgIHZhciBzY3JpcHQgPSB0aGlzLnNjcmlwdDtcbiAgICAvLyBVbmZvcnR1bmF0ZWx5LCB5b3UgY2FuJ3QgcmVhbGx5IGFib3J0IHNjcmlwdCBsb2FkaW5nIG9mXG4gICAgLy8gdGhlIHNjcmlwdC5cbiAgICBzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuICAgIHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBzY3JpcHQub25lcnJvciA9XG4gICAgICAgIHNjcmlwdC5vbmxvYWQgPSBzY3JpcHQub25jbGljayA9IG51bGw7XG4gICAgdGhpcy5zY3JpcHQgPSBudWxsO1xuICB9XG4gIGRlbGV0ZSBnbG9iYWxbdXRpbHMuV1ByZWZpeF1bdGhpcy5pZF07XG59O1xuXG5Kc29ucFJlY2VpdmVyLnByb3RvdHlwZS5fc2NyaXB0RXJyb3IgPSBmdW5jdGlvbigpIHtcbiAgZGVidWcoJ19zY3JpcHRFcnJvcicpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIGlmICh0aGlzLmVycm9yVGltZXIpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB0aGlzLmVycm9yVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIGlmICghc2VsZi5sb2FkZWRPa2F5KSB7XG4gICAgICBzZWxmLl9hYm9ydChuZXcgRXJyb3IoJ0pTT05QIHNjcmlwdCBsb2FkZWQgYWJub3JtYWxseSAob25lcnJvciknKSk7XG4gICAgfVxuICB9LCBKc29ucFJlY2VpdmVyLnNjcmlwdEVycm9yVGltZW91dCk7XG59O1xuXG5Kc29ucFJlY2VpdmVyLnByb3RvdHlwZS5fY3JlYXRlU2NyaXB0ID0gZnVuY3Rpb24odXJsKSB7XG4gIGRlYnVnKCdfY3JlYXRlU2NyaXB0JywgdXJsKTtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgc2NyaXB0ID0gdGhpcy5zY3JpcHQgPSBnbG9iYWwuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gIHZhciBzY3JpcHQyOyAgLy8gT3BlcmEgc3luY2hyb25vdXMgbG9hZCB0cmljay5cblxuICBzY3JpcHQuaWQgPSAnYScgKyByYW5kb20uc3RyaW5nKDgpO1xuICBzY3JpcHQuc3JjID0gdXJsO1xuICBzY3JpcHQudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnO1xuICBzY3JpcHQuY2hhcnNldCA9ICdVVEYtOCc7XG4gIHNjcmlwdC5vbmVycm9yID0gdGhpcy5fc2NyaXB0RXJyb3IuYmluZCh0aGlzKTtcbiAgc2NyaXB0Lm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgIGRlYnVnKCdvbmxvYWQnKTtcbiAgICBzZWxmLl9hYm9ydChuZXcgRXJyb3IoJ0pTT05QIHNjcmlwdCBsb2FkZWQgYWJub3JtYWxseSAob25sb2FkKScpKTtcbiAgfTtcblxuICAvLyBJRTkgZmlyZXMgJ2Vycm9yJyBldmVudCBhZnRlciBvbnJlYWR5c3RhdGVjaGFuZ2Ugb3IgYmVmb3JlLCBpbiByYW5kb20gb3JkZXIuXG4gIC8vIFVzZSBsb2FkZWRPa2F5IHRvIGRldGVybWluZSBpZiBhY3R1YWxseSBlcnJvcmVkXG4gIHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnb25yZWFkeXN0YXRlY2hhbmdlJywgc2NyaXB0LnJlYWR5U3RhdGUpO1xuICAgIGlmICgvbG9hZGVkfGNsb3NlZC8udGVzdChzY3JpcHQucmVhZHlTdGF0ZSkpIHtcbiAgICAgIGlmIChzY3JpcHQgJiYgc2NyaXB0Lmh0bWxGb3IgJiYgc2NyaXB0Lm9uY2xpY2spIHtcbiAgICAgICAgc2VsZi5sb2FkZWRPa2F5ID0gdHJ1ZTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBJbiBJRSwgYWN0dWFsbHkgZXhlY3V0ZSB0aGUgc2NyaXB0LlxuICAgICAgICAgIHNjcmlwdC5vbmNsaWNrKCk7XG4gICAgICAgIH0gY2F0Y2ggKHgpIHt9XG4gICAgICB9XG4gICAgICBpZiAoc2NyaXB0KSB7XG4gICAgICAgIHNlbGYuX2Fib3J0KG5ldyBFcnJvcignSlNPTlAgc2NyaXB0IGxvYWRlZCBhYm5vcm1hbGx5IChvbnJlYWR5c3RhdGVjaGFuZ2UpJykpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgLy8gSUU6IGV2ZW50L2h0bWxGb3Ivb25jbGljayB0cmljay5cbiAgLy8gT25lIGNhbid0IHJlbHkgb24gcHJvcGVyIG9yZGVyIGZvciBvbnJlYWR5c3RhdGVjaGFuZ2UuIEluIG9yZGVyIHRvXG4gIC8vIG1ha2Ugc3VyZSwgc2V0IGEgJ2h0bWxGb3InIGFuZCAnZXZlbnQnIHByb3BlcnRpZXMsIHNvIHRoYXRcbiAgLy8gc2NyaXB0IGNvZGUgd2lsbCBiZSBpbnN0YWxsZWQgYXMgJ29uY2xpY2snIGhhbmRsZXIgZm9yIHRoZVxuICAvLyBzY3JpcHQgb2JqZWN0LiBMYXRlciwgb25yZWFkeXN0YXRlY2hhbmdlLCBtYW51YWxseSBleGVjdXRlIHRoaXNcbiAgLy8gY29kZS4gRkYgYW5kIENocm9tZSBkb2Vzbid0IHdvcmsgd2l0aCAnZXZlbnQnIGFuZCAnaHRtbEZvcidcbiAgLy8gc2V0LiBGb3IgcmVmZXJlbmNlIHNlZTpcbiAgLy8gICBodHRwOi8vamF1Ym91cmcubmV0LzIwMTAvMDcvbG9hZGluZy1zY3JpcHQtYXMtb25jbGljay1oYW5kbGVyLW9mLmh0bWxcbiAgLy8gQWxzbywgcmVhZCBvbiB0aGF0IGFib3V0IHNjcmlwdCBvcmRlcmluZzpcbiAgLy8gICBodHRwOi8vd2lraS53aGF0d2cub3JnL3dpa2kvRHluYW1pY19TY3JpcHRfRXhlY3V0aW9uX09yZGVyXG4gIGlmICh0eXBlb2Ygc2NyaXB0LmFzeW5jID09PSAndW5kZWZpbmVkJyAmJiBnbG9iYWwuZG9jdW1lbnQuYXR0YWNoRXZlbnQpIHtcbiAgICAvLyBBY2NvcmRpbmcgdG8gbW96aWxsYSBkb2NzLCBpbiByZWNlbnQgYnJvd3NlcnMgc2NyaXB0LmFzeW5jIGRlZmF1bHRzXG4gICAgLy8gdG8gJ3RydWUnLCBzbyB3ZSBtYXkgdXNlIGl0IHRvIGRldGVjdCBhIGdvb2QgYnJvd3NlcjpcbiAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi9IVE1ML0VsZW1lbnQvc2NyaXB0XG4gICAgaWYgKCFicm93c2VyLmlzT3BlcmEoKSkge1xuICAgICAgLy8gTmFpdmVseSBhc3N1bWUgd2UncmUgaW4gSUVcbiAgICAgIHRyeSB7XG4gICAgICAgIHNjcmlwdC5odG1sRm9yID0gc2NyaXB0LmlkO1xuICAgICAgICBzY3JpcHQuZXZlbnQgPSAnb25jbGljayc7XG4gICAgICB9IGNhdGNoICh4KSB7fVxuICAgICAgc2NyaXB0LmFzeW5jID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gT3BlcmEsIHNlY29uZCBzeW5jIHNjcmlwdCBoYWNrXG4gICAgICBzY3JpcHQyID0gdGhpcy5zY3JpcHQyID0gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgICAgc2NyaXB0Mi50ZXh0ID0gXCJ0cnl7dmFyIGEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnXCIgKyBzY3JpcHQuaWQgKyBcIicpOyBpZihhKWEub25lcnJvcigpO31jYXRjaCh4KXt9O1wiO1xuICAgICAgc2NyaXB0LmFzeW5jID0gc2NyaXB0Mi5hc3luYyA9IGZhbHNlO1xuICAgIH1cbiAgfVxuICBpZiAodHlwZW9mIHNjcmlwdC5hc3luYyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBzY3JpcHQuYXN5bmMgPSB0cnVlO1xuICB9XG5cbiAgdmFyIGhlYWQgPSBnbG9iYWwuZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTtcbiAgaGVhZC5pbnNlcnRCZWZvcmUoc2NyaXB0LCBoZWFkLmZpcnN0Q2hpbGQpO1xuICBpZiAoc2NyaXB0Mikge1xuICAgIGhlYWQuaW5zZXJ0QmVmb3JlKHNjcmlwdDIsIGhlYWQuZmlyc3RDaGlsZCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSnNvbnBSZWNlaXZlcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9yZWNlaXZlci9qc29ucC5qc1xuLy8gbW9kdWxlIGlkID0gNTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///53\n");

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, global) {\n\nvar random = __webpack_require__(8)\n  , urlUtils = __webpack_require__(5)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:sender:jsonp');\n}\n\nvar form, area;\n\nfunction createIframe(id) {\n  debug('createIframe', id);\n  try {\n    // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n    return global.document.createElement('<iframe name=\"' + id + '\">');\n  } catch (x) {\n    var iframe = global.document.createElement('iframe');\n    iframe.name = id;\n    return iframe;\n  }\n}\n\nfunction createForm() {\n  debug('createForm');\n  form = global.document.createElement('form');\n  form.style.display = 'none';\n  form.style.position = 'absolute';\n  form.method = 'POST';\n  form.enctype = 'application/x-www-form-urlencoded';\n  form.acceptCharset = 'UTF-8';\n\n  area = global.document.createElement('textarea');\n  area.name = 'd';\n  form.appendChild(area);\n\n  global.document.body.appendChild(form);\n}\n\nmodule.exports = function(url, payload, callback) {\n  debug(url, payload);\n  if (!form) {\n    createForm();\n  }\n  var id = 'a' + random.string(8);\n  form.target = id;\n  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);\n\n  var iframe = createIframe(id);\n  iframe.id = id;\n  iframe.style.display = 'none';\n  form.appendChild(iframe);\n\n  try {\n    area.value = payload;\n  } catch (e) {\n    // seriously broken browsers get here\n  }\n  form.submit();\n\n  var completed = function(err) {\n    debug('completed', id, err);\n    if (!iframe.onerror) {\n      return;\n    }\n    iframe.onreadystatechange = iframe.onerror = iframe.onload = null;\n    // Opera mini doesn't like if we GC iframe\n    // immediately, thus this timeout.\n    setTimeout(function() {\n      debug('cleaning up', id);\n      iframe.parentNode.removeChild(iframe);\n      iframe = null;\n    }, 500);\n    area.value = '';\n    // It is not possible to detect if the iframe succeeded or\n    // failed to submit our form.\n    callback(err);\n  };\n  iframe.onerror = function() {\n    debug('onerror', id);\n    completed();\n  };\n  iframe.onload = function() {\n    debug('onload', id);\n    completed();\n  };\n  iframe.onreadystatechange = function(e) {\n    debug('onreadystatechange', id, iframe.readyState, e);\n    if (iframe.readyState === 'complete') {\n      completed();\n    }\n  };\n  return function() {\n    debug('aborted', id);\n    completed(new Error('Aborted'));\n  };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci9qc29ucC5qcz9mZTY5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJ1REFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjU0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmFuZG9tID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvcmFuZG9tJylcbiAgLCB1cmxVdGlscyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3VybCcpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDpzZW5kZXI6anNvbnAnKTtcbn1cblxudmFyIGZvcm0sIGFyZWE7XG5cbmZ1bmN0aW9uIGNyZWF0ZUlmcmFtZShpZCkge1xuICBkZWJ1ZygnY3JlYXRlSWZyYW1lJywgaWQpO1xuICB0cnkge1xuICAgIC8vIGllNiBkeW5hbWljIGlmcmFtZXMgd2l0aCB0YXJnZXQ9XCJcIiBzdXBwb3J0ICh0aGFua3MgQ2hyaXMgTGFtYmFjaGVyKVxuICAgIHJldHVybiBnbG9iYWwuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnPGlmcmFtZSBuYW1lPVwiJyArIGlkICsgJ1wiPicpO1xuICB9IGNhdGNoICh4KSB7XG4gICAgdmFyIGlmcmFtZSA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgICBpZnJhbWUubmFtZSA9IGlkO1xuICAgIHJldHVybiBpZnJhbWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRm9ybSgpIHtcbiAgZGVidWcoJ2NyZWF0ZUZvcm0nKTtcbiAgZm9ybSA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gIGZvcm0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgZm9ybS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gIGZvcm0ubWV0aG9kID0gJ1BPU1QnO1xuICBmb3JtLmVuY3R5cGUgPSAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJztcbiAgZm9ybS5hY2NlcHRDaGFyc2V0ID0gJ1VURi04JztcblxuICBhcmVhID0gZ2xvYmFsLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gIGFyZWEubmFtZSA9ICdkJztcbiAgZm9ybS5hcHBlbmRDaGlsZChhcmVhKTtcblxuICBnbG9iYWwuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChmb3JtKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1cmwsIHBheWxvYWQsIGNhbGxiYWNrKSB7XG4gIGRlYnVnKHVybCwgcGF5bG9hZCk7XG4gIGlmICghZm9ybSkge1xuICAgIGNyZWF0ZUZvcm0oKTtcbiAgfVxuICB2YXIgaWQgPSAnYScgKyByYW5kb20uc3RyaW5nKDgpO1xuICBmb3JtLnRhcmdldCA9IGlkO1xuICBmb3JtLmFjdGlvbiA9IHVybFV0aWxzLmFkZFF1ZXJ5KHVybFV0aWxzLmFkZFBhdGgodXJsLCAnL2pzb25wX3NlbmQnKSwgJ2k9JyArIGlkKTtcblxuICB2YXIgaWZyYW1lID0gY3JlYXRlSWZyYW1lKGlkKTtcbiAgaWZyYW1lLmlkID0gaWQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICBmb3JtLmFwcGVuZENoaWxkKGlmcmFtZSk7XG5cbiAgdHJ5IHtcbiAgICBhcmVhLnZhbHVlID0gcGF5bG9hZDtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIHNlcmlvdXNseSBicm9rZW4gYnJvd3NlcnMgZ2V0IGhlcmVcbiAgfVxuICBmb3JtLnN1Ym1pdCgpO1xuXG4gIHZhciBjb21wbGV0ZWQgPSBmdW5jdGlvbihlcnIpIHtcbiAgICBkZWJ1ZygnY29tcGxldGVkJywgaWQsIGVycik7XG4gICAgaWYgKCFpZnJhbWUub25lcnJvcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZnJhbWUub25yZWFkeXN0YXRlY2hhbmdlID0gaWZyYW1lLm9uZXJyb3IgPSBpZnJhbWUub25sb2FkID0gbnVsbDtcbiAgICAvLyBPcGVyYSBtaW5pIGRvZXNuJ3QgbGlrZSBpZiB3ZSBHQyBpZnJhbWVcbiAgICAvLyBpbW1lZGlhdGVseSwgdGh1cyB0aGlzIHRpbWVvdXQuXG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIGRlYnVnKCdjbGVhbmluZyB1cCcsIGlkKTtcbiAgICAgIGlmcmFtZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gICAgICBpZnJhbWUgPSBudWxsO1xuICAgIH0sIDUwMCk7XG4gICAgYXJlYS52YWx1ZSA9ICcnO1xuICAgIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBkZXRlY3QgaWYgdGhlIGlmcmFtZSBzdWNjZWVkZWQgb3JcbiAgICAvLyBmYWlsZWQgdG8gc3VibWl0IG91ciBmb3JtLlxuICAgIGNhbGxiYWNrKGVycik7XG4gIH07XG4gIGlmcmFtZS5vbmVycm9yID0gZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ29uZXJyb3InLCBpZCk7XG4gICAgY29tcGxldGVkKCk7XG4gIH07XG4gIGlmcmFtZS5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICBkZWJ1Zygnb25sb2FkJywgaWQpO1xuICAgIGNvbXBsZXRlZCgpO1xuICB9O1xuICBpZnJhbWUub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oZSkge1xuICAgIGRlYnVnKCdvbnJlYWR5c3RhdGVjaGFuZ2UnLCBpZCwgaWZyYW1lLnJlYWR5U3RhdGUsIGUpO1xuICAgIGlmIChpZnJhbWUucmVhZHlTdGF0ZSA9PT0gJ2NvbXBsZXRlJykge1xuICAgICAgY29tcGxldGVkKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ2Fib3J0ZWQnLCBpZCk7XG4gICAgY29tcGxldGVkKG5ldyBFcnJvcignQWJvcnRlZCcpKTtcbiAgfTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi90cmFuc3BvcnQvc2VuZGVyL2pzb25wLmpzXG4vLyBtb2R1bGUgaWQgPSA1NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///54\n");

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, global) {\n\n__webpack_require__(56);\n\nvar URL = __webpack_require__(19)\n  , inherits = __webpack_require__(0)\n  , JSON3 = __webpack_require__(6)\n  , random = __webpack_require__(8)\n  , escape = __webpack_require__(57)\n  , urlUtils = __webpack_require__(5)\n  , eventUtils = __webpack_require__(7)\n  , transport = __webpack_require__(58)\n  , objectUtils = __webpack_require__(17)\n  , browser = __webpack_require__(11)\n  , log = __webpack_require__(59)\n  , Event = __webpack_require__(18)\n  , EventTarget = __webpack_require__(20)\n  , loc = __webpack_require__(30)\n  , CloseEvent = __webpack_require__(60)\n  , TransportMessageEvent = __webpack_require__(61)\n  , InfoReceiver = __webpack_require__(62)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  // Make debug module available globally so you can enable via the console easily\n  global.dbg = __webpack_require__(3);\n  debug = global.dbg('sockjs-client:main');\n}\n\nvar transports;\n\n// follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface\nfunction SockJS(url, protocols, options) {\n  if (!(this instanceof SockJS)) {\n    return new SockJS(url, protocols, options);\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'SockJS: 1 argument required, but only 0 present\");\n  }\n  EventTarget.call(this);\n\n  this.readyState = SockJS.CONNECTING;\n  this.extensions = '';\n  this.protocol = '';\n\n  // non-standard extension\n  options = options || {};\n  if (options.protocols_whitelist) {\n    log.warn(\"'protocols_whitelist' is DEPRECATED. Use 'transports' instead.\");\n  }\n  this._transportsWhitelist = options.transports;\n\n  var sessionId = options.sessionId || 8;\n  if (typeof sessionId === 'function') {\n    this._generateSessionId = sessionId;\n  } else if (typeof sessionId === 'number') {\n    this._generateSessionId = function() {\n      return random.string(sessionId);\n    };\n  } else {\n    throw new TypeError(\"If sessionId is used in the options, it needs to be a number or a function.\");\n  }\n\n  this._server = options.server || random.numberString(1000);\n\n  // Step 1 of WS spec - parse and validate the url. Issue #8\n  var parsedUrl = new URL(url);\n  if (!parsedUrl.host || !parsedUrl.protocol) {\n    throw new SyntaxError(\"The URL '\" + url + \"' is invalid\");\n  } else if (parsedUrl.hash) {\n    throw new SyntaxError('The URL must not contain a fragment');\n  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n    throw new SyntaxError(\"The URL's scheme must be either 'http:' or 'https:'. '\" + parsedUrl.protocol + \"' is not allowed.\");\n  }\n\n  var secure = parsedUrl.protocol === 'https:';\n  // Step 2 - don't allow secure origin with an insecure protocol\n  if (loc.protocol === 'https' && !secure) {\n    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');\n  }\n\n  // Step 3 - check port access - no need here\n  // Step 4 - parse protocols argument\n  if (!protocols) {\n    protocols = [];\n  } else if (!Array.isArray(protocols)) {\n    protocols = [protocols];\n  }\n\n  // Step 5 - check protocols argument\n  var sortedProtocols = protocols.sort();\n  sortedProtocols.forEach(function(proto, i) {\n    if (!proto) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is invalid.\");\n    }\n    if (i < (sortedProtocols.length - 1) && proto === sortedProtocols[i + 1]) {\n      throw new SyntaxError(\"The protocols entry '\" + proto + \"' is duplicated.\");\n    }\n  });\n\n  // Step 6 - convert origin\n  var o = urlUtils.getOrigin(loc.href);\n  this._origin = o ? o.toLowerCase() : null;\n\n  // remove the trailing slash\n  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\\/+$/, ''));\n\n  // store the sanitized url\n  this.url = parsedUrl.href;\n  debug('using url', this.url);\n\n  // Step 7 - start connection in background\n  // obtain server info\n  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26\n  this._urlInfo = {\n    nullOrigin: !browser.hasDomain()\n  , sameOrigin: urlUtils.isOriginEqual(this.url, loc.href)\n  , sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)\n  };\n\n  this._ir = new InfoReceiver(this.url, this._urlInfo);\n  this._ir.once('finish', this._receiveInfo.bind(this));\n}\n\ninherits(SockJS, EventTarget);\n\nfunction userSetCode(code) {\n  return code === 1000 || (code >= 3000 && code <= 4999);\n}\n\nSockJS.prototype.close = function(code, reason) {\n  // Step 1\n  if (code && !userSetCode(code)) {\n    throw new Error('InvalidAccessError: Invalid code');\n  }\n  // Step 2.4 states the max is 123 bytes, but we are just checking length\n  if (reason && reason.length > 123) {\n    throw new SyntaxError('reason argument has an invalid length');\n  }\n\n  // Step 3.1\n  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {\n    return;\n  }\n\n  // TODO look at docs to determine how to set this\n  var wasClean = true;\n  this._close(code || 1000, reason || 'Normal closure', wasClean);\n};\n\nSockJS.prototype.send = function(data) {\n  // #13 - convert anything non-string to string\n  // TODO this currently turns objects into [object Object]\n  if (typeof data !== 'string') {\n    data = '' + data;\n  }\n  if (this.readyState === SockJS.CONNECTING) {\n    throw new Error('InvalidStateError: The connection has not been established yet');\n  }\n  if (this.readyState !== SockJS.OPEN) {\n    return;\n  }\n  this._transport.send(escape.quote(data));\n};\n\nSockJS.version = __webpack_require__(27);\n\nSockJS.CONNECTING = 0;\nSockJS.OPEN = 1;\nSockJS.CLOSING = 2;\nSockJS.CLOSED = 3;\n\nSockJS.prototype._receiveInfo = function(info, rtt) {\n  debug('_receiveInfo', rtt);\n  this._ir = null;\n  if (!info) {\n    this._close(1002, 'Cannot connect to server');\n    return;\n  }\n\n  // establish a round-trip timeout (RTO) based on the\n  // round-trip time (RTT)\n  this._rto = this.countRTO(rtt);\n  // allow server to override url used for the actual transport\n  this._transUrl = info.base_url ? info.base_url : this.url;\n  info = objectUtils.extend(info, this._urlInfo);\n  debug('info', info);\n  // determine list of desired and supported transports\n  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);\n  this._transports = enabledTransports.main;\n  debug(this._transports.length + ' enabled transports');\n\n  this._connect();\n};\n\nSockJS.prototype._connect = function() {\n  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {\n    debug('attempt', Transport.transportName);\n    if (Transport.needBody) {\n      if (!global.document.body ||\n          (typeof global.document.readyState !== 'undefined' &&\n            global.document.readyState !== 'complete' &&\n            global.document.readyState !== 'interactive')) {\n        debug('waiting for body');\n        this._transports.unshift(Transport);\n        eventUtils.attachEvent('load', this._connect.bind(this));\n        return;\n      }\n    }\n\n    // calculate timeout based on RTO and round trips. Default to 5s\n    var timeoutMs = (this._rto * Transport.roundTrips) || 5000;\n    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);\n    debug('using timeout', timeoutMs);\n\n    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());\n    debug('transport url', transportUrl);\n    var transportObj = new Transport(transportUrl, this._transUrl);\n    transportObj.on('message', this._transportMessage.bind(this));\n    transportObj.once('close', this._transportClose.bind(this));\n    transportObj.transportName = Transport.transportName;\n    this._transport = transportObj;\n\n    return;\n  }\n  this._close(2000, 'All transports failed', false);\n};\n\nSockJS.prototype._transportTimeout = function() {\n  debug('_transportTimeout');\n  if (this.readyState === SockJS.CONNECTING) {\n    this._transportClose(2007, 'Transport timed out');\n  }\n};\n\nSockJS.prototype._transportMessage = function(msg) {\n  debug('_transportMessage', msg);\n  var self = this\n    , type = msg.slice(0, 1)\n    , content = msg.slice(1)\n    , payload\n    ;\n\n  // first check for messages that don't need a payload\n  switch (type) {\n    case 'o':\n      this._open();\n      return;\n    case 'h':\n      this.dispatchEvent(new Event('heartbeat'));\n      debug('heartbeat', this.transport);\n      return;\n  }\n\n  if (content) {\n    try {\n      payload = JSON3.parse(content);\n    } catch (e) {\n      debug('bad json', content);\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    debug('empty payload', content);\n    return;\n  }\n\n  switch (type) {\n    case 'a':\n      if (Array.isArray(payload)) {\n        payload.forEach(function(p) {\n          debug('message', self.transport, p);\n          self.dispatchEvent(new TransportMessageEvent(p));\n        });\n      }\n      break;\n    case 'm':\n      debug('message', this.transport, payload);\n      this.dispatchEvent(new TransportMessageEvent(payload));\n      break;\n    case 'c':\n      if (Array.isArray(payload) && payload.length === 2) {\n        this._close(payload[0], payload[1], true);\n      }\n      break;\n  }\n};\n\nSockJS.prototype._transportClose = function(code, reason) {\n  debug('_transportClose', this.transport, code, reason);\n  if (this._transport) {\n    this._transport.removeAllListeners();\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {\n    this._connect();\n    return;\n  }\n\n  this._close(code, reason);\n};\n\nSockJS.prototype._open = function() {\n  debug('_open', this._transport.transportName, this.readyState);\n  if (this.readyState === SockJS.CONNECTING) {\n    if (this._transportTimeoutId) {\n      clearTimeout(this._transportTimeoutId);\n      this._transportTimeoutId = null;\n    }\n    this.readyState = SockJS.OPEN;\n    this.transport = this._transport.transportName;\n    this.dispatchEvent(new Event('open'));\n    debug('connected', this.transport);\n  } else {\n    // The server might have been restarted, and lost track of our\n    // connection.\n    this._close(1006, 'Server lost session');\n  }\n};\n\nSockJS.prototype._close = function(code, reason, wasClean) {\n  debug('_close', this.transport, code, reason, wasClean, this.readyState);\n  var forceFail = false;\n\n  if (this._ir) {\n    forceFail = true;\n    this._ir.close();\n    this._ir = null;\n  }\n  if (this._transport) {\n    this._transport.close();\n    this._transport = null;\n    this.transport = null;\n  }\n\n  if (this.readyState === SockJS.CLOSED) {\n    throw new Error('InvalidStateError: SockJS has already been closed');\n  }\n\n  this.readyState = SockJS.CLOSING;\n  setTimeout(function() {\n    this.readyState = SockJS.CLOSED;\n\n    if (forceFail) {\n      this.dispatchEvent(new Event('error'));\n    }\n\n    var e = new CloseEvent('close');\n    e.wasClean = wasClean || false;\n    e.code = code || 1000;\n    e.reason = reason;\n\n    this.dispatchEvent(e);\n    this.onmessage = this.onclose = this.onerror = null;\n    debug('disconnected');\n  }.bind(this), 0);\n};\n\n// See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/\n// and RFC 2988.\nSockJS.prototype.countRTO = function(rtt) {\n  // In a local environment, when using IE8/9 and the `jsonp-polling`\n  // transport the time needed to establish a connection (the time that pass\n  // from the opening of the transport to the call of `_dispatchOpen`) is\n  // around 200msec (the lower bound used in the article above) and this\n  // causes spurious timeouts. For this reason we calculate a value slightly\n  // larger than that used in the article.\n  if (rtt > 100) {\n    return 4 * rtt; // rto > 400msec\n  }\n  return 300 + rtt; // 300msec < rto <= 400msec\n};\n\nmodule.exports = function(availableTransports) {\n  transports = transport(availableTransports);\n  __webpack_require__(65)(SockJS, availableTransports);\n  return SockJS;\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvbWFpbi5qcz80Yzg1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJ1REFBQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsZ0RBQWdELFdBQVc7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0EsbUJBQW1CO0FBQ25COztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnJlcXVpcmUoJy4vc2hpbXMnKTtcblxudmFyIFVSTCA9IHJlcXVpcmUoJ3VybC1wYXJzZScpXG4gICwgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgSlNPTjMgPSByZXF1aXJlKCdqc29uMycpXG4gICwgcmFuZG9tID0gcmVxdWlyZSgnLi91dGlscy9yYW5kb20nKVxuICAsIGVzY2FwZSA9IHJlcXVpcmUoJy4vdXRpbHMvZXNjYXBlJylcbiAgLCB1cmxVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvdXJsJylcbiAgLCBldmVudFV0aWxzID0gcmVxdWlyZSgnLi91dGlscy9ldmVudCcpXG4gICwgdHJhbnNwb3J0ID0gcmVxdWlyZSgnLi91dGlscy90cmFuc3BvcnQnKVxuICAsIG9iamVjdFV0aWxzID0gcmVxdWlyZSgnLi91dGlscy9vYmplY3QnKVxuICAsIGJyb3dzZXIgPSByZXF1aXJlKCcuL3V0aWxzL2Jyb3dzZXInKVxuICAsIGxvZyA9IHJlcXVpcmUoJy4vdXRpbHMvbG9nJylcbiAgLCBFdmVudCA9IHJlcXVpcmUoJy4vZXZlbnQvZXZlbnQnKVxuICAsIEV2ZW50VGFyZ2V0ID0gcmVxdWlyZSgnLi9ldmVudC9ldmVudHRhcmdldCcpXG4gICwgbG9jID0gcmVxdWlyZSgnLi9sb2NhdGlvbicpXG4gICwgQ2xvc2VFdmVudCA9IHJlcXVpcmUoJy4vZXZlbnQvY2xvc2UnKVxuICAsIFRyYW5zcG9ydE1lc3NhZ2VFdmVudCA9IHJlcXVpcmUoJy4vZXZlbnQvdHJhbnMtbWVzc2FnZScpXG4gICwgSW5mb1JlY2VpdmVyID0gcmVxdWlyZSgnLi9pbmZvLXJlY2VpdmVyJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gTWFrZSBkZWJ1ZyBtb2R1bGUgYXZhaWxhYmxlIGdsb2JhbGx5IHNvIHlvdSBjYW4gZW5hYmxlIHZpYSB0aGUgY29uc29sZSBlYXNpbHlcbiAgZ2xvYmFsLmRiZyA9IHJlcXVpcmUoJ2RlYnVnJyk7XG4gIGRlYnVnID0gZ2xvYmFsLmRiZygnc29ja2pzLWNsaWVudDptYWluJyk7XG59XG5cbnZhciB0cmFuc3BvcnRzO1xuXG4vLyBmb2xsb3cgY29uc3RydWN0b3Igc3RlcHMgZGVmaW5lZCBhdCBodHRwOi8vZGV2LnczLm9yZy9odG1sNS93ZWJzb2NrZXRzLyN0aGUtd2Vic29ja2V0LWludGVyZmFjZVxuZnVuY3Rpb24gU29ja0pTKHVybCwgcHJvdG9jb2xzLCBvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTb2NrSlMpKSB7XG4gICAgcmV0dXJuIG5ldyBTb2NrSlModXJsLCBwcm90b2NvbHMsIG9wdGlvbnMpO1xuICB9XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJGYWlsZWQgdG8gY29uc3RydWN0ICdTb2NrSlM6IDEgYXJndW1lbnQgcmVxdWlyZWQsIGJ1dCBvbmx5IDAgcHJlc2VudFwiKTtcbiAgfVxuICBFdmVudFRhcmdldC5jYWxsKHRoaXMpO1xuXG4gIHRoaXMucmVhZHlTdGF0ZSA9IFNvY2tKUy5DT05ORUNUSU5HO1xuICB0aGlzLmV4dGVuc2lvbnMgPSAnJztcbiAgdGhpcy5wcm90b2NvbCA9ICcnO1xuXG4gIC8vIG5vbi1zdGFuZGFyZCBleHRlbnNpb25cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGlmIChvcHRpb25zLnByb3RvY29sc193aGl0ZWxpc3QpIHtcbiAgICBsb2cud2FybihcIidwcm90b2NvbHNfd2hpdGVsaXN0JyBpcyBERVBSRUNBVEVELiBVc2UgJ3RyYW5zcG9ydHMnIGluc3RlYWQuXCIpO1xuICB9XG4gIHRoaXMuX3RyYW5zcG9ydHNXaGl0ZWxpc3QgPSBvcHRpb25zLnRyYW5zcG9ydHM7XG5cbiAgdmFyIHNlc3Npb25JZCA9IG9wdGlvbnMuc2Vzc2lvbklkIHx8IDg7XG4gIGlmICh0eXBlb2Ygc2Vzc2lvbklkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhpcy5fZ2VuZXJhdGVTZXNzaW9uSWQgPSBzZXNzaW9uSWQ7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHNlc3Npb25JZCA9PT0gJ251bWJlcicpIHtcbiAgICB0aGlzLl9nZW5lcmF0ZVNlc3Npb25JZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHJhbmRvbS5zdHJpbmcoc2Vzc2lvbklkKTtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJZiBzZXNzaW9uSWQgaXMgdXNlZCBpbiB0aGUgb3B0aW9ucywgaXQgbmVlZHMgdG8gYmUgYSBudW1iZXIgb3IgYSBmdW5jdGlvbi5cIik7XG4gIH1cblxuICB0aGlzLl9zZXJ2ZXIgPSBvcHRpb25zLnNlcnZlciB8fCByYW5kb20ubnVtYmVyU3RyaW5nKDEwMDApO1xuXG4gIC8vIFN0ZXAgMSBvZiBXUyBzcGVjIC0gcGFyc2UgYW5kIHZhbGlkYXRlIHRoZSB1cmwuIElzc3VlICM4XG4gIHZhciBwYXJzZWRVcmwgPSBuZXcgVVJMKHVybCk7XG4gIGlmICghcGFyc2VkVXJsLmhvc3QgfHwgIXBhcnNlZFVybC5wcm90b2NvbCkge1xuICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihcIlRoZSBVUkwgJ1wiICsgdXJsICsgXCInIGlzIGludmFsaWRcIik7XG4gIH0gZWxzZSBpZiAocGFyc2VkVXJsLmhhc2gpIHtcbiAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ1RoZSBVUkwgbXVzdCBub3QgY29udGFpbiBhIGZyYWdtZW50Jyk7XG4gIH0gZWxzZSBpZiAocGFyc2VkVXJsLnByb3RvY29sICE9PSAnaHR0cDonICYmIHBhcnNlZFVybC5wcm90b2NvbCAhPT0gJ2h0dHBzOicpIHtcbiAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUaGUgVVJMJ3Mgc2NoZW1lIG11c3QgYmUgZWl0aGVyICdodHRwOicgb3IgJ2h0dHBzOicuICdcIiArIHBhcnNlZFVybC5wcm90b2NvbCArIFwiJyBpcyBub3QgYWxsb3dlZC5cIik7XG4gIH1cblxuICB2YXIgc2VjdXJlID0gcGFyc2VkVXJsLnByb3RvY29sID09PSAnaHR0cHM6JztcbiAgLy8gU3RlcCAyIC0gZG9uJ3QgYWxsb3cgc2VjdXJlIG9yaWdpbiB3aXRoIGFuIGluc2VjdXJlIHByb3RvY29sXG4gIGlmIChsb2MucHJvdG9jb2wgPT09ICdodHRwcycgJiYgIXNlY3VyZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignU2VjdXJpdHlFcnJvcjogQW4gaW5zZWN1cmUgU29ja0pTIGNvbm5lY3Rpb24gbWF5IG5vdCBiZSBpbml0aWF0ZWQgZnJvbSBhIHBhZ2UgbG9hZGVkIG92ZXIgSFRUUFMnKTtcbiAgfVxuXG4gIC8vIFN0ZXAgMyAtIGNoZWNrIHBvcnQgYWNjZXNzIC0gbm8gbmVlZCBoZXJlXG4gIC8vIFN0ZXAgNCAtIHBhcnNlIHByb3RvY29scyBhcmd1bWVudFxuICBpZiAoIXByb3RvY29scykge1xuICAgIHByb3RvY29scyA9IFtdO1xuICB9IGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KHByb3RvY29scykpIHtcbiAgICBwcm90b2NvbHMgPSBbcHJvdG9jb2xzXTtcbiAgfVxuXG4gIC8vIFN0ZXAgNSAtIGNoZWNrIHByb3RvY29scyBhcmd1bWVudFxuICB2YXIgc29ydGVkUHJvdG9jb2xzID0gcHJvdG9jb2xzLnNvcnQoKTtcbiAgc29ydGVkUHJvdG9jb2xzLmZvckVhY2goZnVuY3Rpb24ocHJvdG8sIGkpIHtcbiAgICBpZiAoIXByb3RvKSB7XG4gICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJUaGUgcHJvdG9jb2xzIGVudHJ5ICdcIiArIHByb3RvICsgXCInIGlzIGludmFsaWQuXCIpO1xuICAgIH1cbiAgICBpZiAoaSA8IChzb3J0ZWRQcm90b2NvbHMubGVuZ3RoIC0gMSkgJiYgcHJvdG8gPT09IHNvcnRlZFByb3RvY29sc1tpICsgMV0pIHtcbiAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihcIlRoZSBwcm90b2NvbHMgZW50cnkgJ1wiICsgcHJvdG8gKyBcIicgaXMgZHVwbGljYXRlZC5cIik7XG4gICAgfVxuICB9KTtcblxuICAvLyBTdGVwIDYgLSBjb252ZXJ0IG9yaWdpblxuICB2YXIgbyA9IHVybFV0aWxzLmdldE9yaWdpbihsb2MuaHJlZik7XG4gIHRoaXMuX29yaWdpbiA9IG8gPyBvLnRvTG93ZXJDYXNlKCkgOiBudWxsO1xuXG4gIC8vIHJlbW92ZSB0aGUgdHJhaWxpbmcgc2xhc2hcbiAgcGFyc2VkVXJsLnNldCgncGF0aG5hbWUnLCBwYXJzZWRVcmwucGF0aG5hbWUucmVwbGFjZSgvXFwvKyQvLCAnJykpO1xuXG4gIC8vIHN0b3JlIHRoZSBzYW5pdGl6ZWQgdXJsXG4gIHRoaXMudXJsID0gcGFyc2VkVXJsLmhyZWY7XG4gIGRlYnVnKCd1c2luZyB1cmwnLCB0aGlzLnVybCk7XG5cbiAgLy8gU3RlcCA3IC0gc3RhcnQgY29ubmVjdGlvbiBpbiBiYWNrZ3JvdW5kXG4gIC8vIG9idGFpbiBzZXJ2ZXIgaW5mb1xuICAvLyBodHRwOi8vc29ja2pzLmdpdGh1Yi5pby9zb2NranMtcHJvdG9jb2wvc29ja2pzLXByb3RvY29sLTAuMy4zLmh0bWwjc2VjdGlvbi0yNlxuICB0aGlzLl91cmxJbmZvID0ge1xuICAgIG51bGxPcmlnaW46ICFicm93c2VyLmhhc0RvbWFpbigpXG4gICwgc2FtZU9yaWdpbjogdXJsVXRpbHMuaXNPcmlnaW5FcXVhbCh0aGlzLnVybCwgbG9jLmhyZWYpXG4gICwgc2FtZVNjaGVtZTogdXJsVXRpbHMuaXNTY2hlbWVFcXVhbCh0aGlzLnVybCwgbG9jLmhyZWYpXG4gIH07XG5cbiAgdGhpcy5faXIgPSBuZXcgSW5mb1JlY2VpdmVyKHRoaXMudXJsLCB0aGlzLl91cmxJbmZvKTtcbiAgdGhpcy5faXIub25jZSgnZmluaXNoJywgdGhpcy5fcmVjZWl2ZUluZm8uYmluZCh0aGlzKSk7XG59XG5cbmluaGVyaXRzKFNvY2tKUywgRXZlbnRUYXJnZXQpO1xuXG5mdW5jdGlvbiB1c2VyU2V0Q29kZShjb2RlKSB7XG4gIHJldHVybiBjb2RlID09PSAxMDAwIHx8IChjb2RlID49IDMwMDAgJiYgY29kZSA8PSA0OTk5KTtcbn1cblxuU29ja0pTLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKGNvZGUsIHJlYXNvbikge1xuICAvLyBTdGVwIDFcbiAgaWYgKGNvZGUgJiYgIXVzZXJTZXRDb2RlKGNvZGUpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkQWNjZXNzRXJyb3I6IEludmFsaWQgY29kZScpO1xuICB9XG4gIC8vIFN0ZXAgMi40IHN0YXRlcyB0aGUgbWF4IGlzIDEyMyBieXRlcywgYnV0IHdlIGFyZSBqdXN0IGNoZWNraW5nIGxlbmd0aFxuICBpZiAocmVhc29uICYmIHJlYXNvbi5sZW5ndGggPiAxMjMpIHtcbiAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ3JlYXNvbiBhcmd1bWVudCBoYXMgYW4gaW52YWxpZCBsZW5ndGgnKTtcbiAgfVxuXG4gIC8vIFN0ZXAgMy4xXG4gIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFNvY2tKUy5DTE9TSU5HIHx8IHRoaXMucmVhZHlTdGF0ZSA9PT0gU29ja0pTLkNMT1NFRCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIFRPRE8gbG9vayBhdCBkb2NzIHRvIGRldGVybWluZSBob3cgdG8gc2V0IHRoaXNcbiAgdmFyIHdhc0NsZWFuID0gdHJ1ZTtcbiAgdGhpcy5fY2xvc2UoY29kZSB8fCAxMDAwLCByZWFzb24gfHwgJ05vcm1hbCBjbG9zdXJlJywgd2FzQ2xlYW4pO1xufTtcblxuU29ja0pTLnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24oZGF0YSkge1xuICAvLyAjMTMgLSBjb252ZXJ0IGFueXRoaW5nIG5vbi1zdHJpbmcgdG8gc3RyaW5nXG4gIC8vIFRPRE8gdGhpcyBjdXJyZW50bHkgdHVybnMgb2JqZWN0cyBpbnRvIFtvYmplY3QgT2JqZWN0XVxuICBpZiAodHlwZW9mIGRhdGEgIT09ICdzdHJpbmcnKSB7XG4gICAgZGF0YSA9ICcnICsgZGF0YTtcbiAgfVxuICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBTb2NrSlMuQ09OTkVDVElORykge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZFN0YXRlRXJyb3I6IFRoZSBjb25uZWN0aW9uIGhhcyBub3QgYmVlbiBlc3RhYmxpc2hlZCB5ZXQnKTtcbiAgfVxuICBpZiAodGhpcy5yZWFkeVN0YXRlICE9PSBTb2NrSlMuT1BFTikge1xuICAgIHJldHVybjtcbiAgfVxuICB0aGlzLl90cmFuc3BvcnQuc2VuZChlc2NhcGUucXVvdGUoZGF0YSkpO1xufTtcblxuU29ja0pTLnZlcnNpb24gPSByZXF1aXJlKCcuL3ZlcnNpb24nKTtcblxuU29ja0pTLkNPTk5FQ1RJTkcgPSAwO1xuU29ja0pTLk9QRU4gPSAxO1xuU29ja0pTLkNMT1NJTkcgPSAyO1xuU29ja0pTLkNMT1NFRCA9IDM7XG5cblNvY2tKUy5wcm90b3R5cGUuX3JlY2VpdmVJbmZvID0gZnVuY3Rpb24oaW5mbywgcnR0KSB7XG4gIGRlYnVnKCdfcmVjZWl2ZUluZm8nLCBydHQpO1xuICB0aGlzLl9pciA9IG51bGw7XG4gIGlmICghaW5mbykge1xuICAgIHRoaXMuX2Nsb3NlKDEwMDIsICdDYW5ub3QgY29ubmVjdCB0byBzZXJ2ZXInKTtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBlc3RhYmxpc2ggYSByb3VuZC10cmlwIHRpbWVvdXQgKFJUTykgYmFzZWQgb24gdGhlXG4gIC8vIHJvdW5kLXRyaXAgdGltZSAoUlRUKVxuICB0aGlzLl9ydG8gPSB0aGlzLmNvdW50UlRPKHJ0dCk7XG4gIC8vIGFsbG93IHNlcnZlciB0byBvdmVycmlkZSB1cmwgdXNlZCBmb3IgdGhlIGFjdHVhbCB0cmFuc3BvcnRcbiAgdGhpcy5fdHJhbnNVcmwgPSBpbmZvLmJhc2VfdXJsID8gaW5mby5iYXNlX3VybCA6IHRoaXMudXJsO1xuICBpbmZvID0gb2JqZWN0VXRpbHMuZXh0ZW5kKGluZm8sIHRoaXMuX3VybEluZm8pO1xuICBkZWJ1ZygnaW5mbycsIGluZm8pO1xuICAvLyBkZXRlcm1pbmUgbGlzdCBvZiBkZXNpcmVkIGFuZCBzdXBwb3J0ZWQgdHJhbnNwb3J0c1xuICB2YXIgZW5hYmxlZFRyYW5zcG9ydHMgPSB0cmFuc3BvcnRzLmZpbHRlclRvRW5hYmxlZCh0aGlzLl90cmFuc3BvcnRzV2hpdGVsaXN0LCBpbmZvKTtcbiAgdGhpcy5fdHJhbnNwb3J0cyA9IGVuYWJsZWRUcmFuc3BvcnRzLm1haW47XG4gIGRlYnVnKHRoaXMuX3RyYW5zcG9ydHMubGVuZ3RoICsgJyBlbmFibGVkIHRyYW5zcG9ydHMnKTtcblxuICB0aGlzLl9jb25uZWN0KCk7XG59O1xuXG5Tb2NrSlMucHJvdG90eXBlLl9jb25uZWN0ID0gZnVuY3Rpb24oKSB7XG4gIGZvciAodmFyIFRyYW5zcG9ydCA9IHRoaXMuX3RyYW5zcG9ydHMuc2hpZnQoKTsgVHJhbnNwb3J0OyBUcmFuc3BvcnQgPSB0aGlzLl90cmFuc3BvcnRzLnNoaWZ0KCkpIHtcbiAgICBkZWJ1ZygnYXR0ZW1wdCcsIFRyYW5zcG9ydC50cmFuc3BvcnROYW1lKTtcbiAgICBpZiAoVHJhbnNwb3J0Lm5lZWRCb2R5KSB7XG4gICAgICBpZiAoIWdsb2JhbC5kb2N1bWVudC5ib2R5IHx8XG4gICAgICAgICAgKHR5cGVvZiBnbG9iYWwuZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgICAgIGdsb2JhbC5kb2N1bWVudC5yZWFkeVN0YXRlICE9PSAnY29tcGxldGUnICYmXG4gICAgICAgICAgICBnbG9iYWwuZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gJ2ludGVyYWN0aXZlJykpIHtcbiAgICAgICAgZGVidWcoJ3dhaXRpbmcgZm9yIGJvZHknKTtcbiAgICAgICAgdGhpcy5fdHJhbnNwb3J0cy51bnNoaWZ0KFRyYW5zcG9ydCk7XG4gICAgICAgIGV2ZW50VXRpbHMuYXR0YWNoRXZlbnQoJ2xvYWQnLCB0aGlzLl9jb25uZWN0LmJpbmQodGhpcykpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gY2FsY3VsYXRlIHRpbWVvdXQgYmFzZWQgb24gUlRPIGFuZCByb3VuZCB0cmlwcy4gRGVmYXVsdCB0byA1c1xuICAgIHZhciB0aW1lb3V0TXMgPSAodGhpcy5fcnRvICogVHJhbnNwb3J0LnJvdW5kVHJpcHMpIHx8IDUwMDA7XG4gICAgdGhpcy5fdHJhbnNwb3J0VGltZW91dElkID0gc2V0VGltZW91dCh0aGlzLl90cmFuc3BvcnRUaW1lb3V0LmJpbmQodGhpcyksIHRpbWVvdXRNcyk7XG4gICAgZGVidWcoJ3VzaW5nIHRpbWVvdXQnLCB0aW1lb3V0TXMpO1xuXG4gICAgdmFyIHRyYW5zcG9ydFVybCA9IHVybFV0aWxzLmFkZFBhdGgodGhpcy5fdHJhbnNVcmwsICcvJyArIHRoaXMuX3NlcnZlciArICcvJyArIHRoaXMuX2dlbmVyYXRlU2Vzc2lvbklkKCkpO1xuICAgIGRlYnVnKCd0cmFuc3BvcnQgdXJsJywgdHJhbnNwb3J0VXJsKTtcbiAgICB2YXIgdHJhbnNwb3J0T2JqID0gbmV3IFRyYW5zcG9ydCh0cmFuc3BvcnRVcmwsIHRoaXMuX3RyYW5zVXJsKTtcbiAgICB0cmFuc3BvcnRPYmoub24oJ21lc3NhZ2UnLCB0aGlzLl90cmFuc3BvcnRNZXNzYWdlLmJpbmQodGhpcykpO1xuICAgIHRyYW5zcG9ydE9iai5vbmNlKCdjbG9zZScsIHRoaXMuX3RyYW5zcG9ydENsb3NlLmJpbmQodGhpcykpO1xuICAgIHRyYW5zcG9ydE9iai50cmFuc3BvcnROYW1lID0gVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWU7XG4gICAgdGhpcy5fdHJhbnNwb3J0ID0gdHJhbnNwb3J0T2JqO1xuXG4gICAgcmV0dXJuO1xuICB9XG4gIHRoaXMuX2Nsb3NlKDIwMDAsICdBbGwgdHJhbnNwb3J0cyBmYWlsZWQnLCBmYWxzZSk7XG59O1xuXG5Tb2NrSlMucHJvdG90eXBlLl90cmFuc3BvcnRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfdHJhbnNwb3J0VGltZW91dCcpO1xuICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBTb2NrSlMuQ09OTkVDVElORykge1xuICAgIHRoaXMuX3RyYW5zcG9ydENsb3NlKDIwMDcsICdUcmFuc3BvcnQgdGltZWQgb3V0Jyk7XG4gIH1cbn07XG5cblNvY2tKUy5wcm90b3R5cGUuX3RyYW5zcG9ydE1lc3NhZ2UgPSBmdW5jdGlvbihtc2cpIHtcbiAgZGVidWcoJ190cmFuc3BvcnRNZXNzYWdlJywgbXNnKTtcbiAgdmFyIHNlbGYgPSB0aGlzXG4gICAgLCB0eXBlID0gbXNnLnNsaWNlKDAsIDEpXG4gICAgLCBjb250ZW50ID0gbXNnLnNsaWNlKDEpXG4gICAgLCBwYXlsb2FkXG4gICAgO1xuXG4gIC8vIGZpcnN0IGNoZWNrIGZvciBtZXNzYWdlcyB0aGF0IGRvbid0IG5lZWQgYSBwYXlsb2FkXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ28nOlxuICAgICAgdGhpcy5fb3BlbigpO1xuICAgICAgcmV0dXJuO1xuICAgIGNhc2UgJ2gnOlxuICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnaGVhcnRiZWF0JykpO1xuICAgICAgZGVidWcoJ2hlYXJ0YmVhdCcsIHRoaXMudHJhbnNwb3J0KTtcbiAgICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChjb250ZW50KSB7XG4gICAgdHJ5IHtcbiAgICAgIHBheWxvYWQgPSBKU09OMy5wYXJzZShjb250ZW50KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBkZWJ1ZygnYmFkIGpzb24nLCBjb250ZW50KTtcbiAgICB9XG4gIH1cblxuICBpZiAodHlwZW9mIHBheWxvYWQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgZGVidWcoJ2VtcHR5IHBheWxvYWQnLCBjb250ZW50KTtcbiAgICByZXR1cm47XG4gIH1cblxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdhJzpcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHBheWxvYWQpKSB7XG4gICAgICAgIHBheWxvYWQuZm9yRWFjaChmdW5jdGlvbihwKSB7XG4gICAgICAgICAgZGVidWcoJ21lc3NhZ2UnLCBzZWxmLnRyYW5zcG9ydCwgcCk7XG4gICAgICAgICAgc2VsZi5kaXNwYXRjaEV2ZW50KG5ldyBUcmFuc3BvcnRNZXNzYWdlRXZlbnQocCkpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ20nOlxuICAgICAgZGVidWcoJ21lc3NhZ2UnLCB0aGlzLnRyYW5zcG9ydCwgcGF5bG9hZCk7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IFRyYW5zcG9ydE1lc3NhZ2VFdmVudChwYXlsb2FkKSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdjJzpcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHBheWxvYWQpICYmIHBheWxvYWQubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIHRoaXMuX2Nsb3NlKHBheWxvYWRbMF0sIHBheWxvYWRbMV0sIHRydWUpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gIH1cbn07XG5cblNvY2tKUy5wcm90b3R5cGUuX3RyYW5zcG9ydENsb3NlID0gZnVuY3Rpb24oY29kZSwgcmVhc29uKSB7XG4gIGRlYnVnKCdfdHJhbnNwb3J0Q2xvc2UnLCB0aGlzLnRyYW5zcG9ydCwgY29kZSwgcmVhc29uKTtcbiAgaWYgKHRoaXMuX3RyYW5zcG9ydCkge1xuICAgIHRoaXMuX3RyYW5zcG9ydC5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl90cmFuc3BvcnQgPSBudWxsO1xuICAgIHRoaXMudHJhbnNwb3J0ID0gbnVsbDtcbiAgfVxuXG4gIGlmICghdXNlclNldENvZGUoY29kZSkgJiYgY29kZSAhPT0gMjAwMCAmJiB0aGlzLnJlYWR5U3RhdGUgPT09IFNvY2tKUy5DT05ORUNUSU5HKSB7XG4gICAgdGhpcy5fY29ubmVjdCgpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXMuX2Nsb3NlKGNvZGUsIHJlYXNvbik7XG59O1xuXG5Tb2NrSlMucHJvdG90eXBlLl9vcGVuID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdfb3BlbicsIHRoaXMuX3RyYW5zcG9ydC50cmFuc3BvcnROYW1lLCB0aGlzLnJlYWR5U3RhdGUpO1xuICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBTb2NrSlMuQ09OTkVDVElORykge1xuICAgIGlmICh0aGlzLl90cmFuc3BvcnRUaW1lb3V0SWQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90cmFuc3BvcnRUaW1lb3V0SWQpO1xuICAgICAgdGhpcy5fdHJhbnNwb3J0VGltZW91dElkID0gbnVsbDtcbiAgICB9XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gU29ja0pTLk9QRU47XG4gICAgdGhpcy50cmFuc3BvcnQgPSB0aGlzLl90cmFuc3BvcnQudHJhbnNwb3J0TmFtZTtcbiAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdvcGVuJykpO1xuICAgIGRlYnVnKCdjb25uZWN0ZWQnLCB0aGlzLnRyYW5zcG9ydCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gVGhlIHNlcnZlciBtaWdodCBoYXZlIGJlZW4gcmVzdGFydGVkLCBhbmQgbG9zdCB0cmFjayBvZiBvdXJcbiAgICAvLyBjb25uZWN0aW9uLlxuICAgIHRoaXMuX2Nsb3NlKDEwMDYsICdTZXJ2ZXIgbG9zdCBzZXNzaW9uJyk7XG4gIH1cbn07XG5cblNvY2tKUy5wcm90b3R5cGUuX2Nsb3NlID0gZnVuY3Rpb24oY29kZSwgcmVhc29uLCB3YXNDbGVhbikge1xuICBkZWJ1ZygnX2Nsb3NlJywgdGhpcy50cmFuc3BvcnQsIGNvZGUsIHJlYXNvbiwgd2FzQ2xlYW4sIHRoaXMucmVhZHlTdGF0ZSk7XG4gIHZhciBmb3JjZUZhaWwgPSBmYWxzZTtcblxuICBpZiAodGhpcy5faXIpIHtcbiAgICBmb3JjZUZhaWwgPSB0cnVlO1xuICAgIHRoaXMuX2lyLmNsb3NlKCk7XG4gICAgdGhpcy5faXIgPSBudWxsO1xuICB9XG4gIGlmICh0aGlzLl90cmFuc3BvcnQpIHtcbiAgICB0aGlzLl90cmFuc3BvcnQuY2xvc2UoKTtcbiAgICB0aGlzLl90cmFuc3BvcnQgPSBudWxsO1xuICAgIHRoaXMudHJhbnNwb3J0ID0gbnVsbDtcbiAgfVxuXG4gIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFNvY2tKUy5DTE9TRUQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWRTdGF0ZUVycm9yOiBTb2NrSlMgaGFzIGFscmVhZHkgYmVlbiBjbG9zZWQnKTtcbiAgfVxuXG4gIHRoaXMucmVhZHlTdGF0ZSA9IFNvY2tKUy5DTE9TSU5HO1xuICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVhZHlTdGF0ZSA9IFNvY2tKUy5DTE9TRUQ7XG5cbiAgICBpZiAoZm9yY2VGYWlsKSB7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdlcnJvcicpKTtcbiAgICB9XG5cbiAgICB2YXIgZSA9IG5ldyBDbG9zZUV2ZW50KCdjbG9zZScpO1xuICAgIGUud2FzQ2xlYW4gPSB3YXNDbGVhbiB8fCBmYWxzZTtcbiAgICBlLmNvZGUgPSBjb2RlIHx8IDEwMDA7XG4gICAgZS5yZWFzb24gPSByZWFzb247XG5cbiAgICB0aGlzLmRpc3BhdGNoRXZlbnQoZSk7XG4gICAgdGhpcy5vbm1lc3NhZ2UgPSB0aGlzLm9uY2xvc2UgPSB0aGlzLm9uZXJyb3IgPSBudWxsO1xuICAgIGRlYnVnKCdkaXNjb25uZWN0ZWQnKTtcbiAgfS5iaW5kKHRoaXMpLCAwKTtcbn07XG5cbi8vIFNlZTogaHR0cDovL3d3dy5lcmcuYWJkbi5hYy51ay9+Z2Vycml0L2RjY3Avbm90ZXMvY2NpZDIvcnRvX2VzdGltYXRvci9cbi8vIGFuZCBSRkMgMjk4OC5cblNvY2tKUy5wcm90b3R5cGUuY291bnRSVE8gPSBmdW5jdGlvbihydHQpIHtcbiAgLy8gSW4gYSBsb2NhbCBlbnZpcm9ubWVudCwgd2hlbiB1c2luZyBJRTgvOSBhbmQgdGhlIGBqc29ucC1wb2xsaW5nYFxuICAvLyB0cmFuc3BvcnQgdGhlIHRpbWUgbmVlZGVkIHRvIGVzdGFibGlzaCBhIGNvbm5lY3Rpb24gKHRoZSB0aW1lIHRoYXQgcGFzc1xuICAvLyBmcm9tIHRoZSBvcGVuaW5nIG9mIHRoZSB0cmFuc3BvcnQgdG8gdGhlIGNhbGwgb2YgYF9kaXNwYXRjaE9wZW5gKSBpc1xuICAvLyBhcm91bmQgMjAwbXNlYyAodGhlIGxvd2VyIGJvdW5kIHVzZWQgaW4gdGhlIGFydGljbGUgYWJvdmUpIGFuZCB0aGlzXG4gIC8vIGNhdXNlcyBzcHVyaW91cyB0aW1lb3V0cy4gRm9yIHRoaXMgcmVhc29uIHdlIGNhbGN1bGF0ZSBhIHZhbHVlIHNsaWdodGx5XG4gIC8vIGxhcmdlciB0aGFuIHRoYXQgdXNlZCBpbiB0aGUgYXJ0aWNsZS5cbiAgaWYgKHJ0dCA+IDEwMCkge1xuICAgIHJldHVybiA0ICogcnR0OyAvLyBydG8gPiA0MDBtc2VjXG4gIH1cbiAgcmV0dXJuIDMwMCArIHJ0dDsgLy8gMzAwbXNlYyA8IHJ0byA8PSA0MDBtc2VjXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGF2YWlsYWJsZVRyYW5zcG9ydHMpIHtcbiAgdHJhbnNwb3J0cyA9IHRyYW5zcG9ydChhdmFpbGFibGVUcmFuc3BvcnRzKTtcbiAgcmVxdWlyZSgnLi9pZnJhbWUtYm9vdHN0cmFwJykoU29ja0pTLCBhdmFpbGFibGVUcmFuc3BvcnRzKTtcbiAgcmV0dXJuIFNvY2tKUztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9tYWluLmpzXG4vLyBtb2R1bGUgaWQgPSA1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///55\n");

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* eslint-disable */\n/* jscs: disable */\n\n\n// pulled specific shims from https://github.com/es-shims/es5-shim\n\nvar ArrayPrototype = Array.prototype;\nvar ObjectPrototype = Object.prototype;\nvar FunctionPrototype = Function.prototype;\nvar StringPrototype = String.prototype;\nvar array_slice = ArrayPrototype.slice;\n\nvar _toString = ObjectPrototype.toString;\nvar isFunction = function (val) {\n    return ObjectPrototype.toString.call(val) === '[object Function]';\n};\nvar isArray = function isArray(obj) {\n    return _toString.call(obj) === '[object Array]';\n};\nvar isString = function isString(obj) {\n    return _toString.call(obj) === '[object String]';\n};\n\nvar supportsDescriptors = Object.defineProperty && (function () {\n    try {\n        Object.defineProperty({}, 'x', {});\n        return true;\n    } catch (e) { /* this is ES3 */\n        return false;\n    }\n}());\n\n// Define configurable, writable and non-enumerable props\n// if they don't exist.\nvar defineProperty;\nif (supportsDescriptors) {\n    defineProperty = function (object, name, method, forceAssign) {\n        if (!forceAssign && (name in object)) { return; }\n        Object.defineProperty(object, name, {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: method\n        });\n    };\n} else {\n    defineProperty = function (object, name, method, forceAssign) {\n        if (!forceAssign && (name in object)) { return; }\n        object[name] = method;\n    };\n}\nvar defineProperties = function (object, map, forceAssign) {\n    for (var name in map) {\n        if (ObjectPrototype.hasOwnProperty.call(map, name)) {\n          defineProperty(object, name, map[name], forceAssign);\n        }\n    }\n};\n\nvar toObject = function (o) {\n    if (o == null) { // this matches both null and undefined\n        throw new TypeError(\"can't convert \" + o + ' to object');\n    }\n    return Object(o);\n};\n\n//\n// Util\n// ======\n//\n\n// ES5 9.4\n// http://es5.github.com/#x9.4\n// http://jsperf.com/to-integer\n\nfunction toInteger(num) {\n    var n = +num;\n    if (n !== n) { // isNaN\n        n = 0;\n    } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n    }\n    return n;\n}\n\nfunction ToUint32(x) {\n    return x >>> 0;\n}\n\n//\n// Function\n// ========\n//\n\n// ES-5 15.3.4.5\n// http://es5.github.com/#x15.3.4.5\n\nfunction Empty() {}\n\ndefineProperties(FunctionPrototype, {\n    bind: function bind(that) { // .length is 1\n        // 1. Let Target be the this value.\n        var target = this;\n        // 2. If IsCallable(Target) is false, throw a TypeError exception.\n        if (!isFunction(target)) {\n            throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n        }\n        // 3. Let A be a new (possibly empty) internal list of all of the\n        //   argument values provided after thisArg (arg1, arg2 etc), in order.\n        // XXX slicedArgs will stand in for \"A\" if used\n        var args = array_slice.call(arguments, 1); // for normal call\n        // 4. Let F be a new native ECMAScript object.\n        // 11. Set the [[Prototype]] internal property of F to the standard\n        //   built-in Function prototype object as specified in 15.3.3.1.\n        // 12. Set the [[Call]] internal property of F as described in\n        //   15.3.4.5.1.\n        // 13. Set the [[Construct]] internal property of F as described in\n        //   15.3.4.5.2.\n        // 14. Set the [[HasInstance]] internal property of F as described in\n        //   15.3.4.5.3.\n        var binder = function () {\n\n            if (this instanceof bound) {\n                // 15.3.4.5.2 [[Construct]]\n                // When the [[Construct]] internal method of a function object,\n                // F that was created using the bind function is called with a\n                // list of arguments ExtraArgs, the following steps are taken:\n                // 1. Let target be the value of F's [[TargetFunction]]\n                //   internal property.\n                // 2. If target has no [[Construct]] internal method, a\n                //   TypeError exception is thrown.\n                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Construct]] internal\n                //   method of target providing args as the arguments.\n\n                var result = target.apply(\n                    this,\n                    args.concat(array_slice.call(arguments))\n                );\n                if (Object(result) === result) {\n                    return result;\n                }\n                return this;\n\n            } else {\n                // 15.3.4.5.1 [[Call]]\n                // When the [[Call]] internal method of a function object, F,\n                // which was created using the bind function is called with a\n                // this value and a list of arguments ExtraArgs, the following\n                // steps are taken:\n                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 2. Let boundThis be the value of F's [[BoundThis]] internal\n                //   property.\n                // 3. Let target be the value of F's [[TargetFunction]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Call]] internal method\n                //   of target providing boundThis as the this value and\n                //   providing args as the arguments.\n\n                // equiv: target.call(this, ...boundArgs, ...args)\n                return target.apply(\n                    that,\n                    args.concat(array_slice.call(arguments))\n                );\n\n            }\n\n        };\n\n        // 15. If the [[Class]] internal property of Target is \"Function\", then\n        //     a. Let L be the length property of Target minus the length of A.\n        //     b. Set the length own property of F to either 0 or L, whichever is\n        //       larger.\n        // 16. Else set the length own property of F to 0.\n\n        var boundLength = Math.max(0, target.length - args.length);\n\n        // 17. Set the attributes of the length own property of F to the values\n        //   specified in 15.3.5.1.\n        var boundArgs = [];\n        for (var i = 0; i < boundLength; i++) {\n            boundArgs.push('$' + i);\n        }\n\n        // XXX Build a dynamic function with desired amount of arguments is the only\n        // way to set the length property of a function.\n        // In environments where Content Security Policies enabled (Chrome extensions,\n        // for ex.) all use of eval or Function costructor throws an exception.\n        // However in all of these environments Function.prototype.bind exists\n        // and so this code will never be executed.\n        var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n        if (target.prototype) {\n            Empty.prototype = target.prototype;\n            bound.prototype = new Empty();\n            // Clean up dangling references.\n            Empty.prototype = null;\n        }\n\n        // TODO\n        // 18. Set the [[Extensible]] internal property of F to true.\n\n        // TODO\n        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n        // 20. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n        //   false.\n        // 21. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n        //   and false.\n\n        // TODO\n        // NOTE Function objects created using Function.prototype.bind do not\n        // have a prototype property or the [[Code]], [[FormalParameters]], and\n        // [[Scope]] internal properties.\n        // XXX can't delete prototype in pure-js.\n\n        // 22. Return F.\n        return bound;\n    }\n});\n\n//\n// Array\n// =====\n//\n\n// ES5 15.4.3.2\n// http://es5.github.com/#x15.4.3.2\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\ndefineProperties(Array, { isArray: isArray });\n\n\nvar boxedString = Object('a');\nvar splitString = boxedString[0] !== 'a' || !(0 in boxedString);\n\nvar properlyBoxesContext = function properlyBoxed(method) {\n    // Check node 0.6.21 bug where third parameter is not boxed\n    var properlyBoxesNonStrict = true;\n    var properlyBoxesStrict = true;\n    if (method) {\n        method.call('foo', function (_, __, context) {\n            if (typeof context !== 'object') { properlyBoxesNonStrict = false; }\n        });\n\n        method.call([1], function () {\n            'use strict';\n            properlyBoxesStrict = typeof this === 'string';\n        }, 'x');\n    }\n    return !!method && properlyBoxesNonStrict && properlyBoxesStrict;\n};\n\ndefineProperties(ArrayPrototype, {\n    forEach: function forEach(fun /*, thisp*/) {\n        var object = toObject(this),\n            self = splitString && isString(this) ? this.split('') : object,\n            thisp = arguments[1],\n            i = -1,\n            length = self.length >>> 0;\n\n        // If no callback function or if callback is not a callable function\n        if (!isFunction(fun)) {\n            throw new TypeError(); // TODO message\n        }\n\n        while (++i < length) {\n            if (i in self) {\n                // Invoke the callback function with call, passing arguments:\n                // context, property value, property key, thisArg object\n                // context\n                fun.call(thisp, self[i], i, object);\n            }\n        }\n    }\n}, !properlyBoxesContext(ArrayPrototype.forEach));\n\n// ES5 15.4.4.14\n// http://es5.github.com/#x15.4.4.14\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\nvar hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;\ndefineProperties(ArrayPrototype, {\n    indexOf: function indexOf(sought /*, fromIndex */ ) {\n        var self = splitString && isString(this) ? this.split('') : toObject(this),\n            length = self.length >>> 0;\n\n        if (!length) {\n            return -1;\n        }\n\n        var i = 0;\n        if (arguments.length > 1) {\n            i = toInteger(arguments[1]);\n        }\n\n        // handle negative indices\n        i = i >= 0 ? i : Math.max(0, length + i);\n        for (; i < length; i++) {\n            if (i in self && self[i] === sought) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}, hasFirefox2IndexOfBug);\n\n//\n// String\n// ======\n//\n\n// ES5 15.5.4.14\n// http://es5.github.com/#x15.5.4.14\n\n// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\n// Many browsers do not split properly with regular expressions or they\n// do not perform the split correctly under obscure conditions.\n// See http://blog.stevenlevithan.com/archives/cross-browser-split\n// I've tested in many browsers and this seems to cover the deviant ones:\n//    'ab'.split(/(?:ab)*/) should be [\"\", \"\"], not [\"\"]\n//    '.'.split(/(.?)(.?)/) should be [\"\", \".\", \"\", \"\"], not [\"\", \"\"]\n//    'tesst'.split(/(s)*/) should be [\"t\", undefined, \"e\", \"s\", \"t\"], not\n//       [undefined, \"t\", undefined, \"e\", ...]\n//    ''.split(/.?/) should be [], not [\"\"]\n//    '.'.split(/()()/) should be [\".\"], not [\"\", \"\", \".\"]\n\nvar string_split = StringPrototype.split;\nif (\n    'ab'.split(/(?:ab)*/).length !== 2 ||\n    '.'.split(/(.?)(.?)/).length !== 4 ||\n    'tesst'.split(/(s)*/)[1] === 't' ||\n    'test'.split(/(?:)/, -1).length !== 4 ||\n    ''.split(/.?/).length ||\n    '.'.split(/()()/).length > 1\n) {\n    (function () {\n        var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group\n\n        StringPrototype.split = function (separator, limit) {\n            var string = this;\n            if (separator === void 0 && limit === 0) {\n                return [];\n            }\n\n            // If `separator` is not a regex, use native split\n            if (_toString.call(separator) !== '[object RegExp]') {\n                return string_split.call(this, separator, limit);\n            }\n\n            var output = [],\n                flags = (separator.ignoreCase ? 'i' : '') +\n                        (separator.multiline  ? 'm' : '') +\n                        (separator.extended   ? 'x' : '') + // Proposed for ES6\n                        (separator.sticky     ? 'y' : ''), // Firefox 3+\n                lastLastIndex = 0,\n                // Make `global` and avoid `lastIndex` issues by working with a copy\n                separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + 'g');\n            string += ''; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp('^' + separator.source + '$(?!\\\\s)', flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            limit = limit === void 0 ?\n                -1 >>> 0 : // Math.pow(2, 32) - 1\n                ToUint32(limit);\n            while (match = separator.exec(string)) {\n                // `separator.lastIndex` is not reliable cross-browser\n                lastIndex = match.index + match[0].length;\n                if (lastIndex > lastLastIndex) {\n                    output.push(string.slice(lastLastIndex, match.index));\n                    // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                    // nonparticipating capturing groups\n                    if (!compliantExecNpcg && match.length > 1) {\n                        match[0].replace(separator2, function () {\n                            for (var i = 1; i < arguments.length - 2; i++) {\n                                if (arguments[i] === void 0) {\n                                    match[i] = void 0;\n                                }\n                            }\n                        });\n                    }\n                    if (match.length > 1 && match.index < string.length) {\n                        ArrayPrototype.push.apply(output, match.slice(1));\n                    }\n                    lastLength = match[0].length;\n                    lastLastIndex = lastIndex;\n                    if (output.length >= limit) {\n                        break;\n                    }\n                }\n                if (separator.lastIndex === match.index) {\n                    separator.lastIndex++; // Avoid an infinite loop\n                }\n            }\n            if (lastLastIndex === string.length) {\n                if (lastLength || !separator.test('')) {\n                    output.push('');\n                }\n            } else {\n                output.push(string.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n    }());\n\n// [bugfix, chrome]\n// If separator is undefined, then the result array contains just one String,\n// which is the this value (converted to a String). If limit is not undefined,\n// then the output array is truncated so that it contains no more than limit\n// elements.\n// \"0\".split(undefined, 0) -> []\n} else if ('0'.split(void 0, 0).length) {\n    StringPrototype.split = function split(separator, limit) {\n        if (separator === void 0 && limit === 0) { return []; }\n        return string_split.call(this, separator, limit);\n    };\n}\n\n// ES5 15.5.4.20\n// whitespace from: http://es5.github.io/#x15.5.4.20\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n    '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar wsRegexChars = '[' + ws + ']';\nvar trimBeginRegexp = new RegExp('^' + wsRegexChars + wsRegexChars + '*');\nvar trimEndRegexp = new RegExp(wsRegexChars + wsRegexChars + '*$');\nvar hasTrimWhitespaceBug = StringPrototype.trim && (ws.trim() || !zeroWidth.trim());\ndefineProperties(StringPrototype, {\n    // http://blog.stevenlevithan.com/archives/faster-trim-javascript\n    // http://perfectionkills.com/whitespace-deviations/\n    trim: function trim() {\n        if (this === void 0 || this === null) {\n            throw new TypeError(\"can't convert \" + this + ' to object');\n        }\n        return String(this).replace(trimBeginRegexp, '').replace(trimEndRegexp, '');\n    }\n}, hasTrimWhitespaceBug);\n\n// ECMA-262, 3rd B.2.3\n// Not an ECMAScript standard, although ECMAScript 3rd Edition has a\n// non-normative section suggesting uniform semantics and it should be\n// normalized across all browsers\n// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\nvar string_substr = StringPrototype.substr;\nvar hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';\ndefineProperties(StringPrototype, {\n    substr: function substr(start, length) {\n        return string_substr.call(\n            this,\n            start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,\n            length\n        );\n    }\n}, hasNegativeSubstrBug);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvc2hpbXMuanM/NTFhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZ0NBQWdDLFNBQVM7QUFDekM7QUFDQSxLQUFLLFlBQVk7QUFDakI7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxRQUFRO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwrQ0FBK0MsUUFBUTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlCQUFpQjtBQUN4QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRixzQ0FBc0MsRUFBRTs7QUFFOUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JELHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0Esd0RBQXdEO0FBQ3hELDhFQUE4RTtBQUM5RTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1CQUFtQjs7O0FBRzVDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGdDQUFnQztBQUM5RSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtDQUFrQztBQUNsQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLFlBQVk7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7O0FBRTlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZEO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywwQkFBMEI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLGtEQUFrRCxXQUFXO0FBQzdEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiI1Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG4vKiBqc2NzOiBkaXNhYmxlICovXG4ndXNlIHN0cmljdCc7XG5cbi8vIHB1bGxlZCBzcGVjaWZpYyBzaGltcyBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9lcy1zaGltcy9lczUtc2hpbVxuXG52YXIgQXJyYXlQcm90b3R5cGUgPSBBcnJheS5wcm90b3R5cGU7XG52YXIgT2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbnZhciBGdW5jdGlvblByb3RvdHlwZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbnZhciBTdHJpbmdQcm90b3R5cGUgPSBTdHJpbmcucHJvdG90eXBlO1xudmFyIGFycmF5X3NsaWNlID0gQXJyYXlQcm90b3R5cGUuc2xpY2U7XG5cbnZhciBfdG9TdHJpbmcgPSBPYmplY3RQcm90b3R5cGUudG9TdHJpbmc7XG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgICByZXR1cm4gT2JqZWN0UHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn07XG52YXIgaXNBcnJheSA9IGZ1bmN0aW9uIGlzQXJyYXkob2JqKSB7XG4gICAgcmV0dXJuIF90b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xudmFyIGlzU3RyaW5nID0gZnVuY3Rpb24gaXNTdHJpbmcob2JqKSB7XG4gICAgcmV0dXJuIF90b1N0cmluZy5jYWxsKG9iaikgPT09ICdbb2JqZWN0IFN0cmluZ10nO1xufTtcblxudmFyIHN1cHBvcnRzRGVzY3JpcHRvcnMgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICd4Jywge30pO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7IC8qIHRoaXMgaXMgRVMzICovXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59KCkpO1xuXG4vLyBEZWZpbmUgY29uZmlndXJhYmxlLCB3cml0YWJsZSBhbmQgbm9uLWVudW1lcmFibGUgcHJvcHNcbi8vIGlmIHRoZXkgZG9uJ3QgZXhpc3QuXG52YXIgZGVmaW5lUHJvcGVydHk7XG5pZiAoc3VwcG9ydHNEZXNjcmlwdG9ycykge1xuICAgIGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZSwgbWV0aG9kLCBmb3JjZUFzc2lnbikge1xuICAgICAgICBpZiAoIWZvcmNlQXNzaWduICYmIChuYW1lIGluIG9iamVjdCkpIHsgcmV0dXJuOyB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIG5hbWUsIHtcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogbWV0aG9kXG4gICAgICAgIH0pO1xuICAgIH07XG59IGVsc2Uge1xuICAgIGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZSwgbWV0aG9kLCBmb3JjZUFzc2lnbikge1xuICAgICAgICBpZiAoIWZvcmNlQXNzaWduICYmIChuYW1lIGluIG9iamVjdCkpIHsgcmV0dXJuOyB9XG4gICAgICAgIG9iamVjdFtuYW1lXSA9IG1ldGhvZDtcbiAgICB9O1xufVxudmFyIGRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiAob2JqZWN0LCBtYXAsIGZvcmNlQXNzaWduKSB7XG4gICAgZm9yICh2YXIgbmFtZSBpbiBtYXApIHtcbiAgICAgICAgaWYgKE9iamVjdFByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1hcCwgbmFtZSkpIHtcbiAgICAgICAgICBkZWZpbmVQcm9wZXJ0eShvYmplY3QsIG5hbWUsIG1hcFtuYW1lXSwgZm9yY2VBc3NpZ24pO1xuICAgICAgICB9XG4gICAgfVxufTtcblxudmFyIHRvT2JqZWN0ID0gZnVuY3Rpb24gKG8pIHtcbiAgICBpZiAobyA9PSBudWxsKSB7IC8vIHRoaXMgbWF0Y2hlcyBib3RoIG51bGwgYW5kIHVuZGVmaW5lZFxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiY2FuJ3QgY29udmVydCBcIiArIG8gKyAnIHRvIG9iamVjdCcpO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0KG8pO1xufTtcblxuLy9cbi8vIFV0aWxcbi8vID09PT09PVxuLy9cblxuLy8gRVM1IDkuNFxuLy8gaHR0cDovL2VzNS5naXRodWIuY29tLyN4OS40XG4vLyBodHRwOi8vanNwZXJmLmNvbS90by1pbnRlZ2VyXG5cbmZ1bmN0aW9uIHRvSW50ZWdlcihudW0pIHtcbiAgICB2YXIgbiA9ICtudW07XG4gICAgaWYgKG4gIT09IG4pIHsgLy8gaXNOYU5cbiAgICAgICAgbiA9IDA7XG4gICAgfSBlbHNlIGlmIChuICE9PSAwICYmIG4gIT09ICgxIC8gMCkgJiYgbiAhPT0gLSgxIC8gMCkpIHtcbiAgICAgICAgbiA9IChuID4gMCB8fCAtMSkgKiBNYXRoLmZsb29yKE1hdGguYWJzKG4pKTtcbiAgICB9XG4gICAgcmV0dXJuIG47XG59XG5cbmZ1bmN0aW9uIFRvVWludDMyKHgpIHtcbiAgICByZXR1cm4geCA+Pj4gMDtcbn1cblxuLy9cbi8vIEZ1bmN0aW9uXG4vLyA9PT09PT09PVxuLy9cblxuLy8gRVMtNSAxNS4zLjQuNVxuLy8gaHR0cDovL2VzNS5naXRodWIuY29tLyN4MTUuMy40LjVcblxuZnVuY3Rpb24gRW1wdHkoKSB7fVxuXG5kZWZpbmVQcm9wZXJ0aWVzKEZ1bmN0aW9uUHJvdG90eXBlLCB7XG4gICAgYmluZDogZnVuY3Rpb24gYmluZCh0aGF0KSB7IC8vIC5sZW5ndGggaXMgMVxuICAgICAgICAvLyAxLiBMZXQgVGFyZ2V0IGJlIHRoZSB0aGlzIHZhbHVlLlxuICAgICAgICB2YXIgdGFyZ2V0ID0gdGhpcztcbiAgICAgICAgLy8gMi4gSWYgSXNDYWxsYWJsZShUYXJnZXQpIGlzIGZhbHNlLCB0aHJvdyBhIFR5cGVFcnJvciBleGNlcHRpb24uXG4gICAgICAgIGlmICghaXNGdW5jdGlvbih0YXJnZXQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdGdW5jdGlvbi5wcm90b3R5cGUuYmluZCBjYWxsZWQgb24gaW5jb21wYXRpYmxlICcgKyB0YXJnZXQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIDMuIExldCBBIGJlIGEgbmV3IChwb3NzaWJseSBlbXB0eSkgaW50ZXJuYWwgbGlzdCBvZiBhbGwgb2YgdGhlXG4gICAgICAgIC8vICAgYXJndW1lbnQgdmFsdWVzIHByb3ZpZGVkIGFmdGVyIHRoaXNBcmcgKGFyZzEsIGFyZzIgZXRjKSwgaW4gb3JkZXIuXG4gICAgICAgIC8vIFhYWCBzbGljZWRBcmdzIHdpbGwgc3RhbmQgaW4gZm9yIFwiQVwiIGlmIHVzZWRcbiAgICAgICAgdmFyIGFyZ3MgPSBhcnJheV9zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7IC8vIGZvciBub3JtYWwgY2FsbFxuICAgICAgICAvLyA0LiBMZXQgRiBiZSBhIG5ldyBuYXRpdmUgRUNNQVNjcmlwdCBvYmplY3QuXG4gICAgICAgIC8vIDExLiBTZXQgdGhlIFtbUHJvdG90eXBlXV0gaW50ZXJuYWwgcHJvcGVydHkgb2YgRiB0byB0aGUgc3RhbmRhcmRcbiAgICAgICAgLy8gICBidWlsdC1pbiBGdW5jdGlvbiBwcm90b3R5cGUgb2JqZWN0IGFzIHNwZWNpZmllZCBpbiAxNS4zLjMuMS5cbiAgICAgICAgLy8gMTIuIFNldCB0aGUgW1tDYWxsXV0gaW50ZXJuYWwgcHJvcGVydHkgb2YgRiBhcyBkZXNjcmliZWQgaW5cbiAgICAgICAgLy8gICAxNS4zLjQuNS4xLlxuICAgICAgICAvLyAxMy4gU2V0IHRoZSBbW0NvbnN0cnVjdF1dIGludGVybmFsIHByb3BlcnR5IG9mIEYgYXMgZGVzY3JpYmVkIGluXG4gICAgICAgIC8vICAgMTUuMy40LjUuMi5cbiAgICAgICAgLy8gMTQuIFNldCB0aGUgW1tIYXNJbnN0YW5jZV1dIGludGVybmFsIHByb3BlcnR5IG9mIEYgYXMgZGVzY3JpYmVkIGluXG4gICAgICAgIC8vICAgMTUuMy40LjUuMy5cbiAgICAgICAgdmFyIGJpbmRlciA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgaWYgKHRoaXMgaW5zdGFuY2VvZiBib3VuZCkge1xuICAgICAgICAgICAgICAgIC8vIDE1LjMuNC41LjIgW1tDb25zdHJ1Y3RdXVxuICAgICAgICAgICAgICAgIC8vIFdoZW4gdGhlIFtbQ29uc3RydWN0XV0gaW50ZXJuYWwgbWV0aG9kIG9mIGEgZnVuY3Rpb24gb2JqZWN0LFxuICAgICAgICAgICAgICAgIC8vIEYgdGhhdCB3YXMgY3JlYXRlZCB1c2luZyB0aGUgYmluZCBmdW5jdGlvbiBpcyBjYWxsZWQgd2l0aCBhXG4gICAgICAgICAgICAgICAgLy8gbGlzdCBvZiBhcmd1bWVudHMgRXh0cmFBcmdzLCB0aGUgZm9sbG93aW5nIHN0ZXBzIGFyZSB0YWtlbjpcbiAgICAgICAgICAgICAgICAvLyAxLiBMZXQgdGFyZ2V0IGJlIHRoZSB2YWx1ZSBvZiBGJ3MgW1tUYXJnZXRGdW5jdGlvbl1dXG4gICAgICAgICAgICAgICAgLy8gICBpbnRlcm5hbCBwcm9wZXJ0eS5cbiAgICAgICAgICAgICAgICAvLyAyLiBJZiB0YXJnZXQgaGFzIG5vIFtbQ29uc3RydWN0XV0gaW50ZXJuYWwgbWV0aG9kLCBhXG4gICAgICAgICAgICAgICAgLy8gICBUeXBlRXJyb3IgZXhjZXB0aW9uIGlzIHRocm93bi5cbiAgICAgICAgICAgICAgICAvLyAzLiBMZXQgYm91bmRBcmdzIGJlIHRoZSB2YWx1ZSBvZiBGJ3MgW1tCb3VuZEFyZ3NdXSBpbnRlcm5hbFxuICAgICAgICAgICAgICAgIC8vICAgcHJvcGVydHkuXG4gICAgICAgICAgICAgICAgLy8gNC4gTGV0IGFyZ3MgYmUgYSBuZXcgbGlzdCBjb250YWluaW5nIHRoZSBzYW1lIHZhbHVlcyBhcyB0aGVcbiAgICAgICAgICAgICAgICAvLyAgIGxpc3QgYm91bmRBcmdzIGluIHRoZSBzYW1lIG9yZGVyIGZvbGxvd2VkIGJ5IHRoZSBzYW1lXG4gICAgICAgICAgICAgICAgLy8gICB2YWx1ZXMgYXMgdGhlIGxpc3QgRXh0cmFBcmdzIGluIHRoZSBzYW1lIG9yZGVyLlxuICAgICAgICAgICAgICAgIC8vIDUuIFJldHVybiB0aGUgcmVzdWx0IG9mIGNhbGxpbmcgdGhlIFtbQ29uc3RydWN0XV0gaW50ZXJuYWxcbiAgICAgICAgICAgICAgICAvLyAgIG1ldGhvZCBvZiB0YXJnZXQgcHJvdmlkaW5nIGFyZ3MgYXMgdGhlIGFyZ3VtZW50cy5cblxuICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSB0YXJnZXQuYXBwbHkoXG4gICAgICAgICAgICAgICAgICAgIHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIGFyZ3MuY29uY2F0KGFycmF5X3NsaWNlLmNhbGwoYXJndW1lbnRzKSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIGlmIChPYmplY3QocmVzdWx0KSA9PT0gcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIDE1LjMuNC41LjEgW1tDYWxsXV1cbiAgICAgICAgICAgICAgICAvLyBXaGVuIHRoZSBbW0NhbGxdXSBpbnRlcm5hbCBtZXRob2Qgb2YgYSBmdW5jdGlvbiBvYmplY3QsIEYsXG4gICAgICAgICAgICAgICAgLy8gd2hpY2ggd2FzIGNyZWF0ZWQgdXNpbmcgdGhlIGJpbmQgZnVuY3Rpb24gaXMgY2FsbGVkIHdpdGggYVxuICAgICAgICAgICAgICAgIC8vIHRoaXMgdmFsdWUgYW5kIGEgbGlzdCBvZiBhcmd1bWVudHMgRXh0cmFBcmdzLCB0aGUgZm9sbG93aW5nXG4gICAgICAgICAgICAgICAgLy8gc3RlcHMgYXJlIHRha2VuOlxuICAgICAgICAgICAgICAgIC8vIDEuIExldCBib3VuZEFyZ3MgYmUgdGhlIHZhbHVlIG9mIEYncyBbW0JvdW5kQXJnc11dIGludGVybmFsXG4gICAgICAgICAgICAgICAgLy8gICBwcm9wZXJ0eS5cbiAgICAgICAgICAgICAgICAvLyAyLiBMZXQgYm91bmRUaGlzIGJlIHRoZSB2YWx1ZSBvZiBGJ3MgW1tCb3VuZFRoaXNdXSBpbnRlcm5hbFxuICAgICAgICAgICAgICAgIC8vICAgcHJvcGVydHkuXG4gICAgICAgICAgICAgICAgLy8gMy4gTGV0IHRhcmdldCBiZSB0aGUgdmFsdWUgb2YgRidzIFtbVGFyZ2V0RnVuY3Rpb25dXSBpbnRlcm5hbFxuICAgICAgICAgICAgICAgIC8vICAgcHJvcGVydHkuXG4gICAgICAgICAgICAgICAgLy8gNC4gTGV0IGFyZ3MgYmUgYSBuZXcgbGlzdCBjb250YWluaW5nIHRoZSBzYW1lIHZhbHVlcyBhcyB0aGVcbiAgICAgICAgICAgICAgICAvLyAgIGxpc3QgYm91bmRBcmdzIGluIHRoZSBzYW1lIG9yZGVyIGZvbGxvd2VkIGJ5IHRoZSBzYW1lXG4gICAgICAgICAgICAgICAgLy8gICB2YWx1ZXMgYXMgdGhlIGxpc3QgRXh0cmFBcmdzIGluIHRoZSBzYW1lIG9yZGVyLlxuICAgICAgICAgICAgICAgIC8vIDUuIFJldHVybiB0aGUgcmVzdWx0IG9mIGNhbGxpbmcgdGhlIFtbQ2FsbF1dIGludGVybmFsIG1ldGhvZFxuICAgICAgICAgICAgICAgIC8vICAgb2YgdGFyZ2V0IHByb3ZpZGluZyBib3VuZFRoaXMgYXMgdGhlIHRoaXMgdmFsdWUgYW5kXG4gICAgICAgICAgICAgICAgLy8gICBwcm92aWRpbmcgYXJncyBhcyB0aGUgYXJndW1lbnRzLlxuXG4gICAgICAgICAgICAgICAgLy8gZXF1aXY6IHRhcmdldC5jYWxsKHRoaXMsIC4uLmJvdW5kQXJncywgLi4uYXJncylcbiAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0LmFwcGx5KFxuICAgICAgICAgICAgICAgICAgICB0aGF0LFxuICAgICAgICAgICAgICAgICAgICBhcmdzLmNvbmNhdChhcnJheV9zbGljZS5jYWxsKGFyZ3VtZW50cykpXG4gICAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgfVxuXG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gMTUuIElmIHRoZSBbW0NsYXNzXV0gaW50ZXJuYWwgcHJvcGVydHkgb2YgVGFyZ2V0IGlzIFwiRnVuY3Rpb25cIiwgdGhlblxuICAgICAgICAvLyAgICAgYS4gTGV0IEwgYmUgdGhlIGxlbmd0aCBwcm9wZXJ0eSBvZiBUYXJnZXQgbWludXMgdGhlIGxlbmd0aCBvZiBBLlxuICAgICAgICAvLyAgICAgYi4gU2V0IHRoZSBsZW5ndGggb3duIHByb3BlcnR5IG9mIEYgdG8gZWl0aGVyIDAgb3IgTCwgd2hpY2hldmVyIGlzXG4gICAgICAgIC8vICAgICAgIGxhcmdlci5cbiAgICAgICAgLy8gMTYuIEVsc2Ugc2V0IHRoZSBsZW5ndGggb3duIHByb3BlcnR5IG9mIEYgdG8gMC5cblxuICAgICAgICB2YXIgYm91bmRMZW5ndGggPSBNYXRoLm1heCgwLCB0YXJnZXQubGVuZ3RoIC0gYXJncy5sZW5ndGgpO1xuXG4gICAgICAgIC8vIDE3LiBTZXQgdGhlIGF0dHJpYnV0ZXMgb2YgdGhlIGxlbmd0aCBvd24gcHJvcGVydHkgb2YgRiB0byB0aGUgdmFsdWVzXG4gICAgICAgIC8vICAgc3BlY2lmaWVkIGluIDE1LjMuNS4xLlxuICAgICAgICB2YXIgYm91bmRBcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYm91bmRMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYm91bmRBcmdzLnB1c2goJyQnICsgaSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBYWFggQnVpbGQgYSBkeW5hbWljIGZ1bmN0aW9uIHdpdGggZGVzaXJlZCBhbW91bnQgb2YgYXJndW1lbnRzIGlzIHRoZSBvbmx5XG4gICAgICAgIC8vIHdheSB0byBzZXQgdGhlIGxlbmd0aCBwcm9wZXJ0eSBvZiBhIGZ1bmN0aW9uLlxuICAgICAgICAvLyBJbiBlbnZpcm9ubWVudHMgd2hlcmUgQ29udGVudCBTZWN1cml0eSBQb2xpY2llcyBlbmFibGVkIChDaHJvbWUgZXh0ZW5zaW9ucyxcbiAgICAgICAgLy8gZm9yIGV4LikgYWxsIHVzZSBvZiBldmFsIG9yIEZ1bmN0aW9uIGNvc3RydWN0b3IgdGhyb3dzIGFuIGV4Y2VwdGlvbi5cbiAgICAgICAgLy8gSG93ZXZlciBpbiBhbGwgb2YgdGhlc2UgZW52aXJvbm1lbnRzIEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kIGV4aXN0c1xuICAgICAgICAvLyBhbmQgc28gdGhpcyBjb2RlIHdpbGwgbmV2ZXIgYmUgZXhlY3V0ZWQuXG4gICAgICAgIHZhciBib3VuZCA9IEZ1bmN0aW9uKCdiaW5kZXInLCAncmV0dXJuIGZ1bmN0aW9uICgnICsgYm91bmRBcmdzLmpvaW4oJywnKSArICcpeyByZXR1cm4gYmluZGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0nKShiaW5kZXIpO1xuXG4gICAgICAgIGlmICh0YXJnZXQucHJvdG90eXBlKSB7XG4gICAgICAgICAgICBFbXB0eS5wcm90b3R5cGUgPSB0YXJnZXQucHJvdG90eXBlO1xuICAgICAgICAgICAgYm91bmQucHJvdG90eXBlID0gbmV3IEVtcHR5KCk7XG4gICAgICAgICAgICAvLyBDbGVhbiB1cCBkYW5nbGluZyByZWZlcmVuY2VzLlxuICAgICAgICAgICAgRW1wdHkucHJvdG90eXBlID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRPRE9cbiAgICAgICAgLy8gMTguIFNldCB0aGUgW1tFeHRlbnNpYmxlXV0gaW50ZXJuYWwgcHJvcGVydHkgb2YgRiB0byB0cnVlLlxuXG4gICAgICAgIC8vIFRPRE9cbiAgICAgICAgLy8gMTkuIExldCB0aHJvd2VyIGJlIHRoZSBbW1Rocm93VHlwZUVycm9yXV0gZnVuY3Rpb24gT2JqZWN0ICgxMy4yLjMpLlxuICAgICAgICAvLyAyMC4gQ2FsbCB0aGUgW1tEZWZpbmVPd25Qcm9wZXJ0eV1dIGludGVybmFsIG1ldGhvZCBvZiBGIHdpdGhcbiAgICAgICAgLy8gICBhcmd1bWVudHMgXCJjYWxsZXJcIiwgUHJvcGVydHlEZXNjcmlwdG9yIHtbW0dldF1dOiB0aHJvd2VyLCBbW1NldF1dOlxuICAgICAgICAvLyAgIHRocm93ZXIsIFtbRW51bWVyYWJsZV1dOiBmYWxzZSwgW1tDb25maWd1cmFibGVdXTogZmFsc2V9LCBhbmRcbiAgICAgICAgLy8gICBmYWxzZS5cbiAgICAgICAgLy8gMjEuIENhbGwgdGhlIFtbRGVmaW5lT3duUHJvcGVydHldXSBpbnRlcm5hbCBtZXRob2Qgb2YgRiB3aXRoXG4gICAgICAgIC8vICAgYXJndW1lbnRzIFwiYXJndW1lbnRzXCIsIFByb3BlcnR5RGVzY3JpcHRvciB7W1tHZXRdXTogdGhyb3dlcixcbiAgICAgICAgLy8gICBbW1NldF1dOiB0aHJvd2VyLCBbW0VudW1lcmFibGVdXTogZmFsc2UsIFtbQ29uZmlndXJhYmxlXV06IGZhbHNlfSxcbiAgICAgICAgLy8gICBhbmQgZmFsc2UuXG5cbiAgICAgICAgLy8gVE9ET1xuICAgICAgICAvLyBOT1RFIEZ1bmN0aW9uIG9iamVjdHMgY3JlYXRlZCB1c2luZyBGdW5jdGlvbi5wcm90b3R5cGUuYmluZCBkbyBub3RcbiAgICAgICAgLy8gaGF2ZSBhIHByb3RvdHlwZSBwcm9wZXJ0eSBvciB0aGUgW1tDb2RlXV0sIFtbRm9ybWFsUGFyYW1ldGVyc11dLCBhbmRcbiAgICAgICAgLy8gW1tTY29wZV1dIGludGVybmFsIHByb3BlcnRpZXMuXG4gICAgICAgIC8vIFhYWCBjYW4ndCBkZWxldGUgcHJvdG90eXBlIGluIHB1cmUtanMuXG5cbiAgICAgICAgLy8gMjIuIFJldHVybiBGLlxuICAgICAgICByZXR1cm4gYm91bmQ7XG4gICAgfVxufSk7XG5cbi8vXG4vLyBBcnJheVxuLy8gPT09PT1cbi8vXG5cbi8vIEVTNSAxNS40LjMuMlxuLy8gaHR0cDovL2VzNS5naXRodWIuY29tLyN4MTUuNC4zLjJcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL0FycmF5L2lzQXJyYXlcbmRlZmluZVByb3BlcnRpZXMoQXJyYXksIHsgaXNBcnJheTogaXNBcnJheSB9KTtcblxuXG52YXIgYm94ZWRTdHJpbmcgPSBPYmplY3QoJ2EnKTtcbnZhciBzcGxpdFN0cmluZyA9IGJveGVkU3RyaW5nWzBdICE9PSAnYScgfHwgISgwIGluIGJveGVkU3RyaW5nKTtcblxudmFyIHByb3Blcmx5Qm94ZXNDb250ZXh0ID0gZnVuY3Rpb24gcHJvcGVybHlCb3hlZChtZXRob2QpIHtcbiAgICAvLyBDaGVjayBub2RlIDAuNi4yMSBidWcgd2hlcmUgdGhpcmQgcGFyYW1ldGVyIGlzIG5vdCBib3hlZFxuICAgIHZhciBwcm9wZXJseUJveGVzTm9uU3RyaWN0ID0gdHJ1ZTtcbiAgICB2YXIgcHJvcGVybHlCb3hlc1N0cmljdCA9IHRydWU7XG4gICAgaWYgKG1ldGhvZCkge1xuICAgICAgICBtZXRob2QuY2FsbCgnZm9vJywgZnVuY3Rpb24gKF8sIF9fLCBjb250ZXh0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRleHQgIT09ICdvYmplY3QnKSB7IHByb3Blcmx5Qm94ZXNOb25TdHJpY3QgPSBmYWxzZTsgfVxuICAgICAgICB9KTtcblxuICAgICAgICBtZXRob2QuY2FsbChbMV0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICd1c2Ugc3RyaWN0JztcbiAgICAgICAgICAgIHByb3Blcmx5Qm94ZXNTdHJpY3QgPSB0eXBlb2YgdGhpcyA9PT0gJ3N0cmluZyc7XG4gICAgICAgIH0sICd4Jyk7XG4gICAgfVxuICAgIHJldHVybiAhIW1ldGhvZCAmJiBwcm9wZXJseUJveGVzTm9uU3RyaWN0ICYmIHByb3Blcmx5Qm94ZXNTdHJpY3Q7XG59O1xuXG5kZWZpbmVQcm9wZXJ0aWVzKEFycmF5UHJvdG90eXBlLCB7XG4gICAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChmdW4gLyosIHRoaXNwKi8pIHtcbiAgICAgICAgdmFyIG9iamVjdCA9IHRvT2JqZWN0KHRoaXMpLFxuICAgICAgICAgICAgc2VsZiA9IHNwbGl0U3RyaW5nICYmIGlzU3RyaW5nKHRoaXMpID8gdGhpcy5zcGxpdCgnJykgOiBvYmplY3QsXG4gICAgICAgICAgICB0aGlzcCA9IGFyZ3VtZW50c1sxXSxcbiAgICAgICAgICAgIGkgPSAtMSxcbiAgICAgICAgICAgIGxlbmd0aCA9IHNlbGYubGVuZ3RoID4+PiAwO1xuXG4gICAgICAgIC8vIElmIG5vIGNhbGxiYWNrIGZ1bmN0aW9uIG9yIGlmIGNhbGxiYWNrIGlzIG5vdCBhIGNhbGxhYmxlIGZ1bmN0aW9uXG4gICAgICAgIGlmICghaXNGdW5jdGlvbihmdW4pKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCk7IC8vIFRPRE8gbWVzc2FnZVxuICAgICAgICB9XG5cbiAgICAgICAgd2hpbGUgKCsraSA8IGxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKGkgaW4gc2VsZikge1xuICAgICAgICAgICAgICAgIC8vIEludm9rZSB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gd2l0aCBjYWxsLCBwYXNzaW5nIGFyZ3VtZW50czpcbiAgICAgICAgICAgICAgICAvLyBjb250ZXh0LCBwcm9wZXJ0eSB2YWx1ZSwgcHJvcGVydHkga2V5LCB0aGlzQXJnIG9iamVjdFxuICAgICAgICAgICAgICAgIC8vIGNvbnRleHRcbiAgICAgICAgICAgICAgICBmdW4uY2FsbCh0aGlzcCwgc2VsZltpXSwgaSwgb2JqZWN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0sICFwcm9wZXJseUJveGVzQ29udGV4dChBcnJheVByb3RvdHlwZS5mb3JFYWNoKSk7XG5cbi8vIEVTNSAxNS40LjQuMTRcbi8vIGh0dHA6Ly9lczUuZ2l0aHViLmNvbS8jeDE1LjQuNC4xNFxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4vSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvQXJyYXkvaW5kZXhPZlxudmFyIGhhc0ZpcmVmb3gySW5kZXhPZkJ1ZyA9IEFycmF5LnByb3RvdHlwZS5pbmRleE9mICYmIFswLCAxXS5pbmRleE9mKDEsIDIpICE9PSAtMTtcbmRlZmluZVByb3BlcnRpZXMoQXJyYXlQcm90b3R5cGUsIHtcbiAgICBpbmRleE9mOiBmdW5jdGlvbiBpbmRleE9mKHNvdWdodCAvKiwgZnJvbUluZGV4ICovICkge1xuICAgICAgICB2YXIgc2VsZiA9IHNwbGl0U3RyaW5nICYmIGlzU3RyaW5nKHRoaXMpID8gdGhpcy5zcGxpdCgnJykgOiB0b09iamVjdCh0aGlzKSxcbiAgICAgICAgICAgIGxlbmd0aCA9IHNlbGYubGVuZ3RoID4+PiAwO1xuXG4gICAgICAgIGlmICghbGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgaSA9IHRvSW50ZWdlcihhcmd1bWVudHNbMV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaGFuZGxlIG5lZ2F0aXZlIGluZGljZXNcbiAgICAgICAgaSA9IGkgPj0gMCA/IGkgOiBNYXRoLm1heCgwLCBsZW5ndGggKyBpKTtcbiAgICAgICAgZm9yICg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGkgaW4gc2VsZiAmJiBzZWxmW2ldID09PSBzb3VnaHQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxufSwgaGFzRmlyZWZveDJJbmRleE9mQnVnKTtcblxuLy9cbi8vIFN0cmluZ1xuLy8gPT09PT09XG4vL1xuXG4vLyBFUzUgMTUuNS40LjE0XG4vLyBodHRwOi8vZXM1LmdpdGh1Yi5jb20vI3gxNS41LjQuMTRcblxuLy8gW2J1Z2ZpeCwgSUUgbHQgOSwgZmlyZWZveCA0LCBLb25xdWVyb3IsIE9wZXJhLCBvYnNjdXJlIGJyb3dzZXJzXVxuLy8gTWFueSBicm93c2VycyBkbyBub3Qgc3BsaXQgcHJvcGVybHkgd2l0aCByZWd1bGFyIGV4cHJlc3Npb25zIG9yIHRoZXlcbi8vIGRvIG5vdCBwZXJmb3JtIHRoZSBzcGxpdCBjb3JyZWN0bHkgdW5kZXIgb2JzY3VyZSBjb25kaXRpb25zLlxuLy8gU2VlIGh0dHA6Ly9ibG9nLnN0ZXZlbmxldml0aGFuLmNvbS9hcmNoaXZlcy9jcm9zcy1icm93c2VyLXNwbGl0XG4vLyBJJ3ZlIHRlc3RlZCBpbiBtYW55IGJyb3dzZXJzIGFuZCB0aGlzIHNlZW1zIHRvIGNvdmVyIHRoZSBkZXZpYW50IG9uZXM6XG4vLyAgICAnYWInLnNwbGl0KC8oPzphYikqLykgc2hvdWxkIGJlIFtcIlwiLCBcIlwiXSwgbm90IFtcIlwiXVxuLy8gICAgJy4nLnNwbGl0KC8oLj8pKC4/KS8pIHNob3VsZCBiZSBbXCJcIiwgXCIuXCIsIFwiXCIsIFwiXCJdLCBub3QgW1wiXCIsIFwiXCJdXG4vLyAgICAndGVzc3QnLnNwbGl0KC8ocykqLykgc2hvdWxkIGJlIFtcInRcIiwgdW5kZWZpbmVkLCBcImVcIiwgXCJzXCIsIFwidFwiXSwgbm90XG4vLyAgICAgICBbdW5kZWZpbmVkLCBcInRcIiwgdW5kZWZpbmVkLCBcImVcIiwgLi4uXVxuLy8gICAgJycuc3BsaXQoLy4/Lykgc2hvdWxkIGJlIFtdLCBub3QgW1wiXCJdXG4vLyAgICAnLicuc3BsaXQoLygpKCkvKSBzaG91bGQgYmUgW1wiLlwiXSwgbm90IFtcIlwiLCBcIlwiLCBcIi5cIl1cblxudmFyIHN0cmluZ19zcGxpdCA9IFN0cmluZ1Byb3RvdHlwZS5zcGxpdDtcbmlmIChcbiAgICAnYWInLnNwbGl0KC8oPzphYikqLykubGVuZ3RoICE9PSAyIHx8XG4gICAgJy4nLnNwbGl0KC8oLj8pKC4/KS8pLmxlbmd0aCAhPT0gNCB8fFxuICAgICd0ZXNzdCcuc3BsaXQoLyhzKSovKVsxXSA9PT0gJ3QnIHx8XG4gICAgJ3Rlc3QnLnNwbGl0KC8oPzopLywgLTEpLmxlbmd0aCAhPT0gNCB8fFxuICAgICcnLnNwbGl0KC8uPy8pLmxlbmd0aCB8fFxuICAgICcuJy5zcGxpdCgvKCkoKS8pLmxlbmd0aCA+IDFcbikge1xuICAgIChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjb21wbGlhbnRFeGVjTnBjZyA9IC8oKT8/Ly5leGVjKCcnKVsxXSA9PT0gdm9pZCAwOyAvLyBOUENHOiBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cFxuXG4gICAgICAgIFN0cmluZ1Byb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICAgICAgICB2YXIgc3RyaW5nID0gdGhpcztcbiAgICAgICAgICAgIGlmIChzZXBhcmF0b3IgPT09IHZvaWQgMCAmJiBsaW1pdCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gSWYgYHNlcGFyYXRvcmAgaXMgbm90IGEgcmVnZXgsIHVzZSBuYXRpdmUgc3BsaXRcbiAgICAgICAgICAgIGlmIChfdG9TdHJpbmcuY2FsbChzZXBhcmF0b3IpICE9PSAnW29iamVjdCBSZWdFeHBdJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmdfc3BsaXQuY2FsbCh0aGlzLCBzZXBhcmF0b3IsIGxpbWl0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG91dHB1dCA9IFtdLFxuICAgICAgICAgICAgICAgIGZsYWdzID0gKHNlcGFyYXRvci5pZ25vcmVDYXNlID8gJ2knIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3IubXVsdGlsaW5lICA/ICdtJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLmV4dGVuZGVkICAgPyAneCcgOiAnJykgKyAvLyBQcm9wb3NlZCBmb3IgRVM2XG4gICAgICAgICAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLnN0aWNreSAgICAgPyAneScgOiAnJyksIC8vIEZpcmVmb3ggMytcbiAgICAgICAgICAgICAgICBsYXN0TGFzdEluZGV4ID0gMCxcbiAgICAgICAgICAgICAgICAvLyBNYWtlIGBnbG9iYWxgIGFuZCBhdm9pZCBgbGFzdEluZGV4YCBpc3N1ZXMgYnkgd29ya2luZyB3aXRoIGEgY29weVxuICAgICAgICAgICAgICAgIHNlcGFyYXRvcjIsIG1hdGNoLCBsYXN0SW5kZXgsIGxhc3RMZW5ndGg7XG4gICAgICAgICAgICBzZXBhcmF0b3IgPSBuZXcgUmVnRXhwKHNlcGFyYXRvci5zb3VyY2UsIGZsYWdzICsgJ2cnKTtcbiAgICAgICAgICAgIHN0cmluZyArPSAnJzsgLy8gVHlwZS1jb252ZXJ0XG4gICAgICAgICAgICBpZiAoIWNvbXBsaWFudEV4ZWNOcGNnKSB7XG4gICAgICAgICAgICAgICAgLy8gRG9lc24ndCBuZWVkIGZsYWdzIGd5LCBidXQgdGhleSBkb24ndCBodXJ0XG4gICAgICAgICAgICAgICAgc2VwYXJhdG9yMiA9IG5ldyBSZWdFeHAoJ14nICsgc2VwYXJhdG9yLnNvdXJjZSArICckKD8hXFxcXHMpJywgZmxhZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLyogVmFsdWVzIGZvciBgbGltaXRgLCBwZXIgdGhlIHNwZWM6XG4gICAgICAgICAgICAgKiBJZiB1bmRlZmluZWQ6IDQyOTQ5NjcyOTUgLy8gTWF0aC5wb3coMiwgMzIpIC0gMVxuICAgICAgICAgICAgICogSWYgMCwgSW5maW5pdHksIG9yIE5hTjogMFxuICAgICAgICAgICAgICogSWYgcG9zaXRpdmUgbnVtYmVyOiBsaW1pdCA9IE1hdGguZmxvb3IobGltaXQpOyBpZiAobGltaXQgPiA0Mjk0OTY3Mjk1KSBsaW1pdCAtPSA0Mjk0OTY3Mjk2O1xuICAgICAgICAgICAgICogSWYgbmVnYXRpdmUgbnVtYmVyOiA0Mjk0OTY3Mjk2IC0gTWF0aC5mbG9vcihNYXRoLmFicyhsaW1pdCkpXG4gICAgICAgICAgICAgKiBJZiBvdGhlcjogVHlwZS1jb252ZXJ0LCB0aGVuIHVzZSB0aGUgYWJvdmUgcnVsZXNcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgbGltaXQgPSBsaW1pdCA9PT0gdm9pZCAwID9cbiAgICAgICAgICAgICAgICAtMSA+Pj4gMCA6IC8vIE1hdGgucG93KDIsIDMyKSAtIDFcbiAgICAgICAgICAgICAgICBUb1VpbnQzMihsaW1pdCk7XG4gICAgICAgICAgICB3aGlsZSAobWF0Y2ggPSBzZXBhcmF0b3IuZXhlYyhzdHJpbmcpKSB7XG4gICAgICAgICAgICAgICAgLy8gYHNlcGFyYXRvci5sYXN0SW5kZXhgIGlzIG5vdCByZWxpYWJsZSBjcm9zcy1icm93c2VyXG4gICAgICAgICAgICAgICAgbGFzdEluZGV4ID0gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgaWYgKGxhc3RJbmRleCA+IGxhc3RMYXN0SW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIEZpeCBicm93c2VycyB3aG9zZSBgZXhlY2AgbWV0aG9kcyBkb24ndCBjb25zaXN0ZW50bHkgcmV0dXJuIGB1bmRlZmluZWRgIGZvclxuICAgICAgICAgICAgICAgICAgICAvLyBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cHNcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFjb21wbGlhbnRFeGVjTnBjZyAmJiBtYXRjaC5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRjaFswXS5yZXBsYWNlKHNlcGFyYXRvcjIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGggLSAyOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaFtpXSA9IHZvaWQgMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaC5sZW5ndGggPiAxICYmIG1hdGNoLmluZGV4IDwgc3RyaW5nLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXlQcm90b3R5cGUucHVzaC5hcHBseShvdXRwdXQsIG1hdGNoLnNsaWNlKDEpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBsYXN0TGVuZ3RoID0gbWF0Y2hbMF0ubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICBsYXN0TGFzdEluZGV4ID0gbGFzdEluZGV4O1xuICAgICAgICAgICAgICAgICAgICBpZiAob3V0cHV0Lmxlbmd0aCA+PSBsaW1pdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHNlcGFyYXRvci5sYXN0SW5kZXggPT09IG1hdGNoLmluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIHNlcGFyYXRvci5sYXN0SW5kZXgrKzsgLy8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChsYXN0TGFzdEluZGV4ID09PSBzdHJpbmcubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgaWYgKGxhc3RMZW5ndGggfHwgIXNlcGFyYXRvci50ZXN0KCcnKSkge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXQucHVzaCgnJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBvdXRwdXQucHVzaChzdHJpbmcuc2xpY2UobGFzdExhc3RJbmRleCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG91dHB1dC5sZW5ndGggPiBsaW1pdCA/IG91dHB1dC5zbGljZSgwLCBsaW1pdCkgOiBvdXRwdXQ7XG4gICAgICAgIH07XG4gICAgfSgpKTtcblxuLy8gW2J1Z2ZpeCwgY2hyb21lXVxuLy8gSWYgc2VwYXJhdG9yIGlzIHVuZGVmaW5lZCwgdGhlbiB0aGUgcmVzdWx0IGFycmF5IGNvbnRhaW5zIGp1c3Qgb25lIFN0cmluZyxcbi8vIHdoaWNoIGlzIHRoZSB0aGlzIHZhbHVlIChjb252ZXJ0ZWQgdG8gYSBTdHJpbmcpLiBJZiBsaW1pdCBpcyBub3QgdW5kZWZpbmVkLFxuLy8gdGhlbiB0aGUgb3V0cHV0IGFycmF5IGlzIHRydW5jYXRlZCBzbyB0aGF0IGl0IGNvbnRhaW5zIG5vIG1vcmUgdGhhbiBsaW1pdFxuLy8gZWxlbWVudHMuXG4vLyBcIjBcIi5zcGxpdCh1bmRlZmluZWQsIDApIC0+IFtdXG59IGVsc2UgaWYgKCcwJy5zcGxpdCh2b2lkIDAsIDApLmxlbmd0aCkge1xuICAgIFN0cmluZ1Byb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uIHNwbGl0KHNlcGFyYXRvciwgbGltaXQpIHtcbiAgICAgICAgaWYgKHNlcGFyYXRvciA9PT0gdm9pZCAwICYmIGxpbWl0ID09PSAwKSB7IHJldHVybiBbXTsgfVxuICAgICAgICByZXR1cm4gc3RyaW5nX3NwbGl0LmNhbGwodGhpcywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgfTtcbn1cblxuLy8gRVM1IDE1LjUuNC4yMFxuLy8gd2hpdGVzcGFjZSBmcm9tOiBodHRwOi8vZXM1LmdpdGh1Yi5pby8jeDE1LjUuNC4yMFxudmFyIHdzID0gJ1xceDA5XFx4MEFcXHgwQlxceDBDXFx4MERcXHgyMFxceEEwXFx1MTY4MFxcdTE4MEVcXHUyMDAwXFx1MjAwMVxcdTIwMDJcXHUyMDAzJyArXG4gICAgJ1xcdTIwMDRcXHUyMDA1XFx1MjAwNlxcdTIwMDdcXHUyMDA4XFx1MjAwOVxcdTIwMEFcXHUyMDJGXFx1MjA1RlxcdTMwMDBcXHUyMDI4JyArXG4gICAgJ1xcdTIwMjlcXHVGRUZGJztcbnZhciB6ZXJvV2lkdGggPSAnXFx1MjAwYic7XG52YXIgd3NSZWdleENoYXJzID0gJ1snICsgd3MgKyAnXSc7XG52YXIgdHJpbUJlZ2luUmVnZXhwID0gbmV3IFJlZ0V4cCgnXicgKyB3c1JlZ2V4Q2hhcnMgKyB3c1JlZ2V4Q2hhcnMgKyAnKicpO1xudmFyIHRyaW1FbmRSZWdleHAgPSBuZXcgUmVnRXhwKHdzUmVnZXhDaGFycyArIHdzUmVnZXhDaGFycyArICcqJCcpO1xudmFyIGhhc1RyaW1XaGl0ZXNwYWNlQnVnID0gU3RyaW5nUHJvdG90eXBlLnRyaW0gJiYgKHdzLnRyaW0oKSB8fCAhemVyb1dpZHRoLnRyaW0oKSk7XG5kZWZpbmVQcm9wZXJ0aWVzKFN0cmluZ1Byb3RvdHlwZSwge1xuICAgIC8vIGh0dHA6Ly9ibG9nLnN0ZXZlbmxldml0aGFuLmNvbS9hcmNoaXZlcy9mYXN0ZXItdHJpbS1qYXZhc2NyaXB0XG4gICAgLy8gaHR0cDovL3BlcmZlY3Rpb25raWxscy5jb20vd2hpdGVzcGFjZS1kZXZpYXRpb25zL1xuICAgIHRyaW06IGZ1bmN0aW9uIHRyaW0oKSB7XG4gICAgICAgIGlmICh0aGlzID09PSB2b2lkIDAgfHwgdGhpcyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcImNhbid0IGNvbnZlcnQgXCIgKyB0aGlzICsgJyB0byBvYmplY3QnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gU3RyaW5nKHRoaXMpLnJlcGxhY2UodHJpbUJlZ2luUmVnZXhwLCAnJykucmVwbGFjZSh0cmltRW5kUmVnZXhwLCAnJyk7XG4gICAgfVxufSwgaGFzVHJpbVdoaXRlc3BhY2VCdWcpO1xuXG4vLyBFQ01BLTI2MiwgM3JkIEIuMi4zXG4vLyBOb3QgYW4gRUNNQVNjcmlwdCBzdGFuZGFyZCwgYWx0aG91Z2ggRUNNQVNjcmlwdCAzcmQgRWRpdGlvbiBoYXMgYVxuLy8gbm9uLW5vcm1hdGl2ZSBzZWN0aW9uIHN1Z2dlc3RpbmcgdW5pZm9ybSBzZW1hbnRpY3MgYW5kIGl0IHNob3VsZCBiZVxuLy8gbm9ybWFsaXplZCBhY3Jvc3MgYWxsIGJyb3dzZXJzXG4vLyBbYnVnZml4LCBJRSBsdCA5XSBJRSA8IDkgc3Vic3RyKCkgd2l0aCBuZWdhdGl2ZSB2YWx1ZSBub3Qgd29ya2luZyBpbiBJRVxudmFyIHN0cmluZ19zdWJzdHIgPSBTdHJpbmdQcm90b3R5cGUuc3Vic3RyO1xudmFyIGhhc05lZ2F0aXZlU3Vic3RyQnVnID0gJycuc3Vic3RyICYmICcwYicuc3Vic3RyKC0xKSAhPT0gJ2InO1xuZGVmaW5lUHJvcGVydGllcyhTdHJpbmdQcm90b3R5cGUsIHtcbiAgICBzdWJzdHI6IGZ1bmN0aW9uIHN1YnN0cihzdGFydCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBzdHJpbmdfc3Vic3RyLmNhbGwoXG4gICAgICAgICAgICB0aGlzLFxuICAgICAgICAgICAgc3RhcnQgPCAwID8gKChzdGFydCA9IHRoaXMubGVuZ3RoICsgc3RhcnQpIDwgMCA/IDAgOiBzdGFydCkgOiBzdGFydCxcbiAgICAgICAgICAgIGxlbmd0aFxuICAgICAgICApO1xuICAgIH1cbn0sIGhhc05lZ2F0aXZlU3Vic3RyQnVnKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3NoaW1zLmpzXG4vLyBtb2R1bGUgaWQgPSA1NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///56\n");

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar JSON3 = __webpack_require__(6);\n\n// Some extra characters that Chrome gets wrong, and substitutes with\n// something else on the wire.\nvar extraEscapable = /[\\x00-\\x1f\\ud800-\\udfff\\ufffe\\uffff\\u0300-\\u0333\\u033d-\\u0346\\u034a-\\u034c\\u0350-\\u0352\\u0357-\\u0358\\u035c-\\u0362\\u0374\\u037e\\u0387\\u0591-\\u05af\\u05c4\\u0610-\\u0617\\u0653-\\u0654\\u0657-\\u065b\\u065d-\\u065e\\u06df-\\u06e2\\u06eb-\\u06ec\\u0730\\u0732-\\u0733\\u0735-\\u0736\\u073a\\u073d\\u073f-\\u0741\\u0743\\u0745\\u0747\\u07eb-\\u07f1\\u0951\\u0958-\\u095f\\u09dc-\\u09dd\\u09df\\u0a33\\u0a36\\u0a59-\\u0a5b\\u0a5e\\u0b5c-\\u0b5d\\u0e38-\\u0e39\\u0f43\\u0f4d\\u0f52\\u0f57\\u0f5c\\u0f69\\u0f72-\\u0f76\\u0f78\\u0f80-\\u0f83\\u0f93\\u0f9d\\u0fa2\\u0fa7\\u0fac\\u0fb9\\u1939-\\u193a\\u1a17\\u1b6b\\u1cda-\\u1cdb\\u1dc0-\\u1dcf\\u1dfc\\u1dfe\\u1f71\\u1f73\\u1f75\\u1f77\\u1f79\\u1f7b\\u1f7d\\u1fbb\\u1fbe\\u1fc9\\u1fcb\\u1fd3\\u1fdb\\u1fe3\\u1feb\\u1fee-\\u1fef\\u1ff9\\u1ffb\\u1ffd\\u2000-\\u2001\\u20d0-\\u20d1\\u20d4-\\u20d7\\u20e7-\\u20e9\\u2126\\u212a-\\u212b\\u2329-\\u232a\\u2adc\\u302b-\\u302c\\uaab2-\\uaab3\\uf900-\\ufa0d\\ufa10\\ufa12\\ufa15-\\ufa1e\\ufa20\\ufa22\\ufa25-\\ufa26\\ufa2a-\\ufa2d\\ufa30-\\ufa6d\\ufa70-\\ufad9\\ufb1d\\ufb1f\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufb4e\\ufff0-\\uffff]/g\n  , extraLookup;\n\n// This may be quite slow, so let's delay until user actually uses bad\n// characters.\nvar unrollLookup = function(escapable) {\n  var i;\n  var unrolled = {};\n  var c = [];\n  for (i = 0; i < 65536; i++) {\n    c.push( String.fromCharCode(i) );\n  }\n  escapable.lastIndex = 0;\n  c.join('').replace(escapable, function(a) {\n    unrolled[ a ] = '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    return '';\n  });\n  escapable.lastIndex = 0;\n  return unrolled;\n};\n\n// Quote string, also taking care of unicode characters that browsers\n// often break. Especially, take care of unicode surrogates:\n// http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates\nmodule.exports = {\n  quote: function(string) {\n    var quoted = JSON3.stringify(string);\n\n    // In most cases this should be very fast and good enough.\n    extraEscapable.lastIndex = 0;\n    if (!extraEscapable.test(quoted)) {\n      return quoted;\n    }\n\n    if (!extraLookup) {\n      extraLookup = unrollLookup(extraEscapable);\n    }\n\n    return quoted.replace(extraEscapable, function(a) {\n      return extraLookup[a];\n    });\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvZXNjYXBlLmpzPzJmMjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxXQUFXO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsImZpbGUiOiI1Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEpTT04zID0gcmVxdWlyZSgnanNvbjMnKTtcblxuLy8gU29tZSBleHRyYSBjaGFyYWN0ZXJzIHRoYXQgQ2hyb21lIGdldHMgd3JvbmcsIGFuZCBzdWJzdGl0dXRlcyB3aXRoXG4vLyBzb21ldGhpbmcgZWxzZSBvbiB0aGUgd2lyZS5cbnZhciBleHRyYUVzY2FwYWJsZSA9IC9bXFx4MDAtXFx4MWZcXHVkODAwLVxcdWRmZmZcXHVmZmZlXFx1ZmZmZlxcdTAzMDAtXFx1MDMzM1xcdTAzM2QtXFx1MDM0NlxcdTAzNGEtXFx1MDM0Y1xcdTAzNTAtXFx1MDM1MlxcdTAzNTctXFx1MDM1OFxcdTAzNWMtXFx1MDM2MlxcdTAzNzRcXHUwMzdlXFx1MDM4N1xcdTA1OTEtXFx1MDVhZlxcdTA1YzRcXHUwNjEwLVxcdTA2MTdcXHUwNjUzLVxcdTA2NTRcXHUwNjU3LVxcdTA2NWJcXHUwNjVkLVxcdTA2NWVcXHUwNmRmLVxcdTA2ZTJcXHUwNmViLVxcdTA2ZWNcXHUwNzMwXFx1MDczMi1cXHUwNzMzXFx1MDczNS1cXHUwNzM2XFx1MDczYVxcdTA3M2RcXHUwNzNmLVxcdTA3NDFcXHUwNzQzXFx1MDc0NVxcdTA3NDdcXHUwN2ViLVxcdTA3ZjFcXHUwOTUxXFx1MDk1OC1cXHUwOTVmXFx1MDlkYy1cXHUwOWRkXFx1MDlkZlxcdTBhMzNcXHUwYTM2XFx1MGE1OS1cXHUwYTViXFx1MGE1ZVxcdTBiNWMtXFx1MGI1ZFxcdTBlMzgtXFx1MGUzOVxcdTBmNDNcXHUwZjRkXFx1MGY1MlxcdTBmNTdcXHUwZjVjXFx1MGY2OVxcdTBmNzItXFx1MGY3NlxcdTBmNzhcXHUwZjgwLVxcdTBmODNcXHUwZjkzXFx1MGY5ZFxcdTBmYTJcXHUwZmE3XFx1MGZhY1xcdTBmYjlcXHUxOTM5LVxcdTE5M2FcXHUxYTE3XFx1MWI2YlxcdTFjZGEtXFx1MWNkYlxcdTFkYzAtXFx1MWRjZlxcdTFkZmNcXHUxZGZlXFx1MWY3MVxcdTFmNzNcXHUxZjc1XFx1MWY3N1xcdTFmNzlcXHUxZjdiXFx1MWY3ZFxcdTFmYmJcXHUxZmJlXFx1MWZjOVxcdTFmY2JcXHUxZmQzXFx1MWZkYlxcdTFmZTNcXHUxZmViXFx1MWZlZS1cXHUxZmVmXFx1MWZmOVxcdTFmZmJcXHUxZmZkXFx1MjAwMC1cXHUyMDAxXFx1MjBkMC1cXHUyMGQxXFx1MjBkNC1cXHUyMGQ3XFx1MjBlNy1cXHUyMGU5XFx1MjEyNlxcdTIxMmEtXFx1MjEyYlxcdTIzMjktXFx1MjMyYVxcdTJhZGNcXHUzMDJiLVxcdTMwMmNcXHVhYWIyLVxcdWFhYjNcXHVmOTAwLVxcdWZhMGRcXHVmYTEwXFx1ZmExMlxcdWZhMTUtXFx1ZmExZVxcdWZhMjBcXHVmYTIyXFx1ZmEyNS1cXHVmYTI2XFx1ZmEyYS1cXHVmYTJkXFx1ZmEzMC1cXHVmYTZkXFx1ZmE3MC1cXHVmYWQ5XFx1ZmIxZFxcdWZiMWZcXHVmYjJhLVxcdWZiMzZcXHVmYjM4LVxcdWZiM2NcXHVmYjNlXFx1ZmI0MC1cXHVmYjQxXFx1ZmI0My1cXHVmYjQ0XFx1ZmI0Ni1cXHVmYjRlXFx1ZmZmMC1cXHVmZmZmXS9nXG4gICwgZXh0cmFMb29rdXA7XG5cbi8vIFRoaXMgbWF5IGJlIHF1aXRlIHNsb3csIHNvIGxldCdzIGRlbGF5IHVudGlsIHVzZXIgYWN0dWFsbHkgdXNlcyBiYWRcbi8vIGNoYXJhY3RlcnMuXG52YXIgdW5yb2xsTG9va3VwID0gZnVuY3Rpb24oZXNjYXBhYmxlKSB7XG4gIHZhciBpO1xuICB2YXIgdW5yb2xsZWQgPSB7fTtcbiAgdmFyIGMgPSBbXTtcbiAgZm9yIChpID0gMDsgaSA8IDY1NTM2OyBpKyspIHtcbiAgICBjLnB1c2goIFN0cmluZy5mcm9tQ2hhckNvZGUoaSkgKTtcbiAgfVxuICBlc2NhcGFibGUubGFzdEluZGV4ID0gMDtcbiAgYy5qb2luKCcnKS5yZXBsYWNlKGVzY2FwYWJsZSwgZnVuY3Rpb24oYSkge1xuICAgIHVucm9sbGVkWyBhIF0gPSAnXFxcXHUnICsgKCcwMDAwJyArIGEuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikpLnNsaWNlKC00KTtcbiAgICByZXR1cm4gJyc7XG4gIH0pO1xuICBlc2NhcGFibGUubGFzdEluZGV4ID0gMDtcbiAgcmV0dXJuIHVucm9sbGVkO1xufTtcblxuLy8gUXVvdGUgc3RyaW5nLCBhbHNvIHRha2luZyBjYXJlIG9mIHVuaWNvZGUgY2hhcmFjdGVycyB0aGF0IGJyb3dzZXJzXG4vLyBvZnRlbiBicmVhay4gRXNwZWNpYWxseSwgdGFrZSBjYXJlIG9mIHVuaWNvZGUgc3Vycm9nYXRlczpcbi8vIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTWFwcGluZ19vZl9Vbmljb2RlX2NoYXJhY3RlcnMjU3Vycm9nYXRlc1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHF1b3RlOiBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICB2YXIgcXVvdGVkID0gSlNPTjMuc3RyaW5naWZ5KHN0cmluZyk7XG5cbiAgICAvLyBJbiBtb3N0IGNhc2VzIHRoaXMgc2hvdWxkIGJlIHZlcnkgZmFzdCBhbmQgZ29vZCBlbm91Z2guXG4gICAgZXh0cmFFc2NhcGFibGUubGFzdEluZGV4ID0gMDtcbiAgICBpZiAoIWV4dHJhRXNjYXBhYmxlLnRlc3QocXVvdGVkKSkge1xuICAgICAgcmV0dXJuIHF1b3RlZDtcbiAgICB9XG5cbiAgICBpZiAoIWV4dHJhTG9va3VwKSB7XG4gICAgICBleHRyYUxvb2t1cCA9IHVucm9sbExvb2t1cChleHRyYUVzY2FwYWJsZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHF1b3RlZC5yZXBsYWNlKGV4dHJhRXNjYXBhYmxlLCBmdW5jdGlvbihhKSB7XG4gICAgICByZXR1cm4gZXh0cmFMb29rdXBbYV07XG4gICAgfSk7XG4gIH1cbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi91dGlscy9lc2NhcGUuanNcbi8vIG1vZHVsZSBpZCA9IDU3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///57\n");

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:utils:transport');\n}\n\nmodule.exports = function(availableTransports) {\n  return {\n    filterToEnabled: function(transportsWhitelist, info) {\n      var transports = {\n        main: []\n      , facade: []\n      };\n      if (!transportsWhitelist) {\n        transportsWhitelist = [];\n      } else if (typeof transportsWhitelist === 'string') {\n        transportsWhitelist = [transportsWhitelist];\n      }\n\n      availableTransports.forEach(function(trans) {\n        if (!trans) {\n          return;\n        }\n\n        if (trans.transportName === 'websocket' && info.websocket === false) {\n          debug('disabled from server', 'websocket');\n          return;\n        }\n\n        if (transportsWhitelist.length &&\n            transportsWhitelist.indexOf(trans.transportName) === -1) {\n          debug('not in whitelist', trans.transportName);\n          return;\n        }\n\n        if (trans.enabled(info)) {\n          debug('enabled', trans.transportName);\n          transports.main.push(trans);\n          if (trans.facadeTransport) {\n            transports.facade.push(trans.facadeTransport);\n          }\n        } else {\n          debug('disabled', trans.transportName);\n        }\n      });\n      return transports;\n    }\n  };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvdHJhbnNwb3J0LmpzPzMxMWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IitDQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBkZWJ1ZyA9IGZ1bmN0aW9uKCkge307XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ3NvY2tqcy1jbGllbnQ6dXRpbHM6dHJhbnNwb3J0Jyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYXZhaWxhYmxlVHJhbnNwb3J0cykge1xuICByZXR1cm4ge1xuICAgIGZpbHRlclRvRW5hYmxlZDogZnVuY3Rpb24odHJhbnNwb3J0c1doaXRlbGlzdCwgaW5mbykge1xuICAgICAgdmFyIHRyYW5zcG9ydHMgPSB7XG4gICAgICAgIG1haW46IFtdXG4gICAgICAsIGZhY2FkZTogW11cbiAgICAgIH07XG4gICAgICBpZiAoIXRyYW5zcG9ydHNXaGl0ZWxpc3QpIHtcbiAgICAgICAgdHJhbnNwb3J0c1doaXRlbGlzdCA9IFtdO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdHJhbnNwb3J0c1doaXRlbGlzdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgdHJhbnNwb3J0c1doaXRlbGlzdCA9IFt0cmFuc3BvcnRzV2hpdGVsaXN0XTtcbiAgICAgIH1cblxuICAgICAgYXZhaWxhYmxlVHJhbnNwb3J0cy5mb3JFYWNoKGZ1bmN0aW9uKHRyYW5zKSB7XG4gICAgICAgIGlmICghdHJhbnMpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHJhbnMudHJhbnNwb3J0TmFtZSA9PT0gJ3dlYnNvY2tldCcgJiYgaW5mby53ZWJzb2NrZXQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgZGVidWcoJ2Rpc2FibGVkIGZyb20gc2VydmVyJywgJ3dlYnNvY2tldCcpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0cmFuc3BvcnRzV2hpdGVsaXN0Lmxlbmd0aCAmJlxuICAgICAgICAgICAgdHJhbnNwb3J0c1doaXRlbGlzdC5pbmRleE9mKHRyYW5zLnRyYW5zcG9ydE5hbWUpID09PSAtMSkge1xuICAgICAgICAgIGRlYnVnKCdub3QgaW4gd2hpdGVsaXN0JywgdHJhbnMudHJhbnNwb3J0TmFtZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRyYW5zLmVuYWJsZWQoaW5mbykpIHtcbiAgICAgICAgICBkZWJ1ZygnZW5hYmxlZCcsIHRyYW5zLnRyYW5zcG9ydE5hbWUpO1xuICAgICAgICAgIHRyYW5zcG9ydHMubWFpbi5wdXNoKHRyYW5zKTtcbiAgICAgICAgICBpZiAodHJhbnMuZmFjYWRlVHJhbnNwb3J0KSB7XG4gICAgICAgICAgICB0cmFuc3BvcnRzLmZhY2FkZS5wdXNoKHRyYW5zLmZhY2FkZVRyYW5zcG9ydCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRlYnVnKCdkaXNhYmxlZCcsIHRyYW5zLnRyYW5zcG9ydE5hbWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB0cmFuc3BvcnRzO1xuICAgIH1cbiAgfTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi91dGlscy90cmFuc3BvcnQuanNcbi8vIG1vZHVsZSBpZCA9IDU4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///58\n");

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar logObject = {};\n['log', 'debug', 'warn'].forEach(function (level) {\n  var levelExists = global.console && global.console[level] && global.console[level].apply;\n  logObject[level] = levelExists ? function () {\n    return global.console[level].apply(global.console, arguments);\n  } : (level === 'log' ? function () {} : logObject.log);\n});\n\nmodule.exports = logObject;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdXRpbHMvbG9nLmpzPzg2MzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjhDQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLG9DQUFvQztBQUN2QyxDQUFDOztBQUVEIiwiZmlsZSI6IjU5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgbG9nT2JqZWN0ID0ge307XG5bJ2xvZycsICdkZWJ1ZycsICd3YXJuJ10uZm9yRWFjaChmdW5jdGlvbiAobGV2ZWwpIHtcbiAgdmFyIGxldmVsRXhpc3RzID0gZ2xvYmFsLmNvbnNvbGUgJiYgZ2xvYmFsLmNvbnNvbGVbbGV2ZWxdICYmIGdsb2JhbC5jb25zb2xlW2xldmVsXS5hcHBseTtcbiAgbG9nT2JqZWN0W2xldmVsXSA9IGxldmVsRXhpc3RzID8gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBnbG9iYWwuY29uc29sZVtsZXZlbF0uYXBwbHkoZ2xvYmFsLmNvbnNvbGUsIGFyZ3VtZW50cyk7XG4gIH0gOiAobGV2ZWwgPT09ICdsb2cnID8gZnVuY3Rpb24gKCkge30gOiBsb2dPYmplY3QubG9nKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGxvZ09iamVjdDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3V0aWxzL2xvZy5qc1xuLy8gbW9kdWxlIGlkID0gNTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///59\n");

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , Event = __webpack_require__(18)\n  ;\n\nfunction CloseEvent() {\n  Event.call(this);\n  this.initEvent('close', false, false);\n  this.wasClean = false;\n  this.code = 0;\n  this.reason = '';\n}\n\ninherits(CloseEvent, Event);\n\nmodule.exports = CloseEvent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvZXZlbnQvY2xvc2UuanM/MDg4ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEiLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBFdmVudCA9IHJlcXVpcmUoJy4vZXZlbnQnKVxuICA7XG5cbmZ1bmN0aW9uIENsb3NlRXZlbnQoKSB7XG4gIEV2ZW50LmNhbGwodGhpcyk7XG4gIHRoaXMuaW5pdEV2ZW50KCdjbG9zZScsIGZhbHNlLCBmYWxzZSk7XG4gIHRoaXMud2FzQ2xlYW4gPSBmYWxzZTtcbiAgdGhpcy5jb2RlID0gMDtcbiAgdGhpcy5yZWFzb24gPSAnJztcbn1cblxuaW5oZXJpdHMoQ2xvc2VFdmVudCwgRXZlbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENsb3NlRXZlbnQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9ldmVudC9jbG9zZS5qc1xuLy8gbW9kdWxlIGlkID0gNjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///60\n");

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar inherits = __webpack_require__(0)\n  , Event = __webpack_require__(18)\n  ;\n\nfunction TransportMessageEvent(data) {\n  Event.call(this);\n  this.initEvent('message', false, false);\n  this.data = data;\n}\n\ninherits(TransportMessageEvent, Event);\n\nmodule.exports = TransportMessageEvent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvZXZlbnQvdHJhbnMtbWVzc2FnZS5qcz83MDc2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwiZmlsZSI6IjYxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgRXZlbnQgPSByZXF1aXJlKCcuL2V2ZW50JylcbiAgO1xuXG5mdW5jdGlvbiBUcmFuc3BvcnRNZXNzYWdlRXZlbnQoZGF0YSkge1xuICBFdmVudC5jYWxsKHRoaXMpO1xuICB0aGlzLmluaXRFdmVudCgnbWVzc2FnZScsIGZhbHNlLCBmYWxzZSk7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG59XG5cbmluaGVyaXRzKFRyYW5zcG9ydE1lc3NhZ2VFdmVudCwgRXZlbnQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRyYW5zcG9ydE1lc3NhZ2VFdmVudDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL2V2ZW50L3RyYW5zLW1lc3NhZ2UuanNcbi8vIG1vZHVsZSBpZCA9IDYxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///61\n");

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(0)\n  , urlUtils = __webpack_require__(5)\n  , XDR = __webpack_require__(15)\n  , XHRCors = __webpack_require__(14)\n  , XHRLocal = __webpack_require__(10)\n  , XHRFake = __webpack_require__(63)\n  , InfoIframe = __webpack_require__(64)\n  , InfoAjax = __webpack_require__(32)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:info-receiver');\n}\n\nfunction InfoReceiver(baseUrl, urlInfo) {\n  debug(baseUrl);\n  var self = this;\n  EventEmitter.call(this);\n\n  setTimeout(function() {\n    self.doXhr(baseUrl, urlInfo);\n  }, 0);\n}\n\ninherits(InfoReceiver, EventEmitter);\n\n// TODO this is currently ignoring the list of available transports and the whitelist\n\nInfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {\n  // determine method of CORS support (if needed)\n  if (urlInfo.sameOrigin) {\n    return new InfoAjax(url, XHRLocal);\n  }\n  if (XHRCors.enabled) {\n    return new InfoAjax(url, XHRCors);\n  }\n  if (XDR.enabled && urlInfo.sameScheme) {\n    return new InfoAjax(url, XDR);\n  }\n  if (InfoIframe.enabled()) {\n    return new InfoIframe(baseUrl, url);\n  }\n  return new InfoAjax(url, XHRFake);\n};\n\nInfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {\n  var self = this\n    , url = urlUtils.addPath(baseUrl, '/info')\n    ;\n  debug('doXhr', url);\n\n  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);\n\n  this.timeoutRef = setTimeout(function() {\n    debug('timeout');\n    self._cleanup(false);\n    self.emit('finish');\n  }, InfoReceiver.timeout);\n\n  this.xo.once('finish', function(info, rtt) {\n    debug('finish', info, rtt);\n    self._cleanup(true);\n    self.emit('finish', info, rtt);\n  });\n};\n\nInfoReceiver.prototype._cleanup = function(wasClean) {\n  debug('_cleanup');\n  clearTimeout(this.timeoutRef);\n  this.timeoutRef = null;\n  if (!wasClean && this.xo) {\n    this.xo.close();\n  }\n  this.xo = null;\n};\n\nInfoReceiver.prototype.close = function() {\n  debug('close');\n  this.removeAllListeners();\n  this._cleanup(false);\n};\n\nInfoReceiver.timeout = 8000;\n\nmodule.exports = InfoReceiver;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvaW5mby1yZWNlaXZlci5qcz85ZWY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIrQ0FBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwiZmlsZSI6IjYyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyXG4gICwgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG4gICwgdXJsVXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL3VybCcpXG4gICwgWERSID0gcmVxdWlyZSgnLi90cmFuc3BvcnQvc2VuZGVyL3hkcicpXG4gICwgWEhSQ29ycyA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0L3NlbmRlci94aHItY29ycycpXG4gICwgWEhSTG9jYWwgPSByZXF1aXJlKCcuL3RyYW5zcG9ydC9zZW5kZXIveGhyLWxvY2FsJylcbiAgLCBYSFJGYWtlID0gcmVxdWlyZSgnLi90cmFuc3BvcnQvc2VuZGVyL3hoci1mYWtlJylcbiAgLCBJbmZvSWZyYW1lID0gcmVxdWlyZSgnLi9pbmZvLWlmcmFtZScpXG4gICwgSW5mb0FqYXggPSByZXF1aXJlKCcuL2luZm8tYWpheCcpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDppbmZvLXJlY2VpdmVyJyk7XG59XG5cbmZ1bmN0aW9uIEluZm9SZWNlaXZlcihiYXNlVXJsLCB1cmxJbmZvKSB7XG4gIGRlYnVnKGJhc2VVcmwpO1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgc2VsZi5kb1hocihiYXNlVXJsLCB1cmxJbmZvKTtcbiAgfSwgMCk7XG59XG5cbmluaGVyaXRzKEluZm9SZWNlaXZlciwgRXZlbnRFbWl0dGVyKTtcblxuLy8gVE9ETyB0aGlzIGlzIGN1cnJlbnRseSBpZ25vcmluZyB0aGUgbGlzdCBvZiBhdmFpbGFibGUgdHJhbnNwb3J0cyBhbmQgdGhlIHdoaXRlbGlzdFxuXG5JbmZvUmVjZWl2ZXIuX2dldFJlY2VpdmVyID0gZnVuY3Rpb24oYmFzZVVybCwgdXJsLCB1cmxJbmZvKSB7XG4gIC8vIGRldGVybWluZSBtZXRob2Qgb2YgQ09SUyBzdXBwb3J0IChpZiBuZWVkZWQpXG4gIGlmICh1cmxJbmZvLnNhbWVPcmlnaW4pIHtcbiAgICByZXR1cm4gbmV3IEluZm9BamF4KHVybCwgWEhSTG9jYWwpO1xuICB9XG4gIGlmIChYSFJDb3JzLmVuYWJsZWQpIHtcbiAgICByZXR1cm4gbmV3IEluZm9BamF4KHVybCwgWEhSQ29ycyk7XG4gIH1cbiAgaWYgKFhEUi5lbmFibGVkICYmIHVybEluZm8uc2FtZVNjaGVtZSkge1xuICAgIHJldHVybiBuZXcgSW5mb0FqYXgodXJsLCBYRFIpO1xuICB9XG4gIGlmIChJbmZvSWZyYW1lLmVuYWJsZWQoKSkge1xuICAgIHJldHVybiBuZXcgSW5mb0lmcmFtZShiYXNlVXJsLCB1cmwpO1xuICB9XG4gIHJldHVybiBuZXcgSW5mb0FqYXgodXJsLCBYSFJGYWtlKTtcbn07XG5cbkluZm9SZWNlaXZlci5wcm90b3R5cGUuZG9YaHIgPSBmdW5jdGlvbihiYXNlVXJsLCB1cmxJbmZvKSB7XG4gIHZhciBzZWxmID0gdGhpc1xuICAgICwgdXJsID0gdXJsVXRpbHMuYWRkUGF0aChiYXNlVXJsLCAnL2luZm8nKVxuICAgIDtcbiAgZGVidWcoJ2RvWGhyJywgdXJsKTtcblxuICB0aGlzLnhvID0gSW5mb1JlY2VpdmVyLl9nZXRSZWNlaXZlcihiYXNlVXJsLCB1cmwsIHVybEluZm8pO1xuXG4gIHRoaXMudGltZW91dFJlZiA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgZGVidWcoJ3RpbWVvdXQnKTtcbiAgICBzZWxmLl9jbGVhbnVwKGZhbHNlKTtcbiAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcpO1xuICB9LCBJbmZvUmVjZWl2ZXIudGltZW91dCk7XG5cbiAgdGhpcy54by5vbmNlKCdmaW5pc2gnLCBmdW5jdGlvbihpbmZvLCBydHQpIHtcbiAgICBkZWJ1ZygnZmluaXNoJywgaW5mbywgcnR0KTtcbiAgICBzZWxmLl9jbGVhbnVwKHRydWUpO1xuICAgIHNlbGYuZW1pdCgnZmluaXNoJywgaW5mbywgcnR0KTtcbiAgfSk7XG59O1xuXG5JbmZvUmVjZWl2ZXIucHJvdG90eXBlLl9jbGVhbnVwID0gZnVuY3Rpb24od2FzQ2xlYW4pIHtcbiAgZGVidWcoJ19jbGVhbnVwJyk7XG4gIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRSZWYpO1xuICB0aGlzLnRpbWVvdXRSZWYgPSBudWxsO1xuICBpZiAoIXdhc0NsZWFuICYmIHRoaXMueG8pIHtcbiAgICB0aGlzLnhvLmNsb3NlKCk7XG4gIH1cbiAgdGhpcy54byA9IG51bGw7XG59O1xuXG5JbmZvUmVjZWl2ZXIucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIGRlYnVnKCdjbG9zZScpO1xuICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICB0aGlzLl9jbGVhbnVwKGZhbHNlKTtcbn07XG5cbkluZm9SZWNlaXZlci50aW1lb3V0ID0gODAwMDtcblxubW9kdWxlLmV4cG9ydHMgPSBJbmZvUmVjZWl2ZXI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9pbmZvLXJlY2VpdmVyLmpzXG4vLyBtb2R1bGUgaWQgPSA2MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///62\n");

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(0)\n  ;\n\nfunction XHRFake(/* method, url, payload, opts */) {\n  var self = this;\n  EventEmitter.call(this);\n\n  this.to = setTimeout(function() {\n    self.emit('finish', 200, '{}');\n  }, XHRFake.timeout);\n}\n\ninherits(XHRFake, EventEmitter);\n\nXHRFake.prototype.close = function() {\n  clearTimeout(this.to);\n};\n\nXHRFake.timeout = 2000;\n\nmodule.exports = XHRFake;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvdHJhbnNwb3J0L3NlbmRlci94aHItZmFrZS5qcz9mNWJhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQ0FBZ0M7QUFDaEMsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSIsImZpbGUiOiI2My5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlclxuICAsIGluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKVxuICA7XG5cbmZ1bmN0aW9uIFhIUkZha2UoLyogbWV0aG9kLCB1cmwsIHBheWxvYWQsIG9wdHMgKi8pIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBFdmVudEVtaXR0ZXIuY2FsbCh0aGlzKTtcblxuICB0aGlzLnRvID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIDIwMCwgJ3t9Jyk7XG4gIH0sIFhIUkZha2UudGltZW91dCk7XG59XG5cbmluaGVyaXRzKFhIUkZha2UsIEV2ZW50RW1pdHRlcik7XG5cblhIUkZha2UucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIGNsZWFyVGltZW91dCh0aGlzLnRvKTtcbn07XG5cblhIUkZha2UudGltZW91dCA9IDIwMDA7XG5cbm1vZHVsZS5leHBvcnRzID0gWEhSRmFrZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL3RyYW5zcG9ydC9zZW5kZXIveGhyLWZha2UuanNcbi8vIG1vZHVsZSBpZCA9IDYzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///63\n");

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, global) {\n\nvar EventEmitter = __webpack_require__(4).EventEmitter\n  , inherits = __webpack_require__(0)\n  , JSON3 = __webpack_require__(6)\n  , utils = __webpack_require__(7)\n  , IframeTransport = __webpack_require__(26)\n  , InfoReceiverIframe = __webpack_require__(31)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:info-iframe');\n}\n\nfunction InfoIframe(baseUrl, url) {\n  var self = this;\n  EventEmitter.call(this);\n\n  var go = function() {\n    var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);\n\n    ifr.once('message', function(msg) {\n      if (msg) {\n        var d;\n        try {\n          d = JSON3.parse(msg);\n        } catch (e) {\n          debug('bad json', msg);\n          self.emit('finish');\n          self.close();\n          return;\n        }\n\n        var info = d[0], rtt = d[1];\n        self.emit('finish', info, rtt);\n      }\n      self.close();\n    });\n\n    ifr.once('close', function() {\n      self.emit('finish');\n      self.close();\n    });\n  };\n\n  // TODO this seems the same as the 'needBody' from transports\n  if (!global.document.body) {\n    utils.attachEvent('load', go);\n  } else {\n    go();\n  }\n}\n\ninherits(InfoIframe, EventEmitter);\n\nInfoIframe.enabled = function() {\n  return IframeTransport.enabled();\n};\n\nInfoIframe.prototype.close = function() {\n  if (this.ifr) {\n    this.ifr.close();\n  }\n  this.removeAllListeners();\n  this.ifr = null;\n};\n\nmodule.exports = InfoIframe;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvaW5mby1pZnJhbWUuanM/ZWFhZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoidURBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXJcbiAgLCBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvZXZlbnQnKVxuICAsIElmcmFtZVRyYW5zcG9ydCA9IHJlcXVpcmUoJy4vdHJhbnNwb3J0L2lmcmFtZScpXG4gICwgSW5mb1JlY2VpdmVySWZyYW1lID0gcmVxdWlyZSgnLi9pbmZvLWlmcmFtZS1yZWNlaXZlcicpXG4gIDtcblxudmFyIGRlYnVnID0gZnVuY3Rpb24oKSB7fTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnc29ja2pzLWNsaWVudDppbmZvLWlmcmFtZScpO1xufVxuXG5mdW5jdGlvbiBJbmZvSWZyYW1lKGJhc2VVcmwsIHVybCkge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIEV2ZW50RW1pdHRlci5jYWxsKHRoaXMpO1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpZnIgPSBzZWxmLmlmciA9IG5ldyBJZnJhbWVUcmFuc3BvcnQoSW5mb1JlY2VpdmVySWZyYW1lLnRyYW5zcG9ydE5hbWUsIHVybCwgYmFzZVVybCk7XG5cbiAgICBpZnIub25jZSgnbWVzc2FnZScsIGZ1bmN0aW9uKG1zZykge1xuICAgICAgaWYgKG1zZykge1xuICAgICAgICB2YXIgZDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBkID0gSlNPTjMucGFyc2UobXNnKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGRlYnVnKCdiYWQganNvbicsIG1zZyk7XG4gICAgICAgICAgc2VsZi5lbWl0KCdmaW5pc2gnKTtcbiAgICAgICAgICBzZWxmLmNsb3NlKCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGluZm8gPSBkWzBdLCBydHQgPSBkWzFdO1xuICAgICAgICBzZWxmLmVtaXQoJ2ZpbmlzaCcsIGluZm8sIHJ0dCk7XG4gICAgICB9XG4gICAgICBzZWxmLmNsb3NlKCk7XG4gICAgfSk7XG5cbiAgICBpZnIub25jZSgnY2xvc2UnLCBmdW5jdGlvbigpIHtcbiAgICAgIHNlbGYuZW1pdCgnZmluaXNoJyk7XG4gICAgICBzZWxmLmNsb3NlKCk7XG4gICAgfSk7XG4gIH07XG5cbiAgLy8gVE9ETyB0aGlzIHNlZW1zIHRoZSBzYW1lIGFzIHRoZSAnbmVlZEJvZHknIGZyb20gdHJhbnNwb3J0c1xuICBpZiAoIWdsb2JhbC5kb2N1bWVudC5ib2R5KSB7XG4gICAgdXRpbHMuYXR0YWNoRXZlbnQoJ2xvYWQnLCBnbyk7XG4gIH0gZWxzZSB7XG4gICAgZ28oKTtcbiAgfVxufVxuXG5pbmhlcml0cyhJbmZvSWZyYW1lLCBFdmVudEVtaXR0ZXIpO1xuXG5JbmZvSWZyYW1lLmVuYWJsZWQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIElmcmFtZVRyYW5zcG9ydC5lbmFibGVkKCk7XG59O1xuXG5JbmZvSWZyYW1lLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICBpZiAodGhpcy5pZnIpIHtcbiAgICB0aGlzLmlmci5jbG9zZSgpO1xuICB9XG4gIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gIHRoaXMuaWZyID0gbnVsbDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW5mb0lmcmFtZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL2luZm8taWZyYW1lLmpzXG4vLyBtb2R1bGUgaWQgPSA2NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///64\n");

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar urlUtils = __webpack_require__(5)\n  , eventUtils = __webpack_require__(7)\n  , JSON3 = __webpack_require__(6)\n  , FacadeJS = __webpack_require__(66)\n  , InfoIframeReceiver = __webpack_require__(31)\n  , iframeUtils = __webpack_require__(12)\n  , loc = __webpack_require__(30)\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = __webpack_require__(3)('sockjs-client:iframe-bootstrap');\n}\n\nmodule.exports = function(SockJS, availableTransports) {\n  var transportMap = {};\n  availableTransports.forEach(function(at) {\n    if (at.facadeTransport) {\n      transportMap[at.facadeTransport.transportName] = at.facadeTransport;\n    }\n  });\n\n  // hard-coded for the info iframe\n  // TODO see if we can make this more dynamic\n  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;\n  var parentOrigin;\n\n  /* eslint-disable camelcase */\n  SockJS.bootstrap_iframe = function() {\n    /* eslint-enable camelcase */\n    var facade;\n    iframeUtils.currentWindowId = loc.hash.slice(1);\n    var onMessage = function(e) {\n      if (e.source !== parent) {\n        return;\n      }\n      if (typeof parentOrigin === 'undefined') {\n        parentOrigin = e.origin;\n      }\n      if (e.origin !== parentOrigin) {\n        return;\n      }\n\n      var iframeMessage;\n      try {\n        iframeMessage = JSON3.parse(e.data);\n      } catch (ignored) {\n        debug('bad json', e.data);\n        return;\n      }\n\n      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {\n        return;\n      }\n      switch (iframeMessage.type) {\n      case 's':\n        var p;\n        try {\n          p = JSON3.parse(iframeMessage.data);\n        } catch (ignored) {\n          debug('bad json', iframeMessage.data);\n          break;\n        }\n        var version = p[0];\n        var transport = p[1];\n        var transUrl = p[2];\n        var baseUrl = p[3];\n        debug(version, transport, transUrl, baseUrl);\n        // change this to semver logic\n        if (version !== SockJS.version) {\n          throw new Error('Incompatibile SockJS! Main site uses:' +\n                    ' \"' + version + '\", the iframe:' +\n                    ' \"' + SockJS.version + '\".');\n        }\n\n        if (!urlUtils.isOriginEqual(transUrl, loc.href) ||\n            !urlUtils.isOriginEqual(baseUrl, loc.href)) {\n          throw new Error('Can\\'t connect to different domain from within an ' +\n                    'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');\n        }\n        facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));\n        break;\n      case 'm':\n        facade._send(iframeMessage.data);\n        break;\n      case 'c':\n        if (facade) {\n          facade._close();\n        }\n        facade = null;\n        break;\n      }\n    };\n\n    eventUtils.attachEvent('message', onMessage);\n\n    // Start\n    iframeUtils.postMessage('s');\n  };\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvaWZyYW1lLWJvb3RzdHJhcC5qcz9jNjBmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIrQ0FBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI2NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHVybFV0aWxzID0gcmVxdWlyZSgnLi91dGlscy91cmwnKVxuICAsIGV2ZW50VXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzL2V2ZW50JylcbiAgLCBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBGYWNhZGVKUyA9IHJlcXVpcmUoJy4vZmFjYWRlJylcbiAgLCBJbmZvSWZyYW1lUmVjZWl2ZXIgPSByZXF1aXJlKCcuL2luZm8taWZyYW1lLXJlY2VpdmVyJylcbiAgLCBpZnJhbWVVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvaWZyYW1lJylcbiAgLCBsb2MgPSByZXF1aXJlKCcuL2xvY2F0aW9uJylcbiAgO1xuXG52YXIgZGVidWcgPSBmdW5jdGlvbigpIHt9O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgZGVidWcgPSByZXF1aXJlKCdkZWJ1ZycpKCdzb2NranMtY2xpZW50OmlmcmFtZS1ib290c3RyYXAnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihTb2NrSlMsIGF2YWlsYWJsZVRyYW5zcG9ydHMpIHtcbiAgdmFyIHRyYW5zcG9ydE1hcCA9IHt9O1xuICBhdmFpbGFibGVUcmFuc3BvcnRzLmZvckVhY2goZnVuY3Rpb24oYXQpIHtcbiAgICBpZiAoYXQuZmFjYWRlVHJhbnNwb3J0KSB7XG4gICAgICB0cmFuc3BvcnRNYXBbYXQuZmFjYWRlVHJhbnNwb3J0LnRyYW5zcG9ydE5hbWVdID0gYXQuZmFjYWRlVHJhbnNwb3J0O1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gaGFyZC1jb2RlZCBmb3IgdGhlIGluZm8gaWZyYW1lXG4gIC8vIFRPRE8gc2VlIGlmIHdlIGNhbiBtYWtlIHRoaXMgbW9yZSBkeW5hbWljXG4gIHRyYW5zcG9ydE1hcFtJbmZvSWZyYW1lUmVjZWl2ZXIudHJhbnNwb3J0TmFtZV0gPSBJbmZvSWZyYW1lUmVjZWl2ZXI7XG4gIHZhciBwYXJlbnRPcmlnaW47XG5cbiAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4gIFNvY2tKUy5ib290c3RyYXBfaWZyYW1lID0gZnVuY3Rpb24oKSB7XG4gICAgLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cbiAgICB2YXIgZmFjYWRlO1xuICAgIGlmcmFtZVV0aWxzLmN1cnJlbnRXaW5kb3dJZCA9IGxvYy5oYXNoLnNsaWNlKDEpO1xuICAgIHZhciBvbk1lc3NhZ2UgPSBmdW5jdGlvbihlKSB7XG4gICAgICBpZiAoZS5zb3VyY2UgIT09IHBhcmVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIHBhcmVudE9yaWdpbiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcGFyZW50T3JpZ2luID0gZS5vcmlnaW47XG4gICAgICB9XG4gICAgICBpZiAoZS5vcmlnaW4gIT09IHBhcmVudE9yaWdpbikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBpZnJhbWVNZXNzYWdlO1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWZyYW1lTWVzc2FnZSA9IEpTT04zLnBhcnNlKGUuZGF0YSk7XG4gICAgICB9IGNhdGNoIChpZ25vcmVkKSB7XG4gICAgICAgIGRlYnVnKCdiYWQganNvbicsIGUuZGF0YSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGlmcmFtZU1lc3NhZ2Uud2luZG93SWQgIT09IGlmcmFtZVV0aWxzLmN1cnJlbnRXaW5kb3dJZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzd2l0Y2ggKGlmcmFtZU1lc3NhZ2UudHlwZSkge1xuICAgICAgY2FzZSAncyc6XG4gICAgICAgIHZhciBwO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHAgPSBKU09OMy5wYXJzZShpZnJhbWVNZXNzYWdlLmRhdGEpO1xuICAgICAgICB9IGNhdGNoIChpZ25vcmVkKSB7XG4gICAgICAgICAgZGVidWcoJ2JhZCBqc29uJywgaWZyYW1lTWVzc2FnZS5kYXRhKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICB2YXIgdmVyc2lvbiA9IHBbMF07XG4gICAgICAgIHZhciB0cmFuc3BvcnQgPSBwWzFdO1xuICAgICAgICB2YXIgdHJhbnNVcmwgPSBwWzJdO1xuICAgICAgICB2YXIgYmFzZVVybCA9IHBbM107XG4gICAgICAgIGRlYnVnKHZlcnNpb24sIHRyYW5zcG9ydCwgdHJhbnNVcmwsIGJhc2VVcmwpO1xuICAgICAgICAvLyBjaGFuZ2UgdGhpcyB0byBzZW12ZXIgbG9naWNcbiAgICAgICAgaWYgKHZlcnNpb24gIT09IFNvY2tKUy52ZXJzaW9uKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvbXBhdGliaWxlIFNvY2tKUyEgTWFpbiBzaXRlIHVzZXM6JyArXG4gICAgICAgICAgICAgICAgICAgICcgXCInICsgdmVyc2lvbiArICdcIiwgdGhlIGlmcmFtZTonICtcbiAgICAgICAgICAgICAgICAgICAgJyBcIicgKyBTb2NrSlMudmVyc2lvbiArICdcIi4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghdXJsVXRpbHMuaXNPcmlnaW5FcXVhbCh0cmFuc1VybCwgbG9jLmhyZWYpIHx8XG4gICAgICAgICAgICAhdXJsVXRpbHMuaXNPcmlnaW5FcXVhbChiYXNlVXJsLCBsb2MuaHJlZikpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NhblxcJ3QgY29ubmVjdCB0byBkaWZmZXJlbnQgZG9tYWluIGZyb20gd2l0aGluIGFuICcgK1xuICAgICAgICAgICAgICAgICAgICAnaWZyYW1lLiAoJyArIGxvYy5ocmVmICsgJywgJyArIHRyYW5zVXJsICsgJywgJyArIGJhc2VVcmwgKyAnKScpO1xuICAgICAgICB9XG4gICAgICAgIGZhY2FkZSA9IG5ldyBGYWNhZGVKUyhuZXcgdHJhbnNwb3J0TWFwW3RyYW5zcG9ydF0odHJhbnNVcmwsIGJhc2VVcmwpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtJzpcbiAgICAgICAgZmFjYWRlLl9zZW5kKGlmcmFtZU1lc3NhZ2UuZGF0YSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYyc6XG4gICAgICAgIGlmIChmYWNhZGUpIHtcbiAgICAgICAgICBmYWNhZGUuX2Nsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZmFjYWRlID0gbnVsbDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGV2ZW50VXRpbHMuYXR0YWNoRXZlbnQoJ21lc3NhZ2UnLCBvbk1lc3NhZ2UpO1xuXG4gICAgLy8gU3RhcnRcbiAgICBpZnJhbWVVdGlscy5wb3N0TWVzc2FnZSgncycpO1xuICB9O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NvY2tqcy1jbGllbnQvbGliL2lmcmFtZS1ib290c3RyYXAuanNcbi8vIG1vZHVsZSBpZCA9IDY1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///65\n");

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar JSON3 = __webpack_require__(6)\n  , iframeUtils = __webpack_require__(12)\n  ;\n\nfunction FacadeJS(transport) {\n  this._transport = transport;\n  transport.on('message', this._transportMessage.bind(this));\n  transport.on('close', this._transportClose.bind(this));\n}\n\nFacadeJS.prototype._transportClose = function(code, reason) {\n  iframeUtils.postMessage('c', JSON3.stringify([code, reason]));\n};\nFacadeJS.prototype._transportMessage = function(frame) {\n  iframeUtils.postMessage('t', frame);\n};\nFacadeJS.prototype._send = function(data) {\n  this._transport.send(data);\n};\nFacadeJS.prototype._close = function() {\n  this._transport.close();\n  this._transport.removeAllListeners();\n};\n\nmodule.exports = FacadeJS;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc29ja2pzLWNsaWVudC9saWIvZmFjYWRlLmpzPzRlZjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBKU09OMyA9IHJlcXVpcmUoJ2pzb24zJylcbiAgLCBpZnJhbWVVdGlscyA9IHJlcXVpcmUoJy4vdXRpbHMvaWZyYW1lJylcbiAgO1xuXG5mdW5jdGlvbiBGYWNhZGVKUyh0cmFuc3BvcnQpIHtcbiAgdGhpcy5fdHJhbnNwb3J0ID0gdHJhbnNwb3J0O1xuICB0cmFuc3BvcnQub24oJ21lc3NhZ2UnLCB0aGlzLl90cmFuc3BvcnRNZXNzYWdlLmJpbmQodGhpcykpO1xuICB0cmFuc3BvcnQub24oJ2Nsb3NlJywgdGhpcy5fdHJhbnNwb3J0Q2xvc2UuYmluZCh0aGlzKSk7XG59XG5cbkZhY2FkZUpTLnByb3RvdHlwZS5fdHJhbnNwb3J0Q2xvc2UgPSBmdW5jdGlvbihjb2RlLCByZWFzb24pIHtcbiAgaWZyYW1lVXRpbHMucG9zdE1lc3NhZ2UoJ2MnLCBKU09OMy5zdHJpbmdpZnkoW2NvZGUsIHJlYXNvbl0pKTtcbn07XG5GYWNhZGVKUy5wcm90b3R5cGUuX3RyYW5zcG9ydE1lc3NhZ2UgPSBmdW5jdGlvbihmcmFtZSkge1xuICBpZnJhbWVVdGlscy5wb3N0TWVzc2FnZSgndCcsIGZyYW1lKTtcbn07XG5GYWNhZGVKUy5wcm90b3R5cGUuX3NlbmQgPSBmdW5jdGlvbihkYXRhKSB7XG4gIHRoaXMuX3RyYW5zcG9ydC5zZW5kKGRhdGEpO1xufTtcbkZhY2FkZUpTLnByb3RvdHlwZS5fY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fdHJhbnNwb3J0LmNsb3NlKCk7XG4gIHRoaXMuX3RyYW5zcG9ydC5yZW1vdmVBbGxMaXN0ZW5lcnMoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRmFjYWRlSlM7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zb2NranMtY2xpZW50L2xpYi9mYWNhZGUuanNcbi8vIG1vZHVsZSBpZCA9IDY2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///66\n");

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

eval("// version: 0.9.0\n// date: Tue Jul 17 2018 11:01:36 GMT+0100 (Western European Summer Time)\n// licence: \n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n\n!function(e,t){ true?module.exports=t():\"function\"==typeof define&&define.amd?define(\"WalletManager\",[],t):\"object\"==typeof exports?exports.WalletManager=t():(e[\"\"]=e[\"\"]||{},e[\"\"].WalletManager=t())}(\"undefined\"!=typeof self?self:this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=165)}([function(e,t){var r=e.exports={version:\"2.5.7\"};\"number\"==typeof __e&&(__e=r)},function(e,t){var r=e.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=r)},function(e,t,r){var n=r(36)(\"wks\"),o=r(23),i=r(1).Symbol,s=\"function\"==typeof i;(e.exports=function(e){return n[e]||(n[e]=s&&i[e]||(s?i:o)(\"Symbol.\"+e))}).store=n},function(e,t,r){\"use strict\";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}},function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(e,t,r){\"use strict\";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),(0,n.default)(e,o.key,o)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){var n=r(1),o=r(0),i=r(14),s=r(11),a=r(10),u=function(e,t,r){var c,l,d,f=e&u.F,p=e&u.G,h=e&u.S,y=e&u.P,v=e&u.B,_=e&u.W,b=p?o:o[t]||(o[t]={}),m=b.prototype,g=p?n:h?n[t]:(n[t]||{}).prototype;for(c in p&&(r=t),r)(l=!f&&g&&void 0!==g[c])&&a(b,c)||(d=l?g[c]:r[c],b[c]=p&&\"function\"!=typeof g[c]?r[c]:v&&l?i(d,n):_&&g[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):y&&\"function\"==typeof d?i(Function.call,d):d,y&&((b.virtual||(b.virtual={}))[c]=d,e&u.R&&m&&!m[c]&&s(m,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){e.exports=function(e){return\"object\"==typeof e?null!==e:\"function\"==typeof e}},function(e,t,r){var n=r(9),o=r(39),i=r(27),s=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return s(e,t,r)}catch(e){}if(\"get\"in r||\"set\"in r)throw TypeError(\"Accessors not supported!\");return\"value\"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+\" is not an object!\");return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),o=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(55),o=r(30);e.exports=function(e){return n(o(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,r){e.exports={default:r(102),__esModule:!0}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=i(r(58)),o=i(r(42));function i(e){return e&&e.__esModule?e:{default:e}}function s(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\\/\\/(?:\\.)?|:)([-a-zA-Z0-9@:%._\\+~#=]{2,256})([-a-zA-Z0-9@:%._\\+~#=\\/]*)/gi,\"$1,$3,$4\").split(\",\")}var r=t(e);if(r[0]===e&&!r[0].includes(\"@\")){var n={type:\"\",domain:e,identity:\"\"};return console.warn(\"[DivideURL] DivideURL don't support url without scheme. Please review your url address\",e),n}r[0]===e&&r[0].includes(\"@\")&&(r=t((r[0]===e?\"smtp\":r[0])+\"://\"+r[0]));return r[1].includes(\"@\")&&(r[2]=r[0]+\"://\"+r[1],r[1]=r[1].substr(r[1].indexOf(\"@\")+1)),{type:r[0],domain:r[1],identity:r[2]}}function a(e){var t=e.indexOf(\"@\");return\"user://\"+e.substring(t+1,e.length)+\"/\"+e.substring(0,t)}t.divideURL=s,t.divideEmail=function(e){var t=e.indexOf(\"@\");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,o.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,n.default)(e))},t.getUserURLFromEmail=a,t.getUserEmailFromURL=function(e){var t=s(e);return t.identity.replace(\"/\",\"\")+\"@\"+t.domain},t.convertToUserURL=function(e){if(\"user://\"===e.substring(0,7)){var t=s(e);if(t.domain&&t.identity)return e;throw\"userURL with wrong format\"}return a(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\\/\\/([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})\\/[a-zA-Z0-9\\.]+@[a-zA-Z0-9]+(\\-)?[a-zA-Z0-9]+(\\.)?[a-zA-Z0-9]{2,10}?\\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(\".\");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&r.push(e)});var i=void 0;r.forEach(function(t){i=e.replace(t,\"*+*\"),n=i.split(\".\").map(function(e){return\"*+*\"===e?t:e})})}return console.log(\"[ServiceFramework.Utils.checkAttribute]\",n),n},t.parseAttributes=function(e){if(e.includes(\"://\")){var t=e.split(/([0-9a-zA-Z][-\\w]*):\\/\\//g)[0],r=t.split(\".\"),n=e.replace(t,\"\");if(e.includes(\"identity\")){var o=n.split(\"identity.\");console.log(\"array2 \"+o),n=o[0].slice(\".\",-1),o=o[1].split(\".\"),r.push(n,\"identity\"),r=r.concat(o)}else r.push(n);return r.filter(Boolean)}return e.split(\".\")}},function(e,t,r){var n=r(45),o=r(37);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){var n,o;!function(i,s){\"use strict\";void 0===(o=\"function\"==typeof(n=s)?n.call(t,r,t,e):n)||(e.exports=o)}(0,function(){\"use strict\";var e=function(){},t=\"undefined\",r=[\"trace\",\"debug\",\"info\",\"warn\",\"error\"];function n(e,t){var r=e[t];if(\"function\"==typeof r.bind)return r.bind(e);try{return Function.prototype.bind.call(r,e)}catch(t){return function(){return Function.prototype.apply.apply(r,[e,arguments])}}}function o(t,n){for(var o=0;o<r.length;o++){var i=r[o];this[i]=o<t?e:this.methodFactory(i,t,n)}this.log=this.debug}function i(r,i,s){return function(r){return\"debug\"===r&&(r=\"log\"),typeof console!==t&&(void 0!==console[r]?n(console,r):void 0!==console.log?n(console,\"log\"):e)}(r)||function(e,r,n){return function(){typeof console!==t&&(o.call(this,r,n),this[e].apply(this,arguments))}}.apply(this,arguments)}function s(e,n,s){var a,u=this,c=\"loglevel\";function l(){var e;if(typeof window!==t){try{e=window.localStorage[c]}catch(e){}if(typeof e===t)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(c)+\"=\");-1!==n&&(e=/^([^;]+)/.exec(r.slice(n))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}e&&(c+=\":\"+e),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=s||i,u.getLevel=function(){return a},u.setLevel=function(n,i){if(\"string\"==typeof n&&void 0!==u.levels[n.toUpperCase()]&&(n=u.levels[n.toUpperCase()]),!(\"number\"==typeof n&&n>=0&&n<=u.levels.SILENT))throw\"log.setLevel() called with invalid level: \"+n;if(a=n,!1!==i&&function(e){var n=(r[e]||\"silent\").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[c]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(c)+\"=\"+n+\";\"}catch(e){}}}(n),o.call(u,n,e),typeof console===t&&n<u.levels.SILENT)return\"No console available for logging\"},u.setDefaultLevel=function(e){l()||u.setLevel(e,!1)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)};var d=l();null==d&&(d=null==n?\"WARN\":n),u.setLevel(d,!1)}var a=new s,u={};a.getLogger=function(e){if(\"string\"!=typeof e||\"\"===e)throw new TypeError(\"You must supply a name when creating a logger.\");var t=u[e];return t||(t=u[e]=new s(e,a.getLevel(),a.methodFactory)),t};var c=typeof window!==t?window.log:void 0;return a.noConflict=function(){return typeof window!==t&&window.log===a&&(window.log=c),a},a.getLoggers=function(){return u},a})},function(e,t){var r=0,n=Math.random();e.exports=function(e){return\"Symbol(\".concat(void 0===e?\"\":e,\")_\",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if(\"function\"!=typeof e)throw TypeError(e+\" is not a function!\");return e}},function(e,t,r){e.exports={default:r(91),__esModule:!0}},function(e,t,r){var n=r(8).f,o=r(10),i=r(2)(\"toStringTag\");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&\"function\"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if(\"function\"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&\"function\"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError(\"Can't convert object to primitive value\")}},function(e,t,r){var n=r(7),o=r(1).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError(\"Can't call method on  \"+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},function(e,t,r){\"use strict\";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(47));t.default=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!==(void 0===t?\"undefined\":(0,n.default)(t))&&\"function\"!=typeof t?e:t}},function(e,t,r){\"use strict\";t.__esModule=!0;var n=s(r(93)),o=s(r(97)),i=s(r(47));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+(void 0===t?\"undefined\":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(n.default?(0,n.default)(e,t):e.__proto__=t)}},function(e,t,r){var n=r(36)(\"keys\"),o=r(23);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t,r){var n=r(0),o=r(1),i=o[\"__core-js_shared__\"]||(o[\"__core-js_shared__\"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:n.version,mode:r(15)?\"pure\":\"global\",copyright:\"© 2018 Denis Pushkarev (zloirock.ru)\"})},function(e,t){e.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(e,t,r){var n=r(9),o=r(72),i=r(37),s=r(35)(\"IE_PROTO\"),a=function(){},u=function(){var e,t=r(28)(\"iframe\"),n=i.length;for(t.style.display=\"none\",r(56).appendChild(t),t.src=\"javascript:\",(e=t.contentWindow.document).open(),e.write(\"<script>document.F=Object<\\/script>\"),e.close(),u=e.F;n--;)delete u.prototype[i[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(a.prototype=n(e),r=new a,a.prototype=null,r[s]=e):r=u(),void 0===t?r:o(r,t)}},function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(e,t,r){t.f=r(2)},function(e,t,r){var n=r(1),o=r(0),i=r(15),s=r(40),a=r(8).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:n.Symbol||{});\"_\"==e.charAt(0)||e in t||a(t,e,{value:s.f(e)})}},function(e,t,r){e.exports={default:r(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(6),o=r(0),i=r(13);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],s={};s[e]=t(r),n(n.S+n.F*i(function(){r(1)}),\"Object\",s)}},function(e,t,r){var n=r(10),o=r(12),i=r(64)(!1),s=r(35)(\"IE_PROTO\");e.exports=function(e,t){var r,a=o(e),u=0,c=[];for(r in a)r!=s&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~i(c,r)||c.push(r));return c}},function(e,t,r){var n=r(29),o=r(16),i=r(12),s=r(27),a=r(10),u=r(39),c=Object.getOwnPropertyDescriptor;t.f=r(4)?c:function(e,t){if(e=i(e),t=s(t,!0),u)try{return c(e,t)}catch(e){}if(a(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t,r){\"use strict\";t.__esModule=!0;var n=s(r(79)),o=s(r(81)),i=\"function\"==typeof o.default&&\"symbol\"==typeof n.default?function(e){return typeof e}:function(e){return e&&\"function\"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?\"symbol\":typeof e};function s(e){return e&&e.__esModule?e:{default:e}}t.default=\"function\"==typeof o.default&&\"symbol\"===i(n.default)?function(e){return void 0===e?\"undefined\":i(e)}:function(e){return e&&\"function\"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?\"symbol\":void 0===e?\"undefined\":i(e)}},function(e,t,r){\"use strict\";var n=r(15),o=r(6),i=r(50),s=r(11),a=r(17),u=r(71),c=r(26),l=r(53),d=r(2)(\"iterator\"),f=!([].keys&&\"next\"in[].keys()),p=function(){return this};e.exports=function(e,t,r,h,y,v,_){u(r,t,h);var b,m,g,O=function(e){if(!f&&e in k)return k[e];switch(e){case\"keys\":case\"values\":return function(){return new r(this,e)}}return function(){return new r(this,e)}},w=t+\" Iterator\",j=\"values\"==y,R=!1,k=e.prototype,x=k[d]||k[\"@@iterator\"]||y&&k[y],C=x||O(y),S=y?j?O(\"entries\"):C:void 0,L=\"Array\"==t&&k.entries||x;if(L&&(g=l(L.call(new e)))!==Object.prototype&&g.next&&(c(g,w,!0),n||\"function\"==typeof g[d]||s(g,d,p)),j&&x&&\"values\"!==x.name&&(R=!0,C=function(){return x.call(this)}),n&&!_||!f&&!R&&k[d]||s(k,d,C),a[t]=C,a[w]=p,y)if(b={values:j?C:O(\"values\"),keys:v?C:O(\"keys\"),entries:S},_)for(m in b)m in k||i(k,m,b[m]);else o(o.P+o.F*(f||R),t,b);return b}},function(e,t,r){var n=r(31),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){e.exports=r(11)},function(e,t,r){\"use strict\";var n=r(24);e.exports.f=function(e){return new function(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError(\"Bad Promise constructor\");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}(e)}},function(e,t,r){\"use strict\";var n=r(70)(!0);r(48)(String,\"String\",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){var n=r(10),o=r(32),i=r(35)(\"IE_PROTO\"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:\"function\"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,r){r(73);for(var n=r(1),o=r(11),i=r(17),s=r(2)(\"toStringTag\"),a=\"CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList\".split(\",\"),u=0;u<a.length;u++){var c=a[u],l=n[c],d=l&&l.prototype;d&&!d[s]&&o(d,s,c),i[c]=i.Array}},function(e,t,r){var n=r(21);e.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(e){return\"String\"==n(e)?e.split(\"\"):Object(e)}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(45),o=r(37).concat(\"length\",\"prototype\");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){e.exports={default:r(76),__esModule:!0}},function(e,t,r){e.exports={default:r(61),__esModule:!0}},function(e,t){},function(e,t,r){r(62);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(6);n(n.S+n.F*!r(4),\"Object\",{defineProperty:r(8).f})},function(e,t,r){var n=r(21),o=r(2)(\"toStringTag\"),i=\"Arguments\"==n(function(){return arguments}());e.exports=function(e){var t,r,s;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:i?n(t):\"Object\"==(s=n(t))&&\"function\"==typeof t.callee?\"Arguments\":s}},function(e,t,r){var n=r(12),o=r(49),i=r(65);e.exports=function(e){return function(t,r,s){var a,u=n(t),c=o(u.length),l=i(s,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},function(e,t,r){var n=r(9),o=r(24),i=r(2)(\"species\");e.exports=function(e,t){var r,s=n(e).constructor;return void 0===s||void 0==(r=n(s)[i])?t:o(r)}},function(e,t,r){var n,o,i,s=r(14),a=r(108),u=r(56),c=r(28),l=r(1),d=l.process,f=l.setImmediate,p=l.clearImmediate,h=l.MessageChannel,y=l.Dispatch,v=0,_={},b=function(){var e=+this;if(_.hasOwnProperty(e)){var t=_[e];delete _[e],t()}},m=function(e){b.call(e.data)};f&&p||(f=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return _[++v]=function(){a(\"function\"==typeof e?e:Function(e),t)},n(v),v},p=function(e){delete _[e]},\"process\"==r(21)(d)?n=function(e){d.nextTick(s(b,e,1))}:y&&y.now?n=function(e){y.now(s(b,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=m,n=s(i.postMessage,i,1)):l.addEventListener&&\"function\"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+\"\",\"*\")},l.addEventListener(\"message\",m,!1)):n=\"onreadystatechange\"in c(\"script\")?function(e){u.appendChild(c(\"script\")).onreadystatechange=function(){u.removeChild(this),b.call(e)}}:function(e){setTimeout(s(b,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(9),o=r(7),i=r(51);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(31),o=r(30);e.exports=function(e){return function(t,r){var i,s,a=String(o(t)),u=n(r),c=a.length;return u<0||u>=c?e?\"\":void 0:(i=a.charCodeAt(u))<55296||i>56319||u+1===c||(s=a.charCodeAt(u+1))<56320||s>57343?e?a.charAt(u):i:e?a.slice(u,u+2):s-56320+(i-55296<<10)+65536}}},function(e,t,r){\"use strict\";var n=r(38),o=r(16),i=r(26),s={};r(11)(s,r(2)(\"iterator\"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(s,{next:o(1,r)}),i(e,t+\" Iterator\")}},function(e,t,r){var n=r(8),o=r(9),i=r(20);e.exports=r(4)?Object.defineProperties:function(e,t){o(e);for(var r,s=i(t),a=s.length,u=0;a>u;)n.f(e,r=s[u++],t[r]);return e}},function(e,t,r){\"use strict\";var n=r(74),o=r(75),i=r(17),s=r(12);e.exports=r(48)(Array,\"Array\",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):o(0,\"keys\"==t?r:\"values\"==t?e[r]:[r,e[r]])},\"values\"),i.Arguments=i.Array,n(\"keys\"),n(\"values\"),n(\"entries\")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){var n=r(0),o=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},function(e,t,r){var n=r(23)(\"meta\"),o=r(7),i=r(10),s=r(8).f,a=0,u=Object.isExtensible||function(){return!0},c=!r(13)(function(){return u(Object.preventExtensions({}))}),l=function(e){s(e,n,{value:{i:\"O\"+ ++a,w:{}}})},d=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!o(e))return\"symbol\"==typeof e?e:(\"string\"==typeof e?\"S\":\"P\")+e;if(!i(e,n)){if(!u(e))return\"F\";if(!t)return\"E\";l(e)}return e[n].i},getWeak:function(e,t){if(!i(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},onFreeze:function(e){return c&&d.NEED&&u(e)&&!i(e,n)&&l(e),e}}},function(e,t,r){e.exports={default:r(119),__esModule:!0}},function(e,t,r){e.exports={default:r(80),__esModule:!0}},function(e,t,r){r(52),r(54),e.exports=r(40).f(\"iterator\")},function(e,t,r){e.exports={default:r(82),__esModule:!0}},function(e,t,r){r(83),r(60),r(87),r(88),e.exports=r(0).Symbol},function(e,t,r){\"use strict\";var n=r(1),o=r(10),i=r(4),s=r(6),a=r(50),u=r(77).KEY,c=r(13),l=r(36),d=r(26),f=r(23),p=r(2),h=r(40),y=r(41),v=r(84),_=r(85),b=r(9),m=r(7),g=r(12),O=r(27),w=r(16),j=r(38),R=r(86),k=r(46),x=r(8),C=r(20),S=k.f,L=x.f,E=R.f,P=n.Symbol,M=n.JSON,T=M&&M.stringify,D=p(\"_hidden\"),A=p(\"toPrimitive\"),U={}.propertyIsEnumerable,I=l(\"symbol-registry\"),H=l(\"symbols\"),N=l(\"op-symbols\"),F=Object.prototype,B=\"function\"==typeof P,V=n.QObject,W=!V||!V.prototype||!V.prototype.findChild,z=i&&c(function(){return 7!=j(L({},\"a\",{get:function(){return L(this,\"a\",{value:7}).a}})).a})?function(e,t,r){var n=S(F,t);n&&delete F[t],L(e,t,r),n&&e!==F&&L(F,t,n)}:L,Z=function(e){var t=H[e]=j(P.prototype);return t._k=e,t},q=B&&\"symbol\"==typeof P.iterator?function(e){return\"symbol\"==typeof e}:function(e){return e instanceof P},J=function(e,t,r){return e===F&&J(N,t,r),b(e),t=O(t,!0),b(r),o(H,t)?(r.enumerable?(o(e,D)&&e[D][t]&&(e[D][t]=!1),r=j(r,{enumerable:w(0,!1)})):(o(e,D)||L(e,D,w(1,{})),e[D][t]=!0),z(e,t,r)):L(e,t,r)},G=function(e,t){b(e);for(var r,n=v(t=g(t)),o=0,i=n.length;i>o;)J(e,r=n[o++],t[r]);return e},Y=function(e){var t=U.call(this,e=O(e,!0));return!(this===F&&o(H,e)&&!o(N,e))&&(!(t||!o(this,e)||!o(H,e)||o(this,D)&&this[D][e])||t)},K=function(e,t){if(e=g(e),t=O(t,!0),e!==F||!o(H,t)||o(N,t)){var r=S(e,t);return!r||!o(H,t)||o(e,D)&&e[D][t]||(r.enumerable=!0),r}},$=function(e){for(var t,r=E(g(e)),n=[],i=0;r.length>i;)o(H,t=r[i++])||t==D||t==u||n.push(t);return n},Q=function(e){for(var t,r=e===F,n=E(r?N:g(e)),i=[],s=0;n.length>s;)!o(H,t=n[s++])||r&&!o(F,t)||i.push(H[t]);return i};B||(a((P=function(){if(this instanceof P)throw TypeError(\"Symbol is not a constructor!\");var e=f(arguments.length>0?arguments[0]:void 0),t=function(r){this===F&&t.call(N,r),o(this,D)&&o(this[D],e)&&(this[D][e]=!1),z(this,e,w(1,r))};return i&&W&&z(F,e,{configurable:!0,set:t}),Z(e)}).prototype,\"toString\",function(){return this._k}),k.f=K,x.f=J,r(57).f=R.f=$,r(29).f=Y,r(43).f=Q,i&&!r(15)&&a(F,\"propertyIsEnumerable\",Y,!0),h.f=function(e){return Z(p(e))}),s(s.G+s.W+s.F*!B,{Symbol:P});for(var X=\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),ee=0;X.length>ee;)p(X[ee++]);for(var te=C(p.store),re=0;te.length>re;)y(te[re++]);s(s.S+s.F*!B,\"Symbol\",{for:function(e){return o(I,e+=\"\")?I[e]:I[e]=P(e)},keyFor:function(e){if(!q(e))throw TypeError(e+\" is not a symbol!\");for(var t in I)if(I[t]===e)return t},useSetter:function(){W=!0},useSimple:function(){W=!1}}),s(s.S+s.F*!B,\"Object\",{create:function(e,t){return void 0===t?j(e):G(j(e),t)},defineProperty:J,defineProperties:G,getOwnPropertyDescriptor:K,getOwnPropertyNames:$,getOwnPropertySymbols:Q}),M&&s(s.S+s.F*(!B||c(function(){var e=P();return\"[null]\"!=T([e])||\"{}\"!=T({a:e})||\"{}\"!=T(Object(e))})),\"JSON\",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(m(t)||void 0!==e)&&!q(e))return _(t)||(t=function(e,t){if(\"function\"==typeof r&&(t=r.call(this,e,t)),!q(t))return t}),n[1]=t,T.apply(M,n)}}),P.prototype[A]||r(11)(P.prototype,A,P.prototype.valueOf),d(P,\"Symbol\"),d(Math,\"Math\",!0),d(n.JSON,\"JSON\",!0)},function(e,t,r){var n=r(20),o=r(43),i=r(29);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var s,a=r(e),u=i.f,c=0;a.length>c;)u.call(e,s=a[c++])&&t.push(s);return t}},function(e,t,r){var n=r(21);e.exports=Array.isArray||function(e){return\"Array\"==n(e)}},function(e,t,r){var n=r(12),o=r(57).f,i={}.toString,s=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&\"[object Window]\"==i.call(e)?function(e){try{return o(e)}catch(e){return s.slice()}}(e):o(n(e))}},function(e,t,r){r(41)(\"asyncIterator\")},function(e,t,r){r(41)(\"observable\")},function(e,t,r){r(90),e.exports=r(0).Object.keys},function(e,t,r){var n=r(32),o=r(20);r(44)(\"keys\",function(){return function(e){return o(n(e))}})},function(e,t,r){r(92),e.exports=r(0).Object.getPrototypeOf},function(e,t,r){var n=r(32),o=r(53);r(44)(\"getPrototypeOf\",function(){return function(e){return o(n(e))}})},function(e,t,r){e.exports={default:r(94),__esModule:!0}},function(e,t,r){r(95),e.exports=r(0).Object.setPrototypeOf},function(e,t,r){var n=r(6);n(n.S,\"Object\",{setPrototypeOf:r(96).set})},function(e,t,r){var n=r(7),o=r(9),i=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+\": can't set as prototype!\")};e.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(e,t,n){try{(n=r(14)(Function.call,r(46).f(Object.prototype,\"__proto__\").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:i}},function(e,t,r){e.exports={default:r(98),__esModule:!0}},function(e,t,r){r(99);var n=r(0).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(6);n(n.S,\"Object\",{create:r(38)})},function(e,t,r){\"use strict\";t.__esModule=!0;var n=i(r(25)),o=i(r(125));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i){null===t&&(t=Function.prototype);var s=(0,o.default)(t,r);if(void 0===s){var a=(0,n.default)(t);return null===a?void 0:e(a,r,i)}if(\"value\"in s)return s.value;var u=s.get;return void 0!==u?u.call(i):void 0}},function(e,t,r){var n=r(63),o=r(2)(\"iterator\"),i=r(17);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e[\"@@iterator\"]||i[n(e)]}},function(e,t,r){r(60),r(52),r(54),r(103),r(114),r(115),e.exports=r(0).Promise},function(e,t,r){\"use strict\";var n,o,i,s,a=r(15),u=r(1),c=r(14),l=r(63),d=r(6),f=r(7),p=r(24),h=r(104),y=r(105),v=r(66),_=r(67).set,b=r(109)(),m=r(51),g=r(68),O=r(110),w=r(69),j=u.TypeError,R=u.process,k=R&&R.versions,x=k&&k.v8||\"\",C=u.Promise,S=\"process\"==l(R),L=function(){},E=o=m.f,P=!!function(){try{var e=C.resolve(1),t=(e.constructor={})[r(2)(\"species\")]=function(e){e(L,L)};return(S||\"function\"==typeof PromiseRejectionEvent)&&e.then(L)instanceof t&&0!==x.indexOf(\"6.6\")&&-1===O.indexOf(\"Chrome/66\")}catch(e){}}(),M=function(e){var t;return!(!f(e)||\"function\"!=typeof(t=e.then))&&t},T=function(e,t){if(!e._n){e._n=!0;var r=e._c;b(function(){for(var n=e._v,o=1==e._s,i=0,s=function(t){var r,i,s,a=o?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{a?(o||(2==e._h&&U(e),e._h=1),!0===a?r=n:(l&&l.enter(),r=a(n),l&&(l.exit(),s=!0)),r===t.promise?c(j(\"Promise-chain cycle\")):(i=M(r))?i.call(r,u,c):u(r)):c(n)}catch(e){l&&!s&&l.exit(),c(e)}};r.length>i;)s(r[i++]);e._c=[],e._n=!1,t&&!e._h&&D(e)})}},D=function(e){_.call(u,function(){var t,r,n,o=e._v,i=A(e);if(i&&(t=g(function(){S?R.emit(\"unhandledRejection\",o,e):(r=u.onunhandledrejection)?r({promise:e,reason:o}):(n=u.console)&&n.error&&n.error(\"Unhandled promise rejection\",o)}),e._h=S||A(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},A=function(e){return 1!==e._h&&0===(e._a||e._c).length},U=function(e){_.call(u,function(){var t;S?R.emit(\"rejectionHandled\",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},I=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),T(t,!0))},H=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw j(\"Promise can't be resolved itself\");(t=M(e))?b(function(){var n={_w:r,_d:!1};try{t.call(e,c(H,n,1),c(I,n,1))}catch(e){I.call(n,e)}}):(r._v=e,r._s=1,T(r,!1))}catch(e){I.call({_w:r,_d:!1},e)}}};P||(C=function(e){h(this,C,\"Promise\",\"_h\"),p(e),n.call(this);try{e(c(H,this,1),c(I,this,1))}catch(e){I.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(111)(C.prototype,{then:function(e,t){var r=E(v(this,C));return r.ok=\"function\"!=typeof e||e,r.fail=\"function\"==typeof t&&t,r.domain=S?R.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&T(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=c(H,e,1),this.reject=c(I,e,1)},m.f=E=function(e){return e===C||e===s?new i(e):o(e)}),d(d.G+d.W+d.F*!P,{Promise:C}),r(26)(C,\"Promise\"),r(112)(\"Promise\"),s=r(0).Promise,d(d.S+d.F*!P,\"Promise\",{reject:function(e){var t=E(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!P),\"Promise\",{resolve:function(e){return w(a&&this===s?C:this,e)}}),d(d.S+d.F*!(P&&r(113)(function(e){C.all(e).catch(L)})),\"Promise\",{all:function(e){var t=this,r=E(t),n=r.resolve,o=r.reject,i=g(function(){var r=[],i=0,s=1;y(e,!1,function(e){var a=i++,u=!1;r.push(void 0),s++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--s||n(r))},o)}),--s||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=E(t),n=r.reject,o=g(function(){y(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+\": incorrect invocation!\");return e}},function(e,t,r){var n=r(14),o=r(106),i=r(107),s=r(9),a=r(49),u=r(101),c={},l={};(t=e.exports=function(e,t,r,d,f){var p,h,y,v,_=f?function(){return e}:u(e),b=n(r,d,t?2:1),m=0;if(\"function\"!=typeof _)throw TypeError(e+\" is not iterable!\");if(i(_)){for(p=a(e.length);p>m;m++)if((v=t?b(s(h=e[m])[0],h[1]):b(e[m]))===c||v===l)return v}else for(y=_.call(e);!(h=y.next()).done;)if((v=o(y,b,h.value,t))===c||v===l)return v}).BREAK=c,t.RETURN=l},function(e,t,r){var n=r(9);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(17),o=r(2)(\"iterator\"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),o=r(67).set,i=n.MutationObserver||n.WebKitMutationObserver,s=n.process,a=n.Promise,u=\"process\"==r(21)(s);e.exports=function(){var e,t,r,c=function(){var n,o;for(u&&(n=s.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){s.nextTick(c)};else if(!i||n.navigator&&n.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);r=function(){l.then(c)}}else r=function(){o.call(n,c)};else{var d=!0,f=document.createTextNode(\"\");new i(c).observe(f,{characterData:!0}),r=function(){f.data=d=!d}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){var n=r(1).navigator;e.exports=n&&n.userAgent||\"\"},function(e,t,r){var n=r(11);e.exports=function(e,t,r){for(var o in t)r&&e[o]?e[o]=t[o]:n(e,o,t[o]);return e}},function(e,t,r){\"use strict\";var n=r(1),o=r(0),i=r(8),s=r(4),a=r(2)(\"species\");e.exports=function(e){var t=\"function\"==typeof o[e]?o[e]:n[e];s&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(2)(\"iterator\"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],s=i[n]();s.next=function(){return{done:r=!0}},i[n]=function(){return s},e(i)}catch(e){}return r}},function(e,t,r){\"use strict\";var n=r(6),o=r(0),i=r(1),s=r(66),a=r(69);n(n.P+n.R,\"Promise\",{finally:function(e){var t=s(this,o.Promise||i.Promise),r=\"function\"==typeof e;return this.then(r?function(r){return a(t,e()).then(function(){return r})}:e,r?function(r){return a(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){\"use strict\";var n=r(6),o=r(51),i=r(68);n(n.S,\"Promise\",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},,function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ObjectType=t.ChangeType=void 0;var n=s(r(3)),o=s(r(5));r(123);var i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){(0,n.default)(this,e);this._observers=[],this._filters={},this._data=t||{},this._internalObserve(this._data)}return(0,o.default)(e,[{key:\"observe\",value:function(e){this._observers.push(e)}},{key:\"find\",value:function(e){var t=(0,i.parseAttributes)(e);return this._findWithSplit(t)}},{key:\"findBefore\",value:function(e){var t={},r=(0,i.parseAttributes)(e);return t.last=r.pop(),t.obj=this._findWithSplit(r),t}},{key:\"_findWithSplit\",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:\"_internalObserve\",value:function(e){var t=this;this._data=Object.deepObserve(e,function(e){e.every(function(e){t._onChanges(e)})})}},{key:\"_fireEvent\",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:\"_onChanges\",value:function(e){var t=e.object,r=void 0;t.constructor===Object&&(r=c.OBJECT),t.constructor===Array&&(r=c.ARRAY);var n=e.keypath,o=t[e.name];\"update\"!==e.type||n.includes(\".length\")||this._fireEvent({cType:u.UPDATE,oType:r,field:n,data:o}),\"add\"===e.type&&this._fireEvent({cType:u.ADD,oType:r,field:n,data:o}),\"delete\"===e.type&&this._fireEvent({cType:u.REMOVE,oType:r,field:n})}},{key:\"data\",get:function(){return this._data}}]),e}(),u=t.ChangeType={UPDATE:\"update\",ADD:\"add\",REMOVE:\"remove\"},c=t.ObjectType={OBJECT:\"object\",ARRAY:\"array\"};t.default=a},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=c(r(18)),o=c(r(3)),i=c(r(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=c(r(117)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=s.getLogger(\"DataObjectChild\"),d=function(){function e(t){(0,o.default)(this,e);function r(e){throw\"[DataObjectChild] \"+e+\" mandatory parameter is missing\"}t.parent?this._parent=t.parent:r(\"parent\"),t.url?this._url=t.url:r(\"url\"),t.created?this._created=t.created:r(\"created\"),t.reporter?this._reporter=t.reporter:r(\"reporter\"),t.runtime?this._runtime=t.runtime:r(\"runtime\"),t.schema?this._schema=t.schema:r(\"schema\"),t.parentObject?this._parentObject=t.parentObject:r(\"parentObject\"),t.name&&(this._name=t.name),t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._childId=t.url,t.data?this._syncObj=new a.default(t.data):this._syncObj=new a.default({}),l.log(\"[DataObjectChild -  Constructor] - \",this._syncObj),this._bus=this._parentObject._bus,this._owner=this._parentObject._owner,this._allocateListeners(),this._metadata=t,delete this._metadata.parentObject,this._sharingStatus=!1}return(0,i.default)(e,[{key:\"share\",value:function(e){var t=this;t._sharingStatus=new n.default(function(r,n){var o=void 0;o=e?t.metadata.parent:t.metadata.parent+\"/children/\"+t.metadata.children;var i=t.metadata;i.data=t.data;var s={type:\"create\",from:t.metadata.reporter,to:o,body:{resource:i.url,value:i}};if(t.identity&&(s.body.identity=t.identity),t._parentObject.data.hasOwnProperty(\"mutual\")&&(s.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,u.deepClone)(s)),r();var a=t._bus.postMessage((0,u.deepClone)(s),function(e){if(e.to===t._reporter){t._bus.removeResponseListener(s.from,e.id),l.log(\"[Syncher.DataObjectChild.share] Parent reporter reply \",e);var o={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:\"Unknown\"};return e.body.code<300?r(o):n(o)}},!1);setTimeout(function(){t._bus.removeResponseListener(s.from,a);return n({code:408,desc:\"timout\"})},3e3)})}},{key:\"store\",value:function(){var e={},t=this.metadata.children+\".\"+this.metadata.url;e.value=this.metadata,e.identity=this.identity;var r={from:this.metadata.reporter,to:this._parentObject._syncher._subURL,type:\"create\",body:{resource:this.metadata.parent,attribute:t,value:e}};l.log(\"[DataObjectChild.store]:\",r),this._bus.postMessage(r)}},{key:\"_allocateListeners\",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){\"response\"===t.type&&t.id===e._msgId&&(l.log(\"DataObjectChild.onResponse:\",t),e._onResponse(t))}))}},{key:\"_releaseListeners\",value:function(){this._listener&&this._listener.remove()}},{key:\"delete\",value:function(){this._releaseListeners()}},{key:\"onChange\",value:function(e){this._syncObj.observe(function(t){l.log(\"[DataObjectChild - observer] - \",t),e(t)})}},{key:\"onResponse\",value:function(e){this._onResponseHandler=e}},{key:\"_onResponse\",value:function(e){var t={type:e.type,url:e.body.source,code:e.body.code};this._onResponseHandler&&this._onResponseHandler(t)}},{key:\"shareable\",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:\"metadata\",get:function(){return this._metadata}},{key:\"childId\",get:function(){return this._childId}},{key:\"sharingStatus\",get:function(){return this._sharingStatus}},{key:\"data\",get:function(){return this._syncObj.data}},{key:\"identity\",set:function(e){this._identity=e},get:function(){return this._identity}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){r(120),e.exports=r(0).Object.assign},function(e,t,r){var n=r(6);n(n.S+n.F,\"Object\",{assign:r(121)})},function(e,t,r){\"use strict\";var n=r(20),o=r(43),i=r(29),s=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n=\"abcdefghijklmnopqrst\";return e[r]=7,n.split(\"\").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join(\"\")!=n})?function(e,t){for(var r=s(e),u=arguments.length,c=1,l=o.f,d=i.f;u>c;)for(var f,p=a(arguments[c++]),h=l?n(p).concat(l(p)):n(p),y=h.length,v=0;y>v;)d.call(p,f=h[v++])&&(r[f]=p[f]);return r}:u},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=y(r(47)),o=y(r(18)),i=y(r(42)),s=y(r(78)),a=y(r(3)),u=y(r(5)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=r(117),d=y(l),f=y(r(118)),p=r(19),h=y(r(128));function y(e){return e&&e.__esModule?e:{default:e}}var v=c.getLogger(\"DataObject\"),_=function(){function e(t){(0,a.default)(this,e);function r(e){throw\"[DataObject] \"+e+\" mandatory parameter is missing\"}t.syncher?this._syncher=t.syncher:r(\"syncher\"),t.url?this._url=t.url:r(\"url\"),t.created?this._created=t.created:r(\"created\"),t.reporter?this._reporter=t.reporter:r(\"reporter\"),t.runtime?this._runtime=t.runtime:r(\"runtime\"),t.schema?this._schema=t.schema:r(\"schema\"),t.name?this._name=t.name:r(\"name\"),this._status=t.status,t.data?this._syncObj=new d.default(t.data):this._syncObj=new d.default({}),this._childrens=t.childrens,this._mutual=t.mutual,this._version=0,this._childId=0,this._childrenListeners=[],this._onAddChildrenHandler,this._resumed=t.resume,t.resume&&(this._version=t.version),this._owner=t.syncher._owner,this._bus=t.syncher._bus,t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._metadata=(0,s.default)(t),this._metadata.lastModified=this._metadata.created,delete this._metadata.data,delete this._metadata.syncher,delete this._metadata.authorise,this._hypertyResourceFactory=new h.default,this._childrenObjects={},this._sharedChilds=[]}return(0,u.default)(e,[{key:\"_getLastChildId\",value:function(){var e=this,t=0,r=e._owner+\"#\"+t;return(0,i.default)(e._childrens).filter(function(t){e._childrens[t].childId>r&&(r=e._childrens[t].childId)}),Number(r.split(\"#\")[1])}},{key:\"_allocateListeners\",value:function(){var e=this,t=this,r=t._url+\"/children/\";v.log(\"[Data Object - AllocateListeners] - \",t._childrens),t._childrens&&t._childrens.forEach(function(n){var o=r+n,i=t._bus.addListener(o,function(r){if(r.from!==e._owner)switch(v.log(\"DataObject-Children-RCV: \",r),r.type){case\"create\":t._onChildCreate(r);break;case\"delete\":v.log(r);break;default:t._changeChildren(r)}});t._childrenListeners.push(i)})}},{key:\"_releaseListeners\",value:function(){var e=this;e._childrenListeners.forEach(function(e){e.remove()}),(0,i.default)(e._childrenObjects).forEach(function(t){(0,i.default)(e._childrenObjects[t]).forEach(function(r){e._childrenObjects[t][r]._releaseListeners()})})}},{key:\"resumeChildrens\",value:function(e){var t=this,r=this,n=this._owner+\"#\"+this._childId;(0,i.default)(e).forEach(function(o){var s=e[o];(0,i.default)(s).forEach(function(e){var i=!1;r._childrenObjects.hasOwnProperty(o)||(r._childrenObjects[o]={}),s[e].value.resourceType&&!r._childrenObjects[o].hasOwnProperty(e)?(r._childrenObjects[o][e]=r._resumeHypertyResource(s[e]),i=!0):r._childrenObjects[o].hasOwnProperty(e)||(r._childrenObjects[o][e]=r._resumeChild(s[e]),v.log(\"[DataObject.resumeChildrens] new DataObjectChild: \",r._childrenObjects[o][e]),i=!0),i&&e>n&&(n=e,v.log(\"[DataObjectReporter.resumeChildrens] - resuming: \",t._childrenObjects[o][e]))})}),this._childId=Number(n.split(\"#\")[1])}},{key:\"_resumeChild\",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=new f.default(t);r.identity=e.identity;var n={type:\"create\",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:\"_resumeHypertyResource\",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t);r.identity=e.identity;var n={type:\"create\",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:\"pause\",value:function(){throw\"Not implemented\"}},{key:\"resume\",value:function(){throw\"Not implemented\"}},{key:\"stop\",value:function(){throw\"Not implemented\"}},{key:\"addChild\",value:function(e,t,r,n){var i=this,s=void 0;return new o.default(function(o){var a=i._url+\"/children/\"+e,u=i._getChildInput(n);u.data=t,u.children=e,s=new f.default(u),r&&(s.identity=r),s.share(),v.log(\"[DataObject.addChild] added \",s),s.onChange(function(e){i._onChange(e,{path:a,childId:u.url})}),i._childrenObjects.hasOwnProperty(e)||(i._childrenObjects[e]={}),i._childrenObjects[e][u.url]=s,o(s)})}},{key:\"_deleteChildrens\",value:function(){var e=this,t=[];return new o.default(function(r){if(e.childrens){v.log(\"[DataObject.deleteChildrens]\",e.childrens);var n=void 0;for(n in e.childrens){var i=void 0;for(i in e.childrens[n]){var s=e.childrens[n][i];v.log(\"[DataObject._deleteChildrens] child\",s),s.metadata.hasOwnProperty(\"resourceType\")&&t.push(e.childrens[n][i].delete())}}}v.log(\"[DataObject._deleteChildrens] promises \",t),t.length>0?o.default.all(t).then(function(){r(\"[DataObject._deleteChildrens] done\")}):r(\"[DataObject._deleteChildrens] nothing to delete\")})}},{key:\"_getChildInput\",value:function(e){var t=(0,s.default)({},e);return this._childId++,t.url=this._owner+\"#\"+this._childId,t.parentObject=this,t.reporter=this._owner,t.created=(new Date).toISOString(),t.runtime=this._syncher._runtimeUrl,t.p2pHandler=this._syncher._p2pHandler,t.p2pRequester=this._syncher._p2pRequester,t.schema=this._schema,t.parent=this.url,t}},{key:\"addHypertyResource\",value:function(e,t,r,n,i){var s=this;return new o.default(function(o){var a=void 0,u=s._url+\"/children/\"+e,c=s._getChildInput(i);c.children=e,s._hypertyResourceFactory.createHypertyResourceWithContent(!0,t,r,c).then(function(t){a=t,n&&(a.identity=n),a.share(),v.log(\"[DataObject.addHypertyResource] added \",a),a.onChange(function(e){s._onChange(e,{path:u,childId:a.childId})}),s._childrenObjects.hasOwnProperty(e)||(s._childrenObjects[e]={}),s._childrenObjects[e][a.childId]=a,o(a)})})}},{key:\"onAddChild\",value:function(e){this._onAddChildrenHandler=e}},{key:\"_onChildCreate\",value:function(e){v.log(\"[DataObject._onChildCreate] receivedBy \"+this._owner+\" : \",e);var t={from:e.to,to:e.from,type:\"response\",id:e.id,body:{code:100}};this._bus.postMessage(t),e.body.value.resourceType?this._onHypertyResourceAdded(e):this._onChildAdded(e)}},{key:\"_onChildAdded\",value:function(e){var t=(0,p.deepClone)(e.body.value);t.parentObject=this;var r=t.children,n=new f.default(t);n.identity=e.body.identity,this._childrenObjects.hasOwnProperty(r)||(this._childrenObjects[r]={}),this._childrenObjects[r][t.url]=n,e.to===this.metadata.url&&n.store(),this._hypertyEvt(e,n)}},{key:\"_onHypertyResourceAdded\",value:function(e){var t=e.body.value,r=void 0,n=t.children;t.parentObject=this,(r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t)).identity=e.body.identity,this._childrenObjects.hasOwnProperty(n)||(this._childrenObjects[n]={}),this._childrenObjects[n][r.childId]=r,this._hypertyEvt(e,r),e.to===this.metadata.url&&r.store()}},{key:\"_hypertyEvt\",value:function(e,t){var r={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(r.resource=t),this._onAddChildrenHandler&&this._onAddChildrenHandler(r)}},{key:\"_onChange\",value:function(e,t){if(this._metadata.lastModified=(new Date).toISOString(),this._version++,\"live\"===this._status){var r={type:\"update\",from:this._url,to:this._url+\"/changes\",body:{version:this._version,source:this._owner,attribute:e.field,lastModified:this._metadata.lastModified}};v.log(\"[DataObject - _onChange] - \",e,t,r),e.oType===l.ObjectType.OBJECT?e.cType!==l.ChangeType.REMOVE&&(r.body.value=(0,p.deepClone)(e.data)):(r.body.attributeType=e.oType,r.body.value=e.data,e.cType!==l.ChangeType.UPDATE&&(r.body.operation=e.cType)),t&&(r.to=t.path,r.body.resource=t.childId),this.data._mutual||(r.body.mutual=this._mutual),this._bus.postMessage(r)}}},{key:\"_changeObject\",value:function(e,t){if(this._version+1<=t.body.version){this._version=t.body.version;var r=t.body.attribute,o=void 0;o=\"object\"===(0,n.default)(t.body.value)?(0,p.deepClone)(t.body.value):t.body.value;var i=e.findBefore(r);if(t.body.lastModified?this._metadata.lastModified=t.body.lastModified:this._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===l.ObjectType.ARRAY)if(t.body.operation===l.ChangeType.ADD){var s=i.obj,a=i.last;Array.prototype.splice.apply(s,[a,0].concat(o))}else if(t.body.operation===l.ChangeType.REMOVE){var u=i.obj,c=i.last;u.splice(c,o)}else i.obj[i.last]=o;else t.body.hasOwnProperty(\"value\")?i.obj[i.last]=o:delete i.obj[i.last]}else v.log(\"UNSYNCHRONIZED VERSION: (data => \"+this._version+\", msg => \"+t.body.version+\")\")}},{key:\"_changeChildren\",value:function(e){var t=(0,p.divideURL)(e.to).identity,r=t?t.substring(t.lastIndexOf(\"/\")+1):void 0,n=e.body.resource,o=this._childrenObjects[r][n];v.log(\"Change children: \",this._owner,e,r),o?this._changeObject(o._syncObj,e):v.warn(\"No children found for: \",n)}},{key:\"metadata\",get:function(){return this._metadata}},{key:\"url\",get:function(){return this._url}},{key:\"schema\",get:function(){return this._schema}},{key:\"status\",get:function(){return this._status}},{key:\"data\",get:function(){return this._syncObj.data}},{key:\"childrens\",get:function(){return this._childrenObjects}}]),e}();t.default=_,e.exports=t.default},function(e,t){!function(){\"use strict\";if(!Object.observe&&\"function\"==typeof Proxy){function e(e,t,r,n,o,i){var s,a=this;function u(e,n){if(u.delay=n,!u.pause&&a.changeset.length>0){if(!e){var o=a.changeset.filter(function(e){return!r||r.indexOf(e.type)>=0});o.length>0&&t(o)}a.changeset=[]}}return u.pause=o,u.delay=i,a.get=function(e,t){return\"__observer__\"===t?a:\"unobserve\"===t?function(){return Object.unobserve(e),e}:\"deliver\"===t?u:e[t]},a.target=e,a.changeset=[],a.target.__observerCallbacks__||(Object.defineProperty(e,\"__observerCallbacks__\",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,\"__observers__\",{enumerable:!1,configurable:!0,writable:!1,value:[]})),a.target.__observerCallbacks__.push(t),a.target.__observers__.push(this),s=new Proxy(e,a),u(!1,i),s}e.prototype.deliver=function(){return this.get(null,\"deliver\")},e.prototype.set=function(e,t,r){var n=e[t],o=void 0===n?\"add\":\"update\";if(e[t]=r,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(o)>=0)){var i={object:e,name:t,type:o},s=0===this.changeset.length,a=this.deliver();\"update\"===o&&(i.oldValue=n),this.changeset.push(i),s&&a(!1,\"number\"==typeof a.delay?a.delay:10)}return!0},e.prototype.deleteProperty=function(e,t){var r=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf(\"delete\")>=0){var n={object:e,name:t,type:\"delete\",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,\"number\"==typeof i.delay?i.delay:10)}return!0},e.prototype.defineProperty=function(e,t,r){if(Object.defineProperty(e,t,r),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf(\"reconfigure\")>=0){var n={object:e,name:t,type:\"reconfigure\"},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,\"number\"==typeof i.delay?i.delay:10)}return!0},e.prototype.setPrototypeOf=function(e,t){var r=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf(\"setPrototype\")>=0){var n={object:e,name:\"__proto__\",type:\"setPrototype\",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,\"number\"==typeof i.delay?i.delay:10)}return!0},e.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf(\"preventExtensions\")>=0){var t={object:e,type:\"preventExtensions\"},r=0===this.changeset.length,n=this.deliver();this.changeset.push(t),r&&n(!1,\"number\"==typeof n.delay?n.delay:10)}return!0},Object.observe=function(t,r,n,o,i,s){return new e(t,r,n,o,i,s)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(r,n){t===r&&(e.__observerCallbacks__.splice(n,1),delete e.__observers__[n].callback,e.__observers__.splice(n,1))})}},Array.observe=function(e,t,r,n,o,i){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError(\"First argument to Array.observer is not an Array\");r=r||[\"add\",\"update\",\"delete\",\"splice\"];var s=new Proxy(e,{get:function(t,n){return\"unobserve\"===n?function(e){return e?Object.unobserve(t,e):t.unobserve()}:\"splice\"===n?function(n,o){if(\"number\"!=typeof n||\"number\"!=typeof o)throw new TypeError(\"First two arguments to Array splice are not number, number\");var i=this.slice(n,n+o),s=arguments.length>1?arguments.length-2:0,u={object:e,type:\"splice\",index:n,removed:i,addedCount:s};if(t.splice.apply(t,arguments),r.indexOf(\"splice\")>=0){n=0===a.__observer__.changeset.length;var c=a.__observer__.deliver();a.__observer__.changeset.push(u),n&&c(!1,\"number\"==typeof c.delay?c.delay:10)}}:\"push\"===n?function(e){return this.splice(this.length,0,e)}:\"pop\"===n?function(){return this.splice(this.length-1,1)}:\"unshift\"===n?function(e){return this.splice(0,0,e)}:\"shift\"===n?function(){return this.splice(0,1)}:t[n]}}),a=Object.observe(s,function(e){var n=e.filter(function(e){return\"length\"!==e.name&&\"add\"!==e.name&&(!r||r.indexOf(e.type)>=0)});n.length>0&&t(n)},r,n,o,i);return a},Array.unobserve=function(e,t){return e.unobserve(t)}}Object.deepObserve=function(e,t,r){var n=function(e){return{}.toString.call(e).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()};function o(e,r){Object.keys(e).forEach(function(o){if((\"object\"===n(e[o])||\"array\"===n(e[o]))&&!e[o].hasOwnProperty(\"__observers__\")){var i=r.slice(0);i.push(o),e[o]=Object.deepObserve(e[o],t,i)}})}return o(e,r=r||[]),Object.observe(e,function(e){var n=[];e.forEach(function(e){var t=(r.length>0?r.join(\".\")+\".\":\"\")+e.name;\"update\"!==e.type&&\"add\"!==e.type||o(e.object,r),n.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),function e(t,r,o,i,s){i instanceof Object?Object.keys(i).forEach(function(a){if(!o||o[a]!==i[a]){var u=o&&void 0!==o[a]?o[a]:void 0,c=void 0===u?\"add\":\"update\",l=s+\".\"+a;n.push({name:t,object:r,type:c,oldValue:u,newValue:i[a],keypath:l}),e(t,r,u,i[a],l)}}):o instanceof Object&&Object.keys(o).forEach(function(a){var u=null===i?\"update\":\"delete\",c=s+\".\"+a;n.push({name:t,object:r,type:u,oldValue:o[a],newValue:i,keypath:c}),e(t,r,o[a],void 0,c)})}(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(n)})}}()},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=f(r(18)),o=f(r(25)),i=f(r(3)),s=f(r(5)),a=f(r(33)),u=f(r(34)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=f(r(129)),d=(r(19),f(r(130)));function f(e){return e&&e.__esModule?e:{default:e}}var p=c.getLogger(\"FileHypertyResource\"),h=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e,r));return n.metadata.resourceType=\"file\",n}return(0,u.default)(t,e),(0,s.default)(t,[{key:\"init\",value:function(e){var t=this;if(!e)throw new Error(\"[FileHypertyResource.constructor] missing mandatory *file* input \");return new n.default(function(r,n){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,p.log(\"[FileHypertyResource.init] file: \",e),t._isSender)switch(e.type.split(\"/\")[0]){case\"image\":t._getImagePreview(e).then(function(n){t._metadata.preview=n,t._content=e,r()});break;default:t._content=e,r()}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),r()})}},{key:\"_getImagePreview\",value:function(e){var t=new FileReader;return new n.default(function(r,n){d.default.resize(e,{width:100,height:100},function(e,n){n?(t.readAsDataURL(e),t.onload=function(e){r(e.target.result)}):(p.warn(\"[FileHypertyResource._getImagePreview] unable to create image preview from original image \"),r(void 0))})})}},{key:\"toMessage\",value:function(){}},{key:\"name\",get:function(){return this._metadata.name}},{key:\"preview\",get:function(){return this._metadata.preview}}]),t}(l.default);t.default=h,e.exports=t.default},function(e,t,r){e.exports={default:r(126),__esModule:!0}},function(e,t,r){r(127);var n=r(0).Object;e.exports=function(e,t){return n.getOwnPropertyDescriptor(e,t)}},function(e,t,r){var n=r(12),o=r(46).f;r(44)(\"getOwnPropertyDescriptor\",function(){return function(e,t){return o(n(e),t)}})},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=a(r(18)),o=a(r(3)),i=a(r(5)),s=a(r(124));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(){(0,o.default)(this,e)}return(0,i.default)(e,[{key:\"createHypertyResource\",value:function(e,t,r){var n=void 0;switch(t){case\"file\":n=new s.default(e,r);break;default:throw new Error(\"[HypertyResourceFactory.createHypertyResource] not supported type: \",t)}return n}},{key:\"createHypertyResourceWithContent\",value:function(e,t,r,o){var i=void 0;return new n.default(function(n){switch(t){case\"file\":i=new s.default(e,o);break;default:reject()}i.init(r).then(function(){return i.save()}).then(function(){n(i)})})}}]),e}();t.default=u,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=p(r(18)),o=p(r(25)),i=p(r(3)),s=p(r(5)),a=p(r(33)),u=p(r(100)),c=p(r(34)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),d=r(19),f=p(r(118));function p(e){return e&&e.__esModule?e:{default:e}}var h=l.getLogger(\"HypertyResource\"),y=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,r)),s=n;return s.arraybufferSizeLimit=5242880,s._isSender=e,s._localStorageURL=s._parentObject._syncher._runtimeUrl+\"/storage\",n}return(0,c.default)(t,e),(0,s.default)(t,[{key:\"save\",value:function(){var e=this;return new n.default(function(t,r){var n={from:e._owner,to:e._localStorageURL,type:\"create\",body:{value:(0,d.deepClone)(e._metadata)}};n.body.value.content=e._content,e._bus.postMessage(n,function(n){h.info(\"[HypertyResource.save] reply: \",n),e._bus.removeResponseListener(e._owner,n.id),200===n.body.code?(n.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(n.body.value)),t()):r(n.body.code+\" \"+n.body.desc)},!1)})}},{key:\"read\",value:function(e){var t=this;return h.info(\"[HypertyResource.read] \",this),new n.default(function(r,n){if(t.content)r(t);else{var o=t._getBestContentURL(t._metadata.contentURL);h.log(\"Storage:\",o);var i={from:t._owner,to:o.url,type:\"read\",body:{resource:o.url+\"/\"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(i.body.p2pRequester=t.metadata.p2pRequester,i.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(i,e).then(function(e){h.info(\"[HypertyResource] - get locally the resource:\",e),r(t)}).catch(function(i){h.warn(\"[HypertyResource] - get locally the resource fail\",i);var s={from:t._owner,to:o.remoteURL,type:\"read\",body:{resource:o.remoteURL+\"/\"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(s.body.p2pRequester=t.metadata.p2pRequester,s.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(s,e).then(function(e){h.warn(\"[HypertyResource] - get remotely the resource\",e),r(t)}).catch(function(e){h.warn(\"[HypertyResource] - get remotely the resource fail\",e),n(e.body.code+\" \"+e.body.desc)})})}})}},{key:\"_getBestResource\",value:function(e,t){var r=this;return new n.default(function(n,o){var i=setTimeout(function(){return r._bus.removeResponseListener(r._owner,s),e.body.code=408,e.body.desc=\"Response timeout\",o(e)},3e3),s=r._bus.postMessage(e,function(e){h.log(\"[HypertyResource.read] reply: \",e);var s=e.id;switch(clearTimeout(i),e.body.code){case 200:r._content=e.body.value.content,e.body.value.size<r.arraybufferSizeLimit&&r.save(),r._bus.removeResponseListener(r._owner,s),n(e);break;case 183:t(e.body.value);break;default:r._bus.removeResponseListener(r._owner,s),o(e)}},!1)})}},{key:\"delete\",value:function(){var e=this;h.info(\"[HypertyResource.delete]\",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:\"delete\",body:{resources:e.metadata.contentURL}};return new n.default(function(r){e._bus.postMessage(t,function(e){e.body.code<300?r(!0):r(!1)})})}},{key:\"_getBestContentURL\",value:function(e){var t=e[0],r=t.substr(t.lastIndexOf(\"/\")+1);return{url:this._localStorageURL,resource:r,remoteURL:t.substr(0,t.lastIndexOf(\"/\"))}}},{key:\"resourceType\",get:function(){return this.metadata.resourceType}},{key:\"mimetype\",get:function(){return this._metadata.type}},{key:\"content\",get:function(){return this._content}},{key:\"contentURL\",get:function(){return this._metadata.contentURL}},{key:\"shareable\",get:function(){var e=(0,u.default)(t.prototype.__proto__||(0,o.default)(t.prototype),\"metadata\",this);return e.resourceType=this.resourceType,e}}]),t}(f.default);t.default=y,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=\"undefined\"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),a=s&&\"undefined\"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),u=\"undefined\"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,c=u||\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof atob,l=\"undefined\"!=typeof FileReader||\"undefined\"!=typeof URL,d=function(){function e(){(0,n.default)(this,e)}return(0,o.default)(e,null,[{key:\"resize\",value:function(t,r,n){\"function\"==typeof r&&(n=r,r={width:640,height:480});r.width,r.height;if(!e.isSupported()||!t.type.match(/image.*/))return n(t,!1),!1;if(t.type.match(/image\\/gif/))return n(t,!1),!1;var o=document.createElement(\"img\");return o.onload=function(i){var s=o.width,a=o.height,c=!1;if(s>=a&&s>r.width?(a*=r.width/s,s=r.width,c=!0):a>r.height&&(s*=r.height/a,a=r.height,c=!0),c){var l=document.createElement(\"canvas\");if(l.width=s,l.height=a,l.getContext(\"2d\").drawImage(o,0,0,s,a),u)l.toBlob(function(e){n(e,!0)},t.type);else{var d=e._toBlob(l,t.type);n(d,!0)}}else n(t,!1)},e._loadImage(o,t),!0}},{key:\"_toBlob\",value:function(e,t){var r=e.toDataURL(t).split(\",\"),n=void 0;n=r[0].indexOf(\"base64\")>=0?atob(r[1]):decodeURIComponent(r[1]);for(var o=new ArrayBuffer(n.length),i=new Uint8Array(o),u=0;u<n.length;u+=1)i[u]=n.charCodeAt(u);var c=r[0].split(\":\")[1].split(\";\")[0],l=null;if(s)l=new Blob([a?i:o],{type:c});else{var d=new BlobBuilder;d.append(o),l=d.getBlob(c)}return l}},{key:\"_loadImage\",value:function(e,t,r){if(\"undefined\"==typeof URL){var n=new FileReader;n.onload=function(t){e.src=t.target.result,r&&r()},n.readAsDataURL(t)}else e.src=URL.createObjectURL(t),r&&r()}},{key:\"isSupported\",value:function(){return\"undefined\"!=typeof HTMLCanvasElement&&c&&l}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=f(r(18)),o=f(r(78)),i=f(r(3)),s=f(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19),c=f(r(132)),l=f(r(133)),d=f(r(135));function f(e){return e&&e.__esModule?e:{default:e}}var p=a.getLogger(\"Syncher\"),h=function(){function e(t,r,n){(0,i.default)(this,e);var o=this;o._owner=t,o._bus=r,o._subURL=n.runtimeURL+\"/sm\",o._runtimeUrl=n.runtimeURL,o._p2pHandler=n.p2pHandler,o._p2pRequester=n.p2pRequester,o._reporters={},o._observers={},o._provisionals={},r.addListener(t,function(e){if(e.from!==t)switch(p.info(\"[Syncher] Syncher-RCV: \",e,o),e.type){case\"forward\":o._onForward(e);break;case\"create\":o._onRemoteCreate(e);break;case\"delete\":o._onRemoteDelete(e);break;case\"execute\":o._onExecute(e)}})}return(0,s.default)(e,[{key:\"create\",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:\"no name\",a=arguments[6],c=arguments[7];if(!e)throw Error(\"[Syncher - Create] - You need specify the data object schema\");if(!t)throw Error(\"[Syncher - Create] -The observers should be defined\");c=c||{};var l=(0,o.default)({},c);return l.p2p=i,l.store=n,l.schema=e,l.authorise=t,l.p2pHandler=this._p2pHandler,l.p2pRequester=this._p2pRequester,l.data=r?(0,u.deepClone)(r):{},l.name=0===s.length?\"no name\":s,l.reporter=c.hasOwnProperty(\"reporter\")&&\"boolean\"!=typeof c.reporter?c.reporter:this._owner,l.resume=!1,c?(l.mutual=!c.hasOwnProperty(\"mutual\")||c.mutual,l.name=c.hasOwnProperty(\"name\")?c.name:l.name):l.mutual=!0,c.hasOwnProperty(\"reuseURL\")&&(l.resource=c.reuseURL),a&&(l.identity=a),p.log(\"[syncher - create] - create Reporter - createInput: \",l),this._create(l)}},{key:\"resumeReporters\",value:function(e){return p.log(\"[syncher - create] - resume Reporter - criteria: \",e),(0,o.default)(e,{resume:!0}),this._resumeCreate(e)}},{key:\"subscribe\",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments[5],a={};return a.p2p=n,a.store=r,a.schema=e,a.resource=t,s&&(a.identity=s),a.mutual=i,p.log(\"[syncher - subscribe] - subscribe criteria: \",a),(0,o.default)(a,{resume:!1}),this._subscribe(a)}},{key:\"resumeObservers\",value:function(e){var t=e||{};return(0,o.default)(t,{resume:!0}),this._resumeSubscribe(t)}},{key:\"read\",value:function(e){var t=this,r={type:\"read\",from:t._owner,to:e};return new n.default(function(e,n){t._bus.postMessage(r,function(i){p.log(\"[Syncher.read] reply: \",i);var s={},a={},u=0;if(i.body.code<300)if(i.body.value.hasOwnProperty(\"responses\"))if(0===u)a=i.body.value,++u;else{delete i.body.value.responses;var c=void 0;for(c in i.body.value)s.hasOwnProperty(c)||(s[c]={}),(0,o.default)(s[c],i.body.value[c]);++u===a.responses&&(a.childrenObjects=s,delete a.responses,t._bus.removeResponseListener(r.from,i.id),e(a))}else t._bus.removeResponseListener(r.from,i.id),e(i.body.value);else n(i.body.desc)},!1)})}},{key:\"onNotification\",value:function(e){this._onNotificationHandler=e}},{key:\"onClose\",value:function(e){this._onClose=e}},{key:\"_create\",value:function(e){var t=this;return new n.default(function(r,n){var i=(0,o.default)({},e),s=e.resume;i.created=(new Date).toISOString(),i.runtime=t._runtimeUrl;var a=(0,u.deepClone)(i);delete a.p2p,delete a.store,delete a.observers,delete a.identity;var l={type:\"create\",from:t._owner,to:t._subURL,body:{resume:s,value:a}};l.body.schema=i.schema,i.p2p&&(l.body.p2p=i.p2p),i.store&&(l.body.store=i.store),i.identity&&(l.body.identity=i.identity),p.log(\"[syncher._create]: \",i,l),t._bus.postMessage(l,function(o){if(p.log(\"[syncher - create] - create-response: \",o),200===o.body.code){i.url=o.body.resource,i.status=\"live\",i.syncher=t,i.childrens=o.body.childrenResources;var s=t._reporters[i.url];s||(s=new c.default(i),t._reporters[i.url]=s),s.inviteObservers(e.authorise,e.p2p),r(s)}else n(o.body.desc)})})}},{key:\"_resumeCreate\",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i=e.resume,s={type:\"create\",from:r._owner,to:r._subURL,body:{resume:i}};p.log(\"[syncher - create]: \",e,s),e&&(s.body.value=e,e.hasOwnProperty(\"reporter\")?s.body.value.reporter=e.reporter:s.body.value.reporter=r._owner),e.p2p&&(s.body.p2p=e.p2p),e.store&&(s.body.store=e.store),e.observers&&(s.body.authorise=e.observers),e.identity&&(s.body.identity=e.identity),p.log(\"[syncher._resumeCreate] - resume message: \",s),r._bus.postMessage(s,function(e){if(p.log(\"[syncher._resumeCreate] - create-resumed-response: \",e),200===e.body.code){var i=e.body.value;for(var s in i){var a=i[s];a.data=(0,u.deepClone)(a.data)||{},a.childrenObjects&&(a.childrenObjects=(0,u.deepClone)(a.childrenObjects)),a.mutual=!1,a.resume=!0,a.status=\"live\",a.syncher=r,p.log(\"[syncher._resumeCreate] - create-resumed-dataObjectReporter\",a);var l=new c.default(a);a.childrenObjects&&l.resumeChildrens(a.childrenObjects),r._reporters[a.url]=l}n(r._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:\"_subscribe\",value:function(e){var t=this;return new n.default(function(r,n){var o={type:\"subscribe\",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty(\"p2p\")&&(o.body.p2p=e.p2p),e.hasOwnProperty(\"store\")&&(o.body.store=e.store),e.hasOwnProperty(\"schema\")&&(o.body.schema=e.schema),e.hasOwnProperty(\"identity\")&&(o.body.identity=e.identity),e.hasOwnProperty(\"resource\")&&(o.body.resource=e.resource)),o.body.resume=e.resume,e.hasOwnProperty(\"mutual\")&&(o.body.mutual=e.mutual),p.log(\"[syncher_subscribe] - subscribe message: \",e,o),t._bus.postMessage(o,function(o){p.log(\"[syncher] - subscribe-response: \",o);var i=o.body.resource,s=t._provisionals[i];if(delete t._provisionals[i],s&&s._releaseListeners(),o.body.code<200)p.log(\"[syncher] - new DataProvisional: \",o.body.childrenResources,i),s=new d.default(t._owner,i,t._bus,o.body.childrenResources),t._provisionals[i]=s;else if(200===o.body.code){p.log(\"[syncher] - new Data Object Observer: \",o,t._provisionals);var a=o.body.value;a.syncher=t,a.p2p=e.p2p,a.store=e.store,a.identity=e.identity,a.resume=!1,a.mutual=e.mutual;var u=t._observers[i];u?u.sync():(u=new l.default(a),t._observers[i]=u),p.log(\"[syncher] - new Data Object Observer already exist: \",u),r(u),s&&s.apply(u)}else n(o.body.desc)})})}},{key:\"_resumeSubscribe\",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i={type:\"subscribe\",from:r._owner,to:r._subURL,body:{}};e&&(e.hasOwnProperty(\"p2p\")&&(i.body.p2p=e.p2p),e.hasOwnProperty(\"store\")&&(i.body.store=e.store),e.hasOwnProperty(\"schema\")&&(i.body.schema=e.schema),e.hasOwnProperty(\"identity\")&&(i.body.identity=e.identity),e.hasOwnProperty(\"resource\")&&(i.body.resource=e.url)),i.body.resume=e.resume;var s=e.mutual;e.hasOwnProperty(\"mutual\")&&(i.body.mutual=s),p.log(\"[syncher] - subscribe message: \",e,i),r._bus.postMessage(i,function(e){p.log(\"[syncher] - subscribe-resumed-response: \",e);var i=e.body.resource,s=r._provisionals[i];if(delete r._provisionals[i],s&&s._releaseListeners(),e.body.code<200)p.log(\"[syncher] - resume new DataProvisional: \",e,i),s=new d.default(r._owner,i,r._bus,e.body.childrenResources),r._provisionals[i]=s;else if(200===e.body.code){var a=e.body.value;for(var c in a){var f=a[c];p.log(\"[syncher] - Resume Object Observer: \",e,f,r._provisionals),f.childrenObjects&&(f.childrenObjects=(0,u.deepClone)(f.childrenObjects)),f.data=(0,u.deepClone)(f.data)||{},f.resume=!0,f.syncher=r,p.log(\"[syncher._resumeSubscribe] - create new dataObject: \",f);var h=new l.default(f);f.childrenObjects&&h.resumeChildrens(f.childrenObjects),p.log(\"[syncher._resumeSubscribe] - new dataObject\",h),r._observers[h.url]=h,r._provisionals[h.url]&&r._provisionals[h.url].apply(h)}n(r._observers),t._onObserversResume&&t._onObserversResume(r._observers)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:\"_onForward\",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:\"_onRemoteCreate\",value:function(e){var t=this,r=e.from.slice(0,-13),n=(0,u.divideURL)(r).domain,o={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:n}})}};t._onNotificationHandler&&(p.info(\"[Syncher] NOTIFICATION-EVENT: \",o),t._onNotificationHandler(o))}},{key:\"_onRemoteDelete\",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:\"unsubscribe\",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(p.log(\"NOTIFICATION-EVENT: \",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:\"_onExecute\",value:function(e){var t=this,r={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+\"/registry/\"||e.from===t._runtimeUrl+\"/registry\")&&e.body&&e.body.method&&\"close\"===e.body.method&&t._onClose){var n={type:\"close\",ack:function(e){e&&(r.body.code=e),t._bus.postMessage(r)}};p.info(\"[Syncher] Close-EVENT: \",n),t._onClose(n)}else t._bus.postMessage(r)}},{key:\"onReportersResume\",value:function(e){this._onReportersResume=e}},{key:\"onObserversResume\",value:function(e){this._onObserversResume=e}},{key:\"owner\",get:function(){return this._owner}},{key:\"reporters\",get:function(){return this._reporters}},{key:\"observers\",get:function(){return this._observers}}]),e}();t.default=h,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=y(r(42)),o=y(r(58)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=y(r(122)),h=r(19);function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger(\"DataObjectReporter\"),_=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._subscriptions={},n._syncObj.observe(function(e){v.log(\"[Syncher.DataObjectReporter] \"+n.url+\" publish change: \",e),n._onChange(e)}),n._allocateListeners(),n.invitations=[],n._childrenSizeThreshold=5e4,r}return(0,d.default)(t,e),(0,u.default)(t,[{key:\"_allocateListeners\",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),\"_allocateListeners\",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(v.log(\"[Syncher.DataObjectReporter] listener \"+e._url+\" Received: \",t),t.type){case\"response\":e._onResponse(t);break;case\"read\":e._onRead(t);break;case\"execute\":e._onExecute(t);break;case\"create\":e._onChildCreate(t)}})}},{key:\"_releaseListeners\",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),\"_releaseListeners\",this).call(this);this._objectListener.remove()}},{key:\"inviteObservers\",value:function(e,t){var r=this,n=e;n.length>0&&(v.log(\"[Syncher.DataObjectReporter] InviteObservers \",n,r._metadata),n.forEach(function(e){var n=new i.default(function(n,o){var i={type:\"create\",from:r._syncher._owner,to:r._syncher._subURL,body:{resume:!1,resource:r._url,schema:r._schema,value:r._metadata,authorise:[e]}};t&&(i.body.p2p=t),r.data.mutual||(i.body.mutual=r.data.mutual),r._bus.postMessage(i,function(t){v.log(\"[Syncher.DataObjectReporter] Invitation reply \",t);var r={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:\"Unknown\"};r.code<300?n(r):r.code>=300&&o(r)})});r.invitations.push(n)}))}},{key:\"delete\",value:function(){var e=this;e._deleteChildrens().then(function(t){v.log(t);var r={type:\"delete\",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(r,function(t){v.log(\"DataObjectReporter-DELETE: \",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:\"onSubscription\",value:function(e){this._onSubscriptionHandler=e}},{key:\"onResponse\",value:function(e){this._onResponseHandler=e}},{key:\"onRead\",value:function(e){this._onReadHandler=e}},{key:\"onExecute\",value:function(e){this._onExecuteHandler=e}},{key:\"_onForward\",value:function(e){switch(v.log(\"DataObjectReporter-RCV: \",e),e.body.type){case\"subscribe\":this._onSubscribe(e);break;case\"unsubscribe\":this._onUnSubscribe(e)}}},{key:\"_onSubscribe\",value:function(e){var t=this,r=e.body.from,n=(0,h.divideURL)(r),o=n.domain,i=!0;e.body.hasOwnProperty(\"mutual\")&&!e.body.mutual&&(i=!1),v.log(\"[DataObjectReporter._onSubscribe]\",e,o,n);var s={type:e.body.type,url:r,domain:o,identity:e.body.identity,nutual:i,accept:function(){var n={url:r,status:\"live\"};t._subscriptions[r]=n,t.metadata.subscriptions&&t.metadata.subscriptions.push(n.url);var o=(0,h.deepClone)(t._metadata);o.data=(0,h.deepClone)(t.data),o.version=t._version;var i={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:o}};return e.body.hasOwnProperty(\"mutual\")&&!e.body.mutual&&(i.body.mutual=e.body.mutual,t.data.mutual=!1),t._bus.postMessage(i),n},reject:function(r){t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:403,desc:r}})}};t._onSubscriptionHandler&&(v.log(\"SUBSCRIPTION-EVENT: \",s),t._onSubscriptionHandler(s))}},{key:\"_onUnSubscribe\",value:function(e){var t=e.body.from,r=(0,h.divideURL)(t),n=r.domain;v.log(\"[DataObjectReporter._onUnSubscribe]\",e,n,r),delete this._subscriptions[t],delete this.invitations[t];var o={type:e.body.type,url:t,domain:n,identity:e.body.identity};this._onSubscriptionHandler&&(v.log(\"UN-SUBSCRIPTION-EVENT: \",o),this._onSubscriptionHandler(o))}},{key:\"_onResponse\",value:function(e){var t={type:e.type,url:e.from,code:e.body.code};this._onResponseHandler&&(v.log(\"RESPONSE-EVENT: \",t),this._onResponseHandler(t))}},{key:\"_onRead\",value:function(e){var t=this,r=(0,o.default)(t.childrensJSON).length>t._childrenSizeThreshold,i={type:e.type,url:e.from,accept:function(){r?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(r){t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:401,desc:r}})}},s=[];t.metadata.subscriptions?s=t.metadata.subscriptions:t._subscriptions&&(s=(0,n.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=s.indexOf(e.from)?r?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(v.log(\"READ-EVENT: \",i),t._onReadHandler(i))}},{key:\"_syncReply\",value:function(e){var t=(0,h.deepClone)(this.metadata);t.data=(0,h.deepClone)(this.data),t.childrenObjects=(0,h.deepClone)(this.childrensJSON),t.version=this._version;var r={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:200,value:t}};this._bus.postMessage(r)}},{key:\"_syncReplyForLargeData\",value:function(e){var t=this,r=(0,h.deepClone)(t.metadata);r.data=(0,h.deepClone)(t.data),r.version=t._version,delete r.childrenObjects;var n=void 0,i=[],s={};for(n in t._childrenObjects){var a=void 0;for(a in s[n]={},t._childrenObjects[n])(0,o.default)(s).length>t._childrenSizeThreshold&&(i.push(s),(s={})[n]={}),s[n][a]={},s[n][a].value=t._childrenObjects[n][a].metadata,s[n][a].identity=t._childrenObjects[n][a].identity}i.push(s),r.responses=i.length+1;var u={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:100,value:r}};t._bus.postMessage(u),i.forEach(function(e){var n=(0,h.deepClone)(u);n.body.value=e,n.body.value.responses=r.responses,setTimeout(function(){t._bus.postMessage(n)},50)})}},{key:\"_onExecute\",value:function(e){var t=this;if(!e.body.method)throw e;var r={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:200}},n={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(r)},reject:function(r){t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:401,desc:r}})}};t._onExecuteHandler&&(v.log(\"[DataObjectReporter] EXECUTE-EVENT: \",n),t._onExecuteHandler(n))}},{key:\"subscriptions\",get:function(){return this._subscriptions}},{key:\"childrensJSON\",get:function(){var e={},t=void 0;for(t in this._childrenObjects){var r=void 0;for(r in e[t]={},this._childrenObjects[t])e[t][r]={},e[t][r].value=this._childrenObjects[t][r].metadata,e[t][r].identity=this._childrenObjects[t][r].identity}return e}}]),t}(p.default);t.default=_,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=y(r(42)),o=y(r(78)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=r(19),h=y(r(122));function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger(\"DataObjectObserver\"),_=\"any\",b=\"start\",m=\"exact\",g=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._version=e.version,n._filters={},n._syncObj.observe(function(e){n._onFilter(e)}),n._allocateListeners(),r}return(0,d.default)(t,e),(0,u.default)(t,[{key:\"sync\",value:function(){var e=this;return v.info(\"[DataObjectObserver_sync] synchronising \"),new i.default(function(t,r){e._syncher.read(e._metadata.url).then(function(r){v.info(\"[DataObjectObserver_sync] value to sync: \",r),(0,o.default)(e.data,(0,p.deepClone)(r.data)),e._version=r.version,e._metadata.lastModified=r.lastModified,r.childrenObjects?(e.resumeChildrens(r.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){v.info(\"[DataObjectObserver_sync] sync failed: \",e),t(!1)})})}},{key:\"_storeChildrens\",value:function(){var e=this,t={};(0,n.default)(e._childrenObjects).forEach(function(r){var o=e._childrenObjects[r];t[r]={},(0,n.default)(o).forEach(function(e){t[r][e]={},t[r][e].value=o[e].metadata,t[r][e].identity=o[e].identity})});var r={from:e._owner,to:e._syncher._subURL,type:\"create\",body:{resource:e._url,attribute:\"childrenObjects\",value:t}};e._bus.postMessage(r)}},{key:\"_allocateListeners\",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),\"_allocateListeners\",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+\"/changes\",function(t){\"update\"===t.type&&(v.log(\"DataObjectObserver-\"+e._url+\"-RCV: \",t),e._changeObject(e._syncObj,t))})}},{key:\"_releaseListeners\",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),\"_releaseListeners\",this).call(this);this._changeListener.remove()}},{key:\"delete\",value:function(){var e=this;e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:\"unsubscribe\",value:function(){var e=this,t={type:\"unsubscribe\",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){v.log(\"DataObjectObserver-UNSUBSCRIBE: \",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:\"onChange\",value:function(e,t){var r=e,n={type:m,callback:t},o=e.indexOf(\"*\");o===e.length-1&&(0===o?n.type=_:(n.type=b,r=e.substr(0,e.length-1))),this._filters[r]=n}},{key:\"_onFilter\",value:function(e){var t=this;(0,n.default)(t._filters).forEach(function(r){var n=t._filters[r];n.type===_?n.callback(e):n.type===b?0===e.field.indexOf(r)&&n.callback(e):n.type===m&&e.field===r&&n.callback(e)})}},{key:\"onDisconnected\",value:function(e){var t=this;return new i.default(function(r,n){t._subscribeRegistration().then(function(){t._onDisconnected=e,r()}).catch(function(e){return n(e)})})}},{key:\"_subscribeRegistration\",value:function(){var e=this,t={type:\"subscribe\",from:this._owner,to:this._syncher._runtimeUrl+\"/subscriptions\",body:{resources:[this._url+\"/registration\"]}};return new i.default(function(r,n){e._bus.postMessage(t,function(t){v.log(\"[DataObjectObserver._subscribeRegistration] \"+e._url+\" rcved reply \",t),200===t.body.code?(e._generateListener(e._url+\"/registration\"),r()):(v.error(\"Error subscribing registration status for \",e._url),n(\"Error subscribing registration status for \"+e._url))})})}},{key:\"_generateListener\",value:function(e){var t=this;t._bus.addListener(e,function(e){v.log(\"[DataObjectObserver.registrationNotification] \"+t._url+\": \",e),e.body.value&&\"disconnected\"===e.body.value&&t._onDisconnected&&(v.log(\"[DataObjectObserver] \"+t._url+\": was disconnected \",e),t._onDisconnected())})}},{key:\"execute\",value:function(e,t){var r=this,n=this;return new i.default(function(o,i){var s={type:\"execute\",from:r._owner,to:n._url,body:{method:e,params:t}};n._bus.postMessage(s,function(t){v.log(\"[DataObjectObserver.execute] \"+n._url+\" rcved reply \",t),200===t.body.code?o():(v.warn(\"[DataObjectObserver.execute] execution of method \"+e+\" was reject by reporter\"),i(\"[DataObjectObserver.execute] execution of method \"+e+\" was reject by reporter\"))})})}}]),t}(h.default);t.default=g,e.exports=t.default},,function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)).getLogger(\"DataProvisional\"),a=function(){function e(t,r,o,i){(0,n.default)(this,e);this._owner=t,this._url=r,this._bus=o,this._children=i,this._changes=[],this._allocateListeners()}return(0,o.default)(e,[{key:\"_allocateListeners\",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){s.log(\"DataProvisional-\"+e._url+\"-RCV: \",t),e._changes.push(t)})}},{key:\"_releaseListeners\",value:function(){this._listener.remove()}},{key:\"apply\",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:\"children\",get:function(){return this._children}}]),e}();t.default=a,e.exports=t.default},,,,,,,,function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=function(){function e(){(0,n.default)(this,e)}return(0,o.default)(e,[{key:\"addEventListener\",value:function(e,t){this[e]=t}},{key:\"trigger\",value:function(e,t){this[e]&&this[e](t)}}]),e}();t.default=s,e.exports=t.default},,,,,,,,,,,,,,,,,,,,,,function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.WalletReporter=void 0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(166));t.WalletReporter=n.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=p(r(42)),o=p(r(18)),i=p(r(25)),s=p(r(3)),a=p(r(5)),u=p(r(33)),c=p(r(34)),l=p(r(131)),d=p(r(143)),f=r(19);function p(e){return e&&e.__esModule?e:{default:e}}var h=function(e){function t(e,r,n,o){if((0,s.default)(this,t),!e)throw new Error(\"The hypertyURL is a needed parameter\");if(!r)throw new Error(\"The MiniBus is a needed parameter\");if(!n)throw new Error(\"The configuration is a needed parameter\");var a=(0,u.default)(this,(t.__proto__||(0,i.default)(t)).call(this,e,r,n));return console.info(\"[WalletReporter] started with url: \",e),a.syncher=o||new l.default(e,r,n),a.domain=(0,f.divideURL)(n.runtimeURL).domain,a.wallet={},a.walletDescURL=\"hyperty-catalogue://catalogue.\"+a.domain+\"/.well-known/dataschema/WalletData\",a.syncher.onNotification(function(e){a.onNotification(e)}),a.syncher.onClose(function(e){console.log(\"[WalletReporter.onClose]\"),a.setStatus(e.id,\"unavailable\"),e.ack()}),a}return(0,c.default)(t,e),(0,a.default)(t,[{key:\"start\",value:function(){var e=this,t=this;return new o.default(function(r){e.syncher.resumeReporters({store:!0}).then(function(e){var o=(0,n.default)(e);o.length>0?(console.log(\"[WalletReporter.start] resuming \",e[o[0]]),t.wallet=e[0],t._onSubscription(t.wallet),r(t.wallet)):(console.log(\"[WalletReporter.start] nothing to resume \",e),r(!1))}).catch(function(e){console.error(\"[WalletReporter] Resume failed | \",e)})}).catch(function(e){console.error(\"[WalletReporter] Start failed | \",e)})}},{key:\"processNotification\",value:function(e){console.log(\"[WalletReporter.processNotification: \",e),e.ack()}},{key:\"create\",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"myWallet\",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],a=this,u=void 0;return new o.default(function(o,c){(u=n||i?n&&!i?{resources:t,reporter:n}:!n&&i?{resources:t,reuseURL:i}:{resources:t,reuseURL:i,reporter:n}:{resources:t}).domain_registration=s,console.info(\"[WalletReporter.create] lets create a new Wallet Object \",u),a.syncher.create(a.walletDescURL,[],e,!0,!1,r,null,u).then(function(e){a.wallet=e,a._onSubscription(e),o(e)}).catch(function(e){c(e)})})}},{key:\"_onSubscription\",value:function(e){e.onSubscription(function(e){console.info(\"[WalletReporter._onSubscription] accepting: \",e),e.accept()})}},{key:\"addNewTransaction\",value:function(e){console.log(\"THIS [WalletReporter.setContext] before change :\",this.wallet),console.log(\"[WalletReporter.setContext] before change :\",this.wallet.data),this.wallet.data.transactions.push(e),console.debug(\"[WalletReporter.addNewTransaction] after change :\",this.wallet.data),this.trigger(\"wallet-update\",e)}}]),t}(d.default);t.default=h,e.exports=t.default}])});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc2VydmljZS1mcmFtZXdvcmsvZGlzdC9XYWxsZXRNYW5hZ2VyLmpzPzUxYTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLGVBQWUsK0pBQTJNLDBCQUEwQiwrQ0FBK0MsbUJBQW1CLFNBQVMsY0FBYyw0QkFBNEIsWUFBWSxxQkFBcUIsMkRBQTJELHVDQUF1QyxxQ0FBcUMsb0NBQW9DLEVBQUUsaUJBQWlCLGlDQUFpQyxpQkFBaUIsWUFBWSxVQUFVLHNCQUFzQixtQkFBbUIsaURBQWlELG1CQUFtQixnQkFBZ0IsaUJBQWlCLGlCQUFpQiw4QkFBOEIsZUFBZSw4SUFBOEksOEJBQThCLGlCQUFpQixnRUFBZ0UsdUJBQXVCLGtEQUFrRCxVQUFVLGlCQUFpQixhQUFhLHdDQUF3QywrRUFBK0UsaUJBQWlCLDRCQUE0QixrQ0FBa0MsTUFBTSxlQUFlLFVBQVUsSUFBSSxFQUFFLGlCQUFpQixhQUFhLGdCQUFnQixrQkFBa0IsMEJBQTBCLFdBQVcsUUFBUSxxQkFBcUIsZ0JBQWdCLFlBQVksV0FBVyxLQUFLLFdBQVcsdUdBQXVHLHVCQUF1Qix3Q0FBd0MsR0FBRyxpQkFBaUIsNERBQTRELDhFQUE4RSxzQ0FBc0MsWUFBWSw2SUFBNkksc0JBQXNCLHNCQUFzQix5QkFBeUIsb0JBQW9CLHVCQUF1Qix5QkFBeUIsb0JBQW9CLGdDQUFnQyxpQ0FBaUMsOEVBQThFLHFDQUFxQyxpRUFBaUUsZUFBZSxzQkFBc0Isd0RBQXdELGlCQUFpQixtREFBbUQsK0NBQStDLDZCQUE2QixnQkFBZ0IsVUFBVSxvRUFBb0UscUNBQXFDLGlCQUFpQixXQUFXLHNCQUFzQixpREFBaUQsVUFBVSxlQUFlLFFBQVEsZ0JBQWdCLHdCQUF3QixvQkFBb0IsaUJBQWlCLG1CQUFtQiwrQkFBK0IsdUJBQXVCLGlCQUFpQixpQkFBaUIsaUJBQWlCLG9CQUFvQixzQkFBc0IsZ0JBQWdCLGVBQWUsc0JBQXNCLElBQUksWUFBWSxTQUFTLFdBQVcsaUJBQWlCLFlBQVksMEJBQTBCLDRCQUE0QixVQUFVLDBCQUEwQixvQkFBb0IsNEJBQTRCLHNCQUFzQiw4QkFBOEIsd0JBQXdCLGtCQUFrQiw4QkFBOEIsZUFBZSxhQUFhLGVBQWUsd0JBQXdCLE9BQU8sZ0VBQWdFLGVBQWUsYUFBYSxpQkFBaUIsV0FBVyw4QkFBOEIsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSwwQkFBMEIsY0FBYywwQkFBMEIsV0FBVyxjQUFjLGNBQWMsc0VBQXNFLE1BQU0sdURBQXVELFdBQVcsa0NBQWtDLE9BQU8sOEJBQThCLGtIQUFrSCx1RUFBdUUseUZBQXlGLHFDQUFxQyxjQUFjLHFCQUFxQiwrREFBK0Qsd0NBQXdDLHFCQUFxQixPQUFPLDREQUE0RCwyQkFBMkIsbUNBQW1DLHlCQUF5Qix5Q0FBeUMsMkRBQTJELFdBQVcsK0NBQStDLGdDQUFnQyxpQ0FBaUMsV0FBVyxpQ0FBaUMsaUNBQWlDLFlBQVksOEJBQThCLG1FQUFtRSxJQUFJLGdFQUFnRSxLQUFLLFlBQVksS0FBSyxpQ0FBaUMsbUNBQW1DLEtBQUssaUJBQWlCLHFCQUFxQiw4REFBOEQsaUJBQWlCLEVBQUUsYUFBYSxzQkFBc0Isb0RBQW9ELG9CQUFvQixFQUFFLEVBQUUsa0VBQWtFLCtCQUErQixzQkFBc0IsK0VBQStFLDJCQUEyQiwyQkFBMkIsbUdBQW1HLGVBQWUseUJBQXlCLHFCQUFxQixpQkFBaUIsb0JBQW9CLG1DQUFtQyxlQUFlLGVBQWUsUUFBUSxVQUFVLHNCQUFzQiw4QkFBOEIsaUJBQWlCLFFBQVEsZUFBZSxhQUFhLHNFQUFzRSxjQUFjLGFBQWEsa0JBQWtCLHlEQUF5RCxnQkFBZ0IsV0FBVyw4Q0FBOEMsSUFBSSx5Q0FBeUMsU0FBUyxrQkFBa0IseURBQXlELGdCQUFnQixZQUFZLFdBQVcsS0FBSyxXQUFXLHdDQUF3QyxvQkFBb0Isa0JBQWtCLG1CQUFtQiw0SEFBNEgscUJBQXFCLGtCQUFrQixzRUFBc0UsdUJBQXVCLGtCQUFrQiwwQkFBMEIsYUFBYSxNQUFNLHNCQUFzQixJQUFJLHlCQUF5QixVQUFVLG9CQUFvQixvRUFBb0UsaUJBQWlCLDBCQUEwQixVQUFVLDJDQUEyQyxpQ0FBaUMsK0NBQStDLDRDQUE0QyxTQUFTLDBCQUEwQiw2TEFBNkwsMkJBQTJCLHFDQUFxQyxzQkFBc0IsSUFBSSxzQ0FBc0MsVUFBVSxJQUFJLHFEQUFxRCxFQUFFLFlBQVksaUdBQWlHLCtCQUErQixzQkFBc0IseUJBQXlCLDZCQUE2QiwwQkFBMEIsK0JBQStCLFVBQVUsK0NBQStDLGlCQUFpQix3QkFBd0Isb0dBQW9HLFdBQVcsNERBQTRELDBDQUEwQywrQkFBK0IsMkRBQTJELHlCQUF5QixTQUFTLEdBQUcsRUFBRSxlQUFlLHdCQUF3QixzQkFBc0IsbUVBQW1FLGVBQWUsc0JBQXNCLGlFQUFpRSxVQUFVLGlCQUFpQixXQUFXLDZCQUE2QixpQkFBaUIsMkNBQTJDLDBCQUEwQixtQ0FBbUMsd0JBQXdCLEdBQUcsaUJBQWlCLFdBQVcsd0JBQXdCLGtCQUFrQixRQUFRLGlFQUFpRSw2REFBNkQsa0VBQWtFLDREQUE0RCxpQkFBaUIsc0RBQXNELHNCQUFzQixnQ0FBZ0MsZUFBZSxNQUFNLHNCQUFzQixlQUFlLHNCQUFzQix5REFBeUQsVUFBVSxlQUFlLDZCQUE2QixzQkFBc0IsbUNBQW1DLGlCQUFpQixZQUFZLHNCQUFzQixxQkFBcUIsaUJBQWlCLGFBQWEsZ0JBQWdCLGtCQUFrQiwwQkFBMEIsV0FBVyxRQUFRLHdCQUF3Qiw0RkFBNEYsMEZBQTBGLGlCQUFpQixhQUFhLGdCQUFnQixxQ0FBcUMsY0FBYywwQkFBMEIsV0FBVyx3QkFBd0IsNEpBQTRKLDBDQUEwQyxhQUFhLG1EQUFtRCxtREFBbUQsaUJBQWlCLDRCQUE0QixzQkFBc0IsMEJBQTBCLGlCQUFpQix3RUFBd0UsRUFBRSx5QkFBeUIsa0NBQWtDLEVBQUUsdUJBQXVCLDhGQUE4RixFQUFFLGVBQWUscUhBQXFILGlCQUFpQiw2REFBNkQsY0FBYyxtQ0FBbUMsdUtBQXVLLElBQUksMEJBQTBCLFlBQVksdUNBQXVDLE1BQU0sOEZBQThGLGlCQUFpQixtQ0FBbUMsa0RBQWtELGVBQWUsVUFBVSxJQUFJLEVBQUUsaUJBQWlCLFNBQVMsaUJBQWlCLDJDQUEyQyxzQkFBc0IsOEJBQThCLGFBQWEsRUFBRSxpQ0FBaUMsYUFBYSxHQUFHLGlCQUFpQixXQUFXLDZCQUE2QixlQUFlLGlDQUFpQyxpQkFBaUIsMEJBQTBCLHdCQUF3QixtQkFBbUIscUJBQXFCLGlDQUFpQyxLQUFLLGVBQWUsaUJBQWlCLG9EQUFvRCx3QkFBd0Isc0JBQXNCLG1DQUFtQyxLQUFLLFdBQVcscUNBQXFDLFVBQVUsaUJBQWlCLHNGQUFzRix5QkFBeUIsMEJBQTBCLGNBQWMsVUFBVSx5Q0FBeUMsaUJBQWlCLGFBQWEsZ0JBQWdCLGlHQUFpRyxnQkFBZ0IsYUFBYSw4R0FBOEcsY0FBYywwQkFBMEIsV0FBVyw0RUFBNEUsbUNBQW1DLGFBQWEsaUlBQWlJLGlCQUFpQixhQUFhLG1JQUFtSSxhQUFhLGtDQUFrQyxTQUFTLHdCQUF3QiwwQkFBMEIsVUFBVSwwQ0FBMEMsc0JBQXNCLGtCQUFrQixzQkFBc0Isb0pBQW9KLG9KQUFvSixvQkFBb0Isc0RBQXNELG9EQUFvRCxrQ0FBa0MsMkJBQTJCLFVBQVUsaUJBQWlCLHVCQUF1QixzQkFBc0IsdUNBQXVDLGlCQUFpQixnQkFBZ0IsaUJBQWlCLGFBQWEsWUFBWSx3QkFBd0IsdUJBQXVCLFFBQVEsaUNBQWlDLHFFQUFxRSxRQUFRLHFDQUFxQyxLQUFLLGlCQUFpQixhQUFhLGdCQUFnQixrQ0FBa0MsNEJBQTRCLFlBQVksMEJBQTBCLG9CQUFvQixxQkFBcUIsOEJBQThCLGdCQUFnQixFQUFFLEVBQUUsaUJBQWlCLDJEQUEyRCw2Q0FBNkMsMklBQTJJLGlCQUFpQixNQUFNLDhmQUE4ZixXQUFXLEtBQUssbUNBQW1DLGlDQUFpQyxpQkFBaUIsWUFBWSxpRUFBaUUsNENBQTRDLGlCQUFpQixvQkFBb0IsK0JBQStCLGlCQUFpQixpREFBaUQsNENBQTRDLGVBQWUsaUJBQWlCLFdBQVcsNkJBQTZCLGlCQUFpQixXQUFXLDZCQUE2QixnQkFBZ0IsaUJBQWlCLE1BQU0sa0JBQWtCLDBCQUEwQixnQ0FBZ0MsaUJBQWlCLFdBQVcsMEJBQTBCLHNCQUFzQixFQUFFLGlCQUFpQiw4REFBOEQsaUJBQWlCLElBQUksc0JBQXNCLFVBQVUsK0VBQStFLElBQUksWUFBWSxXQUFXLHlGQUF5RixpQkFBaUIsNEJBQTRCLHNCQUFzQix1QkFBdUIsb0NBQW9DLFlBQVksS0FBSyxJQUFJLDJCQUEyQixVQUFVLElBQUksNENBQTRDLGVBQWUsaUJBQWlCLGtDQUFrQyx3QkFBd0Isa0NBQWtDLGlCQUFpQixxQ0FBcUMsd0JBQXdCLHlCQUF5QiwrQ0FBK0MsaUJBQWlCLDBJQUEwSSxjQUFjLFlBQVksd0JBQXdCLFdBQVcsaUJBQWlCLGVBQWUsZ0JBQWdCLHFCQUFxQixpQkFBaUIsbUJBQW1CLHdCQUF3Qix5QkFBeUIsd0NBQXdDLFFBQVEsZUFBZSxZQUFZLG1DQUFtQyxxQkFBcUIsd0JBQXdCLGdCQUFnQixzSkFBc0osd0JBQXdCLHNGQUFzRix5REFBeUQsK0JBQStCLGFBQWEsdUJBQXVCLGFBQWEsZUFBZSxlQUFlLHNCQUFzQixJQUFJLE9BQU8sWUFBWSxTQUFTLE9BQU8sWUFBWSxpQkFBaUIsMEJBQTBCLHdCQUF3Qix5Q0FBeUMsYUFBYSxrQ0FBa0MsaUJBQWlCLG9CQUFvQixzQkFBc0IscUJBQXFCLHlDQUF5Qyw4S0FBOEssaUJBQWlCLGFBQWEsaUNBQWlDLG9DQUFvQyxZQUFZLDRCQUE0QixpQkFBaUIsWUFBWSxzQkFBc0IsaUJBQWlCLDBCQUEwQixxREFBcUQsS0FBSyxnQ0FBZ0MsSUFBSSxzQkFBc0IsVUFBVSxpQkFBaUIsYUFBYSxvQ0FBb0MsNENBQTRDLGlDQUFpQyxZQUFZLG9DQUFvQyx1RkFBdUYsa0VBQWtFLGVBQWUsdUJBQXVCLGVBQWUsd0JBQXdCLE9BQU8sbUJBQW1CLGlCQUFpQiw4QkFBOEIseUJBQXlCLEVBQUUsc0JBQXNCLHVDQUF1QyxpQkFBaUIsa0ZBQWtGLFNBQVMscUJBQXFCLG9DQUFvQyxHQUFHLGdCQUFnQixPQUFPLE9BQU8saUJBQWlCLEVBQUUsY0FBYyxvQ0FBb0MsbUVBQW1FLFlBQVksbUJBQW1CLGdCQUFnQixLQUFLLGNBQWMsdUJBQXVCLFlBQVksa0JBQWtCLGVBQWUsS0FBSyxjQUFjLHNCQUFzQiwwQ0FBMEMsaUJBQWlCLFdBQVcsOEJBQThCLGlCQUFpQixXQUFXLDZCQUE2QixpQkFBaUIsMENBQTBDLGlCQUFpQixXQUFXLDZCQUE2QixpQkFBaUIsOENBQThDLGlCQUFpQixhQUFhLHNTQUFzUyxpTUFBaU0sZ0JBQWdCLE1BQU0sZUFBZSxtQkFBbUIsUUFBUSxLQUFLLEtBQUssa0JBQWtCLGFBQWEsMkNBQTJDLGlCQUFpQiwwQkFBMEIsZ0JBQWdCLDhDQUE4Qyx5QkFBeUIsYUFBYSxzQkFBc0IsbUJBQW1CLHNHQUFzRyxtQkFBbUIsd0JBQXdCLGtDQUFrQyxpQkFBaUIsS0FBSyxxQ0FBcUMsSUFBSSxvQkFBb0IsU0FBUyxlQUFlLDZCQUE2QiwwRkFBMEYsaUJBQWlCLDRDQUE0QyxhQUFhLHlEQUF5RCxlQUFlLDZCQUE2QixXQUFXLHNDQUFzQyxTQUFTLGVBQWUseUNBQXlDLFdBQVcsMENBQTBDLFVBQVUsb0JBQW9CLHFFQUFxRSw4REFBOEQsaUZBQWlGLG9CQUFvQixzQkFBc0IsT0FBTyxrQ0FBa0MsZUFBZSw0R0FBNEcsZUFBZSxvQkFBb0IsU0FBUyxFQUFFLDJJQUEySSxZQUFZLFlBQVksMkJBQTJCLGFBQWEsYUFBYSx1QkFBdUIsZ0JBQWdCLGlDQUFpQyxvQkFBb0IsZ0RBQWdELG9DQUFvQyxzQkFBc0IsS0FBSyxzQkFBc0IsTUFBTSx5QkFBeUIscUJBQXFCLGlDQUFpQyw4R0FBOEcsaUNBQWlDLFVBQVUsMkJBQTJCLE1BQU0sSUFBSSxNQUFNLGdCQUFnQixXQUFXLHNCQUFzQixzQkFBc0IsbUJBQW1CLHdCQUF3QixvRUFBb0UsNkRBQTZELHVCQUF1QiwrR0FBK0csaUJBQWlCLDRCQUE0QixzQkFBc0IsaUJBQWlCLGdDQUFnQyxXQUFXLCtCQUErQixVQUFVLGlCQUFpQixZQUFZLHFDQUFxQyxxQkFBcUIsaUJBQWlCLDBCQUEwQiw4R0FBOEcsd0JBQXdCLG1EQUFtRCxJQUFJLFlBQVksU0FBUyxrQkFBa0IsYUFBYSxpQkFBaUIsdUJBQXVCLGlCQUFpQixvQkFBb0IsaUJBQWlCLGlDQUFpQyxpQkFBaUIsb0JBQW9CLHdCQUF3QixtQkFBbUIsZ0JBQWdCLEVBQUUsaUJBQWlCLDJDQUEyQyxpQkFBaUIsb0JBQW9CLGtDQUFrQyxtQkFBbUIsZ0JBQWdCLEVBQUUsaUJBQWlCLFdBQVcsNkJBQTZCLGlCQUFpQiwyQ0FBMkMsaUJBQWlCLFdBQVcsZ0JBQWdCLHlCQUF5QixFQUFFLGlCQUFpQixrQ0FBa0Msd0VBQXdFLFdBQVcsMkNBQTJDLGlCQUFpQixJQUFJLG1HQUFtRyxTQUFTLEtBQUsscUJBQXFCLHdDQUF3QyxHQUFHLHNCQUFzQixpQkFBaUIsV0FBVyw2QkFBNkIsaUJBQWlCLE1BQU0sa0JBQWtCLHdCQUF3QixzQkFBc0IsaUJBQWlCLFdBQVcsZ0JBQWdCLGFBQWEsRUFBRSxpQkFBaUIsYUFBYSxnQkFBZ0IsMkJBQTJCLGNBQWMsMEJBQTBCLFdBQVcsNEJBQTRCLGlDQUFpQyx5QkFBeUIsZUFBZSx1QkFBdUIsZ0NBQWdDLDhCQUE4QixZQUFZLG9DQUFvQyxpQkFBaUIsdUNBQXVDLDZDQUE2QyxvREFBb0QsaUJBQWlCLDhEQUE4RCxpQkFBaUIsYUFBYSx1UEFBdVAsd0JBQXdCLElBQUksc0NBQXNDLCtCQUErQixRQUFRLDhIQUE4SCxXQUFXLGlCQUFpQixNQUFNLGdEQUFnRCxpQkFBaUIsVUFBVSxRQUFRLFdBQVcsYUFBYSwyQ0FBMkMsNERBQTRELElBQUksNkpBQTZKLFNBQVMsdUJBQXVCLFdBQVcsV0FBVywrQkFBK0IsR0FBRyxlQUFlLG9CQUFvQix3QkFBd0Isc0JBQXNCLGlFQUFpRSxtQkFBbUIsbUVBQW1FLGlEQUFpRCxFQUFFLGVBQWUseUNBQXlDLGVBQWUsb0JBQW9CLE1BQU0sNERBQTRELHNCQUFzQixFQUFFLEVBQUUsZUFBZSxXQUFXLDBFQUEwRSxlQUFlLGFBQWEsVUFBVSxrQkFBa0IsSUFBSSxxREFBcUQsc0JBQXNCLE9BQU8sWUFBWSxJQUFJLDRCQUE0QixTQUFTLGFBQWEsMEJBQTBCLFNBQVMsUUFBUSxXQUFXLE9BQU8sa0JBQWtCLDJDQUEyQyxJQUFJLDJCQUEyQixTQUFTLGdCQUFnQixnQkFBZ0IsbUZBQW1GLGdDQUFnQyxtQkFBbUIsbUJBQW1CLHFLQUFxSyxtQkFBbUIsNEJBQTRCLGVBQWUsWUFBWSwwREFBMEQsbUJBQW1CLGtDQUFrQyxvQkFBb0IsVUFBVSw4RUFBOEUsbUJBQW1CLGNBQWMsaUNBQWlDLCtCQUErQixvQkFBb0IsZ0NBQWdDLG9DQUFvQyxrQkFBa0IsY0FBYyxnQkFBZ0Isd0RBQXdELGlCQUFpQixtQkFBbUIsZUFBZSxpREFBaUQsMkJBQTJCLElBQUksWUFBWSxFQUFFLDZCQUE2QixrQkFBa0IsNENBQTRDLG1CQUFtQiwrQkFBK0IsRUFBRSxFQUFFLDhCQUE4QixFQUFFLGVBQWUsNEJBQTRCLHNGQUFzRixVQUFVLGlCQUFpQiwwREFBMEQsTUFBTSxpQ0FBaUMsMkJBQTJCLFNBQVMseUJBQXlCLCtEQUErRCxTQUFTLGtCQUFrQixJQUFJLDhEQUE4RCxxQkFBcUIsbUJBQW1CLDZDQUE2QyxxQkFBcUIsaUJBQWlCLFdBQVcsNEJBQTRCLElBQUksOEJBQThCLFNBQVMsZUFBZSxtQ0FBbUMsaUJBQWlCLGlEQUFpRCxzQkFBc0IsNENBQTRDLGVBQWUsMEJBQTBCLGlCQUFpQixpQkFBaUIsOEJBQThCLHVDQUF1QyxpREFBaUQsMkRBQTJELHFFQUFxRSxxQkFBcUIsaUJBQWlCLG9IQUFvSCxxQkFBcUIsdUJBQXVCLFFBQVEsOEJBQThCLEVBQUUsRUFBRSxnQkFBZ0IsSUFBSSxJQUFJLFNBQVMsd0JBQXdCLHVCQUF1QixrQkFBa0IsZUFBZSxpRUFBaUUsd0JBQXdCLGFBQWEsV0FBVyxrQkFBa0IsYUFBYSxLQUFLLHVDQUF1QyxvQkFBb0IsaUJBQWlCLGVBQWUsYUFBYSxtQkFBbUIsT0FBTyxrQkFBa0IsaUNBQWlDLGlCQUFpQixxQkFBcUIsNkJBQTZCLGlCQUFpQixZQUFZLDBCQUEwQiw2Q0FBNkMsVUFBVSxpQkFBaUIsYUFBYSxrREFBa0Qsc0JBQXNCLHdDQUF3QyxzQkFBc0IsK0JBQStCLGFBQWEsR0FBRyxpQkFBaUIsNEJBQTRCLElBQUksZUFBZSxvQkFBb0IsS0FBSyx5QkFBeUIsUUFBUSxFQUFFLFVBQVUsd0JBQXdCLG1CQUFtQixTQUFTLElBQUksbUJBQW1CLGtCQUFrQixPQUFPLFdBQVcsaUJBQWlCLFNBQVMsTUFBTSxVQUFVLFVBQVUsaUJBQWlCLGFBQWEseUNBQXlDLHFCQUFxQixvQkFBb0IsMERBQTBELCtCQUErQixnQ0FBZ0MsU0FBUyxFQUFFLGlCQUFpQixnQ0FBZ0MsUUFBUSxFQUFFLEtBQUssRUFBRSxpQkFBaUIsYUFBYSwyQkFBMkIsaUJBQWlCLGdCQUFnQix1QkFBdUIsK0NBQStDLEVBQUUsa0JBQWtCLGFBQWEsc0NBQXNDLFNBQVMsbUNBQW1DLHdCQUF3QixPQUFPLFlBQVksY0FBYywwQkFBMEIsV0FBVyxpQkFBaUIsY0FBYyxzQkFBc0IsbUNBQW1DLGlCQUFpQixtQ0FBbUMsd0JBQXdCLGdDQUFnQyx5QkFBeUIsRUFBRSw2QkFBNkIsK0JBQStCLCtCQUErQixFQUFFLG1DQUFtQyxRQUFRLDRCQUE0QixzREFBc0QsRUFBRSx1Q0FBdUMsaUJBQWlCLDZCQUE2QixPQUFPLEtBQUssRUFBRSx5Q0FBeUMsV0FBVyw0Q0FBNEMsb0JBQW9CLGdCQUFnQixFQUFFLEdBQUcsRUFBRSxtQ0FBbUMsb0NBQW9DLEtBQUssR0FBRyxFQUFFLG1DQUFtQyx3QkFBd0Isd0VBQXdFLDRCQUE0QiwyREFBMkQsc0NBQXNDLG1DQUFtQyxtQ0FBbUMsc0NBQXNDLCtCQUErQixHQUFHLEVBQUUsMEJBQTBCLG1CQUFtQixLQUFLLG1CQUFtQiwwQ0FBMEMsaUJBQWlCLCtCQUErQixZQUFZLGlCQUFpQixhQUFhLHNDQUFzQyxTQUFTLEVBQUUsaURBQWlELDRCQUE0QixTQUFTLGlGQUFpRixxQkFBcUIsNEJBQTRCLGNBQWMsMEJBQTBCLFdBQVcsa0RBQWtELGNBQWMsc0JBQXNCLGNBQWMsOERBQThELDByQkFBMHJCLDBPQUEwTyx3QkFBd0IsOEJBQThCLFdBQVcsNkNBQTZDLGFBQWEseUVBQXlFLGlCQUFpQixjQUFjLE9BQU8sa0RBQWtELHlCQUF5QixpUEFBaVAsd0RBQXdELHVCQUF1Qiw2R0FBNkcsT0FBTyx5RkFBeUYsa0NBQWtDLEtBQUssc0JBQXNCLHdDQUF3QyxVQUFVLHVCQUF1QixFQUFFLE1BQU0sR0FBRyxFQUFFLDZCQUE2QixRQUFRLGdEQUFnRCwrQ0FBK0MsT0FBTyx1RkFBdUYsb0RBQW9ELDhEQUE4RCxFQUFFLDBDQUEwQyxXQUFXLGdGQUFnRixnR0FBZ0csSUFBSSxFQUFFLHlDQUF5Qyx5Q0FBeUMsRUFBRSw4QkFBOEIsMEJBQTBCLEVBQUUsaUNBQWlDLGtDQUFrQyxnREFBZ0QsR0FBRyxFQUFFLG1DQUFtQywyQkFBMkIsRUFBRSxvQ0FBb0MsT0FBTyxnREFBZ0QscURBQXFELEVBQUUsK0JBQStCLG9CQUFvQiwyQkFBMkIsRUFBRSw4QkFBOEIsdUJBQXVCLEVBQUUsNkJBQTZCLHNCQUFzQixFQUFFLG1DQUFtQyw0QkFBNEIsRUFBRSwwQkFBMEIsMkJBQTJCLEVBQUUsK0JBQStCLGlCQUFpQixnQkFBZ0IsdUJBQXVCLEtBQUssR0FBRyxnQ0FBZ0MsaUJBQWlCLG9DQUFvQyxpQkFBaUIsV0FBVyxvQkFBb0IsY0FBYyxFQUFFLGlCQUFpQixhQUFhLDREQUE0RCwrQkFBK0IsUUFBUSxLQUFLLHFDQUFxQyw4Q0FBOEMsT0FBTyxTQUFTLHdCQUF3QixpQkFBaUIsZ0JBQWdCLGtEQUFrRCxJQUFJLHlFQUF5RSxJQUFJLGlDQUFpQyxTQUFTLEdBQUcsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSxrRkFBa0YsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQix3REFBd0QsY0FBYywwQkFBMEIsV0FBVyw2Q0FBNkMsY0FBYyxzQkFBc0IsY0FBYyx5REFBeUQsNFlBQTRZLGt1QkFBa3VCLHVCQUF1Qix3QkFBd0IsdUNBQXVDLGdDQUFnQyxxREFBcUQsdURBQXVELDJCQUEyQixFQUFFLDBDQUEwQyx3Q0FBd0MsMEdBQTBHLDZDQUE2Qyx5RUFBeUUsaUNBQWlDLE1BQU0sc0JBQXNCLE1BQU0sOEJBQThCLEVBQUUsNkJBQTZCLEdBQUcsRUFBRSx5Q0FBeUMsV0FBVyx5Q0FBeUMsV0FBVyx3REFBd0QseURBQXlELDZDQUE2QyxFQUFFLEdBQUcsRUFBRSx3Q0FBd0Msa0RBQWtELHFDQUFxQyxXQUFXLHFDQUFxQyxTQUFTLCtEQUErRCx3WkFBd1osRUFBRSx5Q0FBeUMsRUFBRSxxQ0FBcUMsY0FBYyx1Q0FBdUMsdUJBQXVCLHNCQUFzQixPQUFPLG1HQUFtRyxtR0FBbUcsRUFBRSwrQ0FBK0MsY0FBYyx1Q0FBdUMsOEVBQThFLHNCQUFzQixPQUFPLG1HQUFtRyxtR0FBbUcsRUFBRSw2QkFBNkIsd0JBQXdCLEVBQUUsOEJBQThCLHdCQUF3QixFQUFFLDRCQUE0Qix3QkFBd0IsRUFBRSx1Q0FBdUMsb0JBQW9CLGlDQUFpQyxrREFBa0Qsb0lBQW9JLGVBQWUscUJBQXFCLEVBQUUsaUVBQWlFLHNDQUFzQyxHQUFHLEVBQUUsd0NBQXdDLGdCQUFnQixpQ0FBaUMsZ0JBQWdCLGtEQUFrRCxhQUFhLHNCQUFzQixhQUFhLHlCQUF5Qix3QkFBd0IsK0hBQStILCtGQUErRix3Q0FBd0MsdURBQXVELEdBQUcsRUFBRSx1Q0FBdUMsc0JBQXNCLElBQUksMFNBQTBTLEVBQUUsbURBQW1ELFdBQVcsaUNBQWlDLDJEQUEyRCxtR0FBbUcseUdBQXlHLGVBQWUseUJBQXlCLEVBQUUsaUVBQWlFLDBDQUEwQyxFQUFFLEdBQUcsRUFBRSxtQ0FBbUMsOEJBQThCLEVBQUUsdUNBQXVDLHFFQUFxRSxPQUFPLGtEQUFrRCxXQUFXLDBHQUEwRyxFQUFFLHNDQUFzQyxvQ0FBb0Msb0JBQW9CLG9DQUFvQyxnR0FBZ0csK0ZBQStGLEVBQUUsZ0RBQWdELHlDQUF5Qyw4TEFBOEwsbUdBQW1HLEVBQUUsc0NBQXNDLE9BQU8sOEZBQThGLDBGQUEwRixFQUFFLG9DQUFvQywrRkFBK0YsT0FBTywyREFBMkQsc0dBQXNHLGtYQUFrWCxFQUFFLHdDQUF3QyxvQ0FBb0MsNkJBQTZCLGdDQUFnQyxvRkFBb0Ysc0JBQXNCLDhNQUE4TSxxQkFBcUIsZ0RBQWdELGdEQUFnRCxxQkFBcUIsY0FBYyxxQkFBcUIseUVBQXlFLDhGQUE4RixFQUFFLHdDQUF3QyxrSUFBa0ksbUhBQW1ILEVBQUUsOEJBQThCLHVCQUF1QixFQUFFLHlCQUF5QixrQkFBa0IsRUFBRSw0QkFBNEIscUJBQXFCLEVBQUUsNEJBQTRCLHFCQUFxQixFQUFFLDBCQUEwQiwyQkFBMkIsRUFBRSwrQkFBK0IsOEJBQThCLEtBQUssR0FBRyxnQ0FBZ0MsZUFBZSxZQUFZLGFBQWEsOENBQThDLHdCQUF3QixhQUFhLGdCQUFnQiw2Q0FBNkMsT0FBTyxxQ0FBcUMsK0JBQStCLEVBQUUsaUJBQWlCLGdCQUFnQiwrQ0FBK0Msc0RBQXNELDZCQUE2QixzQkFBc0IsNkdBQTZHLG1EQUFtRCwyQ0FBMkMsbURBQW1ELHVHQUF1RywrQkFBK0IsZ0NBQWdDLGlDQUFpQyx1Q0FBdUMsK0ZBQStGLE9BQU8sdUJBQXVCLDhDQUE4QyxpR0FBaUcsU0FBUywwQ0FBMEMsV0FBVyx5R0FBeUcsT0FBTyx5Q0FBeUMsOENBQThDLG9FQUFvRSxTQUFTLDRDQUE0QywrSEFBK0gsT0FBTyxtQ0FBbUMsOENBQThDLG9FQUFvRSxTQUFTLDBDQUEwQywrQkFBK0IsOEhBQThILE9BQU8seURBQXlELDhDQUE4QyxvRUFBb0UsU0FBUywyQ0FBMkMsb0lBQW9JLE9BQU8sa0NBQWtDLDhDQUE4QyxvRUFBb0UsU0FBUyxzQ0FBc0MsMEJBQTBCLGdDQUFnQyw0QkFBNEIsb0lBQW9JLDhDQUE4Qyw0R0FBNEcsR0FBRyxxQ0FBcUMsbUhBQW1ILHdDQUF3QyxtQkFBbUIsa0JBQWtCLGtDQUFrQyw2Q0FBNkMsNEJBQTRCLDRIQUE0SCxxRUFBcUUsdURBQXVELHVEQUF1RCxzQ0FBc0MsK0JBQStCLCtFQUErRSx3QkFBd0Isb0NBQW9DLHNCQUFzQixvQ0FBb0MsMkJBQTJCLDBCQUEwQix3QkFBd0Isd0JBQXdCLE9BQU8saUNBQWlDLDJCQUEyQixvRUFBb0UsRUFBRSxpQkFBaUIsVUFBVSxTQUFTLCtCQUErQix1QkFBdUIsbUNBQW1DLGtCQUFrQixRQUFRLDJEQUEyRCxnQkFBZ0IsbUNBQW1DLG1GQUFtRixpQkFBaUIsNkNBQTZDLEVBQUUsaURBQWlELFNBQVMsc0JBQXNCLDZDQUE2Qyx5REFBeUQsZ0dBQWdHLHdCQUF3Qix1REFBdUQsb0JBQW9CLHlFQUF5RSxRQUFRLDBEQUEwRCxtQkFBbUIsMERBQTBELDJDQUEyQyxRQUFRLDBEQUEwRCx1QkFBdUIsRUFBRSxnREFBZ0QsT0FBTyxHQUFHLEdBQUcsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSxrRkFBa0YsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQix3Q0FBd0MsY0FBYywwQkFBMEIsV0FBVyx1REFBdUQsZ0JBQWdCLHNCQUFzQix5RUFBeUUsd0NBQXdDLDJDQUEyQyw2QkFBNkIsV0FBVywyRkFBMkYsbUNBQW1DLDZNQUE2TSxtREFBbUQsdUNBQXVDLEVBQUUsTUFBTSx5QkFBeUIseUVBQXlFLEdBQUcsRUFBRSx5Q0FBeUMscUJBQXFCLG1DQUFtQyxvQkFBb0IscUJBQXFCLGVBQWUsMkNBQTJDLG1CQUFtQixtSEFBbUgsRUFBRSxHQUFHLEVBQUUsbUNBQW1DLEVBQUUsMEJBQTBCLDRCQUE0QixFQUFFLDZCQUE2QiwrQkFBK0IsS0FBSyxZQUFZLGdDQUFnQyxpQkFBaUIsV0FBVyw4QkFBOEIsaUJBQWlCLE9BQU8sa0JBQWtCLHdCQUF3Qix3Q0FBd0MsaUJBQWlCLHNCQUFzQiw0Q0FBNEMscUJBQXFCLGtCQUFrQixFQUFFLGlCQUFpQixhQUFhLHNDQUFzQyxTQUFTLEVBQUUsK0NBQStDLGNBQWMsMEJBQTBCLFdBQVcsaUJBQWlCLGFBQWEsc0JBQXNCLHdCQUF3QixrREFBa0QsYUFBYSxVQUFVLGdDQUFnQyxNQUFNLGlHQUFpRyxVQUFVLEVBQUUsK0RBQStELGFBQWEsaUNBQWlDLFVBQVUsZ0NBQWdDLE1BQU0saUJBQWlCLDBCQUEwQixnQkFBZ0Isa0JBQWtCLEtBQUssRUFBRSxHQUFHLEtBQUssR0FBRyxnQ0FBZ0MsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSw4RkFBOEYsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQiw0QkFBNEIsY0FBYywwQkFBMEIsV0FBVyxtREFBbUQsZ0JBQWdCLHNCQUFzQiwyRUFBMkUseUhBQXlILDJDQUEyQyw0QkFBNEIsV0FBVyxtQ0FBbUMsT0FBTyx3REFBd0QscUNBQXFDLGlFQUFpRSw2UEFBNlAsS0FBSyxHQUFHLEVBQUUsNkJBQTZCLFdBQVcsMEVBQTBFLGtCQUFrQixLQUFLLG1EQUFtRCxvQkFBb0IsT0FBTyx5Q0FBeUMsdUNBQXVDLCtLQUErSywrREFBK0Qsb0JBQW9CLDhEQUE4RCxPQUFPLCtDQUErQyw2Q0FBNkMsK0tBQStLLCtEQUErRCxvQkFBb0IsOEZBQThGLEVBQUUsR0FBRyxHQUFHLEVBQUUsMkNBQTJDLFdBQVcsbUNBQW1DLDRCQUE0QixxR0FBcUcseUNBQXlDLDBDQUEwQyxXQUFXLG9DQUFvQywySUFBMkksTUFBTSx5QkFBeUIsTUFBTSx3REFBd0QsS0FBSyxHQUFHLEVBQUUsOEJBQThCLFdBQVcsOENBQThDLE9BQU8sd0RBQXdELGtDQUFrQyxpQ0FBaUMsaUNBQWlDLDRCQUE0QixFQUFFLEdBQUcsRUFBRSwyQ0FBMkMsNENBQTRDLE9BQU8sZ0ZBQWdGLEVBQUUsa0NBQWtDLG1DQUFtQyxFQUFFLDhCQUE4Qiw0QkFBNEIsRUFBRSw2QkFBNkIsc0JBQXNCLEVBQUUsZ0NBQWdDLGtDQUFrQyxFQUFFLCtCQUErQix1RkFBdUYsMkNBQTJDLEtBQUssWUFBWSxnQ0FBZ0MsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSx3QkFBd0IsY0FBYywwQkFBMEIsV0FBVywyQ0FBMkMsSUFBSSx5QkFBeUIsU0FBUyxVQUFVLG1EQUFtRCxJQUFJLGtEQUFrRCxTQUFTLFVBQVUscVBBQXFQLGFBQWEsc0JBQXNCLDZCQUE2QixtQ0FBbUMsOEJBQThCLHFCQUFxQixFQUFFLGlCQUFpQixnRUFBZ0UsZ0RBQWdELG9DQUFvQyw0QkFBNEIsOEJBQThCLGdHQUFnRyx1Q0FBdUMsdUZBQXVGLFFBQVEsU0FBUyxLQUFLLDBCQUEwQixTQUFTLGFBQWEsdUJBQXVCLEVBQUUsa0NBQWtDLHlDQUF5QyxnRUFBZ0UsNERBQTRELFdBQVcsMEJBQTBCLGlDQUFpQyxhQUFhLHlCQUF5QixPQUFPLEVBQUUsS0FBSyxzQkFBc0IsMkJBQTJCLFVBQVUsRUFBRSx1Q0FBdUMsNEJBQTRCLHFCQUFxQixxQkFBcUIsNkJBQTZCLG9CQUFvQiwwQ0FBMEMsRUFBRSxtQ0FBbUMsbURBQW1ELEtBQUssR0FBRyxnQ0FBZ0MsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSw0REFBNEQsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQixvREFBb0QsY0FBYywwQkFBMEIsV0FBVywwQ0FBMEMsa0JBQWtCLHNCQUFzQixXQUFXLHFKQUFxSixnQkFBZ0IsbUJBQW1CLDZCQUE2QixtRUFBbUUsOEJBQThCLE1BQU0sa0NBQWtDLE1BQU0sa0NBQWtDLE1BQU0sK0JBQStCLEVBQUUsd0JBQXdCLG1DQUFtQyx5TkFBeU4sa0ZBQWtGLHlFQUF5RSxRQUFRLHNCQUFzQixJQUFJLGdKQUFnSixnWkFBZ1osRUFBRSx3Q0FBd0MscUZBQXFGLFVBQVUseUJBQXlCLEVBQUUsb0NBQW9DLHlNQUF5TSx1SkFBdUosVUFBVSxzQkFBc0IsRUFBRSx3Q0FBd0MsWUFBWSx1QkFBdUIsVUFBVSw0QkFBNEIsRUFBRSw2QkFBNkIsY0FBYyxnQ0FBZ0MsbUNBQW1DLGlDQUFpQyxrQ0FBa0MsUUFBUSxLQUFLLEtBQUssMkZBQTJGLEtBQUssOEJBQThCLGFBQWEsbURBQW1ELHNDQUFzQyw0R0FBNEcsZ0VBQWdFLG9CQUFvQixLQUFLLEdBQUcsRUFBRSx1Q0FBdUMsK0JBQStCLEVBQUUsZ0NBQWdDLGlCQUFpQixFQUFFLGdDQUFnQyxXQUFXLG1DQUFtQyxzQkFBc0IsZUFBZSwyREFBMkQseUJBQXlCLGlFQUFpRSxPQUFPLCtDQUErQyxtQkFBbUIsNExBQTRMLHdFQUF3RSx1RkFBdUYsMEJBQTBCLHdGQUF3RixvQkFBb0IsRUFBRSxHQUFHLEVBQUUsc0NBQXNDLGtCQUFrQixtQ0FBbUMsa0JBQWtCLCtDQUErQyxXQUFXLHlYQUF5WCxxRkFBcUYsbUJBQW1CLGdCQUFnQixXQUFXLGtDQUFrQyxzTUFBc00sdUJBQXVCLDhFQUE4RSx5RUFBeUUsMkJBQTJCLGlCQUFpQixFQUFFLEdBQUcsRUFBRSxtQ0FBbUMsV0FBVyxtQ0FBbUMsT0FBTyxxREFBcUQsa2JBQWtiLDRDQUE0QywyQ0FBMkMsNk5BQTZOLDJCQUEyQixrRUFBa0UsbUJBQW1CLDRGQUE0RixzQkFBc0IscUlBQXFJLG9CQUFvQixFQUFFLEdBQUcsRUFBRSx5Q0FBeUMsa0JBQWtCLG1DQUFtQyxPQUFPLHFEQUFxRCxnU0FBZ1MsZUFBZSw0SEFBNEgsb0RBQW9ELDJDQUEyQyw2TUFBNk0sMkJBQTJCLG1CQUFtQixnQkFBZ0IsV0FBVyw4S0FBOEsseUZBQXlGLHVCQUF1Qiw2TEFBNkwseUVBQXlFLDJCQUEyQixpQkFBaUIsRUFBRSxHQUFHLEVBQUUsbUNBQW1DLDBDQUEwQyxFQUFFLHdDQUF3QyxnRUFBZ0UsK0hBQStILFVBQVUsNkJBQTZCLGtEQUFrRCxRQUFRLElBQUksb0dBQW9HLEVBQUUsd0NBQXdDLGtEQUFrRCwyREFBMkQsMkJBQTJCLG1EQUFtRCxPQUFPLDJEQUEyRCxVQUFVLGlEQUFpRCxrREFBa0Qsd0JBQXdCLElBQUksd0ZBQXdGLHlCQUF5QixrREFBa0QsMEJBQTBCLEdBQUcsRUFBRSxtQ0FBbUMsY0FBYyxrREFBa0QsV0FBVywwSUFBMEksT0FBTyw2QkFBNkIsMkNBQTJDLGtEQUFrRCw0QkFBNEIsRUFBRSwwQ0FBMEMsMkJBQTJCLEVBQUUsMENBQTBDLDJCQUEyQixFQUFFLDJCQUEyQixvQkFBb0IsRUFBRSwrQkFBK0Isd0JBQXdCLEVBQUUsK0JBQStCLHdCQUF3QixLQUFLLEdBQUcsZ0NBQWdDLGlCQUFpQixhQUFhLHNDQUFzQyxTQUFTLEVBQUUsb0hBQW9ILDRCQUE0QixTQUFTLGlGQUFpRixxQkFBcUIsNEJBQTRCLGNBQWMsMEJBQTBCLFdBQVcsc0RBQXNELGNBQWMsc0JBQXNCLDJFQUEyRSwwQkFBMEIsZ0NBQWdDLGtGQUFrRix5RUFBeUUsMkNBQTJDLDBDQUEwQyxzR0FBc0csV0FBVyx3REFBd0Qsc0ZBQXNGLGdDQUFnQyxNQUFNLHdCQUF3QixNQUFNLDhCQUE4QixNQUFNLGtDQUFrQyxHQUFHLEVBQUUseUNBQXlDLHFHQUFxRywrQkFBK0IsRUFBRSwwQ0FBMEMsZUFBZSx3R0FBd0csa0NBQWtDLE9BQU8saUVBQWlFLDZFQUE2RSxnR0FBZ0csMERBQTBELE9BQU8sbUdBQW1HLGtDQUFrQyxFQUFFLEVBQUUsc0JBQXNCLElBQUksRUFBRSw4QkFBOEIsV0FBVyxzQ0FBc0MsU0FBUyxPQUFPLHdEQUF3RCxrQkFBa0IsaUNBQWlDLG1JQUFtSSxFQUFFLEVBQUUsR0FBRyxFQUFFLHVDQUF1QywrQkFBK0IsRUFBRSxtQ0FBbUMsMkJBQTJCLEVBQUUsK0JBQStCLHVCQUF1QixFQUFFLGtDQUFrQywwQkFBMEIsRUFBRSxtQ0FBbUMsd0RBQXdELHFDQUFxQyxNQUFNLDJDQUEyQyxFQUFFLHFDQUFxQyw4REFBOEQseUdBQXlHLE9BQU8sb0ZBQW9GLE9BQU8scUJBQXFCLHFGQUFxRixtQ0FBbUMsb0RBQW9ELE9BQU8sa0RBQWtELG9DQUFvQywrSEFBK0gsb0JBQW9CLG9CQUFvQixrREFBa0QsaUJBQWlCLElBQUkseUZBQXlGLEVBQUUsdUNBQXVDLGtEQUFrRCw0R0FBNEcsT0FBTywwREFBMEQsa0dBQWtHLEVBQUUsb0NBQW9DLE9BQU8seUNBQXlDLG1GQUFtRixFQUFFLGdDQUFnQywrRUFBK0UseUNBQXlDLDhDQUE4QyxvQkFBb0Isb0JBQW9CLGtEQUFrRCxpQkFBaUIsR0FBRyxNQUFNLHlIQUF5SCwrQkFBK0Isd0lBQXdJLEVBQUUsbUNBQW1DLHFDQUFxQyxnSEFBZ0gsT0FBTyxrREFBa0QsbUJBQW1CLDBCQUEwQixFQUFFLCtDQUErQyx5Q0FBeUMsNkVBQTZFLHVCQUF1Qiw2QkFBNkIsYUFBYSxnQkFBZ0IseUZBQXlGLE9BQU8sWUFBWSxvR0FBb0csaUNBQWlDLE9BQU8sa0RBQWtELG1CQUFtQiw0Q0FBNEMseUJBQXlCLHdFQUF3RSxzQkFBc0IsS0FBSyxHQUFHLEVBQUUsbUNBQW1DLFdBQVcsMEJBQTBCLE9BQU8sa0RBQWtELFVBQVUsSUFBSSxtRkFBbUYsc0JBQXNCLG9CQUFvQixvQkFBb0Isa0RBQWtELGlCQUFpQixJQUFJLCtGQUErRixFQUFFLG1DQUFtQyw0QkFBNEIsRUFBRSxtQ0FBbUMsUUFBUSxVQUFVLGdDQUFnQyxhQUFhLGdCQUFnQixvQ0FBb0MsMEdBQTBHLFVBQVUsS0FBSyxZQUFZLGdDQUFnQyxpQkFBaUIsYUFBYSxzQ0FBc0MsU0FBUyxFQUFFLG9IQUFvSCw0QkFBNEIsU0FBUyxpRkFBaUYscUJBQXFCLDRCQUE0QixjQUFjLDBCQUEwQixXQUFXLGtGQUFrRixjQUFjLHNCQUFzQiwyRUFBMkUseUNBQXlDLGdDQUFnQyxlQUFlLDJCQUEyQiwyQ0FBMkMsNEJBQTRCLFdBQVcsc0ZBQXNGLGtEQUFrRCwwUEFBMFAsb0JBQW9CLDBEQUEwRCxFQUFFLEdBQUcsRUFBRSx1Q0FBdUMsZ0JBQWdCLHNEQUFzRCw0QkFBNEIsT0FBTyxzQ0FBc0MsVUFBVSw0REFBNEQsRUFBRSxFQUFFLE9BQU8sd0RBQXdELHNEQUFzRCx1QkFBdUIsRUFBRSwwQ0FBMEMsc0dBQXNHLFdBQVcsbUVBQW1FLGtHQUFrRyxHQUFHLEVBQUUseUNBQXlDLHFHQUFxRywrQkFBK0IsRUFBRSw4QkFBOEIsV0FBVyxxQ0FBcUMsMkVBQTJFLEdBQUcsRUFBRSxtQ0FBbUMsY0FBYyw2REFBNkQsa0JBQWtCLGlDQUFpQyw0SEFBNEgsR0FBRyxFQUFFLG1DQUFtQyxXQUFXLGtCQUFrQixrQkFBa0IseUZBQXlGLEVBQUUsa0NBQWtDLFdBQVcsOENBQThDLG9CQUFvQixpSEFBaUgsR0FBRyxFQUFFLHVDQUF1QyxXQUFXLG1DQUFtQywyQ0FBMkMsd0JBQXdCLG9CQUFvQixZQUFZLEVBQUUsR0FBRyxFQUFFLDhDQUE4QyxjQUFjLHNGQUFzRix3Q0FBd0MsbUNBQW1DLGlDQUFpQyx5UUFBeVEsRUFBRSxHQUFHLEVBQUUsMENBQTBDLFdBQVcsaUNBQWlDLDBOQUEwTixHQUFHLEVBQUUsa0NBQWtDLGtCQUFrQixtQ0FBbUMsT0FBTyw2Q0FBNkMsb0JBQW9CLGlDQUFpQyxtUUFBbVEsRUFBRSxHQUFHLEtBQUssWUFBWSxnQ0FBZ0Msa0JBQWtCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSx3QkFBd0IsY0FBYywwQkFBMEIsV0FBVyxrQkFBa0IsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQixrREFBa0Qsb0JBQW9CLHNCQUFzQixrR0FBa0csd0JBQXdCLDBDQUEwQyxXQUFXLGtEQUFrRCwrREFBK0QsR0FBRyxFQUFFLHlDQUF5Qyx5QkFBeUIsRUFBRSw4QkFBOEIsa0NBQWtDLDhCQUE4QixHQUFHLEVBQUUsOEJBQThCLHVCQUF1QixLQUFLLEdBQUcsZ0NBQWdDLHdCQUF3QixhQUFhLHNDQUFzQyxTQUFTLEVBQUUsd0JBQXdCLGNBQWMsMEJBQTBCLFdBQVcsaUJBQWlCLGFBQWEsc0JBQXNCLHdCQUF3QiwyQ0FBMkMsV0FBVyxFQUFFLGtDQUFrQyxxQkFBcUIsS0FBSyxHQUFHLGdDQUFnQyxzQ0FBc0MsYUFBYSxzQ0FBc0MsU0FBUywwQkFBMEIsa0JBQWtCLDBCQUEwQixXQUFXLFNBQVMsMkJBQTJCLGlCQUFpQixhQUFhLHNDQUFzQyxTQUFTLEVBQUUsK0dBQStHLGNBQWMsMEJBQTBCLFdBQVcsa0JBQWtCLG9CQUFvQixvRkFBb0YsMkRBQTJELGlFQUFpRSwyRUFBMkUsd0pBQXdKLHFJQUFxSSxvQkFBb0IsZ0NBQWdDLGdGQUFnRixJQUFJLDJDQUEyQyw2QkFBNkIsa0JBQWtCLGlDQUFpQywyQkFBMkIsU0FBUyxtQkFBbUIsdUJBQXVCLDhMQUE4TCxvQkFBb0IscURBQXFELEVBQUUsb0JBQW9CLG9EQUFvRCxHQUFHLEVBQUUsNENBQTRDLGdFQUFnRSxFQUFFLGlDQUFpQyxpUkFBaVIsbUNBQW1DLGVBQWUsdUJBQXVCLFFBQVEsdUJBQXVCLEVBQUUsa0NBQWtDLEVBQUUsWUFBWSwwS0FBMEsscUNBQXFDLG9CQUFvQixLQUFLLEVBQUUsR0FBRyxFQUFFLHdDQUF3Qyw2QkFBNkIsMEVBQTBFLEdBQUcsRUFBRSwwQ0FBMEMsbVRBQW1ULEtBQUssWUFBWSxnQ0FBZ0MsR0FBRyIsImZpbGUiOiI2Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHZlcnNpb246IDAuOS4wXG4vLyBkYXRlOiBUdWUgSnVsIDE3IDIwMTggMTE6MDE6MzYgR01UKzAxMDAgKFdlc3Rlcm4gRXVyb3BlYW4gU3VtbWVyIFRpbWUpXG4vLyBsaWNlbmNlOiBcbi8qKlxuKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0FcbiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcbiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMXG4qIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WXG4qIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxuKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHXG4qIENvcHlyaWdodCAyMDE2IEFwaXplZVxuKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxuKlxuKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4qIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuKlxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKlxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4qIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4qIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qKi9cblxuXG4hZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShcIldhbGxldE1hbmFnZXJcIixbXSx0KTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzLldhbGxldE1hbmFnZXI9dCgpOihlW1wiXCJdPWVbXCJcIl18fHt9LGVbXCJcIl0uV2FsbGV0TWFuYWdlcj10KCkpfShcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gcihuKXtpZih0W25dKXJldHVybiB0W25dLmV4cG9ydHM7dmFyIG89dFtuXT17aTpuLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbbl0uY2FsbChvLmV4cG9ydHMsbyxvLmV4cG9ydHMsciksby5sPSEwLG8uZXhwb3J0c31yZXR1cm4gci5tPWUsci5jPXQsci5kPWZ1bmN0aW9uKGUsdCxuKXtyLm8oZSx0KXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om59KX0sci5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiByLmQodCxcImFcIix0KSx0fSxyLm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LHIucD1cIlwiLHIoci5zPTE2NSl9KFtmdW5jdGlvbihlLHQpe3ZhciByPWUuZXhwb3J0cz17dmVyc2lvbjpcIjIuNS43XCJ9O1wibnVtYmVyXCI9PXR5cGVvZiBfX2UmJihfX2U9cil9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5leHBvcnRzPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZiYmc2VsZi5NYXRoPT1NYXRoP3NlbGY6RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1wibnVtYmVyXCI9PXR5cGVvZiBfX2cmJihfX2c9cil9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDM2KShcIndrc1wiKSxvPXIoMjMpLGk9cigxKS5TeW1ib2wscz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBpOyhlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPXMmJmlbZV18fChzP2k6bykoXCJTeW1ib2wuXCIrZSkpfSkuc3RvcmU9bn0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz0hcigxMykoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LFwiYVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShyKDU5KSk7dC5kZWZhdWx0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbz10W3JdO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSwoMCxuLmRlZmF1bHQpKGUsby5rZXksbyl9fXJldHVybiBmdW5jdGlvbih0LHIsbil7cmV0dXJuIHImJmUodC5wcm90b3R5cGUsciksbiYmZSh0LG4pLHR9fSgpfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKSxvPXIoMCksaT1yKDE0KSxzPXIoMTEpLGE9cigxMCksdT1mdW5jdGlvbihlLHQscil7dmFyIGMsbCxkLGY9ZSZ1LkYscD1lJnUuRyxoPWUmdS5TLHk9ZSZ1LlAsdj1lJnUuQixfPWUmdS5XLGI9cD9vOm9bdF18fChvW3RdPXt9KSxtPWIucHJvdG90eXBlLGc9cD9uOmg/blt0XTooblt0XXx8e30pLnByb3RvdHlwZTtmb3IoYyBpbiBwJiYocj10KSxyKShsPSFmJiZnJiZ2b2lkIDAhPT1nW2NdKSYmYShiLGMpfHwoZD1sP2dbY106cltjXSxiW2NdPXAmJlwiZnVuY3Rpb25cIiE9dHlwZW9mIGdbY10/cltjXTp2JiZsP2koZCxuKTpfJiZnW2NdPT1kP2Z1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKHQscixuKXtpZih0aGlzIGluc3RhbmNlb2YgZSl7c3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbmV3IGU7Y2FzZSAxOnJldHVybiBuZXcgZSh0KTtjYXNlIDI6cmV0dXJuIG5ldyBlKHQscil9cmV0dXJuIG5ldyBlKHQscixuKX1yZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3JldHVybiB0LnByb3RvdHlwZT1lLnByb3RvdHlwZSx0fShkKTp5JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBkP2koRnVuY3Rpb24uY2FsbCxkKTpkLHkmJigoYi52aXJ0dWFsfHwoYi52aXJ0dWFsPXt9KSlbY109ZCxlJnUuUiYmbSYmIW1bY10mJnMobSxjLGQpKSl9O3UuRj0xLHUuRz0yLHUuUz00LHUuUD04LHUuQj0xNix1Llc9MzIsdS5VPTY0LHUuUj0xMjgsZS5leHBvcnRzPXV9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBlP251bGwhPT1lOlwiZnVuY3Rpb25cIj09dHlwZW9mIGV9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig5KSxvPXIoMzkpLGk9cigyNykscz1PYmplY3QuZGVmaW5lUHJvcGVydHk7dC5mPXIoNCk/T2JqZWN0LmRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKGUsdCxyKXtpZihuKGUpLHQ9aSh0LCEwKSxuKHIpLG8pdHJ5e3JldHVybiBzKGUsdCxyKX1jYXRjaChlKXt9aWYoXCJnZXRcImluIHJ8fFwic2V0XCJpbiByKXRocm93IFR5cGVFcnJvcihcIkFjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIVwiKTtyZXR1cm5cInZhbHVlXCJpbiByJiYoZVt0XT1yLnZhbHVlKSxlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCFuKGUpKXRocm93IFR5cGVFcnJvcihlK1wiIGlzIG5vdCBhbiBvYmplY3QhXCIpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0KXt2YXIgcj17fS5oYXNPd25Qcm9wZXJ0eTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gci5jYWxsKGUsdCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig4KSxvPXIoMTYpO2UuZXhwb3J0cz1yKDQpP2Z1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5mKGUsdCxvKDEscikpfTpmdW5jdGlvbihlLHQscil7cmV0dXJuIGVbdF09cixlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNTUpLG89cigzMCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKGUpe3JldHVybiEwfX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDI0KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gocil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gZS5jYWxsKHQscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixuKXtyZXR1cm4gZS5jYWxsKHQscixuKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG4sbyl7cmV0dXJuIGUuY2FsbCh0LHIsbixvKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSEwfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybntlbnVtZXJhYmxlOiEoMSZlKSxjb25maWd1cmFibGU6ISgyJmUpLHdyaXRhYmxlOiEoNCZlKSx2YWx1ZTp0fX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPXt9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoMTAyKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBuPWkocig1OCkpLG89aShyKDQyKSk7ZnVuY3Rpb24gaShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gcyhlKXtmdW5jdGlvbiB0KGUpe3JldHVybiBlLnJlcGxhY2UoLyhbYS16QS1aLV0qKSg6XFwvXFwvKD86XFwuKT98OikoWy1hLXpBLVowLTlAOiUuX1xcK34jPV17MiwyNTZ9KShbLWEtekEtWjAtOUA6JS5fXFwrfiM9XFwvXSopL2dpLFwiJDEsJDMsJDRcIikuc3BsaXQoXCIsXCIpfXZhciByPXQoZSk7aWYoclswXT09PWUmJiFyWzBdLmluY2x1ZGVzKFwiQFwiKSl7dmFyIG49e3R5cGU6XCJcIixkb21haW46ZSxpZGVudGl0eTpcIlwifTtyZXR1cm4gY29uc29sZS53YXJuKFwiW0RpdmlkZVVSTF0gRGl2aWRlVVJMIGRvbid0IHN1cHBvcnQgdXJsIHdpdGhvdXQgc2NoZW1lLiBQbGVhc2UgcmV2aWV3IHlvdXIgdXJsIGFkZHJlc3NcIixlKSxufXJbMF09PT1lJiZyWzBdLmluY2x1ZGVzKFwiQFwiKSYmKHI9dCgoclswXT09PWU/XCJzbXRwXCI6clswXSkrXCI6Ly9cIityWzBdKSk7cmV0dXJuIHJbMV0uaW5jbHVkZXMoXCJAXCIpJiYoclsyXT1yWzBdK1wiOi8vXCIrclsxXSxyWzFdPXJbMV0uc3Vic3RyKHJbMV0uaW5kZXhPZihcIkBcIikrMSkpLHt0eXBlOnJbMF0sZG9tYWluOnJbMV0saWRlbnRpdHk6clsyXX19ZnVuY3Rpb24gYShlKXt2YXIgdD1lLmluZGV4T2YoXCJAXCIpO3JldHVyblwidXNlcjovL1wiK2Uuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCkrXCIvXCIrZS5zdWJzdHJpbmcoMCx0KX10LmRpdmlkZVVSTD1zLHQuZGl2aWRlRW1haWw9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5pbmRleE9mKFwiQFwiKTtyZXR1cm57dXNlcm5hbWU6ZS5zdWJzdHJpbmcoMCx0KSxkb21haW46ZS5zdWJzdHJpbmcodCsxLGUubGVuZ3RoKX19LHQuZW1wdHlPYmplY3Q9ZnVuY3Rpb24oZSl7cmV0dXJuISgoMCxvLmRlZmF1bHQpKGUpLmxlbmd0aD4wKX0sdC5kZWVwQ2xvbmU9ZnVuY3Rpb24oZSl7aWYoZSlyZXR1cm4gSlNPTi5wYXJzZSgoMCxuLmRlZmF1bHQpKGUpKX0sdC5nZXRVc2VyVVJMRnJvbUVtYWlsPWEsdC5nZXRVc2VyRW1haWxGcm9tVVJMPWZ1bmN0aW9uKGUpe3ZhciB0PXMoZSk7cmV0dXJuIHQuaWRlbnRpdHkucmVwbGFjZShcIi9cIixcIlwiKStcIkBcIit0LmRvbWFpbn0sdC5jb252ZXJ0VG9Vc2VyVVJMPWZ1bmN0aW9uKGUpe2lmKFwidXNlcjovL1wiPT09ZS5zdWJzdHJpbmcoMCw3KSl7dmFyIHQ9cyhlKTtpZih0LmRvbWFpbiYmdC5pZGVudGl0eSlyZXR1cm4gZTt0aHJvd1widXNlclVSTCB3aXRoIHdyb25nIGZvcm1hdFwifXJldHVybiBhKGUpfSx0LmNoZWNrQXR0cmlidXRlPWZ1bmN0aW9uKGUpe3ZhciB0PS8oKChbYS16QS1aXSspOlxcL1xcLyhbMC05YS16QS1aXVstXFx3XSpbMC05YS16QS1aXVxcLikrW2EtekEtWl17Miw5fSlcXC9bYS16QS1aMC05XFwuXStAW2EtekEtWjAtOV0rKFxcLSk/W2EtekEtWjAtOV0rKFxcLik/W2EtekEtWjAtOV17MiwxMH0/XFwuW2EtekEtWl17MiwxMH0pKC4rKD89LmlkZW50aXR5KSk/L2dtLHI9W10sbj1bXTtpZihudWxsPT1lLm1hdGNoKHQpKW49ZS5zcGxpdChcIi5cIik7ZWxzZXtmb3IodmFyIG89dm9pZCAwO251bGwhPT0obz10LmV4ZWMoZSkpOylvLmluZGV4PT09dC5sYXN0SW5kZXgmJnQubGFzdEluZGV4Kyssby5mb3JFYWNoKGZ1bmN0aW9uKGUsdCl7MD09PXQmJnIucHVzaChlKX0pO3ZhciBpPXZvaWQgMDtyLmZvckVhY2goZnVuY3Rpb24odCl7aT1lLnJlcGxhY2UodCxcIiorKlwiKSxuPWkuc3BsaXQoXCIuXCIpLm1hcChmdW5jdGlvbihlKXtyZXR1cm5cIiorKlwiPT09ZT90OmV9KX0pfXJldHVybiBjb25zb2xlLmxvZyhcIltTZXJ2aWNlRnJhbWV3b3JrLlV0aWxzLmNoZWNrQXR0cmlidXRlXVwiLG4pLG59LHQucGFyc2VBdHRyaWJ1dGVzPWZ1bmN0aW9uKGUpe2lmKGUuaW5jbHVkZXMoXCI6Ly9cIikpe3ZhciB0PWUuc3BsaXQoLyhbMC05YS16QS1aXVstXFx3XSopOlxcL1xcLy9nKVswXSxyPXQuc3BsaXQoXCIuXCIpLG49ZS5yZXBsYWNlKHQsXCJcIik7aWYoZS5pbmNsdWRlcyhcImlkZW50aXR5XCIpKXt2YXIgbz1uLnNwbGl0KFwiaWRlbnRpdHkuXCIpO2NvbnNvbGUubG9nKFwiYXJyYXkyIFwiK28pLG49b1swXS5zbGljZShcIi5cIiwtMSksbz1vWzFdLnNwbGl0KFwiLlwiKSxyLnB1c2gobixcImlkZW50aXR5XCIpLHI9ci5jb25jYXQobyl9ZWxzZSByLnB1c2gobik7cmV0dXJuIHIuZmlsdGVyKEJvb2xlYW4pfXJldHVybiBlLnNwbGl0KFwiLlwiKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDQ1KSxvPXIoMzcpO2UuZXhwb3J0cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSxvKX19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9e30udG9TdHJpbmc7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiByLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG4sbzshZnVuY3Rpb24oaSxzKXtcInVzZSBzdHJpY3RcIjt2b2lkIDA9PT0obz1cImZ1bmN0aW9uXCI9PXR5cGVvZihuPXMpP24uY2FsbCh0LHIsdCxlKTpuKXx8KGUuZXhwb3J0cz1vKX0oMCxmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3ZhciBlPWZ1bmN0aW9uKCl7fSx0PVwidW5kZWZpbmVkXCIscj1bXCJ0cmFjZVwiLFwiZGVidWdcIixcImluZm9cIixcIndhcm5cIixcImVycm9yXCJdO2Z1bmN0aW9uIG4oZSx0KXt2YXIgcj1lW3RdO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIHIuYmluZClyZXR1cm4gci5iaW5kKGUpO3RyeXtyZXR1cm4gRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuY2FsbChyLGUpfWNhdGNoKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuYXBwbHkocixbZSxhcmd1bWVudHNdKX19fWZ1bmN0aW9uIG8odCxuKXtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKyl7dmFyIGk9cltvXTt0aGlzW2ldPW88dD9lOnRoaXMubWV0aG9kRmFjdG9yeShpLHQsbil9dGhpcy5sb2c9dGhpcy5kZWJ1Z31mdW5jdGlvbiBpKHIsaSxzKXtyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuXCJkZWJ1Z1wiPT09ciYmKHI9XCJsb2dcIiksdHlwZW9mIGNvbnNvbGUhPT10JiYodm9pZCAwIT09Y29uc29sZVtyXT9uKGNvbnNvbGUscik6dm9pZCAwIT09Y29uc29sZS5sb2c/bihjb25zb2xlLFwibG9nXCIpOmUpfShyKXx8ZnVuY3Rpb24oZSxyLG4pe3JldHVybiBmdW5jdGlvbigpe3R5cGVvZiBjb25zb2xlIT09dCYmKG8uY2FsbCh0aGlzLHIsbiksdGhpc1tlXS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfX0uYXBwbHkodGhpcyxhcmd1bWVudHMpfWZ1bmN0aW9uIHMoZSxuLHMpe3ZhciBhLHU9dGhpcyxjPVwibG9nbGV2ZWxcIjtmdW5jdGlvbiBsKCl7dmFyIGU7aWYodHlwZW9mIHdpbmRvdyE9PXQpe3RyeXtlPXdpbmRvdy5sb2NhbFN0b3JhZ2VbY119Y2F0Y2goZSl7fWlmKHR5cGVvZiBlPT09dCl0cnl7dmFyIHI9d2luZG93LmRvY3VtZW50LmNvb2tpZSxuPXIuaW5kZXhPZihlbmNvZGVVUklDb21wb25lbnQoYykrXCI9XCIpOy0xIT09biYmKGU9L14oW147XSspLy5leGVjKHIuc2xpY2UobikpWzFdKX1jYXRjaChlKXt9cmV0dXJuIHZvaWQgMD09PXUubGV2ZWxzW2VdJiYoZT12b2lkIDApLGV9fWUmJihjKz1cIjpcIitlKSx1Lm5hbWU9ZSx1LmxldmVscz17VFJBQ0U6MCxERUJVRzoxLElORk86MixXQVJOOjMsRVJST1I6NCxTSUxFTlQ6NX0sdS5tZXRob2RGYWN0b3J5PXN8fGksdS5nZXRMZXZlbD1mdW5jdGlvbigpe3JldHVybiBhfSx1LnNldExldmVsPWZ1bmN0aW9uKG4saSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4mJnZvaWQgMCE9PXUubGV2ZWxzW24udG9VcHBlckNhc2UoKV0mJihuPXUubGV2ZWxzW24udG9VcHBlckNhc2UoKV0pLCEoXCJudW1iZXJcIj09dHlwZW9mIG4mJm4+PTAmJm48PXUubGV2ZWxzLlNJTEVOVCkpdGhyb3dcImxvZy5zZXRMZXZlbCgpIGNhbGxlZCB3aXRoIGludmFsaWQgbGV2ZWw6IFwiK247aWYoYT1uLCExIT09aSYmZnVuY3Rpb24oZSl7dmFyIG49KHJbZV18fFwic2lsZW50XCIpLnRvVXBwZXJDYXNlKCk7aWYodHlwZW9mIHdpbmRvdyE9PXQpe3RyeXtyZXR1cm4gdm9pZCh3aW5kb3cubG9jYWxTdG9yYWdlW2NdPW4pfWNhdGNoKGUpe310cnl7d2luZG93LmRvY3VtZW50LmNvb2tpZT1lbmNvZGVVUklDb21wb25lbnQoYykrXCI9XCIrbitcIjtcIn1jYXRjaChlKXt9fX0obiksby5jYWxsKHUsbixlKSx0eXBlb2YgY29uc29sZT09PXQmJm48dS5sZXZlbHMuU0lMRU5UKXJldHVyblwiTm8gY29uc29sZSBhdmFpbGFibGUgZm9yIGxvZ2dpbmdcIn0sdS5zZXREZWZhdWx0TGV2ZWw9ZnVuY3Rpb24oZSl7bCgpfHx1LnNldExldmVsKGUsITEpfSx1LmVuYWJsZUFsbD1mdW5jdGlvbihlKXt1LnNldExldmVsKHUubGV2ZWxzLlRSQUNFLGUpfSx1LmRpc2FibGVBbGw9ZnVuY3Rpb24oZSl7dS5zZXRMZXZlbCh1LmxldmVscy5TSUxFTlQsZSl9O3ZhciBkPWwoKTtudWxsPT1kJiYoZD1udWxsPT1uP1wiV0FSTlwiOm4pLHUuc2V0TGV2ZWwoZCwhMSl9dmFyIGE9bmV3IHMsdT17fTthLmdldExvZ2dlcj1mdW5jdGlvbihlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZXx8XCJcIj09PWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIllvdSBtdXN0IHN1cHBseSBhIG5hbWUgd2hlbiBjcmVhdGluZyBhIGxvZ2dlci5cIik7dmFyIHQ9dVtlXTtyZXR1cm4gdHx8KHQ9dVtlXT1uZXcgcyhlLGEuZ2V0TGV2ZWwoKSxhLm1ldGhvZEZhY3RvcnkpKSx0fTt2YXIgYz10eXBlb2Ygd2luZG93IT09dD93aW5kb3cubG9nOnZvaWQgMDtyZXR1cm4gYS5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHR5cGVvZiB3aW5kb3chPT10JiZ3aW5kb3cubG9nPT09YSYmKHdpbmRvdy5sb2c9YyksYX0sYS5nZXRMb2dnZXJzPWZ1bmN0aW9uKCl7cmV0dXJuIHV9LGF9KX0sZnVuY3Rpb24oZSx0KXt2YXIgcj0wLG49TWF0aC5yYW5kb20oKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuXCJTeW1ib2woXCIuY29uY2F0KHZvaWQgMD09PWU/XCJcIjplLFwiKV9cIiwoKytyK24pLnRvU3RyaW5nKDM2KSl9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlK1wiIGlzIG5vdCBhIGZ1bmN0aW9uIVwiKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig5MSksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDgpLmYsbz1yKDEwKSxpPXIoMikoXCJ0b1N0cmluZ1RhZ1wiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UmJiFvKGU9cj9lOmUucHJvdG90eXBlLGkpJiZuKGUsaSx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOnR9KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCFuKGUpKXJldHVybiBlO3ZhciByLG87aWYodCYmXCJmdW5jdGlvblwiPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mKHI9ZS52YWx1ZU9mKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKCF0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87dGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNyksbz1yKDEpLmRvY3VtZW50LGk9bihvKSYmbihvLmNyZWF0ZUVsZW1lbnQpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaT9vLmNyZWF0ZUVsZW1lbnQoZSk6e319fSxmdW5jdGlvbihlLHQpe3QuZj17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT1lKXRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIitlKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9TWF0aC5jZWlsLG49TWF0aC5mbG9vcjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlzTmFOKGU9K2UpPzA6KGU+MD9uOnIpKGUpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzApO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KG4oZSkpfX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19KHIoNDcpKTt0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIXR8fFwib2JqZWN0XCIhPT0odm9pZCAwPT09dD9cInVuZGVmaW5lZFwiOigwLG4uZGVmYXVsdCkodCkpJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiB0P2U6dH19LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49cyhyKDkzKSksbz1zKHIoOTcpKSxpPXMocig0NykpO2Z1bmN0aW9uIHMoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXQuZGVmYXVsdD1mdW5jdGlvbihlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiKyh2b2lkIDA9PT10P1widW5kZWZpbmVkXCI6KDAsaS5kZWZhdWx0KSh0KSkpO2UucHJvdG90eXBlPSgwLG8uZGVmYXVsdCkodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihuLmRlZmF1bHQ/KDAsbi5kZWZhdWx0KShlLHQpOmUuX19wcm90b19fPXQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzYpKFwia2V5c1wiKSxvPXIoMjMpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbltlXXx8KG5bZV09byhlKSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigwKSxvPXIoMSksaT1vW1wiX19jb3JlLWpzX3NoYXJlZF9fXCJdfHwob1tcIl9fY29yZS1qc19zaGFyZWRfX1wiXT17fSk7KGUuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBpW2VdfHwoaVtlXT12b2lkIDAhPT10P3Q6e30pfSkoXCJ2ZXJzaW9uc1wiLFtdKS5wdXNoKHt2ZXJzaW9uOm4udmVyc2lvbixtb2RlOnIoMTUpP1wicHVyZVwiOlwiZ2xvYmFsXCIsY29weXJpZ2h0OlwiwqkgMjAxOCBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KVwifSl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPVwiY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mXCIuc3BsaXQoXCIsXCIpfSxmdW5jdGlvbihlLHQscil7dmFyIG49cig5KSxvPXIoNzIpLGk9cigzNykscz1yKDM1KShcIklFX1BST1RPXCIpLGE9ZnVuY3Rpb24oKXt9LHU9ZnVuY3Rpb24oKXt2YXIgZSx0PXIoMjgpKFwiaWZyYW1lXCIpLG49aS5sZW5ndGg7Zm9yKHQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIixyKDU2KS5hcHBlbmRDaGlsZCh0KSx0LnNyYz1cImphdmFzY3JpcHQ6XCIsKGU9dC5jb250ZW50V2luZG93LmRvY3VtZW50KS5vcGVuKCksZS53cml0ZShcIjxzY3JpcHQ+ZG9jdW1lbnQuRj1PYmplY3Q8XFwvc2NyaXB0PlwiKSxlLmNsb3NlKCksdT1lLkY7bi0tOylkZWxldGUgdS5wcm90b3R5cGVbaVtuXV07cmV0dXJuIHUoKX07ZS5leHBvcnRzPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIG51bGwhPT1lPyhhLnByb3RvdHlwZT1uKGUpLHI9bmV3IGEsYS5wcm90b3R5cGU9bnVsbCxyW3NdPWUpOnI9dSgpLHZvaWQgMD09PXQ/cjpvKHIsdCl9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPSFyKDQpJiYhcigxMykoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIoMjgpKFwiZGl2XCIpLFwiYVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LGZ1bmN0aW9uKGUsdCxyKXt0LmY9cigyKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSksbz1yKDApLGk9cigxNSkscz1yKDQwKSxhPXIoOCkuZjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9by5TeW1ib2x8fChvLlN5bWJvbD1pP3t9Om4uU3ltYm9sfHx7fSk7XCJfXCI9PWUuY2hhckF0KDApfHxlIGluIHR8fGEodCxlLHt2YWx1ZTpzLmYoZSl9KX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig4OSksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCl7dC5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHN9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYpLG89cigwKSxpPXIoMTMpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByPShvLk9iamVjdHx8e30pW2VdfHxPYmplY3RbZV0scz17fTtzW2VdPXQociksbihuLlMrbi5GKmkoZnVuY3Rpb24oKXtyKDEpfSksXCJPYmplY3RcIixzKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEwKSxvPXIoMTIpLGk9cig2NCkoITEpLHM9cigzNSkoXCJJRV9QUk9UT1wiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixhPW8oZSksdT0wLGM9W107Zm9yKHIgaW4gYSlyIT1zJiZuKGEscikmJmMucHVzaChyKTtmb3IoO3QubGVuZ3RoPnU7KW4oYSxyPXRbdSsrXSkmJih+aShjLHIpfHxjLnB1c2gocikpO3JldHVybiBjfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjkpLG89cigxNiksaT1yKDEyKSxzPXIoMjcpLGE9cigxMCksdT1yKDM5KSxjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7dC5mPXIoNCk/YzpmdW5jdGlvbihlLHQpe2lmKGU9aShlKSx0PXModCwhMCksdSl0cnl7cmV0dXJuIGMoZSx0KX1jYXRjaChlKXt9aWYoYShlLHQpKXJldHVybiBvKCFuLmYuY2FsbChlLHQpLGVbdF0pfX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1zKHIoNzkpKSxvPXMocig4MSkpLGk9XCJmdW5jdGlvblwiPT10eXBlb2Ygby5kZWZhdWx0JiZcInN5bWJvbFwiPT10eXBlb2Ygbi5kZWZhdWx0P2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIG8uZGVmYXVsdCYmZS5jb25zdHJ1Y3Rvcj09PW8uZGVmYXVsdCYmZSE9PW8uZGVmYXVsdC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX07ZnVuY3Rpb24gcyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dC5kZWZhdWx0PVwiZnVuY3Rpb25cIj09dHlwZW9mIG8uZGVmYXVsdCYmXCJzeW1ib2xcIj09PWkobi5kZWZhdWx0KT9mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZT9cInVuZGVmaW5lZFwiOmkoZSl9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBvLmRlZmF1bHQmJmUuY29uc3RydWN0b3I9PT1vLmRlZmF1bHQmJmUhPT1vLmRlZmF1bHQucHJvdG90eXBlP1wic3ltYm9sXCI6dm9pZCAwPT09ZT9cInVuZGVmaW5lZFwiOmkoZSl9fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cigxNSksbz1yKDYpLGk9cig1MCkscz1yKDExKSxhPXIoMTcpLHU9cig3MSksYz1yKDI2KSxsPXIoNTMpLGQ9cigyKShcIml0ZXJhdG9yXCIpLGY9IShbXS5rZXlzJiZcIm5leHRcImluW10ua2V5cygpKSxwPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscixoLHksdixfKXt1KHIsdCxoKTt2YXIgYixtLGcsTz1mdW5jdGlvbihlKXtpZighZiYmZSBpbiBrKXJldHVybiBrW2VdO3N3aXRjaChlKXtjYXNlXCJrZXlzXCI6Y2FzZVwidmFsdWVzXCI6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX0sdz10K1wiIEl0ZXJhdG9yXCIsaj1cInZhbHVlc1wiPT15LFI9ITEsaz1lLnByb3RvdHlwZSx4PWtbZF18fGtbXCJAQGl0ZXJhdG9yXCJdfHx5JiZrW3ldLEM9eHx8Tyh5KSxTPXk/aj9PKFwiZW50cmllc1wiKTpDOnZvaWQgMCxMPVwiQXJyYXlcIj09dCYmay5lbnRyaWVzfHx4O2lmKEwmJihnPWwoTC5jYWxsKG5ldyBlKSkpIT09T2JqZWN0LnByb3RvdHlwZSYmZy5uZXh0JiYoYyhnLHcsITApLG58fFwiZnVuY3Rpb25cIj09dHlwZW9mIGdbZF18fHMoZyxkLHApKSxqJiZ4JiZcInZhbHVlc1wiIT09eC5uYW1lJiYoUj0hMCxDPWZ1bmN0aW9uKCl7cmV0dXJuIHguY2FsbCh0aGlzKX0pLG4mJiFffHwhZiYmIVImJmtbZF18fHMoayxkLEMpLGFbdF09QyxhW3ddPXAseSlpZihiPXt2YWx1ZXM6aj9DOk8oXCJ2YWx1ZXNcIiksa2V5czp2P0M6TyhcImtleXNcIiksZW50cmllczpTfSxfKWZvcihtIGluIGIpbSBpbiBrfHxpKGssbSxiW21dKTtlbHNlIG8oby5QK28uRiooZnx8UiksdCxiKTtyZXR1cm4gYn19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMxKSxvPU1hdGgubWluO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZT4wP28obihlKSw5MDA3MTk5MjU0NzQwOTkxKTowfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz1yKDExKX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPXIoMjQpO2UuZXhwb3J0cy5mPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcgZnVuY3Rpb24oZSl7dmFyIHQscjt0aGlzLnByb21pc2U9bmV3IGUoZnVuY3Rpb24oZSxuKXtpZih2b2lkIDAhPT10fHx2b2lkIDAhPT1yKXRocm93IFR5cGVFcnJvcihcIkJhZCBQcm9taXNlIGNvbnN0cnVjdG9yXCIpO3Q9ZSxyPW59KSx0aGlzLnJlc29sdmU9bih0KSx0aGlzLnJlamVjdD1uKHIpfShlKX19LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDcwKSghMCk7cig0OCkoU3RyaW5nLFwiU3RyaW5nXCIsZnVuY3Rpb24oZSl7dGhpcy5fdD1TdHJpbmcoZSksdGhpcy5faT0wfSxmdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5fdCxyPXRoaXMuX2k7cmV0dXJuIHI+PXQubGVuZ3RoP3t2YWx1ZTp2b2lkIDAsZG9uZTohMH06KGU9bih0LHIpLHRoaXMuX2krPWUubGVuZ3RoLHt2YWx1ZTplLGRvbmU6ITF9KX0pfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMCksbz1yKDMyKSxpPXIoMzUpKFwiSUVfUFJPVE9cIikscz1PYmplY3QucHJvdG90eXBlO2UuZXhwb3J0cz1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKGUpe3JldHVybiBlPW8oZSksbihlLGkpP2VbaV06XCJmdW5jdGlvblwiPT10eXBlb2YgZS5jb25zdHJ1Y3RvciYmZSBpbnN0YW5jZW9mIGUuY29uc3RydWN0b3I/ZS5jb25zdHJ1Y3Rvci5wcm90b3R5cGU6ZSBpbnN0YW5jZW9mIE9iamVjdD9zOm51bGx9fSxmdW5jdGlvbihlLHQscil7cig3Myk7Zm9yKHZhciBuPXIoMSksbz1yKDExKSxpPXIoMTcpLHM9cigyKShcInRvU3RyaW5nVGFnXCIpLGE9XCJDU1NSdWxlTGlzdCxDU1NTdHlsZURlY2xhcmF0aW9uLENTU1ZhbHVlTGlzdCxDbGllbnRSZWN0TGlzdCxET01SZWN0TGlzdCxET01TdHJpbmdMaXN0LERPTVRva2VuTGlzdCxEYXRhVHJhbnNmZXJJdGVtTGlzdCxGaWxlTGlzdCxIVE1MQWxsQ29sbGVjdGlvbixIVE1MQ29sbGVjdGlvbixIVE1MRm9ybUVsZW1lbnQsSFRNTFNlbGVjdEVsZW1lbnQsTWVkaWFMaXN0LE1pbWVUeXBlQXJyYXksTmFtZWROb2RlTWFwLE5vZGVMaXN0LFBhaW50UmVxdWVzdExpc3QsUGx1Z2luLFBsdWdpbkFycmF5LFNWR0xlbmd0aExpc3QsU1ZHTnVtYmVyTGlzdCxTVkdQYXRoU2VnTGlzdCxTVkdQb2ludExpc3QsU1ZHU3RyaW5nTGlzdCxTVkdUcmFuc2Zvcm1MaXN0LFNvdXJjZUJ1ZmZlckxpc3QsU3R5bGVTaGVldExpc3QsVGV4dFRyYWNrQ3VlTGlzdCxUZXh0VHJhY2tMaXN0LFRvdWNoTGlzdFwiLnNwbGl0KFwiLFwiKSx1PTA7dTxhLmxlbmd0aDt1Kyspe3ZhciBjPWFbdV0sbD1uW2NdLGQ9bCYmbC5wcm90b3R5cGU7ZCYmIWRbc10mJm8oZCxzLGMpLGlbY109aS5BcnJheX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIxKTtlLmV4cG9ydHM9T2JqZWN0KFwielwiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKT9PYmplY3Q6ZnVuY3Rpb24oZSl7cmV0dXJuXCJTdHJpbmdcIj09bihlKT9lLnNwbGl0KFwiXCIpOk9iamVjdChlKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEpLmRvY3VtZW50O2UuZXhwb3J0cz1uJiZuLmRvY3VtZW50RWxlbWVudH0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNDUpLG89cigzNykuY29uY2F0KFwibGVuZ3RoXCIsXCJwcm90b3R5cGVcIik7dC5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzfHxmdW5jdGlvbihlKXtyZXR1cm4gbihlLG8pfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDc2KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDYxKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0KXt9LGZ1bmN0aW9uKGUsdCxyKXtyKDYyKTt2YXIgbj1yKDApLk9iamVjdDtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLmRlZmluZVByb3BlcnR5KGUsdCxyKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYpO24obi5TK24uRiohcig0KSxcIk9iamVjdFwiLHtkZWZpbmVQcm9wZXJ0eTpyKDgpLmZ9KX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjEpLG89cigyKShcInRvU3RyaW5nVGFnXCIpLGk9XCJBcmd1bWVudHNcIj09bihmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdCxyLHM7cmV0dXJuIHZvaWQgMD09PWU/XCJVbmRlZmluZWRcIjpudWxsPT09ZT9cIk51bGxcIjpcInN0cmluZ1wiPT10eXBlb2Yocj1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChlKXt9fSh0PU9iamVjdChlKSxvKSk/cjppP24odCk6XCJPYmplY3RcIj09KHM9bih0KSkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuY2FsbGVlP1wiQXJndW1lbnRzXCI6c319LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEyKSxvPXIoNDkpLGk9cig2NSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIscyl7dmFyIGEsdT1uKHQpLGM9byh1Lmxlbmd0aCksbD1pKHMsYyk7aWYoZSYmciE9cil7Zm9yKDtjPmw7KWlmKChhPXVbbCsrXSkhPWEpcmV0dXJuITB9ZWxzZSBmb3IoO2M+bDtsKyspaWYoKGV8fGwgaW4gdSkmJnVbbF09PT1yKXJldHVybiBlfHxsfHwwO3JldHVybiFlJiYtMX19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1NYXRoLm1heCxpPU1hdGgubWluO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybihlPW4oZSkpPDA/byhlK3QsMCk6aShlLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDI0KSxpPXIoMikoXCJzcGVjaWVzXCIpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLHM9bihlKS5jb25zdHJ1Y3RvcjtyZXR1cm4gdm9pZCAwPT09c3x8dm9pZCAwPT0ocj1uKHMpW2ldKT90Om8ocil9fSxmdW5jdGlvbihlLHQscil7dmFyIG4sbyxpLHM9cigxNCksYT1yKDEwOCksdT1yKDU2KSxjPXIoMjgpLGw9cigxKSxkPWwucHJvY2VzcyxmPWwuc2V0SW1tZWRpYXRlLHA9bC5jbGVhckltbWVkaWF0ZSxoPWwuTWVzc2FnZUNoYW5uZWwseT1sLkRpc3BhdGNoLHY9MCxfPXt9LGI9ZnVuY3Rpb24oKXt2YXIgZT0rdGhpcztpZihfLmhhc093blByb3BlcnR5KGUpKXt2YXIgdD1fW2VdO2RlbGV0ZSBfW2VdLHQoKX19LG09ZnVuY3Rpb24oZSl7Yi5jYWxsKGUuZGF0YSl9O2YmJnB8fChmPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxyPTE7YXJndW1lbnRzLmxlbmd0aD5yOyl0LnB1c2goYXJndW1lbnRzW3IrK10pO3JldHVybiBfWysrdl09ZnVuY3Rpb24oKXthKFwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZTpGdW5jdGlvbihlKSx0KX0sbih2KSx2fSxwPWZ1bmN0aW9uKGUpe2RlbGV0ZSBfW2VdfSxcInByb2Nlc3NcIj09cigyMSkoZCk/bj1mdW5jdGlvbihlKXtkLm5leHRUaWNrKHMoYixlLDEpKX06eSYmeS5ub3c/bj1mdW5jdGlvbihlKXt5Lm5vdyhzKGIsZSwxKSl9Omg/KGk9KG89bmV3IGgpLnBvcnQyLG8ucG9ydDEub25tZXNzYWdlPW0sbj1zKGkucG9zdE1lc3NhZ2UsaSwxKSk6bC5hZGRFdmVudExpc3RlbmVyJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBwb3N0TWVzc2FnZSYmIWwuaW1wb3J0U2NyaXB0cz8obj1mdW5jdGlvbihlKXtsLnBvc3RNZXNzYWdlKGUrXCJcIixcIipcIil9LGwuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixtLCExKSk6bj1cIm9ucmVhZHlzdGF0ZWNoYW5nZVwiaW4gYyhcInNjcmlwdFwiKT9mdW5jdGlvbihlKXt1LmFwcGVuZENoaWxkKGMoXCJzY3JpcHRcIikpLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe3UucmVtb3ZlQ2hpbGQodGhpcyksYi5jYWxsKGUpfX06ZnVuY3Rpb24oZSl7c2V0VGltZW91dChzKGIsZSwxKSwwKX0pLGUuZXhwb3J0cz17c2V0OmYsY2xlYXI6cH19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm57ZTohMSx2OmUoKX19Y2F0Y2goZSl7cmV0dXJue2U6ITAsdjplfX19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig5KSxvPXIoNyksaT1yKDUxKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZihuKGUpLG8odCkmJnQuY29uc3RydWN0b3I9PT1lKXJldHVybiB0O3ZhciByPWkuZihlKTtyZXR1cm4oMCxyLnJlc29sdmUpKHQpLHIucHJvbWlzZX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMxKSxvPXIoMzApO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxyKXt2YXIgaSxzLGE9U3RyaW5nKG8odCkpLHU9bihyKSxjPWEubGVuZ3RoO3JldHVybiB1PDB8fHU+PWM/ZT9cIlwiOnZvaWQgMDooaT1hLmNoYXJDb2RlQXQodSkpPDU1Mjk2fHxpPjU2MzE5fHx1KzE9PT1jfHwocz1hLmNoYXJDb2RlQXQodSsxKSk8NTYzMjB8fHM+NTczNDM/ZT9hLmNoYXJBdCh1KTppOmU/YS5zbGljZSh1LHUrMik6cy01NjMyMCsoaS01NTI5Njw8MTApKzY1NTM2fX19LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDM4KSxvPXIoMTYpLGk9cigyNikscz17fTtyKDExKShzLHIoMikoXCJpdGVyYXRvclwiKSxmdW5jdGlvbigpe3JldHVybiB0aGlzfSksZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlLnByb3RvdHlwZT1uKHMse25leHQ6bygxLHIpfSksaShlLHQrXCIgSXRlcmF0b3JcIil9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig4KSxvPXIoOSksaT1yKDIwKTtlLmV4cG9ydHM9cig0KT9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe28oZSk7Zm9yKHZhciByLHM9aSh0KSxhPXMubGVuZ3RoLHU9MDthPnU7KW4uZihlLHI9c1t1KytdLHRbcl0pO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPXIoNzQpLG89cig3NSksaT1yKDE3KSxzPXIoMTIpO2UuZXhwb3J0cz1yKDQ4KShBcnJheSxcIkFycmF5XCIsZnVuY3Rpb24oZSx0KXt0aGlzLl90PXMoZSksdGhpcy5faT0wLHRoaXMuX2s9dH0sZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90LHQ9dGhpcy5fayxyPXRoaXMuX2krKztyZXR1cm4hZXx8cj49ZS5sZW5ndGg/KHRoaXMuX3Q9dm9pZCAwLG8oMSkpOm8oMCxcImtleXNcIj09dD9yOlwidmFsdWVzXCI9PXQ/ZVtyXTpbcixlW3JdXSl9LFwidmFsdWVzXCIpLGkuQXJndW1lbnRzPWkuQXJyYXksbihcImtleXNcIiksbihcInZhbHVlc1wiKSxuKFwiZW50cmllc1wiKX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oKXt9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybnt2YWx1ZTp0LGRvbmU6ISFlfX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDApLG89bi5KU09OfHwobi5KU09OPXtzdHJpbmdpZnk6SlNPTi5zdHJpbmdpZnl9KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uc3RyaW5naWZ5LmFwcGx5KG8sYXJndW1lbnRzKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIzKShcIm1ldGFcIiksbz1yKDcpLGk9cigxMCkscz1yKDgpLmYsYT0wLHU9T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0sYz0hcigxMykoZnVuY3Rpb24oKXtyZXR1cm4gdShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKX0pLGw9ZnVuY3Rpb24oZSl7cyhlLG4se3ZhbHVlOntpOlwiT1wiKyArK2Esdzp7fX19KX0sZD1lLmV4cG9ydHM9e0tFWTpuLE5FRUQ6ITEsZmFzdEtleTpmdW5jdGlvbihlLHQpe2lmKCFvKGUpKXJldHVyblwic3ltYm9sXCI9PXR5cGVvZiBlP2U6KFwic3RyaW5nXCI9PXR5cGVvZiBlP1wiU1wiOlwiUFwiKStlO2lmKCFpKGUsbikpe2lmKCF1KGUpKXJldHVyblwiRlwiO2lmKCF0KXJldHVyblwiRVwiO2woZSl9cmV0dXJuIGVbbl0uaX0sZ2V0V2VhazpmdW5jdGlvbihlLHQpe2lmKCFpKGUsbikpe2lmKCF1KGUpKXJldHVybiEwO2lmKCF0KXJldHVybiExO2woZSl9cmV0dXJuIGVbbl0ud30sb25GcmVlemU6ZnVuY3Rpb24oZSl7cmV0dXJuIGMmJmQuTkVFRCYmdShlKSYmIWkoZSxuKSYmbChlKSxlfX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cigxMTkpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoODApLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7cig1Mikscig1NCksZS5leHBvcnRzPXIoNDApLmYoXCJpdGVyYXRvclwiKX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDgyKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoODMpLHIoNjApLHIoODcpLHIoODgpLGUuZXhwb3J0cz1yKDApLlN5bWJvbH0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPXIoMSksbz1yKDEwKSxpPXIoNCkscz1yKDYpLGE9cig1MCksdT1yKDc3KS5LRVksYz1yKDEzKSxsPXIoMzYpLGQ9cigyNiksZj1yKDIzKSxwPXIoMiksaD1yKDQwKSx5PXIoNDEpLHY9cig4NCksXz1yKDg1KSxiPXIoOSksbT1yKDcpLGc9cigxMiksTz1yKDI3KSx3PXIoMTYpLGo9cigzOCksUj1yKDg2KSxrPXIoNDYpLHg9cig4KSxDPXIoMjApLFM9ay5mLEw9eC5mLEU9Ui5mLFA9bi5TeW1ib2wsTT1uLkpTT04sVD1NJiZNLnN0cmluZ2lmeSxEPXAoXCJfaGlkZGVuXCIpLEE9cChcInRvUHJpbWl0aXZlXCIpLFU9e30ucHJvcGVydHlJc0VudW1lcmFibGUsST1sKFwic3ltYm9sLXJlZ2lzdHJ5XCIpLEg9bChcInN5bWJvbHNcIiksTj1sKFwib3Atc3ltYm9sc1wiKSxGPU9iamVjdC5wcm90b3R5cGUsQj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBQLFY9bi5RT2JqZWN0LFc9IVZ8fCFWLnByb3RvdHlwZXx8IVYucHJvdG90eXBlLmZpbmRDaGlsZCx6PWkmJmMoZnVuY3Rpb24oKXtyZXR1cm4gNyE9aihMKHt9LFwiYVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gTCh0aGlzLFwiYVwiLHt2YWx1ZTo3fSkuYX19KSkuYX0pP2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1TKEYsdCk7biYmZGVsZXRlIEZbdF0sTChlLHQsciksbiYmZSE9PUYmJkwoRix0LG4pfTpMLFo9ZnVuY3Rpb24oZSl7dmFyIHQ9SFtlXT1qKFAucHJvdG90eXBlKTtyZXR1cm4gdC5faz1lLHR9LHE9QiYmXCJzeW1ib2xcIj09dHlwZW9mIFAuaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuXCJzeW1ib2xcIj09dHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgUH0sSj1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9PT1GJiZKKE4sdCxyKSxiKGUpLHQ9Tyh0LCEwKSxiKHIpLG8oSCx0KT8oci5lbnVtZXJhYmxlPyhvKGUsRCkmJmVbRF1bdF0mJihlW0RdW3RdPSExKSxyPWoocix7ZW51bWVyYWJsZTp3KDAsITEpfSkpOihvKGUsRCl8fEwoZSxELHcoMSx7fSkpLGVbRF1bdF09ITApLHooZSx0LHIpKTpMKGUsdCxyKX0sRz1mdW5jdGlvbihlLHQpe2IoZSk7Zm9yKHZhciByLG49dih0PWcodCkpLG89MCxpPW4ubGVuZ3RoO2k+bzspSihlLHI9bltvKytdLHRbcl0pO3JldHVybiBlfSxZPWZ1bmN0aW9uKGUpe3ZhciB0PVUuY2FsbCh0aGlzLGU9TyhlLCEwKSk7cmV0dXJuISh0aGlzPT09RiYmbyhILGUpJiYhbyhOLGUpKSYmKCEodHx8IW8odGhpcyxlKXx8IW8oSCxlKXx8byh0aGlzLEQpJiZ0aGlzW0RdW2VdKXx8dCl9LEs9ZnVuY3Rpb24oZSx0KXtpZihlPWcoZSksdD1PKHQsITApLGUhPT1GfHwhbyhILHQpfHxvKE4sdCkpe3ZhciByPVMoZSx0KTtyZXR1cm4hcnx8IW8oSCx0KXx8byhlLEQpJiZlW0RdW3RdfHwoci5lbnVtZXJhYmxlPSEwKSxyfX0sJD1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1FKGcoZSkpLG49W10saT0wO3IubGVuZ3RoPmk7KW8oSCx0PXJbaSsrXSl8fHQ9PUR8fHQ9PXV8fG4ucHVzaCh0KTtyZXR1cm4gbn0sUT1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1lPT09RixuPUUocj9OOmcoZSkpLGk9W10scz0wO24ubGVuZ3RoPnM7KSFvKEgsdD1uW3MrK10pfHxyJiYhbyhGLHQpfHxpLnB1c2goSFt0XSk7cmV0dXJuIGl9O0J8fChhKChQPWZ1bmN0aW9uKCl7aWYodGhpcyBpbnN0YW5jZW9mIFApdGhyb3cgVHlwZUVycm9yKFwiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIVwiKTt2YXIgZT1mKGFyZ3VtZW50cy5sZW5ndGg+MD9hcmd1bWVudHNbMF06dm9pZCAwKSx0PWZ1bmN0aW9uKHIpe3RoaXM9PT1GJiZ0LmNhbGwoTixyKSxvKHRoaXMsRCkmJm8odGhpc1tEXSxlKSYmKHRoaXNbRF1bZV09ITEpLHoodGhpcyxlLHcoMSxyKSl9O3JldHVybiBpJiZXJiZ6KEYsZSx7Y29uZmlndXJhYmxlOiEwLHNldDp0fSksWihlKX0pLnByb3RvdHlwZSxcInRvU3RyaW5nXCIsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fa30pLGsuZj1LLHguZj1KLHIoNTcpLmY9Ui5mPSQscigyOSkuZj1ZLHIoNDMpLmY9USxpJiYhcigxNSkmJmEoRixcInByb3BlcnR5SXNFbnVtZXJhYmxlXCIsWSwhMCksaC5mPWZ1bmN0aW9uKGUpe3JldHVybiBaKHAoZSkpfSkscyhzLkcrcy5XK3MuRiohQix7U3ltYm9sOlB9KTtmb3IodmFyIFg9XCJoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlc1wiLnNwbGl0KFwiLFwiKSxlZT0wO1gubGVuZ3RoPmVlOylwKFhbZWUrK10pO2Zvcih2YXIgdGU9QyhwLnN0b3JlKSxyZT0wO3RlLmxlbmd0aD5yZTspeSh0ZVtyZSsrXSk7cyhzLlMrcy5GKiFCLFwiU3ltYm9sXCIse2ZvcjpmdW5jdGlvbihlKXtyZXR1cm4gbyhJLGUrPVwiXCIpP0lbZV06SVtlXT1QKGUpfSxrZXlGb3I6ZnVuY3Rpb24oZSl7aWYoIXEoZSkpdGhyb3cgVHlwZUVycm9yKGUrXCIgaXMgbm90IGEgc3ltYm9sIVwiKTtmb3IodmFyIHQgaW4gSSlpZihJW3RdPT09ZSlyZXR1cm4gdH0sdXNlU2V0dGVyOmZ1bmN0aW9uKCl7Vz0hMH0sdXNlU2ltcGxlOmZ1bmN0aW9uKCl7Vz0hMX19KSxzKHMuUytzLkYqIUIsXCJPYmplY3RcIix7Y3JlYXRlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PXQ/aihlKTpHKGooZSksdCl9LGRlZmluZVByb3BlcnR5OkosZGVmaW5lUHJvcGVydGllczpHLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjpLLGdldE93blByb3BlcnR5TmFtZXM6JCxnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6UX0pLE0mJnMocy5TK3MuRiooIUJ8fGMoZnVuY3Rpb24oKXt2YXIgZT1QKCk7cmV0dXJuXCJbbnVsbF1cIiE9VChbZV0pfHxcInt9XCIhPVQoe2E6ZX0pfHxcInt9XCIhPVQoT2JqZWN0KGUpKX0pKSxcIkpTT05cIix7c3RyaW5naWZ5OmZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyLG49W2VdLG89MTthcmd1bWVudHMubGVuZ3RoPm87KW4ucHVzaChhcmd1bWVudHNbbysrXSk7aWYocj10PW5bMV0sKG0odCl8fHZvaWQgMCE9PWUpJiYhcShlKSlyZXR1cm4gXyh0KXx8KHQ9ZnVuY3Rpb24oZSx0KXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiYodD1yLmNhbGwodGhpcyxlLHQpKSwhcSh0KSlyZXR1cm4gdH0pLG5bMV09dCxULmFwcGx5KE0sbil9fSksUC5wcm90b3R5cGVbQV18fHIoMTEpKFAucHJvdG90eXBlLEEsUC5wcm90b3R5cGUudmFsdWVPZiksZChQLFwiU3ltYm9sXCIpLGQoTWF0aCxcIk1hdGhcIiwhMCksZChuLkpTT04sXCJKU09OXCIsITApfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyMCksbz1yKDQzKSxpPXIoMjkpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1uKGUpLHI9by5mO2lmKHIpZm9yKHZhciBzLGE9cihlKSx1PWkuZixjPTA7YS5sZW5ndGg+YzspdS5jYWxsKGUscz1hW2MrK10pJiZ0LnB1c2gocyk7cmV0dXJuIHR9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyMSk7ZS5leHBvcnRzPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVyblwiQXJyYXlcIj09bihlKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEyKSxvPXIoNTcpLmYsaT17fS50b1N0cmluZyxzPVwib2JqZWN0XCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdyYmT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KTpbXTtlLmV4cG9ydHMuZj1mdW5jdGlvbihlKXtyZXR1cm4gcyYmXCJbb2JqZWN0IFdpbmRvd11cIj09aS5jYWxsKGUpP2Z1bmN0aW9uKGUpe3RyeXtyZXR1cm4gbyhlKX1jYXRjaChlKXtyZXR1cm4gcy5zbGljZSgpfX0oZSk6byhuKGUpKX19LGZ1bmN0aW9uKGUsdCxyKXtyKDQxKShcImFzeW5jSXRlcmF0b3JcIil9LGZ1bmN0aW9uKGUsdCxyKXtyKDQxKShcIm9ic2VydmFibGVcIil9LGZ1bmN0aW9uKGUsdCxyKXtyKDkwKSxlLmV4cG9ydHM9cigwKS5PYmplY3Qua2V5c30sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzIpLG89cigyMCk7cig0NCkoXCJrZXlzXCIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG8obihlKSl9fSl9LGZ1bmN0aW9uKGUsdCxyKXtyKDkyKSxlLmV4cG9ydHM9cigwKS5PYmplY3QuZ2V0UHJvdG90eXBlT2Z9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMyKSxvPXIoNTMpO3IoNDQpKFwiZ2V0UHJvdG90eXBlT2ZcIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbyhuKGUpKX19KX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDk0KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoOTUpLGUuZXhwb3J0cz1yKDApLk9iamVjdC5zZXRQcm90b3R5cGVPZn0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNik7bihuLlMsXCJPYmplY3RcIix7c2V0UHJvdG90eXBlT2Y6cig5Nikuc2V0fSl9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpLG89cig5KSxpPWZ1bmN0aW9uKGUsdCl7aWYobyhlKSwhbih0KSYmbnVsbCE9PXQpdGhyb3cgVHlwZUVycm9yKHQrXCI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhXCIpfTtlLmV4cG9ydHM9e3NldDpPYmplY3Quc2V0UHJvdG90eXBlT2Z8fChcIl9fcHJvdG9fX1wiaW57fT9mdW5jdGlvbihlLHQsbil7dHJ5eyhuPXIoMTQpKEZ1bmN0aW9uLmNhbGwscig0NikuZihPYmplY3QucHJvdG90eXBlLFwiX19wcm90b19fXCIpLnNldCwyKSkoZSxbXSksdD0hKGUgaW5zdGFuY2VvZiBBcnJheSl9Y2F0Y2goZSl7dD0hMH1yZXR1cm4gZnVuY3Rpb24oZSxyKXtyZXR1cm4gaShlLHIpLHQ/ZS5fX3Byb3RvX189cjpuKGUsciksZX19KHt9LCExKTp2b2lkIDApLGNoZWNrOml9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoOTgpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7cig5OSk7dmFyIG49cigwKS5PYmplY3Q7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uY3JlYXRlKGUsdCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KTtuKG4uUyxcIk9iamVjdFwiLHtjcmVhdGU6cigzOCl9KX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1pKHIoMjUpKSxvPWkocigxMjUpKTtmdW5jdGlvbiBpKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX10LmRlZmF1bHQ9ZnVuY3Rpb24gZSh0LHIsaSl7bnVsbD09PXQmJih0PUZ1bmN0aW9uLnByb3RvdHlwZSk7dmFyIHM9KDAsby5kZWZhdWx0KSh0LHIpO2lmKHZvaWQgMD09PXMpe3ZhciBhPSgwLG4uZGVmYXVsdCkodCk7cmV0dXJuIG51bGw9PT1hP3ZvaWQgMDplKGEscixpKX1pZihcInZhbHVlXCJpbiBzKXJldHVybiBzLnZhbHVlO3ZhciB1PXMuZ2V0O3JldHVybiB2b2lkIDAhPT11P3UuY2FsbChpKTp2b2lkIDB9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2Myksbz1yKDIpKFwiaXRlcmF0b3JcIiksaT1yKDE3KTtlLmV4cG9ydHM9cigwKS5nZXRJdGVyYXRvck1ldGhvZD1mdW5jdGlvbihlKXtpZih2b2lkIDAhPWUpcmV0dXJuIGVbb118fGVbXCJAQGl0ZXJhdG9yXCJdfHxpW24oZSldfX0sZnVuY3Rpb24oZSx0LHIpe3IoNjApLHIoNTIpLHIoNTQpLHIoMTAzKSxyKDExNCkscigxMTUpLGUuZXhwb3J0cz1yKDApLlByb21pc2V9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbixvLGkscyxhPXIoMTUpLHU9cigxKSxjPXIoMTQpLGw9cig2MyksZD1yKDYpLGY9cig3KSxwPXIoMjQpLGg9cigxMDQpLHk9cigxMDUpLHY9cig2NiksXz1yKDY3KS5zZXQsYj1yKDEwOSkoKSxtPXIoNTEpLGc9cig2OCksTz1yKDExMCksdz1yKDY5KSxqPXUuVHlwZUVycm9yLFI9dS5wcm9jZXNzLGs9UiYmUi52ZXJzaW9ucyx4PWsmJmsudjh8fFwiXCIsQz11LlByb21pc2UsUz1cInByb2Nlc3NcIj09bChSKSxMPWZ1bmN0aW9uKCl7fSxFPW89bS5mLFA9ISFmdW5jdGlvbigpe3RyeXt2YXIgZT1DLnJlc29sdmUoMSksdD0oZS5jb25zdHJ1Y3Rvcj17fSlbcigyKShcInNwZWNpZXNcIildPWZ1bmN0aW9uKGUpe2UoTCxMKX07cmV0dXJuKFN8fFwiZnVuY3Rpb25cIj09dHlwZW9mIFByb21pc2VSZWplY3Rpb25FdmVudCkmJmUudGhlbihMKWluc3RhbmNlb2YgdCYmMCE9PXguaW5kZXhPZihcIjYuNlwiKSYmLTE9PT1PLmluZGV4T2YoXCJDaHJvbWUvNjZcIil9Y2F0Y2goZSl7fX0oKSxNPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiEoIWYoZSl8fFwiZnVuY3Rpb25cIiE9dHlwZW9mKHQ9ZS50aGVuKSkmJnR9LFQ9ZnVuY3Rpb24oZSx0KXtpZighZS5fbil7ZS5fbj0hMDt2YXIgcj1lLl9jO2IoZnVuY3Rpb24oKXtmb3IodmFyIG49ZS5fdixvPTE9PWUuX3MsaT0wLHM9ZnVuY3Rpb24odCl7dmFyIHIsaSxzLGE9bz90Lm9rOnQuZmFpbCx1PXQucmVzb2x2ZSxjPXQucmVqZWN0LGw9dC5kb21haW47dHJ5e2E/KG98fCgyPT1lLl9oJiZVKGUpLGUuX2g9MSksITA9PT1hP3I9bjoobCYmbC5lbnRlcigpLHI9YShuKSxsJiYobC5leGl0KCkscz0hMCkpLHI9PT10LnByb21pc2U/YyhqKFwiUHJvbWlzZS1jaGFpbiBjeWNsZVwiKSk6KGk9TShyKSk/aS5jYWxsKHIsdSxjKTp1KHIpKTpjKG4pfWNhdGNoKGUpe2wmJiFzJiZsLmV4aXQoKSxjKGUpfX07ci5sZW5ndGg+aTspcyhyW2krK10pO2UuX2M9W10sZS5fbj0hMSx0JiYhZS5faCYmRChlKX0pfX0sRD1mdW5jdGlvbihlKXtfLmNhbGwodSxmdW5jdGlvbigpe3ZhciB0LHIsbixvPWUuX3YsaT1BKGUpO2lmKGkmJih0PWcoZnVuY3Rpb24oKXtTP1IuZW1pdChcInVuaGFuZGxlZFJlamVjdGlvblwiLG8sZSk6KHI9dS5vbnVuaGFuZGxlZHJlamVjdGlvbik/cih7cHJvbWlzZTplLHJlYXNvbjpvfSk6KG49dS5jb25zb2xlKSYmbi5lcnJvciYmbi5lcnJvcihcIlVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvblwiLG8pfSksZS5faD1TfHxBKGUpPzI6MSksZS5fYT12b2lkIDAsaSYmdC5lKXRocm93IHQudn0pfSxBPWZ1bmN0aW9uKGUpe3JldHVybiAxIT09ZS5faCYmMD09PShlLl9hfHxlLl9jKS5sZW5ndGh9LFU9ZnVuY3Rpb24oZSl7Xy5jYWxsKHUsZnVuY3Rpb24oKXt2YXIgdDtTP1IuZW1pdChcInJlamVjdGlvbkhhbmRsZWRcIixlKToodD11Lm9ucmVqZWN0aW9uaGFuZGxlZCkmJnQoe3Byb21pc2U6ZSxyZWFzb246ZS5fdn0pfSl9LEk9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9kfHwodC5fZD0hMCwodD10Ll93fHx0KS5fdj1lLHQuX3M9Mix0Ll9hfHwodC5fYT10Ll9jLnNsaWNlKCkpLFQodCwhMCkpfSxIPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcztpZighci5fZCl7ci5fZD0hMCxyPXIuX3d8fHI7dHJ5e2lmKHI9PT1lKXRocm93IGooXCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZlwiKTsodD1NKGUpKT9iKGZ1bmN0aW9uKCl7dmFyIG49e193OnIsX2Q6ITF9O3RyeXt0LmNhbGwoZSxjKEgsbiwxKSxjKEksbiwxKSl9Y2F0Y2goZSl7SS5jYWxsKG4sZSl9fSk6KHIuX3Y9ZSxyLl9zPTEsVChyLCExKSl9Y2F0Y2goZSl7SS5jYWxsKHtfdzpyLF9kOiExfSxlKX19fTtQfHwoQz1mdW5jdGlvbihlKXtoKHRoaXMsQyxcIlByb21pc2VcIixcIl9oXCIpLHAoZSksbi5jYWxsKHRoaXMpO3RyeXtlKGMoSCx0aGlzLDEpLGMoSSx0aGlzLDEpKX1jYXRjaChlKXtJLmNhbGwodGhpcyxlKX19LChuPWZ1bmN0aW9uKGUpe3RoaXMuX2M9W10sdGhpcy5fYT12b2lkIDAsdGhpcy5fcz0wLHRoaXMuX2Q9ITEsdGhpcy5fdj12b2lkIDAsdGhpcy5faD0wLHRoaXMuX249ITF9KS5wcm90b3R5cGU9cigxMTEpKEMucHJvdG90eXBlLHt0aGVuOmZ1bmN0aW9uKGUsdCl7dmFyIHI9RSh2KHRoaXMsQykpO3JldHVybiByLm9rPVwiZnVuY3Rpb25cIiE9dHlwZW9mIGV8fGUsci5mYWlsPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJnQsci5kb21haW49Uz9SLmRvbWFpbjp2b2lkIDAsdGhpcy5fYy5wdXNoKHIpLHRoaXMuX2EmJnRoaXMuX2EucHVzaChyKSx0aGlzLl9zJiZUKHRoaXMsITEpLHIucHJvbWlzZX0sY2F0Y2g6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSksaT1mdW5jdGlvbigpe3ZhciBlPW5ldyBuO3RoaXMucHJvbWlzZT1lLHRoaXMucmVzb2x2ZT1jKEgsZSwxKSx0aGlzLnJlamVjdD1jKEksZSwxKX0sbS5mPUU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT1DfHxlPT09cz9uZXcgaShlKTpvKGUpfSksZChkLkcrZC5XK2QuRiohUCx7UHJvbWlzZTpDfSkscigyNikoQyxcIlByb21pc2VcIikscigxMTIpKFwiUHJvbWlzZVwiKSxzPXIoMCkuUHJvbWlzZSxkKGQuUytkLkYqIVAsXCJQcm9taXNlXCIse3JlamVjdDpmdW5jdGlvbihlKXt2YXIgdD1FKHRoaXMpO3JldHVybigwLHQucmVqZWN0KShlKSx0LnByb21pc2V9fSksZChkLlMrZC5GKihhfHwhUCksXCJQcm9taXNlXCIse3Jlc29sdmU6ZnVuY3Rpb24oZSl7cmV0dXJuIHcoYSYmdGhpcz09PXM/Qzp0aGlzLGUpfX0pLGQoZC5TK2QuRiohKFAmJnIoMTEzKShmdW5jdGlvbihlKXtDLmFsbChlKS5jYXRjaChMKX0pKSxcIlByb21pc2VcIix7YWxsOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1FKHQpLG49ci5yZXNvbHZlLG89ci5yZWplY3QsaT1nKGZ1bmN0aW9uKCl7dmFyIHI9W10saT0wLHM9MTt5KGUsITEsZnVuY3Rpb24oZSl7dmFyIGE9aSsrLHU9ITE7ci5wdXNoKHZvaWQgMCkscysrLHQucmVzb2x2ZShlKS50aGVuKGZ1bmN0aW9uKGUpe3V8fCh1PSEwLHJbYV09ZSwtLXN8fG4ocikpfSxvKX0pLC0tc3x8bihyKX0pO3JldHVybiBpLmUmJm8oaS52KSxyLnByb21pc2V9LHJhY2U6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPUUodCksbj1yLnJlamVjdCxvPWcoZnVuY3Rpb24oKXt5KGUsITEsZnVuY3Rpb24oZSl7dC5yZXNvbHZlKGUpLnRoZW4oci5yZXNvbHZlLG4pfSl9KTtyZXR1cm4gby5lJiZuKG8udiksci5wcm9taXNlfX0pfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscixuKXtpZighKGUgaW5zdGFuY2VvZiB0KXx8dm9pZCAwIT09biYmbiBpbiBlKXRocm93IFR5cGVFcnJvcihyK1wiOiBpbmNvcnJlY3QgaW52b2NhdGlvbiFcIik7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxNCksbz1yKDEwNiksaT1yKDEwNykscz1yKDkpLGE9cig0OSksdT1yKDEwMSksYz17fSxsPXt9Oyh0PWUuZXhwb3J0cz1mdW5jdGlvbihlLHQscixkLGYpe3ZhciBwLGgseSx2LF89Zj9mdW5jdGlvbigpe3JldHVybiBlfTp1KGUpLGI9bihyLGQsdD8yOjEpLG09MDtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBfKXRocm93IFR5cGVFcnJvcihlK1wiIGlzIG5vdCBpdGVyYWJsZSFcIik7aWYoaShfKSl7Zm9yKHA9YShlLmxlbmd0aCk7cD5tO20rKylpZigodj10P2IocyhoPWVbbV0pWzBdLGhbMV0pOmIoZVttXSkpPT09Y3x8dj09PWwpcmV0dXJuIHZ9ZWxzZSBmb3IoeT1fLmNhbGwoZSk7IShoPXkubmV4dCgpKS5kb25lOylpZigodj1vKHksYixoLnZhbHVlLHQpKT09PWN8fHY9PT1sKXJldHVybiB2fSkuQlJFQUs9Yyx0LlJFVFVSTj1sfSxmdW5jdGlvbihlLHQscil7dmFyIG49cig5KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbyl7dHJ5e3JldHVybiBvP3QobihyKVswXSxyWzFdKTp0KHIpfWNhdGNoKHQpe3ZhciBpPWUucmV0dXJuO3Rocm93IHZvaWQgMCE9PWkmJm4oaS5jYWxsKGUpKSx0fX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDE3KSxvPXIoMikoXCJpdGVyYXRvclwiKSxpPUFycmF5LnByb3RvdHlwZTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUmJihuLkFycmF5PT09ZXx8aVtvXT09PWUpfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXZvaWQgMD09PXI7c3dpdGNoKHQubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG4/ZSgpOmUuY2FsbChyKTtjYXNlIDE6cmV0dXJuIG4/ZSh0WzBdKTplLmNhbGwocix0WzBdKTtjYXNlIDI6cmV0dXJuIG4/ZSh0WzBdLHRbMV0pOmUuY2FsbChyLHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiBuP2UodFswXSx0WzFdLHRbMl0pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdKTtjYXNlIDQ6cmV0dXJuIG4/ZSh0WzBdLHRbMV0sdFsyXSx0WzNdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSx0WzNdKX1yZXR1cm4gZS5hcHBseShyLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSksbz1yKDY3KS5zZXQsaT1uLk11dGF0aW9uT2JzZXJ2ZXJ8fG4uV2ViS2l0TXV0YXRpb25PYnNlcnZlcixzPW4ucHJvY2VzcyxhPW4uUHJvbWlzZSx1PVwicHJvY2Vzc1wiPT1yKDIxKShzKTtlLmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgZSx0LHIsYz1mdW5jdGlvbigpe3ZhciBuLG87Zm9yKHUmJihuPXMuZG9tYWluKSYmbi5leGl0KCk7ZTspe289ZS5mbixlPWUubmV4dDt0cnl7bygpfWNhdGNoKG4pe3Rocm93IGU/cigpOnQ9dm9pZCAwLG59fXQ9dm9pZCAwLG4mJm4uZW50ZXIoKX07aWYodSlyPWZ1bmN0aW9uKCl7cy5uZXh0VGljayhjKX07ZWxzZSBpZighaXx8bi5uYXZpZ2F0b3ImJm4ubmF2aWdhdG9yLnN0YW5kYWxvbmUpaWYoYSYmYS5yZXNvbHZlKXt2YXIgbD1hLnJlc29sdmUodm9pZCAwKTtyPWZ1bmN0aW9uKCl7bC50aGVuKGMpfX1lbHNlIHI9ZnVuY3Rpb24oKXtvLmNhbGwobixjKX07ZWxzZXt2YXIgZD0hMCxmPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpO25ldyBpKGMpLm9ic2VydmUoZix7Y2hhcmFjdGVyRGF0YTohMH0pLHI9ZnVuY3Rpb24oKXtmLmRhdGE9ZD0hZH19cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBvPXtmbjpuLG5leHQ6dm9pZCAwfTt0JiYodC5uZXh0PW8pLGV8fChlPW8scigpKSx0PW99fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSkubmF2aWdhdG9yO2UuZXhwb3J0cz1uJiZuLnVzZXJBZ2VudHx8XCJcIn0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTEpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBvIGluIHQpciYmZVtvXT9lW29dPXRbb106bihlLG8sdFtvXSk7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cigxKSxvPXIoMCksaT1yKDgpLHM9cig0KSxhPXIoMikoXCJzcGVjaWVzXCIpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBvW2VdP29bZV06bltlXTtzJiZ0JiYhdFthXSYmaS5mKHQsYSx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMikoXCJpdGVyYXRvclwiKSxvPSExO3RyeXt2YXIgaT1bN11bbl0oKTtpLnJldHVybj1mdW5jdGlvbigpe289ITB9LEFycmF5LmZyb20oaSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChlKXt9ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFvKXJldHVybiExO3ZhciByPSExO3RyeXt2YXIgaT1bN10scz1pW25dKCk7cy5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJue2RvbmU6cj0hMH19LGlbbl09ZnVuY3Rpb24oKXtyZXR1cm4gc30sZShpKX1jYXRjaChlKXt9cmV0dXJuIHJ9fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cig2KSxvPXIoMCksaT1yKDEpLHM9cig2NiksYT1yKDY5KTtuKG4uUCtuLlIsXCJQcm9taXNlXCIse2ZpbmFsbHk6ZnVuY3Rpb24oZSl7dmFyIHQ9cyh0aGlzLG8uUHJvbWlzZXx8aS5Qcm9taXNlKSxyPVwiZnVuY3Rpb25cIj09dHlwZW9mIGU7cmV0dXJuIHRoaXMudGhlbihyP2Z1bmN0aW9uKHIpe3JldHVybiBhKHQsZSgpKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHJ9KX06ZSxyP2Z1bmN0aW9uKHIpe3JldHVybiBhKHQsZSgpKS50aGVuKGZ1bmN0aW9uKCl7dGhyb3cgcn0pfTplKX19KX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPXIoNiksbz1yKDUxKSxpPXIoNjgpO24obi5TLFwiUHJvbWlzZVwiLHt0cnk6ZnVuY3Rpb24oZSl7dmFyIHQ9by5mKHRoaXMpLHI9aShlKTtyZXR1cm4oci5lP3QucmVqZWN0OnQucmVzb2x2ZSkoci52KSx0LnByb21pc2V9fSl9LCxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5PYmplY3RUeXBlPXQuQ2hhbmdlVHlwZT12b2lkIDA7dmFyIG49cyhyKDMpKSxvPXMocig1KSk7cigxMjMpO3ZhciBpPXIoMTkpO2Z1bmN0aW9uIHMoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXsoMCxuLmRlZmF1bHQpKHRoaXMsZSk7dGhpcy5fb2JzZXJ2ZXJzPVtdLHRoaXMuX2ZpbHRlcnM9e30sdGhpcy5fZGF0YT10fHx7fSx0aGlzLl9pbnRlcm5hbE9ic2VydmUodGhpcy5fZGF0YSl9cmV0dXJuKDAsby5kZWZhdWx0KShlLFt7a2V5Olwib2JzZXJ2ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5wdXNoKGUpfX0se2tleTpcImZpbmRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD0oMCxpLnBhcnNlQXR0cmlidXRlcykoZSk7cmV0dXJuIHRoaXMuX2ZpbmRXaXRoU3BsaXQodCl9fSx7a2V5OlwiZmluZEJlZm9yZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXt9LHI9KDAsaS5wYXJzZUF0dHJpYnV0ZXMpKGUpO3JldHVybiB0Lmxhc3Q9ci5wb3AoKSx0Lm9iaj10aGlzLl9maW5kV2l0aFNwbGl0KHIpLHR9fSx7a2V5OlwiX2ZpbmRXaXRoU3BsaXRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9kYXRhO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24oZSl7dD10W2VdfSksdH19LHtrZXk6XCJfaW50ZXJuYWxPYnNlcnZlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLl9kYXRhPU9iamVjdC5kZWVwT2JzZXJ2ZShlLGZ1bmN0aW9uKGUpe2UuZXZlcnkoZnVuY3Rpb24oZSl7dC5fb25DaGFuZ2VzKGUpfSl9KX19LHtrZXk6XCJfZmlyZUV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb2JzZXJ2ZXJzLmZvckVhY2goZnVuY3Rpb24odCl7dChlKX0pfX0se2tleTpcIl9vbkNoYW5nZXNcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lLm9iamVjdCxyPXZvaWQgMDt0LmNvbnN0cnVjdG9yPT09T2JqZWN0JiYocj1jLk9CSkVDVCksdC5jb25zdHJ1Y3Rvcj09PUFycmF5JiYocj1jLkFSUkFZKTt2YXIgbj1lLmtleXBhdGgsbz10W2UubmFtZV07XCJ1cGRhdGVcIiE9PWUudHlwZXx8bi5pbmNsdWRlcyhcIi5sZW5ndGhcIil8fHRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6dS5VUERBVEUsb1R5cGU6cixmaWVsZDpuLGRhdGE6b30pLFwiYWRkXCI9PT1lLnR5cGUmJnRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6dS5BREQsb1R5cGU6cixmaWVsZDpuLGRhdGE6b30pLFwiZGVsZXRlXCI9PT1lLnR5cGUmJnRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6dS5SRU1PVkUsb1R5cGU6cixmaWVsZDpufSl9fSx7a2V5OlwiZGF0YVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhfX1dKSxlfSgpLHU9dC5DaGFuZ2VUeXBlPXtVUERBVEU6XCJ1cGRhdGVcIixBREQ6XCJhZGRcIixSRU1PVkU6XCJyZW1vdmVcIn0sYz10Lk9iamVjdFR5cGU9e09CSkVDVDpcIm9iamVjdFwiLEFSUkFZOlwiYXJyYXlcIn07dC5kZWZhdWx0PWF9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbj1jKHIoMTgpKSxvPWMocigzKSksaT1jKHIoNSkpLHM9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSksYT1jKHIoMTE3KSksdT1yKDE5KTtmdW5jdGlvbiBjKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgbD1zLmdldExvZ2dlcihcIkRhdGFPYmplY3RDaGlsZFwiKSxkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXsoMCxvLmRlZmF1bHQpKHRoaXMsZSk7ZnVuY3Rpb24gcihlKXt0aHJvd1wiW0RhdGFPYmplY3RDaGlsZF0gXCIrZStcIiBtYW5kYXRvcnkgcGFyYW1ldGVyIGlzIG1pc3NpbmdcIn10LnBhcmVudD90aGlzLl9wYXJlbnQ9dC5wYXJlbnQ6cihcInBhcmVudFwiKSx0LnVybD90aGlzLl91cmw9dC51cmw6cihcInVybFwiKSx0LmNyZWF0ZWQ/dGhpcy5fY3JlYXRlZD10LmNyZWF0ZWQ6cihcImNyZWF0ZWRcIiksdC5yZXBvcnRlcj90aGlzLl9yZXBvcnRlcj10LnJlcG9ydGVyOnIoXCJyZXBvcnRlclwiKSx0LnJ1bnRpbWU/dGhpcy5fcnVudGltZT10LnJ1bnRpbWU6cihcInJ1bnRpbWVcIiksdC5zY2hlbWE/dGhpcy5fc2NoZW1hPXQuc2NoZW1hOnIoXCJzY2hlbWFcIiksdC5wYXJlbnRPYmplY3Q/dGhpcy5fcGFyZW50T2JqZWN0PXQucGFyZW50T2JqZWN0OnIoXCJwYXJlbnRPYmplY3RcIiksdC5uYW1lJiYodGhpcy5fbmFtZT10Lm5hbWUpLHQuZGVzY3JpcHRpb24mJih0aGlzLl9kZXNjcmlwdGlvbj10LmRlc2NyaXB0aW9uKSx0LnRhZ3MmJih0aGlzLl90YWdzPXQudGFncyksdC5yZXNvdXJjZXMmJih0aGlzLl9yZXNvdXJjZXM9dC5yZXNvdXJjZXMpLHQub2JzZXJ2ZXJTdG9yYWdlJiYodGhpcy5fb2JzZXJ2ZXJTdG9yYWdlPXQub2JzZXJ2ZXJTdG9yYWdlKSx0LnB1YmxpY09ic2VydmF0aW9uJiYodGhpcy5fcHVibGljT2JzZXJ2YXRpb249dC5wdWJsaWNPYnNlcnZhdGlvbiksdGhpcy5fY2hpbGRJZD10LnVybCx0LmRhdGE/dGhpcy5fc3luY09iaj1uZXcgYS5kZWZhdWx0KHQuZGF0YSk6dGhpcy5fc3luY09iaj1uZXcgYS5kZWZhdWx0KHt9KSxsLmxvZyhcIltEYXRhT2JqZWN0Q2hpbGQgLSAgQ29uc3RydWN0b3JdIC0gXCIsdGhpcy5fc3luY09iaiksdGhpcy5fYnVzPXRoaXMuX3BhcmVudE9iamVjdC5fYnVzLHRoaXMuX293bmVyPXRoaXMuX3BhcmVudE9iamVjdC5fb3duZXIsdGhpcy5fYWxsb2NhdGVMaXN0ZW5lcnMoKSx0aGlzLl9tZXRhZGF0YT10LGRlbGV0ZSB0aGlzLl9tZXRhZGF0YS5wYXJlbnRPYmplY3QsdGhpcy5fc2hhcmluZ1N0YXR1cz0hMX1yZXR1cm4oMCxpLmRlZmF1bHQpKGUsW3trZXk6XCJzaGFyZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fc2hhcmluZ1N0YXR1cz1uZXcgbi5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7dmFyIG89dm9pZCAwO289ZT90Lm1ldGFkYXRhLnBhcmVudDp0Lm1ldGFkYXRhLnBhcmVudCtcIi9jaGlsZHJlbi9cIit0Lm1ldGFkYXRhLmNoaWxkcmVuO3ZhciBpPXQubWV0YWRhdGE7aS5kYXRhPXQuZGF0YTt2YXIgcz17dHlwZTpcImNyZWF0ZVwiLGZyb206dC5tZXRhZGF0YS5yZXBvcnRlcix0bzpvLGJvZHk6e3Jlc291cmNlOmkudXJsLHZhbHVlOml9fTtpZih0LmlkZW50aXR5JiYocy5ib2R5LmlkZW50aXR5PXQuaWRlbnRpdHkpLHQuX3BhcmVudE9iamVjdC5kYXRhLmhhc093blByb3BlcnR5KFwibXV0dWFsXCIpJiYocy5ib2R5Lm11dHVhbD10Ll9wYXJlbnRPYmplY3QuZGF0YS5tdXR1YWwpLHQuX3BhcmVudE9iamVjdC5tZXRhZGF0YS5yZXBvcnRlcj09PXQubWV0YWRhdGEucmVwb3J0ZXIpcmV0dXJuIHQuX2J1cy5wb3N0TWVzc2FnZSgoMCx1LmRlZXBDbG9uZSkocykpLHIoKTt2YXIgYT10Ll9idXMucG9zdE1lc3NhZ2UoKDAsdS5kZWVwQ2xvbmUpKHMpLGZ1bmN0aW9uKGUpe2lmKGUudG89PT10Ll9yZXBvcnRlcil7dC5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIocy5mcm9tLGUuaWQpLGwubG9nKFwiW1N5bmNoZXIuRGF0YU9iamVjdENoaWxkLnNoYXJlXSBQYXJlbnQgcmVwb3J0ZXIgcmVwbHkgXCIsZSk7dmFyIG89e2NvZGU6ZS5ib2R5JiZlLmJvZHkuY29kZT9lLmJvZHkuY29kZTo1MDAsZGVzYzplLmJvZHkmJmUuYm9keS5kZXNjP2UuYm9keS5kZXNjOlwiVW5rbm93blwifTtyZXR1cm4gZS5ib2R5LmNvZGU8MzAwP3Iobyk6bihvKX19LCExKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIocy5mcm9tLGEpO3JldHVybiBuKHtjb2RlOjQwOCxkZXNjOlwidGltb3V0XCJ9KX0sM2UzKX0pfX0se2tleTpcInN0b3JlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT17fSx0PXRoaXMubWV0YWRhdGEuY2hpbGRyZW4rXCIuXCIrdGhpcy5tZXRhZGF0YS51cmw7ZS52YWx1ZT10aGlzLm1ldGFkYXRhLGUuaWRlbnRpdHk9dGhpcy5pZGVudGl0eTt2YXIgcj17ZnJvbTp0aGlzLm1ldGFkYXRhLnJlcG9ydGVyLHRvOnRoaXMuX3BhcmVudE9iamVjdC5fc3luY2hlci5fc3ViVVJMLHR5cGU6XCJjcmVhdGVcIixib2R5OntyZXNvdXJjZTp0aGlzLm1ldGFkYXRhLnBhcmVudCxhdHRyaWJ1dGU6dCx2YWx1ZTplfX07bC5sb2coXCJbRGF0YU9iamVjdENoaWxkLnN0b3JlXTpcIixyKSx0aGlzLl9idXMucG9zdE1lc3NhZ2Uocil9fSx7a2V5OlwiX2FsbG9jYXRlTGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX3JlcG9ydGVyPT09ZS5fb3duZXImJihlLl9saXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fcmVwb3J0ZXIsZnVuY3Rpb24odCl7XCJyZXNwb25zZVwiPT09dC50eXBlJiZ0LmlkPT09ZS5fbXNnSWQmJihsLmxvZyhcIkRhdGFPYmplY3RDaGlsZC5vblJlc3BvbnNlOlwiLHQpLGUuX29uUmVzcG9uc2UodCkpfSkpfX0se2tleTpcIl9yZWxlYXNlTGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9saXN0ZW5lciYmdGhpcy5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OlwiZGVsZXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9yZWxlYXNlTGlzdGVuZXJzKCl9fSx7a2V5Olwib25DaGFuZ2VcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24odCl7bC5sb2coXCJbRGF0YU9iamVjdENoaWxkIC0gb2JzZXJ2ZXJdIC0gXCIsdCksZSh0KX0pfX0se2tleTpcIm9uUmVzcG9uc2VcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlc3BvbnNlSGFuZGxlcj1lfX0se2tleTpcIl9vblJlc3BvbnNlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9e3R5cGU6ZS50eXBlLHVybDplLmJvZHkuc291cmNlLGNvZGU6ZS5ib2R5LmNvZGV9O3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyJiZ0aGlzLl9vblJlc3BvbnNlSGFuZGxlcih0KX19LHtrZXk6XCJzaGFyZWFibGVcIixnZXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm1ldGFkYXRhO3JldHVybiBlLmRhdGE9dGhpcy5kYXRhLGV9fSx7a2V5OlwibWV0YWRhdGFcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGF9fSx7a2V5OlwiY2hpbGRJZFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZElkfX0se2tleTpcInNoYXJpbmdTdGF0dXNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hhcmluZ1N0YXR1c319LHtrZXk6XCJkYXRhXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YX19LHtrZXk6XCJpZGVudGl0eVwiLHNldDpmdW5jdGlvbihlKXt0aGlzLl9pZGVudGl0eT1lfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faWRlbnRpdHl9fV0pLGV9KCk7dC5kZWZhdWx0PWQsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpe3IoMTIwKSxlLmV4cG9ydHM9cigwKS5PYmplY3QuYXNzaWdufSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KTtuKG4uUytuLkYsXCJPYmplY3RcIix7YXNzaWduOnIoMTIxKX0pfSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cigyMCksbz1yKDQzKSxpPXIoMjkpLHM9cigzMiksYT1yKDU1KSx1PU9iamVjdC5hc3NpZ247ZS5leHBvcnRzPSF1fHxyKDEzKShmdW5jdGlvbigpe3ZhciBlPXt9LHQ9e30scj1TeW1ib2woKSxuPVwiYWJjZGVmZ2hpamtsbW5vcHFyc3RcIjtyZXR1cm4gZVtyXT03LG4uc3BsaXQoXCJcIikuZm9yRWFjaChmdW5jdGlvbihlKXt0W2VdPWV9KSw3IT11KHt9LGUpW3JdfHxPYmplY3Qua2V5cyh1KHt9LHQpKS5qb2luKFwiXCIpIT1ufSk/ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9cyhlKSx1PWFyZ3VtZW50cy5sZW5ndGgsYz0xLGw9by5mLGQ9aS5mO3U+YzspZm9yKHZhciBmLHA9YShhcmd1bWVudHNbYysrXSksaD1sP24ocCkuY29uY2F0KGwocCkpOm4ocCkseT1oLmxlbmd0aCx2PTA7eT52OylkLmNhbGwocCxmPWhbdisrXSkmJihyW2ZdPXBbZl0pO3JldHVybiByfTp1fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49eShyKDQ3KSksbz15KHIoMTgpKSxpPXkocig0MikpLHM9eShyKDc4KSksYT15KHIoMykpLHU9eShyKDUpKSxjPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLGw9cigxMTcpLGQ9eShsKSxmPXkocigxMTgpKSxwPXIoMTkpLGg9eShyKDEyOCkpO2Z1bmN0aW9uIHkoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciB2PWMuZ2V0TG9nZ2VyKFwiRGF0YU9iamVjdFwiKSxfPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXsoMCxhLmRlZmF1bHQpKHRoaXMsZSk7ZnVuY3Rpb24gcihlKXt0aHJvd1wiW0RhdGFPYmplY3RdIFwiK2UrXCIgbWFuZGF0b3J5IHBhcmFtZXRlciBpcyBtaXNzaW5nXCJ9dC5zeW5jaGVyP3RoaXMuX3N5bmNoZXI9dC5zeW5jaGVyOnIoXCJzeW5jaGVyXCIpLHQudXJsP3RoaXMuX3VybD10LnVybDpyKFwidXJsXCIpLHQuY3JlYXRlZD90aGlzLl9jcmVhdGVkPXQuY3JlYXRlZDpyKFwiY3JlYXRlZFwiKSx0LnJlcG9ydGVyP3RoaXMuX3JlcG9ydGVyPXQucmVwb3J0ZXI6cihcInJlcG9ydGVyXCIpLHQucnVudGltZT90aGlzLl9ydW50aW1lPXQucnVudGltZTpyKFwicnVudGltZVwiKSx0LnNjaGVtYT90aGlzLl9zY2hlbWE9dC5zY2hlbWE6cihcInNjaGVtYVwiKSx0Lm5hbWU/dGhpcy5fbmFtZT10Lm5hbWU6cihcIm5hbWVcIiksdGhpcy5fc3RhdHVzPXQuc3RhdHVzLHQuZGF0YT90aGlzLl9zeW5jT2JqPW5ldyBkLmRlZmF1bHQodC5kYXRhKTp0aGlzLl9zeW5jT2JqPW5ldyBkLmRlZmF1bHQoe30pLHRoaXMuX2NoaWxkcmVucz10LmNoaWxkcmVucyx0aGlzLl9tdXR1YWw9dC5tdXR1YWwsdGhpcy5fdmVyc2lvbj0wLHRoaXMuX2NoaWxkSWQ9MCx0aGlzLl9jaGlsZHJlbkxpc3RlbmVycz1bXSx0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlcix0aGlzLl9yZXN1bWVkPXQucmVzdW1lLHQucmVzdW1lJiYodGhpcy5fdmVyc2lvbj10LnZlcnNpb24pLHRoaXMuX293bmVyPXQuc3luY2hlci5fb3duZXIsdGhpcy5fYnVzPXQuc3luY2hlci5fYnVzLHQuZGVzY3JpcHRpb24mJih0aGlzLl9kZXNjcmlwdGlvbj10LmRlc2NyaXB0aW9uKSx0LnRhZ3MmJih0aGlzLl90YWdzPXQudGFncyksdC5yZXNvdXJjZXMmJih0aGlzLl9yZXNvdXJjZXM9dC5yZXNvdXJjZXMpLHQub2JzZXJ2ZXJTdG9yYWdlJiYodGhpcy5fb2JzZXJ2ZXJTdG9yYWdlPXQub2JzZXJ2ZXJTdG9yYWdlKSx0LnB1YmxpY09ic2VydmF0aW9uJiYodGhpcy5fcHVibGljT2JzZXJ2YXRpb249dC5wdWJsaWNPYnNlcnZhdGlvbiksdGhpcy5fbWV0YWRhdGE9KDAscy5kZWZhdWx0KSh0KSx0aGlzLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9dGhpcy5fbWV0YWRhdGEuY3JlYXRlZCxkZWxldGUgdGhpcy5fbWV0YWRhdGEuZGF0YSxkZWxldGUgdGhpcy5fbWV0YWRhdGEuc3luY2hlcixkZWxldGUgdGhpcy5fbWV0YWRhdGEuYXV0aG9yaXNlLHRoaXMuX2h5cGVydHlSZXNvdXJjZUZhY3Rvcnk9bmV3IGguZGVmYXVsdCx0aGlzLl9jaGlsZHJlbk9iamVjdHM9e30sdGhpcy5fc2hhcmVkQ2hpbGRzPVtdfXJldHVybigwLHUuZGVmYXVsdCkoZSxbe2tleTpcIl9nZXRMYXN0Q2hpbGRJZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PTAscj1lLl9vd25lcitcIiNcIit0O3JldHVybigwLGkuZGVmYXVsdCkoZS5fY2hpbGRyZW5zKS5maWx0ZXIoZnVuY3Rpb24odCl7ZS5fY2hpbGRyZW5zW3RdLmNoaWxkSWQ+ciYmKHI9ZS5fY2hpbGRyZW5zW3RdLmNoaWxkSWQpfSksTnVtYmVyKHIuc3BsaXQoXCIjXCIpWzFdKX19LHtrZXk6XCJfYWxsb2NhdGVMaXN0ZW5lcnNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzLHI9dC5fdXJsK1wiL2NoaWxkcmVuL1wiO3YubG9nKFwiW0RhdGEgT2JqZWN0IC0gQWxsb2NhdGVMaXN0ZW5lcnNdIC0gXCIsdC5fY2hpbGRyZW5zKSx0Ll9jaGlsZHJlbnMmJnQuX2NoaWxkcmVucy5mb3JFYWNoKGZ1bmN0aW9uKG4pe3ZhciBvPXIrbixpPXQuX2J1cy5hZGRMaXN0ZW5lcihvLGZ1bmN0aW9uKHIpe2lmKHIuZnJvbSE9PWUuX293bmVyKXN3aXRjaCh2LmxvZyhcIkRhdGFPYmplY3QtQ2hpbGRyZW4tUkNWOiBcIixyKSxyLnR5cGUpe2Nhc2VcImNyZWF0ZVwiOnQuX29uQ2hpbGRDcmVhdGUocik7YnJlYWs7Y2FzZVwiZGVsZXRlXCI6di5sb2cocik7YnJlYWs7ZGVmYXVsdDp0Ll9jaGFuZ2VDaGlsZHJlbihyKX19KTt0Ll9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGkpfSl9fSx7a2V5OlwiX3JlbGVhc2VMaXN0ZW5lcnNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fY2hpbGRyZW5MaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbihlKXtlLnJlbW92ZSgpfSksKDAsaS5kZWZhdWx0KShlLl9jaGlsZHJlbk9iamVjdHMpLmZvckVhY2goZnVuY3Rpb24odCl7KDAsaS5kZWZhdWx0KShlLl9jaGlsZHJlbk9iamVjdHNbdF0pLmZvckVhY2goZnVuY3Rpb24ocil7ZS5fY2hpbGRyZW5PYmplY3RzW3RdW3JdLl9yZWxlYXNlTGlzdGVuZXJzKCl9KX0pfX0se2tleTpcInJlc3VtZUNoaWxkcmVuc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10aGlzLG49dGhpcy5fb3duZXIrXCIjXCIrdGhpcy5fY2hpbGRJZDsoMCxpLmRlZmF1bHQpKGUpLmZvckVhY2goZnVuY3Rpb24obyl7dmFyIHM9ZVtvXTsoMCxpLmRlZmF1bHQpKHMpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIGk9ITE7ci5fY2hpbGRyZW5PYmplY3RzLmhhc093blByb3BlcnR5KG8pfHwoci5fY2hpbGRyZW5PYmplY3RzW29dPXt9KSxzW2VdLnZhbHVlLnJlc291cmNlVHlwZSYmIXIuX2NoaWxkcmVuT2JqZWN0c1tvXS5oYXNPd25Qcm9wZXJ0eShlKT8oci5fY2hpbGRyZW5PYmplY3RzW29dW2VdPXIuX3Jlc3VtZUh5cGVydHlSZXNvdXJjZShzW2VdKSxpPSEwKTpyLl9jaGlsZHJlbk9iamVjdHNbb10uaGFzT3duUHJvcGVydHkoZSl8fChyLl9jaGlsZHJlbk9iamVjdHNbb11bZV09ci5fcmVzdW1lQ2hpbGQoc1tlXSksdi5sb2coXCJbRGF0YU9iamVjdC5yZXN1bWVDaGlsZHJlbnNdIG5ldyBEYXRhT2JqZWN0Q2hpbGQ6IFwiLHIuX2NoaWxkcmVuT2JqZWN0c1tvXVtlXSksaT0hMCksaSYmZT5uJiYobj1lLHYubG9nKFwiW0RhdGFPYmplY3RSZXBvcnRlci5yZXN1bWVDaGlsZHJlbnNdIC0gcmVzdW1pbmc6IFwiLHQuX2NoaWxkcmVuT2JqZWN0c1tvXVtlXSkpfSl9KSx0aGlzLl9jaGlsZElkPU51bWJlcihuLnNwbGl0KFwiI1wiKVsxXSl9fSx7a2V5OlwiX3Jlc3VtZUNoaWxkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS52YWx1ZTt0LnBhcmVudE9iamVjdD10aGlzLHQucGFyZW50PXRoaXMuX3VybDt2YXIgcj1uZXcgZi5kZWZhdWx0KHQpO3IuaWRlbnRpdHk9ZS5pZGVudGl0eTt2YXIgbj17dHlwZTpcImNyZWF0ZVwiLGZyb206ci5yZXBvcnRlcix1cmw6ci5wYXJlbnQsdmFsdWU6ci5kYXRhLGNoaWxkSWQ6ci51cmwsaWRlbnRpdHk6ci5pZGVudGl0eSxjaGlsZDpyfTtyZXR1cm4gci5yZXNvdXJjZVR5cGUmJihuLnJlc291cmNlPXIpLHRoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyJiZ0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlcihuKSxyfX0se2tleTpcIl9yZXN1bWVIeXBlcnR5UmVzb3VyY2VcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lLnZhbHVlO3QucGFyZW50T2JqZWN0PXRoaXMsdC5wYXJlbnQ9dGhpcy5fdXJsO3ZhciByPXRoaXMuX2h5cGVydHlSZXNvdXJjZUZhY3RvcnkuY3JlYXRlSHlwZXJ0eVJlc291cmNlKCExLHQucmVzb3VyY2VUeXBlLHQpO3IuaWRlbnRpdHk9ZS5pZGVudGl0eTt2YXIgbj17dHlwZTpcImNyZWF0ZVwiLGZyb206ci5yZXBvcnRlcix1cmw6ci5wYXJlbnQsdmFsdWU6ci5kYXRhLGNoaWxkSWQ6ci51cmwsaWRlbnRpdHk6ci5pZGVudGl0eSxjaGlsZDpyfTtyZXR1cm4gci5yZXNvdXJjZVR5cGUmJihuLnJlc291cmNlPXIpLHRoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyJiZ0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlcihuKSxyfX0se2tleTpcInBhdXNlXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvd1wiTm90IGltcGxlbWVudGVkXCJ9fSx7a2V5OlwicmVzdW1lXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvd1wiTm90IGltcGxlbWVudGVkXCJ9fSx7a2V5Olwic3RvcFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3dcIk5vdCBpbXBsZW1lbnRlZFwifX0se2tleTpcImFkZENoaWxkXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGk9dGhpcyxzPXZvaWQgMDtyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihvKXt2YXIgYT1pLl91cmwrXCIvY2hpbGRyZW4vXCIrZSx1PWkuX2dldENoaWxkSW5wdXQobik7dS5kYXRhPXQsdS5jaGlsZHJlbj1lLHM9bmV3IGYuZGVmYXVsdCh1KSxyJiYocy5pZGVudGl0eT1yKSxzLnNoYXJlKCksdi5sb2coXCJbRGF0YU9iamVjdC5hZGRDaGlsZF0gYWRkZWQgXCIscykscy5vbkNoYW5nZShmdW5jdGlvbihlKXtpLl9vbkNoYW5nZShlLHtwYXRoOmEsY2hpbGRJZDp1LnVybH0pfSksaS5fY2hpbGRyZW5PYmplY3RzLmhhc093blByb3BlcnR5KGUpfHwoaS5fY2hpbGRyZW5PYmplY3RzW2VdPXt9KSxpLl9jaGlsZHJlbk9iamVjdHNbZV1bdS51cmxdPXMsbyhzKX0pfX0se2tleTpcIl9kZWxldGVDaGlsZHJlbnNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1bXTtyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihyKXtpZihlLmNoaWxkcmVucyl7di5sb2coXCJbRGF0YU9iamVjdC5kZWxldGVDaGlsZHJlbnNdXCIsZS5jaGlsZHJlbnMpO3ZhciBuPXZvaWQgMDtmb3IobiBpbiBlLmNoaWxkcmVucyl7dmFyIGk9dm9pZCAwO2ZvcihpIGluIGUuY2hpbGRyZW5zW25dKXt2YXIgcz1lLmNoaWxkcmVuc1tuXVtpXTt2LmxvZyhcIltEYXRhT2JqZWN0Ll9kZWxldGVDaGlsZHJlbnNdIGNoaWxkXCIscykscy5tZXRhZGF0YS5oYXNPd25Qcm9wZXJ0eShcInJlc291cmNlVHlwZVwiKSYmdC5wdXNoKGUuY2hpbGRyZW5zW25dW2ldLmRlbGV0ZSgpKX19fXYubG9nKFwiW0RhdGFPYmplY3QuX2RlbGV0ZUNoaWxkcmVuc10gcHJvbWlzZXMgXCIsdCksdC5sZW5ndGg+MD9vLmRlZmF1bHQuYWxsKHQpLnRoZW4oZnVuY3Rpb24oKXtyKFwiW0RhdGFPYmplY3QuX2RlbGV0ZUNoaWxkcmVuc10gZG9uZVwiKX0pOnIoXCJbRGF0YU9iamVjdC5fZGVsZXRlQ2hpbGRyZW5zXSBub3RoaW5nIHRvIGRlbGV0ZVwiKX0pfX0se2tleTpcIl9nZXRDaGlsZElucHV0XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9KDAscy5kZWZhdWx0KSh7fSxlKTtyZXR1cm4gdGhpcy5fY2hpbGRJZCsrLHQudXJsPXRoaXMuX293bmVyK1wiI1wiK3RoaXMuX2NoaWxkSWQsdC5wYXJlbnRPYmplY3Q9dGhpcyx0LnJlcG9ydGVyPXRoaXMuX293bmVyLHQuY3JlYXRlZD0obmV3IERhdGUpLnRvSVNPU3RyaW5nKCksdC5ydW50aW1lPXRoaXMuX3N5bmNoZXIuX3J1bnRpbWVVcmwsdC5wMnBIYW5kbGVyPXRoaXMuX3N5bmNoZXIuX3AycEhhbmRsZXIsdC5wMnBSZXF1ZXN0ZXI9dGhpcy5fc3luY2hlci5fcDJwUmVxdWVzdGVyLHQuc2NoZW1hPXRoaXMuX3NjaGVtYSx0LnBhcmVudD10aGlzLnVybCx0fX0se2tleTpcImFkZEh5cGVydHlSZXNvdXJjZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4saSl7dmFyIHM9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihvKXt2YXIgYT12b2lkIDAsdT1zLl91cmwrXCIvY2hpbGRyZW4vXCIrZSxjPXMuX2dldENoaWxkSW5wdXQoaSk7Yy5jaGlsZHJlbj1lLHMuX2h5cGVydHlSZXNvdXJjZUZhY3RvcnkuY3JlYXRlSHlwZXJ0eVJlc291cmNlV2l0aENvbnRlbnQoITAsdCxyLGMpLnRoZW4oZnVuY3Rpb24odCl7YT10LG4mJihhLmlkZW50aXR5PW4pLGEuc2hhcmUoKSx2LmxvZyhcIltEYXRhT2JqZWN0LmFkZEh5cGVydHlSZXNvdXJjZV0gYWRkZWQgXCIsYSksYS5vbkNoYW5nZShmdW5jdGlvbihlKXtzLl9vbkNoYW5nZShlLHtwYXRoOnUsY2hpbGRJZDphLmNoaWxkSWR9KX0pLHMuX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShlKXx8KHMuX2NoaWxkcmVuT2JqZWN0c1tlXT17fSkscy5fY2hpbGRyZW5PYmplY3RzW2VdW2EuY2hpbGRJZF09YSxvKGEpfSl9KX19LHtrZXk6XCJvbkFkZENoaWxkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXI9ZX19LHtrZXk6XCJfb25DaGlsZENyZWF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3YubG9nKFwiW0RhdGFPYmplY3QuX29uQ2hpbGRDcmVhdGVdIHJlY2VpdmVkQnkgXCIrdGhpcy5fb3duZXIrXCIgOiBcIixlKTt2YXIgdD17ZnJvbTplLnRvLHRvOmUuZnJvbSx0eXBlOlwicmVzcG9uc2VcIixpZDplLmlkLGJvZHk6e2NvZGU6MTAwfX07dGhpcy5fYnVzLnBvc3RNZXNzYWdlKHQpLGUuYm9keS52YWx1ZS5yZXNvdXJjZVR5cGU/dGhpcy5fb25IeXBlcnR5UmVzb3VyY2VBZGRlZChlKTp0aGlzLl9vbkNoaWxkQWRkZWQoZSl9fSx7a2V5OlwiX29uQ2hpbGRBZGRlZFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PSgwLHAuZGVlcENsb25lKShlLmJvZHkudmFsdWUpO3QucGFyZW50T2JqZWN0PXRoaXM7dmFyIHI9dC5jaGlsZHJlbixuPW5ldyBmLmRlZmF1bHQodCk7bi5pZGVudGl0eT1lLmJvZHkuaWRlbnRpdHksdGhpcy5fY2hpbGRyZW5PYmplY3RzLmhhc093blByb3BlcnR5KHIpfHwodGhpcy5fY2hpbGRyZW5PYmplY3RzW3JdPXt9KSx0aGlzLl9jaGlsZHJlbk9iamVjdHNbcl1bdC51cmxdPW4sZS50bz09PXRoaXMubWV0YWRhdGEudXJsJiZuLnN0b3JlKCksdGhpcy5faHlwZXJ0eUV2dChlLG4pfX0se2tleTpcIl9vbkh5cGVydHlSZXNvdXJjZUFkZGVkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5ib2R5LnZhbHVlLHI9dm9pZCAwLG49dC5jaGlsZHJlbjt0LnBhcmVudE9iamVjdD10aGlzLChyPXRoaXMuX2h5cGVydHlSZXNvdXJjZUZhY3RvcnkuY3JlYXRlSHlwZXJ0eVJlc291cmNlKCExLHQucmVzb3VyY2VUeXBlLHQpKS5pZGVudGl0eT1lLmJvZHkuaWRlbnRpdHksdGhpcy5fY2hpbGRyZW5PYmplY3RzLmhhc093blByb3BlcnR5KG4pfHwodGhpcy5fY2hpbGRyZW5PYmplY3RzW25dPXt9KSx0aGlzLl9jaGlsZHJlbk9iamVjdHNbbl1bci5jaGlsZElkXT1yLHRoaXMuX2h5cGVydHlFdnQoZSxyKSxlLnRvPT09dGhpcy5tZXRhZGF0YS51cmwmJnIuc3RvcmUoKX19LHtrZXk6XCJfaHlwZXJ0eUV2dFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9e3R5cGU6ZS50eXBlLGZyb206ZS5mcm9tLHVybDplLnRvLHZhbHVlOnQuZGF0YSxjaGlsZElkOnQudXJsLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxjaGlsZDp0fTt0LnJlc291cmNlVHlwZSYmKHIucmVzb3VyY2U9dCksdGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXImJnRoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyKHIpfX0se2tleTpcIl9vbkNoYW5nZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7aWYodGhpcy5fbWV0YWRhdGEubGFzdE1vZGlmaWVkPShuZXcgRGF0ZSkudG9JU09TdHJpbmcoKSx0aGlzLl92ZXJzaW9uKyssXCJsaXZlXCI9PT10aGlzLl9zdGF0dXMpe3ZhciByPXt0eXBlOlwidXBkYXRlXCIsZnJvbTp0aGlzLl91cmwsdG86dGhpcy5fdXJsK1wiL2NoYW5nZXNcIixib2R5Ont2ZXJzaW9uOnRoaXMuX3ZlcnNpb24sc291cmNlOnRoaXMuX293bmVyLGF0dHJpYnV0ZTplLmZpZWxkLGxhc3RNb2RpZmllZDp0aGlzLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWR9fTt2LmxvZyhcIltEYXRhT2JqZWN0IC0gX29uQ2hhbmdlXSAtIFwiLGUsdCxyKSxlLm9UeXBlPT09bC5PYmplY3RUeXBlLk9CSkVDVD9lLmNUeXBlIT09bC5DaGFuZ2VUeXBlLlJFTU9WRSYmKHIuYm9keS52YWx1ZT0oMCxwLmRlZXBDbG9uZSkoZS5kYXRhKSk6KHIuYm9keS5hdHRyaWJ1dGVUeXBlPWUub1R5cGUsci5ib2R5LnZhbHVlPWUuZGF0YSxlLmNUeXBlIT09bC5DaGFuZ2VUeXBlLlVQREFURSYmKHIuYm9keS5vcGVyYXRpb249ZS5jVHlwZSkpLHQmJihyLnRvPXQucGF0aCxyLmJvZHkucmVzb3VyY2U9dC5jaGlsZElkKSx0aGlzLmRhdGEuX211dHVhbHx8KHIuYm9keS5tdXR1YWw9dGhpcy5fbXV0dWFsKSx0aGlzLl9idXMucG9zdE1lc3NhZ2Uocil9fX0se2tleTpcIl9jaGFuZ2VPYmplY3RcIix2YWx1ZTpmdW5jdGlvbihlLHQpe2lmKHRoaXMuX3ZlcnNpb24rMTw9dC5ib2R5LnZlcnNpb24pe3RoaXMuX3ZlcnNpb249dC5ib2R5LnZlcnNpb247dmFyIHI9dC5ib2R5LmF0dHJpYnV0ZSxvPXZvaWQgMDtvPVwib2JqZWN0XCI9PT0oMCxuLmRlZmF1bHQpKHQuYm9keS52YWx1ZSk/KDAscC5kZWVwQ2xvbmUpKHQuYm9keS52YWx1ZSk6dC5ib2R5LnZhbHVlO3ZhciBpPWUuZmluZEJlZm9yZShyKTtpZih0LmJvZHkubGFzdE1vZGlmaWVkP3RoaXMuX21ldGFkYXRhLmxhc3RNb2RpZmllZD10LmJvZHkubGFzdE1vZGlmaWVkOnRoaXMuX21ldGFkYXRhLmxhc3RNb2RpZmllZD0obmV3IERhdGUpLnRvSVNPU3RyaW5nKCksdC5ib2R5LmF0dHJpYnV0ZVR5cGU9PT1sLk9iamVjdFR5cGUuQVJSQVkpaWYodC5ib2R5Lm9wZXJhdGlvbj09PWwuQ2hhbmdlVHlwZS5BREQpe3ZhciBzPWkub2JqLGE9aS5sYXN0O0FycmF5LnByb3RvdHlwZS5zcGxpY2UuYXBwbHkocyxbYSwwXS5jb25jYXQobykpfWVsc2UgaWYodC5ib2R5Lm9wZXJhdGlvbj09PWwuQ2hhbmdlVHlwZS5SRU1PVkUpe3ZhciB1PWkub2JqLGM9aS5sYXN0O3Uuc3BsaWNlKGMsbyl9ZWxzZSBpLm9ialtpLmxhc3RdPW87ZWxzZSB0LmJvZHkuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9pLm9ialtpLmxhc3RdPW86ZGVsZXRlIGkub2JqW2kubGFzdF19ZWxzZSB2LmxvZyhcIlVOU1lOQ0hST05JWkVEIFZFUlNJT046IChkYXRhID0+IFwiK3RoaXMuX3ZlcnNpb24rXCIsIG1zZyA9PiBcIit0LmJvZHkudmVyc2lvbitcIilcIil9fSx7a2V5OlwiX2NoYW5nZUNoaWxkcmVuXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9KDAscC5kaXZpZGVVUkwpKGUudG8pLmlkZW50aXR5LHI9dD90LnN1YnN0cmluZyh0Lmxhc3RJbmRleE9mKFwiL1wiKSsxKTp2b2lkIDAsbj1lLmJvZHkucmVzb3VyY2Usbz10aGlzLl9jaGlsZHJlbk9iamVjdHNbcl1bbl07di5sb2coXCJDaGFuZ2UgY2hpbGRyZW46IFwiLHRoaXMuX293bmVyLGUsciksbz90aGlzLl9jaGFuZ2VPYmplY3Qoby5fc3luY09iaixlKTp2Lndhcm4oXCJObyBjaGlsZHJlbiBmb3VuZCBmb3I6IFwiLG4pfX0se2tleTpcIm1ldGFkYXRhXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhfX0se2tleTpcInVybFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl91cmx9fSx7a2V5Olwic2NoZW1hXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NjaGVtYX19LHtrZXk6XCJzdGF0dXNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhdHVzfX0se2tleTpcImRhdGFcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3luY09iai5kYXRhfX0se2tleTpcImNoaWxkcmVuc1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZHJlbk9iamVjdHN9fV0pLGV9KCk7dC5kZWZhdWx0PV8sZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0KXshZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtpZighT2JqZWN0Lm9ic2VydmUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFByb3h5KXtmdW5jdGlvbiBlKGUsdCxyLG4sbyxpKXt2YXIgcyxhPXRoaXM7ZnVuY3Rpb24gdShlLG4pe2lmKHUuZGVsYXk9biwhdS5wYXVzZSYmYS5jaGFuZ2VzZXQubGVuZ3RoPjApe2lmKCFlKXt2YXIgbz1hLmNoYW5nZXNldC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIXJ8fHIuaW5kZXhPZihlLnR5cGUpPj0wfSk7by5sZW5ndGg+MCYmdChvKX1hLmNoYW5nZXNldD1bXX19cmV0dXJuIHUucGF1c2U9byx1LmRlbGF5PWksYS5nZXQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm5cIl9fb2JzZXJ2ZXJfX1wiPT09dD9hOlwidW5vYnNlcnZlXCI9PT10P2Z1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC51bm9ic2VydmUoZSksZX06XCJkZWxpdmVyXCI9PT10P3U6ZVt0XX0sYS50YXJnZXQ9ZSxhLmNoYW5nZXNldD1bXSxhLnRhcmdldC5fX29ic2VydmVyQ2FsbGJhY2tzX198fChPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fb2JzZXJ2ZXJDYWxsYmFja3NfX1wiLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMSx2YWx1ZTpbXX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19vYnNlcnZlcnNfX1wiLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMSx2YWx1ZTpbXX0pKSxhLnRhcmdldC5fX29ic2VydmVyQ2FsbGJhY2tzX18ucHVzaCh0KSxhLnRhcmdldC5fX29ic2VydmVyc19fLnB1c2godGhpcykscz1uZXcgUHJveHkoZSxhKSx1KCExLGkpLHN9ZS5wcm90b3R5cGUuZGVsaXZlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChudWxsLFwiZGVsaXZlclwiKX0sZS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1lW3RdLG89dm9pZCAwPT09bj9cImFkZFwiOlwidXBkYXRlXCI7aWYoZVt0XT1yLGUuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wJiYoIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2Yobyk+PTApKXt2YXIgaT17b2JqZWN0OmUsbmFtZTp0LHR5cGU6b30scz0wPT09dGhpcy5jaGFuZ2VzZXQubGVuZ3RoLGE9dGhpcy5kZWxpdmVyKCk7XCJ1cGRhdGVcIj09PW8mJihpLm9sZFZhbHVlPW4pLHRoaXMuY2hhbmdlc2V0LnB1c2goaSkscyYmYSghMSxcIm51bWJlclwiPT10eXBlb2YgYS5kZWxheT9hLmRlbGF5OjEwKX1yZXR1cm4hMH0sZS5wcm90b3R5cGUuZGVsZXRlUHJvcGVydHk9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lW3RdO2lmKGRlbGV0ZSBlW3RdLGUuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wJiYhdGhpcy5hY2NlcHRsaXN0fHx0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZihcImRlbGV0ZVwiKT49MCl7dmFyIG49e29iamVjdDplLG5hbWU6dCx0eXBlOlwiZGVsZXRlXCIsb2xkVmFsdWU6cn0sbz0wPT09dGhpcy5jaGFuZ2VzZXQubGVuZ3RoLGk9dGhpcy5kZWxpdmVyKCk7dGhpcy5jaGFuZ2VzZXQucHVzaChuKSxvJiZpKCExLFwibnVtYmVyXCI9PXR5cGVvZiBpLmRlbGF5P2kuZGVsYXk6MTApfXJldHVybiEwfSxlLnByb3RvdHlwZS5kZWZpbmVQcm9wZXJ0eT1mdW5jdGlvbihlLHQscil7aWYoT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxyKSxlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoXCJyZWNvbmZpZ3VyZVwiKT49MCl7dmFyIG49e29iamVjdDplLG5hbWU6dCx0eXBlOlwicmVjb25maWd1cmVcIn0sbz0wPT09dGhpcy5jaGFuZ2VzZXQubGVuZ3RoLGk9dGhpcy5kZWxpdmVyKCk7dGhpcy5jaGFuZ2VzZXQucHVzaChuKSxvJiZpKCExLFwibnVtYmVyXCI9PXR5cGVvZiBpLmRlbGF5P2kuZGVsYXk6MTApfXJldHVybiEwfSxlLnByb3RvdHlwZS5zZXRQcm90b3R5cGVPZj1mdW5jdGlvbihlLHQpe3ZhciByPU9iamVjdC5nZXRQcm90b3R5cGVPZihlKTtpZihPYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KSxlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoXCJzZXRQcm90b3R5cGVcIik+PTApe3ZhciBuPXtvYmplY3Q6ZSxuYW1lOlwiX19wcm90b19fXCIsdHlwZTpcInNldFByb3RvdHlwZVwiLG9sZFZhbHVlOnJ9LG89MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxpPXRoaXMuZGVsaXZlcigpO3RoaXMuY2hhbmdlc2V0LnB1c2gobiksbyYmaSghMSxcIm51bWJlclwiPT10eXBlb2YgaS5kZWxheT9pLmRlbGF5OjEwKX1yZXR1cm4hMH0sZS5wcm90b3R5cGUucHJldmVudEV4dGVuc2lvbnM9ZnVuY3Rpb24oZSl7aWYoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKGUpLGUuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wJiYhdGhpcy5hY2NlcHRsaXN0fHx0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZihcInByZXZlbnRFeHRlbnNpb25zXCIpPj0wKXt2YXIgdD17b2JqZWN0OmUsdHlwZTpcInByZXZlbnRFeHRlbnNpb25zXCJ9LHI9MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxuPXRoaXMuZGVsaXZlcigpO3RoaXMuY2hhbmdlc2V0LnB1c2godCksciYmbighMSxcIm51bWJlclwiPT10eXBlb2Ygbi5kZWxheT9uLmRlbGF5OjEwKX1yZXR1cm4hMH0sT2JqZWN0Lm9ic2VydmU9ZnVuY3Rpb24odCxyLG4sbyxpLHMpe3JldHVybiBuZXcgZSh0LHIsbixvLGkscyl9LE9iamVjdC51bm9ic2VydmU9ZnVuY3Rpb24oZSx0KXtpZihlLl9fb2JzZXJ2ZXJDYWxsYmFja3NfXyl7aWYoIXQpcmV0dXJuIGUuX19vYnNlcnZlckNhbGxiYWNrc19fLnNwbGljZSgwLGUuX19vYnNlcnZlckNhbGxiYWNrc19fLmxlbmd0aCksdm9pZCBlLl9fb2JzZXJ2ZXJzX18uc3BsaWNlKDAsZS5fX29ic2VydmVyc19fLmxlbmd0aCk7ZS5fX29ic2VydmVyQ2FsbGJhY2tzX18uZm9yRWFjaChmdW5jdGlvbihyLG4pe3Q9PT1yJiYoZS5fX29ic2VydmVyQ2FsbGJhY2tzX18uc3BsaWNlKG4sMSksZGVsZXRlIGUuX19vYnNlcnZlcnNfX1tuXS5jYWxsYmFjayxlLl9fb2JzZXJ2ZXJzX18uc3BsaWNlKG4sMSkpfSl9fSxBcnJheS5vYnNlcnZlPWZ1bmN0aW9uKGUsdCxyLG4sbyxpKXtpZighKGUgaW5zdGFuY2VvZiBBcnJheXx8QXJyYXkuaXNBcnJheShlKSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkZpcnN0IGFyZ3VtZW50IHRvIEFycmF5Lm9ic2VydmVyIGlzIG5vdCBhbiBBcnJheVwiKTtyPXJ8fFtcImFkZFwiLFwidXBkYXRlXCIsXCJkZWxldGVcIixcInNwbGljZVwiXTt2YXIgcz1uZXcgUHJveHkoZSx7Z2V0OmZ1bmN0aW9uKHQsbil7cmV0dXJuXCJ1bm9ic2VydmVcIj09PW4/ZnVuY3Rpb24oZSl7cmV0dXJuIGU/T2JqZWN0LnVub2JzZXJ2ZSh0LGUpOnQudW5vYnNlcnZlKCl9Olwic3BsaWNlXCI9PT1uP2Z1bmN0aW9uKG4sbyl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIG58fFwibnVtYmVyXCIhPXR5cGVvZiBvKXRocm93IG5ldyBUeXBlRXJyb3IoXCJGaXJzdCB0d28gYXJndW1lbnRzIHRvIEFycmF5IHNwbGljZSBhcmUgbm90IG51bWJlciwgbnVtYmVyXCIpO3ZhciBpPXRoaXMuc2xpY2UobixuK28pLHM9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50cy5sZW5ndGgtMjowLHU9e29iamVjdDplLHR5cGU6XCJzcGxpY2VcIixpbmRleDpuLHJlbW92ZWQ6aSxhZGRlZENvdW50OnN9O2lmKHQuc3BsaWNlLmFwcGx5KHQsYXJndW1lbnRzKSxyLmluZGV4T2YoXCJzcGxpY2VcIik+PTApe249MD09PWEuX19vYnNlcnZlcl9fLmNoYW5nZXNldC5sZW5ndGg7dmFyIGM9YS5fX29ic2VydmVyX18uZGVsaXZlcigpO2EuX19vYnNlcnZlcl9fLmNoYW5nZXNldC5wdXNoKHUpLG4mJmMoITEsXCJudW1iZXJcIj09dHlwZW9mIGMuZGVsYXk/Yy5kZWxheToxMCl9fTpcInB1c2hcIj09PW4/ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc3BsaWNlKHRoaXMubGVuZ3RoLDAsZSl9OlwicG9wXCI9PT1uP2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3BsaWNlKHRoaXMubGVuZ3RoLTEsMSl9OlwidW5zaGlmdFwiPT09bj9mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zcGxpY2UoMCwwLGUpfTpcInNoaWZ0XCI9PT1uP2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3BsaWNlKDAsMSl9OnRbbl19fSksYT1PYmplY3Qub2JzZXJ2ZShzLGZ1bmN0aW9uKGUpe3ZhciBuPWUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVyblwibGVuZ3RoXCIhPT1lLm5hbWUmJlwiYWRkXCIhPT1lLm5hbWUmJighcnx8ci5pbmRleE9mKGUudHlwZSk+PTApfSk7bi5sZW5ndGg+MCYmdChuKX0scixuLG8saSk7cmV0dXJuIGF9LEFycmF5LnVub2JzZXJ2ZT1mdW5jdGlvbihlLHQpe3JldHVybiBlLnVub2JzZXJ2ZSh0KX19T2JqZWN0LmRlZXBPYnNlcnZlPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1mdW5jdGlvbihlKXtyZXR1cm57fS50b1N0cmluZy5jYWxsKGUpLm1hdGNoKC9cXHMoW2EtekEtWl0rKS8pWzFdLnRvTG93ZXJDYXNlKCl9O2Z1bmN0aW9uIG8oZSxyKXtPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGZ1bmN0aW9uKG8pe2lmKChcIm9iamVjdFwiPT09bihlW29dKXx8XCJhcnJheVwiPT09bihlW29dKSkmJiFlW29dLmhhc093blByb3BlcnR5KFwiX19vYnNlcnZlcnNfX1wiKSl7dmFyIGk9ci5zbGljZSgwKTtpLnB1c2gobyksZVtvXT1PYmplY3QuZGVlcE9ic2VydmUoZVtvXSx0LGkpfX0pfXJldHVybiBvKGUscj1yfHxbXSksT2JqZWN0Lm9ic2VydmUoZSxmdW5jdGlvbihlKXt2YXIgbj1bXTtlLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQ9KHIubGVuZ3RoPjA/ci5qb2luKFwiLlwiKStcIi5cIjpcIlwiKStlLm5hbWU7XCJ1cGRhdGVcIiE9PWUudHlwZSYmXCJhZGRcIiE9PWUudHlwZXx8byhlLm9iamVjdCxyKSxuLnB1c2goe25hbWU6ZS5uYW1lLG9iamVjdDplLm9iamVjdCx0eXBlOmUudHlwZSxvbGRWYWx1ZTplLm9sZFZhbHVlLG5ld1ZhbHVlOmUub2JqZWN0W2UubmFtZV0sa2V5cGF0aDp0fSksZnVuY3Rpb24gZSh0LHIsbyxpLHMpe2kgaW5zdGFuY2VvZiBPYmplY3Q/T2JqZWN0LmtleXMoaSkuZm9yRWFjaChmdW5jdGlvbihhKXtpZighb3x8b1thXSE9PWlbYV0pe3ZhciB1PW8mJnZvaWQgMCE9PW9bYV0/b1thXTp2b2lkIDAsYz12b2lkIDA9PT11P1wiYWRkXCI6XCJ1cGRhdGVcIixsPXMrXCIuXCIrYTtuLnB1c2goe25hbWU6dCxvYmplY3Q6cix0eXBlOmMsb2xkVmFsdWU6dSxuZXdWYWx1ZTppW2FdLGtleXBhdGg6bH0pLGUodCxyLHUsaVthXSxsKX19KTpvIGluc3RhbmNlb2YgT2JqZWN0JiZPYmplY3Qua2V5cyhvKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciB1PW51bGw9PT1pP1widXBkYXRlXCI6XCJkZWxldGVcIixjPXMrXCIuXCIrYTtuLnB1c2goe25hbWU6dCxvYmplY3Q6cix0eXBlOnUsb2xkVmFsdWU6b1thXSxuZXdWYWx1ZTppLGtleXBhdGg6Y30pLGUodCxyLG9bYV0sdm9pZCAwLGMpfSl9KGUubmFtZSxlLm9iamVjdCxlLm9sZFZhbHVlLGUub2JqZWN0W2UubmFtZV0sdCl9KSx0KG4pfSl9fSgpfSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49ZihyKDE4KSksbz1mKHIoMjUpKSxpPWYocigzKSkscz1mKHIoNSkpLGE9ZihyKDMzKSksdT1mKHIoMzQpKSxjPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLGw9ZihyKDEyOSkpLGQ9KHIoMTkpLGYocigxMzApKSk7ZnVuY3Rpb24gZihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHA9Yy5nZXRMb2dnZXIoXCJGaWxlSHlwZXJ0eVJlc291cmNlXCIpLGg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIpeygwLGkuZGVmYXVsdCkodGhpcyx0KTt2YXIgbj0oMCxhLmRlZmF1bHQpKHRoaXMsKHQuX19wcm90b19ffHwoMCxvLmRlZmF1bHQpKHQpKS5jYWxsKHRoaXMsZSxyKSk7cmV0dXJuIG4ubWV0YWRhdGEucmVzb3VyY2VUeXBlPVwiZmlsZVwiLG59cmV0dXJuKDAsdS5kZWZhdWx0KSh0LGUpLCgwLHMuZGVmYXVsdCkodCxbe2tleTpcImluaXRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2lmKCFlKXRocm93IG5ldyBFcnJvcihcIltGaWxlSHlwZXJ0eVJlc291cmNlLmNvbnN0cnVjdG9yXSBtaXNzaW5nIG1hbmRhdG9yeSAqZmlsZSogaW5wdXQgXCIpO3JldHVybiBuZXcgbi5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7aWYodC5fbWV0YWRhdGEubmFtZT1lLm5hbWUsdC5fbWV0YWRhdGEubGFzdE1vZGlmaWVkPWUubGFzdE1vZGlmaWVkLHQuX21ldGFkYXRhLnNpemU9ZS5zaXplLHQuX21ldGFkYXRhLm1pbWV0eXBlPWUudHlwZSxwLmxvZyhcIltGaWxlSHlwZXJ0eVJlc291cmNlLmluaXRdIGZpbGU6IFwiLGUpLHQuX2lzU2VuZGVyKXN3aXRjaChlLnR5cGUuc3BsaXQoXCIvXCIpWzBdKXtjYXNlXCJpbWFnZVwiOnQuX2dldEltYWdlUHJldmlldyhlKS50aGVuKGZ1bmN0aW9uKG4pe3QuX21ldGFkYXRhLnByZXZpZXc9bix0Ll9jb250ZW50PWUscigpfSk7YnJlYWs7ZGVmYXVsdDp0Ll9jb250ZW50PWUscigpfWVsc2UgdC5fY29udGVudD1lLmNvbnRlbnQsZS5wcmV2aWV3JiYodC5fbWV0YWRhdGEucHJldmlldz1lLnByZXZpZXcpLHIoKX0pfX0se2tleTpcIl9nZXRJbWFnZVByZXZpZXdcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1uZXcgRmlsZVJlYWRlcjtyZXR1cm4gbmV3IG4uZGVmYXVsdChmdW5jdGlvbihyLG4pe2QuZGVmYXVsdC5yZXNpemUoZSx7d2lkdGg6MTAwLGhlaWdodDoxMDB9LGZ1bmN0aW9uKGUsbil7bj8odC5yZWFkQXNEYXRhVVJMKGUpLHQub25sb2FkPWZ1bmN0aW9uKGUpe3IoZS50YXJnZXQucmVzdWx0KX0pOihwLndhcm4oXCJbRmlsZUh5cGVydHlSZXNvdXJjZS5fZ2V0SW1hZ2VQcmV2aWV3XSB1bmFibGUgdG8gY3JlYXRlIGltYWdlIHByZXZpZXcgZnJvbSBvcmlnaW5hbCBpbWFnZSBcIikscih2b2lkIDApKX0pfSl9fSx7a2V5OlwidG9NZXNzYWdlXCIsdmFsdWU6ZnVuY3Rpb24oKXt9fSx7a2V5OlwibmFtZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YS5uYW1lfX0se2tleTpcInByZXZpZXdcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGEucHJldmlld319XSksdH0obC5kZWZhdWx0KTt0LmRlZmF1bHQ9aCxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoMTI2KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoMTI3KTt2YXIgbj1yKDApLk9iamVjdDtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEyKSxvPXIoNDYpLmY7cig0NCkoXCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JcIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBvKG4oZSksdCl9fSl9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbj1hKHIoMTgpKSxvPWEocigzKSksaT1hKHIoNSkpLHM9YShyKDEyNCkpO2Z1bmN0aW9uIGEoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciB1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeygwLG8uZGVmYXVsdCkodGhpcyxlKX1yZXR1cm4oMCxpLmRlZmF1bHQpKGUsW3trZXk6XCJjcmVhdGVIeXBlcnR5UmVzb3VyY2VcIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49dm9pZCAwO3N3aXRjaCh0KXtjYXNlXCJmaWxlXCI6bj1uZXcgcy5kZWZhdWx0KGUscik7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJbSHlwZXJ0eVJlc291cmNlRmFjdG9yeS5jcmVhdGVIeXBlcnR5UmVzb3VyY2VdIG5vdCBzdXBwb3J0ZWQgdHlwZTogXCIsdCl9cmV0dXJuIG59fSx7a2V5OlwiY3JlYXRlSHlwZXJ0eVJlc291cmNlV2l0aENvbnRlbnRcIix2YWx1ZTpmdW5jdGlvbihlLHQscixvKXt2YXIgaT12b2lkIDA7cmV0dXJuIG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24obil7c3dpdGNoKHQpe2Nhc2VcImZpbGVcIjppPW5ldyBzLmRlZmF1bHQoZSxvKTticmVhaztkZWZhdWx0OnJlamVjdCgpfWkuaW5pdChyKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGkuc2F2ZSgpfSkudGhlbihmdW5jdGlvbigpe24oaSl9KX0pfX1dKSxlfSgpO3QuZGVmYXVsdD11LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbj1wKHIoMTgpKSxvPXAocigyNSkpLGk9cChyKDMpKSxzPXAocig1KSksYT1wKHIoMzMpKSx1PXAocigxMDApKSxjPXAocigzNCkpLGw9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSksZD1yKDE5KSxmPXAocigxMTgpKTtmdW5jdGlvbiBwKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgaD1sLmdldExvZ2dlcihcIkh5cGVydHlSZXNvdXJjZVwiKSx5PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyKXsoMCxpLmRlZmF1bHQpKHRoaXMsdCk7dmFyIG49KDAsYS5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAsby5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLHIpKSxzPW47cmV0dXJuIHMuYXJyYXlidWZmZXJTaXplTGltaXQ9NTI0Mjg4MCxzLl9pc1NlbmRlcj1lLHMuX2xvY2FsU3RvcmFnZVVSTD1zLl9wYXJlbnRPYmplY3QuX3N5bmNoZXIuX3J1bnRpbWVVcmwrXCIvc3RvcmFnZVwiLG59cmV0dXJuKDAsYy5kZWZhdWx0KSh0LGUpLCgwLHMuZGVmYXVsdCkodCxbe2tleTpcInNhdmVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24odCxyKXt2YXIgbj17ZnJvbTplLl9vd25lcix0bzplLl9sb2NhbFN0b3JhZ2VVUkwsdHlwZTpcImNyZWF0ZVwiLGJvZHk6e3ZhbHVlOigwLGQuZGVlcENsb25lKShlLl9tZXRhZGF0YSl9fTtuLmJvZHkudmFsdWUuY29udGVudD1lLl9jb250ZW50LGUuX2J1cy5wb3N0TWVzc2FnZShuLGZ1bmN0aW9uKG4pe2guaW5mbyhcIltIeXBlcnR5UmVzb3VyY2Uuc2F2ZV0gcmVwbHk6IFwiLG4pLGUuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKGUuX293bmVyLG4uaWQpLDIwMD09PW4uYm9keS5jb2RlPyhuLmJvZHkudmFsdWUmJihlLl9tZXRhZGF0YS5jb250ZW50VVJMfHwoZS5fbWV0YWRhdGEuY29udGVudFVSTD1bXSksZS5fbWV0YWRhdGEuY29udGVudFVSTC5wdXNoKG4uYm9keS52YWx1ZSkpLHQoKSk6cihuLmJvZHkuY29kZStcIiBcIituLmJvZHkuZGVzYyl9LCExKX0pfX0se2tleTpcInJlYWRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBoLmluZm8oXCJbSHlwZXJ0eVJlc291cmNlLnJlYWRdIFwiLHRoaXMpLG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtpZih0LmNvbnRlbnQpcih0KTtlbHNle3ZhciBvPXQuX2dldEJlc3RDb250ZW50VVJMKHQuX21ldGFkYXRhLmNvbnRlbnRVUkwpO2gubG9nKFwiU3RvcmFnZTpcIixvKTt2YXIgaT17ZnJvbTp0Ll9vd25lcix0bzpvLnVybCx0eXBlOlwicmVhZFwiLGJvZHk6e3Jlc291cmNlOm8udXJsK1wiL1wiK28ucmVzb3VyY2UscDJwOiEwfX07dC5tZXRhZGF0YS5wMnBSZXF1ZXN0ZXImJnQubWV0YWRhdGEucDJwSGFuZGxlciYmKGkuYm9keS5wMnBSZXF1ZXN0ZXI9dC5tZXRhZGF0YS5wMnBSZXF1ZXN0ZXIsaS5ib2R5LnAycEhhbmRsZXI9dC5tZXRhZGF0YS5wMnBIYW5kbGVyKSx0Ll9nZXRCZXN0UmVzb3VyY2UoaSxlKS50aGVuKGZ1bmN0aW9uKGUpe2guaW5mbyhcIltIeXBlcnR5UmVzb3VyY2VdIC0gZ2V0IGxvY2FsbHkgdGhlIHJlc291cmNlOlwiLGUpLHIodCl9KS5jYXRjaChmdW5jdGlvbihpKXtoLndhcm4oXCJbSHlwZXJ0eVJlc291cmNlXSAtIGdldCBsb2NhbGx5IHRoZSByZXNvdXJjZSBmYWlsXCIsaSk7dmFyIHM9e2Zyb206dC5fb3duZXIsdG86by5yZW1vdGVVUkwsdHlwZTpcInJlYWRcIixib2R5OntyZXNvdXJjZTpvLnJlbW90ZVVSTCtcIi9cIitvLnJlc291cmNlLHAycDohMH19O3QubWV0YWRhdGEucDJwUmVxdWVzdGVyJiZ0Lm1ldGFkYXRhLnAycEhhbmRsZXImJihzLmJvZHkucDJwUmVxdWVzdGVyPXQubWV0YWRhdGEucDJwUmVxdWVzdGVyLHMuYm9keS5wMnBIYW5kbGVyPXQubWV0YWRhdGEucDJwSGFuZGxlciksdC5fZ2V0QmVzdFJlc291cmNlKHMsZSkudGhlbihmdW5jdGlvbihlKXtoLndhcm4oXCJbSHlwZXJ0eVJlc291cmNlXSAtIGdldCByZW1vdGVseSB0aGUgcmVzb3VyY2VcIixlKSxyKHQpfSkuY2F0Y2goZnVuY3Rpb24oZSl7aC53YXJuKFwiW0h5cGVydHlSZXNvdXJjZV0gLSBnZXQgcmVtb3RlbHkgdGhlIHJlc291cmNlIGZhaWxcIixlKSxuKGUuYm9keS5jb2RlK1wiIFwiK2UuYm9keS5kZXNjKX0pfSl9fSl9fSx7a2V5OlwiX2dldEJlc3RSZXNvdXJjZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztyZXR1cm4gbmV3IG4uZGVmYXVsdChmdW5jdGlvbihuLG8pe3ZhciBpPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gci5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoci5fb3duZXIscyksZS5ib2R5LmNvZGU9NDA4LGUuYm9keS5kZXNjPVwiUmVzcG9uc2UgdGltZW91dFwiLG8oZSl9LDNlMykscz1yLl9idXMucG9zdE1lc3NhZ2UoZSxmdW5jdGlvbihlKXtoLmxvZyhcIltIeXBlcnR5UmVzb3VyY2UucmVhZF0gcmVwbHk6IFwiLGUpO3ZhciBzPWUuaWQ7c3dpdGNoKGNsZWFyVGltZW91dChpKSxlLmJvZHkuY29kZSl7Y2FzZSAyMDA6ci5fY29udGVudD1lLmJvZHkudmFsdWUuY29udGVudCxlLmJvZHkudmFsdWUuc2l6ZTxyLmFycmF5YnVmZmVyU2l6ZUxpbWl0JiZyLnNhdmUoKSxyLl9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyLl9vd25lcixzKSxuKGUpO2JyZWFrO2Nhc2UgMTgzOnQoZS5ib2R5LnZhbHVlKTticmVhaztkZWZhdWx0OnIuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHIuX293bmVyLHMpLG8oZSl9fSwhMSl9KX19LHtrZXk6XCJkZWxldGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7aC5pbmZvKFwiW0h5cGVydHlSZXNvdXJjZS5kZWxldGVdXCIsZS5tZXRhZGF0YSk7dmFyIHQ9e2Zyb206ZS5fb3duZXIsdG86ZS5fbG9jYWxTdG9yYWdlVVJMLHR5cGU6XCJkZWxldGVcIixib2R5OntyZXNvdXJjZXM6ZS5tZXRhZGF0YS5jb250ZW50VVJMfX07cmV0dXJuIG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24ocil7ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24oZSl7ZS5ib2R5LmNvZGU8MzAwP3IoITApOnIoITEpfSl9KX19LHtrZXk6XCJfZ2V0QmVzdENvbnRlbnRVUkxcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lWzBdLHI9dC5zdWJzdHIodC5sYXN0SW5kZXhPZihcIi9cIikrMSk7cmV0dXJue3VybDp0aGlzLl9sb2NhbFN0b3JhZ2VVUkwscmVzb3VyY2U6cixyZW1vdGVVUkw6dC5zdWJzdHIoMCx0Lmxhc3RJbmRleE9mKFwiL1wiKSl9fX0se2tleTpcInJlc291cmNlVHlwZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1ldGFkYXRhLnJlc291cmNlVHlwZX19LHtrZXk6XCJtaW1ldHlwZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YS50eXBlfX0se2tleTpcImNvbnRlbnRcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGVudH19LHtrZXk6XCJjb250ZW50VVJMXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhLmNvbnRlbnRVUkx9fSx7a2V5Olwic2hhcmVhYmxlXCIsZ2V0OmZ1bmN0aW9uKCl7dmFyIGU9KDAsdS5kZWZhdWx0KSh0LnByb3RvdHlwZS5fX3Byb3RvX198fCgwLG8uZGVmYXVsdCkodC5wcm90b3R5cGUpLFwibWV0YWRhdGFcIix0aGlzKTtyZXR1cm4gZS5yZXNvdXJjZVR5cGU9dGhpcy5yZXNvdXJjZVR5cGUsZX19XSksdH0oZi5kZWZhdWx0KTt0LmRlZmF1bHQ9eSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49aShyKDMpKSxvPWkocig1KSk7ZnVuY3Rpb24gaShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHM9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEJsb2ImJmZ1bmN0aW9uKCl7dHJ5e3JldHVybiBCb29sZWFuKG5ldyBCbG9iKX1jYXRjaChlKXtyZXR1cm4hMX19KCksYT1zJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhBcnJheSYmZnVuY3Rpb24oKXt0cnl7cmV0dXJuIDEwMD09PW5ldyBCbG9iKFtuZXcgVWludDhBcnJheSgxMDApXSkuc2l6ZX1jYXRjaChlKXtyZXR1cm4hMX19KCksdT1cInVuZGVmaW5lZFwiIT10eXBlb2YgSFRNTENhbnZhc0VsZW1lbnQmJkhUTUxDYW52YXNFbGVtZW50LnByb3RvdHlwZS50b0Jsb2IsYz11fHxcInVuZGVmaW5lZFwiIT10eXBlb2YgVWludDhBcnJheSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIEFycmF5QnVmZmVyJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgYXRvYixsPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBGaWxlUmVhZGVyfHxcInVuZGVmaW5lZFwiIT10eXBlb2YgVVJMLGQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7KDAsbi5kZWZhdWx0KSh0aGlzLGUpfXJldHVybigwLG8uZGVmYXVsdCkoZSxudWxsLFt7a2V5OlwicmVzaXplXCIsdmFsdWU6ZnVuY3Rpb24odCxyLG4pe1wiZnVuY3Rpb25cIj09dHlwZW9mIHImJihuPXIscj17d2lkdGg6NjQwLGhlaWdodDo0ODB9KTtyLndpZHRoLHIuaGVpZ2h0O2lmKCFlLmlzU3VwcG9ydGVkKCl8fCF0LnR5cGUubWF0Y2goL2ltYWdlLiovKSlyZXR1cm4gbih0LCExKSwhMTtpZih0LnR5cGUubWF0Y2goL2ltYWdlXFwvZ2lmLykpcmV0dXJuIG4odCwhMSksITE7dmFyIG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtyZXR1cm4gby5vbmxvYWQ9ZnVuY3Rpb24oaSl7dmFyIHM9by53aWR0aCxhPW8uaGVpZ2h0LGM9ITE7aWYocz49YSYmcz5yLndpZHRoPyhhKj1yLndpZHRoL3Mscz1yLndpZHRoLGM9ITApOmE+ci5oZWlnaHQmJihzKj1yLmhlaWdodC9hLGE9ci5oZWlnaHQsYz0hMCksYyl7dmFyIGw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtpZihsLndpZHRoPXMsbC5oZWlnaHQ9YSxsLmdldENvbnRleHQoXCIyZFwiKS5kcmF3SW1hZ2UobywwLDAscyxhKSx1KWwudG9CbG9iKGZ1bmN0aW9uKGUpe24oZSwhMCl9LHQudHlwZSk7ZWxzZXt2YXIgZD1lLl90b0Jsb2IobCx0LnR5cGUpO24oZCwhMCl9fWVsc2Ugbih0LCExKX0sZS5fbG9hZEltYWdlKG8sdCksITB9fSx7a2V5OlwiX3RvQmxvYlwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS50b0RhdGFVUkwodCkuc3BsaXQoXCIsXCIpLG49dm9pZCAwO249clswXS5pbmRleE9mKFwiYmFzZTY0XCIpPj0wP2F0b2IoclsxXSk6ZGVjb2RlVVJJQ29tcG9uZW50KHJbMV0pO2Zvcih2YXIgbz1uZXcgQXJyYXlCdWZmZXIobi5sZW5ndGgpLGk9bmV3IFVpbnQ4QXJyYXkobyksdT0wO3U8bi5sZW5ndGg7dSs9MSlpW3VdPW4uY2hhckNvZGVBdCh1KTt2YXIgYz1yWzBdLnNwbGl0KFwiOlwiKVsxXS5zcGxpdChcIjtcIilbMF0sbD1udWxsO2lmKHMpbD1uZXcgQmxvYihbYT9pOm9dLHt0eXBlOmN9KTtlbHNle3ZhciBkPW5ldyBCbG9iQnVpbGRlcjtkLmFwcGVuZChvKSxsPWQuZ2V0QmxvYihjKX1yZXR1cm4gbH19LHtrZXk6XCJfbG9hZEltYWdlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBVUkwpe3ZhciBuPW5ldyBGaWxlUmVhZGVyO24ub25sb2FkPWZ1bmN0aW9uKHQpe2Uuc3JjPXQudGFyZ2V0LnJlc3VsdCxyJiZyKCl9LG4ucmVhZEFzRGF0YVVSTCh0KX1lbHNlIGUuc3JjPVVSTC5jcmVhdGVPYmplY3RVUkwodCksciYmcigpfX0se2tleTpcImlzU3VwcG9ydGVkXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgSFRNTENhbnZhc0VsZW1lbnQmJmMmJmx9fV0pLGV9KCk7dC5kZWZhdWx0PWQsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBuPWYocigxOCkpLG89ZihyKDc4KSksaT1mKHIoMykpLHM9ZihyKDUpKSxhPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLHU9cigxOSksYz1mKHIoMTMyKSksbD1mKHIoMTMzKSksZD1mKHIoMTM1KSk7ZnVuY3Rpb24gZihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHA9YS5nZXRMb2dnZXIoXCJTeW5jaGVyXCIpLGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixuKXsoMCxpLmRlZmF1bHQpKHRoaXMsZSk7dmFyIG89dGhpcztvLl9vd25lcj10LG8uX2J1cz1yLG8uX3N1YlVSTD1uLnJ1bnRpbWVVUkwrXCIvc21cIixvLl9ydW50aW1lVXJsPW4ucnVudGltZVVSTCxvLl9wMnBIYW5kbGVyPW4ucDJwSGFuZGxlcixvLl9wMnBSZXF1ZXN0ZXI9bi5wMnBSZXF1ZXN0ZXIsby5fcmVwb3J0ZXJzPXt9LG8uX29ic2VydmVycz17fSxvLl9wcm92aXNpb25hbHM9e30sci5hZGRMaXN0ZW5lcih0LGZ1bmN0aW9uKGUpe2lmKGUuZnJvbSE9PXQpc3dpdGNoKHAuaW5mbyhcIltTeW5jaGVyXSBTeW5jaGVyLVJDVjogXCIsZSxvKSxlLnR5cGUpe2Nhc2VcImZvcndhcmRcIjpvLl9vbkZvcndhcmQoZSk7YnJlYWs7Y2FzZVwiY3JlYXRlXCI6by5fb25SZW1vdGVDcmVhdGUoZSk7YnJlYWs7Y2FzZVwiZGVsZXRlXCI6by5fb25SZW1vdGVEZWxldGUoZSk7YnJlYWs7Y2FzZVwiZXhlY3V0ZVwiOm8uX29uRXhlY3V0ZShlKX19KX1yZXR1cm4oMCxzLmRlZmF1bHQpKGUsW3trZXk6XCJjcmVhdGVcIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10mJmFyZ3VtZW50c1szXSxpPWFyZ3VtZW50cy5sZW5ndGg+NCYmdm9pZCAwIT09YXJndW1lbnRzWzRdJiZhcmd1bWVudHNbNF0scz1hcmd1bWVudHMubGVuZ3RoPjUmJnZvaWQgMCE9PWFyZ3VtZW50c1s1XT9hcmd1bWVudHNbNV06XCJubyBuYW1lXCIsYT1hcmd1bWVudHNbNl0sYz1hcmd1bWVudHNbN107aWYoIWUpdGhyb3cgRXJyb3IoXCJbU3luY2hlciAtIENyZWF0ZV0gLSBZb3UgbmVlZCBzcGVjaWZ5IHRoZSBkYXRhIG9iamVjdCBzY2hlbWFcIik7aWYoIXQpdGhyb3cgRXJyb3IoXCJbU3luY2hlciAtIENyZWF0ZV0gLVRoZSBvYnNlcnZlcnMgc2hvdWxkIGJlIGRlZmluZWRcIik7Yz1jfHx7fTt2YXIgbD0oMCxvLmRlZmF1bHQpKHt9LGMpO3JldHVybiBsLnAycD1pLGwuc3RvcmU9bixsLnNjaGVtYT1lLGwuYXV0aG9yaXNlPXQsbC5wMnBIYW5kbGVyPXRoaXMuX3AycEhhbmRsZXIsbC5wMnBSZXF1ZXN0ZXI9dGhpcy5fcDJwUmVxdWVzdGVyLGwuZGF0YT1yPygwLHUuZGVlcENsb25lKShyKTp7fSxsLm5hbWU9MD09PXMubGVuZ3RoP1wibm8gbmFtZVwiOnMsbC5yZXBvcnRlcj1jLmhhc093blByb3BlcnR5KFwicmVwb3J0ZXJcIikmJlwiYm9vbGVhblwiIT10eXBlb2YgYy5yZXBvcnRlcj9jLnJlcG9ydGVyOnRoaXMuX293bmVyLGwucmVzdW1lPSExLGM/KGwubXV0dWFsPSFjLmhhc093blByb3BlcnR5KFwibXV0dWFsXCIpfHxjLm11dHVhbCxsLm5hbWU9Yy5oYXNPd25Qcm9wZXJ0eShcIm5hbWVcIik/Yy5uYW1lOmwubmFtZSk6bC5tdXR1YWw9ITAsYy5oYXNPd25Qcm9wZXJ0eShcInJldXNlVVJMXCIpJiYobC5yZXNvdXJjZT1jLnJldXNlVVJMKSxhJiYobC5pZGVudGl0eT1hKSxwLmxvZyhcIltzeW5jaGVyIC0gY3JlYXRlXSAtIGNyZWF0ZSBSZXBvcnRlciAtIGNyZWF0ZUlucHV0OiBcIixsKSx0aGlzLl9jcmVhdGUobCl9fSx7a2V5OlwicmVzdW1lUmVwb3J0ZXJzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHAubG9nKFwiW3N5bmNoZXIgLSBjcmVhdGVdIC0gcmVzdW1lIFJlcG9ydGVyIC0gY3JpdGVyaWE6IFwiLGUpLCgwLG8uZGVmYXVsdCkoZSx7cmVzdW1lOiEwfSksdGhpcy5fcmVzdW1lQ3JlYXRlKGUpfX0se2tleTpcInN1YnNjcmliZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0mJmFyZ3VtZW50c1syXSxuPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdJiZhcmd1bWVudHNbM10saT0hKGFyZ3VtZW50cy5sZW5ndGg+NCYmdm9pZCAwIT09YXJndW1lbnRzWzRdKXx8YXJndW1lbnRzWzRdLHM9YXJndW1lbnRzWzVdLGE9e307cmV0dXJuIGEucDJwPW4sYS5zdG9yZT1yLGEuc2NoZW1hPWUsYS5yZXNvdXJjZT10LHMmJihhLmlkZW50aXR5PXMpLGEubXV0dWFsPWkscC5sb2coXCJbc3luY2hlciAtIHN1YnNjcmliZV0gLSBzdWJzY3JpYmUgY3JpdGVyaWE6IFwiLGEpLCgwLG8uZGVmYXVsdCkoYSx7cmVzdW1lOiExfSksdGhpcy5fc3Vic2NyaWJlKGEpfX0se2tleTpcInJlc3VtZU9ic2VydmVyc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWV8fHt9O3JldHVybigwLG8uZGVmYXVsdCkodCx7cmVzdW1lOiEwfSksdGhpcy5fcmVzdW1lU3Vic2NyaWJlKHQpfX0se2tleTpcInJlYWRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6XCJyZWFkXCIsZnJvbTp0Ll9vd25lcix0bzplfTtyZXR1cm4gbmV3IG4uZGVmYXVsdChmdW5jdGlvbihlLG4pe3QuX2J1cy5wb3N0TWVzc2FnZShyLGZ1bmN0aW9uKGkpe3AubG9nKFwiW1N5bmNoZXIucmVhZF0gcmVwbHk6IFwiLGkpO3ZhciBzPXt9LGE9e30sdT0wO2lmKGkuYm9keS5jb2RlPDMwMClpZihpLmJvZHkudmFsdWUuaGFzT3duUHJvcGVydHkoXCJyZXNwb25zZXNcIikpaWYoMD09PXUpYT1pLmJvZHkudmFsdWUsKyt1O2Vsc2V7ZGVsZXRlIGkuYm9keS52YWx1ZS5yZXNwb25zZXM7dmFyIGM9dm9pZCAwO2ZvcihjIGluIGkuYm9keS52YWx1ZSlzLmhhc093blByb3BlcnR5KGMpfHwoc1tjXT17fSksKDAsby5kZWZhdWx0KShzW2NdLGkuYm9keS52YWx1ZVtjXSk7Kyt1PT09YS5yZXNwb25zZXMmJihhLmNoaWxkcmVuT2JqZWN0cz1zLGRlbGV0ZSBhLnJlc3BvbnNlcyx0Ll9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyLmZyb20saS5pZCksZShhKSl9ZWxzZSB0Ll9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyLmZyb20saS5pZCksZShpLmJvZHkudmFsdWUpO2Vsc2UgbihpLmJvZHkuZGVzYyl9LCExKX0pfX0se2tleTpcIm9uTm90aWZpY2F0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyPWV9fSx7a2V5Olwib25DbG9zZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uQ2xvc2U9ZX19LHtrZXk6XCJfY3JlYXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IG4uZGVmYXVsdChmdW5jdGlvbihyLG4pe3ZhciBpPSgwLG8uZGVmYXVsdCkoe30sZSkscz1lLnJlc3VtZTtpLmNyZWF0ZWQ9KG5ldyBEYXRlKS50b0lTT1N0cmluZygpLGkucnVudGltZT10Ll9ydW50aW1lVXJsO3ZhciBhPSgwLHUuZGVlcENsb25lKShpKTtkZWxldGUgYS5wMnAsZGVsZXRlIGEuc3RvcmUsZGVsZXRlIGEub2JzZXJ2ZXJzLGRlbGV0ZSBhLmlkZW50aXR5O3ZhciBsPXt0eXBlOlwiY3JlYXRlXCIsZnJvbTp0Ll9vd25lcix0bzp0Ll9zdWJVUkwsYm9keTp7cmVzdW1lOnMsdmFsdWU6YX19O2wuYm9keS5zY2hlbWE9aS5zY2hlbWEsaS5wMnAmJihsLmJvZHkucDJwPWkucDJwKSxpLnN0b3JlJiYobC5ib2R5LnN0b3JlPWkuc3RvcmUpLGkuaWRlbnRpdHkmJihsLmJvZHkuaWRlbnRpdHk9aS5pZGVudGl0eSkscC5sb2coXCJbc3luY2hlci5fY3JlYXRlXTogXCIsaSxsKSx0Ll9idXMucG9zdE1lc3NhZ2UobCxmdW5jdGlvbihvKXtpZihwLmxvZyhcIltzeW5jaGVyIC0gY3JlYXRlXSAtIGNyZWF0ZS1yZXNwb25zZTogXCIsbyksMjAwPT09by5ib2R5LmNvZGUpe2kudXJsPW8uYm9keS5yZXNvdXJjZSxpLnN0YXR1cz1cImxpdmVcIixpLnN5bmNoZXI9dCxpLmNoaWxkcmVucz1vLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXM7dmFyIHM9dC5fcmVwb3J0ZXJzW2kudXJsXTtzfHwocz1uZXcgYy5kZWZhdWx0KGkpLHQuX3JlcG9ydGVyc1tpLnVybF09cykscy5pbnZpdGVPYnNlcnZlcnMoZS5hdXRob3Jpc2UsZS5wMnApLHIocyl9ZWxzZSBuKG8uYm9keS5kZXNjKX0pfSl9fSx7a2V5OlwiX3Jlc3VtZUNyZWF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10aGlzO3JldHVybiBuZXcgbi5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7dmFyIGk9ZS5yZXN1bWUscz17dHlwZTpcImNyZWF0ZVwiLGZyb206ci5fb3duZXIsdG86ci5fc3ViVVJMLGJvZHk6e3Jlc3VtZTppfX07cC5sb2coXCJbc3luY2hlciAtIGNyZWF0ZV06IFwiLGUscyksZSYmKHMuYm9keS52YWx1ZT1lLGUuaGFzT3duUHJvcGVydHkoXCJyZXBvcnRlclwiKT9zLmJvZHkudmFsdWUucmVwb3J0ZXI9ZS5yZXBvcnRlcjpzLmJvZHkudmFsdWUucmVwb3J0ZXI9ci5fb3duZXIpLGUucDJwJiYocy5ib2R5LnAycD1lLnAycCksZS5zdG9yZSYmKHMuYm9keS5zdG9yZT1lLnN0b3JlKSxlLm9ic2VydmVycyYmKHMuYm9keS5hdXRob3Jpc2U9ZS5vYnNlcnZlcnMpLGUuaWRlbnRpdHkmJihzLmJvZHkuaWRlbnRpdHk9ZS5pZGVudGl0eSkscC5sb2coXCJbc3luY2hlci5fcmVzdW1lQ3JlYXRlXSAtIHJlc3VtZSBtZXNzYWdlOiBcIixzKSxyLl9idXMucG9zdE1lc3NhZ2UocyxmdW5jdGlvbihlKXtpZihwLmxvZyhcIltzeW5jaGVyLl9yZXN1bWVDcmVhdGVdIC0gY3JlYXRlLXJlc3VtZWQtcmVzcG9uc2U6IFwiLGUpLDIwMD09PWUuYm9keS5jb2RlKXt2YXIgaT1lLmJvZHkudmFsdWU7Zm9yKHZhciBzIGluIGkpe3ZhciBhPWlbc107YS5kYXRhPSgwLHUuZGVlcENsb25lKShhLmRhdGEpfHx7fSxhLmNoaWxkcmVuT2JqZWN0cyYmKGEuY2hpbGRyZW5PYmplY3RzPSgwLHUuZGVlcENsb25lKShhLmNoaWxkcmVuT2JqZWN0cykpLGEubXV0dWFsPSExLGEucmVzdW1lPSEwLGEuc3RhdHVzPVwibGl2ZVwiLGEuc3luY2hlcj1yLHAubG9nKFwiW3N5bmNoZXIuX3Jlc3VtZUNyZWF0ZV0gLSBjcmVhdGUtcmVzdW1lZC1kYXRhT2JqZWN0UmVwb3J0ZXJcIixhKTt2YXIgbD1uZXcgYy5kZWZhdWx0KGEpO2EuY2hpbGRyZW5PYmplY3RzJiZsLnJlc3VtZUNoaWxkcmVucyhhLmNoaWxkcmVuT2JqZWN0cyksci5fcmVwb3J0ZXJzW2EudXJsXT1sfW4oci5fcmVwb3J0ZXJzKSx0Ll9vblJlcG9ydGVyc1Jlc3VtZSYmdC5fb25SZXBvcnRlcnNSZXN1bWUodC5fcmVwb3J0ZXJzKX1lbHNlIDQwND09PWUuYm9keS5jb2RlP24oe30pOm8oZS5ib2R5LmRlc2MpfSl9KX19LHtrZXk6XCJfc3Vic2NyaWJlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IG4uZGVmYXVsdChmdW5jdGlvbihyLG4pe3ZhciBvPXt0eXBlOlwic3Vic2NyaWJlXCIsZnJvbTp0Ll9vd25lcix0bzp0Ll9zdWJVUkwsYm9keTp7fX07ZSYmKGUuaGFzT3duUHJvcGVydHkoXCJwMnBcIikmJihvLmJvZHkucDJwPWUucDJwKSxlLmhhc093blByb3BlcnR5KFwic3RvcmVcIikmJihvLmJvZHkuc3RvcmU9ZS5zdG9yZSksZS5oYXNPd25Qcm9wZXJ0eShcInNjaGVtYVwiKSYmKG8uYm9keS5zY2hlbWE9ZS5zY2hlbWEpLGUuaGFzT3duUHJvcGVydHkoXCJpZGVudGl0eVwiKSYmKG8uYm9keS5pZGVudGl0eT1lLmlkZW50aXR5KSxlLmhhc093blByb3BlcnR5KFwicmVzb3VyY2VcIikmJihvLmJvZHkucmVzb3VyY2U9ZS5yZXNvdXJjZSkpLG8uYm9keS5yZXN1bWU9ZS5yZXN1bWUsZS5oYXNPd25Qcm9wZXJ0eShcIm11dHVhbFwiKSYmKG8uYm9keS5tdXR1YWw9ZS5tdXR1YWwpLHAubG9nKFwiW3N5bmNoZXJfc3Vic2NyaWJlXSAtIHN1YnNjcmliZSBtZXNzYWdlOiBcIixlLG8pLHQuX2J1cy5wb3N0TWVzc2FnZShvLGZ1bmN0aW9uKG8pe3AubG9nKFwiW3N5bmNoZXJdIC0gc3Vic2NyaWJlLXJlc3BvbnNlOiBcIixvKTt2YXIgaT1vLmJvZHkucmVzb3VyY2Uscz10Ll9wcm92aXNpb25hbHNbaV07aWYoZGVsZXRlIHQuX3Byb3Zpc2lvbmFsc1tpXSxzJiZzLl9yZWxlYXNlTGlzdGVuZXJzKCksby5ib2R5LmNvZGU8MjAwKXAubG9nKFwiW3N5bmNoZXJdIC0gbmV3IERhdGFQcm92aXNpb25hbDogXCIsby5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzLGkpLHM9bmV3IGQuZGVmYXVsdCh0Ll9vd25lcixpLHQuX2J1cyxvLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMpLHQuX3Byb3Zpc2lvbmFsc1tpXT1zO2Vsc2UgaWYoMjAwPT09by5ib2R5LmNvZGUpe3AubG9nKFwiW3N5bmNoZXJdIC0gbmV3IERhdGEgT2JqZWN0IE9ic2VydmVyOiBcIixvLHQuX3Byb3Zpc2lvbmFscyk7dmFyIGE9by5ib2R5LnZhbHVlO2Euc3luY2hlcj10LGEucDJwPWUucDJwLGEuc3RvcmU9ZS5zdG9yZSxhLmlkZW50aXR5PWUuaWRlbnRpdHksYS5yZXN1bWU9ITEsYS5tdXR1YWw9ZS5tdXR1YWw7dmFyIHU9dC5fb2JzZXJ2ZXJzW2ldO3U/dS5zeW5jKCk6KHU9bmV3IGwuZGVmYXVsdChhKSx0Ll9vYnNlcnZlcnNbaV09dSkscC5sb2coXCJbc3luY2hlcl0gLSBuZXcgRGF0YSBPYmplY3QgT2JzZXJ2ZXIgYWxyZWFkeSBleGlzdDogXCIsdSkscih1KSxzJiZzLmFwcGx5KHUpfWVsc2UgbihvLmJvZHkuZGVzYyl9KX0pfX0se2tleTpcIl9yZXN1bWVTdWJzY3JpYmVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9dGhpcztyZXR1cm4gbmV3IG4uZGVmYXVsdChmdW5jdGlvbihuLG8pe3ZhciBpPXt0eXBlOlwic3Vic2NyaWJlXCIsZnJvbTpyLl9vd25lcix0bzpyLl9zdWJVUkwsYm9keTp7fX07ZSYmKGUuaGFzT3duUHJvcGVydHkoXCJwMnBcIikmJihpLmJvZHkucDJwPWUucDJwKSxlLmhhc093blByb3BlcnR5KFwic3RvcmVcIikmJihpLmJvZHkuc3RvcmU9ZS5zdG9yZSksZS5oYXNPd25Qcm9wZXJ0eShcInNjaGVtYVwiKSYmKGkuYm9keS5zY2hlbWE9ZS5zY2hlbWEpLGUuaGFzT3duUHJvcGVydHkoXCJpZGVudGl0eVwiKSYmKGkuYm9keS5pZGVudGl0eT1lLmlkZW50aXR5KSxlLmhhc093blByb3BlcnR5KFwicmVzb3VyY2VcIikmJihpLmJvZHkucmVzb3VyY2U9ZS51cmwpKSxpLmJvZHkucmVzdW1lPWUucmVzdW1lO3ZhciBzPWUubXV0dWFsO2UuaGFzT3duUHJvcGVydHkoXCJtdXR1YWxcIikmJihpLmJvZHkubXV0dWFsPXMpLHAubG9nKFwiW3N5bmNoZXJdIC0gc3Vic2NyaWJlIG1lc3NhZ2U6IFwiLGUsaSksci5fYnVzLnBvc3RNZXNzYWdlKGksZnVuY3Rpb24oZSl7cC5sb2coXCJbc3luY2hlcl0gLSBzdWJzY3JpYmUtcmVzdW1lZC1yZXNwb25zZTogXCIsZSk7dmFyIGk9ZS5ib2R5LnJlc291cmNlLHM9ci5fcHJvdmlzaW9uYWxzW2ldO2lmKGRlbGV0ZSByLl9wcm92aXNpb25hbHNbaV0scyYmcy5fcmVsZWFzZUxpc3RlbmVycygpLGUuYm9keS5jb2RlPDIwMClwLmxvZyhcIltzeW5jaGVyXSAtIHJlc3VtZSBuZXcgRGF0YVByb3Zpc2lvbmFsOiBcIixlLGkpLHM9bmV3IGQuZGVmYXVsdChyLl9vd25lcixpLHIuX2J1cyxlLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMpLHIuX3Byb3Zpc2lvbmFsc1tpXT1zO2Vsc2UgaWYoMjAwPT09ZS5ib2R5LmNvZGUpe3ZhciBhPWUuYm9keS52YWx1ZTtmb3IodmFyIGMgaW4gYSl7dmFyIGY9YVtjXTtwLmxvZyhcIltzeW5jaGVyXSAtIFJlc3VtZSBPYmplY3QgT2JzZXJ2ZXI6IFwiLGUsZixyLl9wcm92aXNpb25hbHMpLGYuY2hpbGRyZW5PYmplY3RzJiYoZi5jaGlsZHJlbk9iamVjdHM9KDAsdS5kZWVwQ2xvbmUpKGYuY2hpbGRyZW5PYmplY3RzKSksZi5kYXRhPSgwLHUuZGVlcENsb25lKShmLmRhdGEpfHx7fSxmLnJlc3VtZT0hMCxmLnN5bmNoZXI9cixwLmxvZyhcIltzeW5jaGVyLl9yZXN1bWVTdWJzY3JpYmVdIC0gY3JlYXRlIG5ldyBkYXRhT2JqZWN0OiBcIixmKTt2YXIgaD1uZXcgbC5kZWZhdWx0KGYpO2YuY2hpbGRyZW5PYmplY3RzJiZoLnJlc3VtZUNoaWxkcmVucyhmLmNoaWxkcmVuT2JqZWN0cykscC5sb2coXCJbc3luY2hlci5fcmVzdW1lU3Vic2NyaWJlXSAtIG5ldyBkYXRhT2JqZWN0XCIsaCksci5fb2JzZXJ2ZXJzW2gudXJsXT1oLHIuX3Byb3Zpc2lvbmFsc1toLnVybF0mJnIuX3Byb3Zpc2lvbmFsc1toLnVybF0uYXBwbHkoaCl9bihyLl9vYnNlcnZlcnMpLHQuX29uT2JzZXJ2ZXJzUmVzdW1lJiZ0Ll9vbk9ic2VydmVyc1Jlc3VtZShyLl9vYnNlcnZlcnMpfWVsc2UgNDA0PT09ZS5ib2R5LmNvZGU/bih7fSk6byhlLmJvZHkuZGVzYyl9KX0pfX0se2tleTpcIl9vbkZvcndhcmRcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9yZXBvcnRlcnNbZS5ib2R5LnRvXS5fb25Gb3J3YXJkKGUpfX0se2tleTpcIl9vblJlbW90ZUNyZWF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmZyb20uc2xpY2UoMCwtMTMpLG49KDAsdS5kaXZpZGVVUkwpKHIpLmRvbWFpbixvPXt0eXBlOmUudHlwZSxmcm9tOmUuYm9keS5zb3VyY2UsdXJsOnIsZG9tYWluOm4sc2NoZW1hOmUuYm9keS5zY2hlbWEsdmFsdWU6ZS5ib2R5LnZhbHVlLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxhY2s6ZnVuY3Rpb24ocil7dmFyIG49MjAwO3ImJihuPXIpLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOlwicmVzcG9uc2VcIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6bn19KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKHAuaW5mbyhcIltTeW5jaGVyXSBOT1RJRklDQVRJT04tRVZFTlQ6IFwiLG8pLHQuX29uTm90aWZpY2F0aW9uSGFuZGxlcihvKSl9fSx7a2V5OlwiX29uUmVtb3RlRGVsZXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZSxuPXQuX29ic2VydmVyc1tyXSxvPXtmcm9tOnQub3duZXIsdG86dC5fc3ViVVJMLGlkOmUuaWQsdHlwZTpcInVuc3Vic2NyaWJlXCIsYm9keTp7cmVzb3VyY2U6ZS5ib2R5LnJlc291cmNlfX07aWYodC5fYnVzLnBvc3RNZXNzYWdlKG8pLGRlbGV0ZSB0Ll9vYnNlcnZlcnNbcl0sbil7dmFyIGk9e3R5cGU6ZS50eXBlLHVybDpyLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxhY2s6ZnVuY3Rpb24ocil7dmFyIG89MjAwO3ImJihvPXIpLDIwMD09PW8mJm4uZGVsZXRlKCksdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpvLHNvdXJjZTp0Ll9vd25lcn19KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKHAubG9nKFwiTk9USUZJQ0FUSU9OLUVWRU5UOiBcIixpKSx0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXIoaSkpfWVsc2UgdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDQsc291cmNlOnQuX293bmVyfX0pfX0se2tleTpcIl9vbkV4ZWN1dGVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e2lkOmUuaWQsdHlwZTpcInJlc3BvbnNlXCIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMH19O2lmKChlLmZyb209PT10Ll9ydW50aW1lVXJsK1wiL3JlZ2lzdHJ5L1wifHxlLmZyb209PT10Ll9ydW50aW1lVXJsK1wiL3JlZ2lzdHJ5XCIpJiZlLmJvZHkmJmUuYm9keS5tZXRob2QmJlwiY2xvc2VcIj09PWUuYm9keS5tZXRob2QmJnQuX29uQ2xvc2Upe3ZhciBuPXt0eXBlOlwiY2xvc2VcIixhY2s6ZnVuY3Rpb24oZSl7ZSYmKHIuYm9keS5jb2RlPWUpLHQuX2J1cy5wb3N0TWVzc2FnZShyKX19O3AuaW5mbyhcIltTeW5jaGVyXSBDbG9zZS1FVkVOVDogXCIsbiksdC5fb25DbG9zZShuKX1lbHNlIHQuX2J1cy5wb3N0TWVzc2FnZShyKX19LHtrZXk6XCJvblJlcG9ydGVyc1Jlc3VtZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVwb3J0ZXJzUmVzdW1lPWV9fSx7a2V5Olwib25PYnNlcnZlcnNSZXN1bWVcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbk9ic2VydmVyc1Jlc3VtZT1lfX0se2tleTpcIm93bmVyXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX293bmVyfX0se2tleTpcInJlcG9ydGVyc1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZXBvcnRlcnN9fSx7a2V5Olwib2JzZXJ2ZXJzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX29ic2VydmVyc319XSksZX0oKTt0LmRlZmF1bHQ9aCxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49eShyKDQyKSksbz15KHIoNTgpKSxpPXkocigxOCkpLHM9eShyKDI1KSksYT15KHIoMykpLHU9eShyKDUpKSxjPXkocigzMykpLGw9eShyKDEwMCkpLGQ9eShyKDM0KSksZj1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSxwPXkocigxMjIpKSxoPXIoMTkpO2Z1bmN0aW9uIHkoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciB2PWYuZ2V0TG9nZ2VyKFwiRGF0YU9iamVjdFJlcG9ydGVyXCIpLF89ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXsoMCxhLmRlZmF1bHQpKHRoaXMsdCk7dmFyIHI9KDAsYy5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAscy5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLGUpKSxuPXI7cmV0dXJuIG4uX3N1YnNjcmlwdGlvbnM9e30sbi5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKGUpe3YubG9nKFwiW1N5bmNoZXIuRGF0YU9iamVjdFJlcG9ydGVyXSBcIituLnVybCtcIiBwdWJsaXNoIGNoYW5nZTogXCIsZSksbi5fb25DaGFuZ2UoZSl9KSxuLl9hbGxvY2F0ZUxpc3RlbmVycygpLG4uaW52aXRhdGlvbnM9W10sbi5fY2hpbGRyZW5TaXplVGhyZXNob2xkPTVlNCxyfXJldHVybigwLGQuZGVmYXVsdCkodCxlKSwoMCx1LmRlZmF1bHQpKHQsW3trZXk6XCJfYWxsb2NhdGVMaXN0ZW5lcnNcIix2YWx1ZTpmdW5jdGlvbigpeygwLGwuZGVmYXVsdCkodC5wcm90b3R5cGUuX19wcm90b19ffHwoMCxzLmRlZmF1bHQpKHQucHJvdG90eXBlKSxcIl9hbGxvY2F0ZUxpc3RlbmVyc1wiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9vYmplY3RMaXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsLGZ1bmN0aW9uKHQpe3N3aXRjaCh2LmxvZyhcIltTeW5jaGVyLkRhdGFPYmplY3RSZXBvcnRlcl0gbGlzdGVuZXIgXCIrZS5fdXJsK1wiIFJlY2VpdmVkOiBcIix0KSx0LnR5cGUpe2Nhc2VcInJlc3BvbnNlXCI6ZS5fb25SZXNwb25zZSh0KTticmVhaztjYXNlXCJyZWFkXCI6ZS5fb25SZWFkKHQpO2JyZWFrO2Nhc2VcImV4ZWN1dGVcIjplLl9vbkV4ZWN1dGUodCk7YnJlYWs7Y2FzZVwiY3JlYXRlXCI6ZS5fb25DaGlsZENyZWF0ZSh0KX19KX19LHtrZXk6XCJfcmVsZWFzZUxpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsbC5kZWZhdWx0KSh0LnByb3RvdHlwZS5fX3Byb3RvX198fCgwLHMuZGVmYXVsdCkodC5wcm90b3R5cGUpLFwiX3JlbGVhc2VMaXN0ZW5lcnNcIix0aGlzKS5jYWxsKHRoaXMpO3RoaXMuX29iamVjdExpc3RlbmVyLnJlbW92ZSgpfX0se2tleTpcImludml0ZU9ic2VydmVyc1wiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPWU7bi5sZW5ndGg+MCYmKHYubG9nKFwiW1N5bmNoZXIuRGF0YU9iamVjdFJlcG9ydGVyXSBJbnZpdGVPYnNlcnZlcnMgXCIsbixyLl9tZXRhZGF0YSksbi5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPW5ldyBpLmRlZmF1bHQoZnVuY3Rpb24obixvKXt2YXIgaT17dHlwZTpcImNyZWF0ZVwiLGZyb206ci5fc3luY2hlci5fb3duZXIsdG86ci5fc3luY2hlci5fc3ViVVJMLGJvZHk6e3Jlc3VtZTohMSxyZXNvdXJjZTpyLl91cmwsc2NoZW1hOnIuX3NjaGVtYSx2YWx1ZTpyLl9tZXRhZGF0YSxhdXRob3Jpc2U6W2VdfX07dCYmKGkuYm9keS5wMnA9dCksci5kYXRhLm11dHVhbHx8KGkuYm9keS5tdXR1YWw9ci5kYXRhLm11dHVhbCksci5fYnVzLnBvc3RNZXNzYWdlKGksZnVuY3Rpb24odCl7di5sb2coXCJbU3luY2hlci5EYXRhT2JqZWN0UmVwb3J0ZXJdIEludml0YXRpb24gcmVwbHkgXCIsdCk7dmFyIHI9e2ludml0ZWQ6ZSxjb2RlOnQuYm9keSYmdC5ib2R5LmNvZGU/dC5ib2R5LmNvZGU6NTAwLGRlc2M6dC5ib2R5JiZ0LmJvZHkuZGVzYz90LmJvZHkuZGVzYzpcIlVua25vd25cIn07ci5jb2RlPDMwMD9uKHIpOnIuY29kZT49MzAwJiZvKHIpfSl9KTtyLmludml0YXRpb25zLnB1c2gobil9KSl9fSx7a2V5OlwiZGVsZXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2RlbGV0ZUNoaWxkcmVucygpLnRoZW4oZnVuY3Rpb24odCl7di5sb2codCk7dmFyIHI9e3R5cGU6XCJkZWxldGVcIixmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTplLl91cmx9fTtlLl9idXMucG9zdE1lc3NhZ2UocixmdW5jdGlvbih0KXt2LmxvZyhcIkRhdGFPYmplY3RSZXBvcnRlci1ERUxFVEU6IFwiLHQpLDIwMD09PXQuYm9keS5jb2RlJiYoZS5fcmVsZWFzZUxpc3RlbmVycygpLGRlbGV0ZSBlLl9zeW5jaGVyLl9yZXBvcnRlcnNbZS5fdXJsXSxlLl9zeW5jT2JqPXt9KX0pfSl9fSx7a2V5Olwib25TdWJzY3JpcHRpb25cIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblN1YnNjcmlwdGlvbkhhbmRsZXI9ZX19LHtrZXk6XCJvblJlc3BvbnNlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25SZXNwb25zZUhhbmRsZXI9ZX19LHtrZXk6XCJvblJlYWRcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlYWRIYW5kbGVyPWV9fSx7a2V5Olwib25FeGVjdXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25FeGVjdXRlSGFuZGxlcj1lfX0se2tleTpcIl9vbkZvcndhcmRcIix2YWx1ZTpmdW5jdGlvbihlKXtzd2l0Y2godi5sb2coXCJEYXRhT2JqZWN0UmVwb3J0ZXItUkNWOiBcIixlKSxlLmJvZHkudHlwZSl7Y2FzZVwic3Vic2NyaWJlXCI6dGhpcy5fb25TdWJzY3JpYmUoZSk7YnJlYWs7Y2FzZVwidW5zdWJzY3JpYmVcIjp0aGlzLl9vblVuU3Vic2NyaWJlKGUpfX19LHtrZXk6XCJfb25TdWJzY3JpYmVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LmZyb20sbj0oMCxoLmRpdmlkZVVSTCkociksbz1uLmRvbWFpbixpPSEwO2UuYm9keS5oYXNPd25Qcm9wZXJ0eShcIm11dHVhbFwiKSYmIWUuYm9keS5tdXR1YWwmJihpPSExKSx2LmxvZyhcIltEYXRhT2JqZWN0UmVwb3J0ZXIuX29uU3Vic2NyaWJlXVwiLGUsbyxuKTt2YXIgcz17dHlwZTplLmJvZHkudHlwZSx1cmw6cixkb21haW46byxpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksbnV0dWFsOmksYWNjZXB0OmZ1bmN0aW9uKCl7dmFyIG49e3VybDpyLHN0YXR1czpcImxpdmVcIn07dC5fc3Vic2NyaXB0aW9uc1tyXT1uLHQubWV0YWRhdGEuc3Vic2NyaXB0aW9ucyYmdC5tZXRhZGF0YS5zdWJzY3JpcHRpb25zLnB1c2gobi51cmwpO3ZhciBvPSgwLGguZGVlcENsb25lKSh0Ll9tZXRhZGF0YSk7by5kYXRhPSgwLGguZGVlcENsb25lKSh0LmRhdGEpLG8udmVyc2lvbj10Ll92ZXJzaW9uO3ZhciBpPXtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc2NoZW1hOnQuX3NjaGVtYSx2YWx1ZTpvfX07cmV0dXJuIGUuYm9keS5oYXNPd25Qcm9wZXJ0eShcIm11dHVhbFwiKSYmIWUuYm9keS5tdXR1YWwmJihpLmJvZHkubXV0dWFsPWUuYm9keS5tdXR1YWwsdC5kYXRhLm11dHVhbD0hMSksdC5fYnVzLnBvc3RNZXNzYWdlKGkpLG59LHJlamVjdDpmdW5jdGlvbihyKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZTpcInJlc3BvbnNlXCIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMyxkZXNjOnJ9fSl9fTt0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXImJih2LmxvZyhcIlNVQlNDUklQVElPTi1FVkVOVDogXCIscyksdC5fb25TdWJzY3JpcHRpb25IYW5kbGVyKHMpKX19LHtrZXk6XCJfb25VblN1YnNjcmliZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWUuYm9keS5mcm9tLHI9KDAsaC5kaXZpZGVVUkwpKHQpLG49ci5kb21haW47di5sb2coXCJbRGF0YU9iamVjdFJlcG9ydGVyLl9vblVuU3Vic2NyaWJlXVwiLGUsbixyKSxkZWxldGUgdGhpcy5fc3Vic2NyaXB0aW9uc1t0XSxkZWxldGUgdGhpcy5pbnZpdGF0aW9uc1t0XTt2YXIgbz17dHlwZTplLmJvZHkudHlwZSx1cmw6dCxkb21haW46bixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHl9O3RoaXMuX29uU3Vic2NyaXB0aW9uSGFuZGxlciYmKHYubG9nKFwiVU4tU1VCU0NSSVBUSU9OLUVWRU5UOiBcIixvKSx0aGlzLl9vblN1YnNjcmlwdGlvbkhhbmRsZXIobykpfX0se2tleTpcIl9vblJlc3BvbnNlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9e3R5cGU6ZS50eXBlLHVybDplLmZyb20sY29kZTplLmJvZHkuY29kZX07dGhpcy5fb25SZXNwb25zZUhhbmRsZXImJih2LmxvZyhcIlJFU1BPTlNFLUVWRU5UOiBcIix0KSx0aGlzLl9vblJlc3BvbnNlSGFuZGxlcih0KSl9fSx7a2V5OlwiX29uUmVhZFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj0oMCxvLmRlZmF1bHQpKHQuY2hpbGRyZW5zSlNPTikubGVuZ3RoPnQuX2NoaWxkcmVuU2l6ZVRocmVzaG9sZCxpPXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLGFjY2VwdDpmdW5jdGlvbigpe3I/dC5fc3luY1JlcGx5Rm9yTGFyZ2VEYXRhKGUpOnQuX3N5bmNSZXBseShlKX0scmVqZWN0OmZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOlwicmVzcG9uc2VcIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDAxLGRlc2M6cn19KX19LHM9W107dC5tZXRhZGF0YS5zdWJzY3JpcHRpb25zP3M9dC5tZXRhZGF0YS5zdWJzY3JpcHRpb25zOnQuX3N1YnNjcmlwdGlvbnMmJihzPSgwLG4uZGVmYXVsdCkodC5fc3Vic2NyaXB0aW9ucykubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0Ll9zdWJzY3JpcHRpb25zW2VdLnVybH0pKSwtMSE9cy5pbmRleE9mKGUuZnJvbSk/cj90Ll9zeW5jUmVwbHlGb3JMYXJnZURhdGEoZSk6dC5fc3luY1JlcGx5KGUpOnQuX29uUmVhZEhhbmRsZXImJih2LmxvZyhcIlJFQUQtRVZFTlQ6IFwiLGkpLHQuX29uUmVhZEhhbmRsZXIoaSkpfX0se2tleTpcIl9zeW5jUmVwbHlcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD0oMCxoLmRlZXBDbG9uZSkodGhpcy5tZXRhZGF0YSk7dC5kYXRhPSgwLGguZGVlcENsb25lKSh0aGlzLmRhdGEpLHQuY2hpbGRyZW5PYmplY3RzPSgwLGguZGVlcENsb25lKSh0aGlzLmNoaWxkcmVuc0pTT04pLHQudmVyc2lvbj10aGlzLl92ZXJzaW9uO3ZhciByPXtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsdmFsdWU6dH19O3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyKX19LHtrZXk6XCJfc3luY1JlcGx5Rm9yTGFyZ2VEYXRhXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPSgwLGguZGVlcENsb25lKSh0Lm1ldGFkYXRhKTtyLmRhdGE9KDAsaC5kZWVwQ2xvbmUpKHQuZGF0YSksci52ZXJzaW9uPXQuX3ZlcnNpb24sZGVsZXRlIHIuY2hpbGRyZW5PYmplY3RzO3ZhciBuPXZvaWQgMCxpPVtdLHM9e307Zm9yKG4gaW4gdC5fY2hpbGRyZW5PYmplY3RzKXt2YXIgYT12b2lkIDA7Zm9yKGEgaW4gc1tuXT17fSx0Ll9jaGlsZHJlbk9iamVjdHNbbl0pKDAsby5kZWZhdWx0KShzKS5sZW5ndGg+dC5fY2hpbGRyZW5TaXplVGhyZXNob2xkJiYoaS5wdXNoKHMpLChzPXt9KVtuXT17fSksc1tuXVthXT17fSxzW25dW2FdLnZhbHVlPXQuX2NoaWxkcmVuT2JqZWN0c1tuXVthXS5tZXRhZGF0YSxzW25dW2FdLmlkZW50aXR5PXQuX2NoaWxkcmVuT2JqZWN0c1tuXVthXS5pZGVudGl0eX1pLnB1c2gocyksci5yZXNwb25zZXM9aS5sZW5ndGgrMTt2YXIgdT17aWQ6ZS5pZCx0eXBlOlwicmVzcG9uc2VcIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MTAwLHZhbHVlOnJ9fTt0Ll9idXMucG9zdE1lc3NhZ2UodSksaS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPSgwLGguZGVlcENsb25lKSh1KTtuLmJvZHkudmFsdWU9ZSxuLmJvZHkudmFsdWUucmVzcG9uc2VzPXIucmVzcG9uc2VzLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll9idXMucG9zdE1lc3NhZ2Uobil9LDUwKX0pfX0se2tleTpcIl9vbkV4ZWN1dGVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2lmKCFlLmJvZHkubWV0aG9kKXRocm93IGU7dmFyIHI9e2lkOmUuaWQsdHlwZTpcInJlc3BvbnNlXCIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMH19LG49e3R5cGU6ZS50eXBlLHVybDplLmZyb20sbWV0aG9kOmUuYm9keS5tZXRob2QscGFyYW1zOmUuYm9keS5wYXJhbXMsYWNjZXB0OmZ1bmN0aW9uKCl7dC5fYnVzLnBvc3RNZXNzYWdlKHIpfSxyZWplY3Q6ZnVuY3Rpb24ocil7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDEsZGVzYzpyfX0pfX07dC5fb25FeGVjdXRlSGFuZGxlciYmKHYubG9nKFwiW0RhdGFPYmplY3RSZXBvcnRlcl0gRVhFQ1VURS1FVkVOVDogXCIsbiksdC5fb25FeGVjdXRlSGFuZGxlcihuKSl9fSx7a2V5Olwic3Vic2NyaXB0aW9uc1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdWJzY3JpcHRpb25zfX0se2tleTpcImNoaWxkcmVuc0pTT05cIixnZXQ6ZnVuY3Rpb24oKXt2YXIgZT17fSx0PXZvaWQgMDtmb3IodCBpbiB0aGlzLl9jaGlsZHJlbk9iamVjdHMpe3ZhciByPXZvaWQgMDtmb3IociBpbiBlW3RdPXt9LHRoaXMuX2NoaWxkcmVuT2JqZWN0c1t0XSllW3RdW3JdPXt9LGVbdF1bcl0udmFsdWU9dGhpcy5fY2hpbGRyZW5PYmplY3RzW3RdW3JdLm1ldGFkYXRhLGVbdF1bcl0uaWRlbnRpdHk9dGhpcy5fY2hpbGRyZW5PYmplY3RzW3RdW3JdLmlkZW50aXR5fXJldHVybiBlfX1dKSx0fShwLmRlZmF1bHQpO3QuZGVmYXVsdD1fLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbj15KHIoNDIpKSxvPXkocig3OCkpLGk9eShyKDE4KSkscz15KHIoMjUpKSxhPXkocigzKSksdT15KHIoNSkpLGM9eShyKDMzKSksbD15KHIoMTAwKSksZD15KHIoMzQpKSxmPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLHA9cigxOSksaD15KHIoMTIyKSk7ZnVuY3Rpb24geShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIHY9Zi5nZXRMb2dnZXIoXCJEYXRhT2JqZWN0T2JzZXJ2ZXJcIiksXz1cImFueVwiLGI9XCJzdGFydFwiLG09XCJleGFjdFwiLGc9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXsoMCxhLmRlZmF1bHQpKHRoaXMsdCk7dmFyIHI9KDAsYy5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAscy5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLGUpKSxuPXI7cmV0dXJuIG4uX3ZlcnNpb249ZS52ZXJzaW9uLG4uX2ZpbHRlcnM9e30sbi5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKGUpe24uX29uRmlsdGVyKGUpfSksbi5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxyfXJldHVybigwLGQuZGVmYXVsdCkodCxlKSwoMCx1LmRlZmF1bHQpKHQsW3trZXk6XCJzeW5jXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiB2LmluZm8oXCJbRGF0YU9iamVjdE9ic2VydmVyX3N5bmNdIHN5bmNocm9uaXNpbmcgXCIpLG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtlLl9zeW5jaGVyLnJlYWQoZS5fbWV0YWRhdGEudXJsKS50aGVuKGZ1bmN0aW9uKHIpe3YuaW5mbyhcIltEYXRhT2JqZWN0T2JzZXJ2ZXJfc3luY10gdmFsdWUgdG8gc3luYzogXCIsciksKDAsby5kZWZhdWx0KShlLmRhdGEsKDAscC5kZWVwQ2xvbmUpKHIuZGF0YSkpLGUuX3ZlcnNpb249ci52ZXJzaW9uLGUuX21ldGFkYXRhLmxhc3RNb2RpZmllZD1yLmxhc3RNb2RpZmllZCxyLmNoaWxkcmVuT2JqZWN0cz8oZS5yZXN1bWVDaGlsZHJlbnMoci5jaGlsZHJlbk9iamVjdHMpLGUuX3N0b3JlQ2hpbGRyZW5zKCksdCghMCkpOnQoITApfSkuY2F0Y2goZnVuY3Rpb24oZSl7di5pbmZvKFwiW0RhdGFPYmplY3RPYnNlcnZlcl9zeW5jXSBzeW5jIGZhaWxlZDogXCIsZSksdCghMSl9KX0pfX0se2tleTpcIl9zdG9yZUNoaWxkcmVuc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt9OygwLG4uZGVmYXVsdCkoZS5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBvPWUuX2NoaWxkcmVuT2JqZWN0c1tyXTt0W3JdPXt9LCgwLG4uZGVmYXVsdCkobykuZm9yRWFjaChmdW5jdGlvbihlKXt0W3JdW2VdPXt9LHRbcl1bZV0udmFsdWU9b1tlXS5tZXRhZGF0YSx0W3JdW2VdLmlkZW50aXR5PW9bZV0uaWRlbnRpdHl9KX0pO3ZhciByPXtmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCx0eXBlOlwiY3JlYXRlXCIsYm9keTp7cmVzb3VyY2U6ZS5fdXJsLGF0dHJpYnV0ZTpcImNoaWxkcmVuT2JqZWN0c1wiLHZhbHVlOnR9fTtlLl9idXMucG9zdE1lc3NhZ2Uocil9fSx7a2V5OlwiX2FsbG9jYXRlTGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxsLmRlZmF1bHQpKHQucHJvdG90eXBlLl9fcHJvdG9fX3x8KDAscy5kZWZhdWx0KSh0LnByb3RvdHlwZSksXCJfYWxsb2NhdGVMaXN0ZW5lcnNcIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCtcIi9jaGFuZ2VzXCIsZnVuY3Rpb24odCl7XCJ1cGRhdGVcIj09PXQudHlwZSYmKHYubG9nKFwiRGF0YU9iamVjdE9ic2VydmVyLVwiK2UuX3VybCtcIi1SQ1Y6IFwiLHQpLGUuX2NoYW5nZU9iamVjdChlLl9zeW5jT2JqLHQpKX0pfX0se2tleTpcIl9yZWxlYXNlTGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxsLmRlZmF1bHQpKHQucHJvdG90eXBlLl9fcHJvdG9fX3x8KDAscy5kZWZhdWx0KSh0LnByb3RvdHlwZSksXCJfcmVsZWFzZUxpc3RlbmVyc1wiLHRoaXMpLmNhbGwodGhpcyk7dGhpcy5fY2hhbmdlTGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OlwiZGVsZXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2RlbGV0ZUNoaWxkcmVucygpLnRoZW4oZnVuY3Rpb24oKXtlLnVuc3Vic2NyaWJlKCksZS5fcmVsZWFzZUxpc3RlbmVycygpLGRlbGV0ZSBlLl9zeW5jaGVyLl9vYnNlcnZlcnNbZS5fdXJsXX0pfX0se2tleTpcInVuc3Vic2NyaWJlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e3R5cGU6XCJ1bnN1YnNjcmliZVwiLGZyb206ZS5fb3duZXIsdG86ZS5fc3luY2hlci5fc3ViVVJMLGJvZHk6e3Jlc291cmNlOmUuX3VybH19O2UuX2J1cy5wb3N0TWVzc2FnZSh0LGZ1bmN0aW9uKHQpe3YubG9nKFwiRGF0YU9iamVjdE9ic2VydmVyLVVOU1VCU0NSSUJFOiBcIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fb2JzZXJ2ZXJzW2UuX3VybF0pfSl9fSx7a2V5Olwib25DaGFuZ2VcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPWUsbj17dHlwZTptLGNhbGxiYWNrOnR9LG89ZS5pbmRleE9mKFwiKlwiKTtvPT09ZS5sZW5ndGgtMSYmKDA9PT1vP24udHlwZT1fOihuLnR5cGU9YixyPWUuc3Vic3RyKDAsZS5sZW5ndGgtMSkpKSx0aGlzLl9maWx0ZXJzW3JdPW59fSx7a2V5OlwiX29uRmlsdGVyXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczsoMCxuLmRlZmF1bHQpKHQuX2ZpbHRlcnMpLmZvckVhY2goZnVuY3Rpb24ocil7dmFyIG49dC5fZmlsdGVyc1tyXTtuLnR5cGU9PT1fP24uY2FsbGJhY2soZSk6bi50eXBlPT09Yj8wPT09ZS5maWVsZC5pbmRleE9mKHIpJiZuLmNhbGxiYWNrKGUpOm4udHlwZT09PW0mJmUuZmllbGQ9PT1yJiZuLmNhbGxiYWNrKGUpfSl9fSx7a2V5Olwib25EaXNjb25uZWN0ZWRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7dC5fc3Vic2NyaWJlUmVnaXN0cmF0aW9uKCkudGhlbihmdW5jdGlvbigpe3QuX29uRGlzY29ubmVjdGVkPWUscigpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSl9KX0pfX0se2tleTpcIl9zdWJzY3JpYmVSZWdpc3RyYXRpb25cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17dHlwZTpcInN1YnNjcmliZVwiLGZyb206dGhpcy5fb3duZXIsdG86dGhpcy5fc3luY2hlci5fcnVudGltZVVybCtcIi9zdWJzY3JpcHRpb25zXCIsYm9keTp7cmVzb3VyY2VzOlt0aGlzLl91cmwrXCIvcmVnaXN0cmF0aW9uXCJdfX07cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXt2LmxvZyhcIltEYXRhT2JqZWN0T2JzZXJ2ZXIuX3N1YnNjcmliZVJlZ2lzdHJhdGlvbl0gXCIrZS5fdXJsK1wiIHJjdmVkIHJlcGx5IFwiLHQpLDIwMD09PXQuYm9keS5jb2RlPyhlLl9nZW5lcmF0ZUxpc3RlbmVyKGUuX3VybCtcIi9yZWdpc3RyYXRpb25cIikscigpKToodi5lcnJvcihcIkVycm9yIHN1YnNjcmliaW5nIHJlZ2lzdHJhdGlvbiBzdGF0dXMgZm9yIFwiLGUuX3VybCksbihcIkVycm9yIHN1YnNjcmliaW5nIHJlZ2lzdHJhdGlvbiBzdGF0dXMgZm9yIFwiK2UuX3VybCkpfSl9KX19LHtrZXk6XCJfZ2VuZXJhdGVMaXN0ZW5lclwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fYnVzLmFkZExpc3RlbmVyKGUsZnVuY3Rpb24oZSl7di5sb2coXCJbRGF0YU9iamVjdE9ic2VydmVyLnJlZ2lzdHJhdGlvbk5vdGlmaWNhdGlvbl0gXCIrdC5fdXJsK1wiOiBcIixlKSxlLmJvZHkudmFsdWUmJlwiZGlzY29ubmVjdGVkXCI9PT1lLmJvZHkudmFsdWUmJnQuX29uRGlzY29ubmVjdGVkJiYodi5sb2coXCJbRGF0YU9iamVjdE9ic2VydmVyXSBcIit0Ll91cmwrXCI6IHdhcyBkaXNjb25uZWN0ZWQgXCIsZSksdC5fb25EaXNjb25uZWN0ZWQoKSl9KX19LHtrZXk6XCJleGVjdXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihvLGkpe3ZhciBzPXt0eXBlOlwiZXhlY3V0ZVwiLGZyb206ci5fb3duZXIsdG86bi5fdXJsLGJvZHk6e21ldGhvZDplLHBhcmFtczp0fX07bi5fYnVzLnBvc3RNZXNzYWdlKHMsZnVuY3Rpb24odCl7di5sb2coXCJbRGF0YU9iamVjdE9ic2VydmVyLmV4ZWN1dGVdIFwiK24uX3VybCtcIiByY3ZlZCByZXBseSBcIix0KSwyMDA9PT10LmJvZHkuY29kZT9vKCk6KHYud2FybihcIltEYXRhT2JqZWN0T2JzZXJ2ZXIuZXhlY3V0ZV0gZXhlY3V0aW9uIG9mIG1ldGhvZCBcIitlK1wiIHdhcyByZWplY3QgYnkgcmVwb3J0ZXJcIiksaShcIltEYXRhT2JqZWN0T2JzZXJ2ZXIuZXhlY3V0ZV0gZXhlY3V0aW9uIG9mIG1ldGhvZCBcIitlK1wiIHdhcyByZWplY3QgYnkgcmVwb3J0ZXJcIikpfSl9KX19XSksdH0oaC5kZWZhdWx0KTt0LmRlZmF1bHQ9ZyxlLmV4cG9ydHM9dC5kZWZhdWx0fSwsZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBuPWkocigzKSksbz1pKHIoNSkpO2Z1bmN0aW9uIGkoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBzPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLmdldExvZ2dlcihcIkRhdGFQcm92aXNpb25hbFwiKSxhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbyxpKXsoMCxuLmRlZmF1bHQpKHRoaXMsZSk7dGhpcy5fb3duZXI9dCx0aGlzLl91cmw9cix0aGlzLl9idXM9byx0aGlzLl9jaGlsZHJlbj1pLHRoaXMuX2NoYW5nZXM9W10sdGhpcy5fYWxsb2NhdGVMaXN0ZW5lcnMoKX1yZXR1cm4oMCxvLmRlZmF1bHQpKGUsW3trZXk6XCJfYWxsb2NhdGVMaXN0ZW5lcnNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCxmdW5jdGlvbih0KXtzLmxvZyhcIkRhdGFQcm92aXNpb25hbC1cIitlLl91cmwrXCItUkNWOiBcIix0KSxlLl9jaGFuZ2VzLnB1c2godCl9KX19LHtrZXk6XCJfcmVsZWFzZUxpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OlwiYXBwbHlcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9jaGFuZ2VzLmZvckVhY2goZnVuY3Rpb24odCl7ZS5fY2hhbmdlT2JqZWN0KGUuX3N5bmNPYmosdCl9KX19LHtrZXk6XCJjaGlsZHJlblwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZHJlbn19XSksZX0oKTt0LmRlZmF1bHQ9YSxlLmV4cG9ydHM9dC5kZWZhdWx0fSwsLCwsLCwsZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBuPWkocigzKSksbz1pKHIoNSkpO2Z1bmN0aW9uIGkoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeygwLG4uZGVmYXVsdCkodGhpcyxlKX1yZXR1cm4oMCxvLmRlZmF1bHQpKGUsW3trZXk6XCJhZGRFdmVudExpc3RlbmVyXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt0aGlzW2VdPXR9fSx7a2V5OlwidHJpZ2dlclwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dGhpc1tlXSYmdGhpc1tlXSh0KX19XSksZX0oKTt0LmRlZmF1bHQ9cyxlLmV4cG9ydHM9dC5kZWZhdWx0fSwsLCwsLCwsLCwsLCwsLCwsLCwsLCxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdC5XYWxsZXRSZXBvcnRlcj12b2lkIDA7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShyKDE2NikpO3QuV2FsbGV0UmVwb3J0ZXI9bi5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49cChyKDQyKSksbz1wKHIoMTgpKSxpPXAocigyNSkpLHM9cChyKDMpKSxhPXAocig1KSksdT1wKHIoMzMpKSxjPXAocigzNCkpLGw9cChyKDEzMSkpLGQ9cChyKDE0MykpLGY9cigxOSk7ZnVuY3Rpb24gcChlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIGg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIsbixvKXtpZigoMCxzLmRlZmF1bHQpKHRoaXMsdCksIWUpdGhyb3cgbmV3IEVycm9yKFwiVGhlIGh5cGVydHlVUkwgaXMgYSBuZWVkZWQgcGFyYW1ldGVyXCIpO2lmKCFyKXRocm93IG5ldyBFcnJvcihcIlRoZSBNaW5pQnVzIGlzIGEgbmVlZGVkIHBhcmFtZXRlclwiKTtpZighbil0aHJvdyBuZXcgRXJyb3IoXCJUaGUgY29uZmlndXJhdGlvbiBpcyBhIG5lZWRlZCBwYXJhbWV0ZXJcIik7dmFyIGE9KDAsdS5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAsaS5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLGUscixuKSk7cmV0dXJuIGNvbnNvbGUuaW5mbyhcIltXYWxsZXRSZXBvcnRlcl0gc3RhcnRlZCB3aXRoIHVybDogXCIsZSksYS5zeW5jaGVyPW98fG5ldyBsLmRlZmF1bHQoZSxyLG4pLGEuZG9tYWluPSgwLGYuZGl2aWRlVVJMKShuLnJ1bnRpbWVVUkwpLmRvbWFpbixhLndhbGxldD17fSxhLndhbGxldERlc2NVUkw9XCJoeXBlcnR5LWNhdGFsb2d1ZTovL2NhdGFsb2d1ZS5cIithLmRvbWFpbitcIi8ud2VsbC1rbm93bi9kYXRhc2NoZW1hL1dhbGxldERhdGFcIixhLnN5bmNoZXIub25Ob3RpZmljYXRpb24oZnVuY3Rpb24oZSl7YS5vbk5vdGlmaWNhdGlvbihlKX0pLGEuc3luY2hlci5vbkNsb3NlKGZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKFwiW1dhbGxldFJlcG9ydGVyLm9uQ2xvc2VdXCIpLGEuc2V0U3RhdHVzKGUuaWQsXCJ1bmF2YWlsYWJsZVwiKSxlLmFjaygpfSksYX1yZXR1cm4oMCxjLmRlZmF1bHQpKHQsZSksKDAsYS5kZWZhdWx0KSh0LFt7a2V5Olwic3RhcnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHIpe2Uuc3luY2hlci5yZXN1bWVSZXBvcnRlcnMoe3N0b3JlOiEwfSkudGhlbihmdW5jdGlvbihlKXt2YXIgbz0oMCxuLmRlZmF1bHQpKGUpO28ubGVuZ3RoPjA/KGNvbnNvbGUubG9nKFwiW1dhbGxldFJlcG9ydGVyLnN0YXJ0XSByZXN1bWluZyBcIixlW29bMF1dKSx0LndhbGxldD1lWzBdLHQuX29uU3Vic2NyaXB0aW9uKHQud2FsbGV0KSxyKHQud2FsbGV0KSk6KGNvbnNvbGUubG9nKFwiW1dhbGxldFJlcG9ydGVyLnN0YXJ0XSBub3RoaW5nIHRvIHJlc3VtZSBcIixlKSxyKCExKSl9KS5jYXRjaChmdW5jdGlvbihlKXtjb25zb2xlLmVycm9yKFwiW1dhbGxldFJlcG9ydGVyXSBSZXN1bWUgZmFpbGVkIHwgXCIsZSl9KX0pLmNhdGNoKGZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoXCJbV2FsbGV0UmVwb3J0ZXJdIFN0YXJ0IGZhaWxlZCB8IFwiLGUpfSl9fSx7a2V5OlwicHJvY2Vzc05vdGlmaWNhdGlvblwiLHZhbHVlOmZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKFwiW1dhbGxldFJlcG9ydGVyLnByb2Nlc3NOb3RpZmljYXRpb246IFwiLGUpLGUuYWNrKCl9fSx7a2V5OlwiY3JlYXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06XCJteVdhbGxldFwiLG49YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGwsaT1hcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XT9hcmd1bWVudHNbNF06bnVsbCxzPSEoYXJndW1lbnRzLmxlbmd0aD41JiZ2b2lkIDAhPT1hcmd1bWVudHNbNV0pfHxhcmd1bWVudHNbNV0sYT10aGlzLHU9dm9pZCAwO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKG8sYyl7KHU9bnx8aT9uJiYhaT97cmVzb3VyY2VzOnQscmVwb3J0ZXI6bn06IW4mJmk/e3Jlc291cmNlczp0LHJldXNlVVJMOml9OntyZXNvdXJjZXM6dCxyZXVzZVVSTDppLHJlcG9ydGVyOm59OntyZXNvdXJjZXM6dH0pLmRvbWFpbl9yZWdpc3RyYXRpb249cyxjb25zb2xlLmluZm8oXCJbV2FsbGV0UmVwb3J0ZXIuY3JlYXRlXSBsZXRzIGNyZWF0ZSBhIG5ldyBXYWxsZXQgT2JqZWN0IFwiLHUpLGEuc3luY2hlci5jcmVhdGUoYS53YWxsZXREZXNjVVJMLFtdLGUsITAsITEscixudWxsLHUpLnRoZW4oZnVuY3Rpb24oZSl7YS53YWxsZXQ9ZSxhLl9vblN1YnNjcmlwdGlvbihlKSxvKGUpfSkuY2F0Y2goZnVuY3Rpb24oZSl7YyhlKX0pfSl9fSx7a2V5OlwiX29uU3Vic2NyaXB0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oZSl7ZS5vblN1YnNjcmlwdGlvbihmdW5jdGlvbihlKXtjb25zb2xlLmluZm8oXCJbV2FsbGV0UmVwb3J0ZXIuX29uU3Vic2NyaXB0aW9uXSBhY2NlcHRpbmc6IFwiLGUpLGUuYWNjZXB0KCl9KX19LHtrZXk6XCJhZGROZXdUcmFuc2FjdGlvblwiLHZhbHVlOmZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKFwiVEhJUyBbV2FsbGV0UmVwb3J0ZXIuc2V0Q29udGV4dF0gYmVmb3JlIGNoYW5nZSA6XCIsdGhpcy53YWxsZXQpLGNvbnNvbGUubG9nKFwiW1dhbGxldFJlcG9ydGVyLnNldENvbnRleHRdIGJlZm9yZSBjaGFuZ2UgOlwiLHRoaXMud2FsbGV0LmRhdGEpLHRoaXMud2FsbGV0LmRhdGEudHJhbnNhY3Rpb25zLnB1c2goZSksY29uc29sZS5kZWJ1ZyhcIltXYWxsZXRSZXBvcnRlci5hZGROZXdUcmFuc2FjdGlvbl0gYWZ0ZXIgY2hhbmdlIDpcIix0aGlzLndhbGxldC5kYXRhKSx0aGlzLnRyaWdnZXIoXCJ3YWxsZXQtdXBkYXRlXCIsZSl9fV0pLHR9KGQuZGVmYXVsdCk7dC5kZWZhdWx0PWgsZS5leHBvcnRzPXQuZGVmYXVsdH1dKX0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvdmVydHhfYXBwX3N0dWIvbm9kZV9tb2R1bGVzL3NlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvV2FsbGV0TWFuYWdlci5qc1xuLy8gbW9kdWxlIGlkID0gNjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///67\n");

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

eval("// version: 0.9.0\n// date: Tue Jul 17 2018 11:01:36 GMT+0100 (Western European Summer Time)\n// licence: \n/**\n* Copyright 2016 PT Inovação e Sistemas SA\n* Copyright 2016 INESC-ID\n* Copyright 2016 QUOBIS NETWORKS SL\n* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V\n* Copyright 2016 ORANGE SA\n* Copyright 2016 Deutsche Telekom AG\n* Copyright 2016 Apizee\n* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n**/\n\n\n!function(e,t){ true?module.exports=t():\"function\"==typeof define&&define.amd?define(\"Syncher\",[],t):\"object\"==typeof exports?exports.Syncher=t():(e[\"\"]=e[\"\"]||{},e[\"\"].Syncher=t())}(\"undefined\"!=typeof self?self:this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=196)}([function(e,t){var r=e.exports={version:\"2.5.7\"};\"number\"==typeof __e&&(__e=r)},function(e,t){var r=e.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=r)},function(e,t,r){var n=r(36)(\"wks\"),o=r(23),i=r(1).Symbol,s=\"function\"==typeof i;(e.exports=function(e){return n[e]||(n[e]=s&&i[e]||(s?i:o)(\"Symbol.\"+e))}).store=n},function(e,t,r){\"use strict\";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}},function(e,t,r){e.exports=!r(13)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(e,t,r){\"use strict\";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(59));t.default=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),(0,n.default)(e,o.key,o)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}()},function(e,t,r){var n=r(1),o=r(0),i=r(14),s=r(11),a=r(10),u=function(e,t,r){var c,l,d,f=e&u.F,p=e&u.G,h=e&u.S,y=e&u.P,v=e&u.B,_=e&u.W,b=p?o:o[t]||(o[t]={}),m=b.prototype,g=p?n:h?n[t]:(n[t]||{}).prototype;for(c in p&&(r=t),r)(l=!f&&g&&void 0!==g[c])&&a(b,c)||(d=l?g[c]:r[c],b[c]=p&&\"function\"!=typeof g[c]?r[c]:v&&l?i(d,n):_&&g[c]==d?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):y&&\"function\"==typeof d?i(Function.call,d):d,y&&((b.virtual||(b.virtual={}))[c]=d,e&u.R&&m&&!m[c]&&s(m,c,d)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){e.exports=function(e){return\"object\"==typeof e?null!==e:\"function\"==typeof e}},function(e,t,r){var n=r(9),o=r(39),i=r(27),s=Object.defineProperty;t.f=r(4)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return s(e,t,r)}catch(e){}if(\"get\"in r||\"set\"in r)throw TypeError(\"Accessors not supported!\");return\"value\"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(7);e.exports=function(e){if(!n(e))throw TypeError(e+\" is not an object!\");return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),o=r(16);e.exports=r(4)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(55),o=r(30);e.exports=function(e){return n(o(e))}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t,r){e.exports={default:r(102),__esModule:!0}},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=i(r(58)),o=i(r(42));function i(e){return e&&e.__esModule?e:{default:e}}function s(e){function t(e){return e.replace(/([a-zA-Z-]*)(:\\/\\/(?:\\.)?|:)([-a-zA-Z0-9@:%._\\+~#=]{2,256})([-a-zA-Z0-9@:%._\\+~#=\\/]*)/gi,\"$1,$3,$4\").split(\",\")}var r=t(e);if(r[0]===e&&!r[0].includes(\"@\")){var n={type:\"\",domain:e,identity:\"\"};return console.warn(\"[DivideURL] DivideURL don't support url without scheme. Please review your url address\",e),n}r[0]===e&&r[0].includes(\"@\")&&(r=t((r[0]===e?\"smtp\":r[0])+\"://\"+r[0]));return r[1].includes(\"@\")&&(r[2]=r[0]+\"://\"+r[1],r[1]=r[1].substr(r[1].indexOf(\"@\")+1)),{type:r[0],domain:r[1],identity:r[2]}}function a(e){var t=e.indexOf(\"@\");return\"user://\"+e.substring(t+1,e.length)+\"/\"+e.substring(0,t)}t.divideURL=s,t.divideEmail=function(e){var t=e.indexOf(\"@\");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}},t.emptyObject=function(e){return!((0,o.default)(e).length>0)},t.deepClone=function(e){if(e)return JSON.parse((0,n.default)(e))},t.getUserURLFromEmail=a,t.getUserEmailFromURL=function(e){var t=s(e);return t.identity.replace(\"/\",\"\")+\"@\"+t.domain},t.convertToUserURL=function(e){if(\"user://\"===e.substring(0,7)){var t=s(e);if(t.domain&&t.identity)return e;throw\"userURL with wrong format\"}return a(e)},t.checkAttribute=function(e){var t=/((([a-zA-Z]+):\\/\\/([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})\\/[a-zA-Z0-9\\.]+@[a-zA-Z0-9]+(\\-)?[a-zA-Z0-9]+(\\.)?[a-zA-Z0-9]{2,10}?\\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(\".\");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&r.push(e)});var i=void 0;r.forEach(function(t){i=e.replace(t,\"*+*\"),n=i.split(\".\").map(function(e){return\"*+*\"===e?t:e})})}return console.log(\"[ServiceFramework.Utils.checkAttribute]\",n),n},t.parseAttributes=function(e){if(e.includes(\"://\")){var t=e.split(/([0-9a-zA-Z][-\\w]*):\\/\\//g)[0],r=t.split(\".\"),n=e.replace(t,\"\");if(e.includes(\"identity\")){var o=n.split(\"identity.\");console.log(\"array2 \"+o),n=o[0].slice(\".\",-1),o=o[1].split(\".\"),r.push(n,\"identity\"),r=r.concat(o)}else r.push(n);return r.filter(Boolean)}return e.split(\".\")}},function(e,t,r){var n=r(45),o=r(37);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){var n,o;!function(i,s){\"use strict\";void 0===(o=\"function\"==typeof(n=s)?n.call(t,r,t,e):n)||(e.exports=o)}(0,function(){\"use strict\";var e=function(){},t=\"undefined\",r=[\"trace\",\"debug\",\"info\",\"warn\",\"error\"];function n(e,t){var r=e[t];if(\"function\"==typeof r.bind)return r.bind(e);try{return Function.prototype.bind.call(r,e)}catch(t){return function(){return Function.prototype.apply.apply(r,[e,arguments])}}}function o(t,n){for(var o=0;o<r.length;o++){var i=r[o];this[i]=o<t?e:this.methodFactory(i,t,n)}this.log=this.debug}function i(r,i,s){return function(r){return\"debug\"===r&&(r=\"log\"),typeof console!==t&&(void 0!==console[r]?n(console,r):void 0!==console.log?n(console,\"log\"):e)}(r)||function(e,r,n){return function(){typeof console!==t&&(o.call(this,r,n),this[e].apply(this,arguments))}}.apply(this,arguments)}function s(e,n,s){var a,u=this,c=\"loglevel\";function l(){var e;if(typeof window!==t){try{e=window.localStorage[c]}catch(e){}if(typeof e===t)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(c)+\"=\");-1!==n&&(e=/^([^;]+)/.exec(r.slice(n))[1])}catch(e){}return void 0===u.levels[e]&&(e=void 0),e}}e&&(c+=\":\"+e),u.name=e,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=s||i,u.getLevel=function(){return a},u.setLevel=function(n,i){if(\"string\"==typeof n&&void 0!==u.levels[n.toUpperCase()]&&(n=u.levels[n.toUpperCase()]),!(\"number\"==typeof n&&n>=0&&n<=u.levels.SILENT))throw\"log.setLevel() called with invalid level: \"+n;if(a=n,!1!==i&&function(e){var n=(r[e]||\"silent\").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[c]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(c)+\"=\"+n+\";\"}catch(e){}}}(n),o.call(u,n,e),typeof console===t&&n<u.levels.SILENT)return\"No console available for logging\"},u.setDefaultLevel=function(e){l()||u.setLevel(e,!1)},u.enableAll=function(e){u.setLevel(u.levels.TRACE,e)},u.disableAll=function(e){u.setLevel(u.levels.SILENT,e)};var d=l();null==d&&(d=null==n?\"WARN\":n),u.setLevel(d,!1)}var a=new s,u={};a.getLogger=function(e){if(\"string\"!=typeof e||\"\"===e)throw new TypeError(\"You must supply a name when creating a logger.\");var t=u[e];return t||(t=u[e]=new s(e,a.getLevel(),a.methodFactory)),t};var c=typeof window!==t?window.log:void 0;return a.noConflict=function(){return typeof window!==t&&window.log===a&&(window.log=c),a},a.getLoggers=function(){return u},a})},function(e,t){var r=0,n=Math.random();e.exports=function(e){return\"Symbol(\".concat(void 0===e?\"\":e,\")_\",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if(\"function\"!=typeof e)throw TypeError(e+\" is not a function!\");return e}},function(e,t,r){e.exports={default:r(91),__esModule:!0}},function(e,t,r){var n=r(8).f,o=r(10),i=r(2)(\"toStringTag\");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){var n=r(7);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&\"function\"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if(\"function\"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&\"function\"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError(\"Can't convert object to primitive value\")}},function(e,t,r){var n=r(7),o=r(1).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError(\"Can't call method on  \"+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(30);e.exports=function(e){return Object(n(e))}},function(e,t,r){\"use strict\";t.__esModule=!0;var n=function(e){return e&&e.__esModule?e:{default:e}}(r(47));t.default=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!==(void 0===t?\"undefined\":(0,n.default)(t))&&\"function\"!=typeof t?e:t}},function(e,t,r){\"use strict\";t.__esModule=!0;var n=s(r(93)),o=s(r(97)),i=s(r(47));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+(void 0===t?\"undefined\":(0,i.default)(t)));e.prototype=(0,o.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(n.default?(0,n.default)(e,t):e.__proto__=t)}},function(e,t,r){var n=r(36)(\"keys\"),o=r(23);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t,r){var n=r(0),o=r(1),i=o[\"__core-js_shared__\"]||(o[\"__core-js_shared__\"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})(\"versions\",[]).push({version:n.version,mode:r(15)?\"pure\":\"global\",copyright:\"© 2018 Denis Pushkarev (zloirock.ru)\"})},function(e,t){e.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(e,t,r){var n=r(9),o=r(72),i=r(37),s=r(35)(\"IE_PROTO\"),a=function(){},u=function(){var e,t=r(28)(\"iframe\"),n=i.length;for(t.style.display=\"none\",r(56).appendChild(t),t.src=\"javascript:\",(e=t.contentWindow.document).open(),e.write(\"<script>document.F=Object<\\/script>\"),e.close(),u=e.F;n--;)delete u.prototype[i[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(a.prototype=n(e),r=new a,a.prototype=null,r[s]=e):r=u(),void 0===t?r:o(r,t)}},function(e,t,r){e.exports=!r(4)&&!r(13)(function(){return 7!=Object.defineProperty(r(28)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(e,t,r){t.f=r(2)},function(e,t,r){var n=r(1),o=r(0),i=r(15),s=r(40),a=r(8).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:n.Symbol||{});\"_\"==e.charAt(0)||e in t||a(t,e,{value:s.f(e)})}},function(e,t,r){e.exports={default:r(89),__esModule:!0}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(6),o=r(0),i=r(13);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],s={};s[e]=t(r),n(n.S+n.F*i(function(){r(1)}),\"Object\",s)}},function(e,t,r){var n=r(10),o=r(12),i=r(64)(!1),s=r(35)(\"IE_PROTO\");e.exports=function(e,t){var r,a=o(e),u=0,c=[];for(r in a)r!=s&&n(a,r)&&c.push(r);for(;t.length>u;)n(a,r=t[u++])&&(~i(c,r)||c.push(r));return c}},function(e,t,r){var n=r(29),o=r(16),i=r(12),s=r(27),a=r(10),u=r(39),c=Object.getOwnPropertyDescriptor;t.f=r(4)?c:function(e,t){if(e=i(e),t=s(t,!0),u)try{return c(e,t)}catch(e){}if(a(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t,r){\"use strict\";t.__esModule=!0;var n=s(r(79)),o=s(r(81)),i=\"function\"==typeof o.default&&\"symbol\"==typeof n.default?function(e){return typeof e}:function(e){return e&&\"function\"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?\"symbol\":typeof e};function s(e){return e&&e.__esModule?e:{default:e}}t.default=\"function\"==typeof o.default&&\"symbol\"===i(n.default)?function(e){return void 0===e?\"undefined\":i(e)}:function(e){return e&&\"function\"==typeof o.default&&e.constructor===o.default&&e!==o.default.prototype?\"symbol\":void 0===e?\"undefined\":i(e)}},function(e,t,r){\"use strict\";var n=r(15),o=r(6),i=r(50),s=r(11),a=r(17),u=r(71),c=r(26),l=r(53),d=r(2)(\"iterator\"),f=!([].keys&&\"next\"in[].keys()),p=function(){return this};e.exports=function(e,t,r,h,y,v,_){u(r,t,h);var b,m,g,O=function(e){if(!f&&e in k)return k[e];switch(e){case\"keys\":case\"values\":return function(){return new r(this,e)}}return function(){return new r(this,e)}},w=t+\" Iterator\",j=\"values\"==y,R=!1,k=e.prototype,x=k[d]||k[\"@@iterator\"]||y&&k[y],C=x||O(y),L=y?j?O(\"entries\"):C:void 0,S=\"Array\"==t&&k.entries||x;if(S&&(g=l(S.call(new e)))!==Object.prototype&&g.next&&(c(g,w,!0),n||\"function\"==typeof g[d]||s(g,d,p)),j&&x&&\"values\"!==x.name&&(R=!0,C=function(){return x.call(this)}),n&&!_||!f&&!R&&k[d]||s(k,d,C),a[t]=C,a[w]=p,y)if(b={values:j?C:O(\"values\"),keys:v?C:O(\"keys\"),entries:L},_)for(m in b)m in k||i(k,m,b[m]);else o(o.P+o.F*(f||R),t,b);return b}},function(e,t,r){var n=r(31),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){e.exports=r(11)},function(e,t,r){\"use strict\";var n=r(24);e.exports.f=function(e){return new function(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError(\"Bad Promise constructor\");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}(e)}},function(e,t,r){\"use strict\";var n=r(70)(!0);r(48)(String,\"String\",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){var n=r(10),o=r(32),i=r(35)(\"IE_PROTO\"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:\"function\"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,r){r(73);for(var n=r(1),o=r(11),i=r(17),s=r(2)(\"toStringTag\"),a=\"CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList\".split(\",\"),u=0;u<a.length;u++){var c=a[u],l=n[c],d=l&&l.prototype;d&&!d[s]&&o(d,s,c),i[c]=i.Array}},function(e,t,r){var n=r(21);e.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(e){return\"String\"==n(e)?e.split(\"\"):Object(e)}},function(e,t,r){var n=r(1).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(45),o=r(37).concat(\"length\",\"prototype\");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){e.exports={default:r(76),__esModule:!0}},function(e,t,r){e.exports={default:r(61),__esModule:!0}},function(e,t){},function(e,t,r){r(62);var n=r(0).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(6);n(n.S+n.F*!r(4),\"Object\",{defineProperty:r(8).f})},function(e,t,r){var n=r(21),o=r(2)(\"toStringTag\"),i=\"Arguments\"==n(function(){return arguments}());e.exports=function(e){var t,r,s;return void 0===e?\"Undefined\":null===e?\"Null\":\"string\"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:i?n(t):\"Object\"==(s=n(t))&&\"function\"==typeof t.callee?\"Arguments\":s}},function(e,t,r){var n=r(12),o=r(49),i=r(65);e.exports=function(e){return function(t,r,s){var a,u=n(t),c=o(u.length),l=i(s,c);if(e&&r!=r){for(;c>l;)if((a=u[l++])!=a)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(31),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},function(e,t,r){var n=r(9),o=r(24),i=r(2)(\"species\");e.exports=function(e,t){var r,s=n(e).constructor;return void 0===s||void 0==(r=n(s)[i])?t:o(r)}},function(e,t,r){var n,o,i,s=r(14),a=r(108),u=r(56),c=r(28),l=r(1),d=l.process,f=l.setImmediate,p=l.clearImmediate,h=l.MessageChannel,y=l.Dispatch,v=0,_={},b=function(){var e=+this;if(_.hasOwnProperty(e)){var t=_[e];delete _[e],t()}},m=function(e){b.call(e.data)};f&&p||(f=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return _[++v]=function(){a(\"function\"==typeof e?e:Function(e),t)},n(v),v},p=function(e){delete _[e]},\"process\"==r(21)(d)?n=function(e){d.nextTick(s(b,e,1))}:y&&y.now?n=function(e){y.now(s(b,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=m,n=s(i.postMessage,i,1)):l.addEventListener&&\"function\"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+\"\",\"*\")},l.addEventListener(\"message\",m,!1)):n=\"onreadystatechange\"in c(\"script\")?function(e){u.appendChild(c(\"script\")).onreadystatechange=function(){u.removeChild(this),b.call(e)}}:function(e){setTimeout(s(b,e,1),0)}),e.exports={set:f,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(9),o=r(7),i=r(51);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(31),o=r(30);e.exports=function(e){return function(t,r){var i,s,a=String(o(t)),u=n(r),c=a.length;return u<0||u>=c?e?\"\":void 0:(i=a.charCodeAt(u))<55296||i>56319||u+1===c||(s=a.charCodeAt(u+1))<56320||s>57343?e?a.charAt(u):i:e?a.slice(u,u+2):s-56320+(i-55296<<10)+65536}}},function(e,t,r){\"use strict\";var n=r(38),o=r(16),i=r(26),s={};r(11)(s,r(2)(\"iterator\"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(s,{next:o(1,r)}),i(e,t+\" Iterator\")}},function(e,t,r){var n=r(8),o=r(9),i=r(20);e.exports=r(4)?Object.defineProperties:function(e,t){o(e);for(var r,s=i(t),a=s.length,u=0;a>u;)n.f(e,r=s[u++],t[r]);return e}},function(e,t,r){\"use strict\";var n=r(74),o=r(75),i=r(17),s=r(12);e.exports=r(48)(Array,\"Array\",function(e,t){this._t=s(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):o(0,\"keys\"==t?r:\"values\"==t?e[r]:[r,e[r]])},\"values\"),i.Arguments=i.Array,n(\"keys\"),n(\"values\"),n(\"entries\")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){var n=r(0),o=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},function(e,t,r){var n=r(23)(\"meta\"),o=r(7),i=r(10),s=r(8).f,a=0,u=Object.isExtensible||function(){return!0},c=!r(13)(function(){return u(Object.preventExtensions({}))}),l=function(e){s(e,n,{value:{i:\"O\"+ ++a,w:{}}})},d=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!o(e))return\"symbol\"==typeof e?e:(\"string\"==typeof e?\"S\":\"P\")+e;if(!i(e,n)){if(!u(e))return\"F\";if(!t)return\"E\";l(e)}return e[n].i},getWeak:function(e,t){if(!i(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},onFreeze:function(e){return c&&d.NEED&&u(e)&&!i(e,n)&&l(e),e}}},function(e,t,r){e.exports={default:r(119),__esModule:!0}},function(e,t,r){e.exports={default:r(80),__esModule:!0}},function(e,t,r){r(52),r(54),e.exports=r(40).f(\"iterator\")},function(e,t,r){e.exports={default:r(82),__esModule:!0}},function(e,t,r){r(83),r(60),r(87),r(88),e.exports=r(0).Symbol},function(e,t,r){\"use strict\";var n=r(1),o=r(10),i=r(4),s=r(6),a=r(50),u=r(77).KEY,c=r(13),l=r(36),d=r(26),f=r(23),p=r(2),h=r(40),y=r(41),v=r(84),_=r(85),b=r(9),m=r(7),g=r(12),O=r(27),w=r(16),j=r(38),R=r(86),k=r(46),x=r(8),C=r(20),L=k.f,S=x.f,E=R.f,P=n.Symbol,M=n.JSON,T=M&&M.stringify,D=p(\"_hidden\"),A=p(\"toPrimitive\"),U={}.propertyIsEnumerable,H=l(\"symbol-registry\"),I=l(\"symbols\"),N=l(\"op-symbols\"),F=Object.prototype,V=\"function\"==typeof P,B=n.QObject,z=!B||!B.prototype||!B.prototype.findChild,q=i&&c(function(){return 7!=j(S({},\"a\",{get:function(){return S(this,\"a\",{value:7}).a}})).a})?function(e,t,r){var n=L(F,t);n&&delete F[t],S(e,t,r),n&&e!==F&&S(F,t,n)}:S,W=function(e){var t=I[e]=j(P.prototype);return t._k=e,t},Z=V&&\"symbol\"==typeof P.iterator?function(e){return\"symbol\"==typeof e}:function(e){return e instanceof P},J=function(e,t,r){return e===F&&J(N,t,r),b(e),t=O(t,!0),b(r),o(I,t)?(r.enumerable?(o(e,D)&&e[D][t]&&(e[D][t]=!1),r=j(r,{enumerable:w(0,!1)})):(o(e,D)||S(e,D,w(1,{})),e[D][t]=!0),q(e,t,r)):S(e,t,r)},G=function(e,t){b(e);for(var r,n=v(t=g(t)),o=0,i=n.length;i>o;)J(e,r=n[o++],t[r]);return e},Y=function(e){var t=U.call(this,e=O(e,!0));return!(this===F&&o(I,e)&&!o(N,e))&&(!(t||!o(this,e)||!o(I,e)||o(this,D)&&this[D][e])||t)},K=function(e,t){if(e=g(e),t=O(t,!0),e!==F||!o(I,t)||o(N,t)){var r=L(e,t);return!r||!o(I,t)||o(e,D)&&e[D][t]||(r.enumerable=!0),r}},$=function(e){for(var t,r=E(g(e)),n=[],i=0;r.length>i;)o(I,t=r[i++])||t==D||t==u||n.push(t);return n},Q=function(e){for(var t,r=e===F,n=E(r?N:g(e)),i=[],s=0;n.length>s;)!o(I,t=n[s++])||r&&!o(F,t)||i.push(I[t]);return i};V||(a((P=function(){if(this instanceof P)throw TypeError(\"Symbol is not a constructor!\");var e=f(arguments.length>0?arguments[0]:void 0),t=function(r){this===F&&t.call(N,r),o(this,D)&&o(this[D],e)&&(this[D][e]=!1),q(this,e,w(1,r))};return i&&z&&q(F,e,{configurable:!0,set:t}),W(e)}).prototype,\"toString\",function(){return this._k}),k.f=K,x.f=J,r(57).f=R.f=$,r(29).f=Y,r(43).f=Q,i&&!r(15)&&a(F,\"propertyIsEnumerable\",Y,!0),h.f=function(e){return W(p(e))}),s(s.G+s.W+s.F*!V,{Symbol:P});for(var X=\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),ee=0;X.length>ee;)p(X[ee++]);for(var te=C(p.store),re=0;te.length>re;)y(te[re++]);s(s.S+s.F*!V,\"Symbol\",{for:function(e){return o(H,e+=\"\")?H[e]:H[e]=P(e)},keyFor:function(e){if(!Z(e))throw TypeError(e+\" is not a symbol!\");for(var t in H)if(H[t]===e)return t},useSetter:function(){z=!0},useSimple:function(){z=!1}}),s(s.S+s.F*!V,\"Object\",{create:function(e,t){return void 0===t?j(e):G(j(e),t)},defineProperty:J,defineProperties:G,getOwnPropertyDescriptor:K,getOwnPropertyNames:$,getOwnPropertySymbols:Q}),M&&s(s.S+s.F*(!V||c(function(){var e=P();return\"[null]\"!=T([e])||\"{}\"!=T({a:e})||\"{}\"!=T(Object(e))})),\"JSON\",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(m(t)||void 0!==e)&&!Z(e))return _(t)||(t=function(e,t){if(\"function\"==typeof r&&(t=r.call(this,e,t)),!Z(t))return t}),n[1]=t,T.apply(M,n)}}),P.prototype[A]||r(11)(P.prototype,A,P.prototype.valueOf),d(P,\"Symbol\"),d(Math,\"Math\",!0),d(n.JSON,\"JSON\",!0)},function(e,t,r){var n=r(20),o=r(43),i=r(29);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var s,a=r(e),u=i.f,c=0;a.length>c;)u.call(e,s=a[c++])&&t.push(s);return t}},function(e,t,r){var n=r(21);e.exports=Array.isArray||function(e){return\"Array\"==n(e)}},function(e,t,r){var n=r(12),o=r(57).f,i={}.toString,s=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return s&&\"[object Window]\"==i.call(e)?function(e){try{return o(e)}catch(e){return s.slice()}}(e):o(n(e))}},function(e,t,r){r(41)(\"asyncIterator\")},function(e,t,r){r(41)(\"observable\")},function(e,t,r){r(90),e.exports=r(0).Object.keys},function(e,t,r){var n=r(32),o=r(20);r(44)(\"keys\",function(){return function(e){return o(n(e))}})},function(e,t,r){r(92),e.exports=r(0).Object.getPrototypeOf},function(e,t,r){var n=r(32),o=r(53);r(44)(\"getPrototypeOf\",function(){return function(e){return o(n(e))}})},function(e,t,r){e.exports={default:r(94),__esModule:!0}},function(e,t,r){r(95),e.exports=r(0).Object.setPrototypeOf},function(e,t,r){var n=r(6);n(n.S,\"Object\",{setPrototypeOf:r(96).set})},function(e,t,r){var n=r(7),o=r(9),i=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+\": can't set as prototype!\")};e.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(e,t,n){try{(n=r(14)(Function.call,r(46).f(Object.prototype,\"__proto__\").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:i}},function(e,t,r){e.exports={default:r(98),__esModule:!0}},function(e,t,r){r(99);var n=r(0).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(6);n(n.S,\"Object\",{create:r(38)})},function(e,t,r){\"use strict\";t.__esModule=!0;var n=i(r(25)),o=i(r(125));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function e(t,r,i){null===t&&(t=Function.prototype);var s=(0,o.default)(t,r);if(void 0===s){var a=(0,n.default)(t);return null===a?void 0:e(a,r,i)}if(\"value\"in s)return s.value;var u=s.get;return void 0!==u?u.call(i):void 0}},function(e,t,r){var n=r(63),o=r(2)(\"iterator\"),i=r(17);e.exports=r(0).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e[\"@@iterator\"]||i[n(e)]}},function(e,t,r){r(60),r(52),r(54),r(103),r(114),r(115),e.exports=r(0).Promise},function(e,t,r){\"use strict\";var n,o,i,s,a=r(15),u=r(1),c=r(14),l=r(63),d=r(6),f=r(7),p=r(24),h=r(104),y=r(105),v=r(66),_=r(67).set,b=r(109)(),m=r(51),g=r(68),O=r(110),w=r(69),j=u.TypeError,R=u.process,k=R&&R.versions,x=k&&k.v8||\"\",C=u.Promise,L=\"process\"==l(R),S=function(){},E=o=m.f,P=!!function(){try{var e=C.resolve(1),t=(e.constructor={})[r(2)(\"species\")]=function(e){e(S,S)};return(L||\"function\"==typeof PromiseRejectionEvent)&&e.then(S)instanceof t&&0!==x.indexOf(\"6.6\")&&-1===O.indexOf(\"Chrome/66\")}catch(e){}}(),M=function(e){var t;return!(!f(e)||\"function\"!=typeof(t=e.then))&&t},T=function(e,t){if(!e._n){e._n=!0;var r=e._c;b(function(){for(var n=e._v,o=1==e._s,i=0,s=function(t){var r,i,s,a=o?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{a?(o||(2==e._h&&U(e),e._h=1),!0===a?r=n:(l&&l.enter(),r=a(n),l&&(l.exit(),s=!0)),r===t.promise?c(j(\"Promise-chain cycle\")):(i=M(r))?i.call(r,u,c):u(r)):c(n)}catch(e){l&&!s&&l.exit(),c(e)}};r.length>i;)s(r[i++]);e._c=[],e._n=!1,t&&!e._h&&D(e)})}},D=function(e){_.call(u,function(){var t,r,n,o=e._v,i=A(e);if(i&&(t=g(function(){L?R.emit(\"unhandledRejection\",o,e):(r=u.onunhandledrejection)?r({promise:e,reason:o}):(n=u.console)&&n.error&&n.error(\"Unhandled promise rejection\",o)}),e._h=L||A(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},A=function(e){return 1!==e._h&&0===(e._a||e._c).length},U=function(e){_.call(u,function(){var t;L?R.emit(\"rejectionHandled\",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},H=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),T(t,!0))},I=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw j(\"Promise can't be resolved itself\");(t=M(e))?b(function(){var n={_w:r,_d:!1};try{t.call(e,c(I,n,1),c(H,n,1))}catch(e){H.call(n,e)}}):(r._v=e,r._s=1,T(r,!1))}catch(e){H.call({_w:r,_d:!1},e)}}};P||(C=function(e){h(this,C,\"Promise\",\"_h\"),p(e),n.call(this);try{e(c(I,this,1),c(H,this,1))}catch(e){H.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(111)(C.prototype,{then:function(e,t){var r=E(v(this,C));return r.ok=\"function\"!=typeof e||e,r.fail=\"function\"==typeof t&&t,r.domain=L?R.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&T(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=c(I,e,1),this.reject=c(H,e,1)},m.f=E=function(e){return e===C||e===s?new i(e):o(e)}),d(d.G+d.W+d.F*!P,{Promise:C}),r(26)(C,\"Promise\"),r(112)(\"Promise\"),s=r(0).Promise,d(d.S+d.F*!P,\"Promise\",{reject:function(e){var t=E(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(a||!P),\"Promise\",{resolve:function(e){return w(a&&this===s?C:this,e)}}),d(d.S+d.F*!(P&&r(113)(function(e){C.all(e).catch(S)})),\"Promise\",{all:function(e){var t=this,r=E(t),n=r.resolve,o=r.reject,i=g(function(){var r=[],i=0,s=1;y(e,!1,function(e){var a=i++,u=!1;r.push(void 0),s++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--s||n(r))},o)}),--s||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=E(t),n=r.reject,o=g(function(){y(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+\": incorrect invocation!\");return e}},function(e,t,r){var n=r(14),o=r(106),i=r(107),s=r(9),a=r(49),u=r(101),c={},l={};(t=e.exports=function(e,t,r,d,f){var p,h,y,v,_=f?function(){return e}:u(e),b=n(r,d,t?2:1),m=0;if(\"function\"!=typeof _)throw TypeError(e+\" is not iterable!\");if(i(_)){for(p=a(e.length);p>m;m++)if((v=t?b(s(h=e[m])[0],h[1]):b(e[m]))===c||v===l)return v}else for(y=_.call(e);!(h=y.next()).done;)if((v=o(y,b,h.value,t))===c||v===l)return v}).BREAK=c,t.RETURN=l},function(e,t,r){var n=r(9);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(17),o=r(2)(\"iterator\"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(1),o=r(67).set,i=n.MutationObserver||n.WebKitMutationObserver,s=n.process,a=n.Promise,u=\"process\"==r(21)(s);e.exports=function(){var e,t,r,c=function(){var n,o;for(u&&(n=s.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){s.nextTick(c)};else if(!i||n.navigator&&n.navigator.standalone)if(a&&a.resolve){var l=a.resolve(void 0);r=function(){l.then(c)}}else r=function(){o.call(n,c)};else{var d=!0,f=document.createTextNode(\"\");new i(c).observe(f,{characterData:!0}),r=function(){f.data=d=!d}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){var n=r(1).navigator;e.exports=n&&n.userAgent||\"\"},function(e,t,r){var n=r(11);e.exports=function(e,t,r){for(var o in t)r&&e[o]?e[o]=t[o]:n(e,o,t[o]);return e}},function(e,t,r){\"use strict\";var n=r(1),o=r(0),i=r(8),s=r(4),a=r(2)(\"species\");e.exports=function(e){var t=\"function\"==typeof o[e]?o[e]:n[e];s&&t&&!t[a]&&i.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(2)(\"iterator\"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],s=i[n]();s.next=function(){return{done:r=!0}},i[n]=function(){return s},e(i)}catch(e){}return r}},function(e,t,r){\"use strict\";var n=r(6),o=r(0),i=r(1),s=r(66),a=r(69);n(n.P+n.R,\"Promise\",{finally:function(e){var t=s(this,o.Promise||i.Promise),r=\"function\"==typeof e;return this.then(r?function(r){return a(t,e()).then(function(){return r})}:e,r?function(r){return a(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){\"use strict\";var n=r(6),o=r(51),i=r(68);n(n.S,\"Promise\",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},,function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.ObjectType=t.ChangeType=void 0;var n=s(r(3)),o=s(r(5));r(123);var i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){(0,n.default)(this,e);this._observers=[],this._filters={},this._data=t||{},this._internalObserve(this._data)}return(0,o.default)(e,[{key:\"observe\",value:function(e){this._observers.push(e)}},{key:\"find\",value:function(e){var t=(0,i.parseAttributes)(e);return this._findWithSplit(t)}},{key:\"findBefore\",value:function(e){var t={},r=(0,i.parseAttributes)(e);return t.last=r.pop(),t.obj=this._findWithSplit(r),t}},{key:\"_findWithSplit\",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:\"_internalObserve\",value:function(e){var t=this;this._data=Object.deepObserve(e,function(e){e.every(function(e){t._onChanges(e)})})}},{key:\"_fireEvent\",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:\"_onChanges\",value:function(e){var t=e.object,r=void 0;t.constructor===Object&&(r=c.OBJECT),t.constructor===Array&&(r=c.ARRAY);var n=e.keypath,o=t[e.name];\"update\"!==e.type||n.includes(\".length\")||this._fireEvent({cType:u.UPDATE,oType:r,field:n,data:o}),\"add\"===e.type&&this._fireEvent({cType:u.ADD,oType:r,field:n,data:o}),\"delete\"===e.type&&this._fireEvent({cType:u.REMOVE,oType:r,field:n})}},{key:\"data\",get:function(){return this._data}}]),e}(),u=t.ChangeType={UPDATE:\"update\",ADD:\"add\",REMOVE:\"remove\"},c=t.ObjectType={OBJECT:\"object\",ARRAY:\"array\"};t.default=a},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=c(r(18)),o=c(r(3)),i=c(r(5)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),a=c(r(117)),u=r(19);function c(e){return e&&e.__esModule?e:{default:e}}var l=s.getLogger(\"DataObjectChild\"),d=function(){function e(t){(0,o.default)(this,e);function r(e){throw\"[DataObjectChild] \"+e+\" mandatory parameter is missing\"}t.parent?this._parent=t.parent:r(\"parent\"),t.url?this._url=t.url:r(\"url\"),t.created?this._created=t.created:r(\"created\"),t.reporter?this._reporter=t.reporter:r(\"reporter\"),t.runtime?this._runtime=t.runtime:r(\"runtime\"),t.schema?this._schema=t.schema:r(\"schema\"),t.parentObject?this._parentObject=t.parentObject:r(\"parentObject\"),t.name&&(this._name=t.name),t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._childId=t.url,t.data?this._syncObj=new a.default(t.data):this._syncObj=new a.default({}),l.log(\"[DataObjectChild -  Constructor] - \",this._syncObj),this._bus=this._parentObject._bus,this._owner=this._parentObject._owner,this._allocateListeners(),this._metadata=t,delete this._metadata.parentObject,this._sharingStatus=!1}return(0,i.default)(e,[{key:\"share\",value:function(e){var t=this;t._sharingStatus=new n.default(function(r,n){var o=void 0;o=e?t.metadata.parent:t.metadata.parent+\"/children/\"+t.metadata.children;var i=t.metadata;i.data=t.data;var s={type:\"create\",from:t.metadata.reporter,to:o,body:{resource:i.url,value:i}};if(t.identity&&(s.body.identity=t.identity),t._parentObject.data.hasOwnProperty(\"mutual\")&&(s.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,u.deepClone)(s)),r();var a=t._bus.postMessage((0,u.deepClone)(s),function(e){if(e.to===t._reporter){t._bus.removeResponseListener(s.from,e.id),l.log(\"[Syncher.DataObjectChild.share] Parent reporter reply \",e);var o={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:\"Unknown\"};return e.body.code<300?r(o):n(o)}},!1);setTimeout(function(){t._bus.removeResponseListener(s.from,a);return n({code:408,desc:\"timout\"})},3e3)})}},{key:\"store\",value:function(){var e={},t=this.metadata.children+\".\"+this.metadata.url;e.value=this.metadata,e.identity=this.identity;var r={from:this.metadata.reporter,to:this._parentObject._syncher._subURL,type:\"create\",body:{resource:this.metadata.parent,attribute:t,value:e}};l.log(\"[DataObjectChild.store]:\",r),this._bus.postMessage(r)}},{key:\"_allocateListeners\",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){\"response\"===t.type&&t.id===e._msgId&&(l.log(\"DataObjectChild.onResponse:\",t),e._onResponse(t))}))}},{key:\"_releaseListeners\",value:function(){this._listener&&this._listener.remove()}},{key:\"delete\",value:function(){this._releaseListeners()}},{key:\"onChange\",value:function(e){this._syncObj.observe(function(t){l.log(\"[DataObjectChild - observer] - \",t),e(t)})}},{key:\"onResponse\",value:function(e){this._onResponseHandler=e}},{key:\"_onResponse\",value:function(e){var t={type:e.type,url:e.body.source,code:e.body.code};this._onResponseHandler&&this._onResponseHandler(t)}},{key:\"shareable\",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:\"metadata\",get:function(){return this._metadata}},{key:\"childId\",get:function(){return this._childId}},{key:\"sharingStatus\",get:function(){return this._sharingStatus}},{key:\"data\",get:function(){return this._syncObj.data}},{key:\"identity\",set:function(e){this._identity=e},get:function(){return this._identity}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){r(120),e.exports=r(0).Object.assign},function(e,t,r){var n=r(6);n(n.S+n.F,\"Object\",{assign:r(121)})},function(e,t,r){\"use strict\";var n=r(20),o=r(43),i=r(29),s=r(32),a=r(55),u=Object.assign;e.exports=!u||r(13)(function(){var e={},t={},r=Symbol(),n=\"abcdefghijklmnopqrst\";return e[r]=7,n.split(\"\").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join(\"\")!=n})?function(e,t){for(var r=s(e),u=arguments.length,c=1,l=o.f,d=i.f;u>c;)for(var f,p=a(arguments[c++]),h=l?n(p).concat(l(p)):n(p),y=h.length,v=0;y>v;)d.call(p,f=h[v++])&&(r[f]=p[f]);return r}:u},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=y(r(47)),o=y(r(18)),i=y(r(42)),s=y(r(78)),a=y(r(3)),u=y(r(5)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=r(117),d=y(l),f=y(r(118)),p=r(19),h=y(r(128));function y(e){return e&&e.__esModule?e:{default:e}}var v=c.getLogger(\"DataObject\"),_=function(){function e(t){(0,a.default)(this,e);function r(e){throw\"[DataObject] \"+e+\" mandatory parameter is missing\"}t.syncher?this._syncher=t.syncher:r(\"syncher\"),t.url?this._url=t.url:r(\"url\"),t.created?this._created=t.created:r(\"created\"),t.reporter?this._reporter=t.reporter:r(\"reporter\"),t.runtime?this._runtime=t.runtime:r(\"runtime\"),t.schema?this._schema=t.schema:r(\"schema\"),t.name?this._name=t.name:r(\"name\"),this._status=t.status,t.data?this._syncObj=new d.default(t.data):this._syncObj=new d.default({}),this._childrens=t.childrens,this._mutual=t.mutual,this._version=0,this._childId=0,this._childrenListeners=[],this._onAddChildrenHandler,this._resumed=t.resume,t.resume&&(this._version=t.version),this._owner=t.syncher._owner,this._bus=t.syncher._bus,t.description&&(this._description=t.description),t.tags&&(this._tags=t.tags),t.resources&&(this._resources=t.resources),t.observerStorage&&(this._observerStorage=t.observerStorage),t.publicObservation&&(this._publicObservation=t.publicObservation),this._metadata=(0,s.default)(t),this._metadata.lastModified=this._metadata.created,delete this._metadata.data,delete this._metadata.syncher,delete this._metadata.authorise,this._hypertyResourceFactory=new h.default,this._childrenObjects={},this._sharedChilds=[]}return(0,u.default)(e,[{key:\"_getLastChildId\",value:function(){var e=this,t=0,r=e._owner+\"#\"+t;return(0,i.default)(e._childrens).filter(function(t){e._childrens[t].childId>r&&(r=e._childrens[t].childId)}),Number(r.split(\"#\")[1])}},{key:\"_allocateListeners\",value:function(){var e=this,t=this,r=t._url+\"/children/\";v.log(\"[Data Object - AllocateListeners] - \",t._childrens),t._childrens&&t._childrens.forEach(function(n){var o=r+n,i=t._bus.addListener(o,function(r){if(r.from!==e._owner)switch(v.log(\"DataObject-Children-RCV: \",r),r.type){case\"create\":t._onChildCreate(r);break;case\"delete\":v.log(r);break;default:t._changeChildren(r)}});t._childrenListeners.push(i)})}},{key:\"_releaseListeners\",value:function(){var e=this;e._childrenListeners.forEach(function(e){e.remove()}),(0,i.default)(e._childrenObjects).forEach(function(t){(0,i.default)(e._childrenObjects[t]).forEach(function(r){e._childrenObjects[t][r]._releaseListeners()})})}},{key:\"resumeChildrens\",value:function(e){var t=this,r=this,n=this._owner+\"#\"+this._childId;(0,i.default)(e).forEach(function(o){var s=e[o];(0,i.default)(s).forEach(function(e){var i=!1;r._childrenObjects.hasOwnProperty(o)||(r._childrenObjects[o]={}),s[e].value.resourceType&&!r._childrenObjects[o].hasOwnProperty(e)?(r._childrenObjects[o][e]=r._resumeHypertyResource(s[e]),i=!0):r._childrenObjects[o].hasOwnProperty(e)||(r._childrenObjects[o][e]=r._resumeChild(s[e]),v.log(\"[DataObject.resumeChildrens] new DataObjectChild: \",r._childrenObjects[o][e]),i=!0),i&&e>n&&(n=e,v.log(\"[DataObjectReporter.resumeChildrens] - resuming: \",t._childrenObjects[o][e]))})}),this._childId=Number(n.split(\"#\")[1])}},{key:\"_resumeChild\",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=new f.default(t);r.identity=e.identity;var n={type:\"create\",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:\"_resumeHypertyResource\",value:function(e){var t=e.value;t.parentObject=this,t.parent=this._url;var r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t);r.identity=e.identity;var n={type:\"create\",from:r.reporter,url:r.parent,value:r.data,childId:r.url,identity:r.identity,child:r};return r.resourceType&&(n.resource=r),this._onAddChildrenHandler&&this._onAddChildrenHandler(n),r}},{key:\"pause\",value:function(){throw\"Not implemented\"}},{key:\"resume\",value:function(){throw\"Not implemented\"}},{key:\"stop\",value:function(){throw\"Not implemented\"}},{key:\"addChild\",value:function(e,t,r,n){var i=this,s=void 0;return new o.default(function(o){var a=i._url+\"/children/\"+e,u=i._getChildInput(n);u.data=t,u.children=e,s=new f.default(u),r&&(s.identity=r),s.share(),v.log(\"[DataObject.addChild] added \",s),s.onChange(function(e){i._onChange(e,{path:a,childId:u.url})}),i._childrenObjects.hasOwnProperty(e)||(i._childrenObjects[e]={}),i._childrenObjects[e][u.url]=s,o(s)})}},{key:\"_deleteChildrens\",value:function(){var e=this,t=[];return new o.default(function(r){if(e.childrens){v.log(\"[DataObject.deleteChildrens]\",e.childrens);var n=void 0;for(n in e.childrens){var i=void 0;for(i in e.childrens[n]){var s=e.childrens[n][i];v.log(\"[DataObject._deleteChildrens] child\",s),s.metadata.hasOwnProperty(\"resourceType\")&&t.push(e.childrens[n][i].delete())}}}v.log(\"[DataObject._deleteChildrens] promises \",t),t.length>0?o.default.all(t).then(function(){r(\"[DataObject._deleteChildrens] done\")}):r(\"[DataObject._deleteChildrens] nothing to delete\")})}},{key:\"_getChildInput\",value:function(e){var t=(0,s.default)({},e);return this._childId++,t.url=this._owner+\"#\"+this._childId,t.parentObject=this,t.reporter=this._owner,t.created=(new Date).toISOString(),t.runtime=this._syncher._runtimeUrl,t.p2pHandler=this._syncher._p2pHandler,t.p2pRequester=this._syncher._p2pRequester,t.schema=this._schema,t.parent=this.url,t}},{key:\"addHypertyResource\",value:function(e,t,r,n,i){var s=this;return new o.default(function(o){var a=void 0,u=s._url+\"/children/\"+e,c=s._getChildInput(i);c.children=e,s._hypertyResourceFactory.createHypertyResourceWithContent(!0,t,r,c).then(function(t){a=t,n&&(a.identity=n),a.share(),v.log(\"[DataObject.addHypertyResource] added \",a),a.onChange(function(e){s._onChange(e,{path:u,childId:a.childId})}),s._childrenObjects.hasOwnProperty(e)||(s._childrenObjects[e]={}),s._childrenObjects[e][a.childId]=a,o(a)})})}},{key:\"onAddChild\",value:function(e){this._onAddChildrenHandler=e}},{key:\"_onChildCreate\",value:function(e){v.log(\"[DataObject._onChildCreate] receivedBy \"+this._owner+\" : \",e);var t={from:e.to,to:e.from,type:\"response\",id:e.id,body:{code:100}};this._bus.postMessage(t),e.body.value.resourceType?this._onHypertyResourceAdded(e):this._onChildAdded(e)}},{key:\"_onChildAdded\",value:function(e){var t=(0,p.deepClone)(e.body.value);t.parentObject=this;var r=t.children,n=new f.default(t);n.identity=e.body.identity,this._childrenObjects.hasOwnProperty(r)||(this._childrenObjects[r]={}),this._childrenObjects[r][t.url]=n,e.to===this.metadata.url&&n.store(),this._hypertyEvt(e,n)}},{key:\"_onHypertyResourceAdded\",value:function(e){var t=e.body.value,r=void 0,n=t.children;t.parentObject=this,(r=this._hypertyResourceFactory.createHypertyResource(!1,t.resourceType,t)).identity=e.body.identity,this._childrenObjects.hasOwnProperty(n)||(this._childrenObjects[n]={}),this._childrenObjects[n][r.childId]=r,this._hypertyEvt(e,r),e.to===this.metadata.url&&r.store()}},{key:\"_hypertyEvt\",value:function(e,t){var r={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(r.resource=t),this._onAddChildrenHandler&&this._onAddChildrenHandler(r)}},{key:\"_onChange\",value:function(e,t){if(this._metadata.lastModified=(new Date).toISOString(),this._version++,\"live\"===this._status){var r={type:\"update\",from:this._url,to:this._url+\"/changes\",body:{version:this._version,source:this._owner,attribute:e.field,lastModified:this._metadata.lastModified}};v.log(\"[DataObject - _onChange] - \",e,t,r),e.oType===l.ObjectType.OBJECT?e.cType!==l.ChangeType.REMOVE&&(r.body.value=(0,p.deepClone)(e.data)):(r.body.attributeType=e.oType,r.body.value=e.data,e.cType!==l.ChangeType.UPDATE&&(r.body.operation=e.cType)),t&&(r.to=t.path,r.body.resource=t.childId),this.data._mutual||(r.body.mutual=this._mutual),this._bus.postMessage(r)}}},{key:\"_changeObject\",value:function(e,t){if(this._version+1<=t.body.version){this._version=t.body.version;var r=t.body.attribute,o=void 0;o=\"object\"===(0,n.default)(t.body.value)?(0,p.deepClone)(t.body.value):t.body.value;var i=e.findBefore(r);if(t.body.lastModified?this._metadata.lastModified=t.body.lastModified:this._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===l.ObjectType.ARRAY)if(t.body.operation===l.ChangeType.ADD){var s=i.obj,a=i.last;Array.prototype.splice.apply(s,[a,0].concat(o))}else if(t.body.operation===l.ChangeType.REMOVE){var u=i.obj,c=i.last;u.splice(c,o)}else i.obj[i.last]=o;else t.body.hasOwnProperty(\"value\")?i.obj[i.last]=o:delete i.obj[i.last]}else v.log(\"UNSYNCHRONIZED VERSION: (data => \"+this._version+\", msg => \"+t.body.version+\")\")}},{key:\"_changeChildren\",value:function(e){var t=(0,p.divideURL)(e.to).identity,r=t?t.substring(t.lastIndexOf(\"/\")+1):void 0,n=e.body.resource,o=this._childrenObjects[r][n];v.log(\"Change children: \",this._owner,e,r),o?this._changeObject(o._syncObj,e):v.warn(\"No children found for: \",n)}},{key:\"metadata\",get:function(){return this._metadata}},{key:\"url\",get:function(){return this._url}},{key:\"schema\",get:function(){return this._schema}},{key:\"status\",get:function(){return this._status}},{key:\"data\",get:function(){return this._syncObj.data}},{key:\"childrens\",get:function(){return this._childrenObjects}}]),e}();t.default=_,e.exports=t.default},function(e,t){!function(){\"use strict\";if(!Object.observe&&\"function\"==typeof Proxy){function e(e,t,r,n,o,i){var s,a=this;function u(e,n){if(u.delay=n,!u.pause&&a.changeset.length>0){if(!e){var o=a.changeset.filter(function(e){return!r||r.indexOf(e.type)>=0});o.length>0&&t(o)}a.changeset=[]}}return u.pause=o,u.delay=i,a.get=function(e,t){return\"__observer__\"===t?a:\"unobserve\"===t?function(){return Object.unobserve(e),e}:\"deliver\"===t?u:e[t]},a.target=e,a.changeset=[],a.target.__observerCallbacks__||(Object.defineProperty(e,\"__observerCallbacks__\",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,\"__observers__\",{enumerable:!1,configurable:!0,writable:!1,value:[]})),a.target.__observerCallbacks__.push(t),a.target.__observers__.push(this),s=new Proxy(e,a),u(!1,i),s}e.prototype.deliver=function(){return this.get(null,\"deliver\")},e.prototype.set=function(e,t,r){var n=e[t],o=void 0===n?\"add\":\"update\";if(e[t]=r,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(o)>=0)){var i={object:e,name:t,type:o},s=0===this.changeset.length,a=this.deliver();\"update\"===o&&(i.oldValue=n),this.changeset.push(i),s&&a(!1,\"number\"==typeof a.delay?a.delay:10)}return!0},e.prototype.deleteProperty=function(e,t){var r=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf(\"delete\")>=0){var n={object:e,name:t,type:\"delete\",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,\"number\"==typeof i.delay?i.delay:10)}return!0},e.prototype.defineProperty=function(e,t,r){if(Object.defineProperty(e,t,r),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf(\"reconfigure\")>=0){var n={object:e,name:t,type:\"reconfigure\"},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,\"number\"==typeof i.delay?i.delay:10)}return!0},e.prototype.setPrototypeOf=function(e,t){var r=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf(\"setPrototype\")>=0){var n={object:e,name:\"__proto__\",type:\"setPrototype\",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,\"number\"==typeof i.delay?i.delay:10)}return!0},e.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf(\"preventExtensions\")>=0){var t={object:e,type:\"preventExtensions\"},r=0===this.changeset.length,n=this.deliver();this.changeset.push(t),r&&n(!1,\"number\"==typeof n.delay?n.delay:10)}return!0},Object.observe=function(t,r,n,o,i,s){return new e(t,r,n,o,i,s)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(r,n){t===r&&(e.__observerCallbacks__.splice(n,1),delete e.__observers__[n].callback,e.__observers__.splice(n,1))})}},Array.observe=function(e,t,r,n,o,i){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError(\"First argument to Array.observer is not an Array\");r=r||[\"add\",\"update\",\"delete\",\"splice\"];var s=new Proxy(e,{get:function(t,n){return\"unobserve\"===n?function(e){return e?Object.unobserve(t,e):t.unobserve()}:\"splice\"===n?function(n,o){if(\"number\"!=typeof n||\"number\"!=typeof o)throw new TypeError(\"First two arguments to Array splice are not number, number\");var i=this.slice(n,n+o),s=arguments.length>1?arguments.length-2:0,u={object:e,type:\"splice\",index:n,removed:i,addedCount:s};if(t.splice.apply(t,arguments),r.indexOf(\"splice\")>=0){n=0===a.__observer__.changeset.length;var c=a.__observer__.deliver();a.__observer__.changeset.push(u),n&&c(!1,\"number\"==typeof c.delay?c.delay:10)}}:\"push\"===n?function(e){return this.splice(this.length,0,e)}:\"pop\"===n?function(){return this.splice(this.length-1,1)}:\"unshift\"===n?function(e){return this.splice(0,0,e)}:\"shift\"===n?function(){return this.splice(0,1)}:t[n]}}),a=Object.observe(s,function(e){var n=e.filter(function(e){return\"length\"!==e.name&&\"add\"!==e.name&&(!r||r.indexOf(e.type)>=0)});n.length>0&&t(n)},r,n,o,i);return a},Array.unobserve=function(e,t){return e.unobserve(t)}}Object.deepObserve=function(e,t,r){var n=function(e){return{}.toString.call(e).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()};function o(e,r){Object.keys(e).forEach(function(o){if((\"object\"===n(e[o])||\"array\"===n(e[o]))&&!e[o].hasOwnProperty(\"__observers__\")){var i=r.slice(0);i.push(o),e[o]=Object.deepObserve(e[o],t,i)}})}return o(e,r=r||[]),Object.observe(e,function(e){var n=[];e.forEach(function(e){var t=(r.length>0?r.join(\".\")+\".\":\"\")+e.name;\"update\"!==e.type&&\"add\"!==e.type||o(e.object,r),n.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),function e(t,r,o,i,s){i instanceof Object?Object.keys(i).forEach(function(a){if(!o||o[a]!==i[a]){var u=o&&void 0!==o[a]?o[a]:void 0,c=void 0===u?\"add\":\"update\",l=s+\".\"+a;n.push({name:t,object:r,type:c,oldValue:u,newValue:i[a],keypath:l}),e(t,r,u,i[a],l)}}):o instanceof Object&&Object.keys(o).forEach(function(a){var u=null===i?\"update\":\"delete\",c=s+\".\"+a;n.push({name:t,object:r,type:u,oldValue:o[a],newValue:i,keypath:c}),e(t,r,o[a],void 0,c)})}(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(n)})}}()},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=f(r(18)),o=f(r(25)),i=f(r(3)),s=f(r(5)),a=f(r(33)),u=f(r(34)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),l=f(r(129)),d=(r(19),f(r(130)));function f(e){return e&&e.__esModule?e:{default:e}}var p=c.getLogger(\"FileHypertyResource\"),h=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,e,r));return n.metadata.resourceType=\"file\",n}return(0,u.default)(t,e),(0,s.default)(t,[{key:\"init\",value:function(e){var t=this;if(!e)throw new Error(\"[FileHypertyResource.constructor] missing mandatory *file* input \");return new n.default(function(r,n){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,p.log(\"[FileHypertyResource.init] file: \",e),t._isSender)switch(e.type.split(\"/\")[0]){case\"image\":t._getImagePreview(e).then(function(n){t._metadata.preview=n,t._content=e,r()});break;default:t._content=e,r()}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),r()})}},{key:\"_getImagePreview\",value:function(e){var t=new FileReader;return new n.default(function(r,n){d.default.resize(e,{width:100,height:100},function(e,n){n?(t.readAsDataURL(e),t.onload=function(e){r(e.target.result)}):(p.warn(\"[FileHypertyResource._getImagePreview] unable to create image preview from original image \"),r(void 0))})})}},{key:\"toMessage\",value:function(){}},{key:\"name\",get:function(){return this._metadata.name}},{key:\"preview\",get:function(){return this._metadata.preview}}]),t}(l.default);t.default=h,e.exports=t.default},function(e,t,r){e.exports={default:r(126),__esModule:!0}},function(e,t,r){r(127);var n=r(0).Object;e.exports=function(e,t){return n.getOwnPropertyDescriptor(e,t)}},function(e,t,r){var n=r(12),o=r(46).f;r(44)(\"getOwnPropertyDescriptor\",function(){return function(e,t){return o(n(e),t)}})},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=a(r(18)),o=a(r(3)),i=a(r(5)),s=a(r(124));function a(e){return e&&e.__esModule?e:{default:e}}var u=function(){function e(){(0,o.default)(this,e)}return(0,i.default)(e,[{key:\"createHypertyResource\",value:function(e,t,r){var n=void 0;switch(t){case\"file\":n=new s.default(e,r);break;default:throw new Error(\"[HypertyResourceFactory.createHypertyResource] not supported type: \",t)}return n}},{key:\"createHypertyResourceWithContent\",value:function(e,t,r,o){var i=void 0;return new n.default(function(n){switch(t){case\"file\":i=new s.default(e,o);break;default:reject()}i.init(r).then(function(){return i.save()}).then(function(){n(i)})})}}]),e}();t.default=u,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=p(r(18)),o=p(r(25)),i=p(r(3)),s=p(r(5)),a=p(r(33)),u=p(r(100)),c=p(r(34)),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),d=r(19),f=p(r(118));function p(e){return e&&e.__esModule?e:{default:e}}var h=l.getLogger(\"HypertyResource\"),y=function(e){function t(e,r){(0,i.default)(this,t);var n=(0,a.default)(this,(t.__proto__||(0,o.default)(t)).call(this,r)),s=n;return s.arraybufferSizeLimit=5242880,s._isSender=e,s._localStorageURL=s._parentObject._syncher._runtimeUrl+\"/storage\",n}return(0,c.default)(t,e),(0,s.default)(t,[{key:\"save\",value:function(){var e=this;return new n.default(function(t,r){var n={from:e._owner,to:e._localStorageURL,type:\"create\",body:{value:(0,d.deepClone)(e._metadata)}};n.body.value.content=e._content,e._bus.postMessage(n,function(n){h.info(\"[HypertyResource.save] reply: \",n),e._bus.removeResponseListener(e._owner,n.id),200===n.body.code?(n.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(n.body.value)),t()):r(n.body.code+\" \"+n.body.desc)},!1)})}},{key:\"read\",value:function(e){var t=this;return h.info(\"[HypertyResource.read] \",this),new n.default(function(r,n){if(t.content)r(t);else{var o=t._getBestContentURL(t._metadata.contentURL);h.log(\"Storage:\",o);var i={from:t._owner,to:o.url,type:\"read\",body:{resource:o.url+\"/\"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(i.body.p2pRequester=t.metadata.p2pRequester,i.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(i,e).then(function(e){h.info(\"[HypertyResource] - get locally the resource:\",e),r(t)}).catch(function(i){h.warn(\"[HypertyResource] - get locally the resource fail\",i);var s={from:t._owner,to:o.remoteURL,type:\"read\",body:{resource:o.remoteURL+\"/\"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(s.body.p2pRequester=t.metadata.p2pRequester,s.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(s,e).then(function(e){h.warn(\"[HypertyResource] - get remotely the resource\",e),r(t)}).catch(function(e){h.warn(\"[HypertyResource] - get remotely the resource fail\",e),n(e.body.code+\" \"+e.body.desc)})})}})}},{key:\"_getBestResource\",value:function(e,t){var r=this;return new n.default(function(n,o){var i=setTimeout(function(){return r._bus.removeResponseListener(r._owner,s),e.body.code=408,e.body.desc=\"Response timeout\",o(e)},3e3),s=r._bus.postMessage(e,function(e){h.log(\"[HypertyResource.read] reply: \",e);var s=e.id;switch(clearTimeout(i),e.body.code){case 200:r._content=e.body.value.content,e.body.value.size<r.arraybufferSizeLimit&&r.save(),r._bus.removeResponseListener(r._owner,s),n(e);break;case 183:t(e.body.value);break;default:r._bus.removeResponseListener(r._owner,s),o(e)}},!1)})}},{key:\"delete\",value:function(){var e=this;h.info(\"[HypertyResource.delete]\",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:\"delete\",body:{resources:e.metadata.contentURL}};return new n.default(function(r){e._bus.postMessage(t,function(e){e.body.code<300?r(!0):r(!1)})})}},{key:\"_getBestContentURL\",value:function(e){var t=e[0],r=t.substr(t.lastIndexOf(\"/\")+1);return{url:this._localStorageURL,resource:r,remoteURL:t.substr(0,t.lastIndexOf(\"/\"))}}},{key:\"resourceType\",get:function(){return this.metadata.resourceType}},{key:\"mimetype\",get:function(){return this._metadata.type}},{key:\"content\",get:function(){return this._content}},{key:\"contentURL\",get:function(){return this._metadata.contentURL}},{key:\"shareable\",get:function(){var e=(0,u.default)(t.prototype.__proto__||(0,o.default)(t.prototype),\"metadata\",this);return e.resourceType=this.resourceType,e}}]),t}(f.default);t.default=y,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=\"undefined\"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),a=s&&\"undefined\"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),u=\"undefined\"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,c=u||\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof atob,l=\"undefined\"!=typeof FileReader||\"undefined\"!=typeof URL,d=function(){function e(){(0,n.default)(this,e)}return(0,o.default)(e,null,[{key:\"resize\",value:function(t,r,n){\"function\"==typeof r&&(n=r,r={width:640,height:480});r.width,r.height;if(!e.isSupported()||!t.type.match(/image.*/))return n(t,!1),!1;if(t.type.match(/image\\/gif/))return n(t,!1),!1;var o=document.createElement(\"img\");return o.onload=function(i){var s=o.width,a=o.height,c=!1;if(s>=a&&s>r.width?(a*=r.width/s,s=r.width,c=!0):a>r.height&&(s*=r.height/a,a=r.height,c=!0),c){var l=document.createElement(\"canvas\");if(l.width=s,l.height=a,l.getContext(\"2d\").drawImage(o,0,0,s,a),u)l.toBlob(function(e){n(e,!0)},t.type);else{var d=e._toBlob(l,t.type);n(d,!0)}}else n(t,!1)},e._loadImage(o,t),!0}},{key:\"_toBlob\",value:function(e,t){var r=e.toDataURL(t).split(\",\"),n=void 0;n=r[0].indexOf(\"base64\")>=0?atob(r[1]):decodeURIComponent(r[1]);for(var o=new ArrayBuffer(n.length),i=new Uint8Array(o),u=0;u<n.length;u+=1)i[u]=n.charCodeAt(u);var c=r[0].split(\":\")[1].split(\";\")[0],l=null;if(s)l=new Blob([a?i:o],{type:c});else{var d=new BlobBuilder;d.append(o),l=d.getBlob(c)}return l}},{key:\"_loadImage\",value:function(e,t,r){if(\"undefined\"==typeof URL){var n=new FileReader;n.onload=function(t){e.src=t.target.result,r&&r()},n.readAsDataURL(t)}else e.src=URL.createObjectURL(t),r&&r()}},{key:\"isSupported\",value:function(){return\"undefined\"!=typeof HTMLCanvasElement&&c&&l}}]),e}();t.default=d,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=f(r(18)),o=f(r(78)),i=f(r(3)),s=f(r(5)),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),u=r(19),c=f(r(132)),l=f(r(133)),d=f(r(135));function f(e){return e&&e.__esModule?e:{default:e}}var p=a.getLogger(\"Syncher\"),h=function(){function e(t,r,n){(0,i.default)(this,e);var o=this;o._owner=t,o._bus=r,o._subURL=n.runtimeURL+\"/sm\",o._runtimeUrl=n.runtimeURL,o._p2pHandler=n.p2pHandler,o._p2pRequester=n.p2pRequester,o._reporters={},o._observers={},o._provisionals={},r.addListener(t,function(e){if(e.from!==t)switch(p.info(\"[Syncher] Syncher-RCV: \",e,o),e.type){case\"forward\":o._onForward(e);break;case\"create\":o._onRemoteCreate(e);break;case\"delete\":o._onRemoteDelete(e);break;case\"execute\":o._onExecute(e)}})}return(0,s.default)(e,[{key:\"create\",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:\"no name\",a=arguments[6],c=arguments[7];if(!e)throw Error(\"[Syncher - Create] - You need specify the data object schema\");if(!t)throw Error(\"[Syncher - Create] -The observers should be defined\");c=c||{};var l=(0,o.default)({},c);return l.p2p=i,l.store=n,l.schema=e,l.authorise=t,l.p2pHandler=this._p2pHandler,l.p2pRequester=this._p2pRequester,l.data=r?(0,u.deepClone)(r):{},l.name=0===s.length?\"no name\":s,l.reporter=c.hasOwnProperty(\"reporter\")&&\"boolean\"!=typeof c.reporter?c.reporter:this._owner,l.resume=!1,c?(l.mutual=!c.hasOwnProperty(\"mutual\")||c.mutual,l.name=c.hasOwnProperty(\"name\")?c.name:l.name):l.mutual=!0,c.hasOwnProperty(\"reuseURL\")&&(l.resource=c.reuseURL),a&&(l.identity=a),p.log(\"[syncher - create] - create Reporter - createInput: \",l),this._create(l)}},{key:\"resumeReporters\",value:function(e){return p.log(\"[syncher - create] - resume Reporter - criteria: \",e),(0,o.default)(e,{resume:!0}),this._resumeCreate(e)}},{key:\"subscribe\",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments[5],a={};return a.p2p=n,a.store=r,a.schema=e,a.resource=t,s&&(a.identity=s),a.mutual=i,p.log(\"[syncher - subscribe] - subscribe criteria: \",a),(0,o.default)(a,{resume:!1}),this._subscribe(a)}},{key:\"resumeObservers\",value:function(e){var t=e||{};return(0,o.default)(t,{resume:!0}),this._resumeSubscribe(t)}},{key:\"read\",value:function(e){var t=this,r={type:\"read\",from:t._owner,to:e};return new n.default(function(e,n){t._bus.postMessage(r,function(i){p.log(\"[Syncher.read] reply: \",i);var s={},a={},u=0;if(i.body.code<300)if(i.body.value.hasOwnProperty(\"responses\"))if(0===u)a=i.body.value,++u;else{delete i.body.value.responses;var c=void 0;for(c in i.body.value)s.hasOwnProperty(c)||(s[c]={}),(0,o.default)(s[c],i.body.value[c]);++u===a.responses&&(a.childrenObjects=s,delete a.responses,t._bus.removeResponseListener(r.from,i.id),e(a))}else t._bus.removeResponseListener(r.from,i.id),e(i.body.value);else n(i.body.desc)},!1)})}},{key:\"onNotification\",value:function(e){this._onNotificationHandler=e}},{key:\"onClose\",value:function(e){this._onClose=e}},{key:\"_create\",value:function(e){var t=this;return new n.default(function(r,n){var i=(0,o.default)({},e),s=e.resume;i.created=(new Date).toISOString(),i.runtime=t._runtimeUrl;var a=(0,u.deepClone)(i);delete a.p2p,delete a.store,delete a.observers,delete a.identity;var l={type:\"create\",from:t._owner,to:t._subURL,body:{resume:s,value:a}};l.body.schema=i.schema,i.p2p&&(l.body.p2p=i.p2p),i.store&&(l.body.store=i.store),i.identity&&(l.body.identity=i.identity),p.log(\"[syncher._create]: \",i,l),t._bus.postMessage(l,function(o){if(p.log(\"[syncher - create] - create-response: \",o),200===o.body.code){i.url=o.body.resource,i.status=\"live\",i.syncher=t,i.childrens=o.body.childrenResources;var s=t._reporters[i.url];s||(s=new c.default(i),t._reporters[i.url]=s),s.inviteObservers(e.authorise,e.p2p),r(s)}else n(o.body.desc)})})}},{key:\"_resumeCreate\",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i=e.resume,s={type:\"create\",from:r._owner,to:r._subURL,body:{resume:i}};p.log(\"[syncher - create]: \",e,s),e&&(s.body.value=e,e.hasOwnProperty(\"reporter\")?s.body.value.reporter=e.reporter:s.body.value.reporter=r._owner),e.p2p&&(s.body.p2p=e.p2p),e.store&&(s.body.store=e.store),e.observers&&(s.body.authorise=e.observers),e.identity&&(s.body.identity=e.identity),p.log(\"[syncher._resumeCreate] - resume message: \",s),r._bus.postMessage(s,function(e){if(p.log(\"[syncher._resumeCreate] - create-resumed-response: \",e),200===e.body.code){var i=e.body.value;for(var s in i){var a=i[s];a.data=(0,u.deepClone)(a.data)||{},a.childrenObjects&&(a.childrenObjects=(0,u.deepClone)(a.childrenObjects)),a.mutual=!1,a.resume=!0,a.status=\"live\",a.syncher=r,p.log(\"[syncher._resumeCreate] - create-resumed-dataObjectReporter\",a);var l=new c.default(a);a.childrenObjects&&l.resumeChildrens(a.childrenObjects),r._reporters[a.url]=l}n(r._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:\"_subscribe\",value:function(e){var t=this;return new n.default(function(r,n){var o={type:\"subscribe\",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty(\"p2p\")&&(o.body.p2p=e.p2p),e.hasOwnProperty(\"store\")&&(o.body.store=e.store),e.hasOwnProperty(\"schema\")&&(o.body.schema=e.schema),e.hasOwnProperty(\"identity\")&&(o.body.identity=e.identity),e.hasOwnProperty(\"resource\")&&(o.body.resource=e.resource)),o.body.resume=e.resume,e.hasOwnProperty(\"mutual\")&&(o.body.mutual=e.mutual),p.log(\"[syncher_subscribe] - subscribe message: \",e,o),t._bus.postMessage(o,function(o){p.log(\"[syncher] - subscribe-response: \",o);var i=o.body.resource,s=t._provisionals[i];if(delete t._provisionals[i],s&&s._releaseListeners(),o.body.code<200)p.log(\"[syncher] - new DataProvisional: \",o.body.childrenResources,i),s=new d.default(t._owner,i,t._bus,o.body.childrenResources),t._provisionals[i]=s;else if(200===o.body.code){p.log(\"[syncher] - new Data Object Observer: \",o,t._provisionals);var a=o.body.value;a.syncher=t,a.p2p=e.p2p,a.store=e.store,a.identity=e.identity,a.resume=!1,a.mutual=e.mutual;var u=t._observers[i];u?u.sync():(u=new l.default(a),t._observers[i]=u),p.log(\"[syncher] - new Data Object Observer already exist: \",u),r(u),s&&s.apply(u)}else n(o.body.desc)})})}},{key:\"_resumeSubscribe\",value:function(e){var t=this,r=this;return new n.default(function(n,o){var i={type:\"subscribe\",from:r._owner,to:r._subURL,body:{}};e&&(e.hasOwnProperty(\"p2p\")&&(i.body.p2p=e.p2p),e.hasOwnProperty(\"store\")&&(i.body.store=e.store),e.hasOwnProperty(\"schema\")&&(i.body.schema=e.schema),e.hasOwnProperty(\"identity\")&&(i.body.identity=e.identity),e.hasOwnProperty(\"resource\")&&(i.body.resource=e.url)),i.body.resume=e.resume;var s=e.mutual;e.hasOwnProperty(\"mutual\")&&(i.body.mutual=s),p.log(\"[syncher] - subscribe message: \",e,i),r._bus.postMessage(i,function(e){p.log(\"[syncher] - subscribe-resumed-response: \",e);var i=e.body.resource,s=r._provisionals[i];if(delete r._provisionals[i],s&&s._releaseListeners(),e.body.code<200)p.log(\"[syncher] - resume new DataProvisional: \",e,i),s=new d.default(r._owner,i,r._bus,e.body.childrenResources),r._provisionals[i]=s;else if(200===e.body.code){var a=e.body.value;for(var c in a){var f=a[c];p.log(\"[syncher] - Resume Object Observer: \",e,f,r._provisionals),f.childrenObjects&&(f.childrenObjects=(0,u.deepClone)(f.childrenObjects)),f.data=(0,u.deepClone)(f.data)||{},f.resume=!0,f.syncher=r,p.log(\"[syncher._resumeSubscribe] - create new dataObject: \",f);var h=new l.default(f);f.childrenObjects&&h.resumeChildrens(f.childrenObjects),p.log(\"[syncher._resumeSubscribe] - new dataObject\",h),r._observers[h.url]=h,r._provisionals[h.url]&&r._provisionals[h.url].apply(h)}n(r._observers),t._onObserversResume&&t._onObserversResume(r._observers)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:\"_onForward\",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:\"_onRemoteCreate\",value:function(e){var t=this,r=e.from.slice(0,-13),n=(0,u.divideURL)(r).domain,o={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:n}})}};t._onNotificationHandler&&(p.info(\"[Syncher] NOTIFICATION-EVENT: \",o),t._onNotificationHandler(o))}},{key:\"_onRemoteDelete\",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:\"unsubscribe\",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(p.log(\"NOTIFICATION-EVENT: \",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:\"_onExecute\",value:function(e){var t=this,r={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+\"/registry/\"||e.from===t._runtimeUrl+\"/registry\")&&e.body&&e.body.method&&\"close\"===e.body.method&&t._onClose){var n={type:\"close\",ack:function(e){e&&(r.body.code=e),t._bus.postMessage(r)}};p.info(\"[Syncher] Close-EVENT: \",n),t._onClose(n)}else t._bus.postMessage(r)}},{key:\"onReportersResume\",value:function(e){this._onReportersResume=e}},{key:\"onObserversResume\",value:function(e){this._onObserversResume=e}},{key:\"owner\",get:function(){return this._owner}},{key:\"reporters\",get:function(){return this._reporters}},{key:\"observers\",get:function(){return this._observers}}]),e}();t.default=h,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=y(r(42)),o=y(r(58)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=y(r(122)),h=r(19);function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger(\"DataObjectReporter\"),_=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._subscriptions={},n._syncObj.observe(function(e){v.log(\"[Syncher.DataObjectReporter] \"+n.url+\" publish change: \",e),n._onChange(e)}),n._allocateListeners(),n.invitations=[],n._childrenSizeThreshold=5e4,r}return(0,d.default)(t,e),(0,u.default)(t,[{key:\"_allocateListeners\",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),\"_allocateListeners\",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(v.log(\"[Syncher.DataObjectReporter] listener \"+e._url+\" Received: \",t),t.type){case\"response\":e._onResponse(t);break;case\"read\":e._onRead(t);break;case\"execute\":e._onExecute(t);break;case\"create\":e._onChildCreate(t)}})}},{key:\"_releaseListeners\",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),\"_releaseListeners\",this).call(this);this._objectListener.remove()}},{key:\"inviteObservers\",value:function(e,t){var r=this,n=e;n.length>0&&(v.log(\"[Syncher.DataObjectReporter] InviteObservers \",n,r._metadata),n.forEach(function(e){var n=new i.default(function(n,o){var i={type:\"create\",from:r._syncher._owner,to:r._syncher._subURL,body:{resume:!1,resource:r._url,schema:r._schema,value:r._metadata,authorise:[e]}};t&&(i.body.p2p=t),r.data.mutual||(i.body.mutual=r.data.mutual),r._bus.postMessage(i,function(t){v.log(\"[Syncher.DataObjectReporter] Invitation reply \",t);var r={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:\"Unknown\"};r.code<300?n(r):r.code>=300&&o(r)})});r.invitations.push(n)}))}},{key:\"delete\",value:function(){var e=this;e._deleteChildrens().then(function(t){v.log(t);var r={type:\"delete\",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(r,function(t){v.log(\"DataObjectReporter-DELETE: \",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:\"onSubscription\",value:function(e){this._onSubscriptionHandler=e}},{key:\"onResponse\",value:function(e){this._onResponseHandler=e}},{key:\"onRead\",value:function(e){this._onReadHandler=e}},{key:\"onExecute\",value:function(e){this._onExecuteHandler=e}},{key:\"_onForward\",value:function(e){switch(v.log(\"DataObjectReporter-RCV: \",e),e.body.type){case\"subscribe\":this._onSubscribe(e);break;case\"unsubscribe\":this._onUnSubscribe(e)}}},{key:\"_onSubscribe\",value:function(e){var t=this,r=e.body.from,n=(0,h.divideURL)(r),o=n.domain,i=!0;e.body.hasOwnProperty(\"mutual\")&&!e.body.mutual&&(i=!1),v.log(\"[DataObjectReporter._onSubscribe]\",e,o,n);var s={type:e.body.type,url:r,domain:o,identity:e.body.identity,nutual:i,accept:function(){var n={url:r,status:\"live\"};t._subscriptions[r]=n,t.metadata.subscriptions&&t.metadata.subscriptions.push(n.url);var o=(0,h.deepClone)(t._metadata);o.data=(0,h.deepClone)(t.data),o.version=t._version;var i={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:o}};return e.body.hasOwnProperty(\"mutual\")&&!e.body.mutual&&(i.body.mutual=e.body.mutual,t.data.mutual=!1),t._bus.postMessage(i),n},reject:function(r){t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:403,desc:r}})}};t._onSubscriptionHandler&&(v.log(\"SUBSCRIPTION-EVENT: \",s),t._onSubscriptionHandler(s))}},{key:\"_onUnSubscribe\",value:function(e){var t=e.body.from,r=(0,h.divideURL)(t),n=r.domain;v.log(\"[DataObjectReporter._onUnSubscribe]\",e,n,r),delete this._subscriptions[t],delete this.invitations[t];var o={type:e.body.type,url:t,domain:n,identity:e.body.identity};this._onSubscriptionHandler&&(v.log(\"UN-SUBSCRIPTION-EVENT: \",o),this._onSubscriptionHandler(o))}},{key:\"_onResponse\",value:function(e){var t={type:e.type,url:e.from,code:e.body.code};this._onResponseHandler&&(v.log(\"RESPONSE-EVENT: \",t),this._onResponseHandler(t))}},{key:\"_onRead\",value:function(e){var t=this,r=(0,o.default)(t.childrensJSON).length>t._childrenSizeThreshold,i={type:e.type,url:e.from,accept:function(){r?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(r){t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:401,desc:r}})}},s=[];t.metadata.subscriptions?s=t.metadata.subscriptions:t._subscriptions&&(s=(0,n.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=s.indexOf(e.from)?r?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(v.log(\"READ-EVENT: \",i),t._onReadHandler(i))}},{key:\"_syncReply\",value:function(e){var t=(0,h.deepClone)(this.metadata);t.data=(0,h.deepClone)(this.data),t.childrenObjects=(0,h.deepClone)(this.childrensJSON),t.version=this._version;var r={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:200,value:t}};this._bus.postMessage(r)}},{key:\"_syncReplyForLargeData\",value:function(e){var t=this,r=(0,h.deepClone)(t.metadata);r.data=(0,h.deepClone)(t.data),r.version=t._version,delete r.childrenObjects;var n=void 0,i=[],s={};for(n in t._childrenObjects){var a=void 0;for(a in s[n]={},t._childrenObjects[n])(0,o.default)(s).length>t._childrenSizeThreshold&&(i.push(s),(s={})[n]={}),s[n][a]={},s[n][a].value=t._childrenObjects[n][a].metadata,s[n][a].identity=t._childrenObjects[n][a].identity}i.push(s),r.responses=i.length+1;var u={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:100,value:r}};t._bus.postMessage(u),i.forEach(function(e){var n=(0,h.deepClone)(u);n.body.value=e,n.body.value.responses=r.responses,setTimeout(function(){t._bus.postMessage(n)},50)})}},{key:\"_onExecute\",value:function(e){var t=this;if(!e.body.method)throw e;var r={id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:200}},n={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(r)},reject:function(r){t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:401,desc:r}})}};t._onExecuteHandler&&(v.log(\"[DataObjectReporter] EXECUTE-EVENT: \",n),t._onExecuteHandler(n))}},{key:\"subscriptions\",get:function(){return this._subscriptions}},{key:\"childrensJSON\",get:function(){var e={},t=void 0;for(t in this._childrenObjects){var r=void 0;for(r in e[t]={},this._childrenObjects[t])e[t][r]={},e[t][r].value=this._childrenObjects[t][r].metadata,e[t][r].identity=this._childrenObjects[t][r].identity}return e}}]),t}(p.default);t.default=_,e.exports=t.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=y(r(42)),o=y(r(78)),i=y(r(18)),s=y(r(25)),a=y(r(3)),u=y(r(5)),c=y(r(33)),l=y(r(100)),d=y(r(34)),f=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),p=r(19),h=y(r(122));function y(e){return e&&e.__esModule?e:{default:e}}var v=f.getLogger(\"DataObjectObserver\"),_=\"any\",b=\"start\",m=\"exact\",g=function(e){function t(e){(0,a.default)(this,t);var r=(0,c.default)(this,(t.__proto__||(0,s.default)(t)).call(this,e)),n=r;return n._version=e.version,n._filters={},n._syncObj.observe(function(e){n._onFilter(e)}),n._allocateListeners(),r}return(0,d.default)(t,e),(0,u.default)(t,[{key:\"sync\",value:function(){var e=this;return v.info(\"[DataObjectObserver_sync] synchronising \"),new i.default(function(t,r){e._syncher.read(e._metadata.url).then(function(r){v.info(\"[DataObjectObserver_sync] value to sync: \",r),(0,o.default)(e.data,(0,p.deepClone)(r.data)),e._version=r.version,e._metadata.lastModified=r.lastModified,r.childrenObjects?(e.resumeChildrens(r.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){v.info(\"[DataObjectObserver_sync] sync failed: \",e),t(!1)})})}},{key:\"_storeChildrens\",value:function(){var e=this,t={};(0,n.default)(e._childrenObjects).forEach(function(r){var o=e._childrenObjects[r];t[r]={},(0,n.default)(o).forEach(function(e){t[r][e]={},t[r][e].value=o[e].metadata,t[r][e].identity=o[e].identity})});var r={from:e._owner,to:e._syncher._subURL,type:\"create\",body:{resource:e._url,attribute:\"childrenObjects\",value:t}};e._bus.postMessage(r)}},{key:\"_allocateListeners\",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),\"_allocateListeners\",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+\"/changes\",function(t){\"update\"===t.type&&(v.log(\"DataObjectObserver-\"+e._url+\"-RCV: \",t),e._changeObject(e._syncObj,t))})}},{key:\"_releaseListeners\",value:function(){(0,l.default)(t.prototype.__proto__||(0,s.default)(t.prototype),\"_releaseListeners\",this).call(this);this._changeListener.remove()}},{key:\"delete\",value:function(){var e=this;e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:\"unsubscribe\",value:function(){var e=this,t={type:\"unsubscribe\",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){v.log(\"DataObjectObserver-UNSUBSCRIBE: \",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:\"onChange\",value:function(e,t){var r=e,n={type:m,callback:t},o=e.indexOf(\"*\");o===e.length-1&&(0===o?n.type=_:(n.type=b,r=e.substr(0,e.length-1))),this._filters[r]=n}},{key:\"_onFilter\",value:function(e){var t=this;(0,n.default)(t._filters).forEach(function(r){var n=t._filters[r];n.type===_?n.callback(e):n.type===b?0===e.field.indexOf(r)&&n.callback(e):n.type===m&&e.field===r&&n.callback(e)})}},{key:\"onDisconnected\",value:function(e){var t=this;return new i.default(function(r,n){t._subscribeRegistration().then(function(){t._onDisconnected=e,r()}).catch(function(e){return n(e)})})}},{key:\"_subscribeRegistration\",value:function(){var e=this,t={type:\"subscribe\",from:this._owner,to:this._syncher._runtimeUrl+\"/subscriptions\",body:{resources:[this._url+\"/registration\"]}};return new i.default(function(r,n){e._bus.postMessage(t,function(t){v.log(\"[DataObjectObserver._subscribeRegistration] \"+e._url+\" rcved reply \",t),200===t.body.code?(e._generateListener(e._url+\"/registration\"),r()):(v.error(\"Error subscribing registration status for \",e._url),n(\"Error subscribing registration status for \"+e._url))})})}},{key:\"_generateListener\",value:function(e){var t=this;t._bus.addListener(e,function(e){v.log(\"[DataObjectObserver.registrationNotification] \"+t._url+\": \",e),e.body.value&&\"disconnected\"===e.body.value&&t._onDisconnected&&(v.log(\"[DataObjectObserver] \"+t._url+\": was disconnected \",e),t._onDisconnected())})}},{key:\"execute\",value:function(e,t){var r=this,n=this;return new i.default(function(o,i){var s={type:\"execute\",from:r._owner,to:n._url,body:{method:e,params:t}};n._bus.postMessage(s,function(t){v.log(\"[DataObjectObserver.execute] \"+n._url+\" rcved reply \",t),200===t.body.code?o():(v.warn(\"[DataObjectObserver.execute] execution of method \"+e+\" was reject by reporter\"),i(\"[DataObjectObserver.execute] execution of method \"+e+\" was reject by reporter\"))})})}}]),t}(h.default);t.default=g,e.exports=t.default},,function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=i(r(3)),o=i(r(5));function i(e){return e&&e.__esModule?e:{default:e}}var s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)).getLogger(\"DataProvisional\"),a=function(){function e(t,r,o,i){(0,n.default)(this,e);this._owner=t,this._url=r,this._bus=o,this._children=i,this._changes=[],this._allocateListeners()}return(0,o.default)(e,[{key:\"_allocateListeners\",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){s.log(\"DataProvisional-\"+e._url+\"-RCV: \",t),e._changes.push(t)})}},{key:\"_releaseListeners\",value:function(){this._listener.remove()}},{key:\"apply\",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:\"children\",get:function(){return this._children}}]),e}();t.default=a,e.exports=t.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.NotificationHandler=t.DataObjectObserver=t.DataObjectReporter=t.Syncher=void 0;var n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(r(22)),o=u(r(131)),i=u(r(132)),s=u(r(133)),a=u(r(197));function u(e){return e&&e.__esModule?e:{default:e}}var c=n.getLogger(\"Syncher\"),l=n.getLogger(\"DataObject\"),d=n.getLogger(\"DataObjectChild\"),f=n.getLogger(\"DataObjectObserver\"),p=n.getLogger(\"DataObjectReporter\"),h=n.getLogger(\"DataProvisional\");c.setLevel(0),l.setLevel(0),d.setLevel(0),f.setLevel(0),p.setLevel(0),h.setLevel(0),t.Syncher=o.default,t.DataObjectReporter=i.default,t.DataObjectObserver=s.default,t.NotificationHandler=a.default},function(e,t,r){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var n=s(r(3)),o=s(r(5)),i=r(19);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(){function e(t){if((0,n.default)(this,e),!t)throw Error(\"[NotificationHandler Constructor] bus input is mandatory\");this._bus=t,this._onNotificationHandler={}}return(0,o.default)(e,[{key:\"onNotification\",value:function(e,t){this._onNotificationHandler[e]=t}},{key:\"onCreate\",value:function(e){var t=this,r=e.body.hasOwnProperty(\"resource\")?e.body.resource:e.from.slice(0,-13),n=(0,i.divideURL)(r).domain,o=r.split(\"://\")[0],s=function(r){t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:400,desc:\"Bad Request: \"+r}})};e.body.hasOwnProperty(\"source\")||s(\"Missing source\"),e.body.hasOwnProperty(\"schema\")||s(\"Missing schema\"),e.body.hasOwnProperty(\"value\")||s(\"Missing value\"),e.body.hasOwnProperty(\"identity\")||s(\"Missing identity\");var a={type:e.type,from:e.body.source,url:r,domain:n,schema:e.body.schema,value:e.body.value,identity:e.body.identity,to:e.to,via:e.body.via,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:n}})},error:function(e){s(e)}};t._onNotificationHandler[o]&&(console.info(\"[NotificationHandler] NOTIFICATION-EVENT: \",a),t._onNotificationHandler[o](a))}},{key:\"onDelete\",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:\"unsubscribe\",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(log.log(\"NOTIFICATION-EVENT: \",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:\"response\",from:e.to,to:e.from,body:{code:404,source:t._owner}})}}]),e}();t.default=a,e.exports=t.default}])});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi92ZXJ0eF9hcHBfc3R1Yi9ub2RlX21vZHVsZXMvc2VydmljZS1mcmFtZXdvcmsvZGlzdC9TeW5jaGVyLmpzPzA4ZjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLGVBQWUsbUpBQStMLG9CQUFvQiwrQ0FBK0MsbUJBQW1CLFNBQVMsY0FBYyw0QkFBNEIsWUFBWSxxQkFBcUIsMkRBQTJELHVDQUF1QyxxQ0FBcUMsb0NBQW9DLEVBQUUsaUJBQWlCLGlDQUFpQyxpQkFBaUIsWUFBWSxVQUFVLHNCQUFzQixtQkFBbUIsaURBQWlELG1CQUFtQixnQkFBZ0IsaUJBQWlCLGlCQUFpQiw4QkFBOEIsZUFBZSw4SUFBOEksOEJBQThCLGlCQUFpQixnRUFBZ0UsdUJBQXVCLGtEQUFrRCxVQUFVLGlCQUFpQixhQUFhLHdDQUF3QywrRUFBK0UsaUJBQWlCLDRCQUE0QixrQ0FBa0MsTUFBTSxlQUFlLFVBQVUsSUFBSSxFQUFFLGlCQUFpQixhQUFhLGdCQUFnQixrQkFBa0IsMEJBQTBCLFdBQVcsUUFBUSxxQkFBcUIsZ0JBQWdCLFlBQVksV0FBVyxLQUFLLFdBQVcsdUdBQXVHLHVCQUF1Qix3Q0FBd0MsR0FBRyxpQkFBaUIsNERBQTRELDhFQUE4RSxzQ0FBc0MsWUFBWSw2SUFBNkksc0JBQXNCLHNCQUFzQix5QkFBeUIsb0JBQW9CLHVCQUF1Qix5QkFBeUIsb0JBQW9CLGdDQUFnQyxpQ0FBaUMsOEVBQThFLHFDQUFxQyxpRUFBaUUsZUFBZSxzQkFBc0Isd0RBQXdELGlCQUFpQixtREFBbUQsK0NBQStDLDZCQUE2QixnQkFBZ0IsVUFBVSxvRUFBb0UscUNBQXFDLGlCQUFpQixXQUFXLHNCQUFzQixpREFBaUQsVUFBVSxlQUFlLFFBQVEsZ0JBQWdCLHdCQUF3QixvQkFBb0IsaUJBQWlCLG1CQUFtQiwrQkFBK0IsdUJBQXVCLGlCQUFpQixpQkFBaUIsaUJBQWlCLG9CQUFvQixzQkFBc0IsZ0JBQWdCLGVBQWUsc0JBQXNCLElBQUksWUFBWSxTQUFTLFdBQVcsaUJBQWlCLFlBQVksMEJBQTBCLDRCQUE0QixVQUFVLDBCQUEwQixvQkFBb0IsNEJBQTRCLHNCQUFzQiw4QkFBOEIsd0JBQXdCLGtCQUFrQiw4QkFBOEIsZUFBZSxhQUFhLGVBQWUsd0JBQXdCLE9BQU8sZ0VBQWdFLGVBQWUsYUFBYSxpQkFBaUIsV0FBVyw4QkFBOEIsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSwwQkFBMEIsY0FBYywwQkFBMEIsV0FBVyxjQUFjLGNBQWMsc0VBQXNFLE1BQU0sdURBQXVELFdBQVcsa0NBQWtDLE9BQU8sOEJBQThCLGtIQUFrSCx1RUFBdUUseUZBQXlGLHFDQUFxQyxjQUFjLHFCQUFxQiwrREFBK0Qsd0NBQXdDLHFCQUFxQixPQUFPLDREQUE0RCwyQkFBMkIsbUNBQW1DLHlCQUF5Qix5Q0FBeUMsMkRBQTJELFdBQVcsK0NBQStDLGdDQUFnQyxpQ0FBaUMsV0FBVyxpQ0FBaUMsaUNBQWlDLFlBQVksOEJBQThCLG1FQUFtRSxJQUFJLGdFQUFnRSxLQUFLLFlBQVksS0FBSyxpQ0FBaUMsbUNBQW1DLEtBQUssaUJBQWlCLHFCQUFxQiw4REFBOEQsaUJBQWlCLEVBQUUsYUFBYSxzQkFBc0Isb0RBQW9ELG9CQUFvQixFQUFFLEVBQUUsa0VBQWtFLCtCQUErQixzQkFBc0IsK0VBQStFLDJCQUEyQiwyQkFBMkIsbUdBQW1HLGVBQWUseUJBQXlCLHFCQUFxQixpQkFBaUIsb0JBQW9CLG1DQUFtQyxlQUFlLGVBQWUsUUFBUSxVQUFVLHNCQUFzQiw4QkFBOEIsaUJBQWlCLFFBQVEsZUFBZSxhQUFhLHNFQUFzRSxjQUFjLGFBQWEsa0JBQWtCLHlEQUF5RCxnQkFBZ0IsV0FBVyw4Q0FBOEMsSUFBSSx5Q0FBeUMsU0FBUyxrQkFBa0IseURBQXlELGdCQUFnQixZQUFZLFdBQVcsS0FBSyxXQUFXLHdDQUF3QyxvQkFBb0Isa0JBQWtCLG1CQUFtQiw0SEFBNEgscUJBQXFCLGtCQUFrQixzRUFBc0UsdUJBQXVCLGtCQUFrQiwwQkFBMEIsYUFBYSxNQUFNLHNCQUFzQixJQUFJLHlCQUF5QixVQUFVLG9CQUFvQixvRUFBb0UsaUJBQWlCLDBCQUEwQixVQUFVLDJDQUEyQyxpQ0FBaUMsK0NBQStDLDRDQUE0QyxTQUFTLDBCQUEwQiw2TEFBNkwsMkJBQTJCLHFDQUFxQyxzQkFBc0IsSUFBSSxzQ0FBc0MsVUFBVSxJQUFJLHFEQUFxRCxFQUFFLFlBQVksaUdBQWlHLCtCQUErQixzQkFBc0IseUJBQXlCLDZCQUE2QiwwQkFBMEIsK0JBQStCLFVBQVUsK0NBQStDLGlCQUFpQix3QkFBd0Isb0dBQW9HLFdBQVcsNERBQTRELDBDQUEwQywrQkFBK0IsMkRBQTJELHlCQUF5QixTQUFTLEdBQUcsRUFBRSxlQUFlLHdCQUF3QixzQkFBc0IsbUVBQW1FLGVBQWUsc0JBQXNCLGlFQUFpRSxVQUFVLGlCQUFpQixXQUFXLDZCQUE2QixpQkFBaUIsMkNBQTJDLDBCQUEwQixtQ0FBbUMsd0JBQXdCLEdBQUcsaUJBQWlCLFdBQVcsd0JBQXdCLGtCQUFrQixRQUFRLGlFQUFpRSw2REFBNkQsa0VBQWtFLDREQUE0RCxpQkFBaUIsc0RBQXNELHNCQUFzQixnQ0FBZ0MsZUFBZSxNQUFNLHNCQUFzQixlQUFlLHNCQUFzQix5REFBeUQsVUFBVSxlQUFlLDZCQUE2QixzQkFBc0IsbUNBQW1DLGlCQUFpQixZQUFZLHNCQUFzQixxQkFBcUIsaUJBQWlCLGFBQWEsZ0JBQWdCLGtCQUFrQiwwQkFBMEIsV0FBVyxRQUFRLHdCQUF3Qiw0RkFBNEYsMEZBQTBGLGlCQUFpQixhQUFhLGdCQUFnQixxQ0FBcUMsY0FBYywwQkFBMEIsV0FBVyx3QkFBd0IsNEpBQTRKLDBDQUEwQyxhQUFhLG1EQUFtRCxtREFBbUQsaUJBQWlCLDRCQUE0QixzQkFBc0IsMEJBQTBCLGlCQUFpQix3RUFBd0UsRUFBRSx5QkFBeUIsa0NBQWtDLEVBQUUsdUJBQXVCLDhGQUE4RixFQUFFLGVBQWUscUhBQXFILGlCQUFpQiw2REFBNkQsY0FBYyxtQ0FBbUMsdUtBQXVLLElBQUksMEJBQTBCLFlBQVksdUNBQXVDLE1BQU0sOEZBQThGLGlCQUFpQixtQ0FBbUMsa0RBQWtELGVBQWUsVUFBVSxJQUFJLEVBQUUsaUJBQWlCLFNBQVMsaUJBQWlCLDJDQUEyQyxzQkFBc0IsOEJBQThCLGFBQWEsRUFBRSxpQ0FBaUMsYUFBYSxHQUFHLGlCQUFpQixXQUFXLDZCQUE2QixlQUFlLGlDQUFpQyxpQkFBaUIsMEJBQTBCLHdCQUF3QixtQkFBbUIscUJBQXFCLGlDQUFpQyxLQUFLLGVBQWUsaUJBQWlCLG9EQUFvRCx3QkFBd0Isc0JBQXNCLG1DQUFtQyxLQUFLLFdBQVcscUNBQXFDLFVBQVUsaUJBQWlCLHNGQUFzRix5QkFBeUIsMEJBQTBCLGNBQWMsVUFBVSx5Q0FBeUMsaUJBQWlCLGFBQWEsZ0JBQWdCLGlHQUFpRyxnQkFBZ0IsYUFBYSw4R0FBOEcsY0FBYywwQkFBMEIsV0FBVyw0RUFBNEUsbUNBQW1DLGFBQWEsaUlBQWlJLGlCQUFpQixhQUFhLG1JQUFtSSxhQUFhLGtDQUFrQyxTQUFTLHdCQUF3QiwwQkFBMEIsVUFBVSwwQ0FBMEMsc0JBQXNCLGtCQUFrQixzQkFBc0Isb0pBQW9KLG9KQUFvSixvQkFBb0Isc0RBQXNELG9EQUFvRCxrQ0FBa0MsMkJBQTJCLFVBQVUsaUJBQWlCLHVCQUF1QixzQkFBc0IsdUNBQXVDLGlCQUFpQixnQkFBZ0IsaUJBQWlCLGFBQWEsWUFBWSx3QkFBd0IsdUJBQXVCLFFBQVEsaUNBQWlDLHFFQUFxRSxRQUFRLHFDQUFxQyxLQUFLLGlCQUFpQixhQUFhLGdCQUFnQixrQ0FBa0MsNEJBQTRCLFlBQVksMEJBQTBCLG9CQUFvQixxQkFBcUIsOEJBQThCLGdCQUFnQixFQUFFLEVBQUUsaUJBQWlCLDJEQUEyRCw2Q0FBNkMsMklBQTJJLGlCQUFpQixNQUFNLDhmQUE4ZixXQUFXLEtBQUssbUNBQW1DLGlDQUFpQyxpQkFBaUIsWUFBWSxpRUFBaUUsNENBQTRDLGlCQUFpQixvQkFBb0IsK0JBQStCLGlCQUFpQixpREFBaUQsNENBQTRDLGVBQWUsaUJBQWlCLFdBQVcsNkJBQTZCLGlCQUFpQixXQUFXLDZCQUE2QixnQkFBZ0IsaUJBQWlCLE1BQU0sa0JBQWtCLDBCQUEwQixnQ0FBZ0MsaUJBQWlCLFdBQVcsMEJBQTBCLHNCQUFzQixFQUFFLGlCQUFpQiw4REFBOEQsaUJBQWlCLElBQUksc0JBQXNCLFVBQVUsK0VBQStFLElBQUksWUFBWSxXQUFXLHlGQUF5RixpQkFBaUIsNEJBQTRCLHNCQUFzQix1QkFBdUIsb0NBQW9DLFlBQVksS0FBSyxJQUFJLDJCQUEyQixVQUFVLElBQUksNENBQTRDLGVBQWUsaUJBQWlCLGtDQUFrQyx3QkFBd0Isa0NBQWtDLGlCQUFpQixxQ0FBcUMsd0JBQXdCLHlCQUF5QiwrQ0FBK0MsaUJBQWlCLDBJQUEwSSxjQUFjLFlBQVksd0JBQXdCLFdBQVcsaUJBQWlCLGVBQWUsZ0JBQWdCLHFCQUFxQixpQkFBaUIsbUJBQW1CLHdCQUF3Qix5QkFBeUIsd0NBQXdDLFFBQVEsZUFBZSxZQUFZLG1DQUFtQyxxQkFBcUIsd0JBQXdCLGdCQUFnQixzSkFBc0osd0JBQXdCLHNGQUFzRix5REFBeUQsK0JBQStCLGFBQWEsdUJBQXVCLGFBQWEsZUFBZSxlQUFlLHNCQUFzQixJQUFJLE9BQU8sWUFBWSxTQUFTLE9BQU8sWUFBWSxpQkFBaUIsMEJBQTBCLHdCQUF3Qix5Q0FBeUMsYUFBYSxrQ0FBa0MsaUJBQWlCLG9CQUFvQixzQkFBc0IscUJBQXFCLHlDQUF5Qyw4S0FBOEssaUJBQWlCLGFBQWEsaUNBQWlDLG9DQUFvQyxZQUFZLDRCQUE0QixpQkFBaUIsWUFBWSxzQkFBc0IsaUJBQWlCLDBCQUEwQixxREFBcUQsS0FBSyxnQ0FBZ0MsSUFBSSxzQkFBc0IsVUFBVSxpQkFBaUIsYUFBYSxvQ0FBb0MsNENBQTRDLGlDQUFpQyxZQUFZLG9DQUFvQyx1RkFBdUYsa0VBQWtFLGVBQWUsdUJBQXVCLGVBQWUsd0JBQXdCLE9BQU8sbUJBQW1CLGlCQUFpQiw4QkFBOEIseUJBQXlCLEVBQUUsc0JBQXNCLHVDQUF1QyxpQkFBaUIsa0ZBQWtGLFNBQVMscUJBQXFCLG9DQUFvQyxHQUFHLGdCQUFnQixPQUFPLE9BQU8saUJBQWlCLEVBQUUsY0FBYyxvQ0FBb0MsbUVBQW1FLFlBQVksbUJBQW1CLGdCQUFnQixLQUFLLGNBQWMsdUJBQXVCLFlBQVksa0JBQWtCLGVBQWUsS0FBSyxjQUFjLHNCQUFzQiwwQ0FBMEMsaUJBQWlCLFdBQVcsOEJBQThCLGlCQUFpQixXQUFXLDZCQUE2QixpQkFBaUIsMENBQTBDLGlCQUFpQixXQUFXLDZCQUE2QixpQkFBaUIsOENBQThDLGlCQUFpQixhQUFhLHNTQUFzUyxpTUFBaU0sZ0JBQWdCLE1BQU0sZUFBZSxtQkFBbUIsUUFBUSxLQUFLLEtBQUssa0JBQWtCLGFBQWEsMkNBQTJDLGlCQUFpQiwwQkFBMEIsZ0JBQWdCLDhDQUE4Qyx5QkFBeUIsYUFBYSxzQkFBc0IsbUJBQW1CLHNHQUFzRyxtQkFBbUIsd0JBQXdCLGtDQUFrQyxpQkFBaUIsS0FBSyxxQ0FBcUMsSUFBSSxvQkFBb0IsU0FBUyxlQUFlLDZCQUE2QiwwRkFBMEYsaUJBQWlCLDRDQUE0QyxhQUFhLHlEQUF5RCxlQUFlLDZCQUE2QixXQUFXLHNDQUFzQyxTQUFTLGVBQWUseUNBQXlDLFdBQVcsMENBQTBDLFVBQVUsb0JBQW9CLHFFQUFxRSw4REFBOEQsaUZBQWlGLG9CQUFvQixzQkFBc0IsT0FBTyxrQ0FBa0MsZUFBZSw0R0FBNEcsZUFBZSxvQkFBb0IsU0FBUyxFQUFFLDJJQUEySSxZQUFZLFlBQVksMkJBQTJCLGFBQWEsYUFBYSx1QkFBdUIsZ0JBQWdCLGlDQUFpQyxvQkFBb0IsZ0RBQWdELG9DQUFvQyxzQkFBc0IsS0FBSyxzQkFBc0IsTUFBTSx5QkFBeUIscUJBQXFCLGlDQUFpQyw4R0FBOEcsaUNBQWlDLFVBQVUsMkJBQTJCLE1BQU0sSUFBSSxNQUFNLGdCQUFnQixXQUFXLHNCQUFzQixzQkFBc0IsbUJBQW1CLHdCQUF3QixvRUFBb0UsNkRBQTZELHVCQUF1QiwrR0FBK0csaUJBQWlCLDRCQUE0QixzQkFBc0IsaUJBQWlCLGdDQUFnQyxXQUFXLCtCQUErQixVQUFVLGlCQUFpQixZQUFZLHFDQUFxQyxxQkFBcUIsaUJBQWlCLDBCQUEwQiw4R0FBOEcsd0JBQXdCLG1EQUFtRCxJQUFJLFlBQVksU0FBUyxrQkFBa0IsYUFBYSxpQkFBaUIsdUJBQXVCLGlCQUFpQixvQkFBb0IsaUJBQWlCLGlDQUFpQyxpQkFBaUIsb0JBQW9CLHdCQUF3QixtQkFBbUIsZ0JBQWdCLEVBQUUsaUJBQWlCLDJDQUEyQyxpQkFBaUIsb0JBQW9CLGtDQUFrQyxtQkFBbUIsZ0JBQWdCLEVBQUUsaUJBQWlCLFdBQVcsNkJBQTZCLGlCQUFpQiwyQ0FBMkMsaUJBQWlCLFdBQVcsZ0JBQWdCLHlCQUF5QixFQUFFLGlCQUFpQixrQ0FBa0Msd0VBQXdFLFdBQVcsMkNBQTJDLGlCQUFpQixJQUFJLG1HQUFtRyxTQUFTLEtBQUsscUJBQXFCLHdDQUF3QyxHQUFHLHNCQUFzQixpQkFBaUIsV0FBVyw2QkFBNkIsaUJBQWlCLE1BQU0sa0JBQWtCLHdCQUF3QixzQkFBc0IsaUJBQWlCLFdBQVcsZ0JBQWdCLGFBQWEsRUFBRSxpQkFBaUIsYUFBYSxnQkFBZ0IsMkJBQTJCLGNBQWMsMEJBQTBCLFdBQVcsNEJBQTRCLGlDQUFpQyx5QkFBeUIsZUFBZSx1QkFBdUIsZ0NBQWdDLDhCQUE4QixZQUFZLG9DQUFvQyxpQkFBaUIsdUNBQXVDLDZDQUE2QyxvREFBb0QsaUJBQWlCLDhEQUE4RCxpQkFBaUIsYUFBYSx1UEFBdVAsd0JBQXdCLElBQUksc0NBQXNDLCtCQUErQixRQUFRLDhIQUE4SCxXQUFXLGlCQUFpQixNQUFNLGdEQUFnRCxpQkFBaUIsVUFBVSxRQUFRLFdBQVcsYUFBYSwyQ0FBMkMsNERBQTRELElBQUksNkpBQTZKLFNBQVMsdUJBQXVCLFdBQVcsV0FBVywrQkFBK0IsR0FBRyxlQUFlLG9CQUFvQix3QkFBd0Isc0JBQXNCLGlFQUFpRSxtQkFBbUIsbUVBQW1FLGlEQUFpRCxFQUFFLGVBQWUseUNBQXlDLGVBQWUsb0JBQW9CLE1BQU0sNERBQTRELHNCQUFzQixFQUFFLEVBQUUsZUFBZSxXQUFXLDBFQUEwRSxlQUFlLGFBQWEsVUFBVSxrQkFBa0IsSUFBSSxxREFBcUQsc0JBQXNCLE9BQU8sWUFBWSxJQUFJLDRCQUE0QixTQUFTLGFBQWEsMEJBQTBCLFNBQVMsUUFBUSxXQUFXLE9BQU8sa0JBQWtCLDJDQUEyQyxJQUFJLDJCQUEyQixTQUFTLGdCQUFnQixnQkFBZ0IsbUZBQW1GLGdDQUFnQyxtQkFBbUIsbUJBQW1CLHFLQUFxSyxtQkFBbUIsNEJBQTRCLGVBQWUsWUFBWSwwREFBMEQsbUJBQW1CLGtDQUFrQyxvQkFBb0IsVUFBVSw4RUFBOEUsbUJBQW1CLGNBQWMsaUNBQWlDLCtCQUErQixvQkFBb0IsZ0NBQWdDLG9DQUFvQyxrQkFBa0IsY0FBYyxnQkFBZ0Isd0RBQXdELGlCQUFpQixtQkFBbUIsZUFBZSxpREFBaUQsMkJBQTJCLElBQUksWUFBWSxFQUFFLDZCQUE2QixrQkFBa0IsNENBQTRDLG1CQUFtQiwrQkFBK0IsRUFBRSxFQUFFLDhCQUE4QixFQUFFLGVBQWUsNEJBQTRCLHNGQUFzRixVQUFVLGlCQUFpQiwwREFBMEQsTUFBTSxpQ0FBaUMsMkJBQTJCLFNBQVMseUJBQXlCLCtEQUErRCxTQUFTLGtCQUFrQixJQUFJLDhEQUE4RCxxQkFBcUIsbUJBQW1CLDZDQUE2QyxxQkFBcUIsaUJBQWlCLFdBQVcsNEJBQTRCLElBQUksOEJBQThCLFNBQVMsZUFBZSxtQ0FBbUMsaUJBQWlCLGlEQUFpRCxzQkFBc0IsNENBQTRDLGVBQWUsMEJBQTBCLGlCQUFpQixpQkFBaUIsOEJBQThCLHVDQUF1QyxpREFBaUQsMkRBQTJELHFFQUFxRSxxQkFBcUIsaUJBQWlCLG9IQUFvSCxxQkFBcUIsdUJBQXVCLFFBQVEsOEJBQThCLEVBQUUsRUFBRSxnQkFBZ0IsSUFBSSxJQUFJLFNBQVMsd0JBQXdCLHVCQUF1QixrQkFBa0IsZUFBZSxpRUFBaUUsd0JBQXdCLGFBQWEsV0FBVyxrQkFBa0IsYUFBYSxLQUFLLHVDQUF1QyxvQkFBb0IsaUJBQWlCLGVBQWUsYUFBYSxtQkFBbUIsT0FBTyxrQkFBa0IsaUNBQWlDLGlCQUFpQixxQkFBcUIsNkJBQTZCLGlCQUFpQixZQUFZLDBCQUEwQiw2Q0FBNkMsVUFBVSxpQkFBaUIsYUFBYSxrREFBa0Qsc0JBQXNCLHdDQUF3QyxzQkFBc0IsK0JBQStCLGFBQWEsR0FBRyxpQkFBaUIsNEJBQTRCLElBQUksZUFBZSxvQkFBb0IsS0FBSyx5QkFBeUIsUUFBUSxFQUFFLFVBQVUsd0JBQXdCLG1CQUFtQixTQUFTLElBQUksbUJBQW1CLGtCQUFrQixPQUFPLFdBQVcsaUJBQWlCLFNBQVMsTUFBTSxVQUFVLFVBQVUsaUJBQWlCLGFBQWEseUNBQXlDLHFCQUFxQixvQkFBb0IsMERBQTBELCtCQUErQixnQ0FBZ0MsU0FBUyxFQUFFLGlCQUFpQixnQ0FBZ0MsUUFBUSxFQUFFLEtBQUssRUFBRSxpQkFBaUIsYUFBYSwyQkFBMkIsaUJBQWlCLGdCQUFnQix1QkFBdUIsK0NBQStDLEVBQUUsa0JBQWtCLGFBQWEsc0NBQXNDLFNBQVMsbUNBQW1DLHdCQUF3QixPQUFPLFlBQVksY0FBYywwQkFBMEIsV0FBVyxpQkFBaUIsY0FBYyxzQkFBc0IsbUNBQW1DLGlCQUFpQixtQ0FBbUMsd0JBQXdCLGdDQUFnQyx5QkFBeUIsRUFBRSw2QkFBNkIsK0JBQStCLCtCQUErQixFQUFFLG1DQUFtQyxRQUFRLDRCQUE0QixzREFBc0QsRUFBRSx1Q0FBdUMsaUJBQWlCLDZCQUE2QixPQUFPLEtBQUssRUFBRSx5Q0FBeUMsV0FBVyw0Q0FBNEMsb0JBQW9CLGdCQUFnQixFQUFFLEdBQUcsRUFBRSxtQ0FBbUMsb0NBQW9DLEtBQUssR0FBRyxFQUFFLG1DQUFtQyx3QkFBd0Isd0VBQXdFLDRCQUE0QiwyREFBMkQsc0NBQXNDLG1DQUFtQyxtQ0FBbUMsc0NBQXNDLCtCQUErQixHQUFHLEVBQUUsMEJBQTBCLG1CQUFtQixLQUFLLG1CQUFtQiwwQ0FBMEMsaUJBQWlCLCtCQUErQixZQUFZLGlCQUFpQixhQUFhLHNDQUFzQyxTQUFTLEVBQUUsaURBQWlELDRCQUE0QixTQUFTLGlGQUFpRixxQkFBcUIsNEJBQTRCLGNBQWMsMEJBQTBCLFdBQVcsa0RBQWtELGNBQWMsc0JBQXNCLGNBQWMsOERBQThELDByQkFBMHJCLDBPQUEwTyx3QkFBd0IsOEJBQThCLFdBQVcsNkNBQTZDLGFBQWEseUVBQXlFLGlCQUFpQixjQUFjLE9BQU8sa0RBQWtELHlCQUF5QixpUEFBaVAsd0RBQXdELHVCQUF1Qiw2R0FBNkcsT0FBTyx5RkFBeUYsa0NBQWtDLEtBQUssc0JBQXNCLHdDQUF3QyxVQUFVLHVCQUF1QixFQUFFLE1BQU0sR0FBRyxFQUFFLDZCQUE2QixRQUFRLGdEQUFnRCwrQ0FBK0MsT0FBTyx1RkFBdUYsb0RBQW9ELDhEQUE4RCxFQUFFLDBDQUEwQyxXQUFXLGdGQUFnRixnR0FBZ0csSUFBSSxFQUFFLHlDQUF5Qyx5Q0FBeUMsRUFBRSw4QkFBOEIsMEJBQTBCLEVBQUUsaUNBQWlDLGtDQUFrQyxnREFBZ0QsR0FBRyxFQUFFLG1DQUFtQywyQkFBMkIsRUFBRSxvQ0FBb0MsT0FBTyxnREFBZ0QscURBQXFELEVBQUUsK0JBQStCLG9CQUFvQiwyQkFBMkIsRUFBRSw4QkFBOEIsdUJBQXVCLEVBQUUsNkJBQTZCLHNCQUFzQixFQUFFLG1DQUFtQyw0QkFBNEIsRUFBRSwwQkFBMEIsMkJBQTJCLEVBQUUsK0JBQStCLGlCQUFpQixnQkFBZ0IsdUJBQXVCLEtBQUssR0FBRyxnQ0FBZ0MsaUJBQWlCLG9DQUFvQyxpQkFBaUIsV0FBVyxvQkFBb0IsY0FBYyxFQUFFLGlCQUFpQixhQUFhLDREQUE0RCwrQkFBK0IsUUFBUSxLQUFLLHFDQUFxQyw4Q0FBOEMsT0FBTyxTQUFTLHdCQUF3QixpQkFBaUIsZ0JBQWdCLGtEQUFrRCxJQUFJLHlFQUF5RSxJQUFJLGlDQUFpQyxTQUFTLEdBQUcsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSxrRkFBa0YsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQix3REFBd0QsY0FBYywwQkFBMEIsV0FBVyw2Q0FBNkMsY0FBYyxzQkFBc0IsY0FBYyx5REFBeUQsNFlBQTRZLGt1QkFBa3VCLHVCQUF1Qix3QkFBd0IsdUNBQXVDLGdDQUFnQyxxREFBcUQsdURBQXVELDJCQUEyQixFQUFFLDBDQUEwQyx3Q0FBd0MsMEdBQTBHLDZDQUE2Qyx5RUFBeUUsaUNBQWlDLE1BQU0sc0JBQXNCLE1BQU0sOEJBQThCLEVBQUUsNkJBQTZCLEdBQUcsRUFBRSx5Q0FBeUMsV0FBVyx5Q0FBeUMsV0FBVyx3REFBd0QseURBQXlELDZDQUE2QyxFQUFFLEdBQUcsRUFBRSx3Q0FBd0Msa0RBQWtELHFDQUFxQyxXQUFXLHFDQUFxQyxTQUFTLCtEQUErRCx3WkFBd1osRUFBRSx5Q0FBeUMsRUFBRSxxQ0FBcUMsY0FBYyx1Q0FBdUMsdUJBQXVCLHNCQUFzQixPQUFPLG1HQUFtRyxtR0FBbUcsRUFBRSwrQ0FBK0MsY0FBYyx1Q0FBdUMsOEVBQThFLHNCQUFzQixPQUFPLG1HQUFtRyxtR0FBbUcsRUFBRSw2QkFBNkIsd0JBQXdCLEVBQUUsOEJBQThCLHdCQUF3QixFQUFFLDRCQUE0Qix3QkFBd0IsRUFBRSx1Q0FBdUMsb0JBQW9CLGlDQUFpQyxrREFBa0Qsb0lBQW9JLGVBQWUscUJBQXFCLEVBQUUsaUVBQWlFLHNDQUFzQyxHQUFHLEVBQUUsd0NBQXdDLGdCQUFnQixpQ0FBaUMsZ0JBQWdCLGtEQUFrRCxhQUFhLHNCQUFzQixhQUFhLHlCQUF5Qix3QkFBd0IsK0hBQStILCtGQUErRix3Q0FBd0MsdURBQXVELEdBQUcsRUFBRSx1Q0FBdUMsc0JBQXNCLElBQUksMFNBQTBTLEVBQUUsbURBQW1ELFdBQVcsaUNBQWlDLDJEQUEyRCxtR0FBbUcseUdBQXlHLGVBQWUseUJBQXlCLEVBQUUsaUVBQWlFLDBDQUEwQyxFQUFFLEdBQUcsRUFBRSxtQ0FBbUMsOEJBQThCLEVBQUUsdUNBQXVDLHFFQUFxRSxPQUFPLGtEQUFrRCxXQUFXLDBHQUEwRyxFQUFFLHNDQUFzQyxvQ0FBb0Msb0JBQW9CLG9DQUFvQyxnR0FBZ0csK0ZBQStGLEVBQUUsZ0RBQWdELHlDQUF5Qyw4TEFBOEwsbUdBQW1HLEVBQUUsc0NBQXNDLE9BQU8sOEZBQThGLDBGQUEwRixFQUFFLG9DQUFvQywrRkFBK0YsT0FBTywyREFBMkQsc0dBQXNHLGtYQUFrWCxFQUFFLHdDQUF3QyxvQ0FBb0MsNkJBQTZCLGdDQUFnQyxvRkFBb0Ysc0JBQXNCLDhNQUE4TSxxQkFBcUIsZ0RBQWdELGdEQUFnRCxxQkFBcUIsY0FBYyxxQkFBcUIseUVBQXlFLDhGQUE4RixFQUFFLHdDQUF3QyxrSUFBa0ksbUhBQW1ILEVBQUUsOEJBQThCLHVCQUF1QixFQUFFLHlCQUF5QixrQkFBa0IsRUFBRSw0QkFBNEIscUJBQXFCLEVBQUUsNEJBQTRCLHFCQUFxQixFQUFFLDBCQUEwQiwyQkFBMkIsRUFBRSwrQkFBK0IsOEJBQThCLEtBQUssR0FBRyxnQ0FBZ0MsZUFBZSxZQUFZLGFBQWEsOENBQThDLHdCQUF3QixhQUFhLGdCQUFnQiw2Q0FBNkMsT0FBTyxxQ0FBcUMsK0JBQStCLEVBQUUsaUJBQWlCLGdCQUFnQiwrQ0FBK0Msc0RBQXNELDZCQUE2QixzQkFBc0IsNkdBQTZHLG1EQUFtRCwyQ0FBMkMsbURBQW1ELHVHQUF1RywrQkFBK0IsZ0NBQWdDLGlDQUFpQyx1Q0FBdUMsK0ZBQStGLE9BQU8sdUJBQXVCLDhDQUE4QyxpR0FBaUcsU0FBUywwQ0FBMEMsV0FBVyx5R0FBeUcsT0FBTyx5Q0FBeUMsOENBQThDLG9FQUFvRSxTQUFTLDRDQUE0QywrSEFBK0gsT0FBTyxtQ0FBbUMsOENBQThDLG9FQUFvRSxTQUFTLDBDQUEwQywrQkFBK0IsOEhBQThILE9BQU8seURBQXlELDhDQUE4QyxvRUFBb0UsU0FBUywyQ0FBMkMsb0lBQW9JLE9BQU8sa0NBQWtDLDhDQUE4QyxvRUFBb0UsU0FBUyxzQ0FBc0MsMEJBQTBCLGdDQUFnQyw0QkFBNEIsb0lBQW9JLDhDQUE4Qyw0R0FBNEcsR0FBRyxxQ0FBcUMsbUhBQW1ILHdDQUF3QyxtQkFBbUIsa0JBQWtCLGtDQUFrQyw2Q0FBNkMsNEJBQTRCLDRIQUE0SCxxRUFBcUUsdURBQXVELHVEQUF1RCxzQ0FBc0MsK0JBQStCLCtFQUErRSx3QkFBd0Isb0NBQW9DLHNCQUFzQixvQ0FBb0MsMkJBQTJCLDBCQUEwQix3QkFBd0Isd0JBQXdCLE9BQU8saUNBQWlDLDJCQUEyQixvRUFBb0UsRUFBRSxpQkFBaUIsVUFBVSxTQUFTLCtCQUErQix1QkFBdUIsbUNBQW1DLGtCQUFrQixRQUFRLDJEQUEyRCxnQkFBZ0IsbUNBQW1DLG1GQUFtRixpQkFBaUIsNkNBQTZDLEVBQUUsaURBQWlELFNBQVMsc0JBQXNCLDZDQUE2Qyx5REFBeUQsZ0dBQWdHLHdCQUF3Qix1REFBdUQsb0JBQW9CLHlFQUF5RSxRQUFRLDBEQUEwRCxtQkFBbUIsMERBQTBELDJDQUEyQyxRQUFRLDBEQUEwRCx1QkFBdUIsRUFBRSxnREFBZ0QsT0FBTyxHQUFHLEdBQUcsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSxrRkFBa0YsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQix3Q0FBd0MsY0FBYywwQkFBMEIsV0FBVyx1REFBdUQsZ0JBQWdCLHNCQUFzQix5RUFBeUUsd0NBQXdDLDJDQUEyQyw2QkFBNkIsV0FBVywyRkFBMkYsbUNBQW1DLDZNQUE2TSxtREFBbUQsdUNBQXVDLEVBQUUsTUFBTSx5QkFBeUIseUVBQXlFLEdBQUcsRUFBRSx5Q0FBeUMscUJBQXFCLG1DQUFtQyxvQkFBb0IscUJBQXFCLGVBQWUsMkNBQTJDLG1CQUFtQixtSEFBbUgsRUFBRSxHQUFHLEVBQUUsbUNBQW1DLEVBQUUsMEJBQTBCLDRCQUE0QixFQUFFLDZCQUE2QiwrQkFBK0IsS0FBSyxZQUFZLGdDQUFnQyxpQkFBaUIsV0FBVyw4QkFBOEIsaUJBQWlCLE9BQU8sa0JBQWtCLHdCQUF3Qix3Q0FBd0MsaUJBQWlCLHNCQUFzQiw0Q0FBNEMscUJBQXFCLGtCQUFrQixFQUFFLGlCQUFpQixhQUFhLHNDQUFzQyxTQUFTLEVBQUUsK0NBQStDLGNBQWMsMEJBQTBCLFdBQVcsaUJBQWlCLGFBQWEsc0JBQXNCLHdCQUF3QixrREFBa0QsYUFBYSxVQUFVLGdDQUFnQyxNQUFNLGlHQUFpRyxVQUFVLEVBQUUsK0RBQStELGFBQWEsaUNBQWlDLFVBQVUsZ0NBQWdDLE1BQU0saUJBQWlCLDBCQUEwQixnQkFBZ0Isa0JBQWtCLEtBQUssRUFBRSxHQUFHLEtBQUssR0FBRyxnQ0FBZ0MsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSw4RkFBOEYsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQiw0QkFBNEIsY0FBYywwQkFBMEIsV0FBVyxtREFBbUQsZ0JBQWdCLHNCQUFzQiwyRUFBMkUseUhBQXlILDJDQUEyQyw0QkFBNEIsV0FBVyxtQ0FBbUMsT0FBTyx3REFBd0QscUNBQXFDLGlFQUFpRSw2UEFBNlAsS0FBSyxHQUFHLEVBQUUsNkJBQTZCLFdBQVcsMEVBQTBFLGtCQUFrQixLQUFLLG1EQUFtRCxvQkFBb0IsT0FBTyx5Q0FBeUMsdUNBQXVDLCtLQUErSywrREFBK0Qsb0JBQW9CLDhEQUE4RCxPQUFPLCtDQUErQyw2Q0FBNkMsK0tBQStLLCtEQUErRCxvQkFBb0IsOEZBQThGLEVBQUUsR0FBRyxHQUFHLEVBQUUsMkNBQTJDLFdBQVcsbUNBQW1DLDRCQUE0QixxR0FBcUcseUNBQXlDLDBDQUEwQyxXQUFXLG9DQUFvQywySUFBMkksTUFBTSx5QkFBeUIsTUFBTSx3REFBd0QsS0FBSyxHQUFHLEVBQUUsOEJBQThCLFdBQVcsOENBQThDLE9BQU8sd0RBQXdELGtDQUFrQyxpQ0FBaUMsaUNBQWlDLDRCQUE0QixFQUFFLEdBQUcsRUFBRSwyQ0FBMkMsNENBQTRDLE9BQU8sZ0ZBQWdGLEVBQUUsa0NBQWtDLG1DQUFtQyxFQUFFLDhCQUE4Qiw0QkFBNEIsRUFBRSw2QkFBNkIsc0JBQXNCLEVBQUUsZ0NBQWdDLGtDQUFrQyxFQUFFLCtCQUErQix1RkFBdUYsMkNBQTJDLEtBQUssWUFBWSxnQ0FBZ0MsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSx3QkFBd0IsY0FBYywwQkFBMEIsV0FBVywyQ0FBMkMsSUFBSSx5QkFBeUIsU0FBUyxVQUFVLG1EQUFtRCxJQUFJLGtEQUFrRCxTQUFTLFVBQVUscVBBQXFQLGFBQWEsc0JBQXNCLDZCQUE2QixtQ0FBbUMsOEJBQThCLHFCQUFxQixFQUFFLGlCQUFpQixnRUFBZ0UsZ0RBQWdELG9DQUFvQyw0QkFBNEIsOEJBQThCLGdHQUFnRyx1Q0FBdUMsdUZBQXVGLFFBQVEsU0FBUyxLQUFLLDBCQUEwQixTQUFTLGFBQWEsdUJBQXVCLEVBQUUsa0NBQWtDLHlDQUF5QyxnRUFBZ0UsNERBQTRELFdBQVcsMEJBQTBCLGlDQUFpQyxhQUFhLHlCQUF5QixPQUFPLEVBQUUsS0FBSyxzQkFBc0IsMkJBQTJCLFVBQVUsRUFBRSx1Q0FBdUMsNEJBQTRCLHFCQUFxQixxQkFBcUIsNkJBQTZCLG9CQUFvQiwwQ0FBMEMsRUFBRSxtQ0FBbUMsbURBQW1ELEtBQUssR0FBRyxnQ0FBZ0MsaUJBQWlCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSw0REFBNEQsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQixvREFBb0QsY0FBYywwQkFBMEIsV0FBVywwQ0FBMEMsa0JBQWtCLHNCQUFzQixXQUFXLHFKQUFxSixnQkFBZ0IsbUJBQW1CLDZCQUE2QixtRUFBbUUsOEJBQThCLE1BQU0sa0NBQWtDLE1BQU0sa0NBQWtDLE1BQU0sK0JBQStCLEVBQUUsd0JBQXdCLG1DQUFtQyx5TkFBeU4sa0ZBQWtGLHlFQUF5RSxRQUFRLHNCQUFzQixJQUFJLGdKQUFnSixnWkFBZ1osRUFBRSx3Q0FBd0MscUZBQXFGLFVBQVUseUJBQXlCLEVBQUUsb0NBQW9DLHlNQUF5TSx1SkFBdUosVUFBVSxzQkFBc0IsRUFBRSx3Q0FBd0MsWUFBWSx1QkFBdUIsVUFBVSw0QkFBNEIsRUFBRSw2QkFBNkIsY0FBYyxnQ0FBZ0MsbUNBQW1DLGlDQUFpQyxrQ0FBa0MsUUFBUSxLQUFLLEtBQUssMkZBQTJGLEtBQUssOEJBQThCLGFBQWEsbURBQW1ELHNDQUFzQyw0R0FBNEcsZ0VBQWdFLG9CQUFvQixLQUFLLEdBQUcsRUFBRSx1Q0FBdUMsK0JBQStCLEVBQUUsZ0NBQWdDLGlCQUFpQixFQUFFLGdDQUFnQyxXQUFXLG1DQUFtQyxzQkFBc0IsZUFBZSwyREFBMkQseUJBQXlCLGlFQUFpRSxPQUFPLCtDQUErQyxtQkFBbUIsNExBQTRMLHdFQUF3RSx1RkFBdUYsMEJBQTBCLHdGQUF3RixvQkFBb0IsRUFBRSxHQUFHLEVBQUUsc0NBQXNDLGtCQUFrQixtQ0FBbUMsa0JBQWtCLCtDQUErQyxXQUFXLHlYQUF5WCxxRkFBcUYsbUJBQW1CLGdCQUFnQixXQUFXLGtDQUFrQyxzTUFBc00sdUJBQXVCLDhFQUE4RSx5RUFBeUUsMkJBQTJCLGlCQUFpQixFQUFFLEdBQUcsRUFBRSxtQ0FBbUMsV0FBVyxtQ0FBbUMsT0FBTyxxREFBcUQsa2JBQWtiLDRDQUE0QywyQ0FBMkMsNk5BQTZOLDJCQUEyQixrRUFBa0UsbUJBQW1CLDRGQUE0RixzQkFBc0IscUlBQXFJLG9CQUFvQixFQUFFLEdBQUcsRUFBRSx5Q0FBeUMsa0JBQWtCLG1DQUFtQyxPQUFPLHFEQUFxRCxnU0FBZ1MsZUFBZSw0SEFBNEgsb0RBQW9ELDJDQUEyQyw2TUFBNk0sMkJBQTJCLG1CQUFtQixnQkFBZ0IsV0FBVyw4S0FBOEsseUZBQXlGLHVCQUF1Qiw2TEFBNkwseUVBQXlFLDJCQUEyQixpQkFBaUIsRUFBRSxHQUFHLEVBQUUsbUNBQW1DLDBDQUEwQyxFQUFFLHdDQUF3QyxnRUFBZ0UsK0hBQStILFVBQVUsNkJBQTZCLGtEQUFrRCxRQUFRLElBQUksb0dBQW9HLEVBQUUsd0NBQXdDLGtEQUFrRCwyREFBMkQsMkJBQTJCLG1EQUFtRCxPQUFPLDJEQUEyRCxVQUFVLGlEQUFpRCxrREFBa0Qsd0JBQXdCLElBQUksd0ZBQXdGLHlCQUF5QixrREFBa0QsMEJBQTBCLEdBQUcsRUFBRSxtQ0FBbUMsY0FBYyxrREFBa0QsV0FBVywwSUFBMEksT0FBTyw2QkFBNkIsMkNBQTJDLGtEQUFrRCw0QkFBNEIsRUFBRSwwQ0FBMEMsMkJBQTJCLEVBQUUsMENBQTBDLDJCQUEyQixFQUFFLDJCQUEyQixvQkFBb0IsRUFBRSwrQkFBK0Isd0JBQXdCLEVBQUUsK0JBQStCLHdCQUF3QixLQUFLLEdBQUcsZ0NBQWdDLGlCQUFpQixhQUFhLHNDQUFzQyxTQUFTLEVBQUUsb0hBQW9ILDRCQUE0QixTQUFTLGlGQUFpRixxQkFBcUIsNEJBQTRCLGNBQWMsMEJBQTBCLFdBQVcsc0RBQXNELGNBQWMsc0JBQXNCLDJFQUEyRSwwQkFBMEIsZ0NBQWdDLGtGQUFrRix5RUFBeUUsMkNBQTJDLDBDQUEwQyxzR0FBc0csV0FBVyx3REFBd0Qsc0ZBQXNGLGdDQUFnQyxNQUFNLHdCQUF3QixNQUFNLDhCQUE4QixNQUFNLGtDQUFrQyxHQUFHLEVBQUUseUNBQXlDLHFHQUFxRywrQkFBK0IsRUFBRSwwQ0FBMEMsZUFBZSx3R0FBd0csa0NBQWtDLE9BQU8saUVBQWlFLDZFQUE2RSxnR0FBZ0csMERBQTBELE9BQU8sbUdBQW1HLGtDQUFrQyxFQUFFLEVBQUUsc0JBQXNCLElBQUksRUFBRSw4QkFBOEIsV0FBVyxzQ0FBc0MsU0FBUyxPQUFPLHdEQUF3RCxrQkFBa0IsaUNBQWlDLG1JQUFtSSxFQUFFLEVBQUUsR0FBRyxFQUFFLHVDQUF1QywrQkFBK0IsRUFBRSxtQ0FBbUMsMkJBQTJCLEVBQUUsK0JBQStCLHVCQUF1QixFQUFFLGtDQUFrQywwQkFBMEIsRUFBRSxtQ0FBbUMsd0RBQXdELHFDQUFxQyxNQUFNLDJDQUEyQyxFQUFFLHFDQUFxQyw4REFBOEQseUdBQXlHLE9BQU8sb0ZBQW9GLE9BQU8scUJBQXFCLHFGQUFxRixtQ0FBbUMsb0RBQW9ELE9BQU8sa0RBQWtELG9DQUFvQywrSEFBK0gsb0JBQW9CLG9CQUFvQixrREFBa0QsaUJBQWlCLElBQUkseUZBQXlGLEVBQUUsdUNBQXVDLGtEQUFrRCw0R0FBNEcsT0FBTywwREFBMEQsa0dBQWtHLEVBQUUsb0NBQW9DLE9BQU8seUNBQXlDLG1GQUFtRixFQUFFLGdDQUFnQywrRUFBK0UseUNBQXlDLDhDQUE4QyxvQkFBb0Isb0JBQW9CLGtEQUFrRCxpQkFBaUIsR0FBRyxNQUFNLHlIQUF5SCwrQkFBK0Isd0lBQXdJLEVBQUUsbUNBQW1DLHFDQUFxQyxnSEFBZ0gsT0FBTyxrREFBa0QsbUJBQW1CLDBCQUEwQixFQUFFLCtDQUErQyx5Q0FBeUMsNkVBQTZFLHVCQUF1Qiw2QkFBNkIsYUFBYSxnQkFBZ0IseUZBQXlGLE9BQU8sWUFBWSxvR0FBb0csaUNBQWlDLE9BQU8sa0RBQWtELG1CQUFtQiw0Q0FBNEMseUJBQXlCLHdFQUF3RSxzQkFBc0IsS0FBSyxHQUFHLEVBQUUsbUNBQW1DLFdBQVcsMEJBQTBCLE9BQU8sa0RBQWtELFVBQVUsSUFBSSxtRkFBbUYsc0JBQXNCLG9CQUFvQixvQkFBb0Isa0RBQWtELGlCQUFpQixJQUFJLCtGQUErRixFQUFFLG1DQUFtQyw0QkFBNEIsRUFBRSxtQ0FBbUMsUUFBUSxVQUFVLGdDQUFnQyxhQUFhLGdCQUFnQixvQ0FBb0MsMEdBQTBHLFVBQVUsS0FBSyxZQUFZLGdDQUFnQyxpQkFBaUIsYUFBYSxzQ0FBc0MsU0FBUyxFQUFFLG9IQUFvSCw0QkFBNEIsU0FBUyxpRkFBaUYscUJBQXFCLDRCQUE0QixjQUFjLDBCQUEwQixXQUFXLGtGQUFrRixjQUFjLHNCQUFzQiwyRUFBMkUseUNBQXlDLGdDQUFnQyxlQUFlLDJCQUEyQiwyQ0FBMkMsNEJBQTRCLFdBQVcsc0ZBQXNGLGtEQUFrRCwwUEFBMFAsb0JBQW9CLDBEQUEwRCxFQUFFLEdBQUcsRUFBRSx1Q0FBdUMsZ0JBQWdCLHNEQUFzRCw0QkFBNEIsT0FBTyxzQ0FBc0MsVUFBVSw0REFBNEQsRUFBRSxFQUFFLE9BQU8sd0RBQXdELHNEQUFzRCx1QkFBdUIsRUFBRSwwQ0FBMEMsc0dBQXNHLFdBQVcsbUVBQW1FLGtHQUFrRyxHQUFHLEVBQUUseUNBQXlDLHFHQUFxRywrQkFBK0IsRUFBRSw4QkFBOEIsV0FBVyxxQ0FBcUMsMkVBQTJFLEdBQUcsRUFBRSxtQ0FBbUMsY0FBYyw2REFBNkQsa0JBQWtCLGlDQUFpQyw0SEFBNEgsR0FBRyxFQUFFLG1DQUFtQyxXQUFXLGtCQUFrQixrQkFBa0IseUZBQXlGLEVBQUUsa0NBQWtDLFdBQVcsOENBQThDLG9CQUFvQixpSEFBaUgsR0FBRyxFQUFFLHVDQUF1QyxXQUFXLG1DQUFtQywyQ0FBMkMsd0JBQXdCLG9CQUFvQixZQUFZLEVBQUUsR0FBRyxFQUFFLDhDQUE4QyxjQUFjLHNGQUFzRix3Q0FBd0MsbUNBQW1DLGlDQUFpQyx5UUFBeVEsRUFBRSxHQUFHLEVBQUUsMENBQTBDLFdBQVcsaUNBQWlDLDBOQUEwTixHQUFHLEVBQUUsa0NBQWtDLGtCQUFrQixtQ0FBbUMsT0FBTyw2Q0FBNkMsb0JBQW9CLGlDQUFpQyxtUUFBbVEsRUFBRSxHQUFHLEtBQUssWUFBWSxnQ0FBZ0Msa0JBQWtCLGFBQWEsc0NBQXNDLFNBQVMsRUFBRSx3QkFBd0IsY0FBYywwQkFBMEIsV0FBVyxrQkFBa0IsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQixrREFBa0Qsb0JBQW9CLHNCQUFzQixrR0FBa0csd0JBQXdCLDBDQUEwQyxXQUFXLGtEQUFrRCwrREFBK0QsR0FBRyxFQUFFLHlDQUF5Qyx5QkFBeUIsRUFBRSw4QkFBOEIsa0NBQWtDLDhCQUE4QixHQUFHLEVBQUUsOEJBQThCLHVCQUF1QixLQUFLLEdBQUcsZ0NBQWdDLDZFQUE2RSxhQUFhLHNDQUFzQyxTQUFTLG1GQUFtRixrQkFBa0IsNEJBQTRCLFNBQVMsaUZBQWlGLHFCQUFxQix3REFBd0QsY0FBYywwQkFBMEIsV0FBVyxtTUFBbU0sc01BQXNNLGlCQUFpQixhQUFhLHNDQUFzQyxTQUFTLEVBQUUsZ0NBQWdDLGNBQWMsMEJBQTBCLFdBQVcsaUJBQWlCLGNBQWMsb0dBQW9HLDJDQUEyQyx3QkFBd0IseUNBQXlDLGtDQUFrQyxFQUFFLGlDQUFpQyxpSkFBaUosb0JBQW9CLGtEQUFrRCxpQ0FBaUMsR0FBRyxzTkFBc04sT0FBTyxzSkFBc0osVUFBVSw2QkFBNkIsa0RBQWtELFFBQVEsRUFBRSxtQkFBbUIsT0FBTyw0SEFBNEgsRUFBRSxpQ0FBaUMsa0RBQWtELDJEQUEyRCwyQkFBMkIsbURBQW1ELE9BQU8sMkRBQTJELFVBQVUsaURBQWlELGtEQUFrRCx3QkFBd0IsSUFBSSwwRkFBMEYseUJBQXlCLGtEQUFrRCwwQkFBMEIsR0FBRyxLQUFLLEdBQUcsZ0NBQWdDLEdBQUciLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB2ZXJzaW9uOiAwLjkuMFxuLy8gZGF0ZTogVHVlIEp1bCAxNyAyMDE4IDExOjAxOjM2IEdNVCswMTAwIChXZXN0ZXJuIEV1cm9wZWFuIFN1bW1lciBUaW1lKVxuLy8gbGljZW5jZTogXG4vKipcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXG4qIENvcHlyaWdodCAyMDE2IElORVNDLUlEXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxuKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0FcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcbiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU5cbipcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4qIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKiovXG5cblxuIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoXCJTeW5jaGVyXCIsW10sdCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5TeW5jaGVyPXQoKTooZVtcIlwiXT1lW1wiXCJdfHx7fSxlW1wiXCJdLlN5bmNoZXI9dCgpKX0oXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjp0aGlzLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0PXt9O2Z1bmN0aW9uIHIobil7aWYodFtuXSlyZXR1cm4gdFtuXS5leHBvcnRzO3ZhciBvPXRbbl09e2k6bixsOiExLGV4cG9ydHM6e319O3JldHVybiBlW25dLmNhbGwoby5leHBvcnRzLG8sby5leHBvcnRzLHIpLG8ubD0hMCxvLmV4cG9ydHN9cmV0dXJuIHIubT1lLHIuYz10LHIuZD1mdW5jdGlvbihlLHQsbil7ci5vKGUsdCl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiEwLGdldDpufSl9LHIubj1mdW5jdGlvbihlKXt2YXIgdD1lJiZlLl9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiBlfTtyZXR1cm4gci5kKHQsXCJhXCIsdCksdH0sci5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSxyLnA9XCJcIixyKHIucz0xOTYpfShbZnVuY3Rpb24oZSx0KXt2YXIgcj1lLmV4cG9ydHM9e3ZlcnNpb246XCIyLjUuN1wifTtcIm51bWJlclwiPT10eXBlb2YgX19lJiYoX19lPXIpfSxmdW5jdGlvbihlLHQpe3ZhciByPWUuZXhwb3J0cz1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcIm51bWJlclwiPT10eXBlb2YgX19nJiYoX19nPXIpfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzNikoXCJ3a3NcIiksbz1yKDIzKSxpPXIoMSkuU3ltYm9sLHM9XCJmdW5jdGlvblwiPT10eXBlb2YgaTsoZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1zJiZpW2VdfHwocz9pOm8pKFwiU3ltYm9sLlwiK2UpKX0pLnN0b3JlPW59LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9IXIoMTMpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSxcImFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwO3ZhciBuPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0ocig1OSkpO3QuZGVmYXVsdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIG89dFtyXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksKDAsbi5kZWZhdWx0KShlLG8ua2V5LG8pfX1yZXR1cm4gZnVuY3Rpb24odCxyLG4pe3JldHVybiByJiZlKHQucHJvdG90eXBlLHIpLG4mJmUodCxuKSx0fX0oKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSksbz1yKDApLGk9cigxNCkscz1yKDExKSxhPXIoMTApLHU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBjLGwsZCxmPWUmdS5GLHA9ZSZ1LkcsaD1lJnUuUyx5PWUmdS5QLHY9ZSZ1LkIsXz1lJnUuVyxiPXA/bzpvW3RdfHwob1t0XT17fSksbT1iLnByb3RvdHlwZSxnPXA/bjpoP25bdF06KG5bdF18fHt9KS5wcm90b3R5cGU7Zm9yKGMgaW4gcCYmKHI9dCkscikobD0hZiYmZyYmdm9pZCAwIT09Z1tjXSkmJmEoYixjKXx8KGQ9bD9nW2NdOnJbY10sYltjXT1wJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBnW2NdP3JbY106diYmbD9pKGQsbik6XyYmZ1tjXT09ZD9mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbih0LHIsbil7aWYodGhpcyBpbnN0YW5jZW9mIGUpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyBlO2Nhc2UgMTpyZXR1cm4gbmV3IGUodCk7Y2FzZSAyOnJldHVybiBuZXcgZSh0LHIpfXJldHVybiBuZXcgZSh0LHIsbil9cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gdC5wcm90b3R5cGU9ZS5wcm90b3R5cGUsdH0oZCk6eSYmXCJmdW5jdGlvblwiPT10eXBlb2YgZD9pKEZ1bmN0aW9uLmNhbGwsZCk6ZCx5JiYoKGIudmlydHVhbHx8KGIudmlydHVhbD17fSkpW2NdPWQsZSZ1LlImJm0mJiFtW2NdJiZzKG0sYyxkKSkpfTt1LkY9MSx1Lkc9Mix1LlM9NCx1LlA9OCx1LkI9MTYsdS5XPTMyLHUuVT02NCx1LlI9MTI4LGUuZXhwb3J0cz11fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgZT9udWxsIT09ZTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDM5KSxpPXIoMjcpLHM9T2JqZWN0LmRlZmluZVByb3BlcnR5O3QuZj1yKDQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihlLHQscil7aWYobihlKSx0PWkodCwhMCksbihyKSxvKXRyeXtyZXR1cm4gcyhlLHQscil9Y2F0Y2goZSl7fWlmKFwiZ2V0XCJpbiByfHxcInNldFwiaW4gcil0aHJvdyBUeXBlRXJyb3IoXCJBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCFcIik7cmV0dXJuXCJ2YWx1ZVwiaW4gciYmKGVbdF09ci52YWx1ZSksZX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtpZighbihlKSl0aHJvdyBUeXBlRXJyb3IoZStcIiBpcyBub3QgYW4gb2JqZWN0IVwiKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9e30uaGFzT3duUHJvcGVydHk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHIuY2FsbChlLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOCksbz1yKDE2KTtlLmV4cG9ydHM9cig0KT9mdW5jdGlvbihlLHQscil7cmV0dXJuIG4uZihlLHQsbygxLHIpKX06ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlW3RdPXIsZX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDU1KSxvPXIoMzApO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbihvKGUpKX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4hIWUoKX1jYXRjaChlKXtyZXR1cm4hMH19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyNCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtpZihuKGUpLHZvaWQgMD09PXQpcmV0dXJuIGU7c3dpdGNoKHIpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIGUuY2FsbCh0LHIpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHIsbil7cmV0dXJuIGUuY2FsbCh0LHIsbil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24ocixuLG8pe3JldHVybiBlLmNhbGwodCxyLG4sbyl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KHQsYXJndW1lbnRzKX19fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz0hMH0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz17fX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDEwMiksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbj1pKHIoNTgpKSxvPWkocig0MikpO2Z1bmN0aW9uIGkoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIHMoZSl7ZnVuY3Rpb24gdChlKXtyZXR1cm4gZS5yZXBsYWNlKC8oW2EtekEtWi1dKikoOlxcL1xcLyg/OlxcLik/fDopKFstYS16QS1aMC05QDolLl9cXCt+Iz1dezIsMjU2fSkoWy1hLXpBLVowLTlAOiUuX1xcK34jPVxcL10qKS9naSxcIiQxLCQzLCQ0XCIpLnNwbGl0KFwiLFwiKX12YXIgcj10KGUpO2lmKHJbMF09PT1lJiYhclswXS5pbmNsdWRlcyhcIkBcIikpe3ZhciBuPXt0eXBlOlwiXCIsZG9tYWluOmUsaWRlbnRpdHk6XCJcIn07cmV0dXJuIGNvbnNvbGUud2FybihcIltEaXZpZGVVUkxdIERpdmlkZVVSTCBkb24ndCBzdXBwb3J0IHVybCB3aXRob3V0IHNjaGVtZS4gUGxlYXNlIHJldmlldyB5b3VyIHVybCBhZGRyZXNzXCIsZSksbn1yWzBdPT09ZSYmclswXS5pbmNsdWRlcyhcIkBcIikmJihyPXQoKHJbMF09PT1lP1wic210cFwiOnJbMF0pK1wiOi8vXCIrclswXSkpO3JldHVybiByWzFdLmluY2x1ZGVzKFwiQFwiKSYmKHJbMl09clswXStcIjovL1wiK3JbMV0sclsxXT1yWzFdLnN1YnN0cihyWzFdLmluZGV4T2YoXCJAXCIpKzEpKSx7dHlwZTpyWzBdLGRvbWFpbjpyWzFdLGlkZW50aXR5OnJbMl19fWZ1bmN0aW9uIGEoZSl7dmFyIHQ9ZS5pbmRleE9mKFwiQFwiKTtyZXR1cm5cInVzZXI6Ly9cIitlLnN1YnN0cmluZyh0KzEsZS5sZW5ndGgpK1wiL1wiK2Uuc3Vic3RyaW5nKDAsdCl9dC5kaXZpZGVVUkw9cyx0LmRpdmlkZUVtYWlsPWZ1bmN0aW9uKGUpe3ZhciB0PWUuaW5kZXhPZihcIkBcIik7cmV0dXJue3VzZXJuYW1lOmUuc3Vic3RyaW5nKDAsdCksZG9tYWluOmUuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCl9fSx0LmVtcHR5T2JqZWN0PWZ1bmN0aW9uKGUpe3JldHVybiEoKDAsby5kZWZhdWx0KShlKS5sZW5ndGg+MCl9LHQuZGVlcENsb25lPWZ1bmN0aW9uKGUpe2lmKGUpcmV0dXJuIEpTT04ucGFyc2UoKDAsbi5kZWZhdWx0KShlKSl9LHQuZ2V0VXNlclVSTEZyb21FbWFpbD1hLHQuZ2V0VXNlckVtYWlsRnJvbVVSTD1mdW5jdGlvbihlKXt2YXIgdD1zKGUpO3JldHVybiB0LmlkZW50aXR5LnJlcGxhY2UoXCIvXCIsXCJcIikrXCJAXCIrdC5kb21haW59LHQuY29udmVydFRvVXNlclVSTD1mdW5jdGlvbihlKXtpZihcInVzZXI6Ly9cIj09PWUuc3Vic3RyaW5nKDAsNykpe3ZhciB0PXMoZSk7aWYodC5kb21haW4mJnQuaWRlbnRpdHkpcmV0dXJuIGU7dGhyb3dcInVzZXJVUkwgd2l0aCB3cm9uZyBmb3JtYXRcIn1yZXR1cm4gYShlKX0sdC5jaGVja0F0dHJpYnV0ZT1mdW5jdGlvbihlKXt2YXIgdD0vKCgoW2EtekEtWl0rKTpcXC9cXC8oWzAtOWEtekEtWl1bLVxcd10qWzAtOWEtekEtWl1cXC4pK1thLXpBLVpdezIsOX0pXFwvW2EtekEtWjAtOVxcLl0rQFthLXpBLVowLTldKyhcXC0pP1thLXpBLVowLTldKyhcXC4pP1thLXpBLVowLTldezIsMTB9P1xcLlthLXpBLVpdezIsMTB9KSguKyg/PS5pZGVudGl0eSkpPy9nbSxyPVtdLG49W107aWYobnVsbD09ZS5tYXRjaCh0KSluPWUuc3BsaXQoXCIuXCIpO2Vsc2V7Zm9yKHZhciBvPXZvaWQgMDtudWxsIT09KG89dC5leGVjKGUpKTspby5pbmRleD09PXQubGFzdEluZGV4JiZ0Lmxhc3RJbmRleCsrLG8uZm9yRWFjaChmdW5jdGlvbihlLHQpezA9PT10JiZyLnB1c2goZSl9KTt2YXIgaT12b2lkIDA7ci5mb3JFYWNoKGZ1bmN0aW9uKHQpe2k9ZS5yZXBsYWNlKHQsXCIqKypcIiksbj1pLnNwbGl0KFwiLlwiKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuXCIqKypcIj09PWU/dDplfSl9KX1yZXR1cm4gY29uc29sZS5sb2coXCJbU2VydmljZUZyYW1ld29yay5VdGlscy5jaGVja0F0dHJpYnV0ZV1cIixuKSxufSx0LnBhcnNlQXR0cmlidXRlcz1mdW5jdGlvbihlKXtpZihlLmluY2x1ZGVzKFwiOi8vXCIpKXt2YXIgdD1lLnNwbGl0KC8oWzAtOWEtekEtWl1bLVxcd10qKTpcXC9cXC8vZylbMF0scj10LnNwbGl0KFwiLlwiKSxuPWUucmVwbGFjZSh0LFwiXCIpO2lmKGUuaW5jbHVkZXMoXCJpZGVudGl0eVwiKSl7dmFyIG89bi5zcGxpdChcImlkZW50aXR5LlwiKTtjb25zb2xlLmxvZyhcImFycmF5MiBcIitvKSxuPW9bMF0uc2xpY2UoXCIuXCIsLTEpLG89b1sxXS5zcGxpdChcIi5cIiksci5wdXNoKG4sXCJpZGVudGl0eVwiKSxyPXIuY29uY2F0KG8pfWVsc2Ugci5wdXNoKG4pO3JldHVybiByLmZpbHRlcihCb29sZWFuKX1yZXR1cm4gZS5zcGxpdChcIi5cIil9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig0NSksbz1yKDM3KTtlLmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3JldHVybiBuKGUsbyl9fSxmdW5jdGlvbihlLHQpe3ZhciByPXt9LnRvU3RyaW5nO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gci5jYWxsKGUpLnNsaWNlKDgsLTEpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG87IWZ1bmN0aW9uKGkscyl7XCJ1c2Ugc3RyaWN0XCI7dm9pZCAwPT09KG89XCJmdW5jdGlvblwiPT10eXBlb2Yobj1zKT9uLmNhbGwodCxyLHQsZSk6bil8fChlLmV4cG9ydHM9byl9KDAsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgZT1mdW5jdGlvbigpe30sdD1cInVuZGVmaW5lZFwiLHI9W1widHJhY2VcIixcImRlYnVnXCIsXCJpbmZvXCIsXCJ3YXJuXCIsXCJlcnJvclwiXTtmdW5jdGlvbiBuKGUsdCl7dmFyIHI9ZVt0XTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmJpbmQpcmV0dXJuIHIuYmluZChlKTt0cnl7cmV0dXJuIEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmNhbGwocixlKX1jYXRjaCh0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5LmFwcGx5KHIsW2UsYXJndW1lbnRzXSl9fX1mdW5jdGlvbiBvKHQsbil7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspe3ZhciBpPXJbb107dGhpc1tpXT1vPHQ/ZTp0aGlzLm1ldGhvZEZhY3RvcnkoaSx0LG4pfXRoaXMubG9nPXRoaXMuZGVidWd9ZnVuY3Rpb24gaShyLGkscyl7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVyblwiZGVidWdcIj09PXImJihyPVwibG9nXCIpLHR5cGVvZiBjb25zb2xlIT09dCYmKHZvaWQgMCE9PWNvbnNvbGVbcl0/bihjb25zb2xlLHIpOnZvaWQgMCE9PWNvbnNvbGUubG9nP24oY29uc29sZSxcImxvZ1wiKTplKX0ocil8fGZ1bmN0aW9uKGUscixuKXtyZXR1cm4gZnVuY3Rpb24oKXt0eXBlb2YgY29uc29sZSE9PXQmJihvLmNhbGwodGhpcyxyLG4pLHRoaXNbZV0uYXBwbHkodGhpcyxhcmd1bWVudHMpKX19LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBzKGUsbixzKXt2YXIgYSx1PXRoaXMsYz1cImxvZ2xldmVsXCI7ZnVuY3Rpb24gbCgpe3ZhciBlO2lmKHR5cGVvZiB3aW5kb3chPT10KXt0cnl7ZT13aW5kb3cubG9jYWxTdG9yYWdlW2NdfWNhdGNoKGUpe31pZih0eXBlb2YgZT09PXQpdHJ5e3ZhciByPXdpbmRvdy5kb2N1bWVudC5jb29raWUsbj1yLmluZGV4T2YoZW5jb2RlVVJJQ29tcG9uZW50KGMpK1wiPVwiKTstMSE9PW4mJihlPS9eKFteO10rKS8uZXhlYyhyLnNsaWNlKG4pKVsxXSl9Y2F0Y2goZSl7fXJldHVybiB2b2lkIDA9PT11LmxldmVsc1tlXSYmKGU9dm9pZCAwKSxlfX1lJiYoYys9XCI6XCIrZSksdS5uYW1lPWUsdS5sZXZlbHM9e1RSQUNFOjAsREVCVUc6MSxJTkZPOjIsV0FSTjozLEVSUk9SOjQsU0lMRU5UOjV9LHUubWV0aG9kRmFjdG9yeT1zfHxpLHUuZ2V0TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gYX0sdS5zZXRMZXZlbD1mdW5jdGlvbihuLGkpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBuJiZ2b2lkIDAhPT11LmxldmVsc1tuLnRvVXBwZXJDYXNlKCldJiYobj11LmxldmVsc1tuLnRvVXBwZXJDYXNlKCldKSwhKFwibnVtYmVyXCI9PXR5cGVvZiBuJiZuPj0wJiZuPD11LmxldmVscy5TSUxFTlQpKXRocm93XCJsb2cuc2V0TGV2ZWwoKSBjYWxsZWQgd2l0aCBpbnZhbGlkIGxldmVsOiBcIituO2lmKGE9biwhMSE9PWkmJmZ1bmN0aW9uKGUpe3ZhciBuPShyW2VdfHxcInNpbGVudFwiKS50b1VwcGVyQ2FzZSgpO2lmKHR5cGVvZiB3aW5kb3chPT10KXt0cnl7cmV0dXJuIHZvaWQod2luZG93LmxvY2FsU3RvcmFnZVtjXT1uKX1jYXRjaChlKXt9dHJ5e3dpbmRvdy5kb2N1bWVudC5jb29raWU9ZW5jb2RlVVJJQ29tcG9uZW50KGMpK1wiPVwiK24rXCI7XCJ9Y2F0Y2goZSl7fX19KG4pLG8uY2FsbCh1LG4sZSksdHlwZW9mIGNvbnNvbGU9PT10JiZuPHUubGV2ZWxzLlNJTEVOVClyZXR1cm5cIk5vIGNvbnNvbGUgYXZhaWxhYmxlIGZvciBsb2dnaW5nXCJ9LHUuc2V0RGVmYXVsdExldmVsPWZ1bmN0aW9uKGUpe2woKXx8dS5zZXRMZXZlbChlLCExKX0sdS5lbmFibGVBbGw9ZnVuY3Rpb24oZSl7dS5zZXRMZXZlbCh1LmxldmVscy5UUkFDRSxlKX0sdS5kaXNhYmxlQWxsPWZ1bmN0aW9uKGUpe3Uuc2V0TGV2ZWwodS5sZXZlbHMuU0lMRU5ULGUpfTt2YXIgZD1sKCk7bnVsbD09ZCYmKGQ9bnVsbD09bj9cIldBUk5cIjpuKSx1LnNldExldmVsKGQsITEpfXZhciBhPW5ldyBzLHU9e307YS5nZXRMb2dnZXI9ZnVuY3Rpb24oZSl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mIGV8fFwiXCI9PT1lKXRocm93IG5ldyBUeXBlRXJyb3IoXCJZb3UgbXVzdCBzdXBwbHkgYSBuYW1lIHdoZW4gY3JlYXRpbmcgYSBsb2dnZXIuXCIpO3ZhciB0PXVbZV07cmV0dXJuIHR8fCh0PXVbZV09bmV3IHMoZSxhLmdldExldmVsKCksYS5tZXRob2RGYWN0b3J5KSksdH07dmFyIGM9dHlwZW9mIHdpbmRvdyE9PXQ/d2luZG93LmxvZzp2b2lkIDA7cmV0dXJuIGEubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiB0eXBlb2Ygd2luZG93IT09dCYmd2luZG93LmxvZz09PWEmJih3aW5kb3cubG9nPWMpLGF9LGEuZ2V0TG9nZ2Vycz1mdW5jdGlvbigpe3JldHVybiB1fSxhfSl9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9MCxuPU1hdGgucmFuZG9tKCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVyblwiU3ltYm9sKFwiLmNvbmNhdCh2b2lkIDA9PT1lP1wiXCI6ZSxcIilfXCIsKCsrcituKS50b1N0cmluZygzNikpfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSl0aHJvdyBUeXBlRXJyb3IoZStcIiBpcyBub3QgYSBmdW5jdGlvbiFcIik7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoOTEpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig4KS5mLG89cigxMCksaT1yKDIpKFwidG9TdHJpbmdUYWdcIik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlJiYhbyhlPXI/ZTplLnByb3RvdHlwZSxpKSYmbihlLGkse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTp0fSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighbihlKSlyZXR1cm4gZTt2YXIgcixvO2lmKHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mKHI9ZS50b1N0cmluZykmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbztpZihcImZ1bmN0aW9uXCI9PXR5cGVvZihyPWUudmFsdWVPZikmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbztpZighdCYmXCJmdW5jdGlvblwiPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO3Rocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpLG89cigxKS5kb2N1bWVudCxpPW4obykmJm4oby5jcmVhdGVFbGVtZW50KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGk/by5jcmVhdGVFbGVtZW50KGUpOnt9fX0sZnVuY3Rpb24oZSx0KXt0LmY9e30ucHJvcGVydHlJc0VudW1lcmFibGV9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09ZSl0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIrZSk7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQpe3ZhciByPU1hdGguY2VpbCxuPU1hdGguZmxvb3I7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpc05hTihlPStlKT8wOihlPjA/bjpyKShlKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChuKGUpKX19LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShyKDQ3KSk7dC5kZWZhdWx0PWZ1bmN0aW9uKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO3JldHVybiF0fHxcIm9iamVjdFwiIT09KHZvaWQgMD09PXQ/XCJ1bmRlZmluZWRcIjooMCxuLmRlZmF1bHQpKHQpKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgdD9lOnR9fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dC5fX2VzTW9kdWxlPSEwO3ZhciBuPXMocig5MykpLG89cyhyKDk3KSksaT1zKHIoNDcpKTtmdW5jdGlvbiBzKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX10LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0KXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIisodm9pZCAwPT09dD9cInVuZGVmaW5lZFwiOigwLGkuZGVmYXVsdCkodCkpKTtlLnByb3RvdHlwZT0oMCxvLmRlZmF1bHQpKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYobi5kZWZhdWx0PygwLG4uZGVmYXVsdCkoZSx0KTplLl9fcHJvdG9fXz10KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDM2KShcImtleXNcIiksbz1yKDIzKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPW8oZSkpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMCksbz1yKDEpLGk9b1tcIl9fY29yZS1qc19zaGFyZWRfX1wiXXx8KG9bXCJfX2NvcmUtanNfc2hhcmVkX19cIl09e30pOyhlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaVtlXXx8KGlbZV09dm9pZCAwIT09dD90Ont9KX0pKFwidmVyc2lvbnNcIixbXSkucHVzaCh7dmVyc2lvbjpuLnZlcnNpb24sbW9kZTpyKDE1KT9cInB1cmVcIjpcImdsb2JhbFwiLGNvcHlyaWdodDpcIsKpIDIwMTggRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSlcIn0pfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1cImNvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZlwiLnNwbGl0KFwiLFwiKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDcyKSxpPXIoMzcpLHM9cigzNSkoXCJJRV9QUk9UT1wiKSxhPWZ1bmN0aW9uKCl7fSx1PWZ1bmN0aW9uKCl7dmFyIGUsdD1yKDI4KShcImlmcmFtZVwiKSxuPWkubGVuZ3RoO2Zvcih0LnN0eWxlLmRpc3BsYXk9XCJub25lXCIscig1NikuYXBwZW5kQ2hpbGQodCksdC5zcmM9XCJqYXZhc2NyaXB0OlwiLChlPXQuY29udGVudFdpbmRvdy5kb2N1bWVudCkub3BlbigpLGUud3JpdGUoXCI8c2NyaXB0PmRvY3VtZW50LkY9T2JqZWN0PFxcL3NjcmlwdD5cIiksZS5jbG9zZSgpLHU9ZS5GO24tLTspZGVsZXRlIHUucHJvdG90eXBlW2lbbl1dO3JldHVybiB1KCl9O2UuZXhwb3J0cz1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbihlLHQpe3ZhciByO3JldHVybiBudWxsIT09ZT8oYS5wcm90b3R5cGU9bihlKSxyPW5ldyBhLGEucHJvdG90eXBlPW51bGwscltzXT1lKTpyPXUoKSx2b2lkIDA9PT10P3I6byhyLHQpfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz0hcig0KSYmIXIoMTMpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyKDI4KShcImRpdlwiKSxcImFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSxmdW5jdGlvbihlLHQscil7dC5mPXIoMil9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEpLG89cigwKSxpPXIoMTUpLHM9cig0MCksYT1yKDgpLmY7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PW8uU3ltYm9sfHwoby5TeW1ib2w9aT97fTpuLlN5bWJvbHx8e30pO1wiX1wiPT1lLmNoYXJBdCgwKXx8ZSBpbiB0fHxhKHQsZSx7dmFsdWU6cy5mKGUpfSl9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoODkpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQpe3QuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KSxvPXIoMCksaT1yKDEzKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj0oby5PYmplY3R8fHt9KVtlXXx8T2JqZWN0W2VdLHM9e307c1tlXT10KHIpLG4obi5TK24uRippKGZ1bmN0aW9uKCl7cigxKX0pLFwiT2JqZWN0XCIscyl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMCksbz1yKDEyKSxpPXIoNjQpKCExKSxzPXIoMzUpKFwiSUVfUFJPVE9cIik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsYT1vKGUpLHU9MCxjPVtdO2ZvcihyIGluIGEpciE9cyYmbihhLHIpJiZjLnB1c2gocik7Zm9yKDt0Lmxlbmd0aD51OyluKGEscj10W3UrK10pJiYofmkoYyxyKXx8Yy5wdXNoKHIpKTtyZXR1cm4gY319LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDI5KSxvPXIoMTYpLGk9cigxMikscz1yKDI3KSxhPXIoMTApLHU9cigzOSksYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3QuZj1yKDQpP2M6ZnVuY3Rpb24oZSx0KXtpZihlPWkoZSksdD1zKHQsITApLHUpdHJ5e3JldHVybiBjKGUsdCl9Y2F0Y2goZSl7fWlmKGEoZSx0KSlyZXR1cm4gbyghbi5mLmNhbGwoZSx0KSxlW3RdKX19LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49cyhyKDc5KSksbz1zKHIoODEpKSxpPVwiZnVuY3Rpb25cIj09dHlwZW9mIG8uZGVmYXVsdCYmXCJzeW1ib2xcIj09dHlwZW9mIG4uZGVmYXVsdD9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBvLmRlZmF1bHQmJmUuY29uc3RydWN0b3I9PT1vLmRlZmF1bHQmJmUhPT1vLmRlZmF1bHQucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9O2Z1bmN0aW9uIHMoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXQuZGVmYXVsdD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBvLmRlZmF1bHQmJlwic3ltYm9sXCI9PT1pKG4uZGVmYXVsdCk/ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWU/XCJ1bmRlZmluZWRcIjppKGUpfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmXCJmdW5jdGlvblwiPT10eXBlb2Ygby5kZWZhdWx0JiZlLmNvbnN0cnVjdG9yPT09by5kZWZhdWx0JiZlIT09by5kZWZhdWx0LnByb3RvdHlwZT9cInN5bWJvbFwiOnZvaWQgMD09PWU/XCJ1bmRlZmluZWRcIjppKGUpfX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPXIoMTUpLG89cig2KSxpPXIoNTApLHM9cigxMSksYT1yKDE3KSx1PXIoNzEpLGM9cigyNiksbD1yKDUzKSxkPXIoMikoXCJpdGVyYXRvclwiKSxmPSEoW10ua2V5cyYmXCJuZXh0XCJpbltdLmtleXMoKSkscD1mdW5jdGlvbigpe3JldHVybiB0aGlzfTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsaCx5LHYsXyl7dShyLHQsaCk7dmFyIGIsbSxnLE89ZnVuY3Rpb24oZSl7aWYoIWYmJmUgaW4gaylyZXR1cm4ga1tlXTtzd2l0Y2goZSl7Y2FzZVwia2V5c1wiOmNhc2VcInZhbHVlc1wiOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19LHc9dCtcIiBJdGVyYXRvclwiLGo9XCJ2YWx1ZXNcIj09eSxSPSExLGs9ZS5wcm90b3R5cGUseD1rW2RdfHxrW1wiQEBpdGVyYXRvclwiXXx8eSYma1t5XSxDPXh8fE8oeSksTD15P2o/TyhcImVudHJpZXNcIik6Qzp2b2lkIDAsUz1cIkFycmF5XCI9PXQmJmsuZW50cmllc3x8eDtpZihTJiYoZz1sKFMuY2FsbChuZXcgZSkpKSE9PU9iamVjdC5wcm90b3R5cGUmJmcubmV4dCYmKGMoZyx3LCEwKSxufHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBnW2RdfHxzKGcsZCxwKSksaiYmeCYmXCJ2YWx1ZXNcIiE9PXgubmFtZSYmKFI9ITAsQz1mdW5jdGlvbigpe3JldHVybiB4LmNhbGwodGhpcyl9KSxuJiYhX3x8IWYmJiFSJiZrW2RdfHxzKGssZCxDKSxhW3RdPUMsYVt3XT1wLHkpaWYoYj17dmFsdWVzOmo/QzpPKFwidmFsdWVzXCIpLGtleXM6dj9DOk8oXCJrZXlzXCIpLGVudHJpZXM6TH0sXylmb3IobSBpbiBiKW0gaW4ga3x8aShrLG0sYlttXSk7ZWxzZSBvKG8uUCtvLkYqKGZ8fFIpLHQsYik7cmV0dXJuIGJ9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGU+MD9vKG4oZSksOTAwNzE5OTI1NDc0MDk5MSk6MH19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9cigxMSl9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDI0KTtlLmV4cG9ydHMuZj1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IGZ1bmN0aW9uKGUpe3ZhciB0LHI7dGhpcy5wcm9taXNlPW5ldyBlKGZ1bmN0aW9uKGUsbil7aWYodm9pZCAwIT09dHx8dm9pZCAwIT09cil0aHJvdyBUeXBlRXJyb3IoXCJCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvclwiKTt0PWUscj1ufSksdGhpcy5yZXNvbHZlPW4odCksdGhpcy5yZWplY3Q9bihyKX0oZSl9fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cig3MCkoITApO3IoNDgpKFN0cmluZyxcIlN0cmluZ1wiLGZ1bmN0aW9uKGUpe3RoaXMuX3Q9U3RyaW5nKGUpLHRoaXMuX2k9MH0sZnVuY3Rpb24oKXt2YXIgZSx0PXRoaXMuX3Qscj10aGlzLl9pO3JldHVybiByPj10Lmxlbmd0aD97dmFsdWU6dm9pZCAwLGRvbmU6ITB9OihlPW4odCxyKSx0aGlzLl9pKz1lLmxlbmd0aCx7dmFsdWU6ZSxkb25lOiExfSl9KX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTApLG89cigzMiksaT1yKDM1KShcIklFX1BST1RPXCIpLHM9T2JqZWN0LnByb3RvdHlwZTtlLmV4cG9ydHM9T2JqZWN0LmdldFByb3RvdHlwZU9mfHxmdW5jdGlvbihlKXtyZXR1cm4gZT1vKGUpLG4oZSxpKT9lW2ldOlwiZnVuY3Rpb25cIj09dHlwZW9mIGUuY29uc3RydWN0b3ImJmUgaW5zdGFuY2VvZiBlLmNvbnN0cnVjdG9yP2UuY29uc3RydWN0b3IucHJvdG90eXBlOmUgaW5zdGFuY2VvZiBPYmplY3Q/czpudWxsfX0sZnVuY3Rpb24oZSx0LHIpe3IoNzMpO2Zvcih2YXIgbj1yKDEpLG89cigxMSksaT1yKDE3KSxzPXIoMikoXCJ0b1N0cmluZ1RhZ1wiKSxhPVwiQ1NTUnVsZUxpc3QsQ1NTU3R5bGVEZWNsYXJhdGlvbixDU1NWYWx1ZUxpc3QsQ2xpZW50UmVjdExpc3QsRE9NUmVjdExpc3QsRE9NU3RyaW5nTGlzdCxET01Ub2tlbkxpc3QsRGF0YVRyYW5zZmVySXRlbUxpc3QsRmlsZUxpc3QsSFRNTEFsbENvbGxlY3Rpb24sSFRNTENvbGxlY3Rpb24sSFRNTEZvcm1FbGVtZW50LEhUTUxTZWxlY3RFbGVtZW50LE1lZGlhTGlzdCxNaW1lVHlwZUFycmF5LE5hbWVkTm9kZU1hcCxOb2RlTGlzdCxQYWludFJlcXVlc3RMaXN0LFBsdWdpbixQbHVnaW5BcnJheSxTVkdMZW5ndGhMaXN0LFNWR051bWJlckxpc3QsU1ZHUGF0aFNlZ0xpc3QsU1ZHUG9pbnRMaXN0LFNWR1N0cmluZ0xpc3QsU1ZHVHJhbnNmb3JtTGlzdCxTb3VyY2VCdWZmZXJMaXN0LFN0eWxlU2hlZXRMaXN0LFRleHRUcmFja0N1ZUxpc3QsVGV4dFRyYWNrTGlzdCxUb3VjaExpc3RcIi5zcGxpdChcIixcIiksdT0wO3U8YS5sZW5ndGg7dSsrKXt2YXIgYz1hW3VdLGw9bltjXSxkPWwmJmwucHJvdG90eXBlO2QmJiFkW3NdJiZvKGQscyxjKSxpW2NdPWkuQXJyYXl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyMSk7ZS5leHBvcnRzPU9iamVjdChcInpcIikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVyblwiU3RyaW5nXCI9PW4oZSk/ZS5zcGxpdChcIlwiKTpPYmplY3QoZSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKS5kb2N1bWVudDtlLmV4cG9ydHM9biYmbi5kb2N1bWVudEVsZW1lbnR9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDQ1KSxvPXIoMzcpLmNvbmNhdChcImxlbmd0aFwiLFwicHJvdG90eXBlXCIpO3QuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSxvKX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig3NiksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig2MSksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCl7fSxmdW5jdGlvbihlLHQscil7cig2Mik7dmFyIG49cigwKS5PYmplY3Q7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5kZWZpbmVQcm9wZXJ0eShlLHQscil9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KTtuKG4uUytuLkYqIXIoNCksXCJPYmplY3RcIix7ZGVmaW5lUHJvcGVydHk6cig4KS5mfSl9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIxKSxvPXIoMikoXCJ0b1N0cmluZ1RhZ1wiKSxpPVwiQXJndW1lbnRzXCI9PW4oZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzfSgpKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQscixzO3JldHVybiB2b2lkIDA9PT1lP1wiVW5kZWZpbmVkXCI6bnVsbD09PWU/XCJOdWxsXCI6XCJzdHJpbmdcIj09dHlwZW9mKHI9ZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGVbdF19Y2F0Y2goZSl7fX0odD1PYmplY3QoZSksbykpP3I6aT9uKHQpOlwiT2JqZWN0XCI9PShzPW4odCkpJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmNhbGxlZT9cIkFyZ3VtZW50c1wiOnN9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMiksbz1yKDQ5KSxpPXIoNjUpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxyLHMpe3ZhciBhLHU9bih0KSxjPW8odS5sZW5ndGgpLGw9aShzLGMpO2lmKGUmJnIhPXIpe2Zvcig7Yz5sOylpZigoYT11W2wrK10pIT1hKXJldHVybiEwfWVsc2UgZm9yKDtjPmw7bCsrKWlmKChlfHxsIGluIHUpJiZ1W2xdPT09cilyZXR1cm4gZXx8bHx8MDtyZXR1cm4hZSYmLTF9fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzEpLG89TWF0aC5tYXgsaT1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4oZT1uKGUpKTwwP28oZSt0LDApOmkoZSx0KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDkpLG89cigyNCksaT1yKDIpKFwic3BlY2llc1wiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixzPW4oZSkuY29uc3RydWN0b3I7cmV0dXJuIHZvaWQgMD09PXN8fHZvaWQgMD09KHI9bihzKVtpXSk/dDpvKHIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG8saSxzPXIoMTQpLGE9cigxMDgpLHU9cig1NiksYz1yKDI4KSxsPXIoMSksZD1sLnByb2Nlc3MsZj1sLnNldEltbWVkaWF0ZSxwPWwuY2xlYXJJbW1lZGlhdGUsaD1sLk1lc3NhZ2VDaGFubmVsLHk9bC5EaXNwYXRjaCx2PTAsXz17fSxiPWZ1bmN0aW9uKCl7dmFyIGU9K3RoaXM7aWYoXy5oYXNPd25Qcm9wZXJ0eShlKSl7dmFyIHQ9X1tlXTtkZWxldGUgX1tlXSx0KCl9fSxtPWZ1bmN0aW9uKGUpe2IuY2FsbChlLmRhdGEpfTtmJiZwfHwoZj1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj0xO2FyZ3VtZW50cy5sZW5ndGg+cjspdC5wdXNoKGFyZ3VtZW50c1tyKytdKTtyZXR1cm4gX1srK3ZdPWZ1bmN0aW9uKCl7YShcImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2U6RnVuY3Rpb24oZSksdCl9LG4odiksdn0scD1mdW5jdGlvbihlKXtkZWxldGUgX1tlXX0sXCJwcm9jZXNzXCI9PXIoMjEpKGQpP249ZnVuY3Rpb24oZSl7ZC5uZXh0VGljayhzKGIsZSwxKSl9OnkmJnkubm93P249ZnVuY3Rpb24oZSl7eS5ub3cocyhiLGUsMSkpfTpoPyhpPShvPW5ldyBoKS5wb3J0MixvLnBvcnQxLm9ubWVzc2FnZT1tLG49cyhpLnBvc3RNZXNzYWdlLGksMSkpOmwuYWRkRXZlbnRMaXN0ZW5lciYmXCJmdW5jdGlvblwiPT10eXBlb2YgcG9zdE1lc3NhZ2UmJiFsLmltcG9ydFNjcmlwdHM/KG49ZnVuY3Rpb24oZSl7bC5wb3N0TWVzc2FnZShlK1wiXCIsXCIqXCIpfSxsLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsbSwhMSkpOm49XCJvbnJlYWR5c3RhdGVjaGFuZ2VcImluIGMoXCJzY3JpcHRcIik/ZnVuY3Rpb24oZSl7dS5hcHBlbmRDaGlsZChjKFwic2NyaXB0XCIpKS5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXt1LnJlbW92ZUNoaWxkKHRoaXMpLGIuY2FsbChlKX19OmZ1bmN0aW9uKGUpe3NldFRpbWVvdXQocyhiLGUsMSksMCl9KSxlLmV4cG9ydHM9e3NldDpmLGNsZWFyOnB9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXt0cnl7cmV0dXJue2U6ITEsdjplKCl9fWNhdGNoKGUpe3JldHVybntlOiEwLHY6ZX19fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDcpLGk9cig1MSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYobihlKSxvKHQpJiZ0LmNvbnN0cnVjdG9yPT09ZSlyZXR1cm4gdDt2YXIgcj1pLmYoZSk7cmV0dXJuKDAsci5yZXNvbHZlKSh0KSxyLnByb21pc2V9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1yKDMwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscil7dmFyIGkscyxhPVN0cmluZyhvKHQpKSx1PW4ociksYz1hLmxlbmd0aDtyZXR1cm4gdTwwfHx1Pj1jP2U/XCJcIjp2b2lkIDA6KGk9YS5jaGFyQ29kZUF0KHUpKTw1NTI5Nnx8aT41NjMxOXx8dSsxPT09Y3x8KHM9YS5jaGFyQ29kZUF0KHUrMSkpPDU2MzIwfHxzPjU3MzQzP2U/YS5jaGFyQXQodSk6aTplP2Euc2xpY2UodSx1KzIpOnMtNTYzMjArKGktNTUyOTY8PDEwKSs2NTUzNn19fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49cigzOCksbz1yKDE2KSxpPXIoMjYpLHM9e307cigxMSkocyxyKDIpKFwiaXRlcmF0b3JcIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLGUuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZS5wcm90b3R5cGU9bihzLHtuZXh0Om8oMSxyKX0pLGkoZSx0K1wiIEl0ZXJhdG9yXCIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOCksbz1yKDkpLGk9cigyMCk7ZS5leHBvcnRzPXIoNCk/T2JqZWN0LmRlZmluZVByb3BlcnRpZXM6ZnVuY3Rpb24oZSx0KXtvKGUpO2Zvcih2YXIgcixzPWkodCksYT1zLmxlbmd0aCx1PTA7YT51OyluLmYoZSxyPXNbdSsrXSx0W3JdKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDc0KSxvPXIoNzUpLGk9cigxNykscz1yKDEyKTtlLmV4cG9ydHM9cig0OCkoQXJyYXksXCJBcnJheVwiLGZ1bmN0aW9uKGUsdCl7dGhpcy5fdD1zKGUpLHRoaXMuX2k9MCx0aGlzLl9rPXR9LGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdCx0PXRoaXMuX2sscj10aGlzLl9pKys7cmV0dXJuIWV8fHI+PWUubGVuZ3RoPyh0aGlzLl90PXZvaWQgMCxvKDEpKTpvKDAsXCJrZXlzXCI9PXQ/cjpcInZhbHVlc1wiPT10P2Vbcl06W3IsZVtyXV0pfSxcInZhbHVlc1wiKSxpLkFyZ3VtZW50cz1pLkFycmF5LG4oXCJrZXlzXCIpLG4oXCJ2YWx1ZXNcIiksbihcImVudHJpZXNcIil9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7fX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dmFsdWU6dCxkb25lOiEhZX19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigwKSxvPW4uSlNPTnx8KG4uSlNPTj17c3RyaW5naWZ5OkpTT04uc3RyaW5naWZ5fSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvLnN0cmluZ2lmeS5hcHBseShvLGFyZ3VtZW50cyl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyMykoXCJtZXRhXCIpLG89cig3KSxpPXIoMTApLHM9cig4KS5mLGE9MCx1PU9iamVjdC5pc0V4dGVuc2libGV8fGZ1bmN0aW9uKCl7cmV0dXJuITB9LGM9IXIoMTMpKGZ1bmN0aW9uKCl7cmV0dXJuIHUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSl9KSxsPWZ1bmN0aW9uKGUpe3MoZSxuLHt2YWx1ZTp7aTpcIk9cIisgKythLHc6e319fSl9LGQ9ZS5leHBvcnRzPXtLRVk6bixORUVEOiExLGZhc3RLZXk6ZnVuY3Rpb24oZSx0KXtpZighbyhlKSlyZXR1cm5cInN5bWJvbFwiPT10eXBlb2YgZT9lOihcInN0cmluZ1wiPT10eXBlb2YgZT9cIlNcIjpcIlBcIikrZTtpZighaShlLG4pKXtpZighdShlKSlyZXR1cm5cIkZcIjtpZighdClyZXR1cm5cIkVcIjtsKGUpfXJldHVybiBlW25dLml9LGdldFdlYWs6ZnVuY3Rpb24oZSx0KXtpZighaShlLG4pKXtpZighdShlKSlyZXR1cm4hMDtpZighdClyZXR1cm4hMTtsKGUpfXJldHVybiBlW25dLnd9LG9uRnJlZXplOmZ1bmN0aW9uKGUpe3JldHVybiBjJiZkLk5FRUQmJnUoZSkmJiFpKGUsbikmJmwoZSksZX19fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoMTE5KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDgwKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoNTIpLHIoNTQpLGUuZXhwb3J0cz1yKDQwKS5mKFwiaXRlcmF0b3JcIil9LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig4MiksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtyKDgzKSxyKDYwKSxyKDg3KSxyKDg4KSxlLmV4cG9ydHM9cigwKS5TeW1ib2x9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDEpLG89cigxMCksaT1yKDQpLHM9cig2KSxhPXIoNTApLHU9cig3NykuS0VZLGM9cigxMyksbD1yKDM2KSxkPXIoMjYpLGY9cigyMykscD1yKDIpLGg9cig0MCkseT1yKDQxKSx2PXIoODQpLF89cig4NSksYj1yKDkpLG09cig3KSxnPXIoMTIpLE89cigyNyksdz1yKDE2KSxqPXIoMzgpLFI9cig4Niksaz1yKDQ2KSx4PXIoOCksQz1yKDIwKSxMPWsuZixTPXguZixFPVIuZixQPW4uU3ltYm9sLE09bi5KU09OLFQ9TSYmTS5zdHJpbmdpZnksRD1wKFwiX2hpZGRlblwiKSxBPXAoXCJ0b1ByaW1pdGl2ZVwiKSxVPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLEg9bChcInN5bWJvbC1yZWdpc3RyeVwiKSxJPWwoXCJzeW1ib2xzXCIpLE49bChcIm9wLXN5bWJvbHNcIiksRj1PYmplY3QucHJvdG90eXBlLFY9XCJmdW5jdGlvblwiPT10eXBlb2YgUCxCPW4uUU9iamVjdCx6PSFCfHwhQi5wcm90b3R5cGV8fCFCLnByb3RvdHlwZS5maW5kQ2hpbGQscT1pJiZjKGZ1bmN0aW9uKCl7cmV0dXJuIDchPWooUyh7fSxcImFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFModGhpcyxcImFcIix7dmFsdWU6N30pLmF9fSkpLmF9KT9mdW5jdGlvbihlLHQscil7dmFyIG49TChGLHQpO24mJmRlbGV0ZSBGW3RdLFMoZSx0LHIpLG4mJmUhPT1GJiZTKEYsdCxuKX06UyxXPWZ1bmN0aW9uKGUpe3ZhciB0PUlbZV09aihQLnByb3RvdHlwZSk7cmV0dXJuIHQuX2s9ZSx0fSxaPVYmJlwic3ltYm9sXCI9PXR5cGVvZiBQLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVyblwic3ltYm9sXCI9PXR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIFB9LEo9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPT09RiYmSihOLHQsciksYihlKSx0PU8odCwhMCksYihyKSxvKEksdCk/KHIuZW51bWVyYWJsZT8obyhlLEQpJiZlW0RdW3RdJiYoZVtEXVt0XT0hMSkscj1qKHIse2VudW1lcmFibGU6dygwLCExKX0pKToobyhlLEQpfHxTKGUsRCx3KDEse30pKSxlW0RdW3RdPSEwKSxxKGUsdCxyKSk6UyhlLHQscil9LEc9ZnVuY3Rpb24oZSx0KXtiKGUpO2Zvcih2YXIgcixuPXYodD1nKHQpKSxvPTAsaT1uLmxlbmd0aDtpPm87KUooZSxyPW5bbysrXSx0W3JdKTtyZXR1cm4gZX0sWT1mdW5jdGlvbihlKXt2YXIgdD1VLmNhbGwodGhpcyxlPU8oZSwhMCkpO3JldHVybiEodGhpcz09PUYmJm8oSSxlKSYmIW8oTixlKSkmJighKHR8fCFvKHRoaXMsZSl8fCFvKEksZSl8fG8odGhpcyxEKSYmdGhpc1tEXVtlXSl8fHQpfSxLPWZ1bmN0aW9uKGUsdCl7aWYoZT1nKGUpLHQ9Tyh0LCEwKSxlIT09Rnx8IW8oSSx0KXx8byhOLHQpKXt2YXIgcj1MKGUsdCk7cmV0dXJuIXJ8fCFvKEksdCl8fG8oZSxEKSYmZVtEXVt0XXx8KHIuZW51bWVyYWJsZT0hMCkscn19LCQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9RShnKGUpKSxuPVtdLGk9MDtyLmxlbmd0aD5pOylvKEksdD1yW2krK10pfHx0PT1EfHx0PT11fHxuLnB1c2godCk7cmV0dXJuIG59LFE9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9ZT09PUYsbj1FKHI/TjpnKGUpKSxpPVtdLHM9MDtuLmxlbmd0aD5zOykhbyhJLHQ9bltzKytdKXx8ciYmIW8oRix0KXx8aS5wdXNoKElbdF0pO3JldHVybiBpfTtWfHwoYSgoUD1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBQKXRocm93IFR5cGVFcnJvcihcIlN5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciFcIik7dmFyIGU9Zihhcmd1bWVudHMubGVuZ3RoPjA/YXJndW1lbnRzWzBdOnZvaWQgMCksdD1mdW5jdGlvbihyKXt0aGlzPT09RiYmdC5jYWxsKE4sciksbyh0aGlzLEQpJiZvKHRoaXNbRF0sZSkmJih0aGlzW0RdW2VdPSExKSxxKHRoaXMsZSx3KDEscikpfTtyZXR1cm4gaSYmeiYmcShGLGUse2NvbmZpZ3VyYWJsZTohMCxzZXQ6dH0pLFcoZSl9KS5wcm90b3R5cGUsXCJ0b1N0cmluZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2t9KSxrLmY9Syx4LmY9SixyKDU3KS5mPVIuZj0kLHIoMjkpLmY9WSxyKDQzKS5mPVEsaSYmIXIoMTUpJiZhKEYsXCJwcm9wZXJ0eUlzRW51bWVyYWJsZVwiLFksITApLGguZj1mdW5jdGlvbihlKXtyZXR1cm4gVyhwKGUpKX0pLHMocy5HK3MuVytzLkYqIVYse1N5bWJvbDpQfSk7Zm9yKHZhciBYPVwiaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXNcIi5zcGxpdChcIixcIiksZWU9MDtYLmxlbmd0aD5lZTspcChYW2VlKytdKTtmb3IodmFyIHRlPUMocC5zdG9yZSkscmU9MDt0ZS5sZW5ndGg+cmU7KXkodGVbcmUrK10pO3Mocy5TK3MuRiohVixcIlN5bWJvbFwiLHtmb3I6ZnVuY3Rpb24oZSl7cmV0dXJuIG8oSCxlKz1cIlwiKT9IW2VdOkhbZV09UChlKX0sa2V5Rm9yOmZ1bmN0aW9uKGUpe2lmKCFaKGUpKXRocm93IFR5cGVFcnJvcihlK1wiIGlzIG5vdCBhIHN5bWJvbCFcIik7Zm9yKHZhciB0IGluIEgpaWYoSFt0XT09PWUpcmV0dXJuIHR9LHVzZVNldHRlcjpmdW5jdGlvbigpe3o9ITB9LHVzZVNpbXBsZTpmdW5jdGlvbigpe3o9ITF9fSkscyhzLlMrcy5GKiFWLFwiT2JqZWN0XCIse2NyZWF0ZTpmdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P2ooZSk6RyhqKGUpLHQpfSxkZWZpbmVQcm9wZXJ0eTpKLGRlZmluZVByb3BlcnRpZXM6RyxnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6SyxnZXRPd25Qcm9wZXJ0eU5hbWVzOiQsZ2V0T3duUHJvcGVydHlTeW1ib2xzOlF9KSxNJiZzKHMuUytzLkYqKCFWfHxjKGZ1bmN0aW9uKCl7dmFyIGU9UCgpO3JldHVyblwiW251bGxdXCIhPVQoW2VdKXx8XCJ7fVwiIT1UKHthOmV9KXx8XCJ7fVwiIT1UKE9iamVjdChlKSl9KSksXCJKU09OXCIse3N0cmluZ2lmeTpmdW5jdGlvbihlKXtmb3IodmFyIHQscixuPVtlXSxvPTE7YXJndW1lbnRzLmxlbmd0aD5vOyluLnB1c2goYXJndW1lbnRzW28rK10pO2lmKHI9dD1uWzFdLChtKHQpfHx2b2lkIDAhPT1lKSYmIVooZSkpcmV0dXJuIF8odCl8fCh0PWZ1bmN0aW9uKGUsdCl7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgciYmKHQ9ci5jYWxsKHRoaXMsZSx0KSksIVoodCkpcmV0dXJuIHR9KSxuWzFdPXQsVC5hcHBseShNLG4pfX0pLFAucHJvdG90eXBlW0FdfHxyKDExKShQLnByb3RvdHlwZSxBLFAucHJvdG90eXBlLnZhbHVlT2YpLGQoUCxcIlN5bWJvbFwiKSxkKE1hdGgsXCJNYXRoXCIsITApLGQobi5KU09OLFwiSlNPTlwiLCEwKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjApLG89cig0MyksaT1yKDI5KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9bihlKSxyPW8uZjtpZihyKWZvcih2YXIgcyxhPXIoZSksdT1pLmYsYz0wO2EubGVuZ3RoPmM7KXUuY2FsbChlLHM9YVtjKytdKSYmdC5wdXNoKHMpO3JldHVybiB0fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjEpO2UuZXhwb3J0cz1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm5cIkFycmF5XCI9PW4oZSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMiksbz1yKDU3KS5mLGk9e30udG9TdHJpbmcscz1cIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzP09iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdyk6W107ZS5leHBvcnRzLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIHMmJlwiW29iamVjdCBXaW5kb3ddXCI9PWkuY2FsbChlKT9mdW5jdGlvbihlKXt0cnl7cmV0dXJuIG8oZSl9Y2F0Y2goZSl7cmV0dXJuIHMuc2xpY2UoKX19KGUpOm8obihlKSl9fSxmdW5jdGlvbihlLHQscil7cig0MSkoXCJhc3luY0l0ZXJhdG9yXCIpfSxmdW5jdGlvbihlLHQscil7cig0MSkoXCJvYnNlcnZhYmxlXCIpfSxmdW5jdGlvbihlLHQscil7cig5MCksZS5leHBvcnRzPXIoMCkuT2JqZWN0LmtleXN9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMyKSxvPXIoMjApO3IoNDQpKFwia2V5c1wiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBvKG4oZSkpfX0pfSxmdW5jdGlvbihlLHQscil7cig5MiksZS5leHBvcnRzPXIoMCkuT2JqZWN0LmdldFByb3RvdHlwZU9mfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMiksbz1yKDUzKTtyKDQ0KShcImdldFByb3RvdHlwZU9mXCIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG8obihlKSl9fSl9LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig5NCksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtyKDk1KSxlLmV4cG9ydHM9cigwKS5PYmplY3Quc2V0UHJvdG90eXBlT2Z9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYpO24obi5TLFwiT2JqZWN0XCIse3NldFByb3RvdHlwZU9mOnIoOTYpLnNldH0pfSxmdW5jdGlvbihlLHQscil7dmFyIG49cig3KSxvPXIoOSksaT1mdW5jdGlvbihlLHQpe2lmKG8oZSksIW4odCkmJm51bGwhPT10KXRocm93IFR5cGVFcnJvcih0K1wiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlIVwiKX07ZS5leHBvcnRzPXtzZXQ6T2JqZWN0LnNldFByb3RvdHlwZU9mfHwoXCJfX3Byb3RvX19cImlue30/ZnVuY3Rpb24oZSx0LG4pe3RyeXsobj1yKDE0KShGdW5jdGlvbi5jYWxsLHIoNDYpLmYoT2JqZWN0LnByb3RvdHlwZSxcIl9fcHJvdG9fX1wiKS5zZXQsMikpKGUsW10pLHQ9IShlIGluc3RhbmNlb2YgQXJyYXkpfWNhdGNoKGUpe3Q9ITB9cmV0dXJuIGZ1bmN0aW9uKGUscil7cmV0dXJuIGkoZSxyKSx0P2UuX19wcm90b19fPXI6bihlLHIpLGV9fSh7fSwhMSk6dm9pZCAwKSxjaGVjazppfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDk4KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoOTkpO3ZhciBuPXIoMCkuT2JqZWN0O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBuLmNyZWF0ZShlLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNik7bihuLlMsXCJPYmplY3RcIix7Y3JlYXRlOnIoMzgpfSl9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49aShyKDI1KSksbz1pKHIoMTI1KSk7ZnVuY3Rpb24gaShlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dC5kZWZhdWx0PWZ1bmN0aW9uIGUodCxyLGkpe251bGw9PT10JiYodD1GdW5jdGlvbi5wcm90b3R5cGUpO3ZhciBzPSgwLG8uZGVmYXVsdCkodCxyKTtpZih2b2lkIDA9PT1zKXt2YXIgYT0oMCxuLmRlZmF1bHQpKHQpO3JldHVybiBudWxsPT09YT92b2lkIDA6ZShhLHIsaSl9aWYoXCJ2YWx1ZVwiaW4gcylyZXR1cm4gcy52YWx1ZTt2YXIgdT1zLmdldDtyZXR1cm4gdm9pZCAwIT09dT91LmNhbGwoaSk6dm9pZCAwfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNjMpLG89cigyKShcIml0ZXJhdG9yXCIpLGk9cigxNyk7ZS5leHBvcnRzPXIoMCkuZ2V0SXRlcmF0b3JNZXRob2Q9ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT1lKXJldHVybiBlW29dfHxlW1wiQEBpdGVyYXRvclwiXXx8aVtuKGUpXX19LGZ1bmN0aW9uKGUsdCxyKXtyKDYwKSxyKDUyKSxyKDU0KSxyKDEwMykscigxMTQpLHIoMTE1KSxlLmV4cG9ydHM9cigwKS5Qcm9taXNlfSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG4sbyxpLHMsYT1yKDE1KSx1PXIoMSksYz1yKDE0KSxsPXIoNjMpLGQ9cig2KSxmPXIoNykscD1yKDI0KSxoPXIoMTA0KSx5PXIoMTA1KSx2PXIoNjYpLF89cig2Nykuc2V0LGI9cigxMDkpKCksbT1yKDUxKSxnPXIoNjgpLE89cigxMTApLHc9cig2OSksaj11LlR5cGVFcnJvcixSPXUucHJvY2VzcyxrPVImJlIudmVyc2lvbnMseD1rJiZrLnY4fHxcIlwiLEM9dS5Qcm9taXNlLEw9XCJwcm9jZXNzXCI9PWwoUiksUz1mdW5jdGlvbigpe30sRT1vPW0uZixQPSEhZnVuY3Rpb24oKXt0cnl7dmFyIGU9Qy5yZXNvbHZlKDEpLHQ9KGUuY29uc3RydWN0b3I9e30pW3IoMikoXCJzcGVjaWVzXCIpXT1mdW5jdGlvbihlKXtlKFMsUyl9O3JldHVybihMfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQpJiZlLnRoZW4oUylpbnN0YW5jZW9mIHQmJjAhPT14LmluZGV4T2YoXCI2LjZcIikmJi0xPT09Ty5pbmRleE9mKFwiQ2hyb21lLzY2XCIpfWNhdGNoKGUpe319KCksTT1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4hKCFmKGUpfHxcImZ1bmN0aW9uXCIhPXR5cGVvZih0PWUudGhlbikpJiZ0fSxUPWZ1bmN0aW9uKGUsdCl7aWYoIWUuX24pe2UuX249ITA7dmFyIHI9ZS5fYztiKGZ1bmN0aW9uKCl7Zm9yKHZhciBuPWUuX3Ysbz0xPT1lLl9zLGk9MCxzPWZ1bmN0aW9uKHQpe3ZhciByLGkscyxhPW8/dC5vazp0LmZhaWwsdT10LnJlc29sdmUsYz10LnJlamVjdCxsPXQuZG9tYWluO3RyeXthPyhvfHwoMj09ZS5faCYmVShlKSxlLl9oPTEpLCEwPT09YT9yPW46KGwmJmwuZW50ZXIoKSxyPWEobiksbCYmKGwuZXhpdCgpLHM9ITApKSxyPT09dC5wcm9taXNlP2MoaihcIlByb21pc2UtY2hhaW4gY3ljbGVcIikpOihpPU0ocikpP2kuY2FsbChyLHUsYyk6dShyKSk6YyhuKX1jYXRjaChlKXtsJiYhcyYmbC5leGl0KCksYyhlKX19O3IubGVuZ3RoPmk7KXMocltpKytdKTtlLl9jPVtdLGUuX249ITEsdCYmIWUuX2gmJkQoZSl9KX19LEQ9ZnVuY3Rpb24oZSl7Xy5jYWxsKHUsZnVuY3Rpb24oKXt2YXIgdCxyLG4sbz1lLl92LGk9QShlKTtpZihpJiYodD1nKGZ1bmN0aW9uKCl7TD9SLmVtaXQoXCJ1bmhhbmRsZWRSZWplY3Rpb25cIixvLGUpOihyPXUub251bmhhbmRsZWRyZWplY3Rpb24pP3Ioe3Byb21pc2U6ZSxyZWFzb246b30pOihuPXUuY29uc29sZSkmJm4uZXJyb3ImJm4uZXJyb3IoXCJVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb25cIixvKX0pLGUuX2g9THx8QShlKT8yOjEpLGUuX2E9dm9pZCAwLGkmJnQuZSl0aHJvdyB0LnZ9KX0sQT1mdW5jdGlvbihlKXtyZXR1cm4gMSE9PWUuX2gmJjA9PT0oZS5fYXx8ZS5fYykubGVuZ3RofSxVPWZ1bmN0aW9uKGUpe18uY2FsbCh1LGZ1bmN0aW9uKCl7dmFyIHQ7TD9SLmVtaXQoXCJyZWplY3Rpb25IYW5kbGVkXCIsZSk6KHQ9dS5vbnJlamVjdGlvbmhhbmRsZWQpJiZ0KHtwcm9taXNlOmUscmVhc29uOmUuX3Z9KX0pfSxIPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fZHx8KHQuX2Q9ITAsKHQ9dC5fd3x8dCkuX3Y9ZSx0Ll9zPTIsdC5fYXx8KHQuX2E9dC5fYy5zbGljZSgpKSxUKHQsITApKX0sST1mdW5jdGlvbihlKXt2YXIgdCxyPXRoaXM7aWYoIXIuX2Qpe3IuX2Q9ITAscj1yLl93fHxyO3RyeXtpZihyPT09ZSl0aHJvdyBqKFwiUHJvbWlzZSBjYW4ndCBiZSByZXNvbHZlZCBpdHNlbGZcIik7KHQ9TShlKSk/YihmdW5jdGlvbigpe3ZhciBuPXtfdzpyLF9kOiExfTt0cnl7dC5jYWxsKGUsYyhJLG4sMSksYyhILG4sMSkpfWNhdGNoKGUpe0guY2FsbChuLGUpfX0pOihyLl92PWUsci5fcz0xLFQociwhMSkpfWNhdGNoKGUpe0guY2FsbCh7X3c6cixfZDohMX0sZSl9fX07UHx8KEM9ZnVuY3Rpb24oZSl7aCh0aGlzLEMsXCJQcm9taXNlXCIsXCJfaFwiKSxwKGUpLG4uY2FsbCh0aGlzKTt0cnl7ZShjKEksdGhpcywxKSxjKEgsdGhpcywxKSl9Y2F0Y2goZSl7SC5jYWxsKHRoaXMsZSl9fSwobj1mdW5jdGlvbihlKXt0aGlzLl9jPVtdLHRoaXMuX2E9dm9pZCAwLHRoaXMuX3M9MCx0aGlzLl9kPSExLHRoaXMuX3Y9dm9pZCAwLHRoaXMuX2g9MCx0aGlzLl9uPSExfSkucHJvdG90eXBlPXIoMTExKShDLnByb3RvdHlwZSx7dGhlbjpmdW5jdGlvbihlLHQpe3ZhciByPUUodih0aGlzLEMpKTtyZXR1cm4gci5vaz1cImZ1bmN0aW9uXCIhPXR5cGVvZiBlfHxlLHIuZmFpbD1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiZ0LHIuZG9tYWluPUw/Ui5kb21haW46dm9pZCAwLHRoaXMuX2MucHVzaChyKSx0aGlzLl9hJiZ0aGlzLl9hLnB1c2gociksdGhpcy5fcyYmVCh0aGlzLCExKSxyLnByb21pc2V9LGNhdGNoOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnRoZW4odm9pZCAwLGUpfX0pLGk9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgbjt0aGlzLnByb21pc2U9ZSx0aGlzLnJlc29sdmU9YyhJLGUsMSksdGhpcy5yZWplY3Q9YyhILGUsMSl9LG0uZj1FPWZ1bmN0aW9uKGUpe3JldHVybiBlPT09Q3x8ZT09PXM/bmV3IGkoZSk6byhlKX0pLGQoZC5HK2QuVytkLkYqIVAse1Byb21pc2U6Q30pLHIoMjYpKEMsXCJQcm9taXNlXCIpLHIoMTEyKShcIlByb21pc2VcIikscz1yKDApLlByb21pc2UsZChkLlMrZC5GKiFQLFwiUHJvbWlzZVwiLHtyZWplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQ9RSh0aGlzKTtyZXR1cm4oMCx0LnJlamVjdCkoZSksdC5wcm9taXNlfX0pLGQoZC5TK2QuRiooYXx8IVApLFwiUHJvbWlzZVwiLHtyZXNvbHZlOmZ1bmN0aW9uKGUpe3JldHVybiB3KGEmJnRoaXM9PT1zP0M6dGhpcyxlKX19KSxkKGQuUytkLkYqIShQJiZyKDExMykoZnVuY3Rpb24oZSl7Qy5hbGwoZSkuY2F0Y2goUyl9KSksXCJQcm9taXNlXCIse2FsbDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9RSh0KSxuPXIucmVzb2x2ZSxvPXIucmVqZWN0LGk9ZyhmdW5jdGlvbigpe3ZhciByPVtdLGk9MCxzPTE7eShlLCExLGZ1bmN0aW9uKGUpe3ZhciBhPWkrKyx1PSExO3IucHVzaCh2b2lkIDApLHMrKyx0LnJlc29sdmUoZSkudGhlbihmdW5jdGlvbihlKXt1fHwodT0hMCxyW2FdPWUsLS1zfHxuKHIpKX0sbyl9KSwtLXN8fG4ocil9KTtyZXR1cm4gaS5lJiZvKGkudiksci5wcm9taXNlfSxyYWNlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1FKHQpLG49ci5yZWplY3Qsbz1nKGZ1bmN0aW9uKCl7eShlLCExLGZ1bmN0aW9uKGUpe3QucmVzb2x2ZShlKS50aGVuKHIucmVzb2x2ZSxuKX0pfSk7cmV0dXJuIG8uZSYmbihvLnYpLHIucHJvbWlzZX19KX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbil7aWYoIShlIGluc3RhbmNlb2YgdCl8fHZvaWQgMCE9PW4mJm4gaW4gZSl0aHJvdyBUeXBlRXJyb3IocitcIjogaW5jb3JyZWN0IGludm9jYXRpb24hXCIpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTQpLG89cigxMDYpLGk9cigxMDcpLHM9cig5KSxhPXIoNDkpLHU9cigxMDEpLGM9e30sbD17fTsodD1lLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsZCxmKXt2YXIgcCxoLHksdixfPWY/ZnVuY3Rpb24oKXtyZXR1cm4gZX06dShlKSxiPW4ocixkLHQ/MjoxKSxtPTA7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgXyl0aHJvdyBUeXBlRXJyb3IoZStcIiBpcyBub3QgaXRlcmFibGUhXCIpO2lmKGkoXykpe2ZvcihwPWEoZS5sZW5ndGgpO3A+bTttKyspaWYoKHY9dD9iKHMoaD1lW21dKVswXSxoWzFdKTpiKGVbbV0pKT09PWN8fHY9PT1sKXJldHVybiB2fWVsc2UgZm9yKHk9Xy5jYWxsKGUpOyEoaD15Lm5leHQoKSkuZG9uZTspaWYoKHY9byh5LGIsaC52YWx1ZSx0KSk9PT1jfHx2PT09bClyZXR1cm4gdn0pLkJSRUFLPWMsdC5SRVRVUk49bH0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG8pe3RyeXtyZXR1cm4gbz90KG4ocilbMF0sclsxXSk6dChyKX1jYXRjaCh0KXt2YXIgaT1lLnJldHVybjt0aHJvdyB2b2lkIDAhPT1pJiZuKGkuY2FsbChlKSksdH19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxNyksbz1yKDIpKFwiaXRlcmF0b3JcIiksaT1BcnJheS5wcm90b3R5cGU7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDAhPT1lJiYobi5BcnJheT09PWV8fGlbb109PT1lKX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj12b2lkIDA9PT1yO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuP2UoKTplLmNhbGwocik7Y2FzZSAxOnJldHVybiBuP2UodFswXSk6ZS5jYWxsKHIsdFswXSk7Y2FzZSAyOnJldHVybiBuP2UodFswXSx0WzFdKTplLmNhbGwocix0WzBdLHRbMV0pO2Nhc2UgMzpyZXR1cm4gbj9lKHRbMF0sdFsxXSx0WzJdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSk7Y2FzZSA0OnJldHVybiBuP2UodFswXSx0WzFdLHRbMl0sdFszXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0sdFszXSl9cmV0dXJuIGUuYXBwbHkocix0KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEpLG89cig2Nykuc2V0LGk9bi5NdXRhdGlvbk9ic2VydmVyfHxuLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIscz1uLnByb2Nlc3MsYT1uLlByb21pc2UsdT1cInByb2Nlc3NcIj09cigyMSkocyk7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLGM9ZnVuY3Rpb24oKXt2YXIgbixvO2Zvcih1JiYobj1zLmRvbWFpbikmJm4uZXhpdCgpO2U7KXtvPWUuZm4sZT1lLm5leHQ7dHJ5e28oKX1jYXRjaChuKXt0aHJvdyBlP3IoKTp0PXZvaWQgMCxufX10PXZvaWQgMCxuJiZuLmVudGVyKCl9O2lmKHUpcj1mdW5jdGlvbigpe3MubmV4dFRpY2soYyl9O2Vsc2UgaWYoIWl8fG4ubmF2aWdhdG9yJiZuLm5hdmlnYXRvci5zdGFuZGFsb25lKWlmKGEmJmEucmVzb2x2ZSl7dmFyIGw9YS5yZXNvbHZlKHZvaWQgMCk7cj1mdW5jdGlvbigpe2wudGhlbihjKX19ZWxzZSByPWZ1bmN0aW9uKCl7by5jYWxsKG4sYyl9O2Vsc2V7dmFyIGQ9ITAsZj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtuZXcgaShjKS5vYnNlcnZlKGYse2NoYXJhY3RlckRhdGE6ITB9KSxyPWZ1bmN0aW9uKCl7Zi5kYXRhPWQ9IWR9fXJldHVybiBmdW5jdGlvbihuKXt2YXIgbz17Zm46bixuZXh0OnZvaWQgMH07dCYmKHQubmV4dD1vKSxlfHwoZT1vLHIoKSksdD1vfX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEpLm5hdmlnYXRvcjtlLmV4cG9ydHM9biYmbi51c2VyQWdlbnR8fFwiXCJ9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDExKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbyBpbiB0KXImJmVbb10/ZVtvXT10W29dOm4oZSxvLHRbb10pO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPXIoMSksbz1yKDApLGk9cig4KSxzPXIoNCksYT1yKDIpKFwic3BlY2llc1wiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9XCJmdW5jdGlvblwiPT10eXBlb2Ygb1tlXT9vW2VdOm5bZV07cyYmdCYmIXRbYV0mJmkuZih0LGEse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc319KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIpKFwiaXRlcmF0b3JcIiksbz0hMTt0cnl7dmFyIGk9WzddW25dKCk7aS5yZXR1cm49ZnVuY3Rpb24oKXtvPSEwfSxBcnJheS5mcm9tKGksZnVuY3Rpb24oKXt0aHJvdyAyfSl9Y2F0Y2goZSl7fWUuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCF0JiYhbylyZXR1cm4hMTt2YXIgcj0hMTt0cnl7dmFyIGk9WzddLHM9aVtuXSgpO3MubmV4dD1mdW5jdGlvbigpe3JldHVybntkb25lOnI9ITB9fSxpW25dPWZ1bmN0aW9uKCl7cmV0dXJuIHN9LGUoaSl9Y2F0Y2goZSl7fXJldHVybiByfX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPXIoNiksbz1yKDApLGk9cigxKSxzPXIoNjYpLGE9cig2OSk7bihuLlArbi5SLFwiUHJvbWlzZVwiLHtmaW5hbGx5OmZ1bmN0aW9uKGUpe3ZhciB0PXModGhpcyxvLlByb21pc2V8fGkuUHJvbWlzZSkscj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBlO3JldHVybiB0aGlzLnRoZW4ocj9mdW5jdGlvbihyKXtyZXR1cm4gYSh0LGUoKSkudGhlbihmdW5jdGlvbigpe3JldHVybiByfSl9OmUscj9mdW5jdGlvbihyKXtyZXR1cm4gYSh0LGUoKSkudGhlbihmdW5jdGlvbigpe3Rocm93IHJ9KX06ZSl9fSl9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1yKDYpLG89cig1MSksaT1yKDY4KTtuKG4uUyxcIlByb21pc2VcIix7dHJ5OmZ1bmN0aW9uKGUpe3ZhciB0PW8uZih0aGlzKSxyPWkoZSk7cmV0dXJuKHIuZT90LnJlamVjdDp0LnJlc29sdmUpKHIudiksdC5wcm9taXNlfX0pfSwsZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuT2JqZWN0VHlwZT10LkNoYW5nZVR5cGU9dm9pZCAwO3ZhciBuPXMocigzKSksbz1zKHIoNSkpO3IoMTIzKTt2YXIgaT1yKDE5KTtmdW5jdGlvbiBzKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7KDAsbi5kZWZhdWx0KSh0aGlzLGUpO3RoaXMuX29ic2VydmVycz1bXSx0aGlzLl9maWx0ZXJzPXt9LHRoaXMuX2RhdGE9dHx8e30sdGhpcy5faW50ZXJuYWxPYnNlcnZlKHRoaXMuX2RhdGEpfXJldHVybigwLG8uZGVmYXVsdCkoZSxbe2tleTpcIm9ic2VydmVcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vYnNlcnZlcnMucHVzaChlKX19LHtrZXk6XCJmaW5kXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9KDAsaS5wYXJzZUF0dHJpYnV0ZXMpKGUpO3JldHVybiB0aGlzLl9maW5kV2l0aFNwbGl0KHQpfX0se2tleTpcImZpbmRCZWZvcmVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD17fSxyPSgwLGkucGFyc2VBdHRyaWJ1dGVzKShlKTtyZXR1cm4gdC5sYXN0PXIucG9wKCksdC5vYmo9dGhpcy5fZmluZFdpdGhTcGxpdChyKSx0fX0se2tleTpcIl9maW5kV2l0aFNwbGl0XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZGF0YTtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3Q9dFtlXX0pLHR9fSx7a2V5OlwiX2ludGVybmFsT2JzZXJ2ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dGhpcy5fZGF0YT1PYmplY3QuZGVlcE9ic2VydmUoZSxmdW5jdGlvbihlKXtlLmV2ZXJ5KGZ1bmN0aW9uKGUpe3QuX29uQ2hhbmdlcyhlKX0pfSl9fSx7a2V5OlwiX2ZpcmVFdmVudFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QoZSl9KX19LHtrZXk6XCJfb25DaGFuZ2VzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5vYmplY3Qscj12b2lkIDA7dC5jb25zdHJ1Y3Rvcj09PU9iamVjdCYmKHI9Yy5PQkpFQ1QpLHQuY29uc3RydWN0b3I9PT1BcnJheSYmKHI9Yy5BUlJBWSk7dmFyIG49ZS5rZXlwYXRoLG89dFtlLm5hbWVdO1widXBkYXRlXCIhPT1lLnR5cGV8fG4uaW5jbHVkZXMoXCIubGVuZ3RoXCIpfHx0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnUuVVBEQVRFLG9UeXBlOnIsZmllbGQ6bixkYXRhOm99KSxcImFkZFwiPT09ZS50eXBlJiZ0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnUuQURELG9UeXBlOnIsZmllbGQ6bixkYXRhOm99KSxcImRlbGV0ZVwiPT09ZS50eXBlJiZ0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnUuUkVNT1ZFLG9UeXBlOnIsZmllbGQ6bn0pfX0se2tleTpcImRhdGFcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YX19XSksZX0oKSx1PXQuQ2hhbmdlVHlwZT17VVBEQVRFOlwidXBkYXRlXCIsQUREOlwiYWRkXCIsUkVNT1ZFOlwicmVtb3ZlXCJ9LGM9dC5PYmplY3RUeXBlPXtPQkpFQ1Q6XCJvYmplY3RcIixBUlJBWTpcImFycmF5XCJ9O3QuZGVmYXVsdD1hfSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49YyhyKDE4KSksbz1jKHIoMykpLGk9YyhyKDUpKSxzPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLGE9YyhyKDExNykpLHU9cigxOSk7ZnVuY3Rpb24gYyhlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIGw9cy5nZXRMb2dnZXIoXCJEYXRhT2JqZWN0Q2hpbGRcIiksZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7KDAsby5kZWZhdWx0KSh0aGlzLGUpO2Z1bmN0aW9uIHIoZSl7dGhyb3dcIltEYXRhT2JqZWN0Q2hpbGRdIFwiK2UrXCIgbWFuZGF0b3J5IHBhcmFtZXRlciBpcyBtaXNzaW5nXCJ9dC5wYXJlbnQ/dGhpcy5fcGFyZW50PXQucGFyZW50OnIoXCJwYXJlbnRcIiksdC51cmw/dGhpcy5fdXJsPXQudXJsOnIoXCJ1cmxcIiksdC5jcmVhdGVkP3RoaXMuX2NyZWF0ZWQ9dC5jcmVhdGVkOnIoXCJjcmVhdGVkXCIpLHQucmVwb3J0ZXI/dGhpcy5fcmVwb3J0ZXI9dC5yZXBvcnRlcjpyKFwicmVwb3J0ZXJcIiksdC5ydW50aW1lP3RoaXMuX3J1bnRpbWU9dC5ydW50aW1lOnIoXCJydW50aW1lXCIpLHQuc2NoZW1hP3RoaXMuX3NjaGVtYT10LnNjaGVtYTpyKFwic2NoZW1hXCIpLHQucGFyZW50T2JqZWN0P3RoaXMuX3BhcmVudE9iamVjdD10LnBhcmVudE9iamVjdDpyKFwicGFyZW50T2JqZWN0XCIpLHQubmFtZSYmKHRoaXMuX25hbWU9dC5uYW1lKSx0LmRlc2NyaXB0aW9uJiYodGhpcy5fZGVzY3JpcHRpb249dC5kZXNjcmlwdGlvbiksdC50YWdzJiYodGhpcy5fdGFncz10LnRhZ3MpLHQucmVzb3VyY2VzJiYodGhpcy5fcmVzb3VyY2VzPXQucmVzb3VyY2VzKSx0Lm9ic2VydmVyU3RvcmFnZSYmKHRoaXMuX29ic2VydmVyU3RvcmFnZT10Lm9ic2VydmVyU3RvcmFnZSksdC5wdWJsaWNPYnNlcnZhdGlvbiYmKHRoaXMuX3B1YmxpY09ic2VydmF0aW9uPXQucHVibGljT2JzZXJ2YXRpb24pLHRoaXMuX2NoaWxkSWQ9dC51cmwsdC5kYXRhP3RoaXMuX3N5bmNPYmo9bmV3IGEuZGVmYXVsdCh0LmRhdGEpOnRoaXMuX3N5bmNPYmo9bmV3IGEuZGVmYXVsdCh7fSksbC5sb2coXCJbRGF0YU9iamVjdENoaWxkIC0gIENvbnN0cnVjdG9yXSAtIFwiLHRoaXMuX3N5bmNPYmopLHRoaXMuX2J1cz10aGlzLl9wYXJlbnRPYmplY3QuX2J1cyx0aGlzLl9vd25lcj10aGlzLl9wYXJlbnRPYmplY3QuX293bmVyLHRoaXMuX2FsbG9jYXRlTGlzdGVuZXJzKCksdGhpcy5fbWV0YWRhdGE9dCxkZWxldGUgdGhpcy5fbWV0YWRhdGEucGFyZW50T2JqZWN0LHRoaXMuX3NoYXJpbmdTdGF0dXM9ITF9cmV0dXJuKDAsaS5kZWZhdWx0KShlLFt7a2V5Olwic2hhcmVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX3NoYXJpbmdTdGF0dXM9bmV3IG4uZGVmYXVsdChmdW5jdGlvbihyLG4pe3ZhciBvPXZvaWQgMDtvPWU/dC5tZXRhZGF0YS5wYXJlbnQ6dC5tZXRhZGF0YS5wYXJlbnQrXCIvY2hpbGRyZW4vXCIrdC5tZXRhZGF0YS5jaGlsZHJlbjt2YXIgaT10Lm1ldGFkYXRhO2kuZGF0YT10LmRhdGE7dmFyIHM9e3R5cGU6XCJjcmVhdGVcIixmcm9tOnQubWV0YWRhdGEucmVwb3J0ZXIsdG86byxib2R5OntyZXNvdXJjZTppLnVybCx2YWx1ZTppfX07aWYodC5pZGVudGl0eSYmKHMuYm9keS5pZGVudGl0eT10LmlkZW50aXR5KSx0Ll9wYXJlbnRPYmplY3QuZGF0YS5oYXNPd25Qcm9wZXJ0eShcIm11dHVhbFwiKSYmKHMuYm9keS5tdXR1YWw9dC5fcGFyZW50T2JqZWN0LmRhdGEubXV0dWFsKSx0Ll9wYXJlbnRPYmplY3QubWV0YWRhdGEucmVwb3J0ZXI9PT10Lm1ldGFkYXRhLnJlcG9ydGVyKXJldHVybiB0Ll9idXMucG9zdE1lc3NhZ2UoKDAsdS5kZWVwQ2xvbmUpKHMpKSxyKCk7dmFyIGE9dC5fYnVzLnBvc3RNZXNzYWdlKCgwLHUuZGVlcENsb25lKShzKSxmdW5jdGlvbihlKXtpZihlLnRvPT09dC5fcmVwb3J0ZXIpe3QuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHMuZnJvbSxlLmlkKSxsLmxvZyhcIltTeW5jaGVyLkRhdGFPYmplY3RDaGlsZC5zaGFyZV0gUGFyZW50IHJlcG9ydGVyIHJlcGx5IFwiLGUpO3ZhciBvPXtjb2RlOmUuYm9keSYmZS5ib2R5LmNvZGU/ZS5ib2R5LmNvZGU6NTAwLGRlc2M6ZS5ib2R5JiZlLmJvZHkuZGVzYz9lLmJvZHkuZGVzYzpcIlVua25vd25cIn07cmV0dXJuIGUuYm9keS5jb2RlPDMwMD9yKG8pOm4obyl9fSwhMSk7c2V0VGltZW91dChmdW5jdGlvbigpe3QuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHMuZnJvbSxhKTtyZXR1cm4gbih7Y29kZTo0MDgsZGVzYzpcInRpbW91dFwifSl9LDNlMyl9KX19LHtrZXk6XCJzdG9yZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9e30sdD10aGlzLm1ldGFkYXRhLmNoaWxkcmVuK1wiLlwiK3RoaXMubWV0YWRhdGEudXJsO2UudmFsdWU9dGhpcy5tZXRhZGF0YSxlLmlkZW50aXR5PXRoaXMuaWRlbnRpdHk7dmFyIHI9e2Zyb206dGhpcy5tZXRhZGF0YS5yZXBvcnRlcix0bzp0aGlzLl9wYXJlbnRPYmplY3QuX3N5bmNoZXIuX3N1YlVSTCx0eXBlOlwiY3JlYXRlXCIsYm9keTp7cmVzb3VyY2U6dGhpcy5tZXRhZGF0YS5wYXJlbnQsYXR0cmlidXRlOnQsdmFsdWU6ZX19O2wubG9nKFwiW0RhdGFPYmplY3RDaGlsZC5zdG9yZV06XCIsciksdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHIpfX0se2tleTpcIl9hbGxvY2F0ZUxpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9yZXBvcnRlcj09PWUuX293bmVyJiYoZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3JlcG9ydGVyLGZ1bmN0aW9uKHQpe1wicmVzcG9uc2VcIj09PXQudHlwZSYmdC5pZD09PWUuX21zZ0lkJiYobC5sb2coXCJEYXRhT2JqZWN0Q2hpbGQub25SZXNwb25zZTpcIix0KSxlLl9vblJlc3BvbnNlKHQpKX0pKX19LHtrZXk6XCJfcmVsZWFzZUxpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fbGlzdGVuZXImJnRoaXMuX2xpc3RlbmVyLnJlbW92ZSgpfX0se2tleTpcImRlbGV0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcmVsZWFzZUxpc3RlbmVycygpfX0se2tleTpcIm9uQ2hhbmdlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKHQpe2wubG9nKFwiW0RhdGFPYmplY3RDaGlsZCAtIG9ic2VydmVyXSAtIFwiLHQpLGUodCl9KX19LHtrZXk6XCJvblJlc3BvbnNlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25SZXNwb25zZUhhbmRsZXI9ZX19LHtrZXk6XCJfb25SZXNwb25zZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXt0eXBlOmUudHlwZSx1cmw6ZS5ib2R5LnNvdXJjZSxjb2RlOmUuYm9keS5jb2RlfTt0aGlzLl9vblJlc3BvbnNlSGFuZGxlciYmdGhpcy5fb25SZXNwb25zZUhhbmRsZXIodCl9fSx7a2V5Olwic2hhcmVhYmxlXCIsZ2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5tZXRhZGF0YTtyZXR1cm4gZS5kYXRhPXRoaXMuZGF0YSxlfX0se2tleTpcIm1ldGFkYXRhXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhfX0se2tleTpcImNoaWxkSWRcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRJZH19LHtrZXk6XCJzaGFyaW5nU3RhdHVzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NoYXJpbmdTdGF0dXN9fSx7a2V5OlwiZGF0YVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zeW5jT2JqLmRhdGF9fSx7a2V5OlwiaWRlbnRpdHlcIixzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5faWRlbnRpdHk9ZX0sZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lkZW50aXR5fX1dKSxlfSgpO3QuZGVmYXVsdD1kLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXtyKDEyMCksZS5leHBvcnRzPXIoMCkuT2JqZWN0LmFzc2lnbn0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNik7bihuLlMrbi5GLFwiT2JqZWN0XCIse2Fzc2lnbjpyKDEyMSl9KX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBuPXIoMjApLG89cig0MyksaT1yKDI5KSxzPXIoMzIpLGE9cig1NSksdT1PYmplY3QuYXNzaWduO2UuZXhwb3J0cz0hdXx8cigxMykoZnVuY3Rpb24oKXt2YXIgZT17fSx0PXt9LHI9U3ltYm9sKCksbj1cImFiY2RlZmdoaWprbG1ub3BxcnN0XCI7cmV0dXJuIGVbcl09NyxuLnNwbGl0KFwiXCIpLmZvckVhY2goZnVuY3Rpb24oZSl7dFtlXT1lfSksNyE9dSh7fSxlKVtyXXx8T2JqZWN0LmtleXModSh7fSx0KSkuam9pbihcIlwiKSE9bn0pP2Z1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXMoZSksdT1hcmd1bWVudHMubGVuZ3RoLGM9MSxsPW8uZixkPWkuZjt1PmM7KWZvcih2YXIgZixwPWEoYXJndW1lbnRzW2MrK10pLGg9bD9uKHApLmNvbmNhdChsKHApKTpuKHApLHk9aC5sZW5ndGgsdj0wO3k+djspZC5jYWxsKHAsZj1oW3YrK10pJiYocltmXT1wW2ZdKTtyZXR1cm4gcn06dX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBuPXkocig0NykpLG89eShyKDE4KSksaT15KHIoNDIpKSxzPXkocig3OCkpLGE9eShyKDMpKSx1PXkocig1KSksYz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSxsPXIoMTE3KSxkPXkobCksZj15KHIoMTE4KSkscD1yKDE5KSxoPXkocigxMjgpKTtmdW5jdGlvbiB5KGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgdj1jLmdldExvZ2dlcihcIkRhdGFPYmplY3RcIiksXz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7KDAsYS5kZWZhdWx0KSh0aGlzLGUpO2Z1bmN0aW9uIHIoZSl7dGhyb3dcIltEYXRhT2JqZWN0XSBcIitlK1wiIG1hbmRhdG9yeSBwYXJhbWV0ZXIgaXMgbWlzc2luZ1wifXQuc3luY2hlcj90aGlzLl9zeW5jaGVyPXQuc3luY2hlcjpyKFwic3luY2hlclwiKSx0LnVybD90aGlzLl91cmw9dC51cmw6cihcInVybFwiKSx0LmNyZWF0ZWQ/dGhpcy5fY3JlYXRlZD10LmNyZWF0ZWQ6cihcImNyZWF0ZWRcIiksdC5yZXBvcnRlcj90aGlzLl9yZXBvcnRlcj10LnJlcG9ydGVyOnIoXCJyZXBvcnRlclwiKSx0LnJ1bnRpbWU/dGhpcy5fcnVudGltZT10LnJ1bnRpbWU6cihcInJ1bnRpbWVcIiksdC5zY2hlbWE/dGhpcy5fc2NoZW1hPXQuc2NoZW1hOnIoXCJzY2hlbWFcIiksdC5uYW1lP3RoaXMuX25hbWU9dC5uYW1lOnIoXCJuYW1lXCIpLHRoaXMuX3N0YXR1cz10LnN0YXR1cyx0LmRhdGE/dGhpcy5fc3luY09iaj1uZXcgZC5kZWZhdWx0KHQuZGF0YSk6dGhpcy5fc3luY09iaj1uZXcgZC5kZWZhdWx0KHt9KSx0aGlzLl9jaGlsZHJlbnM9dC5jaGlsZHJlbnMsdGhpcy5fbXV0dWFsPXQubXV0dWFsLHRoaXMuX3ZlcnNpb249MCx0aGlzLl9jaGlsZElkPTAsdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnM9W10sdGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXIsdGhpcy5fcmVzdW1lZD10LnJlc3VtZSx0LnJlc3VtZSYmKHRoaXMuX3ZlcnNpb249dC52ZXJzaW9uKSx0aGlzLl9vd25lcj10LnN5bmNoZXIuX293bmVyLHRoaXMuX2J1cz10LnN5bmNoZXIuX2J1cyx0LmRlc2NyaXB0aW9uJiYodGhpcy5fZGVzY3JpcHRpb249dC5kZXNjcmlwdGlvbiksdC50YWdzJiYodGhpcy5fdGFncz10LnRhZ3MpLHQucmVzb3VyY2VzJiYodGhpcy5fcmVzb3VyY2VzPXQucmVzb3VyY2VzKSx0Lm9ic2VydmVyU3RvcmFnZSYmKHRoaXMuX29ic2VydmVyU3RvcmFnZT10Lm9ic2VydmVyU3RvcmFnZSksdC5wdWJsaWNPYnNlcnZhdGlvbiYmKHRoaXMuX3B1YmxpY09ic2VydmF0aW9uPXQucHVibGljT2JzZXJ2YXRpb24pLHRoaXMuX21ldGFkYXRhPSgwLHMuZGVmYXVsdCkodCksdGhpcy5fbWV0YWRhdGEubGFzdE1vZGlmaWVkPXRoaXMuX21ldGFkYXRhLmNyZWF0ZWQsZGVsZXRlIHRoaXMuX21ldGFkYXRhLmRhdGEsZGVsZXRlIHRoaXMuX21ldGFkYXRhLnN5bmNoZXIsZGVsZXRlIHRoaXMuX21ldGFkYXRhLmF1dGhvcmlzZSx0aGlzLl9oeXBlcnR5UmVzb3VyY2VGYWN0b3J5PW5ldyBoLmRlZmF1bHQsdGhpcy5fY2hpbGRyZW5PYmplY3RzPXt9LHRoaXMuX3NoYXJlZENoaWxkcz1bXX1yZXR1cm4oMCx1LmRlZmF1bHQpKGUsW3trZXk6XCJfZ2V0TGFzdENoaWxkSWRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD0wLHI9ZS5fb3duZXIrXCIjXCIrdDtyZXR1cm4oMCxpLmRlZmF1bHQpKGUuX2NoaWxkcmVucykuZmlsdGVyKGZ1bmN0aW9uKHQpe2UuX2NoaWxkcmVuc1t0XS5jaGlsZElkPnImJihyPWUuX2NoaWxkcmVuc1t0XS5jaGlsZElkKX0pLE51bWJlcihyLnNwbGl0KFwiI1wiKVsxXSl9fSx7a2V5OlwiX2FsbG9jYXRlTGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcyxyPXQuX3VybCtcIi9jaGlsZHJlbi9cIjt2LmxvZyhcIltEYXRhIE9iamVjdCAtIEFsbG9jYXRlTGlzdGVuZXJzXSAtIFwiLHQuX2NoaWxkcmVucyksdC5fY2hpbGRyZW5zJiZ0Ll9jaGlsZHJlbnMuZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgbz1yK24saT10Ll9idXMuYWRkTGlzdGVuZXIobyxmdW5jdGlvbihyKXtpZihyLmZyb20hPT1lLl9vd25lcilzd2l0Y2godi5sb2coXCJEYXRhT2JqZWN0LUNoaWxkcmVuLVJDVjogXCIsciksci50eXBlKXtjYXNlXCJjcmVhdGVcIjp0Ll9vbkNoaWxkQ3JlYXRlKHIpO2JyZWFrO2Nhc2VcImRlbGV0ZVwiOnYubG9nKHIpO2JyZWFrO2RlZmF1bHQ6dC5fY2hhbmdlQ2hpbGRyZW4ocil9fSk7dC5fY2hpbGRyZW5MaXN0ZW5lcnMucHVzaChpKX0pfX0se2tleTpcIl9yZWxlYXNlTGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2NoaWxkcmVuTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5yZW1vdmUoKX0pLCgwLGkuZGVmYXVsdCkoZS5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uKHQpeygwLGkuZGVmYXVsdCkoZS5fY2hpbGRyZW5PYmplY3RzW3RdKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe2UuX2NoaWxkcmVuT2JqZWN0c1t0XVtyXS5fcmVsZWFzZUxpc3RlbmVycygpfSl9KX19LHtrZXk6XCJyZXN1bWVDaGlsZHJlbnNcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9dGhpcyxuPXRoaXMuX293bmVyK1wiI1wiK3RoaXMuX2NoaWxkSWQ7KDAsaS5kZWZhdWx0KShlKS5mb3JFYWNoKGZ1bmN0aW9uKG8pe3ZhciBzPWVbb107KDAsaS5kZWZhdWx0KShzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBpPSExO3IuX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShvKXx8KHIuX2NoaWxkcmVuT2JqZWN0c1tvXT17fSksc1tlXS52YWx1ZS5yZXNvdXJjZVR5cGUmJiFyLl9jaGlsZHJlbk9iamVjdHNbb10uaGFzT3duUHJvcGVydHkoZSk/KHIuX2NoaWxkcmVuT2JqZWN0c1tvXVtlXT1yLl9yZXN1bWVIeXBlcnR5UmVzb3VyY2Uoc1tlXSksaT0hMCk6ci5fY2hpbGRyZW5PYmplY3RzW29dLmhhc093blByb3BlcnR5KGUpfHwoci5fY2hpbGRyZW5PYmplY3RzW29dW2VdPXIuX3Jlc3VtZUNoaWxkKHNbZV0pLHYubG9nKFwiW0RhdGFPYmplY3QucmVzdW1lQ2hpbGRyZW5zXSBuZXcgRGF0YU9iamVjdENoaWxkOiBcIixyLl9jaGlsZHJlbk9iamVjdHNbb11bZV0pLGk9ITApLGkmJmU+biYmKG49ZSx2LmxvZyhcIltEYXRhT2JqZWN0UmVwb3J0ZXIucmVzdW1lQ2hpbGRyZW5zXSAtIHJlc3VtaW5nOiBcIix0Ll9jaGlsZHJlbk9iamVjdHNbb11bZV0pKX0pfSksdGhpcy5fY2hpbGRJZD1OdW1iZXIobi5zcGxpdChcIiNcIilbMV0pfX0se2tleTpcIl9yZXN1bWVDaGlsZFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWUudmFsdWU7dC5wYXJlbnRPYmplY3Q9dGhpcyx0LnBhcmVudD10aGlzLl91cmw7dmFyIHI9bmV3IGYuZGVmYXVsdCh0KTtyLmlkZW50aXR5PWUuaWRlbnRpdHk7dmFyIG49e3R5cGU6XCJjcmVhdGVcIixmcm9tOnIucmVwb3J0ZXIsdXJsOnIucGFyZW50LHZhbHVlOnIuZGF0YSxjaGlsZElkOnIudXJsLGlkZW50aXR5OnIuaWRlbnRpdHksY2hpbGQ6cn07cmV0dXJuIHIucmVzb3VyY2VUeXBlJiYobi5yZXNvdXJjZT1yKSx0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlciYmdGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXIobikscn19LHtrZXk6XCJfcmVzdW1lSHlwZXJ0eVJlc291cmNlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS52YWx1ZTt0LnBhcmVudE9iamVjdD10aGlzLHQucGFyZW50PXRoaXMuX3VybDt2YXIgcj10aGlzLl9oeXBlcnR5UmVzb3VyY2VGYWN0b3J5LmNyZWF0ZUh5cGVydHlSZXNvdXJjZSghMSx0LnJlc291cmNlVHlwZSx0KTtyLmlkZW50aXR5PWUuaWRlbnRpdHk7dmFyIG49e3R5cGU6XCJjcmVhdGVcIixmcm9tOnIucmVwb3J0ZXIsdXJsOnIucGFyZW50LHZhbHVlOnIuZGF0YSxjaGlsZElkOnIudXJsLGlkZW50aXR5OnIuaWRlbnRpdHksY2hpbGQ6cn07cmV0dXJuIHIucmVzb3VyY2VUeXBlJiYobi5yZXNvdXJjZT1yKSx0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlciYmdGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXIobikscn19LHtrZXk6XCJwYXVzZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3dcIk5vdCBpbXBsZW1lbnRlZFwifX0se2tleTpcInJlc3VtZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3dcIk5vdCBpbXBsZW1lbnRlZFwifX0se2tleTpcInN0b3BcIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93XCJOb3QgaW1wbGVtZW50ZWRcIn19LHtrZXk6XCJhZGRDaGlsZFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBpPXRoaXMscz12b2lkIDA7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obyl7dmFyIGE9aS5fdXJsK1wiL2NoaWxkcmVuL1wiK2UsdT1pLl9nZXRDaGlsZElucHV0KG4pO3UuZGF0YT10LHUuY2hpbGRyZW49ZSxzPW5ldyBmLmRlZmF1bHQodSksciYmKHMuaWRlbnRpdHk9cikscy5zaGFyZSgpLHYubG9nKFwiW0RhdGFPYmplY3QuYWRkQ2hpbGRdIGFkZGVkIFwiLHMpLHMub25DaGFuZ2UoZnVuY3Rpb24oZSl7aS5fb25DaGFuZ2UoZSx7cGF0aDphLGNoaWxkSWQ6dS51cmx9KX0pLGkuX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShlKXx8KGkuX2NoaWxkcmVuT2JqZWN0c1tlXT17fSksaS5fY2hpbGRyZW5PYmplY3RzW2VdW3UudXJsXT1zLG8ocyl9KX19LHtrZXk6XCJfZGVsZXRlQ2hpbGRyZW5zXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9W107cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24ocil7aWYoZS5jaGlsZHJlbnMpe3YubG9nKFwiW0RhdGFPYmplY3QuZGVsZXRlQ2hpbGRyZW5zXVwiLGUuY2hpbGRyZW5zKTt2YXIgbj12b2lkIDA7Zm9yKG4gaW4gZS5jaGlsZHJlbnMpe3ZhciBpPXZvaWQgMDtmb3IoaSBpbiBlLmNoaWxkcmVuc1tuXSl7dmFyIHM9ZS5jaGlsZHJlbnNbbl1baV07di5sb2coXCJbRGF0YU9iamVjdC5fZGVsZXRlQ2hpbGRyZW5zXSBjaGlsZFwiLHMpLHMubWV0YWRhdGEuaGFzT3duUHJvcGVydHkoXCJyZXNvdXJjZVR5cGVcIikmJnQucHVzaChlLmNoaWxkcmVuc1tuXVtpXS5kZWxldGUoKSl9fX12LmxvZyhcIltEYXRhT2JqZWN0Ll9kZWxldGVDaGlsZHJlbnNdIHByb21pc2VzIFwiLHQpLHQubGVuZ3RoPjA/by5kZWZhdWx0LmFsbCh0KS50aGVuKGZ1bmN0aW9uKCl7cihcIltEYXRhT2JqZWN0Ll9kZWxldGVDaGlsZHJlbnNdIGRvbmVcIil9KTpyKFwiW0RhdGFPYmplY3QuX2RlbGV0ZUNoaWxkcmVuc10gbm90aGluZyB0byBkZWxldGVcIil9KX19LHtrZXk6XCJfZ2V0Q2hpbGRJbnB1dFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PSgwLHMuZGVmYXVsdCkoe30sZSk7cmV0dXJuIHRoaXMuX2NoaWxkSWQrKyx0LnVybD10aGlzLl9vd25lcitcIiNcIit0aGlzLl9jaGlsZElkLHQucGFyZW50T2JqZWN0PXRoaXMsdC5yZXBvcnRlcj10aGlzLl9vd25lcix0LmNyZWF0ZWQ9KG5ldyBEYXRlKS50b0lTT1N0cmluZygpLHQucnVudGltZT10aGlzLl9zeW5jaGVyLl9ydW50aW1lVXJsLHQucDJwSGFuZGxlcj10aGlzLl9zeW5jaGVyLl9wMnBIYW5kbGVyLHQucDJwUmVxdWVzdGVyPXRoaXMuX3N5bmNoZXIuX3AycFJlcXVlc3Rlcix0LnNjaGVtYT10aGlzLl9zY2hlbWEsdC5wYXJlbnQ9dGhpcy51cmwsdH19LHtrZXk6XCJhZGRIeXBlcnR5UmVzb3VyY2VcIix2YWx1ZTpmdW5jdGlvbihlLHQscixuLGkpe3ZhciBzPXRoaXM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obyl7dmFyIGE9dm9pZCAwLHU9cy5fdXJsK1wiL2NoaWxkcmVuL1wiK2UsYz1zLl9nZXRDaGlsZElucHV0KGkpO2MuY2hpbGRyZW49ZSxzLl9oeXBlcnR5UmVzb3VyY2VGYWN0b3J5LmNyZWF0ZUh5cGVydHlSZXNvdXJjZVdpdGhDb250ZW50KCEwLHQscixjKS50aGVuKGZ1bmN0aW9uKHQpe2E9dCxuJiYoYS5pZGVudGl0eT1uKSxhLnNoYXJlKCksdi5sb2coXCJbRGF0YU9iamVjdC5hZGRIeXBlcnR5UmVzb3VyY2VdIGFkZGVkIFwiLGEpLGEub25DaGFuZ2UoZnVuY3Rpb24oZSl7cy5fb25DaGFuZ2UoZSx7cGF0aDp1LGNoaWxkSWQ6YS5jaGlsZElkfSl9KSxzLl9jaGlsZHJlbk9iamVjdHMuaGFzT3duUHJvcGVydHkoZSl8fChzLl9jaGlsZHJlbk9iamVjdHNbZV09e30pLHMuX2NoaWxkcmVuT2JqZWN0c1tlXVthLmNoaWxkSWRdPWEsbyhhKX0pfSl9fSx7a2V5Olwib25BZGRDaGlsZFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyPWV9fSx7a2V5OlwiX29uQ2hpbGRDcmVhdGVcIix2YWx1ZTpmdW5jdGlvbihlKXt2LmxvZyhcIltEYXRhT2JqZWN0Ll9vbkNoaWxkQ3JlYXRlXSByZWNlaXZlZEJ5IFwiK3RoaXMuX293bmVyK1wiIDogXCIsZSk7dmFyIHQ9e2Zyb206ZS50byx0bzplLmZyb20sdHlwZTpcInJlc3BvbnNlXCIsaWQ6ZS5pZCxib2R5Ontjb2RlOjEwMH19O3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh0KSxlLmJvZHkudmFsdWUucmVzb3VyY2VUeXBlP3RoaXMuX29uSHlwZXJ0eVJlc291cmNlQWRkZWQoZSk6dGhpcy5fb25DaGlsZEFkZGVkKGUpfX0se2tleTpcIl9vbkNoaWxkQWRkZWRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD0oMCxwLmRlZXBDbG9uZSkoZS5ib2R5LnZhbHVlKTt0LnBhcmVudE9iamVjdD10aGlzO3ZhciByPXQuY2hpbGRyZW4sbj1uZXcgZi5kZWZhdWx0KHQpO24uaWRlbnRpdHk9ZS5ib2R5LmlkZW50aXR5LHRoaXMuX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShyKXx8KHRoaXMuX2NoaWxkcmVuT2JqZWN0c1tyXT17fSksdGhpcy5fY2hpbGRyZW5PYmplY3RzW3JdW3QudXJsXT1uLGUudG89PT10aGlzLm1ldGFkYXRhLnVybCYmbi5zdG9yZSgpLHRoaXMuX2h5cGVydHlFdnQoZSxuKX19LHtrZXk6XCJfb25IeXBlcnR5UmVzb3VyY2VBZGRlZFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWUuYm9keS52YWx1ZSxyPXZvaWQgMCxuPXQuY2hpbGRyZW47dC5wYXJlbnRPYmplY3Q9dGhpcywocj10aGlzLl9oeXBlcnR5UmVzb3VyY2VGYWN0b3J5LmNyZWF0ZUh5cGVydHlSZXNvdXJjZSghMSx0LnJlc291cmNlVHlwZSx0KSkuaWRlbnRpdHk9ZS5ib2R5LmlkZW50aXR5LHRoaXMuX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShuKXx8KHRoaXMuX2NoaWxkcmVuT2JqZWN0c1tuXT17fSksdGhpcy5fY2hpbGRyZW5PYmplY3RzW25dW3IuY2hpbGRJZF09cix0aGlzLl9oeXBlcnR5RXZ0KGUsciksZS50bz09PXRoaXMubWV0YWRhdGEudXJsJiZyLnN0b3JlKCl9fSx7a2V5OlwiX2h5cGVydHlFdnRcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXt0eXBlOmUudHlwZSxmcm9tOmUuZnJvbSx1cmw6ZS50byx2YWx1ZTp0LmRhdGEsY2hpbGRJZDp0LnVybCxpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksY2hpbGQ6dH07dC5yZXNvdXJjZVR5cGUmJihyLnJlc291cmNlPXQpLHRoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyJiZ0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlcihyKX19LHtrZXk6XCJfb25DaGFuZ2VcIix2YWx1ZTpmdW5jdGlvbihlLHQpe2lmKHRoaXMuX21ldGFkYXRhLmxhc3RNb2RpZmllZD0obmV3IERhdGUpLnRvSVNPU3RyaW5nKCksdGhpcy5fdmVyc2lvbisrLFwibGl2ZVwiPT09dGhpcy5fc3RhdHVzKXt2YXIgcj17dHlwZTpcInVwZGF0ZVwiLGZyb206dGhpcy5fdXJsLHRvOnRoaXMuX3VybCtcIi9jaGFuZ2VzXCIsYm9keTp7dmVyc2lvbjp0aGlzLl92ZXJzaW9uLHNvdXJjZTp0aGlzLl9vd25lcixhdHRyaWJ1dGU6ZS5maWVsZCxsYXN0TW9kaWZpZWQ6dGhpcy5fbWV0YWRhdGEubGFzdE1vZGlmaWVkfX07di5sb2coXCJbRGF0YU9iamVjdCAtIF9vbkNoYW5nZV0gLSBcIixlLHQsciksZS5vVHlwZT09PWwuT2JqZWN0VHlwZS5PQkpFQ1Q/ZS5jVHlwZSE9PWwuQ2hhbmdlVHlwZS5SRU1PVkUmJihyLmJvZHkudmFsdWU9KDAscC5kZWVwQ2xvbmUpKGUuZGF0YSkpOihyLmJvZHkuYXR0cmlidXRlVHlwZT1lLm9UeXBlLHIuYm9keS52YWx1ZT1lLmRhdGEsZS5jVHlwZSE9PWwuQ2hhbmdlVHlwZS5VUERBVEUmJihyLmJvZHkub3BlcmF0aW9uPWUuY1R5cGUpKSx0JiYoci50bz10LnBhdGgsci5ib2R5LnJlc291cmNlPXQuY2hpbGRJZCksdGhpcy5kYXRhLl9tdXR1YWx8fChyLmJvZHkubXV0dWFsPXRoaXMuX211dHVhbCksdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHIpfX19LHtrZXk6XCJfY2hhbmdlT2JqZWN0XCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtpZih0aGlzLl92ZXJzaW9uKzE8PXQuYm9keS52ZXJzaW9uKXt0aGlzLl92ZXJzaW9uPXQuYm9keS52ZXJzaW9uO3ZhciByPXQuYm9keS5hdHRyaWJ1dGUsbz12b2lkIDA7bz1cIm9iamVjdFwiPT09KDAsbi5kZWZhdWx0KSh0LmJvZHkudmFsdWUpPygwLHAuZGVlcENsb25lKSh0LmJvZHkudmFsdWUpOnQuYm9keS52YWx1ZTt2YXIgaT1lLmZpbmRCZWZvcmUocik7aWYodC5ib2R5Lmxhc3RNb2RpZmllZD90aGlzLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9dC5ib2R5Lmxhc3RNb2RpZmllZDp0aGlzLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9KG5ldyBEYXRlKS50b0lTT1N0cmluZygpLHQuYm9keS5hdHRyaWJ1dGVUeXBlPT09bC5PYmplY3RUeXBlLkFSUkFZKWlmKHQuYm9keS5vcGVyYXRpb249PT1sLkNoYW5nZVR5cGUuQUREKXt2YXIgcz1pLm9iaixhPWkubGFzdDtBcnJheS5wcm90b3R5cGUuc3BsaWNlLmFwcGx5KHMsW2EsMF0uY29uY2F0KG8pKX1lbHNlIGlmKHQuYm9keS5vcGVyYXRpb249PT1sLkNoYW5nZVR5cGUuUkVNT1ZFKXt2YXIgdT1pLm9iaixjPWkubGFzdDt1LnNwbGljZShjLG8pfWVsc2UgaS5vYmpbaS5sYXN0XT1vO2Vsc2UgdC5ib2R5Lmhhc093blByb3BlcnR5KFwidmFsdWVcIik/aS5vYmpbaS5sYXN0XT1vOmRlbGV0ZSBpLm9ialtpLmxhc3RdfWVsc2Ugdi5sb2coXCJVTlNZTkNIUk9OSVpFRCBWRVJTSU9OOiAoZGF0YSA9PiBcIit0aGlzLl92ZXJzaW9uK1wiLCBtc2cgPT4gXCIrdC5ib2R5LnZlcnNpb24rXCIpXCIpfX0se2tleTpcIl9jaGFuZ2VDaGlsZHJlblwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PSgwLHAuZGl2aWRlVVJMKShlLnRvKS5pZGVudGl0eSxyPXQ/dC5zdWJzdHJpbmcodC5sYXN0SW5kZXhPZihcIi9cIikrMSk6dm9pZCAwLG49ZS5ib2R5LnJlc291cmNlLG89dGhpcy5fY2hpbGRyZW5PYmplY3RzW3JdW25dO3YubG9nKFwiQ2hhbmdlIGNoaWxkcmVuOiBcIix0aGlzLl9vd25lcixlLHIpLG8/dGhpcy5fY2hhbmdlT2JqZWN0KG8uX3N5bmNPYmosZSk6di53YXJuKFwiTm8gY2hpbGRyZW4gZm91bmQgZm9yOiBcIixuKX19LHtrZXk6XCJtZXRhZGF0YVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YX19LHtrZXk6XCJ1cmxcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdXJsfX0se2tleTpcInNjaGVtYVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2hlbWF9fSx7a2V5Olwic3RhdHVzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YXR1c319LHtrZXk6XCJkYXRhXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YX19LHtrZXk6XCJjaGlsZHJlbnNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW5PYmplY3RzfX1dKSxlfSgpO3QuZGVmYXVsdD1fLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCl7IWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7aWYoIU9iamVjdC5vYnNlcnZlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm94eSl7ZnVuY3Rpb24gZShlLHQscixuLG8saSl7dmFyIHMsYT10aGlzO2Z1bmN0aW9uIHUoZSxuKXtpZih1LmRlbGF5PW4sIXUucGF1c2UmJmEuY2hhbmdlc2V0Lmxlbmd0aD4wKXtpZighZSl7dmFyIG89YS5jaGFuZ2VzZXQuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFyfHxyLmluZGV4T2YoZS50eXBlKT49MH0pO28ubGVuZ3RoPjAmJnQobyl9YS5jaGFuZ2VzZXQ9W119fXJldHVybiB1LnBhdXNlPW8sdS5kZWxheT1pLGEuZ2V0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuXCJfX29ic2VydmVyX19cIj09PXQ/YTpcInVub2JzZXJ2ZVwiPT09dD9mdW5jdGlvbigpe3JldHVybiBPYmplY3QudW5vYnNlcnZlKGUpLGV9OlwiZGVsaXZlclwiPT09dD91OmVbdF19LGEudGFyZ2V0PWUsYS5jaGFuZ2VzZXQ9W10sYS50YXJnZXQuX19vYnNlcnZlckNhbGxiYWNrc19ffHwoT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX29ic2VydmVyQ2FsbGJhY2tzX19cIix7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITEsdmFsdWU6W119KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fb2JzZXJ2ZXJzX19cIix7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITEsdmFsdWU6W119KSksYS50YXJnZXQuX19vYnNlcnZlckNhbGxiYWNrc19fLnB1c2godCksYS50YXJnZXQuX19vYnNlcnZlcnNfXy5wdXNoKHRoaXMpLHM9bmV3IFByb3h5KGUsYSksdSghMSxpKSxzfWUucHJvdG90eXBlLmRlbGl2ZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXQobnVsbCxcImRlbGl2ZXJcIil9LGUucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQscil7dmFyIG49ZVt0XSxvPXZvaWQgMD09PW4/XCJhZGRcIjpcInVwZGF0ZVwiO2lmKGVbdF09cixlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmKCF0aGlzLmFjY2VwdGxpc3R8fHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKG8pPj0wKSl7dmFyIGk9e29iamVjdDplLG5hbWU6dCx0eXBlOm99LHM9MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxhPXRoaXMuZGVsaXZlcigpO1widXBkYXRlXCI9PT1vJiYoaS5vbGRWYWx1ZT1uKSx0aGlzLmNoYW5nZXNldC5wdXNoKGkpLHMmJmEoITEsXCJudW1iZXJcIj09dHlwZW9mIGEuZGVsYXk/YS5kZWxheToxMCl9cmV0dXJuITB9LGUucHJvdG90eXBlLmRlbGV0ZVByb3BlcnR5PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZVt0XTtpZihkZWxldGUgZVt0XSxlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoXCJkZWxldGVcIik+PTApe3ZhciBuPXtvYmplY3Q6ZSxuYW1lOnQsdHlwZTpcImRlbGV0ZVwiLG9sZFZhbHVlOnJ9LG89MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxpPXRoaXMuZGVsaXZlcigpO3RoaXMuY2hhbmdlc2V0LnB1c2gobiksbyYmaSghMSxcIm51bWJlclwiPT10eXBlb2YgaS5kZWxheT9pLmRlbGF5OjEwKX1yZXR1cm4hMH0sZS5wcm90b3R5cGUuZGVmaW5lUHJvcGVydHk9ZnVuY3Rpb24oZSx0LHIpe2lmKE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsciksZS5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAmJiF0aGlzLmFjY2VwdGxpc3R8fHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKFwicmVjb25maWd1cmVcIik+PTApe3ZhciBuPXtvYmplY3Q6ZSxuYW1lOnQsdHlwZTpcInJlY29uZmlndXJlXCJ9LG89MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxpPXRoaXMuZGVsaXZlcigpO3RoaXMuY2hhbmdlc2V0LnB1c2gobiksbyYmaSghMSxcIm51bWJlclwiPT10eXBlb2YgaS5kZWxheT9pLmRlbGF5OjEwKX1yZXR1cm4hMH0sZS5wcm90b3R5cGUuc2V0UHJvdG90eXBlT2Y9ZnVuY3Rpb24oZSx0KXt2YXIgcj1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZSk7aWYoT2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCksZS5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAmJiF0aGlzLmFjY2VwdGxpc3R8fHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKFwic2V0UHJvdG90eXBlXCIpPj0wKXt2YXIgbj17b2JqZWN0OmUsbmFtZTpcIl9fcHJvdG9fX1wiLHR5cGU6XCJzZXRQcm90b3R5cGVcIixvbGRWYWx1ZTpyfSxvPTA9PT10aGlzLmNoYW5nZXNldC5sZW5ndGgsaT10aGlzLmRlbGl2ZXIoKTt0aGlzLmNoYW5nZXNldC5wdXNoKG4pLG8mJmkoITEsXCJudW1iZXJcIj09dHlwZW9mIGkuZGVsYXk/aS5kZWxheToxMCl9cmV0dXJuITB9LGUucHJvdG90eXBlLnByZXZlbnRFeHRlbnNpb25zPWZ1bmN0aW9uKGUpe2lmKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyhlKSxlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoXCJwcmV2ZW50RXh0ZW5zaW9uc1wiKT49MCl7dmFyIHQ9e29iamVjdDplLHR5cGU6XCJwcmV2ZW50RXh0ZW5zaW9uc1wifSxyPTA9PT10aGlzLmNoYW5nZXNldC5sZW5ndGgsbj10aGlzLmRlbGl2ZXIoKTt0aGlzLmNoYW5nZXNldC5wdXNoKHQpLHImJm4oITEsXCJudW1iZXJcIj09dHlwZW9mIG4uZGVsYXk/bi5kZWxheToxMCl9cmV0dXJuITB9LE9iamVjdC5vYnNlcnZlPWZ1bmN0aW9uKHQscixuLG8saSxzKXtyZXR1cm4gbmV3IGUodCxyLG4sbyxpLHMpfSxPYmplY3QudW5vYnNlcnZlPWZ1bmN0aW9uKGUsdCl7aWYoZS5fX29ic2VydmVyQ2FsbGJhY2tzX18pe2lmKCF0KXJldHVybiBlLl9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5zcGxpY2UoMCxlLl9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5sZW5ndGgpLHZvaWQgZS5fX29ic2VydmVyc19fLnNwbGljZSgwLGUuX19vYnNlcnZlcnNfXy5sZW5ndGgpO2UuX19vYnNlcnZlckNhbGxiYWNrc19fLmZvckVhY2goZnVuY3Rpb24ocixuKXt0PT09ciYmKGUuX19vYnNlcnZlckNhbGxiYWNrc19fLnNwbGljZShuLDEpLGRlbGV0ZSBlLl9fb2JzZXJ2ZXJzX19bbl0uY2FsbGJhY2ssZS5fX29ic2VydmVyc19fLnNwbGljZShuLDEpKX0pfX0sQXJyYXkub2JzZXJ2ZT1mdW5jdGlvbihlLHQscixuLG8saSl7aWYoIShlIGluc3RhbmNlb2YgQXJyYXl8fEFycmF5LmlzQXJyYXkoZSkpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJGaXJzdCBhcmd1bWVudCB0byBBcnJheS5vYnNlcnZlciBpcyBub3QgYW4gQXJyYXlcIik7cj1yfHxbXCJhZGRcIixcInVwZGF0ZVwiLFwiZGVsZXRlXCIsXCJzcGxpY2VcIl07dmFyIHM9bmV3IFByb3h5KGUse2dldDpmdW5jdGlvbih0LG4pe3JldHVyblwidW5vYnNlcnZlXCI9PT1uP2Z1bmN0aW9uKGUpe3JldHVybiBlP09iamVjdC51bm9ic2VydmUodCxlKTp0LnVub2JzZXJ2ZSgpfTpcInNwbGljZVwiPT09bj9mdW5jdGlvbihuLG8pe2lmKFwibnVtYmVyXCIhPXR5cGVvZiBufHxcIm51bWJlclwiIT10eXBlb2Ygbyl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRmlyc3QgdHdvIGFyZ3VtZW50cyB0byBBcnJheSBzcGxpY2UgYXJlIG5vdCBudW1iZXIsIG51bWJlclwiKTt2YXIgaT10aGlzLnNsaWNlKG4sbitvKSxzPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHMubGVuZ3RoLTI6MCx1PXtvYmplY3Q6ZSx0eXBlOlwic3BsaWNlXCIsaW5kZXg6bixyZW1vdmVkOmksYWRkZWRDb3VudDpzfTtpZih0LnNwbGljZS5hcHBseSh0LGFyZ3VtZW50cyksci5pbmRleE9mKFwic3BsaWNlXCIpPj0wKXtuPTA9PT1hLl9fb2JzZXJ2ZXJfXy5jaGFuZ2VzZXQubGVuZ3RoO3ZhciBjPWEuX19vYnNlcnZlcl9fLmRlbGl2ZXIoKTthLl9fb2JzZXJ2ZXJfXy5jaGFuZ2VzZXQucHVzaCh1KSxuJiZjKCExLFwibnVtYmVyXCI9PXR5cGVvZiBjLmRlbGF5P2MuZGVsYXk6MTApfX06XCJwdXNoXCI9PT1uP2Z1bmN0aW9uKGUpe3JldHVybiB0aGlzLnNwbGljZSh0aGlzLmxlbmd0aCwwLGUpfTpcInBvcFwiPT09bj9mdW5jdGlvbigpe3JldHVybiB0aGlzLnNwbGljZSh0aGlzLmxlbmd0aC0xLDEpfTpcInVuc2hpZnRcIj09PW4/ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc3BsaWNlKDAsMCxlKX06XCJzaGlmdFwiPT09bj9mdW5jdGlvbigpe3JldHVybiB0aGlzLnNwbGljZSgwLDEpfTp0W25dfX0pLGE9T2JqZWN0Lm9ic2VydmUocyxmdW5jdGlvbihlKXt2YXIgbj1lLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm5cImxlbmd0aFwiIT09ZS5uYW1lJiZcImFkZFwiIT09ZS5uYW1lJiYoIXJ8fHIuaW5kZXhPZihlLnR5cGUpPj0wKX0pO24ubGVuZ3RoPjAmJnQobil9LHIsbixvLGkpO3JldHVybiBhfSxBcnJheS51bm9ic2VydmU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS51bm9ic2VydmUodCl9fU9iamVjdC5kZWVwT2JzZXJ2ZT1mdW5jdGlvbihlLHQscil7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJue30udG9TdHJpbmcuY2FsbChlKS5tYXRjaCgvXFxzKFthLXpBLVpdKykvKVsxXS50b0xvd2VyQ2FzZSgpfTtmdW5jdGlvbiBvKGUscil7T2JqZWN0LmtleXMoZSkuZm9yRWFjaChmdW5jdGlvbihvKXtpZigoXCJvYmplY3RcIj09PW4oZVtvXSl8fFwiYXJyYXlcIj09PW4oZVtvXSkpJiYhZVtvXS5oYXNPd25Qcm9wZXJ0eShcIl9fb2JzZXJ2ZXJzX19cIikpe3ZhciBpPXIuc2xpY2UoMCk7aS5wdXNoKG8pLGVbb109T2JqZWN0LmRlZXBPYnNlcnZlKGVbb10sdCxpKX19KX1yZXR1cm4gbyhlLHI9cnx8W10pLE9iamVjdC5vYnNlcnZlKGUsZnVuY3Rpb24oZSl7dmFyIG49W107ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PShyLmxlbmd0aD4wP3Iuam9pbihcIi5cIikrXCIuXCI6XCJcIikrZS5uYW1lO1widXBkYXRlXCIhPT1lLnR5cGUmJlwiYWRkXCIhPT1lLnR5cGV8fG8oZS5vYmplY3Qsciksbi5wdXNoKHtuYW1lOmUubmFtZSxvYmplY3Q6ZS5vYmplY3QsdHlwZTplLnR5cGUsb2xkVmFsdWU6ZS5vbGRWYWx1ZSxuZXdWYWx1ZTplLm9iamVjdFtlLm5hbWVdLGtleXBhdGg6dH0pLGZ1bmN0aW9uIGUodCxyLG8saSxzKXtpIGluc3RhbmNlb2YgT2JqZWN0P09iamVjdC5rZXlzKGkpLmZvckVhY2goZnVuY3Rpb24oYSl7aWYoIW98fG9bYV0hPT1pW2FdKXt2YXIgdT1vJiZ2b2lkIDAhPT1vW2FdP29bYV06dm9pZCAwLGM9dm9pZCAwPT09dT9cImFkZFwiOlwidXBkYXRlXCIsbD1zK1wiLlwiK2E7bi5wdXNoKHtuYW1lOnQsb2JqZWN0OnIsdHlwZTpjLG9sZFZhbHVlOnUsbmV3VmFsdWU6aVthXSxrZXlwYXRoOmx9KSxlKHQscix1LGlbYV0sbCl9fSk6byBpbnN0YW5jZW9mIE9iamVjdCYmT2JqZWN0LmtleXMobykuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgdT1udWxsPT09aT9cInVwZGF0ZVwiOlwiZGVsZXRlXCIsYz1zK1wiLlwiK2E7bi5wdXNoKHtuYW1lOnQsb2JqZWN0OnIsdHlwZTp1LG9sZFZhbHVlOm9bYV0sbmV3VmFsdWU6aSxrZXlwYXRoOmN9KSxlKHQscixvW2FdLHZvaWQgMCxjKX0pfShlLm5hbWUsZS5vYmplY3QsZS5vbGRWYWx1ZSxlLm9iamVjdFtlLm5hbWVdLHQpfSksdChuKX0pfX0oKX0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBuPWYocigxOCkpLG89ZihyKDI1KSksaT1mKHIoMykpLHM9ZihyKDUpKSxhPWYocigzMykpLHU9ZihyKDM0KSksYz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSxsPWYocigxMjkpKSxkPShyKDE5KSxmKHIoMTMwKSkpO2Z1bmN0aW9uIGYoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBwPWMuZ2V0TG9nZ2VyKFwiRmlsZUh5cGVydHlSZXNvdXJjZVwiKSxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyKXsoMCxpLmRlZmF1bHQpKHRoaXMsdCk7dmFyIG49KDAsYS5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAsby5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLGUscikpO3JldHVybiBuLm1ldGFkYXRhLnJlc291cmNlVHlwZT1cImZpbGVcIixufXJldHVybigwLHUuZGVmYXVsdCkodCxlKSwoMCxzLmRlZmF1bHQpKHQsW3trZXk6XCJpbml0XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpZighZSl0aHJvdyBuZXcgRXJyb3IoXCJbRmlsZUh5cGVydHlSZXNvdXJjZS5jb25zdHJ1Y3Rvcl0gbWlzc2luZyBtYW5kYXRvcnkgKmZpbGUqIGlucHV0IFwiKTtyZXR1cm4gbmV3IG4uZGVmYXVsdChmdW5jdGlvbihyLG4pe2lmKHQuX21ldGFkYXRhLm5hbWU9ZS5uYW1lLHQuX21ldGFkYXRhLmxhc3RNb2RpZmllZD1lLmxhc3RNb2RpZmllZCx0Ll9tZXRhZGF0YS5zaXplPWUuc2l6ZSx0Ll9tZXRhZGF0YS5taW1ldHlwZT1lLnR5cGUscC5sb2coXCJbRmlsZUh5cGVydHlSZXNvdXJjZS5pbml0XSBmaWxlOiBcIixlKSx0Ll9pc1NlbmRlcilzd2l0Y2goZS50eXBlLnNwbGl0KFwiL1wiKVswXSl7Y2FzZVwiaW1hZ2VcIjp0Ll9nZXRJbWFnZVByZXZpZXcoZSkudGhlbihmdW5jdGlvbihuKXt0Ll9tZXRhZGF0YS5wcmV2aWV3PW4sdC5fY29udGVudD1lLHIoKX0pO2JyZWFrO2RlZmF1bHQ6dC5fY29udGVudD1lLHIoKX1lbHNlIHQuX2NvbnRlbnQ9ZS5jb250ZW50LGUucHJldmlldyYmKHQuX21ldGFkYXRhLnByZXZpZXc9ZS5wcmV2aWV3KSxyKCl9KX19LHtrZXk6XCJfZ2V0SW1hZ2VQcmV2aWV3XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEZpbGVSZWFkZXI7cmV0dXJuIG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtkLmRlZmF1bHQucmVzaXplKGUse3dpZHRoOjEwMCxoZWlnaHQ6MTAwfSxmdW5jdGlvbihlLG4pe24/KHQucmVhZEFzRGF0YVVSTChlKSx0Lm9ubG9hZD1mdW5jdGlvbihlKXtyKGUudGFyZ2V0LnJlc3VsdCl9KToocC53YXJuKFwiW0ZpbGVIeXBlcnR5UmVzb3VyY2UuX2dldEltYWdlUHJldmlld10gdW5hYmxlIHRvIGNyZWF0ZSBpbWFnZSBwcmV2aWV3IGZyb20gb3JpZ2luYWwgaW1hZ2UgXCIpLHIodm9pZCAwKSl9KX0pfX0se2tleTpcInRvTWVzc2FnZVwiLHZhbHVlOmZ1bmN0aW9uKCl7fX0se2tleTpcIm5hbWVcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGEubmFtZX19LHtrZXk6XCJwcmV2aWV3XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhLnByZXZpZXd9fV0pLHR9KGwuZGVmYXVsdCk7dC5kZWZhdWx0PWgsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDEyNiksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtyKDEyNyk7dmFyIG49cigwKS5PYmplY3Q7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMiksbz1yKDQ2KS5mO3IoNDQpKFwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yXCIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyhuKGUpLHQpfX0pfSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49YShyKDE4KSksbz1hKHIoMykpLGk9YShyKDUpKSxzPWEocigxMjQpKTtmdW5jdGlvbiBhKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXsoMCxvLmRlZmF1bHQpKHRoaXMsZSl9cmV0dXJuKDAsaS5kZWZhdWx0KShlLFt7a2V5OlwiY3JlYXRlSHlwZXJ0eVJlc291cmNlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXZvaWQgMDtzd2l0Y2godCl7Y2FzZVwiZmlsZVwiOm49bmV3IHMuZGVmYXVsdChlLHIpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiW0h5cGVydHlSZXNvdXJjZUZhY3RvcnkuY3JlYXRlSHlwZXJ0eVJlc291cmNlXSBub3Qgc3VwcG9ydGVkIHR5cGU6IFwiLHQpfXJldHVybiBufX0se2tleTpcImNyZWF0ZUh5cGVydHlSZXNvdXJjZVdpdGhDb250ZW50XCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbyl7dmFyIGk9dm9pZCAwO3JldHVybiBuZXcgbi5kZWZhdWx0KGZ1bmN0aW9uKG4pe3N3aXRjaCh0KXtjYXNlXCJmaWxlXCI6aT1uZXcgcy5kZWZhdWx0KGUsbyk7YnJlYWs7ZGVmYXVsdDpyZWplY3QoKX1pLmluaXQocikudGhlbihmdW5jdGlvbigpe3JldHVybiBpLnNhdmUoKX0pLnRoZW4oZnVuY3Rpb24oKXtuKGkpfSl9KX19XSksZX0oKTt0LmRlZmF1bHQ9dSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49cChyKDE4KSksbz1wKHIoMjUpKSxpPXAocigzKSkscz1wKHIoNSkpLGE9cChyKDMzKSksdT1wKHIoMTAwKSksYz1wKHIoMzQpKSxsPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLGQ9cigxOSksZj1wKHIoMTE4KSk7ZnVuY3Rpb24gcChlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dmFyIGg9bC5nZXRMb2dnZXIoXCJIeXBlcnR5UmVzb3VyY2VcIikseT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscil7KDAsaS5kZWZhdWx0KSh0aGlzLHQpO3ZhciBuPSgwLGEuZGVmYXVsdCkodGhpcywodC5fX3Byb3RvX198fCgwLG8uZGVmYXVsdCkodCkpLmNhbGwodGhpcyxyKSkscz1uO3JldHVybiBzLmFycmF5YnVmZmVyU2l6ZUxpbWl0PTUyNDI4ODAscy5faXNTZW5kZXI9ZSxzLl9sb2NhbFN0b3JhZ2VVUkw9cy5fcGFyZW50T2JqZWN0Ll9zeW5jaGVyLl9ydW50aW1lVXJsK1wiL3N0b3JhZ2VcIixufXJldHVybigwLGMuZGVmYXVsdCkodCxlKSwoMCxzLmRlZmF1bHQpKHQsW3trZXk6XCJzYXZlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBuZXcgbi5kZWZhdWx0KGZ1bmN0aW9uKHQscil7dmFyIG49e2Zyb206ZS5fb3duZXIsdG86ZS5fbG9jYWxTdG9yYWdlVVJMLHR5cGU6XCJjcmVhdGVcIixib2R5Ont2YWx1ZTooMCxkLmRlZXBDbG9uZSkoZS5fbWV0YWRhdGEpfX07bi5ib2R5LnZhbHVlLmNvbnRlbnQ9ZS5fY29udGVudCxlLl9idXMucG9zdE1lc3NhZ2UobixmdW5jdGlvbihuKXtoLmluZm8oXCJbSHlwZXJ0eVJlc291cmNlLnNhdmVdIHJlcGx5OiBcIixuKSxlLl9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihlLl9vd25lcixuLmlkKSwyMDA9PT1uLmJvZHkuY29kZT8obi5ib2R5LnZhbHVlJiYoZS5fbWV0YWRhdGEuY29udGVudFVSTHx8KGUuX21ldGFkYXRhLmNvbnRlbnRVUkw9W10pLGUuX21ldGFkYXRhLmNvbnRlbnRVUkwucHVzaChuLmJvZHkudmFsdWUpKSx0KCkpOnIobi5ib2R5LmNvZGUrXCIgXCIrbi5ib2R5LmRlc2MpfSwhMSl9KX19LHtrZXk6XCJyZWFkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gaC5pbmZvKFwiW0h5cGVydHlSZXNvdXJjZS5yZWFkXSBcIix0aGlzKSxuZXcgbi5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7aWYodC5jb250ZW50KXIodCk7ZWxzZXt2YXIgbz10Ll9nZXRCZXN0Q29udGVudFVSTCh0Ll9tZXRhZGF0YS5jb250ZW50VVJMKTtoLmxvZyhcIlN0b3JhZ2U6XCIsbyk7dmFyIGk9e2Zyb206dC5fb3duZXIsdG86by51cmwsdHlwZTpcInJlYWRcIixib2R5OntyZXNvdXJjZTpvLnVybCtcIi9cIitvLnJlc291cmNlLHAycDohMH19O3QubWV0YWRhdGEucDJwUmVxdWVzdGVyJiZ0Lm1ldGFkYXRhLnAycEhhbmRsZXImJihpLmJvZHkucDJwUmVxdWVzdGVyPXQubWV0YWRhdGEucDJwUmVxdWVzdGVyLGkuYm9keS5wMnBIYW5kbGVyPXQubWV0YWRhdGEucDJwSGFuZGxlciksdC5fZ2V0QmVzdFJlc291cmNlKGksZSkudGhlbihmdW5jdGlvbihlKXtoLmluZm8oXCJbSHlwZXJ0eVJlc291cmNlXSAtIGdldCBsb2NhbGx5IHRoZSByZXNvdXJjZTpcIixlKSxyKHQpfSkuY2F0Y2goZnVuY3Rpb24oaSl7aC53YXJuKFwiW0h5cGVydHlSZXNvdXJjZV0gLSBnZXQgbG9jYWxseSB0aGUgcmVzb3VyY2UgZmFpbFwiLGkpO3ZhciBzPXtmcm9tOnQuX293bmVyLHRvOm8ucmVtb3RlVVJMLHR5cGU6XCJyZWFkXCIsYm9keTp7cmVzb3VyY2U6by5yZW1vdGVVUkwrXCIvXCIrby5yZXNvdXJjZSxwMnA6ITB9fTt0Lm1ldGFkYXRhLnAycFJlcXVlc3RlciYmdC5tZXRhZGF0YS5wMnBIYW5kbGVyJiYocy5ib2R5LnAycFJlcXVlc3Rlcj10Lm1ldGFkYXRhLnAycFJlcXVlc3RlcixzLmJvZHkucDJwSGFuZGxlcj10Lm1ldGFkYXRhLnAycEhhbmRsZXIpLHQuX2dldEJlc3RSZXNvdXJjZShzLGUpLnRoZW4oZnVuY3Rpb24oZSl7aC53YXJuKFwiW0h5cGVydHlSZXNvdXJjZV0gLSBnZXQgcmVtb3RlbHkgdGhlIHJlc291cmNlXCIsZSkscih0KX0pLmNhdGNoKGZ1bmN0aW9uKGUpe2gud2FybihcIltIeXBlcnR5UmVzb3VyY2VdIC0gZ2V0IHJlbW90ZWx5IHRoZSByZXNvdXJjZSBmYWlsXCIsZSksbihlLmJvZHkuY29kZStcIiBcIitlLmJvZHkuZGVzYyl9KX0pfX0pfX0se2tleTpcIl9nZXRCZXN0UmVzb3VyY2VcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7cmV0dXJuIG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24obixvKXt2YXIgaT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIHIuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHIuX293bmVyLHMpLGUuYm9keS5jb2RlPTQwOCxlLmJvZHkuZGVzYz1cIlJlc3BvbnNlIHRpbWVvdXRcIixvKGUpfSwzZTMpLHM9ci5fYnVzLnBvc3RNZXNzYWdlKGUsZnVuY3Rpb24oZSl7aC5sb2coXCJbSHlwZXJ0eVJlc291cmNlLnJlYWRdIHJlcGx5OiBcIixlKTt2YXIgcz1lLmlkO3N3aXRjaChjbGVhclRpbWVvdXQoaSksZS5ib2R5LmNvZGUpe2Nhc2UgMjAwOnIuX2NvbnRlbnQ9ZS5ib2R5LnZhbHVlLmNvbnRlbnQsZS5ib2R5LnZhbHVlLnNpemU8ci5hcnJheWJ1ZmZlclNpemVMaW1pdCYmci5zYXZlKCksci5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoci5fb3duZXIscyksbihlKTticmVhaztjYXNlIDE4Mzp0KGUuYm9keS52YWx1ZSk7YnJlYWs7ZGVmYXVsdDpyLl9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyLl9vd25lcixzKSxvKGUpfX0sITEpfSl9fSx7a2V5OlwiZGVsZXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2guaW5mbyhcIltIeXBlcnR5UmVzb3VyY2UuZGVsZXRlXVwiLGUubWV0YWRhdGEpO3ZhciB0PXtmcm9tOmUuX293bmVyLHRvOmUuX2xvY2FsU3RvcmFnZVVSTCx0eXBlOlwiZGVsZXRlXCIsYm9keTp7cmVzb3VyY2VzOmUubWV0YWRhdGEuY29udGVudFVSTH19O3JldHVybiBuZXcgbi5kZWZhdWx0KGZ1bmN0aW9uKHIpe2UuX2J1cy5wb3N0TWVzc2FnZSh0LGZ1bmN0aW9uKGUpe2UuYm9keS5jb2RlPDMwMD9yKCEwKTpyKCExKX0pfSl9fSx7a2V5OlwiX2dldEJlc3RDb250ZW50VVJMXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZVswXSxyPXQuc3Vic3RyKHQubGFzdEluZGV4T2YoXCIvXCIpKzEpO3JldHVybnt1cmw6dGhpcy5fbG9jYWxTdG9yYWdlVVJMLHJlc291cmNlOnIscmVtb3RlVVJMOnQuc3Vic3RyKDAsdC5sYXN0SW5kZXhPZihcIi9cIikpfX19LHtrZXk6XCJyZXNvdXJjZVR5cGVcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tZXRhZGF0YS5yZXNvdXJjZVR5cGV9fSx7a2V5OlwibWltZXR5cGVcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGEudHlwZX19LHtrZXk6XCJjb250ZW50XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbnRlbnR9fSx7a2V5OlwiY29udGVudFVSTFwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YS5jb250ZW50VVJMfX0se2tleTpcInNoYXJlYWJsZVwiLGdldDpmdW5jdGlvbigpe3ZhciBlPSgwLHUuZGVmYXVsdCkodC5wcm90b3R5cGUuX19wcm90b19ffHwoMCxvLmRlZmF1bHQpKHQucHJvdG90eXBlKSxcIm1ldGFkYXRhXCIsdGhpcyk7cmV0dXJuIGUucmVzb3VyY2VUeXBlPXRoaXMucmVzb3VyY2VUeXBlLGV9fV0pLHR9KGYuZGVmYXVsdCk7dC5kZWZhdWx0PXksZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBuPWkocigzKSksbz1pKHIoNSkpO2Z1bmN0aW9uIGkoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBzPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBCbG9iJiZmdW5jdGlvbigpe3RyeXtyZXR1cm4gQm9vbGVhbihuZXcgQmxvYil9Y2F0Y2goZSl7cmV0dXJuITF9fSgpLGE9cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFVpbnQ4QXJyYXkmJmZ1bmN0aW9uKCl7dHJ5e3JldHVybiAxMDA9PT1uZXcgQmxvYihbbmV3IFVpbnQ4QXJyYXkoMTAwKV0pLnNpemV9Y2F0Y2goZSl7cmV0dXJuITF9fSgpLHU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEhUTUxDYW52YXNFbGVtZW50JiZIVE1MQ2FudmFzRWxlbWVudC5wcm90b3R5cGUudG9CbG9iLGM9dXx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFVpbnQ4QXJyYXkmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGF0b2IsbD1cInVuZGVmaW5lZFwiIT10eXBlb2YgRmlsZVJlYWRlcnx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFVSTCxkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeygwLG4uZGVmYXVsdCkodGhpcyxlKX1yZXR1cm4oMCxvLmRlZmF1bHQpKGUsbnVsbCxbe2tleTpcInJlc2l6ZVwiLHZhbHVlOmZ1bmN0aW9uKHQscixuKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiByJiYobj1yLHI9e3dpZHRoOjY0MCxoZWlnaHQ6NDgwfSk7ci53aWR0aCxyLmhlaWdodDtpZighZS5pc1N1cHBvcnRlZCgpfHwhdC50eXBlLm1hdGNoKC9pbWFnZS4qLykpcmV0dXJuIG4odCwhMSksITE7aWYodC50eXBlLm1hdGNoKC9pbWFnZVxcL2dpZi8pKXJldHVybiBuKHQsITEpLCExO3ZhciBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7cmV0dXJuIG8ub25sb2FkPWZ1bmN0aW9uKGkpe3ZhciBzPW8ud2lkdGgsYT1vLmhlaWdodCxjPSExO2lmKHM+PWEmJnM+ci53aWR0aD8oYSo9ci53aWR0aC9zLHM9ci53aWR0aCxjPSEwKTphPnIuaGVpZ2h0JiYocyo9ci5oZWlnaHQvYSxhPXIuaGVpZ2h0LGM9ITApLGMpe3ZhciBsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7aWYobC53aWR0aD1zLGwuaGVpZ2h0PWEsbC5nZXRDb250ZXh0KFwiMmRcIikuZHJhd0ltYWdlKG8sMCwwLHMsYSksdSlsLnRvQmxvYihmdW5jdGlvbihlKXtuKGUsITApfSx0LnR5cGUpO2Vsc2V7dmFyIGQ9ZS5fdG9CbG9iKGwsdC50eXBlKTtuKGQsITApfX1lbHNlIG4odCwhMSl9LGUuX2xvYWRJbWFnZShvLHQpLCEwfX0se2tleTpcIl90b0Jsb2JcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPWUudG9EYXRhVVJMKHQpLnNwbGl0KFwiLFwiKSxuPXZvaWQgMDtuPXJbMF0uaW5kZXhPZihcImJhc2U2NFwiKT49MD9hdG9iKHJbMV0pOmRlY29kZVVSSUNvbXBvbmVudChyWzFdKTtmb3IodmFyIG89bmV3IEFycmF5QnVmZmVyKG4ubGVuZ3RoKSxpPW5ldyBVaW50OEFycmF5KG8pLHU9MDt1PG4ubGVuZ3RoO3UrPTEpaVt1XT1uLmNoYXJDb2RlQXQodSk7dmFyIGM9clswXS5zcGxpdChcIjpcIilbMV0uc3BsaXQoXCI7XCIpWzBdLGw9bnVsbDtpZihzKWw9bmV3IEJsb2IoW2E/aTpvXSx7dHlwZTpjfSk7ZWxzZXt2YXIgZD1uZXcgQmxvYkJ1aWxkZXI7ZC5hcHBlbmQobyksbD1kLmdldEJsb2IoYyl9cmV0dXJuIGx9fSx7a2V5OlwiX2xvYWRJbWFnZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgVVJMKXt2YXIgbj1uZXcgRmlsZVJlYWRlcjtuLm9ubG9hZD1mdW5jdGlvbih0KXtlLnNyYz10LnRhcmdldC5yZXN1bHQsciYmcigpfSxuLnJlYWRBc0RhdGFVUkwodCl9ZWxzZSBlLnNyYz1VUkwuY3JlYXRlT2JqZWN0VVJMKHQpLHImJnIoKX19LHtrZXk6XCJpc1N1cHBvcnRlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIEhUTUxDYW52YXNFbGVtZW50JiZjJiZsfX1dKSxlfSgpO3QuZGVmYXVsdD1kLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbj1mKHIoMTgpKSxvPWYocig3OCkpLGk9ZihyKDMpKSxzPWYocig1KSksYT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSx1PXIoMTkpLGM9ZihyKDEzMikpLGw9ZihyKDEzMykpLGQ9ZihyKDEzNSkpO2Z1bmN0aW9uIGYoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBwPWEuZ2V0TG9nZ2VyKFwiU3luY2hlclwiKSxoPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbil7KDAsaS5kZWZhdWx0KSh0aGlzLGUpO3ZhciBvPXRoaXM7by5fb3duZXI9dCxvLl9idXM9cixvLl9zdWJVUkw9bi5ydW50aW1lVVJMK1wiL3NtXCIsby5fcnVudGltZVVybD1uLnJ1bnRpbWVVUkwsby5fcDJwSGFuZGxlcj1uLnAycEhhbmRsZXIsby5fcDJwUmVxdWVzdGVyPW4ucDJwUmVxdWVzdGVyLG8uX3JlcG9ydGVycz17fSxvLl9vYnNlcnZlcnM9e30sby5fcHJvdmlzaW9uYWxzPXt9LHIuYWRkTGlzdGVuZXIodCxmdW5jdGlvbihlKXtpZihlLmZyb20hPT10KXN3aXRjaChwLmluZm8oXCJbU3luY2hlcl0gU3luY2hlci1SQ1Y6IFwiLGUsbyksZS50eXBlKXtjYXNlXCJmb3J3YXJkXCI6by5fb25Gb3J3YXJkKGUpO2JyZWFrO2Nhc2VcImNyZWF0ZVwiOm8uX29uUmVtb3RlQ3JlYXRlKGUpO2JyZWFrO2Nhc2VcImRlbGV0ZVwiOm8uX29uUmVtb3RlRGVsZXRlKGUpO2JyZWFrO2Nhc2VcImV4ZWN1dGVcIjpvLl9vbkV4ZWN1dGUoZSl9fSl9cmV0dXJuKDAscy5kZWZhdWx0KShlLFt7a2V5OlwiY3JlYXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdJiZhcmd1bWVudHNbM10saT1hcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XSYmYXJndW1lbnRzWzRdLHM9YXJndW1lbnRzLmxlbmd0aD41JiZ2b2lkIDAhPT1hcmd1bWVudHNbNV0/YXJndW1lbnRzWzVdOlwibm8gbmFtZVwiLGE9YXJndW1lbnRzWzZdLGM9YXJndW1lbnRzWzddO2lmKCFlKXRocm93IEVycm9yKFwiW1N5bmNoZXIgLSBDcmVhdGVdIC0gWW91IG5lZWQgc3BlY2lmeSB0aGUgZGF0YSBvYmplY3Qgc2NoZW1hXCIpO2lmKCF0KXRocm93IEVycm9yKFwiW1N5bmNoZXIgLSBDcmVhdGVdIC1UaGUgb2JzZXJ2ZXJzIHNob3VsZCBiZSBkZWZpbmVkXCIpO2M9Y3x8e307dmFyIGw9KDAsby5kZWZhdWx0KSh7fSxjKTtyZXR1cm4gbC5wMnA9aSxsLnN0b3JlPW4sbC5zY2hlbWE9ZSxsLmF1dGhvcmlzZT10LGwucDJwSGFuZGxlcj10aGlzLl9wMnBIYW5kbGVyLGwucDJwUmVxdWVzdGVyPXRoaXMuX3AycFJlcXVlc3RlcixsLmRhdGE9cj8oMCx1LmRlZXBDbG9uZSkocik6e30sbC5uYW1lPTA9PT1zLmxlbmd0aD9cIm5vIG5hbWVcIjpzLGwucmVwb3J0ZXI9Yy5oYXNPd25Qcm9wZXJ0eShcInJlcG9ydGVyXCIpJiZcImJvb2xlYW5cIiE9dHlwZW9mIGMucmVwb3J0ZXI/Yy5yZXBvcnRlcjp0aGlzLl9vd25lcixsLnJlc3VtZT0hMSxjPyhsLm11dHVhbD0hYy5oYXNPd25Qcm9wZXJ0eShcIm11dHVhbFwiKXx8Yy5tdXR1YWwsbC5uYW1lPWMuaGFzT3duUHJvcGVydHkoXCJuYW1lXCIpP2MubmFtZTpsLm5hbWUpOmwubXV0dWFsPSEwLGMuaGFzT3duUHJvcGVydHkoXCJyZXVzZVVSTFwiKSYmKGwucmVzb3VyY2U9Yy5yZXVzZVVSTCksYSYmKGwuaWRlbnRpdHk9YSkscC5sb2coXCJbc3luY2hlciAtIGNyZWF0ZV0gLSBjcmVhdGUgUmVwb3J0ZXIgLSBjcmVhdGVJbnB1dDogXCIsbCksdGhpcy5fY3JlYXRlKGwpfX0se2tleTpcInJlc3VtZVJlcG9ydGVyc1wiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBwLmxvZyhcIltzeW5jaGVyIC0gY3JlYXRlXSAtIHJlc3VtZSBSZXBvcnRlciAtIGNyaXRlcmlhOiBcIixlKSwoMCxvLmRlZmF1bHQpKGUse3Jlc3VtZTohMH0pLHRoaXMuX3Jlc3VtZUNyZWF0ZShlKX19LHtrZXk6XCJzdWJzY3JpYmVcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdJiZhcmd1bWVudHNbMl0sbj1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXSYmYXJndW1lbnRzWzNdLGk9IShhcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XSl8fGFyZ3VtZW50c1s0XSxzPWFyZ3VtZW50c1s1XSxhPXt9O3JldHVybiBhLnAycD1uLGEuc3RvcmU9cixhLnNjaGVtYT1lLGEucmVzb3VyY2U9dCxzJiYoYS5pZGVudGl0eT1zKSxhLm11dHVhbD1pLHAubG9nKFwiW3N5bmNoZXIgLSBzdWJzY3JpYmVdIC0gc3Vic2NyaWJlIGNyaXRlcmlhOiBcIixhKSwoMCxvLmRlZmF1bHQpKGEse3Jlc3VtZTohMX0pLHRoaXMuX3N1YnNjcmliZShhKX19LHtrZXk6XCJyZXN1bWVPYnNlcnZlcnNcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lfHx7fTtyZXR1cm4oMCxvLmRlZmF1bHQpKHQse3Jlc3VtZTohMH0pLHRoaXMuX3Jlc3VtZVN1YnNjcmliZSh0KX19LHtrZXk6XCJyZWFkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOlwicmVhZFwiLGZyb206dC5fb3duZXIsdG86ZX07cmV0dXJuIG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24oZSxuKXt0Ll9idXMucG9zdE1lc3NhZ2UocixmdW5jdGlvbihpKXtwLmxvZyhcIltTeW5jaGVyLnJlYWRdIHJlcGx5OiBcIixpKTt2YXIgcz17fSxhPXt9LHU9MDtpZihpLmJvZHkuY29kZTwzMDApaWYoaS5ib2R5LnZhbHVlLmhhc093blByb3BlcnR5KFwicmVzcG9uc2VzXCIpKWlmKDA9PT11KWE9aS5ib2R5LnZhbHVlLCsrdTtlbHNle2RlbGV0ZSBpLmJvZHkudmFsdWUucmVzcG9uc2VzO3ZhciBjPXZvaWQgMDtmb3IoYyBpbiBpLmJvZHkudmFsdWUpcy5oYXNPd25Qcm9wZXJ0eShjKXx8KHNbY109e30pLCgwLG8uZGVmYXVsdCkoc1tjXSxpLmJvZHkudmFsdWVbY10pOysrdT09PWEucmVzcG9uc2VzJiYoYS5jaGlsZHJlbk9iamVjdHM9cyxkZWxldGUgYS5yZXNwb25zZXMsdC5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoci5mcm9tLGkuaWQpLGUoYSkpfWVsc2UgdC5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoci5mcm9tLGkuaWQpLGUoaS5ib2R5LnZhbHVlKTtlbHNlIG4oaS5ib2R5LmRlc2MpfSwhMSl9KX19LHtrZXk6XCJvbk5vdGlmaWNhdGlvblwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uTm90aWZpY2F0aW9uSGFuZGxlcj1lfX0se2tleTpcIm9uQ2xvc2VcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbkNsb3NlPWV9fSx7a2V5OlwiX2NyZWF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24ocixuKXt2YXIgaT0oMCxvLmRlZmF1bHQpKHt9LGUpLHM9ZS5yZXN1bWU7aS5jcmVhdGVkPShuZXcgRGF0ZSkudG9JU09TdHJpbmcoKSxpLnJ1bnRpbWU9dC5fcnVudGltZVVybDt2YXIgYT0oMCx1LmRlZXBDbG9uZSkoaSk7ZGVsZXRlIGEucDJwLGRlbGV0ZSBhLnN0b3JlLGRlbGV0ZSBhLm9ic2VydmVycyxkZWxldGUgYS5pZGVudGl0eTt2YXIgbD17dHlwZTpcImNyZWF0ZVwiLGZyb206dC5fb3duZXIsdG86dC5fc3ViVVJMLGJvZHk6e3Jlc3VtZTpzLHZhbHVlOmF9fTtsLmJvZHkuc2NoZW1hPWkuc2NoZW1hLGkucDJwJiYobC5ib2R5LnAycD1pLnAycCksaS5zdG9yZSYmKGwuYm9keS5zdG9yZT1pLnN0b3JlKSxpLmlkZW50aXR5JiYobC5ib2R5LmlkZW50aXR5PWkuaWRlbnRpdHkpLHAubG9nKFwiW3N5bmNoZXIuX2NyZWF0ZV06IFwiLGksbCksdC5fYnVzLnBvc3RNZXNzYWdlKGwsZnVuY3Rpb24obyl7aWYocC5sb2coXCJbc3luY2hlciAtIGNyZWF0ZV0gLSBjcmVhdGUtcmVzcG9uc2U6IFwiLG8pLDIwMD09PW8uYm9keS5jb2RlKXtpLnVybD1vLmJvZHkucmVzb3VyY2UsaS5zdGF0dXM9XCJsaXZlXCIsaS5zeW5jaGVyPXQsaS5jaGlsZHJlbnM9by5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzO3ZhciBzPXQuX3JlcG9ydGVyc1tpLnVybF07c3x8KHM9bmV3IGMuZGVmYXVsdChpKSx0Ll9yZXBvcnRlcnNbaS51cmxdPXMpLHMuaW52aXRlT2JzZXJ2ZXJzKGUuYXV0aG9yaXNlLGUucDJwKSxyKHMpfWVsc2UgbihvLmJvZHkuZGVzYyl9KX0pfX0se2tleTpcIl9yZXN1bWVDcmVhdGVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9dGhpcztyZXR1cm4gbmV3IG4uZGVmYXVsdChmdW5jdGlvbihuLG8pe3ZhciBpPWUucmVzdW1lLHM9e3R5cGU6XCJjcmVhdGVcIixmcm9tOnIuX293bmVyLHRvOnIuX3N1YlVSTCxib2R5OntyZXN1bWU6aX19O3AubG9nKFwiW3N5bmNoZXIgLSBjcmVhdGVdOiBcIixlLHMpLGUmJihzLmJvZHkudmFsdWU9ZSxlLmhhc093blByb3BlcnR5KFwicmVwb3J0ZXJcIik/cy5ib2R5LnZhbHVlLnJlcG9ydGVyPWUucmVwb3J0ZXI6cy5ib2R5LnZhbHVlLnJlcG9ydGVyPXIuX293bmVyKSxlLnAycCYmKHMuYm9keS5wMnA9ZS5wMnApLGUuc3RvcmUmJihzLmJvZHkuc3RvcmU9ZS5zdG9yZSksZS5vYnNlcnZlcnMmJihzLmJvZHkuYXV0aG9yaXNlPWUub2JzZXJ2ZXJzKSxlLmlkZW50aXR5JiYocy5ib2R5LmlkZW50aXR5PWUuaWRlbnRpdHkpLHAubG9nKFwiW3N5bmNoZXIuX3Jlc3VtZUNyZWF0ZV0gLSByZXN1bWUgbWVzc2FnZTogXCIscyksci5fYnVzLnBvc3RNZXNzYWdlKHMsZnVuY3Rpb24oZSl7aWYocC5sb2coXCJbc3luY2hlci5fcmVzdW1lQ3JlYXRlXSAtIGNyZWF0ZS1yZXN1bWVkLXJlc3BvbnNlOiBcIixlKSwyMDA9PT1lLmJvZHkuY29kZSl7dmFyIGk9ZS5ib2R5LnZhbHVlO2Zvcih2YXIgcyBpbiBpKXt2YXIgYT1pW3NdO2EuZGF0YT0oMCx1LmRlZXBDbG9uZSkoYS5kYXRhKXx8e30sYS5jaGlsZHJlbk9iamVjdHMmJihhLmNoaWxkcmVuT2JqZWN0cz0oMCx1LmRlZXBDbG9uZSkoYS5jaGlsZHJlbk9iamVjdHMpKSxhLm11dHVhbD0hMSxhLnJlc3VtZT0hMCxhLnN0YXR1cz1cImxpdmVcIixhLnN5bmNoZXI9cixwLmxvZyhcIltzeW5jaGVyLl9yZXN1bWVDcmVhdGVdIC0gY3JlYXRlLXJlc3VtZWQtZGF0YU9iamVjdFJlcG9ydGVyXCIsYSk7dmFyIGw9bmV3IGMuZGVmYXVsdChhKTthLmNoaWxkcmVuT2JqZWN0cyYmbC5yZXN1bWVDaGlsZHJlbnMoYS5jaGlsZHJlbk9iamVjdHMpLHIuX3JlcG9ydGVyc1thLnVybF09bH1uKHIuX3JlcG9ydGVycyksdC5fb25SZXBvcnRlcnNSZXN1bWUmJnQuX29uUmVwb3J0ZXJzUmVzdW1lKHQuX3JlcG9ydGVycyl9ZWxzZSA0MDQ9PT1lLmJvZHkuY29kZT9uKHt9KTpvKGUuYm9keS5kZXNjKX0pfSl9fSx7a2V5OlwiX3N1YnNjcmliZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24ocixuKXt2YXIgbz17dHlwZTpcInN1YnNjcmliZVwiLGZyb206dC5fb3duZXIsdG86dC5fc3ViVVJMLGJvZHk6e319O2UmJihlLmhhc093blByb3BlcnR5KFwicDJwXCIpJiYoby5ib2R5LnAycD1lLnAycCksZS5oYXNPd25Qcm9wZXJ0eShcInN0b3JlXCIpJiYoby5ib2R5LnN0b3JlPWUuc3RvcmUpLGUuaGFzT3duUHJvcGVydHkoXCJzY2hlbWFcIikmJihvLmJvZHkuc2NoZW1hPWUuc2NoZW1hKSxlLmhhc093blByb3BlcnR5KFwiaWRlbnRpdHlcIikmJihvLmJvZHkuaWRlbnRpdHk9ZS5pZGVudGl0eSksZS5oYXNPd25Qcm9wZXJ0eShcInJlc291cmNlXCIpJiYoby5ib2R5LnJlc291cmNlPWUucmVzb3VyY2UpKSxvLmJvZHkucmVzdW1lPWUucmVzdW1lLGUuaGFzT3duUHJvcGVydHkoXCJtdXR1YWxcIikmJihvLmJvZHkubXV0dWFsPWUubXV0dWFsKSxwLmxvZyhcIltzeW5jaGVyX3N1YnNjcmliZV0gLSBzdWJzY3JpYmUgbWVzc2FnZTogXCIsZSxvKSx0Ll9idXMucG9zdE1lc3NhZ2UobyxmdW5jdGlvbihvKXtwLmxvZyhcIltzeW5jaGVyXSAtIHN1YnNjcmliZS1yZXNwb25zZTogXCIsbyk7dmFyIGk9by5ib2R5LnJlc291cmNlLHM9dC5fcHJvdmlzaW9uYWxzW2ldO2lmKGRlbGV0ZSB0Ll9wcm92aXNpb25hbHNbaV0scyYmcy5fcmVsZWFzZUxpc3RlbmVycygpLG8uYm9keS5jb2RlPDIwMClwLmxvZyhcIltzeW5jaGVyXSAtIG5ldyBEYXRhUHJvdmlzaW9uYWw6IFwiLG8uYm9keS5jaGlsZHJlblJlc291cmNlcyxpKSxzPW5ldyBkLmRlZmF1bHQodC5fb3duZXIsaSx0Ll9idXMsby5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKSx0Ll9wcm92aXNpb25hbHNbaV09cztlbHNlIGlmKDIwMD09PW8uYm9keS5jb2RlKXtwLmxvZyhcIltzeW5jaGVyXSAtIG5ldyBEYXRhIE9iamVjdCBPYnNlcnZlcjogXCIsbyx0Ll9wcm92aXNpb25hbHMpO3ZhciBhPW8uYm9keS52YWx1ZTthLnN5bmNoZXI9dCxhLnAycD1lLnAycCxhLnN0b3JlPWUuc3RvcmUsYS5pZGVudGl0eT1lLmlkZW50aXR5LGEucmVzdW1lPSExLGEubXV0dWFsPWUubXV0dWFsO3ZhciB1PXQuX29ic2VydmVyc1tpXTt1P3Uuc3luYygpOih1PW5ldyBsLmRlZmF1bHQoYSksdC5fb2JzZXJ2ZXJzW2ldPXUpLHAubG9nKFwiW3N5bmNoZXJdIC0gbmV3IERhdGEgT2JqZWN0IE9ic2VydmVyIGFscmVhZHkgZXhpc3Q6IFwiLHUpLHIodSkscyYmcy5hcHBseSh1KX1lbHNlIG4oby5ib2R5LmRlc2MpfSl9KX19LHtrZXk6XCJfcmVzdW1lU3Vic2NyaWJlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXRoaXM7cmV0dXJuIG5ldyBuLmRlZmF1bHQoZnVuY3Rpb24obixvKXt2YXIgaT17dHlwZTpcInN1YnNjcmliZVwiLGZyb206ci5fb3duZXIsdG86ci5fc3ViVVJMLGJvZHk6e319O2UmJihlLmhhc093blByb3BlcnR5KFwicDJwXCIpJiYoaS5ib2R5LnAycD1lLnAycCksZS5oYXNPd25Qcm9wZXJ0eShcInN0b3JlXCIpJiYoaS5ib2R5LnN0b3JlPWUuc3RvcmUpLGUuaGFzT3duUHJvcGVydHkoXCJzY2hlbWFcIikmJihpLmJvZHkuc2NoZW1hPWUuc2NoZW1hKSxlLmhhc093blByb3BlcnR5KFwiaWRlbnRpdHlcIikmJihpLmJvZHkuaWRlbnRpdHk9ZS5pZGVudGl0eSksZS5oYXNPd25Qcm9wZXJ0eShcInJlc291cmNlXCIpJiYoaS5ib2R5LnJlc291cmNlPWUudXJsKSksaS5ib2R5LnJlc3VtZT1lLnJlc3VtZTt2YXIgcz1lLm11dHVhbDtlLmhhc093blByb3BlcnR5KFwibXV0dWFsXCIpJiYoaS5ib2R5Lm11dHVhbD1zKSxwLmxvZyhcIltzeW5jaGVyXSAtIHN1YnNjcmliZSBtZXNzYWdlOiBcIixlLGkpLHIuX2J1cy5wb3N0TWVzc2FnZShpLGZ1bmN0aW9uKGUpe3AubG9nKFwiW3N5bmNoZXJdIC0gc3Vic2NyaWJlLXJlc3VtZWQtcmVzcG9uc2U6IFwiLGUpO3ZhciBpPWUuYm9keS5yZXNvdXJjZSxzPXIuX3Byb3Zpc2lvbmFsc1tpXTtpZihkZWxldGUgci5fcHJvdmlzaW9uYWxzW2ldLHMmJnMuX3JlbGVhc2VMaXN0ZW5lcnMoKSxlLmJvZHkuY29kZTwyMDApcC5sb2coXCJbc3luY2hlcl0gLSByZXN1bWUgbmV3IERhdGFQcm92aXNpb25hbDogXCIsZSxpKSxzPW5ldyBkLmRlZmF1bHQoci5fb3duZXIsaSxyLl9idXMsZS5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKSxyLl9wcm92aXNpb25hbHNbaV09cztlbHNlIGlmKDIwMD09PWUuYm9keS5jb2RlKXt2YXIgYT1lLmJvZHkudmFsdWU7Zm9yKHZhciBjIGluIGEpe3ZhciBmPWFbY107cC5sb2coXCJbc3luY2hlcl0gLSBSZXN1bWUgT2JqZWN0IE9ic2VydmVyOiBcIixlLGYsci5fcHJvdmlzaW9uYWxzKSxmLmNoaWxkcmVuT2JqZWN0cyYmKGYuY2hpbGRyZW5PYmplY3RzPSgwLHUuZGVlcENsb25lKShmLmNoaWxkcmVuT2JqZWN0cykpLGYuZGF0YT0oMCx1LmRlZXBDbG9uZSkoZi5kYXRhKXx8e30sZi5yZXN1bWU9ITAsZi5zeW5jaGVyPXIscC5sb2coXCJbc3luY2hlci5fcmVzdW1lU3Vic2NyaWJlXSAtIGNyZWF0ZSBuZXcgZGF0YU9iamVjdDogXCIsZik7dmFyIGg9bmV3IGwuZGVmYXVsdChmKTtmLmNoaWxkcmVuT2JqZWN0cyYmaC5yZXN1bWVDaGlsZHJlbnMoZi5jaGlsZHJlbk9iamVjdHMpLHAubG9nKFwiW3N5bmNoZXIuX3Jlc3VtZVN1YnNjcmliZV0gLSBuZXcgZGF0YU9iamVjdFwiLGgpLHIuX29ic2VydmVyc1toLnVybF09aCxyLl9wcm92aXNpb25hbHNbaC51cmxdJiZyLl9wcm92aXNpb25hbHNbaC51cmxdLmFwcGx5KGgpfW4oci5fb2JzZXJ2ZXJzKSx0Ll9vbk9ic2VydmVyc1Jlc3VtZSYmdC5fb25PYnNlcnZlcnNSZXN1bWUoci5fb2JzZXJ2ZXJzKX1lbHNlIDQwND09PWUuYm9keS5jb2RlP24oe30pOm8oZS5ib2R5LmRlc2MpfSl9KX19LHtrZXk6XCJfb25Gb3J3YXJkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fcmVwb3J0ZXJzW2UuYm9keS50b10uX29uRm9yd2FyZChlKX19LHtrZXk6XCJfb25SZW1vdGVDcmVhdGVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5mcm9tLnNsaWNlKDAsLTEzKSxuPSgwLHUuZGl2aWRlVVJMKShyKS5kb21haW4sbz17dHlwZTplLnR5cGUsZnJvbTplLmJvZHkuc291cmNlLHVybDpyLGRvbWFpbjpuLHNjaGVtYTplLmJvZHkuc2NoZW1hLHZhbHVlOmUuYm9keS52YWx1ZSxpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBuPTIwMDtyJiYobj1yKSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZTpcInJlc3BvbnNlXCIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOm59fSl9fTt0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXImJihwLmluZm8oXCJbU3luY2hlcl0gTk9USUZJQ0FUSU9OLUVWRU5UOiBcIixvKSx0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXIobykpfX0se2tleTpcIl9vblJlbW90ZURlbGV0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkucmVzb3VyY2Usbj10Ll9vYnNlcnZlcnNbcl0sbz17ZnJvbTp0Lm93bmVyLHRvOnQuX3N1YlVSTCxpZDplLmlkLHR5cGU6XCJ1bnN1YnNjcmliZVwiLGJvZHk6e3Jlc291cmNlOmUuYm9keS5yZXNvdXJjZX19O2lmKHQuX2J1cy5wb3N0TWVzc2FnZShvKSxkZWxldGUgdC5fb2JzZXJ2ZXJzW3JdLG4pe3ZhciBpPXt0eXBlOmUudHlwZSx1cmw6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBvPTIwMDtyJiYobz1yKSwyMDA9PT1vJiZuLmRlbGV0ZSgpLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOlwicmVzcG9uc2VcIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6byxzb3VyY2U6dC5fb3duZXJ9fSl9fTt0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXImJihwLmxvZyhcIk5PVElGSUNBVElPTi1FVkVOVDogXCIsaSksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyKGkpKX1lbHNlIHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOlwicmVzcG9uc2VcIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDA0LHNvdXJjZTp0Ll9vd25lcn19KX19LHtrZXk6XCJfb25FeGVjdXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDB9fTtpZigoZS5mcm9tPT09dC5fcnVudGltZVVybCtcIi9yZWdpc3RyeS9cInx8ZS5mcm9tPT09dC5fcnVudGltZVVybCtcIi9yZWdpc3RyeVwiKSYmZS5ib2R5JiZlLmJvZHkubWV0aG9kJiZcImNsb3NlXCI9PT1lLmJvZHkubWV0aG9kJiZ0Ll9vbkNsb3NlKXt2YXIgbj17dHlwZTpcImNsb3NlXCIsYWNrOmZ1bmN0aW9uKGUpe2UmJihyLmJvZHkuY29kZT1lKSx0Ll9idXMucG9zdE1lc3NhZ2Uocil9fTtwLmluZm8oXCJbU3luY2hlcl0gQ2xvc2UtRVZFTlQ6IFwiLG4pLHQuX29uQ2xvc2Uobil9ZWxzZSB0Ll9idXMucG9zdE1lc3NhZ2Uocil9fSx7a2V5Olwib25SZXBvcnRlcnNSZXN1bWVcIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlcG9ydGVyc1Jlc3VtZT1lfX0se2tleTpcIm9uT2JzZXJ2ZXJzUmVzdW1lXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25PYnNlcnZlcnNSZXN1bWU9ZX19LHtrZXk6XCJvd25lclwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vd25lcn19LHtrZXk6XCJyZXBvcnRlcnNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVwb3J0ZXJzfX0se2tleTpcIm9ic2VydmVyc1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vYnNlcnZlcnN9fV0pLGV9KCk7dC5kZWZhdWx0PWgsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBuPXkocig0MikpLG89eShyKDU4KSksaT15KHIoMTgpKSxzPXkocigyNSkpLGE9eShyKDMpKSx1PXkocig1KSksYz15KHIoMzMpKSxsPXkocigxMDApKSxkPXkocigzNCkpLGY9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSkscD15KHIoMTIyKSksaD1yKDE5KTtmdW5jdGlvbiB5KGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgdj1mLmdldExvZ2dlcihcIkRhdGFPYmplY3RSZXBvcnRlclwiKSxfPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7KDAsYS5kZWZhdWx0KSh0aGlzLHQpO3ZhciByPSgwLGMuZGVmYXVsdCkodGhpcywodC5fX3Byb3RvX198fCgwLHMuZGVmYXVsdCkodCkpLmNhbGwodGhpcyxlKSksbj1yO3JldHVybiBuLl9zdWJzY3JpcHRpb25zPXt9LG4uX3N5bmNPYmoub2JzZXJ2ZShmdW5jdGlvbihlKXt2LmxvZyhcIltTeW5jaGVyLkRhdGFPYmplY3RSZXBvcnRlcl0gXCIrbi51cmwrXCIgcHVibGlzaCBjaGFuZ2U6IFwiLGUpLG4uX29uQ2hhbmdlKGUpfSksbi5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxuLmludml0YXRpb25zPVtdLG4uX2NoaWxkcmVuU2l6ZVRocmVzaG9sZD01ZTQscn1yZXR1cm4oMCxkLmRlZmF1bHQpKHQsZSksKDAsdS5kZWZhdWx0KSh0LFt7a2V5OlwiX2FsbG9jYXRlTGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxsLmRlZmF1bHQpKHQucHJvdG90eXBlLl9fcHJvdG9fX3x8KDAscy5kZWZhdWx0KSh0LnByb3RvdHlwZSksXCJfYWxsb2NhdGVMaXN0ZW5lcnNcIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fb2JqZWN0TGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCxmdW5jdGlvbih0KXtzd2l0Y2godi5sb2coXCJbU3luY2hlci5EYXRhT2JqZWN0UmVwb3J0ZXJdIGxpc3RlbmVyIFwiK2UuX3VybCtcIiBSZWNlaXZlZDogXCIsdCksdC50eXBlKXtjYXNlXCJyZXNwb25zZVwiOmUuX29uUmVzcG9uc2UodCk7YnJlYWs7Y2FzZVwicmVhZFwiOmUuX29uUmVhZCh0KTticmVhaztjYXNlXCJleGVjdXRlXCI6ZS5fb25FeGVjdXRlKHQpO2JyZWFrO2Nhc2VcImNyZWF0ZVwiOmUuX29uQ2hpbGRDcmVhdGUodCl9fSl9fSx7a2V5OlwiX3JlbGVhc2VMaXN0ZW5lcnNcIix2YWx1ZTpmdW5jdGlvbigpeygwLGwuZGVmYXVsdCkodC5wcm90b3R5cGUuX19wcm90b19ffHwoMCxzLmRlZmF1bHQpKHQucHJvdG90eXBlKSxcIl9yZWxlYXNlTGlzdGVuZXJzXCIsdGhpcykuY2FsbCh0aGlzKTt0aGlzLl9vYmplY3RMaXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6XCJpbnZpdGVPYnNlcnZlcnNcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj1lO24ubGVuZ3RoPjAmJih2LmxvZyhcIltTeW5jaGVyLkRhdGFPYmplY3RSZXBvcnRlcl0gSW52aXRlT2JzZXJ2ZXJzIFwiLG4sci5fbWV0YWRhdGEpLG4uZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgbj1uZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7dmFyIGk9e3R5cGU6XCJjcmVhdGVcIixmcm9tOnIuX3N5bmNoZXIuX293bmVyLHRvOnIuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXN1bWU6ITEscmVzb3VyY2U6ci5fdXJsLHNjaGVtYTpyLl9zY2hlbWEsdmFsdWU6ci5fbWV0YWRhdGEsYXV0aG9yaXNlOltlXX19O3QmJihpLmJvZHkucDJwPXQpLHIuZGF0YS5tdXR1YWx8fChpLmJvZHkubXV0dWFsPXIuZGF0YS5tdXR1YWwpLHIuX2J1cy5wb3N0TWVzc2FnZShpLGZ1bmN0aW9uKHQpe3YubG9nKFwiW1N5bmNoZXIuRGF0YU9iamVjdFJlcG9ydGVyXSBJbnZpdGF0aW9uIHJlcGx5IFwiLHQpO3ZhciByPXtpbnZpdGVkOmUsY29kZTp0LmJvZHkmJnQuYm9keS5jb2RlP3QuYm9keS5jb2RlOjUwMCxkZXNjOnQuYm9keSYmdC5ib2R5LmRlc2M/dC5ib2R5LmRlc2M6XCJVbmtub3duXCJ9O3IuY29kZTwzMDA/bihyKTpyLmNvZGU+PTMwMCYmbyhyKX0pfSk7ci5pbnZpdGF0aW9ucy5wdXNoKG4pfSkpfX0se2tleTpcImRlbGV0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9kZWxldGVDaGlsZHJlbnMoKS50aGVuKGZ1bmN0aW9uKHQpe3YubG9nKHQpO3ZhciByPXt0eXBlOlwiZGVsZXRlXCIsZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6ZS5fdXJsfX07ZS5fYnVzLnBvc3RNZXNzYWdlKHIsZnVuY3Rpb24odCl7di5sb2coXCJEYXRhT2JqZWN0UmVwb3J0ZXItREVMRVRFOiBcIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fcmVwb3J0ZXJzW2UuX3VybF0sZS5fc3luY09iaj17fSl9KX0pfX0se2tleTpcIm9uU3Vic2NyaXB0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyPWV9fSx7a2V5Olwib25SZXNwb25zZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyPWV9fSx7a2V5Olwib25SZWFkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25SZWFkSGFuZGxlcj1lfX0se2tleTpcIm9uRXhlY3V0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uRXhlY3V0ZUhhbmRsZXI9ZX19LHtrZXk6XCJfb25Gb3J3YXJkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7c3dpdGNoKHYubG9nKFwiRGF0YU9iamVjdFJlcG9ydGVyLVJDVjogXCIsZSksZS5ib2R5LnR5cGUpe2Nhc2VcInN1YnNjcmliZVwiOnRoaXMuX29uU3Vic2NyaWJlKGUpO2JyZWFrO2Nhc2VcInVuc3Vic2NyaWJlXCI6dGhpcy5fb25VblN1YnNjcmliZShlKX19fSx7a2V5OlwiX29uU3Vic2NyaWJlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5mcm9tLG49KDAsaC5kaXZpZGVVUkwpKHIpLG89bi5kb21haW4saT0hMDtlLmJvZHkuaGFzT3duUHJvcGVydHkoXCJtdXR1YWxcIikmJiFlLmJvZHkubXV0dWFsJiYoaT0hMSksdi5sb2coXCJbRGF0YU9iamVjdFJlcG9ydGVyLl9vblN1YnNjcmliZV1cIixlLG8sbik7dmFyIHM9e3R5cGU6ZS5ib2R5LnR5cGUsdXJsOnIsZG9tYWluOm8saWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LG51dHVhbDppLGFjY2VwdDpmdW5jdGlvbigpe3ZhciBuPXt1cmw6cixzdGF0dXM6XCJsaXZlXCJ9O3QuX3N1YnNjcmlwdGlvbnNbcl09bix0Lm1ldGFkYXRhLnN1YnNjcmlwdGlvbnMmJnQubWV0YWRhdGEuc3Vic2NyaXB0aW9ucy5wdXNoKG4udXJsKTt2YXIgbz0oMCxoLmRlZXBDbG9uZSkodC5fbWV0YWRhdGEpO28uZGF0YT0oMCxoLmRlZXBDbG9uZSkodC5kYXRhKSxvLnZlcnNpb249dC5fdmVyc2lvbjt2YXIgaT17aWQ6ZS5pZCx0eXBlOlwicmVzcG9uc2VcIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MjAwLHNjaGVtYTp0Ll9zY2hlbWEsdmFsdWU6b319O3JldHVybiBlLmJvZHkuaGFzT3duUHJvcGVydHkoXCJtdXR1YWxcIikmJiFlLmJvZHkubXV0dWFsJiYoaS5ib2R5Lm11dHVhbD1lLmJvZHkubXV0dWFsLHQuZGF0YS5tdXR1YWw9ITEpLHQuX2J1cy5wb3N0TWVzc2FnZShpKSxufSxyZWplY3Q6ZnVuY3Rpb24ocil7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDMsZGVzYzpyfX0pfX07dC5fb25TdWJzY3JpcHRpb25IYW5kbGVyJiYodi5sb2coXCJTVUJTQ1JJUFRJT04tRVZFTlQ6IFwiLHMpLHQuX29uU3Vic2NyaXB0aW9uSGFuZGxlcihzKSl9fSx7a2V5OlwiX29uVW5TdWJzY3JpYmVcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lLmJvZHkuZnJvbSxyPSgwLGguZGl2aWRlVVJMKSh0KSxuPXIuZG9tYWluO3YubG9nKFwiW0RhdGFPYmplY3RSZXBvcnRlci5fb25VblN1YnNjcmliZV1cIixlLG4sciksZGVsZXRlIHRoaXMuX3N1YnNjcmlwdGlvbnNbdF0sZGVsZXRlIHRoaXMuaW52aXRhdGlvbnNbdF07dmFyIG89e3R5cGU6ZS5ib2R5LnR5cGUsdXJsOnQsZG9tYWluOm4saWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5fTt0aGlzLl9vblN1YnNjcmlwdGlvbkhhbmRsZXImJih2LmxvZyhcIlVOLVNVQlNDUklQVElPTi1FVkVOVDogXCIsbyksdGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyKG8pKX19LHtrZXk6XCJfb25SZXNwb25zZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLGNvZGU6ZS5ib2R5LmNvZGV9O3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyJiYodi5sb2coXCJSRVNQT05TRS1FVkVOVDogXCIsdCksdGhpcy5fb25SZXNwb25zZUhhbmRsZXIodCkpfX0se2tleTpcIl9vblJlYWRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9KDAsby5kZWZhdWx0KSh0LmNoaWxkcmVuc0pTT04pLmxlbmd0aD50Ll9jaGlsZHJlblNpemVUaHJlc2hvbGQsaT17dHlwZTplLnR5cGUsdXJsOmUuZnJvbSxhY2NlcHQ6ZnVuY3Rpb24oKXtyP3QuX3N5bmNSZXBseUZvckxhcmdlRGF0YShlKTp0Ll9zeW5jUmVwbHkoZSl9LHJlamVjdDpmdW5jdGlvbihyKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZTpcInJlc3BvbnNlXCIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMSxkZXNjOnJ9fSl9fSxzPVtdO3QubWV0YWRhdGEuc3Vic2NyaXB0aW9ucz9zPXQubWV0YWRhdGEuc3Vic2NyaXB0aW9uczp0Ll9zdWJzY3JpcHRpb25zJiYocz0oMCxuLmRlZmF1bHQpKHQuX3N1YnNjcmlwdGlvbnMpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gdC5fc3Vic2NyaXB0aW9uc1tlXS51cmx9KSksLTEhPXMuaW5kZXhPZihlLmZyb20pP3I/dC5fc3luY1JlcGx5Rm9yTGFyZ2VEYXRhKGUpOnQuX3N5bmNSZXBseShlKTp0Ll9vblJlYWRIYW5kbGVyJiYodi5sb2coXCJSRUFELUVWRU5UOiBcIixpKSx0Ll9vblJlYWRIYW5kbGVyKGkpKX19LHtrZXk6XCJfc3luY1JlcGx5XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9KDAsaC5kZWVwQ2xvbmUpKHRoaXMubWV0YWRhdGEpO3QuZGF0YT0oMCxoLmRlZXBDbG9uZSkodGhpcy5kYXRhKSx0LmNoaWxkcmVuT2JqZWN0cz0oMCxoLmRlZXBDbG9uZSkodGhpcy5jaGlsZHJlbnNKU09OKSx0LnZlcnNpb249dGhpcy5fdmVyc2lvbjt2YXIgcj17aWQ6ZS5pZCx0eXBlOlwicmVzcG9uc2VcIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MjAwLHZhbHVlOnR9fTt0aGlzLl9idXMucG9zdE1lc3NhZ2Uocil9fSx7a2V5OlwiX3N5bmNSZXBseUZvckxhcmdlRGF0YVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj0oMCxoLmRlZXBDbG9uZSkodC5tZXRhZGF0YSk7ci5kYXRhPSgwLGguZGVlcENsb25lKSh0LmRhdGEpLHIudmVyc2lvbj10Ll92ZXJzaW9uLGRlbGV0ZSByLmNoaWxkcmVuT2JqZWN0czt2YXIgbj12b2lkIDAsaT1bXSxzPXt9O2ZvcihuIGluIHQuX2NoaWxkcmVuT2JqZWN0cyl7dmFyIGE9dm9pZCAwO2ZvcihhIGluIHNbbl09e30sdC5fY2hpbGRyZW5PYmplY3RzW25dKSgwLG8uZGVmYXVsdCkocykubGVuZ3RoPnQuX2NoaWxkcmVuU2l6ZVRocmVzaG9sZCYmKGkucHVzaChzKSwocz17fSlbbl09e30pLHNbbl1bYV09e30sc1tuXVthXS52YWx1ZT10Ll9jaGlsZHJlbk9iamVjdHNbbl1bYV0ubWV0YWRhdGEsc1tuXVthXS5pZGVudGl0eT10Ll9jaGlsZHJlbk9iamVjdHNbbl1bYV0uaWRlbnRpdHl9aS5wdXNoKHMpLHIucmVzcG9uc2VzPWkubGVuZ3RoKzE7dmFyIHU9e2lkOmUuaWQsdHlwZTpcInJlc3BvbnNlXCIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjEwMCx2YWx1ZTpyfX07dC5fYnVzLnBvc3RNZXNzYWdlKHUpLGkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgbj0oMCxoLmRlZXBDbG9uZSkodSk7bi5ib2R5LnZhbHVlPWUsbi5ib2R5LnZhbHVlLnJlc3BvbnNlcz1yLnJlc3BvbnNlcyxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5fYnVzLnBvc3RNZXNzYWdlKG4pfSw1MCl9KX19LHtrZXk6XCJfb25FeGVjdXRlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpZighZS5ib2R5Lm1ldGhvZCl0aHJvdyBlO3ZhciByPXtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDB9fSxuPXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLG1ldGhvZDplLmJvZHkubWV0aG9kLHBhcmFtczplLmJvZHkucGFyYW1zLGFjY2VwdDpmdW5jdGlvbigpe3QuX2J1cy5wb3N0TWVzc2FnZShyKX0scmVqZWN0OmZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOlwicmVzcG9uc2VcIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDAxLGRlc2M6cn19KX19O3QuX29uRXhlY3V0ZUhhbmRsZXImJih2LmxvZyhcIltEYXRhT2JqZWN0UmVwb3J0ZXJdIEVYRUNVVEUtRVZFTlQ6IFwiLG4pLHQuX29uRXhlY3V0ZUhhbmRsZXIobikpfX0se2tleTpcInN1YnNjcmlwdGlvbnNcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3Vic2NyaXB0aW9uc319LHtrZXk6XCJjaGlsZHJlbnNKU09OXCIsZ2V0OmZ1bmN0aW9uKCl7dmFyIGU9e30sdD12b2lkIDA7Zm9yKHQgaW4gdGhpcy5fY2hpbGRyZW5PYmplY3RzKXt2YXIgcj12b2lkIDA7Zm9yKHIgaW4gZVt0XT17fSx0aGlzLl9jaGlsZHJlbk9iamVjdHNbdF0pZVt0XVtyXT17fSxlW3RdW3JdLnZhbHVlPXRoaXMuX2NoaWxkcmVuT2JqZWN0c1t0XVtyXS5tZXRhZGF0YSxlW3RdW3JdLmlkZW50aXR5PXRoaXMuX2NoaWxkcmVuT2JqZWN0c1t0XVtyXS5pZGVudGl0eX1yZXR1cm4gZX19XSksdH0ocC5kZWZhdWx0KTt0LmRlZmF1bHQ9XyxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49eShyKDQyKSksbz15KHIoNzgpKSxpPXkocigxOCkpLHM9eShyKDI1KSksYT15KHIoMykpLHU9eShyKDUpKSxjPXkocigzMykpLGw9eShyKDEwMCkpLGQ9eShyKDM0KSksZj1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSxwPXIoMTkpLGg9eShyKDEyMikpO2Z1bmN0aW9uIHkoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciB2PWYuZ2V0TG9nZ2VyKFwiRGF0YU9iamVjdE9ic2VydmVyXCIpLF89XCJhbnlcIixiPVwic3RhcnRcIixtPVwiZXhhY3RcIixnPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7KDAsYS5kZWZhdWx0KSh0aGlzLHQpO3ZhciByPSgwLGMuZGVmYXVsdCkodGhpcywodC5fX3Byb3RvX198fCgwLHMuZGVmYXVsdCkodCkpLmNhbGwodGhpcyxlKSksbj1yO3JldHVybiBuLl92ZXJzaW9uPWUudmVyc2lvbixuLl9maWx0ZXJzPXt9LG4uX3N5bmNPYmoub2JzZXJ2ZShmdW5jdGlvbihlKXtuLl9vbkZpbHRlcihlKX0pLG4uX2FsbG9jYXRlTGlzdGVuZXJzKCkscn1yZXR1cm4oMCxkLmRlZmF1bHQpKHQsZSksKDAsdS5kZWZhdWx0KSh0LFt7a2V5Olwic3luY1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gdi5pbmZvKFwiW0RhdGFPYmplY3RPYnNlcnZlcl9zeW5jXSBzeW5jaHJvbmlzaW5nIFwiKSxuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKHQscil7ZS5fc3luY2hlci5yZWFkKGUuX21ldGFkYXRhLnVybCkudGhlbihmdW5jdGlvbihyKXt2LmluZm8oXCJbRGF0YU9iamVjdE9ic2VydmVyX3N5bmNdIHZhbHVlIHRvIHN5bmM6IFwiLHIpLCgwLG8uZGVmYXVsdCkoZS5kYXRhLCgwLHAuZGVlcENsb25lKShyLmRhdGEpKSxlLl92ZXJzaW9uPXIudmVyc2lvbixlLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9ci5sYXN0TW9kaWZpZWQsci5jaGlsZHJlbk9iamVjdHM/KGUucmVzdW1lQ2hpbGRyZW5zKHIuY2hpbGRyZW5PYmplY3RzKSxlLl9zdG9yZUNoaWxkcmVucygpLHQoITApKTp0KCEwKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3YuaW5mbyhcIltEYXRhT2JqZWN0T2JzZXJ2ZXJfc3luY10gc3luYyBmYWlsZWQ6IFwiLGUpLHQoITEpfSl9KX19LHtrZXk6XCJfc3RvcmVDaGlsZHJlbnNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17fTsoMCxuLmRlZmF1bHQpKGUuX2NoaWxkcmVuT2JqZWN0cykuZm9yRWFjaChmdW5jdGlvbihyKXt2YXIgbz1lLl9jaGlsZHJlbk9iamVjdHNbcl07dFtyXT17fSwoMCxuLmRlZmF1bHQpKG8pLmZvckVhY2goZnVuY3Rpb24oZSl7dFtyXVtlXT17fSx0W3JdW2VdLnZhbHVlPW9bZV0ubWV0YWRhdGEsdFtyXVtlXS5pZGVudGl0eT1vW2VdLmlkZW50aXR5fSl9KTt2YXIgcj17ZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsdHlwZTpcImNyZWF0ZVwiLGJvZHk6e3Jlc291cmNlOmUuX3VybCxhdHRyaWJ1dGU6XCJjaGlsZHJlbk9iamVjdHNcIix2YWx1ZTp0fX07ZS5fYnVzLnBvc3RNZXNzYWdlKHIpfX0se2tleTpcIl9hbGxvY2F0ZUxpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsbC5kZWZhdWx0KSh0LnByb3RvdHlwZS5fX3Byb3RvX198fCgwLHMuZGVmYXVsdCkodC5wcm90b3R5cGUpLFwiX2FsbG9jYXRlTGlzdGVuZXJzXCIsdGhpcykuY2FsbCh0aGlzKTt2YXIgZT10aGlzO2UuX2NoYW5nZUxpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwrXCIvY2hhbmdlc1wiLGZ1bmN0aW9uKHQpe1widXBkYXRlXCI9PT10LnR5cGUmJih2LmxvZyhcIkRhdGFPYmplY3RPYnNlcnZlci1cIitlLl91cmwrXCItUkNWOiBcIix0KSxlLl9jaGFuZ2VPYmplY3QoZS5fc3luY09iaix0KSl9KX19LHtrZXk6XCJfcmVsZWFzZUxpc3RlbmVyc1wiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsbC5kZWZhdWx0KSh0LnByb3RvdHlwZS5fX3Byb3RvX198fCgwLHMuZGVmYXVsdCkodC5wcm90b3R5cGUpLFwiX3JlbGVhc2VMaXN0ZW5lcnNcIix0aGlzKS5jYWxsKHRoaXMpO3RoaXMuX2NoYW5nZUxpc3RlbmVyLnJlbW92ZSgpfX0se2tleTpcImRlbGV0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9kZWxldGVDaGlsZHJlbnMoKS50aGVuKGZ1bmN0aW9uKCl7ZS51bnN1YnNjcmliZSgpLGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fb2JzZXJ2ZXJzW2UuX3VybF19KX19LHtrZXk6XCJ1bnN1YnNjcmliZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOlwidW5zdWJzY3JpYmVcIixmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTplLl91cmx9fTtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXt2LmxvZyhcIkRhdGFPYmplY3RPYnNlcnZlci1VTlNVQlNDUklCRTogXCIsdCksMjAwPT09dC5ib2R5LmNvZGUmJihlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX29ic2VydmVyc1tlLl91cmxdKX0pfX0se2tleTpcIm9uQ2hhbmdlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLG49e3R5cGU6bSxjYWxsYmFjazp0fSxvPWUuaW5kZXhPZihcIipcIik7bz09PWUubGVuZ3RoLTEmJigwPT09bz9uLnR5cGU9Xzoobi50eXBlPWIscj1lLnN1YnN0cigwLGUubGVuZ3RoLTEpKSksdGhpcy5fZmlsdGVyc1tyXT1ufX0se2tleTpcIl9vbkZpbHRlclwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7KDAsbi5kZWZhdWx0KSh0Ll9maWx0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBuPXQuX2ZpbHRlcnNbcl07bi50eXBlPT09Xz9uLmNhbGxiYWNrKGUpOm4udHlwZT09PWI/MD09PWUuZmllbGQuaW5kZXhPZihyKSYmbi5jYWxsYmFjayhlKTpuLnR5cGU9PT1tJiZlLmZpZWxkPT09ciYmbi5jYWxsYmFjayhlKX0pfX0se2tleTpcIm9uRGlzY29ubmVjdGVkXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihyLG4pe3QuX3N1YnNjcmliZVJlZ2lzdHJhdGlvbigpLnRoZW4oZnVuY3Rpb24oKXt0Ll9vbkRpc2Nvbm5lY3RlZD1lLHIoKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiBuKGUpfSl9KX19LHtrZXk6XCJfc3Vic2NyaWJlUmVnaXN0cmF0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e3R5cGU6XCJzdWJzY3JpYmVcIixmcm9tOnRoaXMuX293bmVyLHRvOnRoaXMuX3N5bmNoZXIuX3J1bnRpbWVVcmwrXCIvc3Vic2NyaXB0aW9uc1wiLGJvZHk6e3Jlc291cmNlczpbdGhpcy5fdXJsK1wiL3JlZ2lzdHJhdGlvblwiXX19O3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24odCl7di5sb2coXCJbRGF0YU9iamVjdE9ic2VydmVyLl9zdWJzY3JpYmVSZWdpc3RyYXRpb25dIFwiK2UuX3VybCtcIiByY3ZlZCByZXBseSBcIix0KSwyMDA9PT10LmJvZHkuY29kZT8oZS5fZ2VuZXJhdGVMaXN0ZW5lcihlLl91cmwrXCIvcmVnaXN0cmF0aW9uXCIpLHIoKSk6KHYuZXJyb3IoXCJFcnJvciBzdWJzY3JpYmluZyByZWdpc3RyYXRpb24gc3RhdHVzIGZvciBcIixlLl91cmwpLG4oXCJFcnJvciBzdWJzY3JpYmluZyByZWdpc3RyYXRpb24gc3RhdHVzIGZvciBcIitlLl91cmwpKX0pfSl9fSx7a2V5OlwiX2dlbmVyYXRlTGlzdGVuZXJcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2J1cy5hZGRMaXN0ZW5lcihlLGZ1bmN0aW9uKGUpe3YubG9nKFwiW0RhdGFPYmplY3RPYnNlcnZlci5yZWdpc3RyYXRpb25Ob3RpZmljYXRpb25dIFwiK3QuX3VybCtcIjogXCIsZSksZS5ib2R5LnZhbHVlJiZcImRpc2Nvbm5lY3RlZFwiPT09ZS5ib2R5LnZhbHVlJiZ0Ll9vbkRpc2Nvbm5lY3RlZCYmKHYubG9nKFwiW0RhdGFPYmplY3RPYnNlcnZlcl0gXCIrdC5fdXJsK1wiOiB3YXMgZGlzY29ubmVjdGVkIFwiLGUpLHQuX29uRGlzY29ubmVjdGVkKCkpfSl9fSx7a2V5OlwiZXhlY3V0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPXRoaXM7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24obyxpKXt2YXIgcz17dHlwZTpcImV4ZWN1dGVcIixmcm9tOnIuX293bmVyLHRvOm4uX3VybCxib2R5OnttZXRob2Q6ZSxwYXJhbXM6dH19O24uX2J1cy5wb3N0TWVzc2FnZShzLGZ1bmN0aW9uKHQpe3YubG9nKFwiW0RhdGFPYmplY3RPYnNlcnZlci5leGVjdXRlXSBcIituLl91cmwrXCIgcmN2ZWQgcmVwbHkgXCIsdCksMjAwPT09dC5ib2R5LmNvZGU/bygpOih2Lndhcm4oXCJbRGF0YU9iamVjdE9ic2VydmVyLmV4ZWN1dGVdIGV4ZWN1dGlvbiBvZiBtZXRob2QgXCIrZStcIiB3YXMgcmVqZWN0IGJ5IHJlcG9ydGVyXCIpLGkoXCJbRGF0YU9iamVjdE9ic2VydmVyLmV4ZWN1dGVdIGV4ZWN1dGlvbiBvZiBtZXRob2QgXCIrZStcIiB3YXMgcmVqZWN0IGJ5IHJlcG9ydGVyXCIpKX0pfSl9fV0pLHR9KGguZGVmYXVsdCk7dC5kZWZhdWx0PWcsZS5leHBvcnRzPXQuZGVmYXVsdH0sLGZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgbj1pKHIoMykpLG89aShyKDUpKTtmdW5jdGlvbiBpKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgcz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKS5nZXRMb2dnZXIoXCJEYXRhUHJvdmlzaW9uYWxcIiksYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG8saSl7KDAsbi5kZWZhdWx0KSh0aGlzLGUpO3RoaXMuX293bmVyPXQsdGhpcy5fdXJsPXIsdGhpcy5fYnVzPW8sdGhpcy5fY2hpbGRyZW49aSx0aGlzLl9jaGFuZ2VzPVtdLHRoaXMuX2FsbG9jYXRlTGlzdGVuZXJzKCl9cmV0dXJuKDAsby5kZWZhdWx0KShlLFt7a2V5OlwiX2FsbG9jYXRlTGlzdGVuZXJzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2xpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwsZnVuY3Rpb24odCl7cy5sb2coXCJEYXRhUHJvdmlzaW9uYWwtXCIrZS5fdXJsK1wiLVJDVjogXCIsdCksZS5fY2hhbmdlcy5wdXNoKHQpfSl9fSx7a2V5OlwiX3JlbGVhc2VMaXN0ZW5lcnNcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2xpc3RlbmVyLnJlbW92ZSgpfX0se2tleTpcImFwcGx5XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fY2hhbmdlcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuX2NoYW5nZU9iamVjdChlLl9zeW5jT2JqLHQpfSl9fSx7a2V5OlwiY2hpbGRyZW5cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW59fV0pLGV9KCk7dC5kZWZhdWx0PWEsZS5leHBvcnRzPXQuZGVmYXVsdH0sLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLHQuTm90aWZpY2F0aW9uSGFuZGxlcj10LkRhdGFPYmplY3RPYnNlcnZlcj10LkRhdGFPYmplY3RSZXBvcnRlcj10LlN5bmNoZXI9dm9pZCAwO3ZhciBuPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLG89dShyKDEzMSkpLGk9dShyKDEzMikpLHM9dShyKDEzMykpLGE9dShyKDE5NykpO2Z1bmN0aW9uIHUoZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXZhciBjPW4uZ2V0TG9nZ2VyKFwiU3luY2hlclwiKSxsPW4uZ2V0TG9nZ2VyKFwiRGF0YU9iamVjdFwiKSxkPW4uZ2V0TG9nZ2VyKFwiRGF0YU9iamVjdENoaWxkXCIpLGY9bi5nZXRMb2dnZXIoXCJEYXRhT2JqZWN0T2JzZXJ2ZXJcIikscD1uLmdldExvZ2dlcihcIkRhdGFPYmplY3RSZXBvcnRlclwiKSxoPW4uZ2V0TG9nZ2VyKFwiRGF0YVByb3Zpc2lvbmFsXCIpO2Muc2V0TGV2ZWwoMCksbC5zZXRMZXZlbCgwKSxkLnNldExldmVsKDApLGYuc2V0TGV2ZWwoMCkscC5zZXRMZXZlbCgwKSxoLnNldExldmVsKDApLHQuU3luY2hlcj1vLmRlZmF1bHQsdC5EYXRhT2JqZWN0UmVwb3J0ZXI9aS5kZWZhdWx0LHQuRGF0YU9iamVjdE9ic2VydmVyPXMuZGVmYXVsdCx0Lk5vdGlmaWNhdGlvbkhhbmRsZXI9YS5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIG49cyhyKDMpKSxvPXMocig1KSksaT1yKDE5KTtmdW5jdGlvbiBzKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7aWYoKDAsbi5kZWZhdWx0KSh0aGlzLGUpLCF0KXRocm93IEVycm9yKFwiW05vdGlmaWNhdGlvbkhhbmRsZXIgQ29uc3RydWN0b3JdIGJ1cyBpbnB1dCBpcyBtYW5kYXRvcnlcIik7dGhpcy5fYnVzPXQsdGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyPXt9fXJldHVybigwLG8uZGVmYXVsdCkoZSxbe2tleTpcIm9uTm90aWZpY2F0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt0aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXJbZV09dH19LHtrZXk6XCJvbkNyZWF0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkuaGFzT3duUHJvcGVydHkoXCJyZXNvdXJjZVwiKT9lLmJvZHkucmVzb3VyY2U6ZS5mcm9tLnNsaWNlKDAsLTEzKSxuPSgwLGkuZGl2aWRlVVJMKShyKS5kb21haW4sbz1yLnNwbGl0KFwiOi8vXCIpWzBdLHM9ZnVuY3Rpb24ocil7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDAsZGVzYzpcIkJhZCBSZXF1ZXN0OiBcIityfX0pfTtlLmJvZHkuaGFzT3duUHJvcGVydHkoXCJzb3VyY2VcIil8fHMoXCJNaXNzaW5nIHNvdXJjZVwiKSxlLmJvZHkuaGFzT3duUHJvcGVydHkoXCJzY2hlbWFcIil8fHMoXCJNaXNzaW5nIHNjaGVtYVwiKSxlLmJvZHkuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8cyhcIk1pc3NpbmcgdmFsdWVcIiksZS5ib2R5Lmhhc093blByb3BlcnR5KFwiaWRlbnRpdHlcIil8fHMoXCJNaXNzaW5nIGlkZW50aXR5XCIpO3ZhciBhPXt0eXBlOmUudHlwZSxmcm9tOmUuYm9keS5zb3VyY2UsdXJsOnIsZG9tYWluOm4sc2NoZW1hOmUuYm9keS5zY2hlbWEsdmFsdWU6ZS5ib2R5LnZhbHVlLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSx0bzplLnRvLHZpYTplLmJvZHkudmlhLGFjazpmdW5jdGlvbihyKXt2YXIgbj0yMDA7ciYmKG49ciksdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpufX0pfSxlcnJvcjpmdW5jdGlvbihlKXtzKGUpfX07dC5fb25Ob3RpZmljYXRpb25IYW5kbGVyW29dJiYoY29uc29sZS5pbmZvKFwiW05vdGlmaWNhdGlvbkhhbmRsZXJdIE5PVElGSUNBVElPTi1FVkVOVDogXCIsYSksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyW29dKGEpKX19LHtrZXk6XCJvbkRlbGV0ZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkucmVzb3VyY2Usbj10Ll9vYnNlcnZlcnNbcl0sbz17ZnJvbTp0Lm93bmVyLHRvOnQuX3N1YlVSTCxpZDplLmlkLHR5cGU6XCJ1bnN1YnNjcmliZVwiLGJvZHk6e3Jlc291cmNlOmUuYm9keS5yZXNvdXJjZX19O2lmKHQuX2J1cy5wb3N0TWVzc2FnZShvKSxkZWxldGUgdC5fb2JzZXJ2ZXJzW3JdLG4pe3ZhciBpPXt0eXBlOmUudHlwZSx1cmw6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBvPTIwMDtyJiYobz1yKSwyMDA9PT1vJiZuLmRlbGV0ZSgpLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOlwicmVzcG9uc2VcIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6byxzb3VyY2U6dC5fb3duZXJ9fSl9fTt0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXImJihsb2cubG9nKFwiTk9USUZJQ0FUSU9OLUVWRU5UOiBcIixpKSx0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXIoaSkpfWVsc2UgdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6XCJyZXNwb25zZVwiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDQsc291cmNlOnQuX293bmVyfX0pfX1dKSxlfSgpO3QuZGVmYXVsdD1hLGUuZXhwb3J0cz10LmRlZmF1bHR9XSl9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3ZlcnR4X2FwcF9zdHViL25vZGVfbW9kdWxlcy9zZXJ2aWNlLWZyYW1ld29yay9kaXN0L1N5bmNoZXIuanNcbi8vIG1vZHVsZSBpZCA9IDY4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///68\n");

/***/ })
/******/ ])["default"];
});",
      "sourceCodeClassname": "sharing-cities-dsm",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.60",
    "description": "Protostub to exchange messages with vertx",
    "language": "javascript",
    "cguid": "46c0d57ffd1f5fe7888e6ba971acb4e79",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "sharing-cities-dsm",
    "configuration": {
      "url": "https://vertx-runtime.hysmart.rethink.ptinovacao.pt/eventbus",
      "vertxbus_ping_interval": 10000,
      "host": "sharing-cities-dsm",
      "domain": "hysmart.rethink.ptinovacao.pt",
      "streams": [
        {
          "stream": "data://sharing-cities-dsm/bonus",
          "resources": [
            "resources"
          ],
          "id": "bonus-data",
          "name": "bonus-data DSM"
        },
        {
          "stream": "data://sharing-cities-dsm/shops",
          "resources": [
            "resources"
          ],
          "id": "shops-data",
          "name": "shops-data DSM"
        },
        {
          "stream": "data://sharing-cities-dsm/elearning",
          "resources": [
            "resources"
          ],
          "id": "elearning-data",
          "name": "elearning-data DSM"
        }
      ],
      "publicWallets": {
        "identity": {
          "userProfile": {
            "guid": "user-guid://public-wallets",
            "userURL": "user://public-wallets"
          }
        }
      }
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  }
}