{
  "GoogleProtoStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "fitness.google.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "8.70",
    "description": "Protostub of Google",
    "language": "javascript",
    "cguid": "406d1b76ae0394c37d6e7d0037a91cb7c",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "fitness.google.com",
    "configuration": {
      "sessions_query_interval": 300000,
      "domain": "localhost"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "IMSIWProtoStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "sip.rethink-project.eu",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "7.10",
    "description": "Description of IMSIWProtoStub",
    "language": "javascript",
    "cguid": "42deef6d806460071a3a260ea4b6291ae",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "sip.rethink-project.eu",
    "configuration": {
      "credential_server": "https://ims.rethink-project.eu/credential",
      "domain": "hysmart.rethink.ptinovacao.pt"
    },
    "messageSchemas": "",
    "dataObjects": [
      "hyperty-catalogue://catalogue.hysmart.rethink.ptinovacao.pt/.well-known/dataschema/Connection"
    ],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "P2PHandlerProtoStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "P2PHandlerProtoStub",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "7.10",
    "description": "P2P Handler Protostub ",
    "language": "javascript",
    "cguid": "4456240d0c888e2293cdc568a7224b7c0",
    "type": "ProtoStubs",
    "constraints": {
      "windowSandbox": true
    },
    "objectName": "P2PHandlerProtoStub",
    "configuration": {
      "iceServers": [
        {
          "urls": "turn:numb.viagenie.ca",
          "credential": "zJcH3erd9cUv5Zh",
          "username": "luis-t-duarte@telecom.pt"
        },
        {
          "urls": [
            "stun:stun.voiparound.com",
            "stun:stun.voipbuster.com",
            "stun:stun.voipstunt.com",
            "stun:stun.voxgratia.org",
            "stun:stun.ekiga.net",
            "stun:stun.schlund.de",
            "stun:stun.iptel.org",
            "stun:stun.l.google.com:19302",
            "stun:stun1.l.google.com:19302",
            "stun:stun.ideasip.com",
            "stun:stun4.l.google.com:19302",
            "stun:stun2.l.google.com:19302",
            "stun:stun3.l.google.com:19302"
          ]
        }
      ],
      "iceTransportPolicy": "all"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "P2PRequesterProtoStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "P2PRequesterProtoStub",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "7.10",
    "description": "P2P Requester Protostub ",
    "language": "javascript",
    "cguid": "4bcb9977c1c46c13278273a67b5fe7aab",
    "type": "ProtoStubs",
    "constraints": {
      "windowSandbox": true
    },
    "objectName": "P2PRequesterProtoStub",
    "configuration": {
      "iceServers": [
        {
          "urls": "turn:numb.viagenie.ca",
          "credential": "zJcH3erd9cUv5Zh",
          "username": "luis-t-duarte@telecom.pt"
        },
        {
          "urls": [
            "stun:stun.voiparound.com",
            "stun:stun.voipbuster.com",
            "stun:stun.voipstunt.com",
            "stun:stun.voxgratia.org",
            "stun:stun.ekiga.net",
            "stun:stun.schlund.de",
            "stun:stun.iptel.org",
            "stun:stun.l.google.com:19302",
            "stun:stun1.l.google.com:19302",
            "stun:stun.ideasip.com",
            "stun:stun4.l.google.com:19302",
            "stun:stun2.l.google.com:19302",
            "stun:stun3.l.google.com:19302"
          ]
        }
      ],
      "iceTransportPolicy": "all"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "SlackProtoStub": {
    "sourcePackage": {
      "sourceCode": "IWZ1bmN0aW9uKGUsdCl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYib2JqZWN0Ij09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoImFjdGl2YXRlIixbXSx0KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hY3RpdmF0ZT10KCk6ZS5hY3RpdmF0ZT10KCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gcihuKXtpZih0W25dKXJldHVybiB0W25dLmV4cG9ydHM7dmFyIG89dFtuXT17aTpuLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbbl0uY2FsbChvLmV4cG9ydHMsbyxvLmV4cG9ydHMsciksby5sPSEwLG8uZXhwb3J0c31yZXR1cm4gci5tPWUsci5jPXQsci5kPWZ1bmN0aW9uKGUsdCxuKXtyLm8oZSx0KXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om59KX0sci5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiByLmQodCwiYSIsdCksdH0sci5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSxyLnA9IiIscihyLnM9Myl9KFtmdW5jdGlvbihlLHQscil7dmFyIG49cigxKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LmtleXMobikuZm9yRWFjaChyPT57dmFyIG49ci5zcGxpdCgiLiIpLG89bi5zaGlmdCgpO3ZvaWQgMD09PWVbb10mJihlW29dPXt9KSxmdW5jdGlvbiBlKG8pe3ZhciBpPW4uc2hpZnQoKTswPT09bi5sZW5ndGg/b1tpXT10LmJpbmQoe30scik6KHZvaWQgMD09PW9baV0mJihvW2ldPXt9KSxlKG9baV0pKX0oZVtvXSl9KSxlfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9eyJhcGkudGVzdCI6W10sImFwcHMucGVybWlzc2lvbnMuaW5mbyI6WyJ0b2tlbiJdLCJhcHBzLnBlcm1pc3Npb25zLnJlcXVlc3QiOlsidG9rZW4iLCJzY29wZXMiLCJ0cmlnZ2VyX2lkIl0sImF1dGgucmV2b2tlIjpbInRva2VuIl0sImF1dGgudGVzdCI6WyJ0b2tlbiJdLCJib3RzLmluZm8iOlsidG9rZW4iXSwiY2hhbm5lbHMuYXJjaGl2ZSI6WyJ0b2tlbiIsImNoYW5uZWwiXSwiY2hhbm5lbHMuY3JlYXRlIjpbInRva2VuIiwibmFtZSJdLCJjaGFubmVscy5oaXN0b3J5IjpbInRva2VuIiwiY2hhbm5lbCJdLCJjaGFubmVscy5pbmZvIjpbInRva2VuIiwiY2hhbm5lbCJdLCJjaGFubmVscy5pbnZpdGUiOlsidG9rZW4iLCJjaGFubmVsIiwidXNlciJdLCJjaGFubmVscy5qb2luIjpbInRva2VuIiwibmFtZSJdLCJjaGFubmVscy5raWNrIjpbInRva2VuIiwiY2hhbm5lbCIsInVzZXIiXSwiY2hhbm5lbHMubGVhdmUiOlsidG9rZW4iLCJjaGFubmVsIl0sImNoYW5uZWxzLmxpc3QiOlsidG9rZW4iXSwiY2hhbm5lbHMubWFyayI6WyJ0b2tlbiIsImNoYW5uZWwiLCJ0cyJdLCJjaGFubmVscy5yZW5hbWUiOlsidG9rZW4iLCJjaGFubmVsIiwibmFtZSJdLCJjaGFubmVscy5yZXBsaWVzIjpbInRva2VuIiwiY2hhbm5lbCIsInRocmVhZF90cyJdLCJjaGFubmVscy5zZXRQdXJwb3NlIjpbInRva2VuIiwiY2hhbm5lbCIsInB1cnBvc2UiXSwiY2hhbm5lbHMuc2V0VG9waWMiOlsidG9rZW4iLCJjaGFubmVsIiwidG9waWMiXSwiY2hhbm5lbHMudW5hcmNoaXZlIjpbInRva2VuIiwiY2hhbm5lbCJdLCJjaGF0LmRlbGV0ZSI6WyJ0b2tlbiIsImNoYW5uZWwiLCJ0cyJdLCJjaGF0Lm1lTWVzc2FnZSI6WyJ0b2tlbiIsImNoYW5uZWwiLCJ0ZXh0Il0sImNoYXQucG9zdEVwaGVtZXJhbCI6WyJ0b2tlbiIsImNoYW5uZWwiLCJ0ZXh0IiwidXNlciJdLCJjaGF0LnBvc3RNZXNzYWdlIjpbInRva2VuIiwiY2hhbm5lbCIsInRleHQiXSwiY2hhdC51bmZ1cmwiOlsidG9rZW4iLCJjaGFubmVsIiwidHMiLCJ1bmZ1cmxzIl0sImNoYXQudXBkYXRlIjpbInRva2VuIiwiY2hhbm5lbCIsInRleHQiLCJ0cyJdLCJjb252ZXJzYXRpb25zLmFyY2hpdmUiOlsidG9rZW4iLCJjaGFubmVsIl0sImNvbnZlcnNhdGlvbnMuY2xvc2UiOlsidG9rZW4iLCJjaGFubmVsIl0sImNvbnZlcnNhdGlvbnMuY3JlYXRlIjpbInRva2VuIiwibmFtZSJdLCJjb252ZXJzYXRpb25zLmhpc3RvcnkiOlsidG9rZW4iLCJjaGFubmVsIl0sImNvbnZlcnNhdGlvbnMuaW5mbyI6WyJ0b2tlbiIsImNoYW5uZWwiXSwiY29udmVyc2F0aW9ucy5pbnZpdGUiOlsidG9rZW4iLCJjaGFubmVsIiwidXNlcnMiXSwiY29udmVyc2F0aW9ucy5qb2luIjpbInRva2VuIiwiY2hhbm5lbCJdLCJjb252ZXJzYXRpb25zLmtpY2siOlsidG9rZW4iLCJjaGFubmVsIiwidXNlciJdLCJjb252ZXJzYXRpb25zLmxlYXZlIjpbInRva2VuIiwiY2hhbm5lbCJdLCJjb252ZXJzYXRpb25zLmxpc3QiOlsidG9rZW4iXSwiY29udmVyc2F0aW9ucy5tZW1iZXJzIjpbInRva2VuIiwiY2hhbm5lbCJdLCJjb252ZXJzYXRpb25zLm9wZW4iOlsidG9rZW4iXSwiY29udmVyc2F0aW9ucy5yZW5hbWUiOlsidG9rZW4iLCJjaGFubmVsIiwibmFtZSJdLCJjb252ZXJzYXRpb25zLnJlcGxpZXMiOlsidG9rZW4iLCJjaGFubmVsIiwidHMiXSwiY29udmVyc2F0aW9ucy5zZXRQdXJwb3NlIjpbInRva2VuIiwiY2hhbm5lbCIsInB1cnBvc2UiXSwiY29udmVyc2F0aW9ucy5zZXRUb3BpYyI6WyJ0b2tlbiIsImNoYW5uZWwiLCJ0b3BpYyJdLCJjb252ZXJzYXRpb25zLnVuYXJjaGl2ZSI6WyJ0b2tlbiIsImNoYW5uZWwiXSwiZG5kLmVuZERuZCI6WyJ0b2tlbiJdLCJkbmQuZW5kU25vb3plIjpbInRva2VuIl0sImRuZC5pbmZvIjpbInRva2VuIl0sImRuZC5zZXRTbm9vemUiOlsidG9rZW4iLCJudW1fbWludXRlcyJdLCJkbmQudGVhbUluZm8iOlsidG9rZW4iXSwiZW1vamkubGlzdCI6WyJ0b2tlbiJdLCJmaWxlcy5jb21tZW50cy5hZGQiOlsidG9rZW4iLCJjb21tZW50IiwiZmlsZSJdLCJmaWxlcy5jb21tZW50cy5kZWxldGUiOlsidG9rZW4iLCJmaWxlIiwiaWQiXSwiZmlsZXMuY29tbWVudHMuZWRpdCI6WyJ0b2tlbiIsImNvbW1lbnQiLCJmaWxlIiwiaWQiXSwiZmlsZXMuZGVsZXRlIjpbInRva2VuIiwiZmlsZSJdLCJmaWxlcy5pbmZvIjpbInRva2VuIiwiZmlsZSJdLCJmaWxlcy5saXN0IjpbInRva2VuIl0sImZpbGVzLnJldm9rZVB1YmxpY1VSTCI6WyJ0b2tlbiIsImZpbGUiXSwiZmlsZXMuc2hhcmVkUHVibGljVVJMIjpbInRva2VuIiwiZmlsZSJdLCJmaWxlcy51cGxvYWQiOlsidG9rZW4iXSwiZ3JvdXBzLmFyY2hpdmUiOlsidG9rZW4iLCJjaGFubmVsIl0sImdyb3Vwcy5jcmVhdGUiOlsidG9rZW4iLCJuYW1lIl0sImdyb3Vwcy5jcmVhdGVDaGlsZCI6WyJ0b2tlbiIsImNoYW5uZWwiXSwiZ3JvdXBzLmhpc3RvcnkiOlsidG9rZW4iLCJjaGFubmVsIl0sImdyb3Vwcy5pbmZvIjpbInRva2VuIiwiY2hhbm5lbCJdLCJncm91cHMuaW52aXRlIjpbInRva2VuIiwiY2hhbm5lbCIsInVzZXIiXSwiZ3JvdXBzLmtpY2siOlsidG9rZW4iLCJjaGFubmVsIiwidXNlciJdLCJncm91cHMubGVhdmUiOlsidG9rZW4iLCJjaGFubmVsIl0sImdyb3Vwcy5saXN0IjpbInRva2VuIl0sImdyb3Vwcy5tYXJrIjpbInRva2VuIiwiY2hhbm5lbCIsInRzIl0sImdyb3Vwcy5vcGVuIjpbInRva2VuIiwiY2hhbm5lbCJdLCJncm91cHMucmVuYW1lIjpbInRva2VuIiwiY2hhbm5lbCIsIm5hbWUiXSwiZ3JvdXBzLnJlcGxpZXMiOlsidG9rZW4iLCJjaGFubmVsIiwidGhyZWFkX3RzIl0sImdyb3Vwcy5zZXRQdXJwb3NlIjpbInRva2VuIiwiY2hhbm5lbCIsInB1cnBvc2UiXSwiZ3JvdXBzLnNldFRvcGljIjpbInRva2VuIiwiY2hhbm5lbCIsInRvcGljIl0sImdyb3Vwcy51bmFyY2hpdmUiOlsidG9rZW4iLCJjaGFubmVsIl0sImltLmNsb3NlIjpbInRva2VuIiwiY2hhbm5lbCJdLCJpbS5oaXN0b3J5IjpbInRva2VuIiwiY2hhbm5lbCJdLCJpbS5saXN0IjpbInRva2VuIl0sImltLm1hcmsiOlsidG9rZW4iLCJjaGFubmVsIiwidHMiXSwiaW0ub3BlbiI6WyJ0b2tlbiIsInVzZXIiXSwiaW0ucmVwbGllcyI6WyJ0b2tlbiIsImNoYW5uZWwiLCJ0aHJlYWRfdHMiXSwibXBpbS5jbG9zZSI6WyJ0b2tlbiIsImNoYW5uZWwiXSwibXBpbS5oaXN0b3J5IjpbInRva2VuIiwiY2hhbm5lbCJdLCJtcGltLmxpc3QiOlsidG9rZW4iXSwibXBpbS5tYXJrIjpbInRva2VuIiwiY2hhbm5lbCIsInRzIl0sIm1waW0ub3BlbiI6WyJ0b2tlbiIsInVzZXJzIl0sIm1waW0ucmVwbGllcyI6WyJ0b2tlbiIsImNoYW5uZWwiLCJ0aHJlYWRfdHMiXSwib2F1dGguYWNjZXNzIjpbImNsaWVudF9pZCIsImNsaWVudF9zZWNyZXQiLCJjb2RlIl0sIm9hdXRoLnRva2VuIjpbImNsaWVudF9pZCIsImNsaWVudF9zZWNyZXQiLCJjb2RlIl0sInBpbnMuYWRkIjpbInRva2VuIiwiY2hhbm5lbCJdLCJwaW5zLmxpc3QiOlsidG9rZW4iLCJjaGFubmVsIl0sInBpbnMucmVtb3ZlIjpbInRva2VuIiwiY2hhbm5lbCJdLCJyZWFjdGlvbnMuYWRkIjpbInRva2VuIiwibmFtZSJdLCJyZWFjdGlvbnMuZ2V0IjpbInRva2VuIl0sInJlYWN0aW9ucy5saXN0IjpbInRva2VuIl0sInJlYWN0aW9ucy5yZW1vdmUiOlsidG9rZW4iLCJuYW1lIl0sInJlbWluZGVycy5hZGQiOlsidG9rZW4iLCJ0ZXh0IiwidGltZSJdLCJyZW1pbmRlcnMuY29tcGxldGUiOlsidG9rZW4iLCJyZW1pbmRlciJdLCJyZW1pbmRlcnMuZGVsZXRlIjpbInRva2VuIiwicmVtaW5kZXIiXSwicmVtaW5kZXJzLmluZm8iOlsidG9rZW4iLCJyZW1pbmRlciJdLCJyZW1pbmRlcnMubGlzdCI6WyJ0b2tlbiJdLCJydG0uY29ubmVjdCI6WyJ0b2tlbiJdLCJydG0uc3RhcnQiOlsidG9rZW4iXSwic2VhcmNoLmFsbCI6WyJ0b2tlbiIsInF1ZXJ5Il0sInNlYXJjaC5maWxlcyI6WyJ0b2tlbiIsInF1ZXJ5Il0sInNlYXJjaC5tZXNzYWdlcyI6WyJ0b2tlbiIsInF1ZXJ5Il0sInN0YXJzLmFkZCI6WyJ0b2tlbiJdLCJzdGFycy5saXN0IjpbInRva2VuIl0sInN0YXJzLnJlbW92ZSI6WyJ0b2tlbiJdLCJ0ZWFtLmFjY2Vzc0xvZ3MiOlsidG9rZW4iXSwidGVhbS5iaWxsYWJsZUluZm8iOlsidG9rZW4iXSwidGVhbS5pbmZvIjpbInRva2VuIl0sInRlYW0uaW50ZWdyYXRpb25Mb2dzIjpbInRva2VuIl0sInRlYW0ucHJvZmlsZS5nZXQiOlsidG9rZW4iXSwidXNlcmdyb3Vwcy5jcmVhdGUiOlsidG9rZW4iLCJuYW1lIl0sInVzZXJncm91cHMuZGlzYWJsZSI6WyJ0b2tlbiIsInVzZXJncm91cCJdLCJ1c2VyZ3JvdXBzLmVuYWJsZSI6WyJ0b2tlbiIsInVzZXJncm91cCJdLCJ1c2VyZ3JvdXBzLmxpc3QiOlsidG9rZW4iXSwidXNlcmdyb3Vwcy51cGRhdGUiOlsidG9rZW4iLCJ1c2VyZ3JvdXAiXSwidXNlcmdyb3Vwcy51c2Vycy5saXN0IjpbInRva2VuIiwidXNlcmdyb3VwIl0sInVzZXJncm91cHMudXNlcnMudXBkYXRlIjpbInRva2VuIiwidXNlcmdyb3VwIiwidXNlcnMiXSwidXNlcnMuZGVsZXRlUGhvdG8iOlsidG9rZW4iXSwidXNlcnMuZ2V0UHJlc2VuY2UiOlsidG9rZW4iLCJ1c2VyIl0sInVzZXJzLmlkZW50aXR5IjpbInRva2VuIl0sInVzZXJzLmluZm8iOlsidG9rZW4iLCJ1c2VyIl0sInVzZXJzLmxpc3QiOlsidG9rZW4iXSwidXNlcnMuc2V0QWN0aXZlIjpbInRva2VuIl0sInVzZXJzLnNldFBob3RvIjpbInRva2VuIiwiaW1hZ2UiXSwidXNlcnMuc2V0UHJlc2VuY2UiOlsidG9rZW4iLCJwcmVzZW5jZSJdLCJ1c2Vycy5wcm9maWxlLmdldCI6WyJ0b2tlbiJdLCJ1c2Vycy5wcm9maWxlLnNldCI6WyJ0b2tlbiJdfX0sZnVuY3Rpb24oZSx0LHIpe2xldCBuPXIoNSksbz1lbmNvZGVVUklDb21wb25lbnQsaT1lPT5PYmplY3Qua2V5cyhlKS5tYXAodD0+byh0KSsiPSIrbyhlW3RdKSkuam9pbigiJiIpO2FzeW5jIGZ1bmN0aW9uIHMoZSx0LHIpe3RyeXt2YXIgbz1uKGUsdCk7aWYobyl0aHJvdyBvO09iamVjdC5rZXlzKHQpLmZvckVhY2goZnVuY3Rpb24oZSl7Im9iamVjdCI9PXR5cGVvZiB0W2VdJiYodFtlXT1KU09OLnN0cmluZ2lmeSh0W2VdKSl9KTt2YXIgcz17bWV0aG9kOiJQT1NUIixoZWFkZXJzOm5ldyBIZWFkZXJzKHsiQ29udGVudC1UeXBlIjoiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIn0pLGJvZHk6aSh0KX0sYT1hd2FpdCBmZXRjaChgaHR0cHM6Ly9zbGFjay5jb20vYXBpLyR7ZX1gLHMpLHU9YXdhaXQgYS5qc29uKCk7dS5lcnJvcj9yKEVycm9yKHUuZXJyb3IpKTpyKG51bGwsdSl9Y2F0Y2goZSl7cihlKX19ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtpZighcilyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocixuKXtzKGUsdCxmdW5jdGlvbihlLHQpe2U/bihlKTpyKHQpfSl9KTtzKGUsdCxyKX19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbj10W3JdO24uZW51bWVyYWJsZT1uLmVudW1lcmFibGV8fCExLG4uY29uZmlndXJhYmxlPSEwLCJ2YWx1ZSJpbiBuJiYobi53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbi5rZXksbil9fXJldHVybiBmdW5jdGlvbih0LHIsbil7cmV0dXJuIHImJmUodC5wcm90b3R5cGUsciksbiYmZSh0LG4pLHR9fSgpO3QuZGVmYXVsdD1mdW5jdGlvbihlLHQscil7cmV0dXJue25hbWU6IlNsYWNrUHJvdG9TdHViIixpbnN0YW5jZTpuZXcgbChlLHQscil9fTt2YXIgbz1jKHIoNCkpLGk9cig3KSxzPShjKHIoOCkpLHIoOSkpLGE9YyhyKDEwKSksdT1yKDExKTtmdW5jdGlvbiBjKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX12YXIgbD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG4pe2lmKGZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9KHRoaXMsZSksIXQpdGhyb3cgbmV3IEVycm9yKCJUaGUgcnVudGltZVByb3RvU3R1YlVSTCBpcyBhIG5lZWRlZCBwYXJhbWV0ZXIiKTtpZighcil0aHJvdyBuZXcgRXJyb3IoIlRoZSBidXMgaXMgYSBuZWVkZWQgcGFyYW1ldGVyIik7aWYoIW4pdGhyb3cgbmV3IEVycm9yKCJUaGUgY29uZmlnIGlzIGEgbmVlZGVkIHBhcmFtZXRlciIpO2NvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIENvbnN0cnVjdG9yIExvYWRlZCIpO3ZhciBhPXRoaXM7dGhpcy5fd3M9bnVsbCx0aGlzLl90b1N1YnNjcmliZVByZXNlbmNlPVtdLHRoaXMuX2FkZGVkVXNlcnNJbmZvPVtdLHRoaXMuX2FscmVhZHlDcmVhdGVkPSExLHRoaXMuX3NsYWNrPW8uZGVmYXVsdCx0aGlzLl91c2Vyc1VwZGF0ZWQ9ITEsdGhpcy5fc3Vic2NyaWJlZExpc3Q9W10sdGhpcy5fbWVzc2FnZUhpc3RvcnlDb250cm9sPXt9LHRoaXMuX3VzZXJzTGlzdD1bXSx0aGlzLl9jaGFubmVsc0xpc3Q9W10sdGhpcy5faWQ9MCx0aGlzLl90b2tlbj0iIix0aGlzLl9kYXRhT2JqZWN0UmVwb3J0ZXJVUkwsdGhpcy5fY29udGV4dFJlcG9ydGVyc0luZm89e30sdGhpcy5fc3luY2hlcj1uZXcgaS5TeW5jaGVyKHQscixuKSx0aGlzLl9jaGF0TWFuYWdlcj1uZXcgcy5DaGF0TWFuYWdlcih0LHIsbix0aGlzLl9zeW5jaGVyKSx0aGlzLl9jb250ZXh0UmVwb3J0ZXI9bmV3IHUuQ29udGV4dFJlcG9ydGVyKHQscixuLHRoaXMuX3N5bmNoZXIpLHRoaXMuX215VXJsPXQsdGhpcy5fYnVzPXIsdGhpcy5fY29uZmlnPW4sdGhpcy5fcnVudGltZVNlc3Npb25VUkw9bi5ydW50aW1lVVJMLHRoaXMuX3JlT3Blbj0hMSx0aGlzLl9jaGF0TWFuYWdlci5vbkludml0YXRpb24oZnVuY3Rpb24oZSl7YS5fb25TbGFja0ludml0YXRpb24oZSl9KSx0aGlzLl9ub3RpZmljYXRpb25IYW5kbGVyPW5ldyBpLk5vdGlmaWNhdGlvbkhhbmRsZXIociksdGhpcy5fbm90aWZpY2F0aW9uSGFuZGxlci5vbk5vdGlmaWNhdGlvbigiY29tbSIsZnVuY3Rpb24oZSl7YS5fY2hhdE1hbmFnZXIucHJvY2Vzc05vdGlmaWNhdGlvbihlKX0pLHIuYWRkTGlzdGVuZXIoIioiLGZ1bmN0aW9uKGUpe2lmKGUuZnJvbSE9PXQpc3dpdGNoKGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIG5ldyBtc2cgIixlKSxlLnR5cGUpe2Nhc2UiY3JlYXRlIjphLl9ub3RpZmljYXRpb25IYW5kbGVyLm9uQ3JlYXRlKGUpO2JyZWFrO2Nhc2UiZGVsZXRlIjphLl9ub3RpZmljYXRpb25IYW5kbGVyLm9uRGVsZXRlKGUpfX0pLGEuX3NlbmRTdGF0dXMoImNyZWF0ZWQiKX1yZXR1cm4gbihlLFt7a2V5OiJfZmlsdGVyIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZS52aWEhPT10aGlzLl9teVVybH19LHtrZXk6Il9vcGVuIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7ci5fc2Vzc2lvbj9jb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBzZXNzaW9uIGFscmVhZHkgZXhpc3QiKTooY29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gY3JlYXRpbmcgU2Vzc2lvbiBmb3IgdG9rZW46IixlKSxyLl9zZW5kU3RhdHVzKCJpbi1wcm9ncmVzcyIpLHIuX3Nlc3Npb249dGhpcy5fc2xhY2sucnRtLmNvbm5lY3Qoe3Rva2VuOmUsYmF0Y2hfcHJlc2VuY2VfYXdhcmU6MSxwcmVzZW5jZV9zdWI6ITB9KSxjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBzZXNzaW9uIixyLl9zZXNzaW9uKSxyLl9zZXNzaW9uLmNyZWF0ZWRUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLzFlMyxyLl9zZXNzaW9uLnRoZW4oZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gU2Vzc2lvbiByZXN1bHQiLGUpLGUub2smJihyLl93cz1uZXcgV2ViU29ja2V0KGUudXJsKSxjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSB3ZWJzb2NrZXQiLHIuX3dzKSxjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSB3ZWJzb2NrZXQgdXJsICIsci5fd3MudXJsKSxyLl93cy5vbm1lc3NhZ2U9ZnVuY3Rpb24oZSl7dmFyIHQ9SlNPTi5wYXJzZShlLmRhdGEpO2NvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIG5ldyBtc2cgb24gd2ViU29ja2V0Iix0KSwibWVzc2FnZSI9PXQudHlwZT9yLl9oYW5kbGVOZXdNZXNzYWdlKHQpOiJwcmVzZW5jZV9jaGFuZ2UiPT10LnR5cGU/ci5faGFuZGxlUHJlc2VuY2VDaGFuZ2UodCk6Im1lbWJlcl9qb2luZWRfY2hhbm5lbCI9PXQudHlwZSYmci5faGFuZGxlTmV3VXNlcih0KX0sci5fd3Mub25lcnJvcj1mdW5jdGlvbihlKXtjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSB3ZWJzb2NrZXIgRXJyb3IiLGUpfSl9KSxyLl9zZW5kU3RhdHVzKCJsaXZlIikpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0KCl9KX19LHtrZXk6Il9yZXN1bWVSZXBvcnRlciIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocixuKXtjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSByZXN1bWluZyByZXBvcnRlciBvZiAiLGUpLHQuX3N5bmNoZXIucmVzdW1lUmVwb3J0ZXJzKHtzdG9yZTohMCxyZXBvcnRlcjplfSkudGhlbihmdW5jdGlvbih0KXt2YXIgbj1PYmplY3Qua2V5cyh0KTtjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSAiLHQsbik7cmV0dXJuIG4uZm9yRWFjaChmdW5jdGlvbihuKXtpZih0W25dLl9uYW1lPT09ZSYmbi5zdGFydHNXaXRoKCJjb250ZXh0Oi8vIikpcmV0dXJuIGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIHJlcG9ydGVyIHRvIHJldHVybiIsdFtuXSkscih0W25dKX0pLHIoITEpfSl9KX19LHtrZXk6Il9vblNsYWNrSW52aXRhdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztlLmlkZW50aXR5Lmhhc093blByb3BlcnR5KCJhY2Nlc3NUb2tlbiIpJiZlLmlkZW50aXR5LmFjY2Vzc1Rva2VuPyh0aGlzLl90b2tlbj1lLmlkZW50aXR5LmFjY2Vzc1Rva2VuLHQuX29wZW4odGhpcy5fdG9rZW4sZnVuY3Rpb24oKXtpZih0Ll9maWx0ZXIoZSkpe2NvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIEFmdGVyIEZpbHRlciIsZSk7dmFyIHI9ZS5zY2hlbWE7aWYoZS52YWx1ZS5uYW1lKXt2YXIgbj1yLnNwbGl0KCIvIik7IkNvbW11bmljYXRpb24iPT09bltuLmxlbmd0aC0xXT90Ll9nZXRTbGFja0luZm9ybWF0aW9uKGUudG8sZS5pZGVudGl0eS5pbnB1dC51c2VyX2lkKS50aGVuKGZ1bmN0aW9uKHIpe3ZhciBuPXIub3duSW5mbyxvPXIuaW52SW5mbztjb25zb2xlLmxvZygiU2xhY2sgVXNlciBpbmZvcm1hdGlvbjogIixyLGUpO3ZhciBpPW5ldyBhLmRlZmF1bHQobi5uYW1lLCJzbGFjazovL3NsYWNrLmNvbS8iK24ubmFtZSsiQHNsYWNrLmNvbSIsbi5wcm9maWxlLmltYWdlXzE5MixuLm5hbWUsIiIsInNsYWNrLmNvbSIsdm9pZCAwLG4ucHJvZmlsZSkscz1uZXcgYS5kZWZhdWx0KG8ubmFtZSwic2xhY2s6Ly9zbGFjay5jb20vIitvLm5hbWUrIkBzbGFjay5jb20iLG8ucHJvZmlsZS5pbWFnZV8xOTIsby5uYW1lLCIiLCJzbGFjay5jb20iLHZvaWQgMCxvLnByb2ZpbGUpO2UuYWNrKDIwMCksY29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gc3Vic2NyaWJpbmcgb2JqZWN0IixlLnVybCxpKTt2YXIgdT17aWQ6by5pZCxuYW1lOm8ubmFtZSx1c2VyVVJMOnMudXNlclByb2ZpbGUudXNlclVSTCxpZGVudGl0eTpzfSxjPXtpZDplLmlkZW50aXR5LmlucHV0LnVzZXJfaWQsdXNlclVSTDppLnVzZXJQcm9maWxlLnVzZXJVUkx9O2lmKHQuX2FscmVhZHlDcmVhdGVkKWlmKGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIEFscmVhZHkgY3JlYXRlZCIsZSksY29uc29sZS5sb2codC5fc3Vic2NyaWJlZExpc3QubGVuZ3RoKSwwIT10Ll9zdWJzY3JpYmVkTGlzdC5sZW5ndGgpdC5fY2hhbm5lbFN0YXR1c0luZm8oZSx1LGMpO2Vsc2V7dmFyIGw9ZS50by5zcGxpdCgiLy8iKVswXSsiLy9zbGFjay5jb20vIitlLnRvLnNwbGl0KCIvLyIpWzFdO3QuX2NyZWF0ZU5ld0NvbnRleHRSZXBvcnRlcihsKX1lbHNle2NvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIE5vdCBBbHJlYWR5IGNyZWF0ZWQiLGUpLHQuX2FscmVhZHlDcmVhdGVkPSEwLHQuX2RhdGFPYmplY3RSZXBvcnRlclVSTD1lLnVybDt2YXIgZD17dXNlcjoic2xhY2s6Ly8iK24ubmFtZSsiQHNsYWNrLmNvbSIsZG9tYWluOiJzbGFjay5jb20iLGlkOmUuaWRlbnRpdHkuaW5wdXQudXNlcl9pZCx1c2VyVVJMOiJzbGFjazovL3NsYWNrLmNvbS8iK24ubmFtZSsiQHNsYWNrLmNvbSIsaWRlbnRpdHk6aX07dC5fYWRkZWRVc2Vyc0luZm8ucHVzaChkKSx0Ll9jcmVhdGVOZXdDb250ZXh0UmVwb3J0ZXIoaS51c2VyUHJvZmlsZS51c2VyVVJMKS50aGVuKGZ1bmN0aW9uKHIpezE9PXImJnQuX2NoYXRNYW5hZ2VyLmpvaW4oZS51cmwsITEsaSkudGhlbihmdW5jdGlvbihyKXt0Ll9wcmVwYXJlQ2hhdChyKTt2YXIgbj17dHlwZToicHJlc2VuY2Vfc3ViIixpZHM6dC5fdG9TdWJzY3JpYmVQcmVzZW5jZX07Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gd2Vic29ja2V0IHNlbnRtZXNzYWdlIix0Ll93cy5yZWFkeVN0YXRlLG4pLHQuX3dzLnNlbmQoSlNPTi5zdHJpbmdpZnkobikpO3ZhciBvPXt1cmxEYXRhT2JqOmUudXJsLHNjaGVtYTplLnNjaGVtYSxzdWJzY3JpYmVkOiEwLGlkZW50aXR5OmksY2hhdDpyfTt0Ll9zdWJzY3JpYmVkTGlzdC5wdXNoKG8pLGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIHN1YnNjcmliZWQgbGlzdCIsdC5fc3Vic2NyaWJlZExpc3QpLGUuaWRlbnRpdHkuaW5wdXQudXNlcl9pZCYmKHQuX2lkPWUuaWRlbnRpdHkuaW5wdXQudXNlcl9pZCksdC5fY2hhbm5lbFN0YXR1c0luZm8oZSx1LGMpfSl9KX19KTplLmVycm9yKCJJbnZhbGlkIFNjaGVtZTogIituW24ubGVuZ3RoLTFdKX1lbHNlIGUuZXJyb3IoIkNoYXQgTmFtZSBNaXNzaW5nIil9fSkpOmUuZXJyb3IoIkFjY2VzcyBUb2tlbiBNaXNzaW5nIil9fSx7a2V5OiJfY3JlYXRlTmV3Q29udGV4dFJlcG9ydGVyIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyLG4pe3QuX3Jlc3VtZVJlcG9ydGVyKGUpLnRoZW4oZnVuY3Rpb24obil7Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gVEVTVCBjcmVhdGluZyByZXBvcnRlciBmb3IiLGUpLHQuX2FkZGVkVXNlcnNJbmZvLmZvckVhY2goZnVuY3Rpb24obyl7aWYoby51c2VyVVJMPT1lKXtjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBURVNUIGdldCBwcmVzZW5zZSBmb3IgIixvKTt2YXIgaT17dG9rZW46dC5fdG9rZW4sdXNlcjpvLmlkfTt0Ll9zbGFjay51c2Vycy5nZXRQcmVzZW5jZShpLGZ1bmN0aW9uKGkscyl7aWYoaSlyZXR1cm4gY29uc29sZS5lcnJvcigiW1NsYWNrUHJvdG9zdHViXSBlcnJvciIsaSkscighMSk7aWYoY29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gUFJFU0VOQ0UgT0YgVVNFUiIsbyxzKSwhcy5vaylyZXR1cm4gcighMSk7aWYodC5fdG9TdWJzY3JpYmVQcmVzZW5jZS5wdXNoKG8uaWQpLGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIHRvU3Vic2NyaWJlQXJyYXkiLHQuX3RvU3Vic2NyaWJlUHJlc2VuY2UsImludGV4dCIsSlNPTi5zdHJpbmdpZnkodC5fdG9TdWJzY3JpYmVQcmVzZW5jZSkpLGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIHJlc3VtZWQgb2JqIixuKSxuKXJldHVybiBjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSByZXBvcnRlciBmb3IgdGhpcyB1c2VyVVJMOiIsZSwiIGFscmVhZHkgZXhpc3RzICIsbiksdC5fY29udGV4dFJlcG9ydGVyc0luZm9bby5pZF09bixyKCEwKTt2YXIgYT10Ll9jcmVhdGVOZXdPYmpQcmVzZW5jZShzLnByZXNlbmNlKTtjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBjcmVhdGluZyBhIG5ldyBjb250ZXh0UmVwb3J0ZXIgZm9yIGludml0ZWRVU0VSICIsYSxvKSx0Ll9jb250ZXh0UmVwb3J0ZXIuY3JlYXRlKG8udXNlclVSTCxhLFsiYXZhaWxhYmlsaXR5X2NvbnRleHQiXSxvLnVzZXJVUkwsby51c2VyVVJMKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBDT05URVhUIFJFVFVSTkVEIixlKSxlLm9uU3Vic2NyaXB0aW9uKGZ1bmN0aW9uKGUpe2UuYWNjZXB0KCksY29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gbmV3IHN1YnMiLGUpfSksdC5fY29udGV4dFJlcG9ydGVyc0luZm9bby5pZF09ZSxyKCEwKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoIltTbGFja1Byb3Rvc3R1Yl0gZXJyIixlKX0pLGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIHdlYnNvY2tldCByZWFkeVN0YXRlIix0Ll93cy5yZWFkeVN0YXRlKX0pfX0pfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIGVycm9yIixlKSxyKCExKX0pfSl9fSx7a2V5OiJfY3JlYXRlTmV3T2JqUHJlc2VuY2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QuYXNzaWduKHt9LHtpZDoiXyIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsOSksdmFsdWVzOlt7dmFsdWU6dGhpcy5fZ2V0UHJlc2VuY2UoZSksbmFtZToiYXZhaWxhYmlsaXR5Iix0eXBlOiJhdmFpbGFiaWxpdHlfc3RhdHVzIix1bml0OiJwcmVzIn1dfSl9fSx7a2V5OiJfZ2V0UHJlc2VuY2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiJhY3RpdmUiPT09ZT8iYXZhaWxhYmxlIjoidW5hdmFpbGFibGUifX0se2tleToiX2dldFNsYWNrSW5mb3JtYXRpb24iLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24obixvKXt2YXIgaT0iaHR0cHM6Ly9zbGFjay5jb20vYXBpL3VzZXJzLmxpc3Q/dG9rZW49IityLl90b2tlbixzPSJodHRwczovL3NsYWNrLmNvbS9hcGkvY2hhbm5lbHMubGlzdD90b2tlbj0iK3IuX3Rva2VuLGE9ci5fc2VuZEhUVFBSZXF1ZXN0KCJHRVQiLGkpLHU9ci5fc2VuZEhUVFBSZXF1ZXN0KCJHRVQiLHMpO1Byb21pc2UuYWxsKFthLHVdKS50aGVuKGZ1bmN0aW9uKG8pe3IuX3VzZXJzTGlzdD1vWzBdLm1lbWJlcnMsci5fY2hhbm5lbHNMaXN0PW9bMV0uY2hhbm5lbHM7dmFyIGk9ZS5zcGxpdCgiOi8vIilbMV0uc3BsaXQoIkAiKVswXSxzPXIuX3VzZXJzTGlzdC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUubmFtZT09PWl9KVswXSxhPXIuX3VzZXJzTGlzdC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUuaWQ9PT10fSlbMF07bih7aW52SW5mbzpzLG93bkluZm86YX0pfSxmdW5jdGlvbihlKXtjb25zb2xlLmVycm9yKCJbU2xhY2tQcm90b3N0dWJdICIsZSksbyhlKX0pfSl9fSx7a2V5OiJfY2hhbm5lbFN0YXR1c0luZm8iLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzLG89ZS52YWx1ZS5uYW1lLnNwbGl0KCIgIikuam9pbigiLSIpLnJlcGxhY2UoL1wvL2dpLCItIiksaT1uLl9jaGFubmVsc0xpc3QuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLm5hbWU9PT1vfSlbMF0scz1udWxsO2lmKGkpe2NvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIGNoYW5uZWwgZXhpc3QiLGkpO3ZhciBhPSExOyhzPW4uX2NoYW5uZWxzTGlzdC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUubmFtZT09PW99KVswXS5tZW1iZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2U9PT10LmlkJiYoYT0hMCl9KSxjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBjaGFubmVsIG1lbWJlcnMiLHMsIiAgIC0+IixhKTt2YXIgdT0wLGM9MDtuLl9zdWJzY3JpYmVkTGlzdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QudXJsRGF0YU9iaj09PWUudXJsJiYoYz11KSx1Kyt9KSxjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBjaGFubmVscyIsbi5fc3Vic2NyaWJlZExpc3Qsbi5fc3Vic2NyaWJlZExpc3QubGVuZ3RoLGMpLG4uX3N1YnNjcmliZWRMaXN0W2NdLmNoYW5uZWxJRD1pLmlkLGF8fG4uX2ludml0ZSh0LmlkLGkuaWQpfWVsc2Ugbi5fY3JlYXRlQ2hhbm5lbChvLGUudXJsKS50aGVuKGZ1bmN0aW9uKHIpe2NvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdICBhZnRlciBjcmVhdGUgY2hhbm5lbCAiLHIpLHImJm4uX2ludml0ZSh0LmlkLCIiLGUudXJsKX0pO24uX3VzZXJzVXBkYXRlZD9jb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSB1c2VycyBBbHJlYWR5IFVwZGF0ZWQiKTpuLl9hZGRBbGxVc2Vyc1RvSHlwZXJ0eShzLHQscil9fSx7a2V5OiJfYWRkQWxsVXNlcnNUb0h5cGVydHkiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzO24uX3VzZXJzVXBkYXRlZD0hMDt2YXIgbz1bXSxpPXZvaWQgMDtjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBsZXRzIGNoZWNrIGlmIHVzZXJzIG5lZWRzIHRvIGJlIGFkZGVkIiksZSYmbi5fdXNlcnNMaXN0LmZvckVhY2goZnVuY3Rpb24ocyl7ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2lmKGU9PT1zLmlkJiZ0LmlkIT1zLmlkJiZyLmlkIT1zLmlkKXtjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSB0byBhZGQgIixzLmlkKTt2YXIgdT1uZXcgYS5kZWZhdWx0KHMubmFtZSwic2xhY2s6Ly9zbGFjay5jb20vIitzLm5hbWUrIkBzbGFjay5jb20iLHMucHJvZmlsZS5pbWFnZV8xOTIscy5uYW1lLCIiLCJzbGFjay5jb20iLHZvaWQgMCxzLnByb2ZpbGUpO2k9e3VzZXI6InNsYWNrOi8vIitzLm5hbWUrIkBzbGFjay5jb20iLGRvbWFpbjoic2xhY2suY29tIixpZDpzLmlkLHVzZXJVUkw6InNsYWNrOi8vc2xhY2suY29tLyIrcy5uYW1lKyJAc2xhY2suY29tIixpZGVudGl0eTp1fSxuLl9hZGRlZFVzZXJzSW5mby5wdXNoKGkpLG8ucHVzaChpKX19KX0pLGk9e3VzZXI6InNsYWNrOi8vIit0Lm5hbWUrIkBzbGFjay5jb20iLGRvbWFpbjoic2xhY2suY29tIixpZDp0LmlkLHVzZXJVUkw6InNsYWNrOi8vc2xhY2suY29tLyIrdC5uYW1lKyJAc2xhY2suY29tIixpZGVudGl0eTp0LmlkZW50aXR5fSxuLl9hZGRlZFVzZXJzSW5mby5wdXNoKGkpLG8ucHVzaChpKSxvLmZvckVhY2goZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gVEVTVCBqb2luaW5nIHdpdGggdXNlciIsZSksZS51c2VyVVJMIT09ci51c2VyVVJMJiZuLl9jcmVhdGVOZXdDb250ZXh0UmVwb3J0ZXIoZS51c2VyVVJMKS50aGVuKGZ1bmN0aW9uKHQpezE9PXQmJm4uX2NoYXRNYW5hZ2VyLmpvaW4obi5fZGF0YU9iamVjdFJlcG9ydGVyVVJMLCExLGUuaWRlbnRpdHkpLnRoZW4oZnVuY3Rpb24odCl7Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gY2hhdG1hbmFnZXIgSk9JTiIsdCxlLnVzZXJVUkwsci51c2VyVVJMKSxuLl9wcmVwYXJlQ2hhdCh0KTt2YXIgbz17dHlwZToicHJlc2VuY2Vfc3ViIixpZHM6bi5fdG9TdWJzY3JpYmVQcmVzZW5jZX07Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gd2Vic29ja2V0IHNlbnRtZXNzYWdlIixuLl93cy5yZWFkeVN0YXRlLG8pLG4uX3dzLnNlbmQoSlNPTi5zdHJpbmdpZnkobykpfSkuY2F0Y2goZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gY2hhdG1hbmFnZXIgSk9JTiBlcnJvciIsZSl9KX0pfSl9fSx7a2V5OiJfaGFuZGxlTmV3VXNlciIsdmFsdWU6ZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gSGFuZGxpbmcgYSBuZXcgdXNlciIsZSk7dmFyIHQ9dGhpcyxyPXZvaWQgMDtpZih0Ll9zdWJzY3JpYmVkTGlzdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QuY2hhbm5lbElEPT09ZS5jaGFubmVsJiYocj10KX0pLHIpe3ZhciBuPXQuX3VzZXJzTGlzdC5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQuaWQ9PT1lLnVzZXJ9KVswXSxvPW5ldyBhLmRlZmF1bHQobi5uYW1lLCJzbGFjazovL3NsYWNrLmNvbS8iK24ubmFtZSsiQHNsYWNrLmNvbSIsbi5wcm9maWxlLmltYWdlXzE5MixuLm5hbWUsIiIsInNsYWNrLmNvbSIsdm9pZCAwLG4ucHJvZmlsZSksaT17dXNlcjoic2xhY2s6Ly8iK24ubmFtZSsiQHNsYWNrLmNvbSIsZG9tYWluOiJzbGFjay5jb20iLGlkOmUudXNlcix1c2VyVVJMOiJzbGFjazovL3NsYWNrLmNvbS8iK24ubmFtZSsiQHNsYWNrLmNvbSIsaWRlbnRpdHk6b307dC5fYWRkZWRVc2Vyc0luZm8ucHVzaChpKSxjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBKb2luaW5nIGNoYXQiLHIudXJsRGF0YU9iaiwiIHdpdGgiLG8pLHQuX2NyZWF0ZU5ld0NvbnRleHRSZXBvcnRlcihvLnVzZXJQcm9maWxlLnVzZXJVUkwpLnRoZW4oZnVuY3Rpb24oZSl7MT09ZSYmdC5fY2hhdE1hbmFnZXIuam9pbihyLnVybERhdGFPYmosITEsbykudGhlbihmdW5jdGlvbihlKXt0Ll9wcmVwYXJlQ2hhdChlKTt2YXIgcj17dHlwZToicHJlc2VuY2Vfc3ViIixpZHM6dC5fdG9TdWJzY3JpYmVQcmVzZW5jZX07Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gd2Vic29ja2V0IHNlbnRtZXNzYWdlIix0Ll93cy5yZWFkeVN0YXRlLHIpLHQuX3dzLnNlbmQoSlNPTi5zdHJpbmdpZnkocikpfSl9KX19fSx7a2V5OiJfaGFuZGxlUHJlc2VuY2VDaGFuZ2UiLHZhbHVlOmZ1bmN0aW9uKGUpe2lmKGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIHVwZGF0aW5nIHByZXNlbmNlIG9mIHVzZXIiKSx0aGlzLl9jb250ZXh0UmVwb3J0ZXJzSW5mb1tlLnVzZXJdKXt2YXIgdD10aGlzLl9jb250ZXh0UmVwb3J0ZXJzSW5mb1tlLnVzZXJdO3QuZGF0YS52YWx1ZXNbMF0udmFsdWU9dGhpcy5fZ2V0UHJlc2VuY2UoZS5wcmVzZW5jZSksY29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gcHJlc2VuY2Ugb2YgdXNlciIsZS51c2VyLCIgdXBkYXRlZCB0byIsdC5kYXRhKX19fSx7a2V5OiJfaGFuZGxlTmV3TWVzc2FnZSIsdmFsdWU6ZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gSGFuZGxpbmcgYSBuZXcgbWVzc2FnZSIsZSk7dmFyIHQ9IiIscj12b2lkIDA7dGhpcy5fc3Vic2NyaWJlZExpc3QuZm9yRWFjaChmdW5jdGlvbihuKXtuLmNoYW5uZWxJRD09PWUuY2hhbm5lbCYmKHQ9bi5jaGFubmVsSUQscj1uLmNoYXQpfSksY29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gc3Vic2NyaWJlZCBsaXN0Iix0aGlzLl9zdWJzY3JpYmVkTGlzdCksZS5jaGFubmVsJiZlLnRzPnRoaXMuX3Nlc3Npb24uY3JlYXRlZFRpbWUmJihlLmNoYW5uZWw9PT10JiZlLnVzZXIhPT10aGlzLl9pZHx8IWUuaGFzT3duUHJvcGVydHkoImJvdF9pZCIpJiZlLnVzZXI9PT10aGlzLl9pZCYmZS5jaGFubmVsPT09dCkmJnRoaXMuX2dldFVzZXJJbmZvKGUudXNlcikudGhlbihmdW5jdGlvbih0KXtjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSBtc2cgdG8gYWRkQ2hpbGQiLGUudGV4dCwiICAgICBpZGVudGl0eToiLHQpLHIuc2VuZChlLnRleHQsdCl9KX19LHtrZXk6Il9nZXRVc2VySW5mbyIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocil7dC5fc2xhY2sudXNlcnMuaW5mbyh7dG9rZW46dC5fdG9rZW4sdXNlcjplfSxmdW5jdGlvbihlLHQpe2lmKGUpY29uc29sZS5lcnJvcigiW1NsYWNrUHJvdG9zdHViXSBlcnJvciIsZSk7ZWxzZXtjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViIGdldFVzZXJJbmZvXSAiLHQpO3ZhciBuPW5ldyBhLmRlZmF1bHQodC51c2VyLm5hbWUsInNsYWNrOi8vc2xhY2suY29tLyIrdC51c2VyLm5hbWUrIkBzbGFjay5jb20iLHQudXNlci5wcm9maWxlLmltYWdlXzE5Mix0LnVzZXIubmFtZSwiIiwic2xhY2suY29tIik7cihuKX19KX0pfX0se2tleToiX3ByZXBhcmVDaGF0Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2NvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIGNoYXQiLGUpLGUub25NZXNzYWdlKGZ1bmN0aW9uKHIpe2NvbnNvbGUuaW5mbygiW1NsYWNrUHJvdG9zdHViXSBvbk1lc3NhZ2U6ICIsciksY29uc29sZS5pbmZvKCJbU2xhY2tQcm90b3N0dWJdIE9ic2VydmVyIC0gTWVzc2FnZSBIaXN0b3J5IENvbnRyb2wgIix0Ll9tZXNzYWdlSGlzdG9yeUNvbnRyb2wpO3ZhciBuPWUuY2hpbGRfY3NlcSxvPWUuX2RhdGFPYmplY3RPYnNlcnZlci51cmwsaT12b2lkIDA7KHQuX3N1YnNjcmliZWRMaXN0LmZvckVhY2goZnVuY3Rpb24oZSl7ZS51cmxEYXRhT2JqPT09byYmKGk9ZS5jaGFubmVsSUQpfSksdC5fbWVzc2FnZUhpc3RvcnlDb250cm9sLmhhc093blByb3BlcnR5KG8pKT90Ll9tZXNzYWdlSGlzdG9yeUNvbnRyb2xbb10uaWQhPT1uJiYodC5fbWVzc2FnZUhpc3RvcnlDb250cm9sW29dLmlkPW4sdC5fZGVsaXZlcihyLGkpKToodC5fbWVzc2FnZUhpc3RvcnlDb250cm9sW29dPXtpZDpufSx0Ll9kZWxpdmVyKHIsaSkpfSl9fSx7a2V5OiJfaW52aXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06IiIscj1hcmd1bWVudHNbMl07IiI9PXQmJnRoaXMuX3N1YnNjcmliZWRMaXN0LmZvckVhY2goZnVuY3Rpb24oZSl7ZS51cmxEYXRhT2JqPT09ciYmKHQ9ZS5jaGFubmVsSUQpfSk7dmFyIG49e3Rva2VuOnRoaXMuX3Rva2VuLGNoYW5uZWw6dCx1c2VyOmV9O3RoaXMuX3NsYWNrLmNoYW5uZWxzLmludml0ZShuLGZ1bmN0aW9uKGUsdCl7ZT9jb25zb2xlLmVycm9yKCJbU2xhY2tQcm90b3N0dWJdIGVycm9yIixlKTpjb25zb2xlLmxvZygiW1NsYWNrUHJvdG9zdHViXSB1c2VyIGludml0ZWQgd2l0aCBzdWNlc3MiLHQpfSl9fSx7a2V5OiJfZGVsaXZlciIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO2lmKGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIE1zZyB0byBEZWxpdmVyOiAiLGUsIiBvbiBjaGFubmVsOiIsdCksdCYmZS52YWx1ZSYmZS5oYXNPd25Qcm9wZXJ0eSgiaWRlbnRpdHkiKSYmZS5pZGVudGl0eS5oYXNPd25Qcm9wZXJ0eSgidXNlclByb2ZpbGUiKSYmZS5pZGVudGl0eS51c2VyUHJvZmlsZS5oYXNPd25Qcm9wZXJ0eSgibmFtZSIpJiZlLmlkZW50aXR5LnVzZXJQcm9maWxlLm5hbWUpe3ZhciBuPWUuaWRlbnRpdHkudXNlclByb2ZpbGUubmFtZSsiOiAiK2UudmFsdWUuY29udGVudCxvPXthc191c2VyOiEwLHRva2VuOnIuX3Rva2VuLGNoYW5uZWw6dCx0ZXh0Om59O2NvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIChQb3N0TWVzc2FnZSBzbGFjayBhcGkpIHRva2VuKCIsci5fdG9rZW4sIikgIGNoYW5uZWwoIix0LCIpIHRleHQoIixlLnZhbHVlLmNvbnRlbnQsIikiKSxyLl9zbGFjay5jaGF0LnBvc3RNZXNzYWdlKG8sZnVuY3Rpb24obixvKXtpZihuKWlmKCJub3RfaW5fY2hhbm5lbCI9PW4ubWVzc2FnZSl7Y29uc29sZS5lcnJvcigiW1NsYWNrUHJvdG9zdHViXSBDaGFubmVsIGV4aXN0LCBidXQgdXNlciBpcyBub3Qgb24gY2hhbm5lbCIsbik7dmFyIGk9ci5fY2hhbm5lbHNMaXN0LmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS5pZD09PXR9KVswXSxzPXt0b2tlbjpyLl90b2tlbixuYW1lOmkubmFtZX07ci5fc2xhY2suY2hhbm5lbHMuam9pbihzKSxyLl9kZWxpdmVyKGUsdCl9ZWxzZSBjb25zb2xlLmVycm9yKCJbU2xhY2tQcm90b3N0dWJdIGVycm9yIixuKTtlbHNlIGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIFBvc3RNZXNzYWdlIHdpdGggU3VjZXNzIixvKX0pfX19LHtrZXk6Il9jcmVhdGVDaGFubmVsIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKG4pe3ZhciBvPXt0b2tlbjpyLl90b2tlbixuYW1lOmV9O2NvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIENyZWF0aW5nIGEgbmV3IGNoYW5uZWwgdG9DcmVhdGU6IixvLCIgIGNoYW5uZWxPYmpVcmw6Iix0KSxyLl9zbGFjay5jaGFubmVscy5jcmVhdGUobyxmdW5jdGlvbihlLG8pe2lmKGUpY29uc29sZS5lcnJvcigiW1NsYWNrUHJvdG9zdHViXSAiLGUpO2Vsc2UgaWYoby5vayl7Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gQ2hhbm5lbCBDcmVhdGVkIHdpdGggU3VjZXNzICIsbyksY29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1Yl0gQXNzb2NpYXRlIGEgbmV3IGNoYW5uZWwgSUQiLG8uY2hhbm5lbC5pZCwidG8gdXJsRGF0YU9iaiIsdCk7dmFyIGk9MCxzPTA7ci5fc3Vic2NyaWJlZExpc3QuZm9yRWFjaChmdW5jdGlvbihlKXtlLnVybERhdGFPYmo9PT10JiYocz1pKSxpKyt9KSxyLl9zdWJzY3JpYmVkTGlzdFtzXS5jaGFubmVsSUQ9by5jaGFubmVsLmlkLGNvbnNvbGUubG9nKCJbU2xhY2tQcm90b3N0dWJdIHN1YnNjcmliZWQgbGlzdCIsci5fc3Vic2NyaWJlZExpc3QpLG4oITApfX0pfSl9fSx7a2V5OiJfc2VuZEhUVFBSZXF1ZXN0Iix2YWx1ZTpmdW5jdGlvbihlLHQpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyLG4pe3ZhciBvPW5ldyBYTUxIdHRwUmVxdWVzdDsid2l0aENyZWRlbnRpYWxzImluIG8/by5vcGVuKGUsdCwhMCk6InVuZGVmaW5lZCIhPXR5cGVvZiBYRG9tYWluUmVxdWVzdD8obz1uZXcgWERvbWFpblJlcXVlc3QpLm9wZW4oZSx0KTpvPW51bGwsbz8oby5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtpZig0PT09by5yZWFkeVN0YXRlKWlmKDIwMD09PW8uc3RhdHVzKXt2YXIgZT1KU09OLnBhcnNlKG8ucmVzcG9uc2VUZXh0KTtyKGUpfWVsc2UgNDAwPT09by5zdGF0dXM/bigiVGhlcmUgd2FzIGFuIGVycm9yIHByb2Nlc3NpbmcgdGhlIHRva2VuIik6bigic29tZXRoaW5nIGVsc2Ugb3RoZXIgdGhhbiAyMDAgd2FzIHJldHVybmVkIil9LG8uc2VuZCgpKTpuKCJDT1JTIG5vdCBzdXBwb3J0ZWQiKX0pfX0se2tleToiX3NlbmRTdGF0dXMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7Y29uc29sZS5sb2coIltTbGFja1Byb3Rvc3R1YiBzdGF0dXMgY2hhbmdlZF0gdG8gIixlKSx0aGlzLl9zdGF0ZT1lO3ZhciByPXt0eXBlOiJ1cGRhdGUiLGZyb206dGhpcy5fbXlVcmwsdG86dGhpcy5fbXlVcmwrIi9zdGF0dXMiLGJvZHk6e3ZhbHVlOmV9fTt0JiYoci5ib2R5LmRlc2M9dCksdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHIpfX0se2tleToiY29uZmlnIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29uZmlnfX0se2tleToicnVudGltZVNlc3Npb24iLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9ydW50aW1lU2Vzc2lvblVSTH19XSksZX0oKX0sZnVuY3Rpb24oZSx0LHIpe2xldCBuPXIoMCksbz1yKDIpLGk9cig2KTtlLmV4cG9ydHM9bihpLG8pfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtsZXQgcj1uW2VdLmZpbHRlcihlPT52b2lkIDA9PT10W2VdKTtyZXR1cm4hIXIubGVuZ3RoJiZFcnJvcihgJHtlfSBtaXNzaW5nIHBhcmFtczogJHtyLmpvaW4oIiwgIil9YCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigwKSxvPXIoMik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2V8fChlPXt9KTtyZXR1cm4gbmV3IGNsYXNze2NvbnN0cnVjdG9yKCl7bih0aGlzLGZ1bmN0aW9uKHQscixuKXtyZXR1cm4gci50b2tlbj1yLnRva2VufHxlLnRva2VuLG8odCxyLG4pfSl9fX19LGZ1bmN0aW9uKGUsdCxyKXshZnVuY3Rpb24odCxyKXtlLmV4cG9ydHM9cigpfSgidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJnNlbGYsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChuKXtpZihyW25dKXJldHVybiByW25dLmV4cG9ydHM7dmFyIG89cltuXT17aTpuLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbbl0uY2FsbChvLmV4cG9ydHMsbyxvLmV4cG9ydHMsdCksby5sPSEwLG8uZXhwb3J0c312YXIgcj17fTtyZXR1cm4gdC5tPWUsdC5jPXIsdC5kPWZ1bmN0aW9uKGUscixuKXt0Lm8oZSxyKXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUscix7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om59KX0sdC5uPWZ1bmN0aW9uKGUpe3ZhciByPWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiB0LmQociwiYSIscikscn0sdC5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSx0LnA9IiIsdCh0LnM9MTk2KX0oW2Z1bmN0aW9uKGUsdCl7dmFyIHI9ZS5leHBvcnRzPXt2ZXJzaW9uOiIyLjUuNyJ9OyJudW1iZXIiPT10eXBlb2YgX19lJiYoX19lPXIpfSxmdW5jdGlvbihlLHQpe3ZhciByPWUuZXhwb3J0cz0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93Lk1hdGg9PU1hdGg/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZiYmc2VsZi5NYXRoPT1NYXRoP3NlbGY6RnVuY3Rpb24oInJldHVybiB0aGlzIikoKTsibnVtYmVyIj09dHlwZW9mIF9fZyYmKF9fZz1yKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzYpKCJ3a3MiKSxvPXIoMjMpLGk9cigxKS5TeW1ib2wscz0iZnVuY3Rpb24iPT10eXBlb2YgaTsoZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1zJiZpW2VdfHwocz9pOm8pKCJTeW1ib2wuIitlKSl9KS5zdG9yZT1ufSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3QuX19lc01vZHVsZT0hMCx0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9IXIoMTMpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShyKDU5KSk7dC5kZWZhdWx0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgbz10W3JdO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLCJ2YWx1ZSJpbiBvJiYoby53cml0YWJsZT0hMCksKDAsbi5kZWZhdWx0KShlLG8ua2V5LG8pfX1yZXR1cm4gZnVuY3Rpb24odCxyLG4pe3JldHVybiByJiZlKHQucHJvdG90eXBlLHIpLG4mJmUodCxuKSx0fX0oKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSksbz1yKDApLGk9cigxNCkscz1yKDExKSxhPXIoMTApLHU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBjLGwsZCxmPWUmdS5GLHA9ZSZ1LkcseT1lJnUuUyx2PWUmdS5QLGg9ZSZ1LkIsYj1lJnUuVyxfPXA/bzpvW3RdfHwob1t0XT17fSksbT1fLnByb3RvdHlwZSxnPXA/bjp5P25bdF06KG5bdF18fHt9KS5wcm90b3R5cGU7Zm9yKGMgaW4gcCYmKHI9dCkscikobD0hZiYmZyYmdm9pZCAwIT09Z1tjXSkmJmEoXyxjKXx8KGQ9bD9nW2NdOnJbY10sX1tjXT1wJiYiZnVuY3Rpb24iIT10eXBlb2YgZ1tjXT9yW2NdOmgmJmw/aShkLG4pOmImJmdbY109PWQ/ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCxyLG4pe2lmKHRoaXMgaW5zdGFuY2VvZiBlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgZTtjYXNlIDE6cmV0dXJuIG5ldyBlKHQpO2Nhc2UgMjpyZXR1cm4gbmV3IGUodCxyKX1yZXR1cm4gbmV3IGUodCxyLG4pfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIHQucHJvdG90eXBlPWUucHJvdG90eXBlLHR9KGQpOnYmJiJmdW5jdGlvbiI9PXR5cGVvZiBkP2koRnVuY3Rpb24uY2FsbCxkKTpkLHYmJigoXy52aXJ0dWFsfHwoXy52aXJ0dWFsPXt9KSlbY109ZCxlJnUuUiYmbSYmIW1bY10mJnMobSxjLGQpKSl9O3UuRj0xLHUuRz0yLHUuUz00LHUuUD04LHUuQj0xNix1Llc9MzIsdS5VPTY0LHUuUj0xMjgsZS5leHBvcnRzPXV9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiJvYmplY3QiPT10eXBlb2YgZT9udWxsIT09ZToiZnVuY3Rpb24iPT10eXBlb2YgZX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDkpLG89cigzOSksaT1yKDI3KSxzPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt0LmY9cig0KT9PYmplY3QuZGVmaW5lUHJvcGVydHk6ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdD1pKHQsITApLG4ociksbyl0cnl7cmV0dXJuIHMoZSx0LHIpfWNhdGNoKGUpe31pZigiZ2V0ImluIHJ8fCJzZXQiaW4gcil0aHJvdyBUeXBlRXJyb3IoIkFjY2Vzc29ycyBub3Qgc3VwcG9ydGVkISIpO3JldHVybiJ2YWx1ZSJpbiByJiYoZVt0XT1yLnZhbHVlKSxlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCFuKGUpKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGFuIG9iamVjdCEiKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9e30uaGFzT3duUHJvcGVydHk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHIuY2FsbChlLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOCksbz1yKDE2KTtlLmV4cG9ydHM9cig0KT9mdW5jdGlvbihlLHQscil7cmV0dXJuIG4uZihlLHQsbygxLHIpKX06ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlW3RdPXIsZX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDU1KSxvPXIoMzApO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbihvKGUpKX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4hIWUoKX1jYXRjaChlKXtyZXR1cm4hMH19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyNCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtpZihuKGUpLHZvaWQgMD09PXQpcmV0dXJuIGU7c3dpdGNoKHIpe2Nhc2UgMTpyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIGUuY2FsbCh0LHIpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHIsbil7cmV0dXJuIGUuY2FsbCh0LHIsbil9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24ocixuLG8pe3JldHVybiBlLmNhbGwodCxyLG4sbyl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KHQsYXJndW1lbnRzKX19fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz0hMH0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57ZW51bWVyYWJsZTohKDEmZSksY29uZmlndXJhYmxlOiEoMiZlKSx3cml0YWJsZTohKDQmZSksdmFsdWU6dH19fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz17fX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDEwMiksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19ZnVuY3Rpb24gbyhlKXtmdW5jdGlvbiB0KGUpe3JldHVybiBlLnJlcGxhY2UoLyhbYS16QS1aLV0qKSg6XC9cLyg/OlwuKT98OikoWy1hLXpBLVowLTlAOiUuX1wrfiM9XXsyLDI1Nn0pKFstYS16QS1aMC05QDolLl9cK34jPVwvXSopL2dpLCIkMSwkMywkNCIpLnNwbGl0KCIsIil9dmFyIHI9dChlKTtpZihyWzBdPT09ZSYmIXJbMF0uaW5jbHVkZXMoIkAiKSl7dmFyIG49e3R5cGU6IiIsZG9tYWluOmUsaWRlbnRpdHk6IiJ9O3JldHVybiBjb25zb2xlLndhcm4oIltEaXZpZGVVUkxdIERpdmlkZVVSTCBkb24ndCBzdXBwb3J0IHVybCB3aXRob3V0IHNjaGVtZS4gUGxlYXNlIHJldmlldyB5b3VyIHVybCBhZGRyZXNzIixlKSxufXJldHVybiByWzBdPT09ZSYmclswXS5pbmNsdWRlcygiQCIpJiYocj10KChyWzBdPT09ZT8ic210cCI6clswXSkrIjovLyIrclswXSkpLHJbMV0uaW5jbHVkZXMoIkAiKSYmKHJbMl09clswXSsiOi8vIityWzFdLHJbMV09clsxXS5zdWJzdHIoclsxXS5pbmRleE9mKCJAIikrMSkpLHt0eXBlOnJbMF0sZG9tYWluOnJbMV0saWRlbnRpdHk6clsyXX19ZnVuY3Rpb24gaShlKXt2YXIgdD1lLmluZGV4T2YoIkAiKTtyZXR1cm4idXNlcjovLyIrZS5zdWJzdHJpbmcodCsxLGUubGVuZ3RoKSsiLyIrZS5zdWJzdHJpbmcoMCx0KX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIHM9bihyKDU4KSksYT1uKHIoNDIpKTt0LmRpdmlkZVVSTD1vLHQuZGl2aWRlRW1haWw9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5pbmRleE9mKCJAIik7cmV0dXJue3VzZXJuYW1lOmUuc3Vic3RyaW5nKDAsdCksZG9tYWluOmUuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCl9fSx0LmVtcHR5T2JqZWN0PWZ1bmN0aW9uKGUpe3JldHVybiEoKDAsYS5kZWZhdWx0KShlKS5sZW5ndGg+MCl9LHQuZGVlcENsb25lPWZ1bmN0aW9uKGUpe2lmKGUpcmV0dXJuIEpTT04ucGFyc2UoKDAscy5kZWZhdWx0KShlKSl9LHQuZ2V0VXNlclVSTEZyb21FbWFpbD1pLHQuZ2V0VXNlckVtYWlsRnJvbVVSTD1mdW5jdGlvbihlKXt2YXIgdD1vKGUpO3JldHVybiB0LmlkZW50aXR5LnJlcGxhY2UoIi8iLCIiKSsiQCIrdC5kb21haW59LHQuY29udmVydFRvVXNlclVSTD1mdW5jdGlvbihlKXtpZigidXNlcjovLyI9PT1lLnN1YnN0cmluZygwLDcpKXt2YXIgdD1vKGUpO2lmKHQuZG9tYWluJiZ0LmlkZW50aXR5KXJldHVybiBlO3Rocm93InVzZXJVUkwgd2l0aCB3cm9uZyBmb3JtYXQifXJldHVybiBpKGUpfSx0LmNoZWNrQXR0cmlidXRlPWZ1bmN0aW9uKGUpe3ZhciB0PS8oKChbYS16QS1aXSspOlwvXC8oWzAtOWEtekEtWl1bLVx3XSpbMC05YS16QS1aXVwuKStbYS16QS1aXXsyLDl9KVwvW2EtekEtWjAtOVwuXStAW2EtekEtWjAtOV0rKFwtKT9bYS16QS1aMC05XSsoXC4pP1thLXpBLVowLTldezIsMTB9P1wuW2EtekEtWl17MiwxMH0pKC4rKD89LmlkZW50aXR5KSk/L2dtLHI9W10sbj1bXTtpZihudWxsPT1lLm1hdGNoKHQpKW49ZS5zcGxpdCgiLiIpO2Vsc2V7Zm9yKHZhciBvPXZvaWQgMDtudWxsIT09KG89dC5leGVjKGUpKTspby5pbmRleD09PXQubGFzdEluZGV4JiZ0Lmxhc3RJbmRleCsrLG8uZm9yRWFjaChmdW5jdGlvbihlLHQpezA9PT10JiZyLnB1c2goZSl9KTt2YXIgaT12b2lkIDA7ci5mb3JFYWNoKGZ1bmN0aW9uKHQpe2k9ZS5yZXBsYWNlKHQsIiorKiIpLG49aS5zcGxpdCgiLiIpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4iKisqIj09PWU/dDplfSl9KX1yZXR1cm4gY29uc29sZS5sb2coIltTZXJ2aWNlRnJhbWV3b3JrLlV0aWxzLmNoZWNrQXR0cmlidXRlXSIsbiksbn0sdC5wYXJzZUF0dHJpYnV0ZXM9ZnVuY3Rpb24oZSl7aWYoZS5pbmNsdWRlcygiOi8vIikpe3ZhciB0PWUuc3BsaXQoLyhbMC05YS16QS1aXVstXHddKik6XC9cLy9nKVswXSxyPXQuc3BsaXQoIi4iKSxuPWUucmVwbGFjZSh0LCIiKTtpZihlLmluY2x1ZGVzKCJpZGVudGl0eSIpKXt2YXIgbz1uLnNwbGl0KCJpZGVudGl0eS4iKTtjb25zb2xlLmxvZygiYXJyYXkyICIrbyksbj1vWzBdLnNsaWNlKCIuIiwtMSksbz1vWzFdLnNwbGl0KCIuIiksci5wdXNoKG4sImlkZW50aXR5Iikscj1yLmNvbmNhdChvKX1lbHNlIHIucHVzaChuKTtyZXR1cm4gci5maWx0ZXIoQm9vbGVhbil9cmV0dXJuIGUuc3BsaXQoIi4iKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDQ1KSxvPXIoMzcpO2UuZXhwb3J0cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSxvKX19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9e30udG9TdHJpbmc7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiByLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG4sbzshZnVuY3Rpb24oaSxzKXsidXNlIHN0cmljdCI7dm9pZCAwIT09KG89ImZ1bmN0aW9uIj09dHlwZW9mKG49ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dmFyIHI9ZVt0XTtpZigiZnVuY3Rpb24iPT10eXBlb2Ygci5iaW5kKXJldHVybiByLmJpbmQoZSk7dHJ5e3JldHVybiBGdW5jdGlvbi5wcm90b3R5cGUuYmluZC5jYWxsKHIsZSl9Y2F0Y2godCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseS5hcHBseShyLFtlLGFyZ3VtZW50c10pfX19ZnVuY3Rpb24gdCh0KXtyZXR1cm4iZGVidWciPT09dCYmKHQ9ImxvZyIpLHR5cGVvZiBjb25zb2xlIT09YSYmKHZvaWQgMCE9PWNvbnNvbGVbdF0/ZShjb25zb2xlLHQpOnZvaWQgMCE9PWNvbnNvbGUubG9nP2UoY29uc29sZSwibG9nIik6cyl9ZnVuY3Rpb24gcihlLHQpe2Zvcih2YXIgcj0wO3I8dS5sZW5ndGg7cisrKXt2YXIgbj11W3JdO3RoaXNbbl09cjxlP3M6dGhpcy5tZXRob2RGYWN0b3J5KG4sZSx0KX10aGlzLmxvZz10aGlzLmRlYnVnfWZ1bmN0aW9uIG4oZSx0LG4pe3JldHVybiBmdW5jdGlvbigpe3R5cGVvZiBjb25zb2xlIT09YSYmKHIuY2FsbCh0aGlzLHQsbiksdGhpc1tlXS5hcHBseSh0aGlzLGFyZ3VtZW50cykpfX1mdW5jdGlvbiBvKGUscixvKXtyZXR1cm4gdChlKXx8bi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gaShlLHQsbil7ZnVuY3Rpb24gaSgpe3ZhciBlO2lmKHR5cGVvZiB3aW5kb3chPT1hKXt0cnl7ZT13aW5kb3cubG9jYWxTdG9yYWdlW2xdfWNhdGNoKGUpe31pZih0eXBlb2YgZT09PWEpdHJ5e3ZhciB0PXdpbmRvdy5kb2N1bWVudC5jb29raWUscj10LmluZGV4T2YoZW5jb2RlVVJJQ29tcG9uZW50KGwpKyI9Iik7LTEhPT1yJiYoZT0vXihbXjtdKykvLmV4ZWModC5zbGljZShyKSlbMV0pfWNhdGNoKGUpe31yZXR1cm4gdm9pZCAwPT09Yy5sZXZlbHNbZV0mJihlPXZvaWQgMCksZX19dmFyIHMsYz10aGlzLGw9ImxvZ2xldmVsIjtlJiYobCs9IjoiK2UpLGMubmFtZT1lLGMubGV2ZWxzPXtUUkFDRTowLERFQlVHOjEsSU5GTzoyLFdBUk46MyxFUlJPUjo0LFNJTEVOVDo1fSxjLm1ldGhvZEZhY3Rvcnk9bnx8byxjLmdldExldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIHN9LGMuc2V0TGV2ZWw9ZnVuY3Rpb24odCxuKXtpZigic3RyaW5nIj09dHlwZW9mIHQmJnZvaWQgMCE9PWMubGV2ZWxzW3QudG9VcHBlckNhc2UoKV0mJih0PWMubGV2ZWxzW3QudG9VcHBlckNhc2UoKV0pLCEoIm51bWJlciI9PXR5cGVvZiB0JiZ0Pj0wJiZ0PD1jLmxldmVscy5TSUxFTlQpKXRocm93ImxvZy5zZXRMZXZlbCgpIGNhbGxlZCB3aXRoIGludmFsaWQgbGV2ZWw6ICIrdDtpZihzPXQsITEhPT1uJiZmdW5jdGlvbihlKXt2YXIgdD0odVtlXXx8InNpbGVudCIpLnRvVXBwZXJDYXNlKCk7aWYodHlwZW9mIHdpbmRvdyE9PWEpe3RyeXtyZXR1cm4gdm9pZCh3aW5kb3cubG9jYWxTdG9yYWdlW2xdPXQpfWNhdGNoKGUpe310cnl7d2luZG93LmRvY3VtZW50LmNvb2tpZT1lbmNvZGVVUklDb21wb25lbnQobCkrIj0iK3QrIjsifWNhdGNoKGUpe319fSh0KSxyLmNhbGwoYyx0LGUpLHR5cGVvZiBjb25zb2xlPT09YSYmdDxjLmxldmVscy5TSUxFTlQpcmV0dXJuIk5vIGNvbnNvbGUgYXZhaWxhYmxlIGZvciBsb2dnaW5nIn0sYy5zZXREZWZhdWx0TGV2ZWw9ZnVuY3Rpb24oZSl7aSgpfHxjLnNldExldmVsKGUsITEpfSxjLmVuYWJsZUFsbD1mdW5jdGlvbihlKXtjLnNldExldmVsKGMubGV2ZWxzLlRSQUNFLGUpfSxjLmRpc2FibGVBbGw9ZnVuY3Rpb24oZSl7Yy5zZXRMZXZlbChjLmxldmVscy5TSUxFTlQsZSl9O3ZhciBkPWkoKTtudWxsPT1kJiYoZD1udWxsPT10PyJXQVJOIjp0KSxjLnNldExldmVsKGQsITEpfXZhciBzPWZ1bmN0aW9uKCl7fSxhPSJ1bmRlZmluZWQiLHU9WyJ0cmFjZSIsImRlYnVnIiwiaW5mbyIsIndhcm4iLCJlcnJvciJdLGM9bmV3IGksbD17fTtjLmdldExvZ2dlcj1mdW5jdGlvbihlKXtpZigic3RyaW5nIiE9dHlwZW9mIGV8fCIiPT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJZb3UgbXVzdCBzdXBwbHkgYSBuYW1lIHdoZW4gY3JlYXRpbmcgYSBsb2dnZXIuIik7dmFyIHQ9bFtlXTtyZXR1cm4gdHx8KHQ9bFtlXT1uZXcgaShlLGMuZ2V0TGV2ZWwoKSxjLm1ldGhvZEZhY3RvcnkpKSx0fTt2YXIgZD10eXBlb2Ygd2luZG93IT09YT93aW5kb3cubG9nOnZvaWQgMDtyZXR1cm4gYy5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHR5cGVvZiB3aW5kb3chPT1hJiZ3aW5kb3cubG9nPT09YyYmKHdpbmRvdy5sb2c9ZCksY30sYy5nZXRMb2dnZXJzPWZ1bmN0aW9uKCl7cmV0dXJuIGx9LGN9KT9uLmNhbGwodCxyLHQsZSk6bikmJihlLmV4cG9ydHM9byl9KCl9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9MCxuPU1hdGgucmFuZG9tKCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiJTeW1ib2woIi5jb25jYXQodm9pZCAwPT09ZT8iIjplLCIpXyIsKCsrcituKS50b1N0cmluZygzNikpfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgYSBmdW5jdGlvbiEiKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig5MSksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDgpLmYsbz1yKDEwKSxpPXIoMikoInRvU3RyaW5nVGFnIik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlJiYhbyhlPXI/ZTplLnByb3RvdHlwZSxpKSYmbihlLGkse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTp0fSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighbihlKSlyZXR1cm4gZTt2YXIgcixvO2lmKHQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87aWYoImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS52YWx1ZU9mKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKCF0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO3Rocm93IFR5cGVFcnJvcigiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlIil9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig3KSxvPXIoMSkuZG9jdW1lbnQsaT1uKG8pJiZuKG8uY3JlYXRlRWxlbWVudCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpP28uY3JlYXRlRWxlbWVudChlKTp7fX19LGZ1bmN0aW9uKGUsdCl7dC5mPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtpZih2b2lkIDA9PWUpdGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgIitlKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCl7dmFyIHI9TWF0aC5jZWlsLG49TWF0aC5mbG9vcjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGlzTmFOKGU9K2UpPzA6KGU+MD9uOnIpKGUpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzApO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0KG4oZSkpfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShyKDQ3KSk7dC5kZWZhdWx0PWZ1bmN0aW9uKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTtyZXR1cm4hdHx8Im9iamVjdCIhPT0odm9pZCAwPT09dD8idW5kZWZpbmVkIjooMCxuLmRlZmF1bHQpKHQpKSYmImZ1bmN0aW9uIiE9dHlwZW9mIHQ/ZTp0fX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX10Ll9fZXNNb2R1bGU9ITA7dmFyIG89bihyKDkzKSksaT1uKHIoOTcpKSxzPW4ocig0NykpO3QuZGVmYXVsdD1mdW5jdGlvbihlLHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0JiZudWxsIT09dCl0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90ICIrKHZvaWQgMD09PXQ/InVuZGVmaW5lZCI6KDAscy5kZWZhdWx0KSh0KSkpO2UucHJvdG90eXBlPSgwLGkuZGVmYXVsdCkodCYmdC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTplLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLHQmJihvLmRlZmF1bHQ/KDAsby5kZWZhdWx0KShlLHQpOmUuX19wcm90b19fPXQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzYpKCJrZXlzIiksbz1yKDIzKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPW8oZSkpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMCksbz1yKDEpLGk9b1siX19jb3JlLWpzX3NoYXJlZF9fIl18fChvWyJfX2NvcmUtanNfc2hhcmVkX18iXT17fSk7KGUuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBpW2VdfHwoaVtlXT12b2lkIDAhPT10P3Q6e30pfSkoInZlcnNpb25zIixbXSkucHVzaCh7dmVyc2lvbjpuLnZlcnNpb24sbW9kZTpyKDE1KT8icHVyZSI6Imdsb2JhbCIsY29weXJpZ2h0OiLCqSAyMDE4IERlbmlzIFB1c2hrYXJldiAoemxvaXJvY2sucnUpIn0pfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz0iY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mIi5zcGxpdCgiLCIpfSxmdW5jdGlvbihlLHQscil7dmFyIG49cig5KSxvPXIoNzIpLGk9cigzNykscz1yKDM1KSgiSUVfUFJPVE8iKSxhPWZ1bmN0aW9uKCl7fSx1PWZ1bmN0aW9uKCl7dmFyIGUsdD1yKDI4KSgiaWZyYW1lIiksbj1pLmxlbmd0aDtmb3IodC5zdHlsZS5kaXNwbGF5PSJub25lIixyKDU2KS5hcHBlbmRDaGlsZCh0KSx0LnNyYz0iamF2YXNjcmlwdDoiLChlPXQuY29udGVudFdpbmRvdy5kb2N1bWVudCkub3BlbigpLGUud3JpdGUoIjxzY3JpcHQ+ZG9jdW1lbnQuRj1PYmplY3Q8XC9zY3JpcHQ+IiksZS5jbG9zZSgpLHU9ZS5GO24tLTspZGVsZXRlIHUucHJvdG90eXBlW2lbbl1dO3JldHVybiB1KCl9O2UuZXhwb3J0cz1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbihlLHQpe3ZhciByO3JldHVybiBudWxsIT09ZT8oYS5wcm90b3R5cGU9bihlKSxyPW5ldyBhLGEucHJvdG90eXBlPW51bGwscltzXT1lKTpyPXUoKSx2b2lkIDA9PT10P3I6byhyLHQpfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz0hcig0KSYmIXIoMTMpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyKDI4KSgiZGl2IiksImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LGZ1bmN0aW9uKGUsdCxyKXt0LmY9cigyKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSksbz1yKDApLGk9cigxNSkscz1yKDQwKSxhPXIoOCkuZjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9by5TeW1ib2x8fChvLlN5bWJvbD1pP3t9Om4uU3ltYm9sfHx7fSk7Il8iPT1lLmNoYXJBdCgwKXx8ZSBpbiB0fHxhKHQsZSx7dmFsdWU6cy5mKGUpfSl9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoODkpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQpe3QuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KSxvPXIoMCksaT1yKDEzKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj0oby5PYmplY3R8fHt9KVtlXXx8T2JqZWN0W2VdLHM9e307c1tlXT10KHIpLG4obi5TK24uRippKGZ1bmN0aW9uKCl7cigxKX0pLCJPYmplY3QiLHMpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTApLG89cigxMiksaT1yKDY0KSghMSkscz1yKDM1KSgiSUVfUFJPVE8iKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixhPW8oZSksdT0wLGM9W107Zm9yKHIgaW4gYSlyIT1zJiZuKGEscikmJmMucHVzaChyKTtmb3IoO3QubGVuZ3RoPnU7KW4oYSxyPXRbdSsrXSkmJih+aShjLHIpfHxjLnB1c2gocikpO3JldHVybiBjfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjkpLG89cigxNiksaT1yKDEyKSxzPXIoMjcpLGE9cigxMCksdT1yKDM5KSxjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7dC5mPXIoNCk/YzpmdW5jdGlvbihlLHQpe2lmKGU9aShlKSx0PXModCwhMCksdSl0cnl7cmV0dXJuIGMoZSx0KX1jYXRjaChlKXt9aWYoYShlLHQpKXJldHVybiBvKCFuLmYuY2FsbChlLHQpLGVbdF0pfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX10Ll9fZXNNb2R1bGU9ITA7dmFyIG89bihyKDc5KSksaT1uKHIoODEpKSxzPSJmdW5jdGlvbiI9PXR5cGVvZiBpLmRlZmF1bHQmJiJzeW1ib2wiPT10eXBlb2Ygby5kZWZhdWx0P2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBpLmRlZmF1bHQmJmUuY29uc3RydWN0b3I9PT1pLmRlZmF1bHQmJmUhPT1pLmRlZmF1bHQucHJvdG90eXBlPyJzeW1ib2wiOnR5cGVvZiBlfTt0LmRlZmF1bHQ9ImZ1bmN0aW9uIj09dHlwZW9mIGkuZGVmYXVsdCYmInN5bWJvbCI9PT1zKG8uZGVmYXVsdCk/ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWU/InVuZGVmaW5lZCI6cyhlKX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJmdW5jdGlvbiI9PXR5cGVvZiBpLmRlZmF1bHQmJmUuY29uc3RydWN0b3I9PT1pLmRlZmF1bHQmJmUhPT1pLmRlZmF1bHQucHJvdG90eXBlPyJzeW1ib2wiOnZvaWQgMD09PWU/InVuZGVmaW5lZCI6cyhlKX19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cigxNSksbz1yKDYpLGk9cig1MCkscz1yKDExKSxhPXIoMTcpLHU9cig3MSksYz1yKDI2KSxsPXIoNTMpLGQ9cigyKSgiaXRlcmF0b3IiKSxmPSEoW10ua2V5cyYmIm5leHQiaW5bXS5rZXlzKCkpLHA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc307ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLHksdixoLGIpe3Uocix0LHkpO3ZhciBfLG0sZyxPPWZ1bmN0aW9uKGUpe2lmKCFmJiZlIGluIFIpcmV0dXJuIFJbZV07c3dpdGNoKGUpe2Nhc2Uia2V5cyI6Y2FzZSJ2YWx1ZXMiOnJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19LHc9dCsiIEl0ZXJhdG9yIixqPSJ2YWx1ZXMiPT12LGs9ITEsUj1lLnByb3RvdHlwZSxMPVJbZF18fFJbIkBAaXRlcmF0b3IiXXx8diYmUlt2XSx4PUx8fE8odiksUD12P2o/TygiZW50cmllcyIpOng6dm9pZCAwLEM9IkFycmF5Ij09dCYmUi5lbnRyaWVzfHxMO2lmKEMmJihnPWwoQy5jYWxsKG5ldyBlKSkpIT09T2JqZWN0LnByb3RvdHlwZSYmZy5uZXh0JiYoYyhnLHcsITApLG58fCJmdW5jdGlvbiI9PXR5cGVvZiBnW2RdfHxzKGcsZCxwKSksaiYmTCYmInZhbHVlcyIhPT1MLm5hbWUmJihrPSEwLHg9ZnVuY3Rpb24oKXtyZXR1cm4gTC5jYWxsKHRoaXMpfSksbiYmIWJ8fCFmJiYhayYmUltkXXx8cyhSLGQseCksYVt0XT14LGFbd109cCx2KWlmKF89e3ZhbHVlczpqP3g6TygidmFsdWVzIiksa2V5czpoP3g6Tygia2V5cyIpLGVudHJpZXM6UH0sYilmb3IobSBpbiBfKW0gaW4gUnx8aShSLG0sX1ttXSk7ZWxzZSBvKG8uUCtvLkYqKGZ8fGspLHQsXyk7cmV0dXJuIF99fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGU+MD9vKG4oZSksOTAwNzE5OTI1NDc0MDk5MSk6MH19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9cigxMSl9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cigyNCk7ZS5leHBvcnRzLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBmdW5jdGlvbihlKXt2YXIgdCxyO3RoaXMucHJvbWlzZT1uZXcgZShmdW5jdGlvbihlLG4pe2lmKHZvaWQgMCE9PXR8fHZvaWQgMCE9PXIpdGhyb3cgVHlwZUVycm9yKCJCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvciIpO3Q9ZSxyPW59KSx0aGlzLnJlc29sdmU9bih0KSx0aGlzLnJlamVjdD1uKHIpfShlKX19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cig3MCkoITApO3IoNDgpKFN0cmluZywiU3RyaW5nIixmdW5jdGlvbihlKXt0aGlzLl90PVN0cmluZyhlKSx0aGlzLl9pPTB9LGZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLl90LHI9dGhpcy5faTtyZXR1cm4gcj49dC5sZW5ndGg/e3ZhbHVlOnZvaWQgMCxkb25lOiEwfTooZT1uKHQsciksdGhpcy5faSs9ZS5sZW5ndGgse3ZhbHVlOmUsZG9uZTohMX0pfSl9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEwKSxvPXIoMzIpLGk9cigzNSkoIklFX1BST1RPIikscz1PYmplY3QucHJvdG90eXBlO2UuZXhwb3J0cz1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKGUpe3JldHVybiBlPW8oZSksbihlLGkpP2VbaV06ImZ1bmN0aW9uIj09dHlwZW9mIGUuY29uc3RydWN0b3ImJmUgaW5zdGFuY2VvZiBlLmNvbnN0cnVjdG9yP2UuY29uc3RydWN0b3IucHJvdG90eXBlOmUgaW5zdGFuY2VvZiBPYmplY3Q/czpudWxsfX0sZnVuY3Rpb24oZSx0LHIpe3IoNzMpO2Zvcih2YXIgbj1yKDEpLG89cigxMSksaT1yKDE3KSxzPXIoMikoInRvU3RyaW5nVGFnIiksYT0iQ1NTUnVsZUxpc3QsQ1NTU3R5bGVEZWNsYXJhdGlvbixDU1NWYWx1ZUxpc3QsQ2xpZW50UmVjdExpc3QsRE9NUmVjdExpc3QsRE9NU3RyaW5nTGlzdCxET01Ub2tlbkxpc3QsRGF0YVRyYW5zZmVySXRlbUxpc3QsRmlsZUxpc3QsSFRNTEFsbENvbGxlY3Rpb24sSFRNTENvbGxlY3Rpb24sSFRNTEZvcm1FbGVtZW50LEhUTUxTZWxlY3RFbGVtZW50LE1lZGlhTGlzdCxNaW1lVHlwZUFycmF5LE5hbWVkTm9kZU1hcCxOb2RlTGlzdCxQYWludFJlcXVlc3RMaXN0LFBsdWdpbixQbHVnaW5BcnJheSxTVkdMZW5ndGhMaXN0LFNWR051bWJlckxpc3QsU1ZHUGF0aFNlZ0xpc3QsU1ZHUG9pbnRMaXN0LFNWR1N0cmluZ0xpc3QsU1ZHVHJhbnNmb3JtTGlzdCxTb3VyY2VCdWZmZXJMaXN0LFN0eWxlU2hlZXRMaXN0LFRleHRUcmFja0N1ZUxpc3QsVGV4dFRyYWNrTGlzdCxUb3VjaExpc3QiLnNwbGl0KCIsIiksdT0wO3U8YS5sZW5ndGg7dSsrKXt2YXIgYz1hW3VdLGw9bltjXSxkPWwmJmwucHJvdG90eXBlO2QmJiFkW3NdJiZvKGQscyxjKSxpW2NdPWkuQXJyYXl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyMSk7ZS5leHBvcnRzPU9iamVjdCgieiIpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApP09iamVjdDpmdW5jdGlvbihlKXtyZXR1cm4iU3RyaW5nIj09bihlKT9lLnNwbGl0KCIiKTpPYmplY3QoZSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKS5kb2N1bWVudDtlLmV4cG9ydHM9biYmbi5kb2N1bWVudEVsZW1lbnR9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDQ1KSxvPXIoMzcpLmNvbmNhdCgibGVuZ3RoIiwicHJvdG90eXBlIik7dC5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzfHxmdW5jdGlvbihlKXtyZXR1cm4gbihlLG8pfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDc2KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDYxKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0KXt9LGZ1bmN0aW9uKGUsdCxyKXtyKDYyKTt2YXIgbj1yKDApLk9iamVjdDtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLmRlZmluZVByb3BlcnR5KGUsdCxyKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYpO24obi5TK24uRiohcig0KSwiT2JqZWN0Iix7ZGVmaW5lUHJvcGVydHk6cig4KS5mfSl9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIxKSxvPXIoMikoInRvU3RyaW5nVGFnIiksaT0iQXJndW1lbnRzIj09bihmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdCxyLHM7cmV0dXJuIHZvaWQgMD09PWU/IlVuZGVmaW5lZCI6bnVsbD09PWU/Ik51bGwiOiJzdHJpbmciPT10eXBlb2Yocj1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChlKXt9fSh0PU9iamVjdChlKSxvKSk/cjppP24odCk6Ik9iamVjdCI9PShzPW4odCkpJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5jYWxsZWU/IkFyZ3VtZW50cyI6c319LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEyKSxvPXIoNDkpLGk9cig2NSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIscyl7dmFyIGEsdT1uKHQpLGM9byh1Lmxlbmd0aCksbD1pKHMsYyk7aWYoZSYmciE9cil7Zm9yKDtjPmw7KWlmKChhPXVbbCsrXSkhPWEpcmV0dXJuITB9ZWxzZSBmb3IoO2M+bDtsKyspaWYoKGV8fGwgaW4gdSkmJnVbbF09PT1yKXJldHVybiBlfHxsfHwwO3JldHVybiFlJiYtMX19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1NYXRoLm1heCxpPU1hdGgubWluO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybihlPW4oZSkpPDA/byhlK3QsMCk6aShlLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDI0KSxpPXIoMikoInNwZWNpZXMiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixzPW4oZSkuY29uc3RydWN0b3I7cmV0dXJuIHZvaWQgMD09PXN8fHZvaWQgMD09KHI9bihzKVtpXSk/dDpvKHIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG8saSxzPXIoMTQpLGE9cigxMDgpLHU9cig1NiksYz1yKDI4KSxsPXIoMSksZD1sLnByb2Nlc3MsZj1sLnNldEltbWVkaWF0ZSxwPWwuY2xlYXJJbW1lZGlhdGUseT1sLk1lc3NhZ2VDaGFubmVsLHY9bC5EaXNwYXRjaCxoPTAsYj17fSxfPWZ1bmN0aW9uKCl7dmFyIGU9K3RoaXM7aWYoYi5oYXNPd25Qcm9wZXJ0eShlKSl7dmFyIHQ9YltlXTtkZWxldGUgYltlXSx0KCl9fSxtPWZ1bmN0aW9uKGUpe18uY2FsbChlLmRhdGEpfTtmJiZwfHwoZj1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj0xO2FyZ3VtZW50cy5sZW5ndGg+cjspdC5wdXNoKGFyZ3VtZW50c1tyKytdKTtyZXR1cm4gYlsrK2hdPWZ1bmN0aW9uKCl7YSgiZnVuY3Rpb24iPT10eXBlb2YgZT9lOkZ1bmN0aW9uKGUpLHQpfSxuKGgpLGh9LHA9ZnVuY3Rpb24oZSl7ZGVsZXRlIGJbZV19LCJwcm9jZXNzIj09cigyMSkoZCk/bj1mdW5jdGlvbihlKXtkLm5leHRUaWNrKHMoXyxlLDEpKX06diYmdi5ub3c/bj1mdW5jdGlvbihlKXt2Lm5vdyhzKF8sZSwxKSl9Onk/KGk9KG89bmV3IHkpLnBvcnQyLG8ucG9ydDEub25tZXNzYWdlPW0sbj1zKGkucG9zdE1lc3NhZ2UsaSwxKSk6bC5hZGRFdmVudExpc3RlbmVyJiYiZnVuY3Rpb24iPT10eXBlb2YgcG9zdE1lc3NhZ2UmJiFsLmltcG9ydFNjcmlwdHM/KG49ZnVuY3Rpb24oZSl7bC5wb3N0TWVzc2FnZShlKyIiLCIqIil9LGwuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbSwhMSkpOm49Im9ucmVhZHlzdGF0ZWNoYW5nZSJpbiBjKCJzY3JpcHQiKT9mdW5jdGlvbihlKXt1LmFwcGVuZENoaWxkKGMoInNjcmlwdCIpKS5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXt1LnJlbW92ZUNoaWxkKHRoaXMpLF8uY2FsbChlKX19OmZ1bmN0aW9uKGUpe3NldFRpbWVvdXQocyhfLGUsMSksMCl9KSxlLmV4cG9ydHM9e3NldDpmLGNsZWFyOnB9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXt0cnl7cmV0dXJue2U6ITEsdjplKCl9fWNhdGNoKGUpe3JldHVybntlOiEwLHY6ZX19fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDcpLGk9cig1MSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYobihlKSxvKHQpJiZ0LmNvbnN0cnVjdG9yPT09ZSlyZXR1cm4gdDt2YXIgcj1pLmYoZSk7cmV0dXJuKDAsci5yZXNvbHZlKSh0KSxyLnByb21pc2V9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1yKDMwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscil7dmFyIGkscyxhPVN0cmluZyhvKHQpKSx1PW4ociksYz1hLmxlbmd0aDtyZXR1cm4gdTwwfHx1Pj1jP2U/IiI6dm9pZCAwOihpPWEuY2hhckNvZGVBdCh1KSk8NTUyOTZ8fGk+NTYzMTl8fHUrMT09PWN8fChzPWEuY2hhckNvZGVBdCh1KzEpKTw1NjMyMHx8cz41NzM0Mz9lP2EuY2hhckF0KHUpOmk6ZT9hLnNsaWNlKHUsdSsyKTpzLTU2MzIwKyhpLTU1Mjk2PDwxMCkrNjU1MzZ9fX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDM4KSxvPXIoMTYpLGk9cigyNikscz17fTtyKDExKShzLHIoMikoIml0ZXJhdG9yIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLGUuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZS5wcm90b3R5cGU9bihzLHtuZXh0Om8oMSxyKX0pLGkoZSx0KyIgSXRlcmF0b3IiKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDgpLG89cig5KSxpPXIoMjApO2UuZXhwb3J0cz1yKDQpP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzOmZ1bmN0aW9uKGUsdCl7byhlKTtmb3IodmFyIHIscz1pKHQpLGE9cy5sZW5ndGgsdT0wO2E+dTspbi5mKGUscj1zW3UrK10sdFtyXSk7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoNzQpLG89cig3NSksaT1yKDE3KSxzPXIoMTIpO2UuZXhwb3J0cz1yKDQ4KShBcnJheSwiQXJyYXkiLGZ1bmN0aW9uKGUsdCl7dGhpcy5fdD1zKGUpLHRoaXMuX2k9MCx0aGlzLl9rPXR9LGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdCx0PXRoaXMuX2sscj10aGlzLl9pKys7cmV0dXJuIWV8fHI+PWUubGVuZ3RoPyh0aGlzLl90PXZvaWQgMCxvKDEpKTpvKDAsImtleXMiPT10P3I6InZhbHVlcyI9PXQ/ZVtyXTpbcixlW3JdXSl9LCJ2YWx1ZXMiKSxpLkFyZ3VtZW50cz1pLkFycmF5LG4oImtleXMiKSxuKCJ2YWx1ZXMiKSxuKCJlbnRyaWVzIil9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7fX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dmFsdWU6dCxkb25lOiEhZX19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigwKSxvPW4uSlNPTnx8KG4uSlNPTj17c3RyaW5naWZ5OkpTT04uc3RyaW5naWZ5fSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvLnN0cmluZ2lmeS5hcHBseShvLGFyZ3VtZW50cyl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyMykoIm1ldGEiKSxvPXIoNyksaT1yKDEwKSxzPXIoOCkuZixhPTAsdT1PYmplY3QuaXNFeHRlbnNpYmxlfHxmdW5jdGlvbigpe3JldHVybiEwfSxjPSFyKDEzKShmdW5jdGlvbigpe3JldHVybiB1KE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpfSksbD1mdW5jdGlvbihlKXtzKGUsbix7dmFsdWU6e2k6Ik8iKyArK2Esdzp7fX19KX0sZD1lLmV4cG9ydHM9e0tFWTpuLE5FRUQ6ITEsZmFzdEtleTpmdW5jdGlvbihlLHQpe2lmKCFvKGUpKXJldHVybiJzeW1ib2wiPT10eXBlb2YgZT9lOigic3RyaW5nIj09dHlwZW9mIGU/IlMiOiJQIikrZTtpZighaShlLG4pKXtpZighdShlKSlyZXR1cm4iRiI7aWYoIXQpcmV0dXJuIkUiO2woZSl9cmV0dXJuIGVbbl0uaX0sZ2V0V2VhazpmdW5jdGlvbihlLHQpe2lmKCFpKGUsbikpe2lmKCF1KGUpKXJldHVybiEwO2lmKCF0KXJldHVybiExO2woZSl9cmV0dXJuIGVbbl0ud30sb25GcmVlemU6ZnVuY3Rpb24oZSl7cmV0dXJuIGMmJmQuTkVFRCYmdShlKSYmIWkoZSxuKSYmbChlKSxlfX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cigxMTkpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoODApLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7cig1Mikscig1NCksZS5leHBvcnRzPXIoNDApLmYoIml0ZXJhdG9yIil9LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig4MiksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtyKDgzKSxyKDYwKSxyKDg3KSxyKDg4KSxlLmV4cG9ydHM9cigwKS5TeW1ib2x9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cigxKSxvPXIoMTApLGk9cig0KSxzPXIoNiksYT1yKDUwKSx1PXIoNzcpLktFWSxjPXIoMTMpLGw9cigzNiksZD1yKDI2KSxmPXIoMjMpLHA9cigyKSx5PXIoNDApLHY9cig0MSksaD1yKDg0KSxiPXIoODUpLF89cig5KSxtPXIoNyksZz1yKDEyKSxPPXIoMjcpLHc9cigxNiksaj1yKDM4KSxrPXIoODYpLFI9cig0NiksTD1yKDgpLHg9cigyMCksUD1SLmYsQz1MLmYsUz1rLmYsTT1uLlN5bWJvbCxVPW4uSlNPTixEPVUmJlUuc3RyaW5naWZ5LEU9cCgiX2hpZGRlbiIpLFQ9cCgidG9QcmltaXRpdmUiKSxJPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLEg9bCgic3ltYm9sLXJlZ2lzdHJ5IiksQT1sKCJzeW1ib2xzIiksTj1sKCJvcC1zeW1ib2xzIiksRj1PYmplY3QucHJvdG90eXBlLEI9ImZ1bmN0aW9uIj09dHlwZW9mIE0sVj1uLlFPYmplY3Qsej0hVnx8IVYucHJvdG90eXBlfHwhVi5wcm90b3R5cGUuZmluZENoaWxkLEc9aSYmYyhmdW5jdGlvbigpe3JldHVybiA3IT1qKEMoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gQyh0aGlzLCJhIix7dmFsdWU6N30pLmF9fSkpLmF9KT9mdW5jdGlvbihlLHQscil7dmFyIG49UChGLHQpO24mJmRlbGV0ZSBGW3RdLEMoZSx0LHIpLG4mJmUhPT1GJiZDKEYsdCxuKX06QyxxPWZ1bmN0aW9uKGUpe3ZhciB0PUFbZV09aihNLnByb3RvdHlwZSk7cmV0dXJuIHQuX2s9ZSx0fSxKPUImJiJzeW1ib2wiPT10eXBlb2YgTS5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4ic3ltYm9sIj09dHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgTX0sWj1mdW5jdGlvbihlLHQscil7cmV0dXJuIGU9PT1GJiZaKE4sdCxyKSxfKGUpLHQ9Tyh0LCEwKSxfKHIpLG8oQSx0KT8oci5lbnVtZXJhYmxlPyhvKGUsRSkmJmVbRV1bdF0mJihlW0VdW3RdPSExKSxyPWoocix7ZW51bWVyYWJsZTp3KDAsITEpfSkpOihvKGUsRSl8fEMoZSxFLHcoMSx7fSkpLGVbRV1bdF09ITApLEcoZSx0LHIpKTpDKGUsdCxyKX0sVz1mdW5jdGlvbihlLHQpe18oZSk7Zm9yKHZhciByLG49aCh0PWcodCkpLG89MCxpPW4ubGVuZ3RoO2k+bzspWihlLHI9bltvKytdLHRbcl0pO3JldHVybiBlfSxZPWZ1bmN0aW9uKGUpe3ZhciB0PUkuY2FsbCh0aGlzLGU9TyhlLCEwKSk7cmV0dXJuISh0aGlzPT09RiYmbyhBLGUpJiYhbyhOLGUpKSYmKCEodHx8IW8odGhpcyxlKXx8IW8oQSxlKXx8byh0aGlzLEUpJiZ0aGlzW0VdW2VdKXx8dCl9LEs9ZnVuY3Rpb24oZSx0KXtpZihlPWcoZSksdD1PKHQsITApLGUhPT1GfHwhbyhBLHQpfHxvKE4sdCkpe3ZhciByPVAoZSx0KTtyZXR1cm4hcnx8IW8oQSx0KXx8byhlLEUpJiZlW0VdW3RdfHwoci5lbnVtZXJhYmxlPSEwKSxyfX0sJD1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1TKGcoZSkpLG49W10saT0wO3IubGVuZ3RoPmk7KW8oQSx0PXJbaSsrXSl8fHQ9PUV8fHQ9PXV8fG4ucHVzaCh0KTtyZXR1cm4gbn0sWD1mdW5jdGlvbihlKXtmb3IodmFyIHQscj1lPT09RixuPVMocj9OOmcoZSkpLGk9W10scz0wO24ubGVuZ3RoPnM7KSFvKEEsdD1uW3MrK10pfHxyJiYhbyhGLHQpfHxpLnB1c2goQVt0XSk7cmV0dXJuIGl9O0J8fChhKChNPWZ1bmN0aW9uKCl7aWYodGhpcyBpbnN0YW5jZW9mIE0pdGhyb3cgVHlwZUVycm9yKCJTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3IhIik7dmFyIGU9Zihhcmd1bWVudHMubGVuZ3RoPjA/YXJndW1lbnRzWzBdOnZvaWQgMCksdD1mdW5jdGlvbihyKXt0aGlzPT09RiYmdC5jYWxsKE4sciksbyh0aGlzLEUpJiZvKHRoaXNbRV0sZSkmJih0aGlzW0VdW2VdPSExKSxHKHRoaXMsZSx3KDEscikpfTtyZXR1cm4gaSYmeiYmRyhGLGUse2NvbmZpZ3VyYWJsZTohMCxzZXQ6dH0pLHEoZSl9KS5wcm90b3R5cGUsInRvU3RyaW5nIixmdW5jdGlvbigpe3JldHVybiB0aGlzLl9rfSksUi5mPUssTC5mPVoscig1NykuZj1rLmY9JCxyKDI5KS5mPVkscig0MykuZj1YLGkmJiFyKDE1KSYmYShGLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsWSwhMCkseS5mPWZ1bmN0aW9uKGUpe3JldHVybiBxKHAoZSkpfSkscyhzLkcrcy5XK3MuRiohQix7U3ltYm9sOk19KTtmb3IodmFyIFE9Imhhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzIi5zcGxpdCgiLCIpLGVlPTA7US5sZW5ndGg+ZWU7KXAoUVtlZSsrXSk7Zm9yKHZhciB0ZT14KHAuc3RvcmUpLHJlPTA7dGUubGVuZ3RoPnJlOyl2KHRlW3JlKytdKTtzKHMuUytzLkYqIUIsIlN5bWJvbCIse2ZvcjpmdW5jdGlvbihlKXtyZXR1cm4gbyhILGUrPSIiKT9IW2VdOkhbZV09TShlKX0sa2V5Rm9yOmZ1bmN0aW9uKGUpe2lmKCFKKGUpKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgc3ltYm9sISIpO2Zvcih2YXIgdCBpbiBIKWlmKEhbdF09PT1lKXJldHVybiB0fSx1c2VTZXR0ZXI6ZnVuY3Rpb24oKXt6PSEwfSx1c2VTaW1wbGU6ZnVuY3Rpb24oKXt6PSExfX0pLHMocy5TK3MuRiohQiwiT2JqZWN0Iix7Y3JlYXRlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PXQ/aihlKTpXKGooZSksdCl9LGRlZmluZVByb3BlcnR5OlosZGVmaW5lUHJvcGVydGllczpXLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjpLLGdldE93blByb3BlcnR5TmFtZXM6JCxnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6WH0pLFUmJnMocy5TK3MuRiooIUJ8fGMoZnVuY3Rpb24oKXt2YXIgZT1NKCk7cmV0dXJuIltudWxsXSIhPUQoW2VdKXx8Int9IiE9RCh7YTplfSl8fCJ7fSIhPUQoT2JqZWN0KGUpKX0pKSwiSlNPTiIse3N0cmluZ2lmeTpmdW5jdGlvbihlKXtmb3IodmFyIHQscixuPVtlXSxvPTE7YXJndW1lbnRzLmxlbmd0aD5vOyluLnB1c2goYXJndW1lbnRzW28rK10pO2lmKHI9dD1uWzFdLChtKHQpfHx2b2lkIDAhPT1lKSYmIUooZSkpcmV0dXJuIGIodCl8fCh0PWZ1bmN0aW9uKGUsdCl7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHImJih0PXIuY2FsbCh0aGlzLGUsdCkpLCFKKHQpKXJldHVybiB0fSksblsxXT10LEQuYXBwbHkoVSxuKX19KSxNLnByb3RvdHlwZVtUXXx8cigxMSkoTS5wcm90b3R5cGUsVCxNLnByb3RvdHlwZS52YWx1ZU9mKSxkKE0sIlN5bWJvbCIpLGQoTWF0aCwiTWF0aCIsITApLGQobi5KU09OLCJKU09OIiwhMCl9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIwKSxvPXIoNDMpLGk9cigyOSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PW4oZSkscj1vLmY7aWYocilmb3IodmFyIHMsYT1yKGUpLHU9aS5mLGM9MDthLmxlbmd0aD5jOyl1LmNhbGwoZSxzPWFbYysrXSkmJnQucHVzaChzKTtyZXR1cm4gdH19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIxKTtlLmV4cG9ydHM9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIkFycmF5Ij09bihlKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEyKSxvPXIoNTcpLmYsaT17fS50b1N0cmluZyxzPSJvYmplY3QiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzP09iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdyk6W107ZS5leHBvcnRzLmY9ZnVuY3Rpb24oZSl7cmV0dXJuIHMmJiJbb2JqZWN0IFdpbmRvd10iPT1pLmNhbGwoZSk/ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiBvKGUpfWNhdGNoKGUpe3JldHVybiBzLnNsaWNlKCl9fShlKTpvKG4oZSkpfX0sZnVuY3Rpb24oZSx0LHIpe3IoNDEpKCJhc3luY0l0ZXJhdG9yIil9LGZ1bmN0aW9uKGUsdCxyKXtyKDQxKSgib2JzZXJ2YWJsZSIpfSxmdW5jdGlvbihlLHQscil7cig5MCksZS5leHBvcnRzPXIoMCkuT2JqZWN0LmtleXN9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMyKSxvPXIoMjApO3IoNDQpKCJrZXlzIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbyhuKGUpKX19KX0sZnVuY3Rpb24oZSx0LHIpe3IoOTIpLGUuZXhwb3J0cz1yKDApLk9iamVjdC5nZXRQcm90b3R5cGVPZn0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzIpLG89cig1Myk7cig0NCkoImdldFByb3RvdHlwZU9mIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbyhuKGUpKX19KX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDk0KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoOTUpLGUuZXhwb3J0cz1yKDApLk9iamVjdC5zZXRQcm90b3R5cGVPZn0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNik7bihuLlMsIk9iamVjdCIse3NldFByb3RvdHlwZU9mOnIoOTYpLnNldH0pfSxmdW5jdGlvbihlLHQscil7dmFyIG49cig3KSxvPXIoOSksaT1mdW5jdGlvbihlLHQpe2lmKG8oZSksIW4odCkmJm51bGwhPT10KXRocm93IFR5cGVFcnJvcih0KyI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhIil9O2UuZXhwb3J0cz17c2V0Ok9iamVjdC5zZXRQcm90b3R5cGVPZnx8KCJfX3Byb3RvX18iaW57fT9mdW5jdGlvbihlLHQsbil7dHJ5eyhuPXIoMTQpKEZ1bmN0aW9uLmNhbGwscig0NikuZihPYmplY3QucHJvdG90eXBlLCJfX3Byb3RvX18iKS5zZXQsMikpKGUsW10pLHQ9IShlIGluc3RhbmNlb2YgQXJyYXkpfWNhdGNoKGUpe3Q9ITB9cmV0dXJuIGZ1bmN0aW9uKGUscil7cmV0dXJuIGkoZSxyKSx0P2UuX19wcm90b19fPXI6bihlLHIpLGV9fSh7fSwhMSk6dm9pZCAwKSxjaGVjazppfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDk4KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoOTkpO3ZhciBuPXIoMCkuT2JqZWN0O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBuLmNyZWF0ZShlLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNik7bihuLlMsIk9iamVjdCIse2NyZWF0ZTpyKDM4KX0pfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXQuX19lc01vZHVsZT0hMDt2YXIgbz1uKHIoMjUpKSxpPW4ocigxMjUpKTt0LmRlZmF1bHQ9ZnVuY3Rpb24gZSh0LHIsbil7bnVsbD09PXQmJih0PUZ1bmN0aW9uLnByb3RvdHlwZSk7dmFyIHM9KDAsaS5kZWZhdWx0KSh0LHIpO2lmKHZvaWQgMD09PXMpe3ZhciBhPSgwLG8uZGVmYXVsdCkodCk7cmV0dXJuIG51bGw9PT1hP3ZvaWQgMDplKGEscixuKX1pZigidmFsdWUiaW4gcylyZXR1cm4gcy52YWx1ZTt2YXIgdT1zLmdldDtyZXR1cm4gdm9pZCAwIT09dT91LmNhbGwobik6dm9pZCAwfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNjMpLG89cigyKSgiaXRlcmF0b3IiKSxpPXIoMTcpO2UuZXhwb3J0cz1yKDApLmdldEl0ZXJhdG9yTWV0aG9kPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMCE9ZSlyZXR1cm4gZVtvXXx8ZVsiQEBpdGVyYXRvciJdfHxpW24oZSldfX0sZnVuY3Rpb24oZSx0LHIpe3IoNjApLHIoNTIpLHIoNTQpLHIoMTAzKSxyKDExNCkscigxMTUpLGUuZXhwb3J0cz1yKDApLlByb21pc2V9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG4sbyxpLHMsYT1yKDE1KSx1PXIoMSksYz1yKDE0KSxsPXIoNjMpLGQ9cig2KSxmPXIoNykscD1yKDI0KSx5PXIoMTA0KSx2PXIoMTA1KSxoPXIoNjYpLGI9cig2Nykuc2V0LF89cigxMDkpKCksbT1yKDUxKSxnPXIoNjgpLE89cigxMTApLHc9cig2OSksaj11LlR5cGVFcnJvcixrPXUucHJvY2VzcyxSPWsmJmsudmVyc2lvbnMsTD1SJiZSLnY4fHwiIix4PXUuUHJvbWlzZSxQPSJwcm9jZXNzIj09bChrKSxDPWZ1bmN0aW9uKCl7fSxTPW89bS5mLE09ISFmdW5jdGlvbigpe3RyeXt2YXIgZT14LnJlc29sdmUoMSksdD0oZS5jb25zdHJ1Y3Rvcj17fSlbcigyKSgic3BlY2llcyIpXT1mdW5jdGlvbihlKXtlKEMsQyl9O3JldHVybihQfHwiZnVuY3Rpb24iPT10eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50KSYmZS50aGVuKEMpaW5zdGFuY2VvZiB0JiYwIT09TC5pbmRleE9mKCI2LjYiKSYmLTE9PT1PLmluZGV4T2YoIkNocm9tZS82NiIpfWNhdGNoKGUpe319KCksVT1mdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4hKCFmKGUpfHwiZnVuY3Rpb24iIT10eXBlb2YodD1lLnRoZW4pKSYmdH0sRD1mdW5jdGlvbihlLHQpe2lmKCFlLl9uKXtlLl9uPSEwO3ZhciByPWUuX2M7XyhmdW5jdGlvbigpe2Zvcih2YXIgbj1lLl92LG89MT09ZS5fcyxpPTA7ci5sZW5ndGg+aTspIWZ1bmN0aW9uKHQpe3ZhciByLGkscyxhPW8/dC5vazp0LmZhaWwsdT10LnJlc29sdmUsYz10LnJlamVjdCxsPXQuZG9tYWluO3RyeXthPyhvfHwoMj09ZS5faCYmSShlKSxlLl9oPTEpLCEwPT09YT9yPW46KGwmJmwuZW50ZXIoKSxyPWEobiksbCYmKGwuZXhpdCgpLHM9ITApKSxyPT09dC5wcm9taXNlP2MoaigiUHJvbWlzZS1jaGFpbiBjeWNsZSIpKTooaT1VKHIpKT9pLmNhbGwocix1LGMpOnUocikpOmMobil9Y2F0Y2goZSl7bCYmIXMmJmwuZXhpdCgpLGMoZSl9fShyW2krK10pO2UuX2M9W10sZS5fbj0hMSx0JiYhZS5faCYmRShlKX0pfX0sRT1mdW5jdGlvbihlKXtiLmNhbGwodSxmdW5jdGlvbigpe3ZhciB0LHIsbixvPWUuX3YsaT1UKGUpO2lmKGkmJih0PWcoZnVuY3Rpb24oKXtQP2suZW1pdCgidW5oYW5kbGVkUmVqZWN0aW9uIixvLGUpOihyPXUub251bmhhbmRsZWRyZWplY3Rpb24pP3Ioe3Byb21pc2U6ZSxyZWFzb246b30pOihuPXUuY29uc29sZSkmJm4uZXJyb3ImJm4uZXJyb3IoIlVuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbiIsbyl9KSxlLl9oPVB8fFQoZSk/MjoxKSxlLl9hPXZvaWQgMCxpJiZ0LmUpdGhyb3cgdC52fSl9LFQ9ZnVuY3Rpb24oZSl7cmV0dXJuIDEhPT1lLl9oJiYwPT09KGUuX2F8fGUuX2MpLmxlbmd0aH0sST1mdW5jdGlvbihlKXtiLmNhbGwodSxmdW5jdGlvbigpe3ZhciB0O1A/ay5lbWl0KCJyZWplY3Rpb25IYW5kbGVkIixlKToodD11Lm9ucmVqZWN0aW9uaGFuZGxlZCkmJnQoe3Byb21pc2U6ZSxyZWFzb246ZS5fdn0pfSl9LEg9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9kfHwodC5fZD0hMCwodD10Ll93fHx0KS5fdj1lLHQuX3M9Mix0Ll9hfHwodC5fYT10Ll9jLnNsaWNlKCkpLEQodCwhMCkpfSxBPWZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcztpZighci5fZCl7ci5fZD0hMCxyPXIuX3d8fHI7dHJ5e2lmKHI9PT1lKXRocm93IGooIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmIik7KHQ9VShlKSk/XyhmdW5jdGlvbigpe3ZhciBuPXtfdzpyLF9kOiExfTt0cnl7dC5jYWxsKGUsYyhBLG4sMSksYyhILG4sMSkpfWNhdGNoKGUpe0guY2FsbChuLGUpfX0pOihyLl92PWUsci5fcz0xLEQociwhMSkpfWNhdGNoKGUpe0guY2FsbCh7X3c6cixfZDohMX0sZSl9fX07TXx8KHg9ZnVuY3Rpb24oZSl7eSh0aGlzLHgsIlByb21pc2UiLCJfaCIpLHAoZSksbi5jYWxsKHRoaXMpO3RyeXtlKGMoQSx0aGlzLDEpLGMoSCx0aGlzLDEpKX1jYXRjaChlKXtILmNhbGwodGhpcyxlKX19LChuPWZ1bmN0aW9uKGUpe3RoaXMuX2M9W10sdGhpcy5fYT12b2lkIDAsdGhpcy5fcz0wLHRoaXMuX2Q9ITEsdGhpcy5fdj12b2lkIDAsdGhpcy5faD0wLHRoaXMuX249ITF9KS5wcm90b3R5cGU9cigxMTEpKHgucHJvdG90eXBlLHt0aGVuOmZ1bmN0aW9uKGUsdCl7dmFyIHI9UyhoKHRoaXMseCkpO3JldHVybiByLm9rPSJmdW5jdGlvbiIhPXR5cGVvZiBlfHxlLHIuZmFpbD0iZnVuY3Rpb24iPT10eXBlb2YgdCYmdCxyLmRvbWFpbj1QP2suZG9tYWluOnZvaWQgMCx0aGlzLl9jLnB1c2gociksdGhpcy5fYSYmdGhpcy5fYS5wdXNoKHIpLHRoaXMuX3MmJkQodGhpcywhMSksci5wcm9taXNlfSxjYXRjaDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCxlKX19KSxpPWZ1bmN0aW9uKCl7dmFyIGU9bmV3IG47dGhpcy5wcm9taXNlPWUsdGhpcy5yZXNvbHZlPWMoQSxlLDEpLHRoaXMucmVqZWN0PWMoSCxlLDEpfSxtLmY9Uz1mdW5jdGlvbihlKXtyZXR1cm4gZT09PXh8fGU9PT1zP25ldyBpKGUpOm8oZSl9KSxkKGQuRytkLlcrZC5GKiFNLHtQcm9taXNlOnh9KSxyKDI2KSh4LCJQcm9taXNlIikscigxMTIpKCJQcm9taXNlIikscz1yKDApLlByb21pc2UsZChkLlMrZC5GKiFNLCJQcm9taXNlIix7cmVqZWN0OmZ1bmN0aW9uKGUpe3ZhciB0PVModGhpcyk7cmV0dXJuKDAsdC5yZWplY3QpKGUpLHQucHJvbWlzZX19KSxkKGQuUytkLkYqKGF8fCFNKSwiUHJvbWlzZSIse3Jlc29sdmU6ZnVuY3Rpb24oZSl7cmV0dXJuIHcoYSYmdGhpcz09PXM/eDp0aGlzLGUpfX0pLGQoZC5TK2QuRiohKE0mJnIoMTEzKShmdW5jdGlvbihlKXt4LmFsbChlKS5jYXRjaChDKX0pKSwiUHJvbWlzZSIse2FsbDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9Uyh0KSxuPXIucmVzb2x2ZSxvPXIucmVqZWN0LGk9ZyhmdW5jdGlvbigpe3ZhciByPVtdLGk9MCxzPTE7dihlLCExLGZ1bmN0aW9uKGUpe3ZhciBhPWkrKyx1PSExO3IucHVzaCh2b2lkIDApLHMrKyx0LnJlc29sdmUoZSkudGhlbihmdW5jdGlvbihlKXt1fHwodT0hMCxyW2FdPWUsLS1zfHxuKHIpKX0sbyl9KSwtLXN8fG4ocil9KTtyZXR1cm4gaS5lJiZvKGkudiksci5wcm9taXNlfSxyYWNlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1TKHQpLG49ci5yZWplY3Qsbz1nKGZ1bmN0aW9uKCl7dihlLCExLGZ1bmN0aW9uKGUpe3QucmVzb2x2ZShlKS50aGVuKHIucmVzb2x2ZSxuKX0pfSk7cmV0dXJuIG8uZSYmbihvLnYpLHIucHJvbWlzZX19KX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbil7aWYoIShlIGluc3RhbmNlb2YgdCl8fHZvaWQgMCE9PW4mJm4gaW4gZSl0aHJvdyBUeXBlRXJyb3IocisiOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEiKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDE0KSxvPXIoMTA2KSxpPXIoMTA3KSxzPXIoOSksYT1yKDQ5KSx1PXIoMTAxKSxjPXt9LGw9e307KHQ9ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLGQsZil7dmFyIHAseSx2LGgsYj1mP2Z1bmN0aW9uKCl7cmV0dXJuIGV9OnUoZSksXz1uKHIsZCx0PzI6MSksbT0wO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBiKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGl0ZXJhYmxlISIpO2lmKGkoYikpe2ZvcihwPWEoZS5sZW5ndGgpO3A+bTttKyspaWYoKGg9dD9fKHMoeT1lW21dKVswXSx5WzFdKTpfKGVbbV0pKT09PWN8fGg9PT1sKXJldHVybiBofWVsc2UgZm9yKHY9Yi5jYWxsKGUpOyEoeT12Lm5leHQoKSkuZG9uZTspaWYoKGg9byh2LF8seS52YWx1ZSx0KSk9PT1jfHxoPT09bClyZXR1cm4gaH0pLkJSRUFLPWMsdC5SRVRVUk49bH0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG8pe3RyeXtyZXR1cm4gbz90KG4ocilbMF0sclsxXSk6dChyKX1jYXRjaCh0KXt2YXIgaT1lLnJldHVybjt0aHJvdyB2b2lkIDAhPT1pJiZuKGkuY2FsbChlKSksdH19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxNyksbz1yKDIpKCJpdGVyYXRvciIpLGk9QXJyYXkucHJvdG90eXBlO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09ZSYmKG4uQXJyYXk9PT1lfHxpW29dPT09ZSl9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7dmFyIG49dm9pZCAwPT09cjtzd2l0Y2godC5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbj9lKCk6ZS5jYWxsKHIpO2Nhc2UgMTpyZXR1cm4gbj9lKHRbMF0pOmUuY2FsbChyLHRbMF0pO2Nhc2UgMjpyZXR1cm4gbj9lKHRbMF0sdFsxXSk6ZS5jYWxsKHIsdFswXSx0WzFdKTtjYXNlIDM6cmV0dXJuIG4/ZSh0WzBdLHRbMV0sdFsyXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0pO2Nhc2UgNDpyZXR1cm4gbj9lKHRbMF0sdFsxXSx0WzJdLHRbM10pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdLHRbM10pfXJldHVybiBlLmFwcGx5KHIsdCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKSxvPXIoNjcpLnNldCxpPW4uTXV0YXRpb25PYnNlcnZlcnx8bi5XZWJLaXRNdXRhdGlvbk9ic2VydmVyLHM9bi5wcm9jZXNzLGE9bi5Qcm9taXNlLHU9InByb2Nlc3MiPT1yKDIxKShzKTtlLmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgZSx0LHIsYz1mdW5jdGlvbigpe3ZhciBuLG87Zm9yKHUmJihuPXMuZG9tYWluKSYmbi5leGl0KCk7ZTspe289ZS5mbixlPWUubmV4dDt0cnl7bygpfWNhdGNoKG4pe3Rocm93IGU/cigpOnQ9dm9pZCAwLG59fXQ9dm9pZCAwLG4mJm4uZW50ZXIoKX07aWYodSlyPWZ1bmN0aW9uKCl7cy5uZXh0VGljayhjKX07ZWxzZSBpZighaXx8bi5uYXZpZ2F0b3ImJm4ubmF2aWdhdG9yLnN0YW5kYWxvbmUpaWYoYSYmYS5yZXNvbHZlKXt2YXIgbD1hLnJlc29sdmUodm9pZCAwKTtyPWZ1bmN0aW9uKCl7bC50aGVuKGMpfX1lbHNlIHI9ZnVuY3Rpb24oKXtvLmNhbGwobixjKX07ZWxzZXt2YXIgZD0hMCxmPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCIiKTtuZXcgaShjKS5vYnNlcnZlKGYse2NoYXJhY3RlckRhdGE6ITB9KSxyPWZ1bmN0aW9uKCl7Zi5kYXRhPWQ9IWR9fXJldHVybiBmdW5jdGlvbihuKXt2YXIgbz17Zm46bixuZXh0OnZvaWQgMH07dCYmKHQubmV4dD1vKSxlfHwoZT1vLHIoKSksdD1vfX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEpLm5hdmlnYXRvcjtlLmV4cG9ydHM9biYmbi51c2VyQWdlbnR8fCIifSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtmb3IodmFyIG8gaW4gdClyJiZlW29dP2Vbb109dFtvXTpuKGUsbyx0W29dKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cigxKSxvPXIoMCksaT1yKDgpLHM9cig0KSxhPXIoMikoInNwZWNpZXMiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9ImZ1bmN0aW9uIj09dHlwZW9mIG9bZV0/b1tlXTpuW2VdO3MmJnQmJiF0W2FdJiZpLmYodCxhLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyKSgiaXRlcmF0b3IiKSxvPSExO3RyeXt2YXIgaT1bN11bbl0oKTtpLnJldHVybj1mdW5jdGlvbigpe289ITB9LEFycmF5LmZyb20oaSxmdW5jdGlvbigpe3Rocm93IDJ9KX1jYXRjaChlKXt9ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIXQmJiFvKXJldHVybiExO3ZhciByPSExO3RyeXt2YXIgaT1bN10scz1pW25dKCk7cy5uZXh0PWZ1bmN0aW9uKCl7cmV0dXJue2RvbmU6cj0hMH19LGlbbl09ZnVuY3Rpb24oKXtyZXR1cm4gc30sZShpKX1jYXRjaChlKXt9cmV0dXJuIHJ9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoNiksbz1yKDApLGk9cigxKSxzPXIoNjYpLGE9cig2OSk7bihuLlArbi5SLCJQcm9taXNlIix7ZmluYWxseTpmdW5jdGlvbihlKXt2YXIgdD1zKHRoaXMsby5Qcm9taXNlfHxpLlByb21pc2UpLHI9ImZ1bmN0aW9uIj09dHlwZW9mIGU7cmV0dXJuIHRoaXMudGhlbihyP2Z1bmN0aW9uKHIpe3JldHVybiBhKHQsZSgpKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHJ9KX06ZSxyP2Z1bmN0aW9uKHIpe3JldHVybiBhKHQsZSgpKS50aGVuKGZ1bmN0aW9uKCl7dGhyb3cgcn0pfTplKX19KX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDYpLG89cig1MSksaT1yKDY4KTtuKG4uUywiUHJvbWlzZSIse3RyeTpmdW5jdGlvbihlKXt2YXIgdD1vLmYodGhpcykscj1pKGUpO3JldHVybihyLmU/dC5yZWplY3Q6dC5yZXNvbHZlKShyLnYpLHQucHJvbWlzZX19KX0sLGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuT2JqZWN0VHlwZT10LkNoYW5nZVR5cGU9dm9pZCAwO3ZhciBvPW4ocigzKSksaT1uKHIoNSkpO3IoMTIzKTt2YXIgcz1yKDE5KSxhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXsoMCxvLmRlZmF1bHQpKHRoaXMsZSk7dGhpcy5fb2JzZXJ2ZXJzPVtdLHRoaXMuX2ZpbHRlcnM9e30sdGhpcy5fZGF0YT10fHx7fSx0aGlzLl9pbnRlcm5hbE9ic2VydmUodGhpcy5fZGF0YSl9cmV0dXJuKDAsaS5kZWZhdWx0KShlLFt7a2V5OiJvYnNlcnZlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vYnNlcnZlcnMucHVzaChlKX19LHtrZXk6ImZpbmQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PSgwLHMucGFyc2VBdHRyaWJ1dGVzKShlKTtyZXR1cm4gdGhpcy5fZmluZFdpdGhTcGxpdCh0KX19LHtrZXk6ImZpbmRCZWZvcmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXt9LHI9KDAscy5wYXJzZUF0dHJpYnV0ZXMpKGUpO3JldHVybiB0Lmxhc3Q9ci5wb3AoKSx0Lm9iaj10aGlzLl9maW5kV2l0aFNwbGl0KHIpLHR9fSx7a2V5OiJfZmluZFdpdGhTcGxpdCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZGF0YTtyZXR1cm4gZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3Q9dFtlXX0pLHR9fSx7a2V5OiJfaW50ZXJuYWxPYnNlcnZlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3RoaXMuX2RhdGE9T2JqZWN0LmRlZXBPYnNlcnZlKGUsZnVuY3Rpb24oZSl7ZS5ldmVyeShmdW5jdGlvbihlKXt0Ll9vbkNoYW5nZXMoZSl9KX0pfX0se2tleToiX2ZpcmVFdmVudCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb2JzZXJ2ZXJzLmZvckVhY2goZnVuY3Rpb24odCl7dChlKX0pfX0se2tleToiX29uQ2hhbmdlcyIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5vYmplY3Qscj12b2lkIDA7dC5jb25zdHJ1Y3Rvcj09PU9iamVjdCYmKHI9Yy5PQkpFQ1QpLHQuY29uc3RydWN0b3I9PT1BcnJheSYmKHI9Yy5BUlJBWSk7dmFyIG49ZS5rZXlwYXRoLG89dFtlLm5hbWVdOyJ1cGRhdGUiIT09ZS50eXBlfHxuLmluY2x1ZGVzKCIubGVuZ3RoIil8fHRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6dS5VUERBVEUsb1R5cGU6cixmaWVsZDpuLGRhdGE6b30pLCJhZGQiPT09ZS50eXBlJiZ0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnUuQURELG9UeXBlOnIsZmllbGQ6bixkYXRhOm99KSwiZGVsZXRlIj09PWUudHlwZSYmdGhpcy5fZmlyZUV2ZW50KHtjVHlwZTp1LlJFTU9WRSxvVHlwZTpyLGZpZWxkOm59KX19LHtrZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhfX1dKSxlfSgpLHU9dC5DaGFuZ2VUeXBlPXtVUERBVEU6InVwZGF0ZSIsQUREOiJhZGQiLFJFTU9WRToicmVtb3ZlIn0sYz10Lk9iamVjdFR5cGU9e09CSkVDVDoib2JqZWN0IixBUlJBWToiYXJyYXkifTt0LmRlZmF1bHQ9YX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDE4KSksaT1uKHIoMykpLHM9bihyKDUpKSxhPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLHU9bihyKDExNykpLGM9cigxOSksbD1hLmdldExvZ2dlcigiRGF0YU9iamVjdENoaWxkIiksZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7ZnVuY3Rpb24gcihlKXt0aHJvdyJbRGF0YU9iamVjdENoaWxkXSAiK2UrIiBtYW5kYXRvcnkgcGFyYW1ldGVyIGlzIG1pc3NpbmcifSgwLGkuZGVmYXVsdCkodGhpcyxlKTt2YXIgbj10aGlzO3QucGFyZW50P24uX3BhcmVudD10LnBhcmVudDpyKCJwYXJlbnQiKSx0LnVybD9uLl91cmw9dC51cmw6cigidXJsIiksdC5jcmVhdGVkP24uX2NyZWF0ZWQ9dC5jcmVhdGVkOnIoImNyZWF0ZWQiKSx0LnJlcG9ydGVyP24uX3JlcG9ydGVyPXQucmVwb3J0ZXI6cigicmVwb3J0ZXIiKSx0LnJ1bnRpbWU/bi5fcnVudGltZT10LnJ1bnRpbWU6cigicnVudGltZSIpLHQuc2NoZW1hP24uX3NjaGVtYT10LnNjaGVtYTpyKCJzY2hlbWEiKSx0LnBhcmVudE9iamVjdD9uLl9wYXJlbnRPYmplY3Q9dC5wYXJlbnRPYmplY3Q6cigicGFyZW50T2JqZWN0IiksdC5uYW1lJiYobi5fbmFtZT10Lm5hbWUpLHQuZGVzY3JpcHRpb24mJihuLl9kZXNjcmlwdGlvbj10LmRlc2NyaXB0aW9uKSx0LnRhZ3MmJihuLl90YWdzPXQudGFncyksdC5yZXNvdXJjZXMmJihuLl9yZXNvdXJjZXM9dC5yZXNvdXJjZXMpLHQub2JzZXJ2ZXJTdG9yYWdlJiYobi5fb2JzZXJ2ZXJTdG9yYWdlPXQub2JzZXJ2ZXJTdG9yYWdlKSx0LnB1YmxpY09ic2VydmF0aW9uJiYobi5fcHVibGljT2JzZXJ2YXRpb249dC5wdWJsaWNPYnNlcnZhdGlvbiksbi5fY2hpbGRJZD10LnVybCx0LmRhdGE/bi5fc3luY09iaj1uZXcgdS5kZWZhdWx0KHQuZGF0YSk6bi5fc3luY09iaj1uZXcgdS5kZWZhdWx0KHt9KSxsLmxvZygiW0RhdGFPYmplY3RDaGlsZCAtICBDb25zdHJ1Y3Rvcl0gLSAiLG4uX3N5bmNPYmopLG4uX2J1cz1uLl9wYXJlbnRPYmplY3QuX2J1cyxuLl9vd25lcj1uLl9wYXJlbnRPYmplY3QuX293bmVyLG4uX2FsbG9jYXRlTGlzdGVuZXJzKCksbi5fbWV0YWRhdGE9dCxkZWxldGUgbi5fbWV0YWRhdGEucGFyZW50T2JqZWN0LG4uX3NoYXJpbmdTdGF0dXM9ITF9cmV0dXJuKDAscy5kZWZhdWx0KShlLFt7a2V5OiJzaGFyZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9zaGFyaW5nU3RhdHVzPW5ldyBvLmRlZmF1bHQoZnVuY3Rpb24ocixuKXt2YXIgbztvPWU/dC5tZXRhZGF0YS5wYXJlbnQ6dC5tZXRhZGF0YS5wYXJlbnQrIi9jaGlsZHJlbi8iK3QubWV0YWRhdGEuY2hpbGRyZW47dmFyIGk9dC5tZXRhZGF0YTtpLmRhdGE9dC5kYXRhO3ZhciBzPXt0eXBlOiJjcmVhdGUiLGZyb206dC5tZXRhZGF0YS5yZXBvcnRlcix0bzpvLGJvZHk6e3Jlc291cmNlOmkudXJsLHZhbHVlOml9fTtpZih0LmlkZW50aXR5JiYocy5ib2R5LmlkZW50aXR5PXQuaWRlbnRpdHkpLHQuX3BhcmVudE9iamVjdC5kYXRhLmhhc093blByb3BlcnR5KCJtdXR1YWwiKSYmKHMuYm9keS5tdXR1YWw9dC5fcGFyZW50T2JqZWN0LmRhdGEubXV0dWFsKSx0Ll9wYXJlbnRPYmplY3QubWV0YWRhdGEucmVwb3J0ZXI9PT10Lm1ldGFkYXRhLnJlcG9ydGVyKXJldHVybiB0Ll9idXMucG9zdE1lc3NhZ2UoKDAsYy5kZWVwQ2xvbmUpKHMpKSxyKCk7dmFyIGE9dC5fYnVzLnBvc3RNZXNzYWdlKCgwLGMuZGVlcENsb25lKShzKSxmdW5jdGlvbihlKXtpZihlLnRvPT09dC5fcmVwb3J0ZXIpe3QuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHMuZnJvbSxlLmlkKSxsLmxvZygiW1N5bmNoZXIuRGF0YU9iamVjdENoaWxkLnNoYXJlXSBQYXJlbnQgcmVwb3J0ZXIgcmVwbHkgIixlKTt2YXIgbz17Y29kZTplLmJvZHkmJmUuYm9keS5jb2RlP2UuYm9keS5jb2RlOjUwMCxkZXNjOmUuYm9keSYmZS5ib2R5LmRlc2M/ZS5ib2R5LmRlc2M6IlVua25vd24ifTtyZXR1cm4gZS5ib2R5LmNvZGU8MzAwP3Iobyk6bihvKX19LCExKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIHQuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHMuZnJvbSxhKSxuKHtjb2RlOjQwOCxkZXNjOiJ0aW1vdXQifSl9LDNlMyl9KX19LHtrZXk6InN0b3JlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17fSxyPWUubWV0YWRhdGEuY2hpbGRyZW4rIi4iK2UubWV0YWRhdGEudXJsO3QudmFsdWU9ZS5tZXRhZGF0YSx0LmlkZW50aXR5PWUuaWRlbnRpdHk7dmFyIG49e2Zyb206ZS5tZXRhZGF0YS5yZXBvcnRlcix0bzplLl9wYXJlbnRPYmplY3QuX3N5bmNoZXIuX3N1YlVSTCx0eXBlOiJjcmVhdGUiLGJvZHk6e3Jlc291cmNlOmUubWV0YWRhdGEucGFyZW50LGF0dHJpYnV0ZTpyLHZhbHVlOnR9fTtsLmxvZygiW0RhdGFPYmplY3RDaGlsZC5zdG9yZV06IixuKSxlLl9idXMucG9zdE1lc3NhZ2Uobil9fSx7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9yZXBvcnRlcj09PWUuX293bmVyJiYoZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3JlcG9ydGVyLGZ1bmN0aW9uKHQpeyJyZXNwb25zZSI9PT10LnR5cGUmJnQuaWQ9PT1lLl9tc2dJZCYmKGwubG9nKCJEYXRhT2JqZWN0Q2hpbGQub25SZXNwb25zZToiLHQpLGUuX29uUmVzcG9uc2UodCkpfSkpfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fbGlzdGVuZXImJnRoaXMuX2xpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX3JlbGVhc2VMaXN0ZW5lcnMoKX19LHtrZXk6Im9uQ2hhbmdlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24odCl7bC5sb2coIltEYXRhT2JqZWN0Q2hpbGQgLSBvYnNlcnZlcl0gLSAiLHQpLGUodCl9KX19LHtrZXk6Im9uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyPWV9fSx7a2V5OiJfb25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9e3R5cGU6ZS50eXBlLHVybDplLmJvZHkuc291cmNlLGNvZGU6ZS5ib2R5LmNvZGV9O3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyJiZ0aGlzLl9vblJlc3BvbnNlSGFuZGxlcih0KX19LHtrZXk6InNoYXJlYWJsZSIsZ2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5tZXRhZGF0YTtyZXR1cm4gZS5kYXRhPXRoaXMuZGF0YSxlfX0se2tleToibWV0YWRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YX19LHtrZXk6ImNoaWxkSWQiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZElkfX0se2tleToic2hhcmluZ1N0YXR1cyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NoYXJpbmdTdGF0dXN9fSx7a2V5OiJkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3luY09iai5kYXRhfX0se2tleToiaWRlbnRpdHkiLHNldDpmdW5jdGlvbihlKXt0aGlzLl9pZGVudGl0eT1lfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faWRlbnRpdHl9fV0pLGV9KCk7dC5kZWZhdWx0PWQsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpe3IoMTIwKSxlLmV4cG9ydHM9cigwKS5PYmplY3QuYXNzaWdufSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KTtuKG4uUytuLkYsIk9iamVjdCIse2Fzc2lnbjpyKDEyMSl9KX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDIwKSxvPXIoNDMpLGk9cigyOSkscz1yKDMyKSxhPXIoNTUpLHU9T2JqZWN0LmFzc2lnbjtlLmV4cG9ydHM9IXV8fHIoMTMpKGZ1bmN0aW9uKCl7dmFyIGU9e30sdD17fSxyPVN5bWJvbCgpLG49ImFiY2RlZmdoaWprbG1ub3BxcnN0IjtyZXR1cm4gZVtyXT03LG4uc3BsaXQoIiIpLmZvckVhY2goZnVuY3Rpb24oZSl7dFtlXT1lfSksNyE9dSh7fSxlKVtyXXx8T2JqZWN0LmtleXModSh7fSx0KSkuam9pbigiIikhPW59KT9mdW5jdGlvbihlLHQpe2Zvcih2YXIgcj1zKGUpLHU9YXJndW1lbnRzLmxlbmd0aCxjPTEsbD1vLmYsZD1pLmY7dT5jOylmb3IodmFyIGYscD1hKGFyZ3VtZW50c1tjKytdKSx5PWw/bihwKS5jb25jYXQobChwKSk6bihwKSx2PXkubGVuZ3RoLGg9MDt2Pmg7KWQuY2FsbChwLGY9eVtoKytdKSYmKHJbZl09cFtmXSk7cmV0dXJuIHJ9OnV9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocig0NykpLGk9bihyKDE4KSkscz1uKHIoNDIpKSxhPW4ocig3OCkpLHU9bihyKDMpKSxjPW4ocig1KSksbD1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSxkPXIoMTE3KSxmPW4oZCkscD1uKHIoMTE4KSkseT1yKDE5KSx2PW4ocigxMjgpKSxoPWwuZ2V0TG9nZ2VyKCJEYXRhT2JqZWN0IiksYj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7ZnVuY3Rpb24gcihlKXt0aHJvdyJbRGF0YU9iamVjdF0gIitlKyIgbWFuZGF0b3J5IHBhcmFtZXRlciBpcyBtaXNzaW5nIn0oMCx1LmRlZmF1bHQpKHRoaXMsZSk7dmFyIG49dGhpczt0LnN5bmNoZXI/bi5fc3luY2hlcj10LnN5bmNoZXI6cigic3luY2hlciIpLHQudXJsP24uX3VybD10LnVybDpyKCJ1cmwiKSx0LmNyZWF0ZWQ/bi5fY3JlYXRlZD10LmNyZWF0ZWQ6cigiY3JlYXRlZCIpLHQucmVwb3J0ZXI/bi5fcmVwb3J0ZXI9dC5yZXBvcnRlcjpyKCJyZXBvcnRlciIpLHQucnVudGltZT9uLl9ydW50aW1lPXQucnVudGltZTpyKCJydW50aW1lIiksdC5zY2hlbWE/bi5fc2NoZW1hPXQuc2NoZW1hOnIoInNjaGVtYSIpLHQubmFtZT9uLl9uYW1lPXQubmFtZTpyKCJuYW1lIiksbi5fc3RhdHVzPXQuc3RhdHVzLHQuZGF0YT9uLl9zeW5jT2JqPW5ldyBmLmRlZmF1bHQodC5kYXRhKTpuLl9zeW5jT2JqPW5ldyBmLmRlZmF1bHQoe30pLG4uX2NoaWxkcmVucz10LmNoaWxkcmVucyxuLl9tdXR1YWw9dC5tdXR1YWwsbi5fdmVyc2lvbj0wLG4uX2NoaWxkSWQ9MCxuLl9jaGlsZHJlbkxpc3RlbmVycz1bXSxuLl9vbkFkZENoaWxkcmVuSGFuZGxlcixuLl9yZXN1bWVkPXQucmVzdW1lLHQucmVzdW1lJiYobi5fdmVyc2lvbj10LnZlcnNpb24pLG4uX293bmVyPXQuc3luY2hlci5fb3duZXIsbi5fYnVzPXQuc3luY2hlci5fYnVzLHQuZGVzY3JpcHRpb24mJihuLl9kZXNjcmlwdGlvbj10LmRlc2NyaXB0aW9uKSx0LnRhZ3MmJihuLl90YWdzPXQudGFncyksdC5yZXNvdXJjZXMmJihuLl9yZXNvdXJjZXM9dC5yZXNvdXJjZXMpLHQub2JzZXJ2ZXJTdG9yYWdlJiYobi5fb2JzZXJ2ZXJTdG9yYWdlPXQub2JzZXJ2ZXJTdG9yYWdlKSx0LnB1YmxpY09ic2VydmF0aW9uJiYobi5fcHVibGljT2JzZXJ2YXRpb249dC5wdWJsaWNPYnNlcnZhdGlvbiksbi5fbWV0YWRhdGE9KDAsYS5kZWZhdWx0KSh0KSwoIXQuaGFzT3duUHJvcGVydHkoInJlc3VtZSIpfHx0Lmhhc093blByb3BlcnR5KCJyZXN1bWUiKSYmIXQucmVzdW1lKSYmKG4uX21ldGFkYXRhLmxhc3RNb2RpZmllZD1uLl9tZXRhZGF0YS5jcmVhdGVkKSxkZWxldGUgbi5fbWV0YWRhdGEuZGF0YSxkZWxldGUgbi5fbWV0YWRhdGEuc3luY2hlcixkZWxldGUgbi5fbWV0YWRhdGEuYXV0aG9yaXNlLG4uX2h5cGVydHlSZXNvdXJjZUZhY3Rvcnk9bmV3IHYuZGVmYXVsdCxuLl9jaGlsZHJlbk9iamVjdHM9e30sbi5fc2hhcmVkQ2hpbGRzPVtdfXJldHVybigwLGMuZGVmYXVsdCkoZSxbe2tleToiX2dldExhc3RDaGlsZElkIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD0wLHI9ZS5fb3duZXIrIiMiK3Q7cmV0dXJuKDAscy5kZWZhdWx0KShlLl9jaGlsZHJlbnMpLmZpbHRlcihmdW5jdGlvbih0KXtlLl9jaGlsZHJlbnNbdF0uY2hpbGRJZD5yJiYocj1lLl9jaGlsZHJlbnNbdF0uY2hpbGRJZCl9KSxOdW1iZXIoci5zcGxpdCgiIyIpWzFdKX19LHtrZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcyxyPXQuX3VybCsiL2NoaWxkcmVuLyI7aC5sb2coIltEYXRhIE9iamVjdCAtIEFsbG9jYXRlTGlzdGVuZXJzXSAtICIsdC5fY2hpbGRyZW5zKSx0Ll9jaGlsZHJlbnMmJnQuX2NoaWxkcmVucy5mb3JFYWNoKGZ1bmN0aW9uKG4pe3ZhciBvPXIrbixpPXQuX2J1cy5hZGRMaXN0ZW5lcihvLGZ1bmN0aW9uKHIpe2lmKHIuZnJvbSE9PWUuX293bmVyKXN3aXRjaChoLmxvZygiRGF0YU9iamVjdC1DaGlsZHJlbi1SQ1Y6ICIsciksci50eXBlKXtjYXNlImNyZWF0ZSI6dC5fb25DaGlsZENyZWF0ZShyKTticmVhaztjYXNlImRlbGV0ZSI6aC5sb2cocik7YnJlYWs7ZGVmYXVsdDp0Ll9jaGFuZ2VDaGlsZHJlbihyKX19KTt0Ll9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGkpfSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2NoaWxkcmVuTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5yZW1vdmUoKX0pLCgwLHMuZGVmYXVsdCkoZS5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uKHQpeygwLHMuZGVmYXVsdCkoZS5fY2hpbGRyZW5PYmplY3RzW3RdKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe2UuX2NoaWxkcmVuT2JqZWN0c1t0XVtyXS5fcmVsZWFzZUxpc3RlbmVycygpfSl9KX19LHtrZXk6InJlc3VtZUNoaWxkcmVucyIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXRoaXMsbj10aGlzLl9vd25lcisiIyIrdGhpcy5fY2hpbGRJZDsoMCxzLmRlZmF1bHQpKGUpLmZvckVhY2goZnVuY3Rpb24obyl7dmFyIGk9ZVtvXTsoMCxzLmRlZmF1bHQpKGkpLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHM9ITE7ci5fY2hpbGRyZW5PYmplY3RzLmhhc093blByb3BlcnR5KG8pfHwoci5fY2hpbGRyZW5PYmplY3RzW29dPXt9KSxpW2VdLnZhbHVlLnJlc291cmNlVHlwZSYmIXIuX2NoaWxkcmVuT2JqZWN0c1tvXS5oYXNPd25Qcm9wZXJ0eShlKT8oci5fY2hpbGRyZW5PYmplY3RzW29dW2VdPXIuX3Jlc3VtZUh5cGVydHlSZXNvdXJjZShpW2VdKSxzPSEwKTpyLl9jaGlsZHJlbk9iamVjdHNbb10uaGFzT3duUHJvcGVydHkoZSl8fChyLl9jaGlsZHJlbk9iamVjdHNbb11bZV09ci5fcmVzdW1lQ2hpbGQoaVtlXSksaC5sb2coIltEYXRhT2JqZWN0LnJlc3VtZUNoaWxkcmVuc10gbmV3IERhdGFPYmplY3RDaGlsZDogIixyLl9jaGlsZHJlbk9iamVjdHNbb11bZV0pLHM9ITApLHMmJmU+biYmKG49ZSxoLmxvZygiW0RhdGFPYmplY3RSZXBvcnRlci5yZXN1bWVDaGlsZHJlbnNdIC0gcmVzdW1pbmc6ICIsdC5fY2hpbGRyZW5PYmplY3RzW29dW2VdKSl9KX0pLHRoaXMuX2NoaWxkSWQ9TnVtYmVyKG4uc3BsaXQoIiMiKVsxXSl9fSx7a2V5OiJfcmVzdW1lQ2hpbGQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLnZhbHVlO3IucGFyZW50T2JqZWN0PXQsci5wYXJlbnQ9dC5fdXJsO3ZhciBuPW5ldyBwLmRlZmF1bHQocik7bi5pZGVudGl0eT1lLmlkZW50aXR5O3ZhciBvPXt0eXBlOiJjcmVhdGUiLGZyb206bi5yZXBvcnRlcix1cmw6bi5wYXJlbnQsdmFsdWU6bi5kYXRhLGNoaWxkSWQ6bi51cmwsaWRlbnRpdHk6bi5pZGVudGl0eSxjaGlsZDpufTtyZXR1cm4gbi5yZXNvdXJjZVR5cGUmJihvLnJlc291cmNlPW4pLHQuX29uQWRkQ2hpbGRyZW5IYW5kbGVyJiZ0Ll9vbkFkZENoaWxkcmVuSGFuZGxlcihvKSxufX0se2tleToiX3Jlc3VtZUh5cGVydHlSZXNvdXJjZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUudmFsdWU7ci5wYXJlbnRPYmplY3Q9dCxyLnBhcmVudD10Ll91cmw7dmFyIG49dC5faHlwZXJ0eVJlc291cmNlRmFjdG9yeS5jcmVhdGVIeXBlcnR5UmVzb3VyY2UoITEsci5yZXNvdXJjZVR5cGUscik7bi5pZGVudGl0eT1lLmlkZW50aXR5O3ZhciBvPXt0eXBlOiJjcmVhdGUiLGZyb206bi5yZXBvcnRlcix1cmw6bi5wYXJlbnQsdmFsdWU6bi5kYXRhLGNoaWxkSWQ6bi51cmwsaWRlbnRpdHk6bi5pZGVudGl0eSxjaGlsZDpufTtyZXR1cm4gbi5yZXNvdXJjZVR5cGUmJihvLnJlc291cmNlPW4pLHQuX29uQWRkQ2hpbGRyZW5IYW5kbGVyJiZ0Ll9vbkFkZENoaWxkcmVuSGFuZGxlcihvKSxufX0se2tleToicGF1c2UiLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3ciTm90IGltcGxlbWVudGVkIn19LHtrZXk6InJlc3VtZSIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvdyJOb3QgaW1wbGVtZW50ZWQifX0se2tleToic3RvcCIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvdyJOb3QgaW1wbGVtZW50ZWQifX0se2tleToiYWRkQ2hpbGQiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBvPXRoaXMscz12b2lkIDA7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24oaSl7dmFyIGE9by5fdXJsKyIvY2hpbGRyZW4vIitlLHU9by5fZ2V0Q2hpbGRJbnB1dChuKTt1LmRhdGE9dCx1LmNoaWxkcmVuPWUscz1uZXcgcC5kZWZhdWx0KHUpLHImJihzLmlkZW50aXR5PXIpLHMuc2hhcmUoKSxoLmxvZygiW0RhdGFPYmplY3QuYWRkQ2hpbGRdIGFkZGVkICIscykscy5vbkNoYW5nZShmdW5jdGlvbihlKXtvLl9vbkNoYW5nZShlLHtwYXRoOmEsY2hpbGRJZDp1LnVybH0pfSksby5fY2hpbGRyZW5PYmplY3RzLmhhc093blByb3BlcnR5KGUpfHwoby5fY2hpbGRyZW5PYmplY3RzW2VdPXt9KSxvLl9jaGlsZHJlbk9iamVjdHNbZV1bdS51cmxdPXMsaShzKX0pfX0se2tleToiX2RlbGV0ZUNoaWxkcmVucyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9W107cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24ocil7aWYoZS5jaGlsZHJlbnMpe2gubG9nKCJbRGF0YU9iamVjdC5kZWxldGVDaGlsZHJlbnNdIixlLmNoaWxkcmVucyk7dmFyIG49dm9pZCAwO2ZvcihuIGluIGUuY2hpbGRyZW5zKXt2YXIgbz12b2lkIDA7Zm9yKG8gaW4gZS5jaGlsZHJlbnNbbl0pe3ZhciBzPWUuY2hpbGRyZW5zW25dW29dO2gubG9nKCJbRGF0YU9iamVjdC5fZGVsZXRlQ2hpbGRyZW5zXSBjaGlsZCIscykscy5tZXRhZGF0YS5oYXNPd25Qcm9wZXJ0eSgicmVzb3VyY2VUeXBlIikmJnQucHVzaChlLmNoaWxkcmVuc1tuXVtvXS5kZWxldGUoKSl9fX1oLmxvZygiW0RhdGFPYmplY3QuX2RlbGV0ZUNoaWxkcmVuc10gcHJvbWlzZXMgIix0KSx0Lmxlbmd0aD4wP2kuZGVmYXVsdC5hbGwodCkudGhlbihmdW5jdGlvbigpe3IoIltEYXRhT2JqZWN0Ll9kZWxldGVDaGlsZHJlbnNdIGRvbmUiKX0pOnIoIltEYXRhT2JqZWN0Ll9kZWxldGVDaGlsZHJlbnNdIG5vdGhpbmcgdG8gZGVsZXRlIil9KX19LHtrZXk6Il9nZXRDaGlsZElucHV0Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9KDAsYS5kZWZhdWx0KSh7fSxlKTtyZXR1cm4gdC5fY2hpbGRJZCsrLHIudXJsPXQuX293bmVyKyIjIit0Ll9jaGlsZElkLHIucGFyZW50T2JqZWN0PXQsci5yZXBvcnRlcj10Ll9vd25lcixyLmNyZWF0ZWQ9KG5ldyBEYXRlKS50b0lTT1N0cmluZygpLHIucnVudGltZT10Ll9zeW5jaGVyLl9ydW50aW1lVXJsLHIucDJwSGFuZGxlcj10Ll9zeW5jaGVyLl9wMnBIYW5kbGVyLHIucDJwUmVxdWVzdGVyPXQuX3N5bmNoZXIuX3AycFJlcXVlc3RlcixyLnNjaGVtYT10Ll9zY2hlbWEsci5wYXJlbnQ9dC51cmwscn19LHtrZXk6ImFkZEh5cGVydHlSZXNvdXJjZSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbixvKXt2YXIgcz10aGlzO3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKGkpe3ZhciBhPXZvaWQgMCx1PXMuX3VybCsiL2NoaWxkcmVuLyIrZSxjPXMuX2dldENoaWxkSW5wdXQobyk7Yy5jaGlsZHJlbj1lLHMuX2h5cGVydHlSZXNvdXJjZUZhY3RvcnkuY3JlYXRlSHlwZXJ0eVJlc291cmNlV2l0aENvbnRlbnQoITAsdCxyLGMpLnRoZW4oZnVuY3Rpb24odCl7YT10LG4mJihhLmlkZW50aXR5PW4pLGEuc2hhcmUoKSxoLmxvZygiW0RhdGFPYmplY3QuYWRkSHlwZXJ0eVJlc291cmNlXSBhZGRlZCAiLGEpLGEub25DaGFuZ2UoZnVuY3Rpb24oZSl7cy5fb25DaGFuZ2UoZSx7cGF0aDp1LGNoaWxkSWQ6YS5jaGlsZElkfSl9KSxzLl9jaGlsZHJlbk9iamVjdHMuaGFzT3duUHJvcGVydHkoZSl8fChzLl9jaGlsZHJlbk9iamVjdHNbZV09e30pLHMuX2NoaWxkcmVuT2JqZWN0c1tlXVthLmNoaWxkSWRdPWEsaShhKX0pfSl9fSx7a2V5OiJvbkFkZENoaWxkIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlcj1lfX0se2tleToiX29uQ2hpbGRDcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aC5sb2coIltEYXRhT2JqZWN0Ll9vbkNoaWxkQ3JlYXRlXSByZWNlaXZlZEJ5ICIrdC5fb3duZXIrIiA6ICIsZSk7dmFyIHI9e2Zyb206ZS50byx0bzplLmZyb20sdHlwZToicmVzcG9uc2UiLGlkOmUuaWQsYm9keTp7Y29kZToxMDB9fTt0Ll9idXMucG9zdE1lc3NhZ2UociksZS5ib2R5LnZhbHVlLnJlc291cmNlVHlwZT90Ll9vbkh5cGVydHlSZXNvdXJjZUFkZGVkKGUpOnQuX29uQ2hpbGRBZGRlZChlKX19LHtrZXk6Il9vbkNoaWxkQWRkZWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj0oMCx5LmRlZXBDbG9uZSkoZS5ib2R5LnZhbHVlKTtyLnBhcmVudE9iamVjdD10O3ZhciBuPXIuY2hpbGRyZW4sbz1uZXcgcC5kZWZhdWx0KHIpO28uaWRlbnRpdHk9ZS5ib2R5LmlkZW50aXR5LHQuX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShuKXx8KHQuX2NoaWxkcmVuT2JqZWN0c1tuXT17fSksdC5fY2hpbGRyZW5PYmplY3RzW25dW3IudXJsXT1vLGUudG89PT10Lm1ldGFkYXRhLnVybCYmby5zdG9yZSgpLHQuX2h5cGVydHlFdnQoZSxvKX19LHtrZXk6Il9vbkh5cGVydHlSZXNvdXJjZUFkZGVkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LnZhbHVlLG49dm9pZCAwLG89ci5jaGlsZHJlbjtyLnBhcmVudE9iamVjdD10LChuPXQuX2h5cGVydHlSZXNvdXJjZUZhY3RvcnkuY3JlYXRlSHlwZXJ0eVJlc291cmNlKCExLHIucmVzb3VyY2VUeXBlLHIpKS5pZGVudGl0eT1lLmJvZHkuaWRlbnRpdHksdC5fY2hpbGRyZW5PYmplY3RzLmhhc093blByb3BlcnR5KG8pfHwodC5fY2hpbGRyZW5PYmplY3RzW29dPXt9KSx0Ll9jaGlsZHJlbk9iamVjdHNbb11bbi5jaGlsZElkXT1uLHQuX2h5cGVydHlFdnQoZSxuKSxlLnRvPT09dC5tZXRhZGF0YS51cmwmJm4uc3RvcmUoKX19LHtrZXk6Il9oeXBlcnR5RXZ0Iix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXt0eXBlOmUudHlwZSxmcm9tOmUuZnJvbSx1cmw6ZS50byx2YWx1ZTp0LmRhdGEsY2hpbGRJZDp0LnVybCxpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksY2hpbGQ6dH07dC5yZXNvdXJjZVR5cGUmJihyLnJlc291cmNlPXQpLHRoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyJiZ0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlcihyKX19LHtrZXk6Il9vbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO2lmKHIuX21ldGFkYXRhLmxhc3RNb2RpZmllZD0obmV3IERhdGUpLnRvSVNPU3RyaW5nKCksci5fdmVyc2lvbisrLCJsaXZlIj09PXIuX3N0YXR1cyl7dmFyIG49e3R5cGU6InVwZGF0ZSIsZnJvbTpyLl91cmwsdG86ci5fdXJsKyIvY2hhbmdlcyIsYm9keTp7dmVyc2lvbjpyLl92ZXJzaW9uLHNvdXJjZTpyLl9vd25lcixhdHRyaWJ1dGU6ZS5maWVsZCxsYXN0TW9kaWZpZWQ6ci5fbWV0YWRhdGEubGFzdE1vZGlmaWVkfX07aC5sb2coIltEYXRhT2JqZWN0IC0gX29uQ2hhbmdlXSAtICIsZSx0LG4pLGUub1R5cGU9PT1kLk9iamVjdFR5cGUuT0JKRUNUP2UuY1R5cGUhPT1kLkNoYW5nZVR5cGUuUkVNT1ZFJiYobi5ib2R5LnZhbHVlPSgwLHkuZGVlcENsb25lKShlLmRhdGEpKToobi5ib2R5LmF0dHJpYnV0ZVR5cGU9ZS5vVHlwZSxuLmJvZHkudmFsdWU9ZS5kYXRhLGUuY1R5cGUhPT1kLkNoYW5nZVR5cGUuVVBEQVRFJiYobi5ib2R5Lm9wZXJhdGlvbj1lLmNUeXBlKSksdCYmKG4udG89dC5wYXRoLG4uYm9keS5yZXNvdXJjZT10LmNoaWxkSWQpLHIuZGF0YS5fbXV0dWFsfHwobi5ib2R5Lm11dHVhbD1yLl9tdXR1YWwpLHIuX2J1cy5wb3N0TWVzc2FnZShuKX19fSx7a2V5OiJfY2hhbmdlT2JqZWN0Iix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5fdmVyc2lvbisxPD10LmJvZHkudmVyc2lvbil7ci5fdmVyc2lvbj10LmJvZHkudmVyc2lvbjt2YXIgbixpPXQuYm9keS5hdHRyaWJ1dGU7bj0ib2JqZWN0Ij09PSgwLG8uZGVmYXVsdCkodC5ib2R5LnZhbHVlKT8oMCx5LmRlZXBDbG9uZSkodC5ib2R5LnZhbHVlKTp0LmJvZHkudmFsdWU7dmFyIHM9ZS5maW5kQmVmb3JlKGkpO2lmKHQuYm9keS5sYXN0TW9kaWZpZWQ/ci5fbWV0YWRhdGEubGFzdE1vZGlmaWVkPXQuYm9keS5sYXN0TW9kaWZpZWQ6ci5fbWV0YWRhdGEubGFzdE1vZGlmaWVkPShuZXcgRGF0ZSkudG9JU09TdHJpbmcoKSx0LmJvZHkuYXR0cmlidXRlVHlwZT09PWQuT2JqZWN0VHlwZS5BUlJBWSlpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLkFERCl7dmFyIGE9cy5vYmosdT1zLmxhc3Q7QXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShhLFt1LDBdLmNvbmNhdChuKSl9ZWxzZSBpZih0LmJvZHkub3BlcmF0aW9uPT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSl7dmFyIGM9cy5vYmosbD1zLmxhc3Q7Yy5zcGxpY2UobCxuKX1lbHNlIHMub2JqW3MubGFzdF09bjtlbHNlIHQuYm9keS5oYXNPd25Qcm9wZXJ0eSgidmFsdWUiKT9zLm9ialtzLmxhc3RdPW46ZGVsZXRlIHMub2JqW3MubGFzdF19ZWxzZSBoLmxvZygiVU5TWU5DSFJPTklaRUQgVkVSU0lPTjogKGRhdGEgPT4gIityLl92ZXJzaW9uKyIsIG1zZyA9PiAiK3QuYm9keS52ZXJzaW9uKyIpIil9fSx7a2V5OiJfY2hhbmdlQ2hpbGRyZW4iLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj0oMCx5LmRpdmlkZVVSTCkoZS50bykuaWRlbnRpdHksbj1yP3Iuc3Vic3RyaW5nKHIubGFzdEluZGV4T2YoIi8iKSsxKTp2b2lkIDAsbz1lLmJvZHkucmVzb3VyY2UsaT10Ll9jaGlsZHJlbk9iamVjdHNbbl1bb107aC5sb2coIkNoYW5nZSBjaGlsZHJlbjogIix0Ll9vd25lcixlLG4pLGk/dC5fY2hhbmdlT2JqZWN0KGkuX3N5bmNPYmosZSk6aC53YXJuKCJObyBjaGlsZHJlbiBmb3VuZCBmb3I6ICIsbyl9fSx7a2V5OiJtZXRhZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhfX0se2tleToidXJsIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdXJsfX0se2tleToic2NoZW1hIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2NoZW1hfX0se2tleToic3RhdHVzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhdHVzfX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YX19LHtrZXk6ImNoaWxkcmVucyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoaWxkcmVuT2JqZWN0c319XSksZX0oKTt0LmRlZmF1bHQ9YixlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQpeyFmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKGUsdCxyLG4sbyxpKXtmdW5jdGlvbiBzKGUsbil7aWYocy5kZWxheT1uLCFzLnBhdXNlJiZ1LmNoYW5nZXNldC5sZW5ndGg+MCl7aWYoIWUpe3ZhciBvPXUuY2hhbmdlc2V0LmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4hcnx8ci5pbmRleE9mKGUudHlwZSk+PTB9KTtvLmxlbmd0aD4wJiZ0KG8pfXUuY2hhbmdlc2V0PVtdfX12YXIgYSx1PXRoaXM7cmV0dXJuIHMucGF1c2U9byxzLmRlbGF5PWksdS5nZXQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm4iX19vYnNlcnZlcl9fIj09PXQ/dToidW5vYnNlcnZlIj09PXQ/ZnVuY3Rpb24oKXtyZXR1cm4gT2JqZWN0LnVub2JzZXJ2ZShlKSxlfToiZGVsaXZlciI9PT10P3M6ZVt0XX0sdS50YXJnZXQ9ZSx1LmNoYW5nZXNldD1bXSx1LnRhcmdldC5fX29ic2VydmVyQ2FsbGJhY2tzX198fChPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwiX19vYnNlcnZlckNhbGxiYWNrc19fIix7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITEsdmFsdWU6W119KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwiX19vYnNlcnZlcnNfXyIse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiExLHZhbHVlOltdfSkpLHUudGFyZ2V0Ll9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5wdXNoKHQpLHUudGFyZ2V0Ll9fb2JzZXJ2ZXJzX18ucHVzaCh0aGlzKSxhPW5ldyBQcm94eShlLHUpLHMoITEsaSksYX1PYmplY3Qub2JzZXJ2ZXx8ImZ1bmN0aW9uIiE9dHlwZW9mIFByb3h5fHwoZS5wcm90b3R5cGUuZGVsaXZlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldChudWxsLCJkZWxpdmVyIil9LGUucHJvdG90eXBlLnNldD1mdW5jdGlvbihlLHQscil7dmFyIG49ZVt0XSxvPXZvaWQgMD09PW4/ImFkZCI6InVwZGF0ZSI7aWYoZVt0XT1yLGUuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wJiYoIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2Yobyk+PTApKXt2YXIgaT17b2JqZWN0OmUsbmFtZTp0LHR5cGU6b30scz0wPT09dGhpcy5jaGFuZ2VzZXQubGVuZ3RoLGE9dGhpcy5kZWxpdmVyKCk7InVwZGF0ZSI9PT1vJiYoaS5vbGRWYWx1ZT1uKSx0aGlzLmNoYW5nZXNldC5wdXNoKGkpLHMmJmEoITEsIm51bWJlciI9PXR5cGVvZiBhLmRlbGF5P2EuZGVsYXk6MTApfXJldHVybiEwfSxlLnByb3RvdHlwZS5kZWxldGVQcm9wZXJ0eT1mdW5jdGlvbihlLHQpe3ZhciByPWVbdF07aWYoZGVsZXRlIGVbdF0sZS5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAmJiF0aGlzLmFjY2VwdGxpc3R8fHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKCJkZWxldGUiKT49MCl7dmFyIG49e29iamVjdDplLG5hbWU6dCx0eXBlOiJkZWxldGUiLG9sZFZhbHVlOnJ9LG89MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxpPXRoaXMuZGVsaXZlcigpO3RoaXMuY2hhbmdlc2V0LnB1c2gobiksbyYmaSghMSwibnVtYmVyIj09dHlwZW9mIGkuZGVsYXk/aS5kZWxheToxMCl9cmV0dXJuITB9LGUucHJvdG90eXBlLmRlZmluZVByb3BlcnR5PWZ1bmN0aW9uKGUsdCxyKXtpZihPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHIpLGUuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wJiYhdGhpcy5hY2NlcHRsaXN0fHx0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZigicmVjb25maWd1cmUiKT49MCl7dmFyIG49e29iamVjdDplLG5hbWU6dCx0eXBlOiJyZWNvbmZpZ3VyZSJ9LG89MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxpPXRoaXMuZGVsaXZlcigpO3RoaXMuY2hhbmdlc2V0LnB1c2gobiksbyYmaSghMSwibnVtYmVyIj09dHlwZW9mIGkuZGVsYXk/aS5kZWxheToxMCl9cmV0dXJuITB9LGUucHJvdG90eXBlLnNldFByb3RvdHlwZU9mPWZ1bmN0aW9uKGUsdCl7dmFyIHI9T2JqZWN0LmdldFByb3RvdHlwZU9mKGUpO2lmKE9iamVjdC5zZXRQcm90b3R5cGVPZihlLHQpLGUuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wJiYhdGhpcy5hY2NlcHRsaXN0fHx0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZigic2V0UHJvdG90eXBlIik+PTApe3ZhciBuPXtvYmplY3Q6ZSxuYW1lOiJfX3Byb3RvX18iLHR5cGU6InNldFByb3RvdHlwZSIsb2xkVmFsdWU6cn0sbz0wPT09dGhpcy5jaGFuZ2VzZXQubGVuZ3RoLGk9dGhpcy5kZWxpdmVyKCk7dGhpcy5jaGFuZ2VzZXQucHVzaChuKSxvJiZpKCExLCJudW1iZXIiPT10eXBlb2YgaS5kZWxheT9pLmRlbGF5OjEwKX1yZXR1cm4hMH0sZS5wcm90b3R5cGUucHJldmVudEV4dGVuc2lvbnM9ZnVuY3Rpb24oZSl7aWYoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKGUpLGUuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wJiYhdGhpcy5hY2NlcHRsaXN0fHx0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZigicHJldmVudEV4dGVuc2lvbnMiKT49MCl7dmFyIHQ9e29iamVjdDplLHR5cGU6InByZXZlbnRFeHRlbnNpb25zIn0scj0wPT09dGhpcy5jaGFuZ2VzZXQubGVuZ3RoLG49dGhpcy5kZWxpdmVyKCk7dGhpcy5jaGFuZ2VzZXQucHVzaCh0KSxyJiZuKCExLCJudW1iZXIiPT10eXBlb2Ygbi5kZWxheT9uLmRlbGF5OjEwKX1yZXR1cm4hMH0sT2JqZWN0Lm9ic2VydmU9ZnVuY3Rpb24odCxyLG4sbyxpLHMpe3JldHVybiBuZXcgZSh0LHIsbixvLGkscyl9LE9iamVjdC51bm9ic2VydmU9ZnVuY3Rpb24oZSx0KXtpZihlLl9fb2JzZXJ2ZXJDYWxsYmFja3NfXyl7aWYoIXQpcmV0dXJuIGUuX19vYnNlcnZlckNhbGxiYWNrc19fLnNwbGljZSgwLGUuX19vYnNlcnZlckNhbGxiYWNrc19fLmxlbmd0aCksdm9pZCBlLl9fb2JzZXJ2ZXJzX18uc3BsaWNlKDAsZS5fX29ic2VydmVyc19fLmxlbmd0aCk7ZS5fX29ic2VydmVyQ2FsbGJhY2tzX18uZm9yRWFjaChmdW5jdGlvbihyLG4pe3Q9PT1yJiYoZS5fX29ic2VydmVyQ2FsbGJhY2tzX18uc3BsaWNlKG4sMSksZGVsZXRlIGUuX19vYnNlcnZlcnNfX1tuXS5jYWxsYmFjayxlLl9fb2JzZXJ2ZXJzX18uc3BsaWNlKG4sMSkpfSl9fSxBcnJheS5vYnNlcnZlPWZ1bmN0aW9uKGUsdCxyLG4sbyxpKXtpZighKGUgaW5zdGFuY2VvZiBBcnJheXx8QXJyYXkuaXNBcnJheShlKSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiRmlyc3QgYXJndW1lbnQgdG8gQXJyYXkub2JzZXJ2ZXIgaXMgbm90IGFuIEFycmF5Iik7cj1yfHxbImFkZCIsInVwZGF0ZSIsImRlbGV0ZSIsInNwbGljZSJdO3ZhciBzPW5ldyBQcm94eShlLHtnZXQ6ZnVuY3Rpb24odCxuKXtyZXR1cm4idW5vYnNlcnZlIj09PW4/ZnVuY3Rpb24oZSl7cmV0dXJuIGU/T2JqZWN0LnVub2JzZXJ2ZSh0LGUpOnQudW5vYnNlcnZlKCl9OiJzcGxpY2UiPT09bj9mdW5jdGlvbihuLG8pe2lmKCJudW1iZXIiIT10eXBlb2Ygbnx8Im51bWJlciIhPXR5cGVvZiBvKXRocm93IG5ldyBUeXBlRXJyb3IoIkZpcnN0IHR3byBhcmd1bWVudHMgdG8gQXJyYXkgc3BsaWNlIGFyZSBub3QgbnVtYmVyLCBudW1iZXIiKTt2YXIgaT10aGlzLnNsaWNlKG4sbitvKSxzPWFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHMubGVuZ3RoLTI6MCx1PXtvYmplY3Q6ZSx0eXBlOiJzcGxpY2UiLGluZGV4Om4scmVtb3ZlZDppLGFkZGVkQ291bnQ6c307aWYodC5zcGxpY2UuYXBwbHkodCxhcmd1bWVudHMpLHIuaW5kZXhPZigic3BsaWNlIik+PTApe249MD09PWEuX19vYnNlcnZlcl9fLmNoYW5nZXNldC5sZW5ndGg7dmFyIGM9YS5fX29ic2VydmVyX18uZGVsaXZlcigpO2EuX19vYnNlcnZlcl9fLmNoYW5nZXNldC5wdXNoKHUpLG4mJmMoITEsIm51bWJlciI9PXR5cGVvZiBjLmRlbGF5P2MuZGVsYXk6MTApfX06InB1c2giPT09bj9mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zcGxpY2UodGhpcy5sZW5ndGgsMCxlKX06InBvcCI9PT1uP2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3BsaWNlKHRoaXMubGVuZ3RoLTEsMSl9OiJ1bnNoaWZ0Ij09PW4/ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc3BsaWNlKDAsMCxlKX06InNoaWZ0Ij09PW4/ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zcGxpY2UoMCwxKX06dFtuXX19KSxhPU9iamVjdC5vYnNlcnZlKHMsZnVuY3Rpb24oZSl7dmFyIG49ZS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuImxlbmd0aCIhPT1lLm5hbWUmJiJhZGQiIT09ZS5uYW1lJiYoIXJ8fHIuaW5kZXhPZihlLnR5cGUpPj0wKX0pO24ubGVuZ3RoPjAmJnQobil9LHIsbixvLGkpO3JldHVybiBhfSxBcnJheS51bm9ic2VydmU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS51bm9ic2VydmUodCl9KSxPYmplY3QuZGVlcE9ic2VydmU9ZnVuY3Rpb24oZSx0LHIpe2Z1bmN0aW9uIG4oZSxyKXtPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe2lmKCgib2JqZWN0Ij09PW8oZVtuXSl8fCJhcnJheSI9PT1vKGVbbl0pKSYmIWVbbl0uaGFzT3duUHJvcGVydHkoIl9fb2JzZXJ2ZXJzX18iKSl7dmFyIGk9ci5zbGljZSgwKTtpLnB1c2gobiksZVtuXT1PYmplY3QuZGVlcE9ic2VydmUoZVtuXSx0LGkpfX0pfXZhciBvPWZ1bmN0aW9uKGUpe3JldHVybnt9LnRvU3RyaW5nLmNhbGwoZSkubWF0Y2goL1xzKFthLXpBLVpdKykvKVsxXS50b0xvd2VyQ2FzZSgpfTtyZXR1cm4gbihlLHI9cnx8W10pLE9iamVjdC5vYnNlcnZlKGUsZnVuY3Rpb24oZSl7dmFyIG89W107ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PShyLmxlbmd0aD4wP3Iuam9pbigiLiIpKyIuIjoiIikrZS5uYW1lOyJ1cGRhdGUiIT09ZS50eXBlJiYiYWRkIiE9PWUudHlwZXx8bihlLm9iamVjdCxyKSxvLnB1c2goe25hbWU6ZS5uYW1lLG9iamVjdDplLm9iamVjdCx0eXBlOmUudHlwZSxvbGRWYWx1ZTplLm9sZFZhbHVlLG5ld1ZhbHVlOmUub2JqZWN0W2UubmFtZV0sa2V5cGF0aDp0fSksZnVuY3Rpb24gZSh0LHIsbixpLHMpe2kgaW5zdGFuY2VvZiBPYmplY3Q/T2JqZWN0LmtleXMoaSkuZm9yRWFjaChmdW5jdGlvbihhKXtpZighbnx8blthXSE9PWlbYV0pe3ZhciB1PW4mJnZvaWQgMCE9PW5bYV0/blthXTp2b2lkIDAsYz12b2lkIDA9PT11PyJhZGQiOiJ1cGRhdGUiLGw9cysiLiIrYTtvLnB1c2goe25hbWU6dCxvYmplY3Q6cix0eXBlOmMsb2xkVmFsdWU6dSxuZXdWYWx1ZTppW2FdLGtleXBhdGg6bH0pLGUodCxyLHUsaVthXSxsKX19KTpuIGluc3RhbmNlb2YgT2JqZWN0JiZPYmplY3Qua2V5cyhuKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciB1PW51bGw9PT1pPyJ1cGRhdGUiOiJkZWxldGUiLGM9cysiLiIrYTtvLnB1c2goe25hbWU6dCxvYmplY3Q6cix0eXBlOnUsb2xkVmFsdWU6blthXSxuZXdWYWx1ZTppLGtleXBhdGg6Y30pLGUodCxyLG5bYV0sdm9pZCAwLGMpfSl9KGUubmFtZSxlLm9iamVjdCxlLm9sZFZhbHVlLGUub2JqZWN0W2UubmFtZV0sdCl9KSx0KG8pfSl9fSgpfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoMTgpKSxpPW4ocigyNSkpLHM9bihyKDMpKSxhPW4ocig1KSksdT1uKHIoMzMpKSxjPW4ocigzNCkpLGw9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSksZD1uKHIoMTI5KSksZj1uKChyKDE5KSxyKDEzMCkpKSxwPWwuZ2V0TG9nZ2VyKCJGaWxlSHlwZXJ0eVJlc291cmNlIikseT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscil7KDAscy5kZWZhdWx0KSh0aGlzLHQpO3ZhciBuPSgwLHUuZGVmYXVsdCkodGhpcywodC5fX3Byb3RvX198fCgwLGkuZGVmYXVsdCkodCkpLmNhbGwodGhpcyxlLHIpKTtyZXR1cm4gbi5tZXRhZGF0YS5yZXNvdXJjZVR5cGU9ImZpbGUiLG59cmV0dXJuKDAsYy5kZWZhdWx0KSh0LGUpLCgwLGEuZGVmYXVsdCkodCxbe2tleToiaW5pdCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpZighZSl0aHJvdyBuZXcgRXJyb3IoIltGaWxlSHlwZXJ0eVJlc291cmNlLmNvbnN0cnVjdG9yXSBtaXNzaW5nIG1hbmRhdG9yeSAqZmlsZSogaW5wdXQgIik7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtpZih0Ll9tZXRhZGF0YS5uYW1lPWUubmFtZSx0Ll9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9ZS5sYXN0TW9kaWZpZWQsdC5fbWV0YWRhdGEuc2l6ZT1lLnNpemUsdC5fbWV0YWRhdGEubWltZXR5cGU9ZS50eXBlLHAubG9nKCJbRmlsZUh5cGVydHlSZXNvdXJjZS5pbml0XSBmaWxlOiAiLGUpLHQuX2lzU2VuZGVyKXN3aXRjaChlLnR5cGUuc3BsaXQoIi8iKVswXSl7Y2FzZSJpbWFnZSI6dC5fZ2V0SW1hZ2VQcmV2aWV3KGUpLnRoZW4oZnVuY3Rpb24obil7dC5fbWV0YWRhdGEucHJldmlldz1uLHQuX2NvbnRlbnQ9ZSxyKCl9KTticmVhaztkZWZhdWx0OnQuX2NvbnRlbnQ9ZSxyKCl9ZWxzZSB0Ll9jb250ZW50PWUuY29udGVudCxlLnByZXZpZXcmJih0Ll9tZXRhZGF0YS5wcmV2aWV3PWUucHJldmlldykscigpfSl9fSx7a2V5OiJfZ2V0SW1hZ2VQcmV2aWV3Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1uZXcgRmlsZVJlYWRlcjtyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihyLG4pe2YuZGVmYXVsdC5yZXNpemUoZSx7d2lkdGg6MTAwLGhlaWdodDoxMDB9LGZ1bmN0aW9uKGUsbil7bj8odC5yZWFkQXNEYXRhVVJMKGUpLHQub25sb2FkPWZ1bmN0aW9uKGUpe3IoZS50YXJnZXQucmVzdWx0KX0pOihwLndhcm4oIltGaWxlSHlwZXJ0eVJlc291cmNlLl9nZXRJbWFnZVByZXZpZXddIHVuYWJsZSB0byBjcmVhdGUgaW1hZ2UgcHJldmlldyBmcm9tIG9yaWdpbmFsIGltYWdlICIpLHIodm9pZCAwKSl9KX0pfX0se2tleToidG9NZXNzYWdlIix2YWx1ZTpmdW5jdGlvbigpe319LHtrZXk6Im5hbWUiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YS5uYW1lfX0se2tleToicHJldmlldyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhLnByZXZpZXd9fV0pLHR9KGQuZGVmYXVsdCk7dC5kZWZhdWx0PXksZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDEyNiksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtyKDEyNyk7dmFyIG49cigwKS5PYmplY3Q7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMiksbz1yKDQ2KS5mO3IoNDQpKCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7cmV0dXJuIG8obihlKSx0KX19KX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDE4KSksaT1uKHIoMykpLHM9bihyKDUpKSxhPW4ocigxMjQpKSx1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeygwLGkuZGVmYXVsdCkodGhpcyxlKX1yZXR1cm4oMCxzLmRlZmF1bHQpKGUsW3trZXk6ImNyZWF0ZUh5cGVydHlSZXNvdXJjZSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXZvaWQgMDtzd2l0Y2godCl7Y2FzZSJmaWxlIjpuPW5ldyBhLmRlZmF1bHQoZSxyKTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcigiW0h5cGVydHlSZXNvdXJjZUZhY3RvcnkuY3JlYXRlSHlwZXJ0eVJlc291cmNlXSBub3Qgc3VwcG9ydGVkIHR5cGU6ICIsdCl9cmV0dXJuIG59fSx7a2V5OiJjcmVhdGVIeXBlcnR5UmVzb3VyY2VXaXRoQ29udGVudCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGk9dm9pZCAwO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKG8pe3N3aXRjaCh0KXtjYXNlImZpbGUiOmk9bmV3IGEuZGVmYXVsdChlLG4pO2JyZWFrO2RlZmF1bHQ6cmVqZWN0KCl9aS5pbml0KHIpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gaS5zYXZlKCl9KS50aGVuKGZ1bmN0aW9uKCl7byhpKX0pfSl9fV0pLGV9KCk7dC5kZWZhdWx0PXUsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDE4KSksaT1uKHIoMjUpKSxzPW4ocigzKSksYT1uKHIoNSkpLHU9bihyKDMzKSksYz1uKHIoMTAwKSksbD1uKHIoMzQpKSxkPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLGY9cigxOSkscD1uKHIoMTE4KSkseT1kLmdldExvZ2dlcigiSHlwZXJ0eVJlc291cmNlIiksdj1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscil7KDAscy5kZWZhdWx0KSh0aGlzLHQpO3ZhciBuPSgwLHUuZGVmYXVsdCkodGhpcywodC5fX3Byb3RvX198fCgwLGkuZGVmYXVsdCkodCkpLmNhbGwodGhpcyxyKSksbz1uO3JldHVybiBvLmFycmF5YnVmZmVyU2l6ZUxpbWl0PTUyNDI4ODAsby5faXNTZW5kZXI9ZSxvLl9sb2NhbFN0b3JhZ2VVUkw9by5fcGFyZW50T2JqZWN0Ll9zeW5jaGVyLl9ydW50aW1lVXJsKyIvc3RvcmFnZSIsbn1yZXR1cm4oMCxsLmRlZmF1bHQpKHQsZSksKDAsYS5kZWZhdWx0KSh0LFt7a2V5OiJzYXZlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXt2YXIgbj17ZnJvbTplLl9vd25lcix0bzplLl9sb2NhbFN0b3JhZ2VVUkwsdHlwZToiY3JlYXRlIixib2R5Ont2YWx1ZTooMCxmLmRlZXBDbG9uZSkoZS5fbWV0YWRhdGEpfX07bi5ib2R5LnZhbHVlLmNvbnRlbnQ9ZS5fY29udGVudCxlLl9idXMucG9zdE1lc3NhZ2UobixmdW5jdGlvbihuKXt5LmluZm8oIltIeXBlcnR5UmVzb3VyY2Uuc2F2ZV0gcmVwbHk6ICIsbiksZS5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoZS5fb3duZXIsbi5pZCksMjAwPT09bi5ib2R5LmNvZGU/KG4uYm9keS52YWx1ZSYmKGUuX21ldGFkYXRhLmNvbnRlbnRVUkx8fChlLl9tZXRhZGF0YS5jb250ZW50VVJMPVtdKSxlLl9tZXRhZGF0YS5jb250ZW50VVJMLnB1c2gobi5ib2R5LnZhbHVlKSksdCgpKTpyKG4uYm9keS5jb2RlKyIgIituLmJvZHkuZGVzYyl9LCExKX0pfX0se2tleToicmVhZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4geS5pbmZvKCJbSHlwZXJ0eVJlc291cmNlLnJlYWRdICIsdGhpcyksbmV3IG8uZGVmYXVsdChmdW5jdGlvbihyLG4pe2lmKHQuY29udGVudClyKHQpO2Vsc2V7dmFyIG89dC5fZ2V0QmVzdENvbnRlbnRVUkwodC5fbWV0YWRhdGEuY29udGVudFVSTCk7eS5sb2coIlN0b3JhZ2U6IixvKTt2YXIgaT17ZnJvbTp0Ll9vd25lcix0bzpvLnVybCx0eXBlOiJyZWFkIixib2R5OntyZXNvdXJjZTpvLnVybCsiLyIrby5yZXNvdXJjZSxwMnA6ITB9fTt0Lm1ldGFkYXRhLnAycFJlcXVlc3RlciYmdC5tZXRhZGF0YS5wMnBIYW5kbGVyJiYoaS5ib2R5LnAycFJlcXVlc3Rlcj10Lm1ldGFkYXRhLnAycFJlcXVlc3RlcixpLmJvZHkucDJwSGFuZGxlcj10Lm1ldGFkYXRhLnAycEhhbmRsZXIpLHQuX2dldEJlc3RSZXNvdXJjZShpLGUpLnRoZW4oZnVuY3Rpb24oZSl7eS5pbmZvKCJbSHlwZXJ0eVJlc291cmNlXSAtIGdldCBsb2NhbGx5IHRoZSByZXNvdXJjZToiLGUpLHIodCl9KS5jYXRjaChmdW5jdGlvbihpKXt5Lndhcm4oIltIeXBlcnR5UmVzb3VyY2VdIC0gZ2V0IGxvY2FsbHkgdGhlIHJlc291cmNlIGZhaWwiLGkpO3ZhciBzPXtmcm9tOnQuX293bmVyLHRvOm8ucmVtb3RlVVJMLHR5cGU6InJlYWQiLGJvZHk6e3Jlc291cmNlOm8ucmVtb3RlVVJMKyIvIitvLnJlc291cmNlLHAycDohMH19O3QubWV0YWRhdGEucDJwUmVxdWVzdGVyJiZ0Lm1ldGFkYXRhLnAycEhhbmRsZXImJihzLmJvZHkucDJwUmVxdWVzdGVyPXQubWV0YWRhdGEucDJwUmVxdWVzdGVyLHMuYm9keS5wMnBIYW5kbGVyPXQubWV0YWRhdGEucDJwSGFuZGxlciksdC5fZ2V0QmVzdFJlc291cmNlKHMsZSkudGhlbihmdW5jdGlvbihlKXt5Lndhcm4oIltIeXBlcnR5UmVzb3VyY2VdIC0gZ2V0IHJlbW90ZWx5IHRoZSByZXNvdXJjZSIsZSkscih0KX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3kud2FybigiW0h5cGVydHlSZXNvdXJjZV0gLSBnZXQgcmVtb3RlbHkgdGhlIHJlc291cmNlIGZhaWwiLGUpLG4oZS5ib2R5LmNvZGUrIiAiK2UuYm9keS5kZXNjKX0pfSl9fSl9fSx7a2V5OiJfZ2V0QmVzdFJlc291cmNlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obixvKXt2YXIgaT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIHIuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHIuX293bmVyLHMpLGUuYm9keS5jb2RlPTQwOCxlLmJvZHkuZGVzYz0iUmVzcG9uc2UgdGltZW91dCIsbyhlKX0sM2UzKSxzPXIuX2J1cy5wb3N0TWVzc2FnZShlLGZ1bmN0aW9uKGUpe3kubG9nKCJbSHlwZXJ0eVJlc291cmNlLnJlYWRdIHJlcGx5OiAiLGUpO3ZhciBzPWUuaWQ7c3dpdGNoKGNsZWFyVGltZW91dChpKSxlLmJvZHkuY29kZSl7Y2FzZSAyMDA6ci5fY29udGVudD1lLmJvZHkudmFsdWUuY29udGVudCxlLmJvZHkudmFsdWUuc2l6ZTxyLmFycmF5YnVmZmVyU2l6ZUxpbWl0JiZyLnNhdmUoKSxyLl9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyLl9vd25lcixzKSxuKGUpO2JyZWFrO2Nhc2UgMTgzOnQoZS5ib2R5LnZhbHVlKTticmVhaztkZWZhdWx0OnIuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHIuX293bmVyLHMpLG8oZSl9fSwhMSl9KX19LHtrZXk6ImRlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3kuaW5mbygiW0h5cGVydHlSZXNvdXJjZS5kZWxldGVdIixlLm1ldGFkYXRhKTt2YXIgdD17ZnJvbTplLl9vd25lcix0bzplLl9sb2NhbFN0b3JhZ2VVUkwsdHlwZToiZGVsZXRlIixib2R5OntyZXNvdXJjZXM6ZS5tZXRhZGF0YS5jb250ZW50VVJMfX07cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24ocil7ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24oZSl7cihlLmJvZHkuY29kZTwzMDApfSl9KX19LHtrZXk6Il9nZXRCZXN0Q29udGVudFVSTCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZVswXSxyPXQuc3Vic3RyKHQubGFzdEluZGV4T2YoIi8iKSsxKTtyZXR1cm57dXJsOnRoaXMuX2xvY2FsU3RvcmFnZVVSTCxyZXNvdXJjZTpyLHJlbW90ZVVSTDp0LnN1YnN0cigwLHQubGFzdEluZGV4T2YoIi8iKSl9fX0se2tleToicmVzb3VyY2VUeXBlIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tZXRhZGF0YS5yZXNvdXJjZVR5cGV9fSx7a2V5OiJtaW1ldHlwZSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhLnR5cGV9fSx7a2V5OiJjb250ZW50IixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGVudH19LHtrZXk6ImNvbnRlbnRVUkwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YS5jb250ZW50VVJMfX0se2tleToic2hhcmVhYmxlIixnZXQ6ZnVuY3Rpb24oKXt2YXIgZT0oMCxjLmRlZmF1bHQpKHQucHJvdG90eXBlLl9fcHJvdG9fX3x8KDAsaS5kZWZhdWx0KSh0LnByb3RvdHlwZSksIm1ldGFkYXRhIix0aGlzKTtyZXR1cm4gZS5yZXNvdXJjZVR5cGU9dGhpcy5yZXNvdXJjZVR5cGUsZX19XSksdH0ocC5kZWZhdWx0KTt0LmRlZmF1bHQ9dixlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoMykpLGk9bihyKDUpKSxzPSJ1bmRlZmluZWQiIT10eXBlb2YgQmxvYiYmZnVuY3Rpb24oKXt0cnl7cmV0dXJuIEJvb2xlYW4obmV3IEJsb2IpfWNhdGNoKGUpe3JldHVybiExfX0oKSxhPXMmJiJ1bmRlZmluZWQiIT10eXBlb2YgVWludDhBcnJheSYmZnVuY3Rpb24oKXt0cnl7cmV0dXJuIDEwMD09PW5ldyBCbG9iKFtuZXcgVWludDhBcnJheSgxMDApXSkuc2l6ZX1jYXRjaChlKXtyZXR1cm4hMX19KCksdT0idW5kZWZpbmVkIiE9dHlwZW9mIEhUTUxDYW52YXNFbGVtZW50JiZIVE1MQ2FudmFzRWxlbWVudC5wcm90b3R5cGUudG9CbG9iLGM9dXx8InVuZGVmaW5lZCIhPXR5cGVvZiBVaW50OEFycmF5JiYidW5kZWZpbmVkIiE9dHlwZW9mIEFycmF5QnVmZmVyJiYidW5kZWZpbmVkIiE9dHlwZW9mIGF0b2IsbD0idW5kZWZpbmVkIiE9dHlwZW9mIEZpbGVSZWFkZXJ8fCJ1bmRlZmluZWQiIT10eXBlb2YgVVJMLGQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7KDAsby5kZWZhdWx0KSh0aGlzLGUpfXJldHVybigwLGkuZGVmYXVsdCkoZSxudWxsLFt7a2V5OiJyZXNpemUiLHZhbHVlOmZ1bmN0aW9uKHQscixuKXtpZigiZnVuY3Rpb24iPT10eXBlb2YgciYmKG49cixyPXt3aWR0aDo2NDAsaGVpZ2h0OjQ4MH0pLHIud2lkdGgsci5oZWlnaHQsIWUuaXNTdXBwb3J0ZWQoKXx8IXQudHlwZS5tYXRjaCgvaW1hZ2UuKi8pKXJldHVybiBuKHQsITEpLCExO2lmKHQudHlwZS5tYXRjaCgvaW1hZ2VcL2dpZi8pKXJldHVybiBuKHQsITEpLCExO3ZhciBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpO3JldHVybiBvLm9ubG9hZD1mdW5jdGlvbihpKXt2YXIgcz1vLndpZHRoLGE9by5oZWlnaHQsYz0hMTtpZihzPj1hJiZzPnIud2lkdGg/KGEqPXIud2lkdGgvcyxzPXIud2lkdGgsYz0hMCk6YT5yLmhlaWdodCYmKHMqPXIuaGVpZ2h0L2EsYT1yLmhlaWdodCxjPSEwKSxjKXt2YXIgbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKTtpZihsLndpZHRoPXMsbC5oZWlnaHQ9YSxsLmdldENvbnRleHQoIjJkIikuZHJhd0ltYWdlKG8sMCwwLHMsYSksdSlsLnRvQmxvYihmdW5jdGlvbihlKXtuKGUsITApfSx0LnR5cGUpO2Vsc2V7dmFyIGQ9ZS5fdG9CbG9iKGwsdC50eXBlKTtuKGQsITApfX1lbHNlIG4odCwhMSl9LGUuX2xvYWRJbWFnZShvLHQpLCEwfX0se2tleToiX3RvQmxvYiIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLnRvRGF0YVVSTCh0KS5zcGxpdCgiLCIpLG49dm9pZCAwO249clswXS5pbmRleE9mKCJiYXNlNjQiKT49MD9hdG9iKHJbMV0pOmRlY29kZVVSSUNvbXBvbmVudChyWzFdKTtmb3IodmFyIG89bmV3IEFycmF5QnVmZmVyKG4ubGVuZ3RoKSxpPW5ldyBVaW50OEFycmF5KG8pLHU9MDt1PG4ubGVuZ3RoO3UrPTEpaVt1XT1uLmNoYXJDb2RlQXQodSk7dmFyIGM9clswXS5zcGxpdCgiOiIpWzFdLnNwbGl0KCI7IilbMF0sbD1udWxsO2lmKHMpbD1uZXcgQmxvYihbYT9pOm9dLHt0eXBlOmN9KTtlbHNle3ZhciBkPW5ldyBCbG9iQnVpbGRlcjtkLmFwcGVuZChvKSxsPWQuZ2V0QmxvYihjKX1yZXR1cm4gbH19LHtrZXk6Il9sb2FkSW1hZ2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXtpZigidW5kZWZpbmVkIj09dHlwZW9mIFVSTCl7dmFyIG49bmV3IEZpbGVSZWFkZXI7bi5vbmxvYWQ9ZnVuY3Rpb24odCl7ZS5zcmM9dC50YXJnZXQucmVzdWx0LHImJnIoKX0sbi5yZWFkQXNEYXRhVVJMKHQpfWVsc2UgZS5zcmM9VVJMLmNyZWF0ZU9iamVjdFVSTCh0KSxyJiZyKCl9fSx7a2V5OiJpc1N1cHBvcnRlZCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIEhUTUxDYW52YXNFbGVtZW50JiZjJiZsfX1dKSxlfSgpO3QuZGVmYXVsdD1kLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocigxOCkpLGk9bihyKDc4KSkscz1uKHIoMykpLGE9bihyKDUpKSx1PWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLGM9cigxOSksbD1uKHIoMTMyKSksZD1uKHIoMTMzKSksZj1uKHIoMTM1KSkscD11LmdldExvZ2dlcigiU3luY2hlciIpLHk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixuKXsoMCxzLmRlZmF1bHQpKHRoaXMsZSk7dmFyIG89dGhpcztvLl9vd25lcj10LG8uX2J1cz1yLG8uX3N1YlVSTD1uLnJ1bnRpbWVVUkwrIi9zbSIsby5fcnVudGltZVVybD1uLnJ1bnRpbWVVUkwsby5fcDJwSGFuZGxlcj1uLnAycEhhbmRsZXIsby5fcDJwUmVxdWVzdGVyPW4ucDJwUmVxdWVzdGVyLG8uX3JlcG9ydGVycz17fSxvLl9vYnNlcnZlcnM9e30sby5fcHJvdmlzaW9uYWxzPXt9LHIuYWRkTGlzdGVuZXIodCxmdW5jdGlvbihlKXtpZihlLmZyb20hPT10KXN3aXRjaChwLmluZm8oIltTeW5jaGVyXSBTeW5jaGVyLVJDVjogIixlLG8pLGUudHlwZSl7Y2FzZSJmb3J3YXJkIjpvLl9vbkZvcndhcmQoZSk7YnJlYWs7Y2FzZSJjcmVhdGUiOm8uX29uUmVtb3RlQ3JlYXRlKGUpO2JyZWFrO2Nhc2UiZGVsZXRlIjpvLl9vblJlbW90ZURlbGV0ZShlKTticmVhaztjYXNlImV4ZWN1dGUiOm8uX29uRXhlY3V0ZShlKX19KX1yZXR1cm4oMCxhLmRlZmF1bHQpKGUsW3trZXk6ImNyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdJiZhcmd1bWVudHNbM10sbz1hcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XSYmYXJndW1lbnRzWzRdLHM9YXJndW1lbnRzLmxlbmd0aD41JiZ2b2lkIDAhPT1hcmd1bWVudHNbNV0/YXJndW1lbnRzWzVdOiJubyBuYW1lIixhPWFyZ3VtZW50c1s2XSx1PWFyZ3VtZW50c1s3XTtpZighZSl0aHJvdyBFcnJvcigiW1N5bmNoZXIgLSBDcmVhdGVdIC0gWW91IG5lZWQgc3BlY2lmeSB0aGUgZGF0YSBvYmplY3Qgc2NoZW1hIik7aWYoIXQpdGhyb3cgRXJyb3IoIltTeW5jaGVyIC0gQ3JlYXRlXSAtVGhlIG9ic2VydmVycyBzaG91bGQgYmUgZGVmaW5lZCIpO3ZhciBsPXRoaXM7dT11fHx7fTt2YXIgZD0oMCxpLmRlZmF1bHQpKHt9LHUpO3JldHVybiBkLnAycD1vLGQuc3RvcmU9bixkLnNjaGVtYT1lLGQuYXV0aG9yaXNlPXQsZC5wMnBIYW5kbGVyPWwuX3AycEhhbmRsZXIsZC5wMnBSZXF1ZXN0ZXI9bC5fcDJwUmVxdWVzdGVyLGQuZGF0YT1yPygwLGMuZGVlcENsb25lKShyKTp7fSxkLm5hbWU9MD09PXMubGVuZ3RoPyJubyBuYW1lIjpzLGQucmVwb3J0ZXI9dS5oYXNPd25Qcm9wZXJ0eSgicmVwb3J0ZXIiKSYmImJvb2xlYW4iIT10eXBlb2YgdS5yZXBvcnRlcj91LnJlcG9ydGVyOmwuX293bmVyLGQucmVzdW1lPSExLHU/KGQubXV0dWFsPSF1Lmhhc093blByb3BlcnR5KCJtdXR1YWwiKXx8dS5tdXR1YWwsZC5uYW1lPXUuaGFzT3duUHJvcGVydHkoIm5hbWUiKT91Lm5hbWU6ZC5uYW1lKTpkLm11dHVhbD0hMCx1Lmhhc093blByb3BlcnR5KCJyZXVzZVVSTCIpJiYoZC5yZXNvdXJjZT11LnJldXNlVVJMKSxhJiYoZC5pZGVudGl0eT1hKSxwLmxvZygiW3N5bmNoZXIgLSBjcmVhdGVdIC0gY3JlYXRlIFJlcG9ydGVyIC0gY3JlYXRlSW5wdXQ6ICIsZCksbC5fY3JlYXRlKGQpfX0se2tleToicmVzdW1lUmVwb3J0ZXJzIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gcC5sb2coIltzeW5jaGVyIC0gY3JlYXRlXSAtIHJlc3VtZSBSZXBvcnRlciAtIGNyaXRlcmlhOiAiLGUpLCgwLGkuZGVmYXVsdCkoZSx7cmVzdW1lOiEwfSksdGhpcy5fcmVzdW1lQ3JlYXRlKGUpfX0se2tleToic3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdJiZhcmd1bWVudHNbMl0sbj1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXSYmYXJndW1lbnRzWzNdLG89IShhcmd1bWVudHMubGVuZ3RoPjQmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XSl8fGFyZ3VtZW50c1s0XSxzPSEoYXJndW1lbnRzLmxlbmd0aD41JiZ2b2lkIDAhPT1hcmd1bWVudHNbNV0pfHxhcmd1bWVudHNbNV0sYT1hcmd1bWVudHNbNl0sdT17fTtyZXR1cm4gdS5wMnA9bix1LnN0b3JlPXIsdS5zY2hlbWE9ZSx1LmRvbWFpbl9zdWJzY3JpcHRpb249cyx1LnJlc291cmNlPXQsYSYmKHUuaWRlbnRpdHk9YSksdS5tdXR1YWw9byxwLmxvZygiW3N5bmNoZXIgLSBzdWJzY3JpYmVdIC0gc3Vic2NyaWJlIGNyaXRlcmlhOiAiLHUpLCgwLGkuZGVmYXVsdCkodSx7cmVzdW1lOiExfSksdGhpcy5fc3Vic2NyaWJlKHUpfX0se2tleToicmVzdW1lT2JzZXJ2ZXJzIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lfHx7fTtyZXR1cm4oMCxpLmRlZmF1bHQpKHQse3Jlc3VtZTohMH0pLHRoaXMuX3Jlc3VtZVN1YnNjcmliZSh0KX19LHtrZXk6InJlYWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj17dHlwZToicmVhZCIsZnJvbTp0Ll9vd25lcix0bzplfTtyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihlLG4pe3QuX2J1cy5wb3N0TWVzc2FnZShyLGZ1bmN0aW9uKG8pe3AubG9nKCJbU3luY2hlci5yZWFkXSByZXBseTogIixvKTt2YXIgcz17fSxhPXt9LHU9MDtpZihvLmJvZHkuY29kZTwzMDApaWYoby5ib2R5LnZhbHVlLmhhc093blByb3BlcnR5KCJyZXNwb25zZXMiKSlpZigwPT09dSlhPW8uYm9keS52YWx1ZSwrK3U7ZWxzZXtkZWxldGUgby5ib2R5LnZhbHVlLnJlc3BvbnNlczt2YXIgYz12b2lkIDA7Zm9yKGMgaW4gby5ib2R5LnZhbHVlKXMuaGFzT3duUHJvcGVydHkoYyl8fChzW2NdPXt9KSwoMCxpLmRlZmF1bHQpKHNbY10sby5ib2R5LnZhbHVlW2NdKTsrK3U9PT1hLnJlc3BvbnNlcyYmKGEuY2hpbGRyZW5PYmplY3RzPXMsZGVsZXRlIGEucmVzcG9uc2VzLHQuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHIuZnJvbSxvLmlkKSxlKGEpKX1lbHNlIHQuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHIuZnJvbSxvLmlkKSxlKG8uYm9keS52YWx1ZSk7ZWxzZSBuKG8uYm9keS5kZXNjKX0sITEpfSl9fSx7a2V5OiJvbk5vdGlmaWNhdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyPWV9fSx7a2V5OiJvbkNsb3NlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbkNsb3NlPWV9fSx7a2V5OiJfY3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7dmFyIG89KDAsaS5kZWZhdWx0KSh7fSxlKSxzPWUucmVzdW1lO28uY3JlYXRlZD0obmV3IERhdGUpLnRvSVNPU3RyaW5nKCksby5ydW50aW1lPXQuX3J1bnRpbWVVcmw7dmFyIGE9KDAsYy5kZWVwQ2xvbmUpKG8pO2RlbGV0ZSBhLnAycCxkZWxldGUgYS5zdG9yZSxkZWxldGUgYS5vYnNlcnZlcnMsZGVsZXRlIGEuaWRlbnRpdHk7dmFyIHU9e3R5cGU6ImNyZWF0ZSIsZnJvbTp0Ll9vd25lcix0bzp0Ll9zdWJVUkwsYm9keTp7cmVzdW1lOnMsdmFsdWU6YX19O3UuYm9keS5zY2hlbWE9by5zY2hlbWEsby5wMnAmJih1LmJvZHkucDJwPW8ucDJwKSxvLnN0b3JlJiYodS5ib2R5LnN0b3JlPW8uc3RvcmUpLG8uaWRlbnRpdHkmJih1LmJvZHkuaWRlbnRpdHk9by5pZGVudGl0eSkscC5sb2coIltzeW5jaGVyLl9jcmVhdGVdOiAiLG8sdSksdC5fYnVzLnBvc3RNZXNzYWdlKHUsZnVuY3Rpb24oaSl7aWYocC5sb2coIltzeW5jaGVyIC0gY3JlYXRlXSAtIGNyZWF0ZS1yZXNwb25zZTogIixpKSwyMDA9PT1pLmJvZHkuY29kZSl7by51cmw9aS5ib2R5LnJlc291cmNlLG8uc3RhdHVzPSJsaXZlIixvLnN5bmNoZXI9dCxvLmNoaWxkcmVucz1pLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXM7dmFyIHM9dC5fcmVwb3J0ZXJzW28udXJsXTtzfHwocz1uZXcgbC5kZWZhdWx0KG8pLHQuX3JlcG9ydGVyc1tvLnVybF09cykscy5pbnZpdGVPYnNlcnZlcnMoZS5hdXRob3Jpc2UsZS5wMnApLHIocyl9ZWxzZSBuKGkuYm9keS5kZXNjKX0pfSl9fSx7a2V5OiJfcmVzdW1lQ3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihuLG8pe3ZhciBpPWUucmVzdW1lLHM9e3R5cGU6ImNyZWF0ZSIsZnJvbTpyLl9vd25lcix0bzpyLl9zdWJVUkwsYm9keTp7cmVzdW1lOml9fTtwLmxvZygiW3N5bmNoZXIgLSBjcmVhdGVdOiAiLGUscyksZSYmKHMuYm9keS52YWx1ZT1lLGUuaGFzT3duUHJvcGVydHkoInJlcG9ydGVyIik/cy5ib2R5LnZhbHVlLnJlcG9ydGVyPWUucmVwb3J0ZXI6cy5ib2R5LnZhbHVlLnJlcG9ydGVyPXIuX293bmVyKSxlLnAycCYmKHMuYm9keS5wMnA9ZS5wMnApLGUuc3RvcmUmJihzLmJvZHkuc3RvcmU9ZS5zdG9yZSksZS5vYnNlcnZlcnMmJihzLmJvZHkuYXV0aG9yaXNlPWUub2JzZXJ2ZXJzKSxlLmlkZW50aXR5JiYocy5ib2R5LmlkZW50aXR5PWUuaWRlbnRpdHkpLHAubG9nKCJbc3luY2hlci5fcmVzdW1lQ3JlYXRlXSAtIHJlc3VtZSBtZXNzYWdlOiAiLHMpLHIuX2J1cy5wb3N0TWVzc2FnZShzLGZ1bmN0aW9uKGUpe2lmKHAubG9nKCJbc3luY2hlci5fcmVzdW1lQ3JlYXRlXSAtIGNyZWF0ZS1yZXN1bWVkLXJlc3BvbnNlOiAiLGUpLDIwMD09PWUuYm9keS5jb2RlKXt2YXIgaT1lLmJvZHkudmFsdWU7Zm9yKHZhciBzIGluIGkpe3ZhciBhPWlbc107YS5kYXRhPSgwLGMuZGVlcENsb25lKShhLmRhdGEpfHx7fSxhLmNoaWxkcmVuT2JqZWN0cyYmKGEuY2hpbGRyZW5PYmplY3RzPSgwLGMuZGVlcENsb25lKShhLmNoaWxkcmVuT2JqZWN0cykpLGEubXV0dWFsPSExLGEucmVzdW1lPSEwLGEuc3RhdHVzPSJsaXZlIixhLnN5bmNoZXI9cixwLmxvZygiW3N5bmNoZXIuX3Jlc3VtZUNyZWF0ZV0gLSBjcmVhdGUtcmVzdW1lZC1kYXRhT2JqZWN0UmVwb3J0ZXIiLGEpO3ZhciB1PW5ldyBsLmRlZmF1bHQoYSk7YS5jaGlsZHJlbk9iamVjdHMmJnUucmVzdW1lQ2hpbGRyZW5zKGEuY2hpbGRyZW5PYmplY3RzKSxyLl9yZXBvcnRlcnNbYS51cmxdPXV9bihyLl9yZXBvcnRlcnMpLHQuX29uUmVwb3J0ZXJzUmVzdW1lJiZ0Ll9vblJlcG9ydGVyc1Jlc3VtZSh0Ll9yZXBvcnRlcnMpfWVsc2UgNDA0PT09ZS5ib2R5LmNvZGU/bih7fSk6byhlLmJvZHkuZGVzYyl9KX0pfX0se2tleToiX3N1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihyLG4pe3ZhciBvPXt0eXBlOiJzdWJzY3JpYmUiLGZyb206dC5fb3duZXIsdG86dC5fc3ViVVJMLGJvZHk6e319O2UmJihlLmhhc093blByb3BlcnR5KCJwMnAiKSYmKG8uYm9keS5wMnA9ZS5wMnApLGUuaGFzT3duUHJvcGVydHkoInN0b3JlIikmJihvLmJvZHkuc3RvcmU9ZS5zdG9yZSksZS5oYXNPd25Qcm9wZXJ0eSgic2NoZW1hIikmJihvLmJvZHkuc2NoZW1hPWUuc2NoZW1hKSxlLmhhc093blByb3BlcnR5KCJpZGVudGl0eSIpJiYoby5ib2R5LmlkZW50aXR5PWUuaWRlbnRpdHkpLGUuaGFzT3duUHJvcGVydHkoInJlc291cmNlIikmJihvLmJvZHkucmVzb3VyY2U9ZS5yZXNvdXJjZSksZS5oYXNPd25Qcm9wZXJ0eSgiZG9tYWluX3N1YnNjcmlwdGlvbiIpJiYoby5ib2R5LmRvbWFpbl9zdWJzY3JpcHRpb249ZS5kb21haW5fc3Vic2NyaXB0aW9uKSksby5ib2R5LnJlc3VtZT1lLnJlc3VtZSxlLmhhc093blByb3BlcnR5KCJtdXR1YWwiKSYmKG8uYm9keS5tdXR1YWw9ZS5tdXR1YWwpLHAubG9nKCJbc3luY2hlcl9zdWJzY3JpYmVdIC0gc3Vic2NyaWJlIG1lc3NhZ2U6ICIsZSxvKSx0Ll9idXMucG9zdE1lc3NhZ2UobyxmdW5jdGlvbihvKXtwLmxvZygiW3N5bmNoZXJdIC0gc3Vic2NyaWJlLXJlc3BvbnNlOiAiLG8pO3ZhciBpPW8uYm9keS5yZXNvdXJjZSxzPXQuX3Byb3Zpc2lvbmFsc1tpXTtpZihkZWxldGUgdC5fcHJvdmlzaW9uYWxzW2ldLHMmJnMuX3JlbGVhc2VMaXN0ZW5lcnMoKSxvLmJvZHkuY29kZTwyMDApcC5sb2coIltzeW5jaGVyXSAtIG5ldyBEYXRhUHJvdmlzaW9uYWw6ICIsby5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzLGkpLHM9bmV3IGYuZGVmYXVsdCh0Ll9vd25lcixpLHQuX2J1cyxvLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMpLHQuX3Byb3Zpc2lvbmFsc1tpXT1zO2Vsc2UgaWYoMjAwPT09by5ib2R5LmNvZGUpe3AubG9nKCJbc3luY2hlcl0gLSBuZXcgRGF0YSBPYmplY3QgT2JzZXJ2ZXI6ICIsbyx0Ll9wcm92aXNpb25hbHMpO3ZhciBhPW8uYm9keS52YWx1ZTthLnN5bmNoZXI9dCxhLnAycD1lLnAycCxhLnN0b3JlPWUuc3RvcmUsYS5pZGVudGl0eT1lLmlkZW50aXR5LGEucmVzdW1lPSExLGEubXV0dWFsPWUubXV0dWFsO3ZhciB1PXQuX29ic2VydmVyc1tpXTt1P3Uuc3luYygpOih1PW5ldyBkLmRlZmF1bHQoYSksdC5fb2JzZXJ2ZXJzW2ldPXUpLHAubG9nKCJbc3luY2hlcl0gLSBuZXcgRGF0YSBPYmplY3QgT2JzZXJ2ZXIgYWxyZWFkeSBleGlzdDogIix1KSxyKHUpLHMmJnMuYXBwbHkodSl9ZWxzZSBuKG8uYm9keS5kZXNjKX0pfSl9fSx7a2V5OiJfcmVzdW1lU3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihuLG8pe3ZhciBpPXt0eXBlOiJzdWJzY3JpYmUiLGZyb206ci5fb3duZXIsdG86ci5fc3ViVVJMLGJvZHk6e319O2UmJihlLmhhc093blByb3BlcnR5KCJwMnAiKSYmKGkuYm9keS5wMnA9ZS5wMnApLGUuaGFzT3duUHJvcGVydHkoInN0b3JlIikmJihpLmJvZHkuc3RvcmU9ZS5zdG9yZSksZS5oYXNPd25Qcm9wZXJ0eSgic2NoZW1hIikmJihpLmJvZHkuc2NoZW1hPWUuc2NoZW1hKSxlLmhhc093blByb3BlcnR5KCJpZGVudGl0eSIpJiYoaS5ib2R5LmlkZW50aXR5PWUuaWRlbnRpdHkpLGUuaGFzT3duUHJvcGVydHkoInJlc291cmNlIikmJihpLmJvZHkucmVzb3VyY2U9ZS51cmwpKSxpLmJvZHkucmVzdW1lPWUucmVzdW1lO3ZhciBzPWUubXV0dWFsO2UuaGFzT3duUHJvcGVydHkoIm11dHVhbCIpJiYoaS5ib2R5Lm11dHVhbD1zKSxwLmxvZygiW3N5bmNoZXJdIC0gc3Vic2NyaWJlIG1lc3NhZ2U6ICIsZSxpKSxyLl9idXMucG9zdE1lc3NhZ2UoaSxmdW5jdGlvbihlKXtwLmxvZygiW3N5bmNoZXJdIC0gc3Vic2NyaWJlLXJlc3VtZWQtcmVzcG9uc2U6ICIsZSk7dmFyIGk9ZS5ib2R5LnJlc291cmNlLHM9ci5fcHJvdmlzaW9uYWxzW2ldO2lmKGRlbGV0ZSByLl9wcm92aXNpb25hbHNbaV0scyYmcy5fcmVsZWFzZUxpc3RlbmVycygpLGUuYm9keS5jb2RlPDIwMClwLmxvZygiW3N5bmNoZXJdIC0gcmVzdW1lIG5ldyBEYXRhUHJvdmlzaW9uYWw6ICIsZSxpKSxzPW5ldyBmLmRlZmF1bHQoci5fb3duZXIsaSxyLl9idXMsZS5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKSxyLl9wcm92aXNpb25hbHNbaV09cztlbHNlIGlmKDIwMD09PWUuYm9keS5jb2RlKXt2YXIgYT1lLmJvZHkudmFsdWU7Zm9yKHZhciB1IGluIGEpe3ZhciBsPWFbdV07cC5sb2coIltzeW5jaGVyXSAtIFJlc3VtZSBPYmplY3QgT2JzZXJ2ZXI6ICIsZSxsLHIuX3Byb3Zpc2lvbmFscyksbC5jaGlsZHJlbk9iamVjdHMmJihsLmNoaWxkcmVuT2JqZWN0cz0oMCxjLmRlZXBDbG9uZSkobC5jaGlsZHJlbk9iamVjdHMpKSxsLmRhdGE9KDAsYy5kZWVwQ2xvbmUpKGwuZGF0YSl8fHt9LGwucmVzdW1lPSEwLGwuc3luY2hlcj1yLHAubG9nKCJbc3luY2hlci5fcmVzdW1lU3Vic2NyaWJlXSAtIGNyZWF0ZSBuZXcgZGF0YU9iamVjdDogIixsKTt2YXIgeT1uZXcgZC5kZWZhdWx0KGwpO2wuY2hpbGRyZW5PYmplY3RzJiZ5LnJlc3VtZUNoaWxkcmVucyhsLmNoaWxkcmVuT2JqZWN0cykscC5sb2coIltzeW5jaGVyLl9yZXN1bWVTdWJzY3JpYmVdIC0gbmV3IGRhdGFPYmplY3QiLHkpLHIuX29ic2VydmVyc1t5LnVybF09eSxyLl9wcm92aXNpb25hbHNbeS51cmxdJiZyLl9wcm92aXNpb25hbHNbeS51cmxdLmFwcGx5KHkpfW4oci5fb2JzZXJ2ZXJzKSx0Ll9vbk9ic2VydmVyc1Jlc3VtZSYmdC5fb25PYnNlcnZlcnNSZXN1bWUoci5fb2JzZXJ2ZXJzKX1lbHNlIDQwND09PWUuYm9keS5jb2RlP24oe30pOm8oZS5ib2R5LmRlc2MpfSl9KX19LHtrZXk6Il9vbkZvcndhcmQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX3JlcG9ydGVyc1tlLmJvZHkudG9dLl9vbkZvcndhcmQoZSl9fSx7a2V5OiJfb25SZW1vdGVDcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmZyb20uc2xpY2UoMCwtMTMpLG49KDAsYy5kaXZpZGVVUkwpKHIpLmRvbWFpbixvPXt0eXBlOmUudHlwZSxmcm9tOmUuYm9keS5zb3VyY2UsdXJsOnIsZG9tYWluOm4sc2NoZW1hOmUuYm9keS5zY2hlbWEsdmFsdWU6ZS5ib2R5LnZhbHVlLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxhY2s6ZnVuY3Rpb24ocil7dmFyIG49MjAwO3ImJihuPXIpLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOm59fSl9fTt0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXImJihwLmluZm8oIltTeW5jaGVyXSBOT1RJRklDQVRJT04tRVZFTlQ6ICIsbyksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyKG8pKX19LHtrZXk6Il9vblJlbW90ZURlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZSxuPXQuX29ic2VydmVyc1tyXSxvPXtmcm9tOnQub3duZXIsdG86dC5fc3ViVVJMLGlkOmUuaWQsdHlwZToidW5zdWJzY3JpYmUiLGJvZHk6e3Jlc291cmNlOmUuYm9keS5yZXNvdXJjZX19O2lmKHQuX2J1cy5wb3N0TWVzc2FnZShvKSxkZWxldGUgdC5fb2JzZXJ2ZXJzW3JdLG4pe3ZhciBpPXt0eXBlOmUudHlwZSx1cmw6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBvPTIwMDtyJiYobz1yKSwyMDA9PT1vJiZuLmRlbGV0ZSgpLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOm8sc291cmNlOnQuX293bmVyfX0pfX07dC5fb25Ob3RpZmljYXRpb25IYW5kbGVyJiYocC5sb2coIk5PVElGSUNBVElPTi1FVkVOVDogIixpKSx0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXIoaSkpfWVsc2UgdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDA0LHNvdXJjZTp0Ll9vd25lcn19KX19LHtrZXk6Il9vbkV4ZWN1dGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj17aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMH19O2lmKChlLmZyb209PT10Ll9ydW50aW1lVXJsKyIvcmVnaXN0cnkvInx8ZS5mcm9tPT09dC5fcnVudGltZVVybCsiL3JlZ2lzdHJ5IikmJmUuYm9keSYmZS5ib2R5Lm1ldGhvZCYmImNsb3NlIj09PWUuYm9keS5tZXRob2QmJnQuX29uQ2xvc2Upe3ZhciBuPXt0eXBlOiJjbG9zZSIsYWNrOmZ1bmN0aW9uKGUpe2UmJihyLmJvZHkuY29kZT1lKSx0Ll9idXMucG9zdE1lc3NhZ2Uocil9fTtwLmluZm8oIltTeW5jaGVyXSBDbG9zZS1FVkVOVDogIixuKSx0Ll9vbkNsb3NlKG4pfWVsc2UgdC5fYnVzLnBvc3RNZXNzYWdlKHIpfX0se2tleToib25SZXBvcnRlcnNSZXN1bWUiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVwb3J0ZXJzUmVzdW1lPWV9fSx7a2V5OiJvbk9ic2VydmVyc1Jlc3VtZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25PYnNlcnZlcnNSZXN1bWU9ZX19LHtrZXk6Im93bmVyIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb3duZXJ9fSx7a2V5OiJyZXBvcnRlcnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZXBvcnRlcnN9fSx7a2V5OiJvYnNlcnZlcnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vYnNlcnZlcnN9fV0pLGV9KCk7dC5kZWZhdWx0PXksZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDQyKSksaT1uKHIoNTgpKSxzPW4ocigxOCkpLGE9bihyKDI1KSksdT1uKHIoMykpLGM9bihyKDUpKSxsPW4ocigzMykpLGQ9bihyKDEwMCkpLGY9bihyKDM0KSkscD1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSx5PW4ocigxMjIpKSx2PXIoMTkpLGg9cC5nZXRMb2dnZXIoIkRhdGFPYmplY3RSZXBvcnRlciIpLGI9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXsoMCx1LmRlZmF1bHQpKHRoaXMsdCk7dmFyIHI9KDAsbC5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAsYS5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLGUpKSxuPXI7cmV0dXJuIG4uX3N1YnNjcmlwdGlvbnM9e30sbi5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKGUpe2gubG9nKCJbU3luY2hlci5EYXRhT2JqZWN0UmVwb3J0ZXJdICIrbi51cmwrIiBwdWJsaXNoIGNoYW5nZTogIixlKSxuLl9vbkNoYW5nZShlKX0pLG4uX2FsbG9jYXRlTGlzdGVuZXJzKCksbi5pbnZpdGF0aW9ucz1bXSxuLl9jaGlsZHJlblNpemVUaHJlc2hvbGQ9NWU0LHJ9cmV0dXJuKDAsZi5kZWZhdWx0KSh0LGUpLCgwLGMuZGVmYXVsdCkodCxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGQuZGVmYXVsdCkodC5wcm90b3R5cGUuX19wcm90b19ffHwoMCxhLmRlZmF1bHQpKHQucHJvdG90eXBlKSwiX2FsbG9jYXRlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fb2JqZWN0TGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCxmdW5jdGlvbih0KXtzd2l0Y2goaC5sb2coIltTeW5jaGVyLkRhdGFPYmplY3RSZXBvcnRlcl0gbGlzdGVuZXIgIitlLl91cmwrIiBSZWNlaXZlZDogIix0KSx0LnR5cGUpe2Nhc2UicmVzcG9uc2UiOmUuX29uUmVzcG9uc2UodCk7YnJlYWs7Y2FzZSJyZWFkIjplLl9vblJlYWQodCk7YnJlYWs7Y2FzZSJleGVjdXRlIjplLl9vbkV4ZWN1dGUodCk7YnJlYWs7Y2FzZSJjcmVhdGUiOmUuX29uQ2hpbGRDcmVhdGUodCl9fSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxkLmRlZmF1bHQpKHQucHJvdG90eXBlLl9fcHJvdG9fX3x8KDAsYS5kZWZhdWx0KSh0LnByb3RvdHlwZSksIl9yZWxlYXNlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpLHRoaXMuX29iamVjdExpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiaW52aXRlT2JzZXJ2ZXJzIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj1lO24ubGVuZ3RoPjAmJihoLmxvZygiW1N5bmNoZXIuRGF0YU9iamVjdFJlcG9ydGVyXSBJbnZpdGVPYnNlcnZlcnMgIixuLHIuX21ldGFkYXRhKSxuLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIG49bmV3IHMuZGVmYXVsdChmdW5jdGlvbihuLG8pe3ZhciBpPXt0eXBlOiJjcmVhdGUiLGZyb206ci5fc3luY2hlci5fb3duZXIsdG86ci5fc3luY2hlci5fc3ViVVJMLGJvZHk6e3Jlc3VtZTohMSxyZXNvdXJjZTpyLl91cmwsc2NoZW1hOnIuX3NjaGVtYSx2YWx1ZTpyLl9tZXRhZGF0YSxhdXRob3Jpc2U6W2VdfX07dCYmKGkuYm9keS5wMnA9dCksci5kYXRhLm11dHVhbHx8KGkuYm9keS5tdXR1YWw9ci5kYXRhLm11dHVhbCksci5fYnVzLnBvc3RNZXNzYWdlKGksZnVuY3Rpb24odCl7aC5sb2coIltTeW5jaGVyLkRhdGFPYmplY3RSZXBvcnRlcl0gSW52aXRhdGlvbiByZXBseSAiLHQpO3ZhciByPXtpbnZpdGVkOmUsY29kZTp0LmJvZHkmJnQuYm9keS5jb2RlP3QuYm9keS5jb2RlOjUwMCxkZXNjOnQuYm9keSYmdC5ib2R5LmRlc2M/dC5ib2R5LmRlc2M6IlVua25vd24ifTtyLmNvZGU8MzAwP24ocik6ci5jb2RlPj0zMDAmJm8ocil9KX0pO3IuaW52aXRhdGlvbnMucHVzaChuKX0pKX19LHtrZXk6ImRlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2RlbGV0ZUNoaWxkcmVucygpLnRoZW4oZnVuY3Rpb24odCl7aC5sb2codCk7dmFyIHI9e3R5cGU6ImRlbGV0ZSIsZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6ZS5fdXJsfX07ZS5fYnVzLnBvc3RNZXNzYWdlKHIsZnVuY3Rpb24odCl7aC5sb2coIkRhdGFPYmplY3RSZXBvcnRlci1ERUxFVEU6ICIsdCksMjAwPT09dC5ib2R5LmNvZGUmJihlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX3JlcG9ydGVyc1tlLl91cmxdLGUuX3N5bmNPYmo9e30pfSl9KX19LHtrZXk6Im9uU3Vic2NyaXB0aW9uIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblN1YnNjcmlwdGlvbkhhbmRsZXI9ZX19LHtrZXk6Im9uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyPWV9fSx7a2V5OiJvblJlYWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVhZEhhbmRsZXI9ZX19LHtrZXk6Im9uRXhlY3V0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25FeGVjdXRlSGFuZGxlcj1lfX0se2tleToiX29uRm9yd2FyZCIsdmFsdWU6ZnVuY3Rpb24oZSl7c3dpdGNoKGgubG9nKCJEYXRhT2JqZWN0UmVwb3J0ZXItUkNWOiAiLGUpLGUuYm9keS50eXBlKXtjYXNlInN1YnNjcmliZSI6dGhpcy5fb25TdWJzY3JpYmUoZSk7YnJlYWs7Y2FzZSJ1bnN1YnNjcmliZSI6dGhpcy5fb25VblN1YnNjcmliZShlKX19fSx7a2V5OiJfb25TdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkuZnJvbSxuPSgwLHYuZGl2aWRlVVJMKShyKSxvPW4uZG9tYWluLGk9ITA7ZS5ib2R5Lmhhc093blByb3BlcnR5KCJtdXR1YWwiKSYmIWUuYm9keS5tdXR1YWwmJihpPSExKSxoLmxvZygiW0RhdGFPYmplY3RSZXBvcnRlci5fb25TdWJzY3JpYmVdIixlLG8sbik7dmFyIHM9e3R5cGU6ZS5ib2R5LnR5cGUsdXJsOnIsZG9tYWluOm8saWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LG51dHVhbDppLGFjY2VwdDpmdW5jdGlvbigpe3ZhciBuPXt1cmw6cixzdGF0dXM6ImxpdmUifTt0Ll9zdWJzY3JpcHRpb25zW3JdPW4sdC5tZXRhZGF0YS5zdWJzY3JpcHRpb25zJiZ0Lm1ldGFkYXRhLnN1YnNjcmlwdGlvbnMucHVzaChuLnVybCk7dmFyIG89KDAsdi5kZWVwQ2xvbmUpKHQuX21ldGFkYXRhKTtvLmRhdGE9KDAsdi5kZWVwQ2xvbmUpKHQuZGF0YSksby52ZXJzaW9uPXQuX3ZlcnNpb247dmFyIGk9e2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsc2NoZW1hOnQuX3NjaGVtYSx2YWx1ZTpvfX07cmV0dXJuIGUuYm9keS5oYXNPd25Qcm9wZXJ0eSgibXV0dWFsIikmJiFlLmJvZHkubXV0dWFsJiYoaS5ib2R5Lm11dHVhbD1lLmJvZHkubXV0dWFsLHQuZGF0YS5tdXR1YWw9ITEpLHQuX2J1cy5wb3N0TWVzc2FnZShpKSxufSxyZWplY3Q6ZnVuY3Rpb24ocil7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDAzLGRlc2M6cn19KX19O3QuX29uU3Vic2NyaXB0aW9uSGFuZGxlciYmKGgubG9nKCJTVUJTQ1JJUFRJT04tRVZFTlQ6ICIscyksdC5fb25TdWJzY3JpcHRpb25IYW5kbGVyKHMpKX19LHtrZXk6Il9vblVuU3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LmZyb20sbj0oMCx2LmRpdmlkZVVSTCkociksbz1uLmRvbWFpbjtoLmxvZygiW0RhdGFPYmplY3RSZXBvcnRlci5fb25VblN1YnNjcmliZV0iLGUsbyxuKSxkZWxldGUgdC5fc3Vic2NyaXB0aW9uc1tyXSxkZWxldGUgdC5pbnZpdGF0aW9uc1tyXTt2YXIgaT17dHlwZTplLmJvZHkudHlwZSx1cmw6cixkb21haW46byxpZGVudGl0eTplLmJvZHkuaWRlbnRpdHl9O3QuX29uU3Vic2NyaXB0aW9uSGFuZGxlciYmKGgubG9nKCJVTi1TVUJTQ1JJUFRJT04tRVZFTlQ6ICIsaSksdC5fb25TdWJzY3JpcHRpb25IYW5kbGVyKGkpKX19LHtrZXk6Il9vblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD17dHlwZTplLnR5cGUsdXJsOmUuZnJvbSxjb2RlOmUuYm9keS5jb2RlfTt0aGlzLl9vblJlc3BvbnNlSGFuZGxlciYmKGgubG9nKCJSRVNQT05TRS1FVkVOVDogIix0KSx0aGlzLl9vblJlc3BvbnNlSGFuZGxlcih0KSl9fSx7a2V5OiJfb25SZWFkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9KDAsaS5kZWZhdWx0KSh0LmNoaWxkcmVuc0pTT04pLmxlbmd0aD50Ll9jaGlsZHJlblNpemVUaHJlc2hvbGQsbj17dHlwZTplLnR5cGUsdXJsOmUuZnJvbSxhY2NlcHQ6ZnVuY3Rpb24oKXtyP3QuX3N5bmNSZXBseUZvckxhcmdlRGF0YShlKTp0Ll9zeW5jUmVwbHkoZSl9LHJlamVjdDpmdW5jdGlvbihyKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDEsZGVzYzpyfX0pfX0scz1bXTt0Lm1ldGFkYXRhLnN1YnNjcmlwdGlvbnM/cz10Lm1ldGFkYXRhLnN1YnNjcmlwdGlvbnM6dC5fc3Vic2NyaXB0aW9ucyYmKHM9KDAsby5kZWZhdWx0KSh0Ll9zdWJzY3JpcHRpb25zKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIHQuX3N1YnNjcmlwdGlvbnNbZV0udXJsfSkpLC0xIT1zLmluZGV4T2YoZS5mcm9tKT9yP3QuX3N5bmNSZXBseUZvckxhcmdlRGF0YShlKTp0Ll9zeW5jUmVwbHkoZSk6dC5fb25SZWFkSGFuZGxlciYmKGgubG9nKCJSRUFELUVWRU5UOiAiLG4pLHQuX29uUmVhZEhhbmRsZXIobikpfX0se2tleToiX3N5bmNSZXBseSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPSgwLHYuZGVlcENsb25lKSh0Lm1ldGFkYXRhKTtyLmRhdGE9KDAsdi5kZWVwQ2xvbmUpKHQuZGF0YSksci5jaGlsZHJlbk9iamVjdHM9KDAsdi5kZWVwQ2xvbmUpKHQuY2hpbGRyZW5zSlNPTiksci52ZXJzaW9uPXQuX3ZlcnNpb247dmFyIG49e2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDAsdmFsdWU6cn19O3QuX2J1cy5wb3N0TWVzc2FnZShuKX19LHtrZXk6Il9zeW5jUmVwbHlGb3JMYXJnZURhdGEiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj0oMCx2LmRlZXBDbG9uZSkodC5tZXRhZGF0YSk7ci5kYXRhPSgwLHYuZGVlcENsb25lKSh0LmRhdGEpLHIudmVyc2lvbj10Ll92ZXJzaW9uLGRlbGV0ZSByLmNoaWxkcmVuT2JqZWN0czt2YXIgbj12b2lkIDAsbz1bXSxzPXt9O2ZvcihuIGluIHQuX2NoaWxkcmVuT2JqZWN0cyl7dmFyIGE9dm9pZCAwO2ZvcihhIGluIHNbbl09e30sdC5fY2hpbGRyZW5PYmplY3RzW25dKSgwLGkuZGVmYXVsdCkocykubGVuZ3RoPnQuX2NoaWxkcmVuU2l6ZVRocmVzaG9sZCYmKG8ucHVzaChzKSwocz17fSlbbl09e30pLHNbbl1bYV09e30sc1tuXVthXS52YWx1ZT10Ll9jaGlsZHJlbk9iamVjdHNbbl1bYV0ubWV0YWRhdGEsc1tuXVthXS5pZGVudGl0eT10Ll9jaGlsZHJlbk9iamVjdHNbbl1bYV0uaWRlbnRpdHl9by5wdXNoKHMpLHIucmVzcG9uc2VzPW8ubGVuZ3RoKzE7dmFyIHU9e2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToxMDAsdmFsdWU6cn19O3QuX2J1cy5wb3N0TWVzc2FnZSh1KSxvLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIG49KDAsdi5kZWVwQ2xvbmUpKHUpO24uYm9keS52YWx1ZT1lLG4uYm9keS52YWx1ZS5yZXNwb25zZXM9ci5yZXNwb25zZXMsc2V0VGltZW91dChmdW5jdGlvbigpe3QuX2J1cy5wb3N0TWVzc2FnZShuKX0sNTApfSl9fSx7a2V5OiJfb25FeGVjdXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2lmKCFlLmJvZHkubWV0aG9kKXRocm93IGU7dmFyIHI9e2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDB9fSxuPXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLG1ldGhvZDplLmJvZHkubWV0aG9kLHBhcmFtczplLmJvZHkucGFyYW1zLGFjY2VwdDpmdW5jdGlvbigpe3QuX2J1cy5wb3N0TWVzc2FnZShyKX0scmVqZWN0OmZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMSxkZXNjOnJ9fSl9fTt0Ll9vbkV4ZWN1dGVIYW5kbGVyJiYoaC5sb2coIltEYXRhT2JqZWN0UmVwb3J0ZXJdIEVYRUNVVEUtRVZFTlQ6ICIsbiksdC5fb25FeGVjdXRlSGFuZGxlcihuKSl9fSx7a2V5OiJzdWJzY3JpcHRpb25zIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3Vic2NyaXB0aW9uc319LHtrZXk6ImNoaWxkcmVuc0pTT04iLGdldDpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17fSxyPXZvaWQgMDtmb3IociBpbiBlLl9jaGlsZHJlbk9iamVjdHMpe3ZhciBuPXZvaWQgMDtmb3IobiBpbiB0W3JdPXt9LGUuX2NoaWxkcmVuT2JqZWN0c1tyXSl0W3JdW25dPXt9LHRbcl1bbl0udmFsdWU9ZS5fY2hpbGRyZW5PYmplY3RzW3JdW25dLm1ldGFkYXRhLHRbcl1bbl0uaWRlbnRpdHk9ZS5fY2hpbGRyZW5PYmplY3RzW3JdW25dLmlkZW50aXR5fXJldHVybiB0fX1dKSx0fSh5LmRlZmF1bHQpO3QuZGVmYXVsdD1iLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocig0MikpLGk9bihyKDc4KSkscz1uKHIoMTgpKSxhPW4ocigyNSkpLHU9bihyKDMpKSxjPW4ocig1KSksbD1uKHIoMzMpKSxkPW4ocigxMDApKSxmPW4ocigzNCkpLHA9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSkseT1yKDE5KSx2PW4ocigxMjIpKSxoPXAuZ2V0TG9nZ2VyKCJEYXRhT2JqZWN0T2JzZXJ2ZXIiKSxiPSJhbnkiLF89InN0YXJ0IixtPSJleGFjdCIsZz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpeygwLHUuZGVmYXVsdCkodGhpcyx0KTt2YXIgcj0oMCxsLmRlZmF1bHQpKHRoaXMsKHQuX19wcm90b19ffHwoMCxhLmRlZmF1bHQpKHQpKS5jYWxsKHRoaXMsZSkpLG49cjtyZXR1cm4gbi5fdmVyc2lvbj1lLnZlcnNpb24sbi5fZmlsdGVycz17fSxuLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7bi5fb25GaWx0ZXIoZSl9KSxuLl9hbGxvY2F0ZUxpc3RlbmVycygpLHJ9cmV0dXJuKDAsZi5kZWZhdWx0KSh0LGUpLCgwLGMuZGVmYXVsdCkodCxbe2tleToic3luYyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBoLmluZm8oIltEYXRhT2JqZWN0T2JzZXJ2ZXJfc3luY10gc3luY2hyb25pc2luZyAiKSxuZXcgcy5kZWZhdWx0KGZ1bmN0aW9uKHQscil7ZS5fc3luY2hlci5yZWFkKGUuX21ldGFkYXRhLnVybCkudGhlbihmdW5jdGlvbihyKXtoLmluZm8oIltEYXRhT2JqZWN0T2JzZXJ2ZXJfc3luY10gdmFsdWUgdG8gc3luYzogIixyKSwoMCxpLmRlZmF1bHQpKGUuZGF0YSwoMCx5LmRlZXBDbG9uZSkoci5kYXRhKSksZS5fdmVyc2lvbj1yLnZlcnNpb24sZS5fbWV0YWRhdGEubGFzdE1vZGlmaWVkPXIubGFzdE1vZGlmaWVkLHIuY2hpbGRyZW5PYmplY3RzPyhlLnJlc3VtZUNoaWxkcmVucyhyLmNoaWxkcmVuT2JqZWN0cyksZS5fc3RvcmVDaGlsZHJlbnMoKSx0KCEwKSk6dCghMCl9KS5jYXRjaChmdW5jdGlvbihlKXtoLmluZm8oIltEYXRhT2JqZWN0T2JzZXJ2ZXJfc3luY10gc3luYyBmYWlsZWQ6ICIsZSksdCghMSl9KX0pfX0se2tleToiX3N0b3JlQ2hpbGRyZW5zIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17fTsoMCxvLmRlZmF1bHQpKGUuX2NoaWxkcmVuT2JqZWN0cykuZm9yRWFjaChmdW5jdGlvbihyKXt2YXIgbj1lLl9jaGlsZHJlbk9iamVjdHNbcl07dFtyXT17fSwoMCxvLmRlZmF1bHQpKG4pLmZvckVhY2goZnVuY3Rpb24oZSl7dFtyXVtlXT17fSx0W3JdW2VdLnZhbHVlPW5bZV0ubWV0YWRhdGEsdFtyXVtlXS5pZGVudGl0eT1uW2VdLmlkZW50aXR5fSl9KTt2YXIgcj17ZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsdHlwZToiY3JlYXRlIixib2R5OntyZXNvdXJjZTplLl91cmwsYXR0cmlidXRlOiJjaGlsZHJlbk9iamVjdHMiLHZhbHVlOnR9fTtlLl9idXMucG9zdE1lc3NhZ2Uocil9fSx7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsZC5kZWZhdWx0KSh0LnByb3RvdHlwZS5fX3Byb3RvX198fCgwLGEuZGVmYXVsdCkodC5wcm90b3R5cGUpLCJfYWxsb2NhdGVMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9jaGFuZ2VMaXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsKyIvY2hhbmdlcyIsZnVuY3Rpb24odCl7InVwZGF0ZSI9PT10LnR5cGUmJihoLmxvZygiRGF0YU9iamVjdE9ic2VydmVyLSIrZS5fdXJsKyItUkNWOiAiLHQpLGUuX2NoYW5nZU9iamVjdChlLl9zeW5jT2JqLHQpKX0pfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsZC5kZWZhdWx0KSh0LnByb3RvdHlwZS5fX3Byb3RvX198fCgwLGEuZGVmYXVsdCkodC5wcm90b3R5cGUpLCJfcmVsZWFzZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKSx0aGlzLl9jaGFuZ2VMaXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6ImRlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2RlbGV0ZUNoaWxkcmVucygpLnRoZW4oZnVuY3Rpb24oKXtlLnVuc3Vic2NyaWJlKCksZS5fcmVsZWFzZUxpc3RlbmVycygpLGRlbGV0ZSBlLl9zeW5jaGVyLl9vYnNlcnZlcnNbZS5fdXJsXX0pfX0se2tleToidW5zdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOiJ1bnN1YnNjcmliZSIsZnJvbTplLl9vd25lcix0bzplLl9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzb3VyY2U6ZS5fdXJsfX07ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24odCl7aC5sb2coIkRhdGFPYmplY3RPYnNlcnZlci1VTlNVQlNDUklCRTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fb2JzZXJ2ZXJzW2UuX3VybF0pfSl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj1lLG49e3R5cGU6bSxjYWxsYmFjazp0fSxvPWUuaW5kZXhPZigiKiIpO289PT1lLmxlbmd0aC0xJiYoMD09PW8/bi50eXBlPWI6KG4udHlwZT1fLHI9ZS5zdWJzdHIoMCxlLmxlbmd0aC0xKSkpLHRoaXMuX2ZpbHRlcnNbcl09bn19LHtrZXk6Il9vbkZpbHRlciIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczsoMCxvLmRlZmF1bHQpKHQuX2ZpbHRlcnMpLmZvckVhY2goZnVuY3Rpb24ocil7dmFyIG49dC5fZmlsdGVyc1tyXTtuLnR5cGU9PT1iP24uY2FsbGJhY2soZSk6bi50eXBlPT09Xz8wPT09ZS5maWVsZC5pbmRleE9mKHIpJiZuLmNhbGxiYWNrKGUpOm4udHlwZT09PW0mJmUuZmllbGQ9PT1yJiZuLmNhbGxiYWNrKGUpfSl9fSx7a2V5OiJvbkRpc2Nvbm5lY3RlZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IHMuZGVmYXVsdChmdW5jdGlvbihyLG4pe3QuX3N1YnNjcmliZVJlZ2lzdHJhdGlvbigpLnRoZW4oZnVuY3Rpb24oKXt0Ll9vbkRpc2Nvbm5lY3RlZD1lLHIoKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiBuKGUpfSl9KX19LHtrZXk6Il9zdWJzY3JpYmVSZWdpc3RyYXRpb24iLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOiJzdWJzY3JpYmUiLGZyb206dGhpcy5fb3duZXIsdG86dGhpcy5fc3luY2hlci5fcnVudGltZVVybCsiL3N1YnNjcmlwdGlvbnMiLGJvZHk6e3Jlc291cmNlczpbdGhpcy5fdXJsKyIvcmVnaXN0cmF0aW9uIl19fTtyZXR1cm4gbmV3IHMuZGVmYXVsdChmdW5jdGlvbihyLG4pe2UuX2J1cy5wb3N0TWVzc2FnZSh0LGZ1bmN0aW9uKHQpe2gubG9nKCJbRGF0YU9iamVjdE9ic2VydmVyLl9zdWJzY3JpYmVSZWdpc3RyYXRpb25dICIrZS5fdXJsKyIgcmN2ZWQgcmVwbHkgIix0KSwyMDA9PT10LmJvZHkuY29kZT8oZS5fZ2VuZXJhdGVMaXN0ZW5lcihlLl91cmwrIi9yZWdpc3RyYXRpb24iKSxyKCkpOihoLmVycm9yKCJFcnJvciBzdWJzY3JpYmluZyByZWdpc3RyYXRpb24gc3RhdHVzIGZvciAiLGUuX3VybCksbigiRXJyb3Igc3Vic2NyaWJpbmcgcmVnaXN0cmF0aW9uIHN0YXR1cyBmb3IgIitlLl91cmwpKX0pfSl9fSx7a2V5OiJfZ2VuZXJhdGVMaXN0ZW5lciIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9idXMuYWRkTGlzdGVuZXIoZSxmdW5jdGlvbihlKXtoLmxvZygiW0RhdGFPYmplY3RPYnNlcnZlci5yZWdpc3RyYXRpb25Ob3RpZmljYXRpb25dICIrdC5fdXJsKyI6ICIsZSksZS5ib2R5LnZhbHVlJiYiZGlzY29ubmVjdGVkIj09PWUuYm9keS52YWx1ZSYmdC5fb25EaXNjb25uZWN0ZWQmJihoLmxvZygiW0RhdGFPYmplY3RPYnNlcnZlcl0gIit0Ll91cmwrIjogd2FzIGRpc2Nvbm5lY3RlZCAiLGUpLHQuX29uRGlzY29ubmVjdGVkKCkpfSl9fSx7a2V5OiJleGVjdXRlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj10aGlzO3JldHVybiBuZXcgcy5kZWZhdWx0KGZ1bmN0aW9uKG8saSl7dmFyIHM9e3R5cGU6ImV4ZWN1dGUiLGZyb206ci5fb3duZXIsdG86bi5fdXJsLGJvZHk6e21ldGhvZDplLHBhcmFtczp0fX07bi5fYnVzLnBvc3RNZXNzYWdlKHMsZnVuY3Rpb24odCl7aC5sb2coIltEYXRhT2JqZWN0T2JzZXJ2ZXIuZXhlY3V0ZV0gIituLl91cmwrIiByY3ZlZCByZXBseSAiLHQpLDIwMD09PXQuYm9keS5jb2RlP28oKTooaC53YXJuKCJbRGF0YU9iamVjdE9ic2VydmVyLmV4ZWN1dGVdIGV4ZWN1dGlvbiBvZiBtZXRob2QgIitlKyIgd2FzIHJlamVjdCBieSByZXBvcnRlciIpLGkoIltEYXRhT2JqZWN0T2JzZXJ2ZXIuZXhlY3V0ZV0gZXhlY3V0aW9uIG9mIG1ldGhvZCAiK2UrIiB3YXMgcmVqZWN0IGJ5IHJlcG9ydGVyIikpfSl9KX19XSksdH0odi5kZWZhdWx0KTt0LmRlZmF1bHQ9ZyxlLmV4cG9ydHM9dC5kZWZhdWx0fSwsZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDMpKSxpPW4ocig1KSkscz1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKS5nZXRMb2dnZXIoIkRhdGFQcm92aXNpb25hbCIpLGE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixuLGkpeygwLG8uZGVmYXVsdCkodGhpcyxlKTt2YXIgcz10aGlzO3MuX293bmVyPXQscy5fdXJsPXIscy5fYnVzPW4scy5fY2hpbGRyZW49aSxzLl9jaGFuZ2VzPVtdLHMuX2FsbG9jYXRlTGlzdGVuZXJzKCl9cmV0dXJuKDAsaS5kZWZhdWx0KShlLFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9saXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsLGZ1bmN0aW9uKHQpe3MubG9nKCJEYXRhUHJvdmlzaW9uYWwtIitlLl91cmwrIi1SQ1Y6ICIsdCksZS5fY2hhbmdlcy5wdXNoKHQpfSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9saXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6ImFwcGx5Iix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9jaGFuZ2VzLmZvckVhY2goZnVuY3Rpb24odCl7ZS5fY2hhbmdlT2JqZWN0KGUuX3N5bmNPYmosdCl9KX19LHtrZXk6ImNoaWxkcmVuIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW59fV0pLGV9KCk7dC5kZWZhdWx0PWEsZS5leHBvcnRzPXQuZGVmYXVsdH0sLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksdC5Ob3RpZmljYXRpb25IYW5kbGVyPXQuRGF0YU9iamVjdE9ic2VydmVyPXQuRGF0YU9iamVjdFJlcG9ydGVyPXQuU3luY2hlcj12b2lkIDA7dmFyIG89ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSksaT1uKHIoMTMxKSkscz1uKHIoMTMyKSksYT1uKHIoMTMzKSksdT1uKHIoMTk3KSksYz1vLmdldExvZ2dlcigiU3luY2hlciIpLGw9by5nZXRMb2dnZXIoIkRhdGFPYmplY3QiKSxkPW8uZ2V0TG9nZ2VyKCJEYXRhT2JqZWN0Q2hpbGQiKSxmPW8uZ2V0TG9nZ2VyKCJEYXRhT2JqZWN0T2JzZXJ2ZXIiKSxwPW8uZ2V0TG9nZ2VyKCJEYXRhT2JqZWN0UmVwb3J0ZXIiKSx5PW8uZ2V0TG9nZ2VyKCJEYXRhUHJvdmlzaW9uYWwiKTtjLnNldExldmVsKDApLGwuc2V0TGV2ZWwoMCksZC5zZXRMZXZlbCgwKSxmLnNldExldmVsKDApLHAuc2V0TGV2ZWwoMCkseS5zZXRMZXZlbCgwKSx0LlN5bmNoZXI9aS5kZWZhdWx0LHQuRGF0YU9iamVjdFJlcG9ydGVyPXMuZGVmYXVsdCx0LkRhdGFPYmplY3RPYnNlcnZlcj1hLmRlZmF1bHQsdC5Ob3RpZmljYXRpb25IYW5kbGVyPXUuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDMpKSxpPW4ocig1KSkscz1yKDE5KSxhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXtpZigoMCxvLmRlZmF1bHQpKHRoaXMsZSksIXQpdGhyb3cgRXJyb3IoIltOb3RpZmljYXRpb25IYW5kbGVyIENvbnN0cnVjdG9yXSBidXMgaW5wdXQgaXMgbWFuZGF0b3J5Iik7dGhpcy5fYnVzPXQsdGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyPXt9fXJldHVybigwLGkuZGVmYXVsdCkoZSxbe2tleToib25Ob3RpZmljYXRpb24iLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyW2VdPXR9fSx7a2V5OiJvbkNyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5oYXNPd25Qcm9wZXJ0eSgicmVzb3VyY2UiKT9lLmJvZHkucmVzb3VyY2U6ZS5mcm9tLnNsaWNlKDAsLTEzKSxuPSgwLHMuZGl2aWRlVVJMKShyKS5kb21haW4sbz1yLnNwbGl0KCI6Ly8iKVswXSxpPWZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMCxkZXNjOiJCYWQgUmVxdWVzdDogIityfX0pfTtlLmJvZHkuaGFzT3duUHJvcGVydHkoInNvdXJjZSIpfHxpKCJNaXNzaW5nIHNvdXJjZSIpLGUuYm9keS5oYXNPd25Qcm9wZXJ0eSgic2NoZW1hIil8fGkoIk1pc3Npbmcgc2NoZW1hIiksZS5ib2R5Lmhhc093blByb3BlcnR5KCJ2YWx1ZSIpfHxpKCJNaXNzaW5nIHZhbHVlIiksZS5ib2R5Lmhhc093blByb3BlcnR5KCJpZGVudGl0eSIpfHxpKCJNaXNzaW5nIGlkZW50aXR5Iik7dmFyIGE9e3R5cGU6ZS50eXBlLGZyb206ZS5ib2R5LnNvdXJjZSx1cmw6cixkb21haW46bixzY2hlbWE6ZS5ib2R5LnNjaGVtYSx2YWx1ZTplLmJvZHkudmFsdWUsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LHRvOmUudG8sdmlhOmUuYm9keS52aWEsYWNrOmZ1bmN0aW9uKHIpe3ZhciBuPTIwMDtyJiYobj1yKSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpufX0pfSxlcnJvcjpmdW5jdGlvbihlKXtpKGUpfX07dC5fb25Ob3RpZmljYXRpb25IYW5kbGVyW29dJiYoY29uc29sZS5pbmZvKCJbTm90aWZpY2F0aW9uSGFuZGxlcl0gTk9USUZJQ0FUSU9OLUVWRU5UOiAiLGEpLHQuX29uTm90aWZpY2F0aW9uSGFuZGxlcltvXShhKSl9fSx7a2V5OiJvbkRlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5yZXNvdXJjZSxuPXQuX29ic2VydmVyc1tyXSxvPXtmcm9tOnQub3duZXIsdG86dC5fc3ViVVJMLGlkOmUuaWQsdHlwZToidW5zdWJzY3JpYmUiLGJvZHk6e3Jlc291cmNlOmUuYm9keS5yZXNvdXJjZX19O2lmKHQuX2J1cy5wb3N0TWVzc2FnZShvKSxkZWxldGUgdC5fb2JzZXJ2ZXJzW3JdLG4pe3ZhciBpPXt0eXBlOmUudHlwZSx1cmw6cixpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBvPTIwMDtyJiYobz1yKSwyMDA9PT1vJiZuLmRlbGV0ZSgpLHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOm8sc291cmNlOnQuX293bmVyfX0pfX07dC5fb25Ob3RpZmljYXRpb25IYW5kbGVyJiYobG9nLmxvZygiTk9USUZJQ0FUSU9OLUVWRU5UOiAiLGkpLHQuX29uTm90aWZpY2F0aW9uSGFuZGxlcihpKSl9ZWxzZSB0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDQsc291cmNlOnQuX293bmVyfX0pfX1dKSxlfSgpO3QuZGVmYXVsdD1hLGUuZXhwb3J0cz10LmRlZmF1bHR9XSl9KX0sZnVuY3Rpb24oZSx0LHIpeyFmdW5jdGlvbih0LHIpe2UuZXhwb3J0cz1yKCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZiYmc2VsZixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtmdW5jdGlvbiB0KG4pe2lmKHJbbl0pcmV0dXJuIHJbbl0uZXhwb3J0czt2YXIgbz1yW25dPXtpOm4sbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtuXS5jYWxsKG8uZXhwb3J0cyxvLG8uZXhwb3J0cyx0KSxvLmw9ITAsby5leHBvcnRzfXZhciByPXt9O3JldHVybiB0Lm09ZSx0LmM9cix0LmQ9ZnVuY3Rpb24oZSxyLG4pe3QubyhlLHIpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLHtjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMCxnZXQ6bn0pfSx0Lm49ZnVuY3Rpb24oZSl7dmFyIHI9ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIHQuZChyLCJhIixyKSxyfSx0Lm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LHQucD0iIix0KHQucz0xNjEpfShbZnVuY3Rpb24oZSx0KXt2YXIgcj1lLmV4cG9ydHM9e3ZlcnNpb246IjIuNS43In07Im51bWJlciI9PXR5cGVvZiBfX2UmJihfX2U9cil9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5leHBvcnRzPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLk1hdGg9PU1hdGg/c2VsZjpGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpOyJudW1iZXIiPT10eXBlb2YgX19nJiYoX19nPXIpfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzNikoIndrcyIpLG89cigyMyksaT1yKDEpLlN5bWJvbCxzPSJmdW5jdGlvbiI9PXR5cGVvZiBpOyhlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPXMmJmlbZV18fChzP2k6bykoIlN5bWJvbC4iK2UpKX0pLnN0b3JlPW59LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD1mdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz0hcigxMykoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19KHIoNTkpKTt0LmRlZmF1bHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBvPXRbcl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsInZhbHVlImluIG8mJihvLndyaXRhYmxlPSEwKSwoMCxuLmRlZmF1bHQpKGUsby5rZXksbyl9fXJldHVybiBmdW5jdGlvbih0LHIsbil7cmV0dXJuIHImJmUodC5wcm90b3R5cGUsciksbiYmZSh0LG4pLHR9fSgpfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKSxvPXIoMCksaT1yKDE0KSxzPXIoMTEpLGE9cigxMCksdT1mdW5jdGlvbihlLHQscil7dmFyIGMsbCxkLGY9ZSZ1LkYscD1lJnUuRyx5PWUmdS5TLHY9ZSZ1LlAsaD1lJnUuQixiPWUmdS5XLF89cD9vOm9bdF18fChvW3RdPXt9KSxtPV8ucHJvdG90eXBlLGc9cD9uOnk/blt0XTooblt0XXx8e30pLnByb3RvdHlwZTtmb3IoYyBpbiBwJiYocj10KSxyKShsPSFmJiZnJiZ2b2lkIDAhPT1nW2NdKSYmYShfLGMpfHwoZD1sP2dbY106cltjXSxfW2NdPXAmJiJmdW5jdGlvbiIhPXR5cGVvZiBnW2NdP3JbY106aCYmbD9pKGQsbik6YiYmZ1tjXT09ZD9mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbih0LHIsbil7aWYodGhpcyBpbnN0YW5jZW9mIGUpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyBlO2Nhc2UgMTpyZXR1cm4gbmV3IGUodCk7Y2FzZSAyOnJldHVybiBuZXcgZSh0LHIpfXJldHVybiBuZXcgZSh0LHIsbil9cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gdC5wcm90b3R5cGU9ZS5wcm90b3R5cGUsdH0oZCk6diYmImZ1bmN0aW9uIj09dHlwZW9mIGQ/aShGdW5jdGlvbi5jYWxsLGQpOmQsdiYmKChfLnZpcnR1YWx8fChfLnZpcnR1YWw9e30pKVtjXT1kLGUmdS5SJiZtJiYhbVtjXSYmcyhtLGMsZCkpKX07dS5GPTEsdS5HPTIsdS5TPTQsdS5QPTgsdS5CPTE2LHUuVz0zMix1LlU9NjQsdS5SPTEyOCxlLmV4cG9ydHM9dX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiBlP251bGwhPT1lOiJmdW5jdGlvbiI9PXR5cGVvZiBlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDM5KSxpPXIoMjcpLHM9T2JqZWN0LmRlZmluZVByb3BlcnR5O3QuZj1yKDQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihlLHQscil7aWYobihlKSx0PWkodCwhMCksbihyKSxvKXRyeXtyZXR1cm4gcyhlLHQscil9Y2F0Y2goZSl7fWlmKCJnZXQiaW4gcnx8InNldCJpbiByKXRocm93IFR5cGVFcnJvcigiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhIik7cmV0dXJuInZhbHVlImluIHImJihlW3RdPXIudmFsdWUpLGV9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoIW4oZSkpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgYW4gb2JqZWN0ISIpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0KXt2YXIgcj17fS5oYXNPd25Qcm9wZXJ0eTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gci5jYWxsKGUsdCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig4KSxvPXIoMTYpO2UuZXhwb3J0cz1yKDQpP2Z1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5mKGUsdCxvKDEscikpfTpmdW5jdGlvbihlLHQscil7cmV0dXJuIGVbdF09cixlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNTUpLG89cigzMCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKGUpe3JldHVybiEwfX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDI0KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gocil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gZS5jYWxsKHQscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixuKXtyZXR1cm4gZS5jYWxsKHQscixuKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG4sbyl7cmV0dXJuIGUuY2FsbCh0LHIsbixvKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSEwfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybntlbnVtZXJhYmxlOiEoMSZlKSxjb25maWd1cmFibGU6ISgyJmUpLHdyaXRhYmxlOiEoNCZlKSx2YWx1ZTp0fX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPXt9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoMTAyKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBvKGUpe2Z1bmN0aW9uIHQoZSl7cmV0dXJuIGUucmVwbGFjZSgvKFthLXpBLVotXSopKDpcL1wvKD86XC4pP3w6KShbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fSkoWy1hLXpBLVowLTlAOiUuX1wrfiM9XC9dKikvZ2ksIiQxLCQzLCQ0Iikuc3BsaXQoIiwiKX12YXIgcj10KGUpO2lmKHJbMF09PT1lJiYhclswXS5pbmNsdWRlcygiQCIpKXt2YXIgbj17dHlwZToiIixkb21haW46ZSxpZGVudGl0eToiIn07cmV0dXJuIGNvbnNvbGUud2FybigiW0RpdmlkZVVSTF0gRGl2aWRlVVJMIGRvbid0IHN1cHBvcnQgdXJsIHdpdGhvdXQgc2NoZW1lLiBQbGVhc2UgcmV2aWV3IHlvdXIgdXJsIGFkZHJlc3MiLGUpLG59cmV0dXJuIHJbMF09PT1lJiZyWzBdLmluY2x1ZGVzKCJAIikmJihyPXQoKHJbMF09PT1lPyJzbXRwIjpyWzBdKSsiOi8vIityWzBdKSksclsxXS5pbmNsdWRlcygiQCIpJiYoclsyXT1yWzBdKyI6Ly8iK3JbMV0sclsxXT1yWzFdLnN1YnN0cihyWzFdLmluZGV4T2YoIkAiKSsxKSkse3R5cGU6clswXSxkb21haW46clsxXSxpZGVudGl0eTpyWzJdfX1mdW5jdGlvbiBpKGUpe3ZhciB0PWUuaW5kZXhPZigiQCIpO3JldHVybiJ1c2VyOi8vIitlLnN1YnN0cmluZyh0KzEsZS5sZW5ndGgpKyIvIitlLnN1YnN0cmluZygwLHQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgcz1uKHIoNTgpKSxhPW4ocig0MikpO3QuZGl2aWRlVVJMPW8sdC5kaXZpZGVFbWFpbD1mdW5jdGlvbihlKXt2YXIgdD1lLmluZGV4T2YoIkAiKTtyZXR1cm57dXNlcm5hbWU6ZS5zdWJzdHJpbmcoMCx0KSxkb21haW46ZS5zdWJzdHJpbmcodCsxLGUubGVuZ3RoKX19LHQuZW1wdHlPYmplY3Q9ZnVuY3Rpb24oZSl7cmV0dXJuISgoMCxhLmRlZmF1bHQpKGUpLmxlbmd0aD4wKX0sdC5kZWVwQ2xvbmU9ZnVuY3Rpb24oZSl7aWYoZSlyZXR1cm4gSlNPTi5wYXJzZSgoMCxzLmRlZmF1bHQpKGUpKX0sdC5nZXRVc2VyVVJMRnJvbUVtYWlsPWksdC5nZXRVc2VyRW1haWxGcm9tVVJMPWZ1bmN0aW9uKGUpe3ZhciB0PW8oZSk7cmV0dXJuIHQuaWRlbnRpdHkucmVwbGFjZSgiLyIsIiIpKyJAIit0LmRvbWFpbn0sdC5jb252ZXJ0VG9Vc2VyVVJMPWZ1bmN0aW9uKGUpe2lmKCJ1c2VyOi8vIj09PWUuc3Vic3RyaW5nKDAsNykpe3ZhciB0PW8oZSk7aWYodC5kb21haW4mJnQuaWRlbnRpdHkpcmV0dXJuIGU7dGhyb3cidXNlclVSTCB3aXRoIHdyb25nIGZvcm1hdCJ9cmV0dXJuIGkoZSl9LHQuY2hlY2tBdHRyaWJ1dGU9ZnVuY3Rpb24oZSl7dmFyIHQ9LygoKFthLXpBLVpdKyk6XC9cLyhbMC05YS16QS1aXVstXHddKlswLTlhLXpBLVpdXC4pK1thLXpBLVpdezIsOX0pXC9bYS16QS1aMC05XC5dK0BbYS16QS1aMC05XSsoXC0pP1thLXpBLVowLTldKyhcLik/W2EtekEtWjAtOV17MiwxMH0/XC5bYS16QS1aXXsyLDEwfSkoLisoPz0uaWRlbnRpdHkpKT8vZ20scj1bXSxuPVtdO2lmKG51bGw9PWUubWF0Y2godCkpbj1lLnNwbGl0KCIuIik7ZWxzZXtmb3IodmFyIG89dm9pZCAwO251bGwhPT0obz10LmV4ZWMoZSkpOylvLmluZGV4PT09dC5sYXN0SW5kZXgmJnQubGFzdEluZGV4Kyssby5mb3JFYWNoKGZ1bmN0aW9uKGUsdCl7MD09PXQmJnIucHVzaChlKX0pO3ZhciBpPXZvaWQgMDtyLmZvckVhY2goZnVuY3Rpb24odCl7aT1lLnJlcGxhY2UodCwiKisqIiksbj1pLnNwbGl0KCIuIikubWFwKGZ1bmN0aW9uKGUpe3JldHVybiIqKyoiPT09ZT90OmV9KX0pfXJldHVybiBjb25zb2xlLmxvZygiW1NlcnZpY2VGcmFtZXdvcmsuVXRpbHMuY2hlY2tBdHRyaWJ1dGVdIixuKSxufSx0LnBhcnNlQXR0cmlidXRlcz1mdW5jdGlvbihlKXtpZihlLmluY2x1ZGVzKCI6Ly8iKSl7dmFyIHQ9ZS5zcGxpdCgvKFswLTlhLXpBLVpdWy1cd10qKTpcL1wvL2cpWzBdLHI9dC5zcGxpdCgiLiIpLG49ZS5yZXBsYWNlKHQsIiIpO2lmKGUuaW5jbHVkZXMoImlkZW50aXR5Iikpe3ZhciBvPW4uc3BsaXQoImlkZW50aXR5LiIpO2NvbnNvbGUubG9nKCJhcnJheTIgIitvKSxuPW9bMF0uc2xpY2UoIi4iLC0xKSxvPW9bMV0uc3BsaXQoIi4iKSxyLnB1c2gobiwiaWRlbnRpdHkiKSxyPXIuY29uY2F0KG8pfWVsc2Ugci5wdXNoKG4pO3JldHVybiByLmZpbHRlcihCb29sZWFuKX1yZXR1cm4gZS5zcGxpdCgiLiIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNDUpLG89cigzNyk7ZS5leHBvcnRzPU9iamVjdC5rZXlzfHxmdW5jdGlvbihlKXtyZXR1cm4gbihlLG8pfX0sZnVuY3Rpb24oZSx0KXt2YXIgcj17fS50b1N0cmluZztlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHIuY2FsbChlKS5zbGljZSg4LC0xKX19LCxmdW5jdGlvbihlLHQpe3ZhciByPTAsbj1NYXRoLnJhbmRvbSgpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4iU3ltYm9sKCIuY29uY2F0KHZvaWQgMD09PWU/IiI6ZSwiKV8iLCgrK3IrbikudG9TdHJpbmcoMzYpKX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIGV9fSwsZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOCkuZixvPXIoMTApLGk9cigyKSgidG9TdHJpbmdUYWciKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UmJiFvKGU9cj9lOmUucHJvdG90eXBlLGkpJiZuKGUsaSx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOnR9KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCFuKGUpKXJldHVybiBlO3ZhciByLG87aWYodCYmImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS50b1N0cmluZykmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbztpZigiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnZhbHVlT2YpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87aWYoIXQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87dGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWUiKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpLG89cigxKS5kb2N1bWVudCxpPW4obykmJm4oby5jcmVhdGVFbGVtZW50KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGk/by5jcmVhdGVFbGVtZW50KGUpOnt9fX0sLGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09ZSl0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNhbGwgbWV0aG9kIG9uICAiK2UpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0KXt2YXIgcj1NYXRoLmNlaWwsbj1NYXRoLmZsb29yO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaXNOYU4oZT0rZSk/MDooZT4wP246cikoZSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QobihlKSl9fSwsLGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDM2KSgia2V5cyIpLG89cigyMyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1vKGUpKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDApLG89cigxKSxpPW9bIl9fY29yZS1qc19zaGFyZWRfXyJdfHwob1siX19jb3JlLWpzX3NoYXJlZF9fIl09e30pOyhlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaVtlXXx8KGlbZV09dm9pZCAwIT09dD90Ont9KX0pKCJ2ZXJzaW9ucyIsW10pLnB1c2goe3ZlcnNpb246bi52ZXJzaW9uLG1vZGU6cigxNSk/InB1cmUiOiJnbG9iYWwiLGNvcHlyaWdodDoiwqkgMjAxOCBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSJ9KX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ImNvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZiIuc3BsaXQoIiwiKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDcyKSxpPXIoMzcpLHM9cigzNSkoIklFX1BST1RPIiksYT1mdW5jdGlvbigpe30sdT1mdW5jdGlvbigpe3ZhciBlLHQ9cigyOCkoImlmcmFtZSIpLG49aS5sZW5ndGg7Zm9yKHQuc3R5bGUuZGlzcGxheT0ibm9uZSIscig1NikuYXBwZW5kQ2hpbGQodCksdC5zcmM9ImphdmFzY3JpcHQ6IiwoZT10LmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQpLm9wZW4oKSxlLndyaXRlKCI8c2NyaXB0PmRvY3VtZW50LkY9T2JqZWN0PFwvc2NyaXB0PiIpLGUuY2xvc2UoKSx1PWUuRjtuLS07KWRlbGV0ZSB1LnByb3RvdHlwZVtpW25dXTtyZXR1cm4gdSgpfTtlLmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24oZSx0KXt2YXIgcjtyZXR1cm4gbnVsbCE9PWU/KGEucHJvdG90eXBlPW4oZSkscj1uZXcgYSxhLnByb3RvdHlwZT1udWxsLHJbc109ZSk6cj11KCksdm9pZCAwPT09dD9yOm8ocix0KX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9IXIoNCkmJiFyKDEzKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkocigyOCkoImRpdiIpLCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSwsLGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig4OSksX19lc01vZHVsZTohMH19LCxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KSxvPXIoMCksaT1yKDEzKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcj0oby5PYmplY3R8fHt9KVtlXXx8T2JqZWN0W2VdLHM9e307c1tlXT10KHIpLG4obi5TK24uRippKGZ1bmN0aW9uKCl7cigxKX0pLCJPYmplY3QiLHMpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTApLG89cigxMiksaT1yKDY0KSghMSkscz1yKDM1KSgiSUVfUFJPVE8iKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixhPW8oZSksdT0wLGM9W107Zm9yKHIgaW4gYSlyIT1zJiZuKGEscikmJmMucHVzaChyKTtmb3IoO3QubGVuZ3RoPnU7KW4oYSxyPXRbdSsrXSkmJih+aShjLHIpfHxjLnB1c2gocikpO3JldHVybiBjfX0sLCxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMTUpLG89cig2KSxpPXIoNTApLHM9cigxMSksYT1yKDE3KSx1PXIoNzEpLGM9cigyNiksbD1yKDUzKSxkPXIoMikoIml0ZXJhdG9yIiksZj0hKFtdLmtleXMmJiJuZXh0ImluW10ua2V5cygpKSxwPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscix5LHYsaCxiKXt1KHIsdCx5KTt2YXIgXyxtLGcsTz1mdW5jdGlvbihlKXtpZighZiYmZSBpbiBSKXJldHVybiBSW2VdO3N3aXRjaChlKXtjYXNlImtleXMiOmNhc2UidmFsdWVzIjpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9fSx3PXQrIiBJdGVyYXRvciIsaj0idmFsdWVzIj09dixrPSExLFI9ZS5wcm90b3R5cGUsTD1SW2RdfHxSWyJAQGl0ZXJhdG9yIl18fHYmJlJbdl0seD1MfHxPKHYpLFA9dj9qP08oImVudHJpZXMiKTp4OnZvaWQgMCxDPSJBcnJheSI9PXQmJlIuZW50cmllc3x8TDtpZihDJiYoZz1sKEMuY2FsbChuZXcgZSkpKSE9PU9iamVjdC5wcm90b3R5cGUmJmcubmV4dCYmKGMoZyx3LCEwKSxufHwiZnVuY3Rpb24iPT10eXBlb2YgZ1tkXXx8cyhnLGQscCkpLGomJkwmJiJ2YWx1ZXMiIT09TC5uYW1lJiYoaz0hMCx4PWZ1bmN0aW9uKCl7cmV0dXJuIEwuY2FsbCh0aGlzKX0pLG4mJiFifHwhZiYmIWsmJlJbZF18fHMoUixkLHgpLGFbdF09eCxhW3ddPXAsdilpZihfPXt2YWx1ZXM6aj94Ok8oInZhbHVlcyIpLGtleXM6aD94Ok8oImtleXMiKSxlbnRyaWVzOlB9LGIpZm9yKG0gaW4gXyltIGluIFJ8fGkoUixtLF9bbV0pO2Vsc2UgbyhvLlArby5GKihmfHxrKSx0LF8pO3JldHVybiBffX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzEpLG89TWF0aC5taW47ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBlPjA/byhuKGUpLDkwMDcxOTkyNTQ3NDA5OTEpOjB9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXIoMTEpfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMjQpO2UuZXhwb3J0cy5mPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcgZnVuY3Rpb24oZSl7dmFyIHQscjt0aGlzLnByb21pc2U9bmV3IGUoZnVuY3Rpb24oZSxuKXtpZih2b2lkIDAhPT10fHx2b2lkIDAhPT1yKXRocm93IFR5cGVFcnJvcigiQmFkIFByb21pc2UgY29uc3RydWN0b3IiKTt0PWUscj1ufSksdGhpcy5yZXNvbHZlPW4odCksdGhpcy5yZWplY3Q9bihyKX0oZSl9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoNzApKCEwKTtyKDQ4KShTdHJpbmcsIlN0cmluZyIsZnVuY3Rpb24oZSl7dGhpcy5fdD1TdHJpbmcoZSksdGhpcy5faT0wfSxmdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5fdCxyPXRoaXMuX2k7cmV0dXJuIHI+PXQubGVuZ3RoP3t2YWx1ZTp2b2lkIDAsZG9uZTohMH06KGU9bih0LHIpLHRoaXMuX2krPWUubGVuZ3RoLHt2YWx1ZTplLGRvbmU6ITF9KX0pfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMCksbz1yKDMyKSxpPXIoMzUpKCJJRV9QUk9UTyIpLHM9T2JqZWN0LnByb3RvdHlwZTtlLmV4cG9ydHM9T2JqZWN0LmdldFByb3RvdHlwZU9mfHxmdW5jdGlvbihlKXtyZXR1cm4gZT1vKGUpLG4oZSxpKT9lW2ldOiJmdW5jdGlvbiI9PXR5cGVvZiBlLmNvbnN0cnVjdG9yJiZlIGluc3RhbmNlb2YgZS5jb25zdHJ1Y3Rvcj9lLmNvbnN0cnVjdG9yLnByb3RvdHlwZTplIGluc3RhbmNlb2YgT2JqZWN0P3M6bnVsbH19LGZ1bmN0aW9uKGUsdCxyKXtyKDczKTtmb3IodmFyIG49cigxKSxvPXIoMTEpLGk9cigxNykscz1yKDIpKCJ0b1N0cmluZ1RhZyIpLGE9IkNTU1J1bGVMaXN0LENTU1N0eWxlRGVjbGFyYXRpb24sQ1NTVmFsdWVMaXN0LENsaWVudFJlY3RMaXN0LERPTVJlY3RMaXN0LERPTVN0cmluZ0xpc3QsRE9NVG9rZW5MaXN0LERhdGFUcmFuc2Zlckl0ZW1MaXN0LEZpbGVMaXN0LEhUTUxBbGxDb2xsZWN0aW9uLEhUTUxDb2xsZWN0aW9uLEhUTUxGb3JtRWxlbWVudCxIVE1MU2VsZWN0RWxlbWVudCxNZWRpYUxpc3QsTWltZVR5cGVBcnJheSxOYW1lZE5vZGVNYXAsTm9kZUxpc3QsUGFpbnRSZXF1ZXN0TGlzdCxQbHVnaW4sUGx1Z2luQXJyYXksU1ZHTGVuZ3RoTGlzdCxTVkdOdW1iZXJMaXN0LFNWR1BhdGhTZWdMaXN0LFNWR1BvaW50TGlzdCxTVkdTdHJpbmdMaXN0LFNWR1RyYW5zZm9ybUxpc3QsU291cmNlQnVmZmVyTGlzdCxTdHlsZVNoZWV0TGlzdCxUZXh0VHJhY2tDdWVMaXN0LFRleHRUcmFja0xpc3QsVG91Y2hMaXN0Ii5zcGxpdCgiLCIpLHU9MDt1PGEubGVuZ3RoO3UrKyl7dmFyIGM9YVt1XSxsPW5bY10sZD1sJiZsLnByb3RvdHlwZTtkJiYhZFtzXSYmbyhkLHMsYyksaVtjXT1pLkFycmF5fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjEpO2UuZXhwb3J0cz1PYmplY3QoInoiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKT9PYmplY3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIlN0cmluZyI9PW4oZSk/ZS5zcGxpdCgiIik6T2JqZWN0KGUpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSkuZG9jdW1lbnQ7ZS5leHBvcnRzPW4mJm4uZG9jdW1lbnRFbGVtZW50fSwsZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDc2KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDYxKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0KXt9LGZ1bmN0aW9uKGUsdCxyKXtyKDYyKTt2YXIgbj1yKDApLk9iamVjdDtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLmRlZmluZVByb3BlcnR5KGUsdCxyKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYpO24obi5TK24uRiohcig0KSwiT2JqZWN0Iix7ZGVmaW5lUHJvcGVydHk6cig4KS5mfSl9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIxKSxvPXIoMikoInRvU3RyaW5nVGFnIiksaT0iQXJndW1lbnRzIj09bihmdW5jdGlvbigpe3JldHVybiBhcmd1bWVudHN9KCkpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdCxyLHM7cmV0dXJuIHZvaWQgMD09PWU/IlVuZGVmaW5lZCI6bnVsbD09PWU/Ik51bGwiOiJzdHJpbmciPT10eXBlb2Yocj1mdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZVt0XX1jYXRjaChlKXt9fSh0PU9iamVjdChlKSxvKSk/cjppP24odCk6Ik9iamVjdCI9PShzPW4odCkpJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5jYWxsZWU/IkFyZ3VtZW50cyI6c319LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEyKSxvPXIoNDkpLGk9cig2NSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIscyl7dmFyIGEsdT1uKHQpLGM9byh1Lmxlbmd0aCksbD1pKHMsYyk7aWYoZSYmciE9cil7Zm9yKDtjPmw7KWlmKChhPXVbbCsrXSkhPWEpcmV0dXJuITB9ZWxzZSBmb3IoO2M+bDtsKyspaWYoKGV8fGwgaW4gdSkmJnVbbF09PT1yKXJldHVybiBlfHxsfHwwO3JldHVybiFlJiYtMX19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1NYXRoLm1heCxpPU1hdGgubWluO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybihlPW4oZSkpPDA/byhlK3QsMCk6aShlLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDI0KSxpPXIoMikoInNwZWNpZXMiKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt2YXIgcixzPW4oZSkuY29uc3RydWN0b3I7cmV0dXJuIHZvaWQgMD09PXN8fHZvaWQgMD09KHI9bihzKVtpXSk/dDpvKHIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG8saSxzPXIoMTQpLGE9cigxMDgpLHU9cig1NiksYz1yKDI4KSxsPXIoMSksZD1sLnByb2Nlc3MsZj1sLnNldEltbWVkaWF0ZSxwPWwuY2xlYXJJbW1lZGlhdGUseT1sLk1lc3NhZ2VDaGFubmVsLHY9bC5EaXNwYXRjaCxoPTAsYj17fSxfPWZ1bmN0aW9uKCl7dmFyIGU9K3RoaXM7aWYoYi5oYXNPd25Qcm9wZXJ0eShlKSl7dmFyIHQ9YltlXTtkZWxldGUgYltlXSx0KCl9fSxtPWZ1bmN0aW9uKGUpe18uY2FsbChlLmRhdGEpfTtmJiZwfHwoZj1mdW5jdGlvbihlKXtmb3IodmFyIHQ9W10scj0xO2FyZ3VtZW50cy5sZW5ndGg+cjspdC5wdXNoKGFyZ3VtZW50c1tyKytdKTtyZXR1cm4gYlsrK2hdPWZ1bmN0aW9uKCl7YSgiZnVuY3Rpb24iPT10eXBlb2YgZT9lOkZ1bmN0aW9uKGUpLHQpfSxuKGgpLGh9LHA9ZnVuY3Rpb24oZSl7ZGVsZXRlIGJbZV19LCJwcm9jZXNzIj09cigyMSkoZCk/bj1mdW5jdGlvbihlKXtkLm5leHRUaWNrKHMoXyxlLDEpKX06diYmdi5ub3c/bj1mdW5jdGlvbihlKXt2Lm5vdyhzKF8sZSwxKSl9Onk/KGk9KG89bmV3IHkpLnBvcnQyLG8ucG9ydDEub25tZXNzYWdlPW0sbj1zKGkucG9zdE1lc3NhZ2UsaSwxKSk6bC5hZGRFdmVudExpc3RlbmVyJiYiZnVuY3Rpb24iPT10eXBlb2YgcG9zdE1lc3NhZ2UmJiFsLmltcG9ydFNjcmlwdHM/KG49ZnVuY3Rpb24oZSl7bC5wb3N0TWVzc2FnZShlKyIiLCIqIil9LGwuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbSwhMSkpOm49Im9ucmVhZHlzdGF0ZWNoYW5nZSJpbiBjKCJzY3JpcHQiKT9mdW5jdGlvbihlKXt1LmFwcGVuZENoaWxkKGMoInNjcmlwdCIpKS5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXt1LnJlbW92ZUNoaWxkKHRoaXMpLF8uY2FsbChlKX19OmZ1bmN0aW9uKGUpe3NldFRpbWVvdXQocyhfLGUsMSksMCl9KSxlLmV4cG9ydHM9e3NldDpmLGNsZWFyOnB9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXt0cnl7cmV0dXJue2U6ITEsdjplKCl9fWNhdGNoKGUpe3JldHVybntlOiEwLHY6ZX19fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDcpLGk9cig1MSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYobihlKSxvKHQpJiZ0LmNvbnN0cnVjdG9yPT09ZSlyZXR1cm4gdDt2YXIgcj1pLmYoZSk7cmV0dXJuKDAsci5yZXNvbHZlKSh0KSxyLnByb21pc2V9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1yKDMwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscil7dmFyIGkscyxhPVN0cmluZyhvKHQpKSx1PW4ociksYz1hLmxlbmd0aDtyZXR1cm4gdTwwfHx1Pj1jP2U/IiI6dm9pZCAwOihpPWEuY2hhckNvZGVBdCh1KSk8NTUyOTZ8fGk+NTYzMTl8fHUrMT09PWN8fChzPWEuY2hhckNvZGVBdCh1KzEpKTw1NjMyMHx8cz41NzM0Mz9lP2EuY2hhckF0KHUpOmk6ZT9hLnNsaWNlKHUsdSsyKTpzLTU2MzIwKyhpLTU1Mjk2PDwxMCkrNjU1MzZ9fX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDM4KSxvPXIoMTYpLGk9cigyNikscz17fTtyKDExKShzLHIoMikoIml0ZXJhdG9yIiksZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLGUuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZS5wcm90b3R5cGU9bihzLHtuZXh0Om8oMSxyKX0pLGkoZSx0KyIgSXRlcmF0b3IiKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDgpLG89cig5KSxpPXIoMjApO2UuZXhwb3J0cz1yKDQpP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzOmZ1bmN0aW9uKGUsdCl7byhlKTtmb3IodmFyIHIscz1pKHQpLGE9cy5sZW5ndGgsdT0wO2E+dTspbi5mKGUscj1zW3UrK10sdFtyXSk7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoNzQpLG89cig3NSksaT1yKDE3KSxzPXIoMTIpO2UuZXhwb3J0cz1yKDQ4KShBcnJheSwiQXJyYXkiLGZ1bmN0aW9uKGUsdCl7dGhpcy5fdD1zKGUpLHRoaXMuX2k9MCx0aGlzLl9rPXR9LGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdCx0PXRoaXMuX2sscj10aGlzLl9pKys7cmV0dXJuIWV8fHI+PWUubGVuZ3RoPyh0aGlzLl90PXZvaWQgMCxvKDEpKTpvKDAsImtleXMiPT10P3I6InZhbHVlcyI9PXQ/ZVtyXTpbcixlW3JdXSl9LCJ2YWx1ZXMiKSxpLkFyZ3VtZW50cz1pLkFycmF5LG4oImtleXMiKSxuKCJ2YWx1ZXMiKSxuKCJlbnRyaWVzIil9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7fX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dmFsdWU6dCxkb25lOiEhZX19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigwKSxvPW4uSlNPTnx8KG4uSlNPTj17c3RyaW5naWZ5OkpTT04uc3RyaW5naWZ5fSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBvLnN0cmluZ2lmeS5hcHBseShvLGFyZ3VtZW50cyl9fSwsLCwsLCwsLCwsLCxmdW5jdGlvbihlLHQscil7cig5MCksZS5leHBvcnRzPXIoMCkuT2JqZWN0LmtleXN9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMyKSxvPXIoMjApO3IoNDQpKCJrZXlzIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gbyhuKGUpKX19KX0sLCwsLCwsLCwsLGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYzKSxvPXIoMikoIml0ZXJhdG9yIiksaT1yKDE3KTtlLmV4cG9ydHM9cigwKS5nZXRJdGVyYXRvck1ldGhvZD1mdW5jdGlvbihlKXtpZih2b2lkIDAhPWUpcmV0dXJuIGVbb118fGVbIkBAaXRlcmF0b3IiXXx8aVtuKGUpXX19LGZ1bmN0aW9uKGUsdCxyKXtyKDYwKSxyKDUyKSxyKDU0KSxyKDEwMykscigxMTQpLHIoMTE1KSxlLmV4cG9ydHM9cigwKS5Qcm9taXNlfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuLG8saSxzLGE9cigxNSksdT1yKDEpLGM9cigxNCksbD1yKDYzKSxkPXIoNiksZj1yKDcpLHA9cigyNCkseT1yKDEwNCksdj1yKDEwNSksaD1yKDY2KSxiPXIoNjcpLnNldCxfPXIoMTA5KSgpLG09cig1MSksZz1yKDY4KSxPPXIoMTEwKSx3PXIoNjkpLGo9dS5UeXBlRXJyb3Isaz11LnByb2Nlc3MsUj1rJiZrLnZlcnNpb25zLEw9UiYmUi52OHx8IiIseD11LlByb21pc2UsUD0icHJvY2VzcyI9PWwoayksQz1mdW5jdGlvbigpe30sUz1vPW0uZixNPSEhZnVuY3Rpb24oKXt0cnl7dmFyIGU9eC5yZXNvbHZlKDEpLHQ9KGUuY29uc3RydWN0b3I9e30pW3IoMikoInNwZWNpZXMiKV09ZnVuY3Rpb24oZSl7ZShDLEMpfTtyZXR1cm4oUHx8ImZ1bmN0aW9uIj09dHlwZW9mIFByb21pc2VSZWplY3Rpb25FdmVudCkmJmUudGhlbihDKWluc3RhbmNlb2YgdCYmMCE9PUwuaW5kZXhPZigiNi42IikmJi0xPT09Ty5pbmRleE9mKCJDaHJvbWUvNjYiKX1jYXRjaChlKXt9fSgpLFU9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuISghZihlKXx8ImZ1bmN0aW9uIiE9dHlwZW9mKHQ9ZS50aGVuKSkmJnR9LEQ9ZnVuY3Rpb24oZSx0KXtpZighZS5fbil7ZS5fbj0hMDt2YXIgcj1lLl9jO18oZnVuY3Rpb24oKXtmb3IodmFyIG49ZS5fdixvPTE9PWUuX3MsaT0wO3IubGVuZ3RoPmk7KSFmdW5jdGlvbih0KXt2YXIgcixpLHMsYT1vP3Qub2s6dC5mYWlsLHU9dC5yZXNvbHZlLGM9dC5yZWplY3QsbD10LmRvbWFpbjt0cnl7YT8ob3x8KDI9PWUuX2gmJkkoZSksZS5faD0xKSwhMD09PWE/cj1uOihsJiZsLmVudGVyKCkscj1hKG4pLGwmJihsLmV4aXQoKSxzPSEwKSkscj09PXQucHJvbWlzZT9jKGooIlByb21pc2UtY2hhaW4gY3ljbGUiKSk6KGk9VShyKSk/aS5jYWxsKHIsdSxjKTp1KHIpKTpjKG4pfWNhdGNoKGUpe2wmJiFzJiZsLmV4aXQoKSxjKGUpfX0ocltpKytdKTtlLl9jPVtdLGUuX249ITEsdCYmIWUuX2gmJkUoZSl9KX19LEU9ZnVuY3Rpb24oZSl7Yi5jYWxsKHUsZnVuY3Rpb24oKXt2YXIgdCxyLG4sbz1lLl92LGk9VChlKTtpZihpJiYodD1nKGZ1bmN0aW9uKCl7UD9rLmVtaXQoInVuaGFuZGxlZFJlamVjdGlvbiIsbyxlKToocj11Lm9udW5oYW5kbGVkcmVqZWN0aW9uKT9yKHtwcm9taXNlOmUscmVhc29uOm99KToobj11LmNvbnNvbGUpJiZuLmVycm9yJiZuLmVycm9yKCJVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24iLG8pfSksZS5faD1QfHxUKGUpPzI6MSksZS5fYT12b2lkIDAsaSYmdC5lKXRocm93IHQudn0pfSxUPWZ1bmN0aW9uKGUpe3JldHVybiAxIT09ZS5faCYmMD09PShlLl9hfHxlLl9jKS5sZW5ndGh9LEk9ZnVuY3Rpb24oZSl7Yi5jYWxsKHUsZnVuY3Rpb24oKXt2YXIgdDtQP2suZW1pdCgicmVqZWN0aW9uSGFuZGxlZCIsZSk6KHQ9dS5vbnJlamVjdGlvbmhhbmRsZWQpJiZ0KHtwcm9taXNlOmUscmVhc29uOmUuX3Z9KX0pfSxIPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fZHx8KHQuX2Q9ITAsKHQ9dC5fd3x8dCkuX3Y9ZSx0Ll9zPTIsdC5fYXx8KHQuX2E9dC5fYy5zbGljZSgpKSxEKHQsITApKX0sQT1mdW5jdGlvbihlKXt2YXIgdCxyPXRoaXM7aWYoIXIuX2Qpe3IuX2Q9ITAscj1yLl93fHxyO3RyeXtpZihyPT09ZSl0aHJvdyBqKCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZiIpOyh0PVUoZSkpP18oZnVuY3Rpb24oKXt2YXIgbj17X3c6cixfZDohMX07dHJ5e3QuY2FsbChlLGMoQSxuLDEpLGMoSCxuLDEpKX1jYXRjaChlKXtILmNhbGwobixlKX19KTooci5fdj1lLHIuX3M9MSxEKHIsITEpKX1jYXRjaChlKXtILmNhbGwoe193OnIsX2Q6ITF9LGUpfX19O018fCh4PWZ1bmN0aW9uKGUpe3kodGhpcyx4LCJQcm9taXNlIiwiX2giKSxwKGUpLG4uY2FsbCh0aGlzKTt0cnl7ZShjKEEsdGhpcywxKSxjKEgsdGhpcywxKSl9Y2F0Y2goZSl7SC5jYWxsKHRoaXMsZSl9fSwobj1mdW5jdGlvbihlKXt0aGlzLl9jPVtdLHRoaXMuX2E9dm9pZCAwLHRoaXMuX3M9MCx0aGlzLl9kPSExLHRoaXMuX3Y9dm9pZCAwLHRoaXMuX2g9MCx0aGlzLl9uPSExfSkucHJvdG90eXBlPXIoMTExKSh4LnByb3RvdHlwZSx7dGhlbjpmdW5jdGlvbihlLHQpe3ZhciByPVMoaCh0aGlzLHgpKTtyZXR1cm4gci5vaz0iZnVuY3Rpb24iIT10eXBlb2YgZXx8ZSxyLmZhaWw9ImZ1bmN0aW9uIj09dHlwZW9mIHQmJnQsci5kb21haW49UD9rLmRvbWFpbjp2b2lkIDAsdGhpcy5fYy5wdXNoKHIpLHRoaXMuX2EmJnRoaXMuX2EucHVzaChyKSx0aGlzLl9zJiZEKHRoaXMsITEpLHIucHJvbWlzZX0sY2F0Y2g6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSksaT1mdW5jdGlvbigpe3ZhciBlPW5ldyBuO3RoaXMucHJvbWlzZT1lLHRoaXMucmVzb2x2ZT1jKEEsZSwxKSx0aGlzLnJlamVjdD1jKEgsZSwxKX0sbS5mPVM9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT14fHxlPT09cz9uZXcgaShlKTpvKGUpfSksZChkLkcrZC5XK2QuRiohTSx7UHJvbWlzZTp4fSkscigyNikoeCwiUHJvbWlzZSIpLHIoMTEyKSgiUHJvbWlzZSIpLHM9cigwKS5Qcm9taXNlLGQoZC5TK2QuRiohTSwiUHJvbWlzZSIse3JlamVjdDpmdW5jdGlvbihlKXt2YXIgdD1TKHRoaXMpO3JldHVybigwLHQucmVqZWN0KShlKSx0LnByb21pc2V9fSksZChkLlMrZC5GKihhfHwhTSksIlByb21pc2UiLHtyZXNvbHZlOmZ1bmN0aW9uKGUpe3JldHVybiB3KGEmJnRoaXM9PT1zP3g6dGhpcyxlKX19KSxkKGQuUytkLkYqIShNJiZyKDExMykoZnVuY3Rpb24oZSl7eC5hbGwoZSkuY2F0Y2goQyl9KSksIlByb21pc2UiLHthbGw6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPVModCksbj1yLnJlc29sdmUsbz1yLnJlamVjdCxpPWcoZnVuY3Rpb24oKXt2YXIgcj1bXSxpPTAscz0xO3YoZSwhMSxmdW5jdGlvbihlKXt2YXIgYT1pKyssdT0hMTtyLnB1c2godm9pZCAwKSxzKyssdC5yZXNvbHZlKGUpLnRoZW4oZnVuY3Rpb24oZSl7dXx8KHU9ITAsclthXT1lLC0tc3x8bihyKSl9LG8pfSksLS1zfHxuKHIpfSk7cmV0dXJuIGkuZSYmbyhpLnYpLHIucHJvbWlzZX0scmFjZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9Uyh0KSxuPXIucmVqZWN0LG89ZyhmdW5jdGlvbigpe3YoZSwhMSxmdW5jdGlvbihlKXt0LnJlc29sdmUoZSkudGhlbihyLnJlc29sdmUsbil9KX0pO3JldHVybiBvLmUmJm4oby52KSxyLnByb21pc2V9fSl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKCEoZSBpbnN0YW5jZW9mIHQpfHx2b2lkIDAhPT1uJiZuIGluIGUpdGhyb3cgVHlwZUVycm9yKHIrIjogaW5jb3JyZWN0IGludm9jYXRpb24hIik7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxNCksbz1yKDEwNiksaT1yKDEwNykscz1yKDkpLGE9cig0OSksdT1yKDEwMSksYz17fSxsPXt9Oyh0PWUuZXhwb3J0cz1mdW5jdGlvbihlLHQscixkLGYpe3ZhciBwLHksdixoLGI9Zj9mdW5jdGlvbigpe3JldHVybiBlfTp1KGUpLF89bihyLGQsdD8yOjEpLG09MDtpZigiZnVuY3Rpb24iIT10eXBlb2YgYil0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBpdGVyYWJsZSEiKTtpZihpKGIpKXtmb3IocD1hKGUubGVuZ3RoKTtwPm07bSsrKWlmKChoPXQ/XyhzKHk9ZVttXSlbMF0seVsxXSk6XyhlW21dKSk9PT1jfHxoPT09bClyZXR1cm4gaH1lbHNlIGZvcih2PWIuY2FsbChlKTshKHk9di5uZXh0KCkpLmRvbmU7KWlmKChoPW8odixfLHkudmFsdWUsdCkpPT09Y3x8aD09PWwpcmV0dXJuIGh9KS5CUkVBSz1jLHQuUkVUVVJOPWx9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDkpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscixvKXt0cnl7cmV0dXJuIG8/dChuKHIpWzBdLHJbMV0pOnQocil9Y2F0Y2godCl7dmFyIGk9ZS5yZXR1cm47dGhyb3cgdm9pZCAwIT09aSYmbihpLmNhbGwoZSkpLHR9fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTcpLG89cigyKSgiaXRlcmF0b3IiKSxpPUFycmF5LnByb3RvdHlwZTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUmJihuLkFycmF5PT09ZXx8aVtvXT09PWUpfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXZvaWQgMD09PXI7c3dpdGNoKHQubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG4/ZSgpOmUuY2FsbChyKTtjYXNlIDE6cmV0dXJuIG4/ZSh0WzBdKTplLmNhbGwocix0WzBdKTtjYXNlIDI6cmV0dXJuIG4/ZSh0WzBdLHRbMV0pOmUuY2FsbChyLHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiBuP2UodFswXSx0WzFdLHRbMl0pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdKTtjYXNlIDQ6cmV0dXJuIG4/ZSh0WzBdLHRbMV0sdFsyXSx0WzNdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSx0WzNdKX1yZXR1cm4gZS5hcHBseShyLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSksbz1yKDY3KS5zZXQsaT1uLk11dGF0aW9uT2JzZXJ2ZXJ8fG4uV2ViS2l0TXV0YXRpb25PYnNlcnZlcixzPW4ucHJvY2VzcyxhPW4uUHJvbWlzZSx1PSJwcm9jZXNzIj09cigyMSkocyk7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLGM9ZnVuY3Rpb24oKXt2YXIgbixvO2Zvcih1JiYobj1zLmRvbWFpbikmJm4uZXhpdCgpO2U7KXtvPWUuZm4sZT1lLm5leHQ7dHJ5e28oKX1jYXRjaChuKXt0aHJvdyBlP3IoKTp0PXZvaWQgMCxufX10PXZvaWQgMCxuJiZuLmVudGVyKCl9O2lmKHUpcj1mdW5jdGlvbigpe3MubmV4dFRpY2soYyl9O2Vsc2UgaWYoIWl8fG4ubmF2aWdhdG9yJiZuLm5hdmlnYXRvci5zdGFuZGFsb25lKWlmKGEmJmEucmVzb2x2ZSl7dmFyIGw9YS5yZXNvbHZlKHZvaWQgMCk7cj1mdW5jdGlvbigpe2wudGhlbihjKX19ZWxzZSByPWZ1bmN0aW9uKCl7by5jYWxsKG4sYyl9O2Vsc2V7dmFyIGQ9ITAsZj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIik7bmV3IGkoYykub2JzZXJ2ZShmLHtjaGFyYWN0ZXJEYXRhOiEwfSkscj1mdW5jdGlvbigpe2YuZGF0YT1kPSFkfX1yZXR1cm4gZnVuY3Rpb24obil7dmFyIG89e2ZuOm4sbmV4dDp2b2lkIDB9O3QmJih0Lm5leHQ9byksZXx8KGU9byxyKCkpLHQ9b319fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKS5uYXZpZ2F0b3I7ZS5leHBvcnRzPW4mJm4udXNlckFnZW50fHwiIn0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTEpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBvIGluIHQpciYmZVtvXT9lW29dPXRbb106bihlLG8sdFtvXSk7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMSksbz1yKDApLGk9cig4KSxzPXIoNCksYT1yKDIpKCJzcGVjaWVzIik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PSJmdW5jdGlvbiI9PXR5cGVvZiBvW2VdP29bZV06bltlXTtzJiZ0JiYhdFthXSYmaS5mKHQsYSx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMikoIml0ZXJhdG9yIiksbz0hMTt0cnl7dmFyIGk9WzddW25dKCk7aS5yZXR1cm49ZnVuY3Rpb24oKXtvPSEwfSxBcnJheS5mcm9tKGksZnVuY3Rpb24oKXt0aHJvdyAyfSl9Y2F0Y2goZSl7fWUuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCF0JiYhbylyZXR1cm4hMTt2YXIgcj0hMTt0cnl7dmFyIGk9WzddLHM9aVtuXSgpO3MubmV4dD1mdW5jdGlvbigpe3JldHVybntkb25lOnI9ITB9fSxpW25dPWZ1bmN0aW9uKCl7cmV0dXJuIHN9LGUoaSl9Y2F0Y2goZSl7fXJldHVybiByfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDYpLG89cigwKSxpPXIoMSkscz1yKDY2KSxhPXIoNjkpO24obi5QK24uUiwiUHJvbWlzZSIse2ZpbmFsbHk6ZnVuY3Rpb24oZSl7dmFyIHQ9cyh0aGlzLG8uUHJvbWlzZXx8aS5Qcm9taXNlKSxyPSJmdW5jdGlvbiI9PXR5cGVvZiBlO3JldHVybiB0aGlzLnRoZW4ocj9mdW5jdGlvbihyKXtyZXR1cm4gYSh0LGUoKSkudGhlbihmdW5jdGlvbigpe3JldHVybiByfSl9OmUscj9mdW5jdGlvbihyKXtyZXR1cm4gYSh0LGUoKSkudGhlbihmdW5jdGlvbigpe3Rocm93IHJ9KX06ZSl9fSl9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cig2KSxvPXIoNTEpLGk9cig2OCk7bihuLlMsIlByb21pc2UiLHt0cnk6ZnVuY3Rpb24oZSl7dmFyIHQ9by5mKHRoaXMpLHI9aShlKTtyZXR1cm4oci5lP3QucmVqZWN0OnQucmVzb2x2ZSkoci52KSx0LnByb21pc2V9fSl9LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDE4KSksaT1uKHIoMykpLHM9bihyKDUpKSxhPXIoMTkpLHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixuKXsoMCxpLmRlZmF1bHQpKHRoaXMsZSk7dmFyIG89dGhpcztvLm1lc3NhZ2VCdXM9bixvLmRvbWFpbj0oMCxhLmRpdmlkZVVSTCkodCkuZG9tYWluLG8ub3duZXI9dCxvLnJ1bnRpbWVVUkw9cn1yZXR1cm4oMCxzLmRlZmF1bHQpKGUsW3trZXk6ImRpc2NvdmVyVXNlclJlZ2lzdGVyZWQiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihuLG8pe3ZhciBpLHM9ZXx8Ii4iLGE9e3R5cGU6InJlYWQiLGZyb206aT10fHxyLm93bmVyLHRvOnIucnVudGltZVVSTCsiL3JlZ2lzdHJ5LyIsYm9keTp7cmVzb3VyY2U6cyxjcml0ZXJpYTppfX07ci5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKGEsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5ib2R5LnJlc291cmNlO3QmJjIwMD09PWUuYm9keS5jb2RlP24odCk6bygiY29kZTogIitlLmJvZHkuY29kZSsiIE5vIHVzZXIgd2FzIGZvdW5kIil9KX0pfX0se2tleToiZGlzY292ZXJJZGVudGl0eVBlcklkUCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihyLG4pe3ZhciBvPXt0eXBlOiJyZWFkIixmcm9tOnRoaXMub3duZXIsdG86dC5ydW50aW1lVVJMKyIvaWRtIixib2R5OntyZXNvdXJjZTplLGNyaXRlcmlhOiJpZHAifX07dC5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG8sZnVuY3Rpb24oZSl7MjAwPT09ZS5ib2R5LmNvZGU/cihlLmJvZHkudmFsdWUpOm4oZS5ib2R5LmNvZGUrIiAiK2UuYm9keS5kZXNjKX0pfSl9fV0pLGV9KCk7dC5kZWZhdWx0PXUsZS5leHBvcnRzPXQuZGVmYXVsdH0sLCwsLCwsLCwsLCwsZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtPYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShyKDE0OCkpO3QuZGVmYXVsdD1uLmRlZmF1bHQsZS5leHBvcnRzPXQuZGVmYXVsdH1dKX0pfSxmdW5jdGlvbihlLHQscil7IWZ1bmN0aW9uKHQscil7ZS5leHBvcnRzPXIoKX0oInVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQobil7aWYocltuXSlyZXR1cm4gcltuXS5leHBvcnRzO3ZhciBvPXJbbl09e2k6bixsOiExLGV4cG9ydHM6e319O3JldHVybiBlW25dLmNhbGwoby5leHBvcnRzLG8sby5leHBvcnRzLHQpLG8ubD0hMCxvLmV4cG9ydHN9dmFyIHI9e307cmV0dXJuIHQubT1lLHQuYz1yLHQuZD1mdW5jdGlvbihlLHIsbil7dC5vKGUscil8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiEwLGdldDpufSl9LHQubj1mdW5jdGlvbihlKXt2YXIgcj1lJiZlLl9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiBlfTtyZXR1cm4gdC5kKHIsImEiLHIpLHJ9LHQubz1mdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX0sdC5wPSIiLHQodC5zPTE2Nyl9KFtmdW5jdGlvbihlLHQpe3ZhciByPWUuZXhwb3J0cz17dmVyc2lvbjoiMi41LjcifTsibnVtYmVyIj09dHlwZW9mIF9fZSYmKF9fZT1yKX0sZnVuY3Rpb24oZSx0KXt2YXIgcj1lLmV4cG9ydHM9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCk7Im51bWJlciI9PXR5cGVvZiBfX2cmJihfX2c9cil9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDM2KSgid2tzIiksbz1yKDIzKSxpPXIoMSkuU3ltYm9sLHM9ImZ1bmN0aW9uIj09dHlwZW9mIGk7KGUuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbltlXXx8KG5bZV09cyYmaVtlXXx8KHM/aTpvKSgiU3ltYm9sLiIrZSkpfSkuc3RvcmU9bn0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt0Ll9fZXNNb2R1bGU9ITAsdC5kZWZhdWx0PWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPSFyKDEzKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dC5fX2VzTW9kdWxlPSEwO3ZhciBuPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0ocig1OSkpO3QuZGVmYXVsdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIG89dFtyXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbyYmKG8ud3JpdGFibGU9ITApLCgwLG4uZGVmYXVsdCkoZSxvLmtleSxvKX19cmV0dXJuIGZ1bmN0aW9uKHQscixuKXtyZXR1cm4gciYmZSh0LnByb3RvdHlwZSxyKSxuJiZlKHQsbiksdH19KCl9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEpLG89cigwKSxpPXIoMTQpLHM9cigxMSksYT1yKDEwKSx1PWZ1bmN0aW9uKGUsdCxyKXt2YXIgYyxsLGQsZj1lJnUuRixwPWUmdS5HLHk9ZSZ1LlMsdj1lJnUuUCxoPWUmdS5CLGI9ZSZ1LlcsXz1wP286b1t0XXx8KG9bdF09e30pLG09Xy5wcm90b3R5cGUsZz1wP246eT9uW3RdOihuW3RdfHx7fSkucHJvdG90eXBlO2ZvcihjIGluIHAmJihyPXQpLHIpKGw9IWYmJmcmJnZvaWQgMCE9PWdbY10pJiZhKF8sYyl8fChkPWw/Z1tjXTpyW2NdLF9bY109cCYmImZ1bmN0aW9uIiE9dHlwZW9mIGdbY10/cltjXTpoJiZsP2koZCxuKTpiJiZnW2NdPT1kP2Z1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKHQscixuKXtpZih0aGlzIGluc3RhbmNlb2YgZSl7c3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMDpyZXR1cm4gbmV3IGU7Y2FzZSAxOnJldHVybiBuZXcgZSh0KTtjYXNlIDI6cmV0dXJuIG5ldyBlKHQscil9cmV0dXJuIG5ldyBlKHQscixuKX1yZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9O3JldHVybiB0LnByb3RvdHlwZT1lLnByb3RvdHlwZSx0fShkKTp2JiYiZnVuY3Rpb24iPT10eXBlb2YgZD9pKEZ1bmN0aW9uLmNhbGwsZCk6ZCx2JiYoKF8udmlydHVhbHx8KF8udmlydHVhbD17fSkpW2NdPWQsZSZ1LlImJm0mJiFtW2NdJiZzKG0sYyxkKSkpfTt1LkY9MSx1Lkc9Mix1LlM9NCx1LlA9OCx1LkI9MTYsdS5XPTMyLHUuVT02NCx1LlI9MTI4LGUuZXhwb3J0cz11fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIGU/bnVsbCE9PWU6ImZ1bmN0aW9uIj09dHlwZW9mIGV9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig5KSxvPXIoMzkpLGk9cigyNykscz1PYmplY3QuZGVmaW5lUHJvcGVydHk7dC5mPXIoNCk/T2JqZWN0LmRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKGUsdCxyKXtpZihuKGUpLHQ9aSh0LCEwKSxuKHIpLG8pdHJ5e3JldHVybiBzKGUsdCxyKX1jYXRjaChlKXt9aWYoImdldCJpbiByfHwic2V0ImluIHIpdGhyb3cgVHlwZUVycm9yKCJBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEiKTtyZXR1cm4idmFsdWUiaW4gciYmKGVbdF09ci52YWx1ZSksZX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtpZighbihlKSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhbiBvYmplY3QhIik7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQpe3ZhciByPXt9Lmhhc093blByb3BlcnR5O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiByLmNhbGwoZSx0KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDgpLG89cigxNik7ZS5leHBvcnRzPXIoNCk/ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLmYoZSx0LG8oMSxyKSl9OmZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZVt0XT1yLGV9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig1NSksbz1yKDMwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4obyhlKSl9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXt0cnl7cmV0dXJuISFlKCl9Y2F0Y2goZSl7cmV0dXJuITB9fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjQpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7aWYobihlKSx2b2lkIDA9PT10KXJldHVybiBlO3N3aXRjaChyKXtjYXNlIDE6cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBlLmNhbGwodCxyKX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbihyLG4pe3JldHVybiBlLmNhbGwodCxyLG4pfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKHIsbixvKXtyZXR1cm4gZS5jYWxsKHQscixuLG8pfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5hcHBseSh0LGFyZ3VtZW50cyl9fX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ITB9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJue2VudW1lcmFibGU6ISgxJmUpLGNvbmZpZ3VyYWJsZTohKDImZSksd3JpdGFibGU6ISg0JmUpLHZhbHVlOnR9fX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9e319LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cigxMDIpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fWZ1bmN0aW9uIG8oZSl7ZnVuY3Rpb24gdChlKXtyZXR1cm4gZS5yZXBsYWNlKC8oW2EtekEtWi1dKikoOlwvXC8oPzpcLik/fDopKFstYS16QS1aMC05QDolLl9cK34jPV17MiwyNTZ9KShbLWEtekEtWjAtOUA6JS5fXCt+Iz1cL10qKS9naSwiJDEsJDMsJDQiKS5zcGxpdCgiLCIpfXZhciByPXQoZSk7aWYoclswXT09PWUmJiFyWzBdLmluY2x1ZGVzKCJAIikpe3ZhciBuPXt0eXBlOiIiLGRvbWFpbjplLGlkZW50aXR5OiIifTtyZXR1cm4gY29uc29sZS53YXJuKCJbRGl2aWRlVVJMXSBEaXZpZGVVUkwgZG9uJ3Qgc3VwcG9ydCB1cmwgd2l0aG91dCBzY2hlbWUuIFBsZWFzZSByZXZpZXcgeW91ciB1cmwgYWRkcmVzcyIsZSksbn1yZXR1cm4gclswXT09PWUmJnJbMF0uaW5jbHVkZXMoIkAiKSYmKHI9dCgoclswXT09PWU/InNtdHAiOnJbMF0pKyI6Ly8iK3JbMF0pKSxyWzFdLmluY2x1ZGVzKCJAIikmJihyWzJdPXJbMF0rIjovLyIrclsxXSxyWzFdPXJbMV0uc3Vic3RyKHJbMV0uaW5kZXhPZigiQCIpKzEpKSx7dHlwZTpyWzBdLGRvbWFpbjpyWzFdLGlkZW50aXR5OnJbMl19fWZ1bmN0aW9uIGkoZSl7dmFyIHQ9ZS5pbmRleE9mKCJAIik7cmV0dXJuInVzZXI6Ly8iK2Uuc3Vic3RyaW5nKHQrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsdCl9T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBzPW4ocig1OCkpLGE9bihyKDQyKSk7dC5kaXZpZGVVUkw9byx0LmRpdmlkZUVtYWlsPWZ1bmN0aW9uKGUpe3ZhciB0PWUuaW5kZXhPZigiQCIpO3JldHVybnt1c2VybmFtZTplLnN1YnN0cmluZygwLHQpLGRvbWFpbjplLnN1YnN0cmluZyh0KzEsZS5sZW5ndGgpfX0sdC5lbXB0eU9iamVjdD1mdW5jdGlvbihlKXtyZXR1cm4hKCgwLGEuZGVmYXVsdCkoZSkubGVuZ3RoPjApfSx0LmRlZXBDbG9uZT1mdW5jdGlvbihlKXtpZihlKXJldHVybiBKU09OLnBhcnNlKCgwLHMuZGVmYXVsdCkoZSkpfSx0LmdldFVzZXJVUkxGcm9tRW1haWw9aSx0LmdldFVzZXJFbWFpbEZyb21VUkw9ZnVuY3Rpb24oZSl7dmFyIHQ9byhlKTtyZXR1cm4gdC5pZGVudGl0eS5yZXBsYWNlKCIvIiwiIikrIkAiK3QuZG9tYWlufSx0LmNvbnZlcnRUb1VzZXJVUkw9ZnVuY3Rpb24oZSl7aWYoInVzZXI6Ly8iPT09ZS5zdWJzdHJpbmcoMCw3KSl7dmFyIHQ9byhlKTtpZih0LmRvbWFpbiYmdC5pZGVudGl0eSlyZXR1cm4gZTt0aHJvdyJ1c2VyVVJMIHdpdGggd3JvbmcgZm9ybWF0In1yZXR1cm4gaShlKX0sdC5jaGVja0F0dHJpYnV0ZT1mdW5jdGlvbihlKXt2YXIgdD0vKCgoW2EtekEtWl0rKTpcL1wvKFswLTlhLXpBLVpdWy1cd10qWzAtOWEtekEtWl1cLikrW2EtekEtWl17Miw5fSlcL1thLXpBLVowLTlcLl0rQFthLXpBLVowLTldKyhcLSk/W2EtekEtWjAtOV0rKFwuKT9bYS16QS1aMC05XXsyLDEwfT9cLlthLXpBLVpdezIsMTB9KSguKyg/PS5pZGVudGl0eSkpPy9nbSxyPVtdLG49W107aWYobnVsbD09ZS5tYXRjaCh0KSluPWUuc3BsaXQoIi4iKTtlbHNle2Zvcih2YXIgbz12b2lkIDA7bnVsbCE9PShvPXQuZXhlYyhlKSk7KW8uaW5kZXg9PT10Lmxhc3RJbmRleCYmdC5sYXN0SW5kZXgrKyxvLmZvckVhY2goZnVuY3Rpb24oZSx0KXswPT09dCYmci5wdXNoKGUpfSk7dmFyIGk9dm9pZCAwO3IuZm9yRWFjaChmdW5jdGlvbih0KXtpPWUucmVwbGFjZSh0LCIqKyoiKSxuPWkuc3BsaXQoIi4iKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIiorKiI9PT1lP3Q6ZX0pfSl9cmV0dXJuIGNvbnNvbGUubG9nKCJbU2VydmljZUZyYW1ld29yay5VdGlscy5jaGVja0F0dHJpYnV0ZV0iLG4pLG59LHQucGFyc2VBdHRyaWJ1dGVzPWZ1bmN0aW9uKGUpe2lmKGUuaW5jbHVkZXMoIjovLyIpKXt2YXIgdD1lLnNwbGl0KC8oWzAtOWEtekEtWl1bLVx3XSopOlwvXC8vZylbMF0scj10LnNwbGl0KCIuIiksbj1lLnJlcGxhY2UodCwiIik7aWYoZS5pbmNsdWRlcygiaWRlbnRpdHkiKSl7dmFyIG89bi5zcGxpdCgiaWRlbnRpdHkuIik7Y29uc29sZS5sb2coImFycmF5MiAiK28pLG49b1swXS5zbGljZSgiLiIsLTEpLG89b1sxXS5zcGxpdCgiLiIpLHIucHVzaChuLCJpZGVudGl0eSIpLHI9ci5jb25jYXQobyl9ZWxzZSByLnB1c2gobik7cmV0dXJuIHIuZmlsdGVyKEJvb2xlYW4pfXJldHVybiBlLnNwbGl0KCIuIil9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig0NSksbz1yKDM3KTtlLmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3JldHVybiBuKGUsbyl9fSxmdW5jdGlvbihlLHQpe3ZhciByPXt9LnRvU3RyaW5nO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gci5jYWxsKGUpLnNsaWNlKDgsLTEpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuLG87IWZ1bmN0aW9uKGkscyl7InVzZSBzdHJpY3QiO3ZvaWQgMCE9PShvPSJmdW5jdGlvbiI9PXR5cGVvZihuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe3ZhciByPWVbdF07aWYoImZ1bmN0aW9uIj09dHlwZW9mIHIuYmluZClyZXR1cm4gci5iaW5kKGUpO3RyeXtyZXR1cm4gRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuY2FsbChyLGUpfWNhdGNoKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuYXBwbHkocixbZSxhcmd1bWVudHNdKX19fWZ1bmN0aW9uIHQodCl7cmV0dXJuImRlYnVnIj09PXQmJih0PSJsb2ciKSx0eXBlb2YgY29uc29sZSE9PWEmJih2b2lkIDAhPT1jb25zb2xlW3RdP2UoY29uc29sZSx0KTp2b2lkIDAhPT1jb25zb2xlLmxvZz9lKGNvbnNvbGUsImxvZyIpOnMpfWZ1bmN0aW9uIHIoZSx0KXtmb3IodmFyIHI9MDtyPHUubGVuZ3RoO3IrKyl7dmFyIG49dVtyXTt0aGlzW25dPXI8ZT9zOnRoaXMubWV0aG9kRmFjdG9yeShuLGUsdCl9dGhpcy5sb2c9dGhpcy5kZWJ1Z31mdW5jdGlvbiBuKGUsdCxuKXtyZXR1cm4gZnVuY3Rpb24oKXt0eXBlb2YgY29uc29sZSE9PWEmJihyLmNhbGwodGhpcyx0LG4pLHRoaXNbZV0uYXBwbHkodGhpcyxhcmd1bWVudHMpKX19ZnVuY3Rpb24gbyhlLHIsbyl7cmV0dXJuIHQoZSl8fG4uYXBwbHkodGhpcyxhcmd1bWVudHMpfWZ1bmN0aW9uIGkoZSx0LG4pe2Z1bmN0aW9uIGkoKXt2YXIgZTtpZih0eXBlb2Ygd2luZG93IT09YSl7dHJ5e2U9d2luZG93LmxvY2FsU3RvcmFnZVtsXX1jYXRjaChlKXt9aWYodHlwZW9mIGU9PT1hKXRyeXt2YXIgdD13aW5kb3cuZG9jdW1lbnQuY29va2llLHI9dC5pbmRleE9mKGVuY29kZVVSSUNvbXBvbmVudChsKSsiPSIpOy0xIT09ciYmKGU9L14oW147XSspLy5leGVjKHQuc2xpY2UocikpWzFdKX1jYXRjaChlKXt9cmV0dXJuIHZvaWQgMD09PWMubGV2ZWxzW2VdJiYoZT12b2lkIDApLGV9fXZhciBzLGM9dGhpcyxsPSJsb2dsZXZlbCI7ZSYmKGwrPSI6IitlKSxjLm5hbWU9ZSxjLmxldmVscz17VFJBQ0U6MCxERUJVRzoxLElORk86MixXQVJOOjMsRVJST1I6NCxTSUxFTlQ6NX0sYy5tZXRob2RGYWN0b3J5PW58fG8sYy5nZXRMZXZlbD1mdW5jdGlvbigpe3JldHVybiBzfSxjLnNldExldmVsPWZ1bmN0aW9uKHQsbil7aWYoInN0cmluZyI9PXR5cGVvZiB0JiZ2b2lkIDAhPT1jLmxldmVsc1t0LnRvVXBwZXJDYXNlKCldJiYodD1jLmxldmVsc1t0LnRvVXBwZXJDYXNlKCldKSwhKCJudW1iZXIiPT10eXBlb2YgdCYmdD49MCYmdDw9Yy5sZXZlbHMuU0lMRU5UKSl0aHJvdyJsb2cuc2V0TGV2ZWwoKSBjYWxsZWQgd2l0aCBpbnZhbGlkIGxldmVsOiAiK3Q7aWYocz10LCExIT09biYmZnVuY3Rpb24oZSl7dmFyIHQ9KHVbZV18fCJzaWxlbnQiKS50b1VwcGVyQ2FzZSgpO2lmKHR5cGVvZiB3aW5kb3chPT1hKXt0cnl7cmV0dXJuIHZvaWQod2luZG93LmxvY2FsU3RvcmFnZVtsXT10KX1jYXRjaChlKXt9dHJ5e3dpbmRvdy5kb2N1bWVudC5jb29raWU9ZW5jb2RlVVJJQ29tcG9uZW50KGwpKyI9Iit0KyI7In1jYXRjaChlKXt9fX0odCksci5jYWxsKGMsdCxlKSx0eXBlb2YgY29uc29sZT09PWEmJnQ8Yy5sZXZlbHMuU0lMRU5UKXJldHVybiJObyBjb25zb2xlIGF2YWlsYWJsZSBmb3IgbG9nZ2luZyJ9LGMuc2V0RGVmYXVsdExldmVsPWZ1bmN0aW9uKGUpe2koKXx8Yy5zZXRMZXZlbChlLCExKX0sYy5lbmFibGVBbGw9ZnVuY3Rpb24oZSl7Yy5zZXRMZXZlbChjLmxldmVscy5UUkFDRSxlKX0sYy5kaXNhYmxlQWxsPWZ1bmN0aW9uKGUpe2Muc2V0TGV2ZWwoYy5sZXZlbHMuU0lMRU5ULGUpfTt2YXIgZD1pKCk7bnVsbD09ZCYmKGQ9bnVsbD09dD8iV0FSTiI6dCksYy5zZXRMZXZlbChkLCExKX12YXIgcz1mdW5jdGlvbigpe30sYT0idW5kZWZpbmVkIix1PVsidHJhY2UiLCJkZWJ1ZyIsImluZm8iLCJ3YXJuIiwiZXJyb3IiXSxjPW5ldyBpLGw9e307Yy5nZXRMb2dnZXI9ZnVuY3Rpb24oZSl7aWYoInN0cmluZyIhPXR5cGVvZiBlfHwiIj09PWUpdGhyb3cgbmV3IFR5cGVFcnJvcigiWW91IG11c3Qgc3VwcGx5IGEgbmFtZSB3aGVuIGNyZWF0aW5nIGEgbG9nZ2VyLiIpO3ZhciB0PWxbZV07cmV0dXJuIHR8fCh0PWxbZV09bmV3IGkoZSxjLmdldExldmVsKCksYy5tZXRob2RGYWN0b3J5KSksdH07dmFyIGQ9dHlwZW9mIHdpbmRvdyE9PWE/d2luZG93LmxvZzp2b2lkIDA7cmV0dXJuIGMubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiB0eXBlb2Ygd2luZG93IT09YSYmd2luZG93LmxvZz09PWMmJih3aW5kb3cubG9nPWQpLGN9LGMuZ2V0TG9nZ2Vycz1mdW5jdGlvbigpe3JldHVybiBsfSxjfSk/bi5jYWxsKHQscix0LGUpOm4pJiYoZS5leHBvcnRzPW8pfSgpfSxmdW5jdGlvbihlLHQpe3ZhciByPTAsbj1NYXRoLnJhbmRvbSgpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4iU3ltYm9sKCIuY29uY2F0KHZvaWQgMD09PWU/IiI6ZSwiKV8iLCgrK3IrbikudG9TdHJpbmcoMzYpKX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoOTEpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig4KS5mLG89cigxMCksaT1yKDIpKCJ0b1N0cmluZ1RhZyIpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7ZSYmIW8oZT1yP2U6ZS5wcm90b3R5cGUsaSkmJm4oZSxpLHtjb25maWd1cmFibGU6ITAsdmFsdWU6dH0pfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7aWYoIW4oZSkpcmV0dXJuIGU7dmFyIHIsbztpZih0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKCJmdW5jdGlvbiI9PXR5cGVvZihyPWUudmFsdWVPZikmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbztpZighdCYmImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS50b1N0cmluZykmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbzt0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZSIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNyksbz1yKDEpLmRvY3VtZW50LGk9bihvKSYmbihvLmNyZWF0ZUVsZW1lbnQpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaT9vLmNyZWF0ZUVsZW1lbnQoZSk6e319fSxmdW5jdGlvbihlLHQpe3QuZj17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT1lKXRocm93IFR5cGVFcnJvcigiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gICIrZSk7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQpe3ZhciByPU1hdGguY2VpbCxuPU1hdGguZmxvb3I7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpc05hTihlPStlKT8wOihlPjA/bjpyKShlKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChuKGUpKX19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dC5fX2VzTW9kdWxlPSEwO3ZhciBuPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX0ocig0NykpO3QuZGVmYXVsdD1mdW5jdGlvbihlLHQpe2lmKCFlKXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7cmV0dXJuIXR8fCJvYmplY3QiIT09KHZvaWQgMD09PXQ/InVuZGVmaW5lZCI6KDAsbi5kZWZhdWx0KSh0KSkmJiJmdW5jdGlvbiIhPXR5cGVvZiB0P2U6dH19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dC5fX2VzTW9kdWxlPSEwO3ZhciBvPW4ocig5MykpLGk9bihyKDk3KSkscz1uKHIoNDcpKTt0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0KXtpZigiZnVuY3Rpb24iIT10eXBlb2YgdCYmbnVsbCE9PXQpdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCAiKyh2b2lkIDA9PT10PyJ1bmRlZmluZWQiOigwLHMuZGVmYXVsdCkodCkpKTtlLnByb3RvdHlwZT0oMCxpLmRlZmF1bHQpKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KSx0JiYoby5kZWZhdWx0PygwLG8uZGVmYXVsdCkoZSx0KTplLl9fcHJvdG9fXz10KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDM2KSgia2V5cyIpLG89cigyMyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1vKGUpKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDApLG89cigxKSxpPW9bIl9fY29yZS1qc19zaGFyZWRfXyJdfHwob1siX19jb3JlLWpzX3NoYXJlZF9fIl09e30pOyhlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaVtlXXx8KGlbZV09dm9pZCAwIT09dD90Ont9KX0pKCJ2ZXJzaW9ucyIsW10pLnB1c2goe3ZlcnNpb246bi52ZXJzaW9uLG1vZGU6cigxNSk/InB1cmUiOiJnbG9iYWwiLGNvcHlyaWdodDoiwqkgMjAxOCBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSJ9KX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ImNvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZiIuc3BsaXQoIiwiKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDcyKSxpPXIoMzcpLHM9cigzNSkoIklFX1BST1RPIiksYT1mdW5jdGlvbigpe30sdT1mdW5jdGlvbigpe3ZhciBlLHQ9cigyOCkoImlmcmFtZSIpLG49aS5sZW5ndGg7Zm9yKHQuc3R5bGUuZGlzcGxheT0ibm9uZSIscig1NikuYXBwZW5kQ2hpbGQodCksdC5zcmM9ImphdmFzY3JpcHQ6IiwoZT10LmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQpLm9wZW4oKSxlLndyaXRlKCI8c2NyaXB0PmRvY3VtZW50LkY9T2JqZWN0PFwvc2NyaXB0PiIpLGUuY2xvc2UoKSx1PWUuRjtuLS07KWRlbGV0ZSB1LnByb3RvdHlwZVtpW25dXTtyZXR1cm4gdSgpfTtlLmV4cG9ydHM9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24oZSx0KXt2YXIgcjtyZXR1cm4gbnVsbCE9PWU/KGEucHJvdG90eXBlPW4oZSkscj1uZXcgYSxhLnByb3RvdHlwZT1udWxsLHJbc109ZSk6cj11KCksdm9pZCAwPT09dD9yOm8ocix0KX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9IXIoNCkmJiFyKDEzKShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkocigyOCkoImRpdiIpLCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSxmdW5jdGlvbihlLHQscil7dC5mPXIoMil9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEpLG89cigwKSxpPXIoMTUpLHM9cig0MCksYT1yKDgpLmY7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PW8uU3ltYm9sfHwoby5TeW1ib2w9aT97fTpuLlN5bWJvbHx8e30pOyJfIj09ZS5jaGFyQXQoMCl8fGUgaW4gdHx8YSh0LGUse3ZhbHVlOnMuZihlKX0pfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDg5KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0KXt0LmY9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sc30sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNiksbz1yKDApLGk9cigxMyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9KG8uT2JqZWN0fHx7fSlbZV18fE9iamVjdFtlXSxzPXt9O3NbZV09dChyKSxuKG4uUytuLkYqaShmdW5jdGlvbigpe3IoMSl9KSwiT2JqZWN0IixzKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEwKSxvPXIoMTIpLGk9cig2NCkoITEpLHM9cigzNSkoIklFX1BST1RPIik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIsYT1vKGUpLHU9MCxjPVtdO2ZvcihyIGluIGEpciE9cyYmbihhLHIpJiZjLnB1c2gocik7Zm9yKDt0Lmxlbmd0aD51OyluKGEscj10W3UrK10pJiYofmkoYyxyKXx8Yy5wdXNoKHIpKTtyZXR1cm4gY319LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDI5KSxvPXIoMTYpLGk9cigxMikscz1yKDI3KSxhPXIoMTApLHU9cigzOSksYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3QuZj1yKDQpP2M6ZnVuY3Rpb24oZSx0KXtpZihlPWkoZSksdD1zKHQsITApLHUpdHJ5e3JldHVybiBjKGUsdCl9Y2F0Y2goZSl7fWlmKGEoZSx0KSlyZXR1cm4gbyghbi5mLmNhbGwoZSx0KSxlW3RdKX19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dC5fX2VzTW9kdWxlPSEwO3ZhciBvPW4ocig3OSkpLGk9bihyKDgxKSkscz0iZnVuY3Rpb24iPT10eXBlb2YgaS5kZWZhdWx0JiYic3ltYm9sIj09dHlwZW9mIG8uZGVmYXVsdD9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgaS5kZWZhdWx0JiZlLmNvbnN0cnVjdG9yPT09aS5kZWZhdWx0JiZlIT09aS5kZWZhdWx0LnByb3RvdHlwZT8ic3ltYm9sIjp0eXBlb2YgZX07dC5kZWZhdWx0PSJmdW5jdGlvbiI9PXR5cGVvZiBpLmRlZmF1bHQmJiJzeW1ib2wiPT09cyhvLmRlZmF1bHQpP2Z1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lPyJ1bmRlZmluZWQiOnMoZSl9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiZnVuY3Rpb24iPT10eXBlb2YgaS5kZWZhdWx0JiZlLmNvbnN0cnVjdG9yPT09aS5kZWZhdWx0JiZlIT09aS5kZWZhdWx0LnByb3RvdHlwZT8ic3ltYm9sIjp2b2lkIDA9PT1lPyJ1bmRlZmluZWQiOnMoZSl9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMTUpLG89cig2KSxpPXIoNTApLHM9cigxMSksYT1yKDE3KSx1PXIoNzEpLGM9cigyNiksbD1yKDUzKSxkPXIoMikoIml0ZXJhdG9yIiksZj0hKFtdLmtleXMmJiJuZXh0ImluW10ua2V5cygpKSxwPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscix5LHYsaCxiKXt1KHIsdCx5KTt2YXIgXyxtLGcsTz1mdW5jdGlvbihlKXtpZighZiYmZSBpbiBSKXJldHVybiBSW2VdO3N3aXRjaChlKXtjYXNlImtleXMiOmNhc2UidmFsdWVzIjpyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHIodGhpcyxlKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9fSx3PXQrIiBJdGVyYXRvciIsaj0idmFsdWVzIj09dixrPSExLFI9ZS5wcm90b3R5cGUsTD1SW2RdfHxSWyJAQGl0ZXJhdG9yIl18fHYmJlJbdl0seD1MfHxPKHYpLFA9dj9qP08oImVudHJpZXMiKTp4OnZvaWQgMCxDPSJBcnJheSI9PXQmJlIuZW50cmllc3x8TDtpZihDJiYoZz1sKEMuY2FsbChuZXcgZSkpKSE9PU9iamVjdC5wcm90b3R5cGUmJmcubmV4dCYmKGMoZyx3LCEwKSxufHwiZnVuY3Rpb24iPT10eXBlb2YgZ1tkXXx8cyhnLGQscCkpLGomJkwmJiJ2YWx1ZXMiIT09TC5uYW1lJiYoaz0hMCx4PWZ1bmN0aW9uKCl7cmV0dXJuIEwuY2FsbCh0aGlzKX0pLG4mJiFifHwhZiYmIWsmJlJbZF18fHMoUixkLHgpLGFbdF09eCxhW3ddPXAsdilpZihfPXt2YWx1ZXM6aj94Ok8oInZhbHVlcyIpLGtleXM6aD94Ok8oImtleXMiKSxlbnRyaWVzOlB9LGIpZm9yKG0gaW4gXyltIGluIFJ8fGkoUixtLF9bbV0pO2Vsc2UgbyhvLlArby5GKihmfHxrKSx0LF8pO3JldHVybiBffX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzEpLG89TWF0aC5taW47ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBlPjA/byhuKGUpLDkwMDcxOTkyNTQ3NDA5OTEpOjB9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXIoMTEpfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMjQpO2UuZXhwb3J0cy5mPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcgZnVuY3Rpb24oZSl7dmFyIHQscjt0aGlzLnByb21pc2U9bmV3IGUoZnVuY3Rpb24oZSxuKXtpZih2b2lkIDAhPT10fHx2b2lkIDAhPT1yKXRocm93IFR5cGVFcnJvcigiQmFkIFByb21pc2UgY29uc3RydWN0b3IiKTt0PWUscj1ufSksdGhpcy5yZXNvbHZlPW4odCksdGhpcy5yZWplY3Q9bihyKX0oZSl9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoNzApKCEwKTtyKDQ4KShTdHJpbmcsIlN0cmluZyIsZnVuY3Rpb24oZSl7dGhpcy5fdD1TdHJpbmcoZSksdGhpcy5faT0wfSxmdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5fdCxyPXRoaXMuX2k7cmV0dXJuIHI+PXQubGVuZ3RoP3t2YWx1ZTp2b2lkIDAsZG9uZTohMH06KGU9bih0LHIpLHRoaXMuX2krPWUubGVuZ3RoLHt2YWx1ZTplLGRvbmU6ITF9KX0pfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMCksbz1yKDMyKSxpPXIoMzUpKCJJRV9QUk9UTyIpLHM9T2JqZWN0LnByb3RvdHlwZTtlLmV4cG9ydHM9T2JqZWN0LmdldFByb3RvdHlwZU9mfHxmdW5jdGlvbihlKXtyZXR1cm4gZT1vKGUpLG4oZSxpKT9lW2ldOiJmdW5jdGlvbiI9PXR5cGVvZiBlLmNvbnN0cnVjdG9yJiZlIGluc3RhbmNlb2YgZS5jb25zdHJ1Y3Rvcj9lLmNvbnN0cnVjdG9yLnByb3RvdHlwZTplIGluc3RhbmNlb2YgT2JqZWN0P3M6bnVsbH19LGZ1bmN0aW9uKGUsdCxyKXtyKDczKTtmb3IodmFyIG49cigxKSxvPXIoMTEpLGk9cigxNykscz1yKDIpKCJ0b1N0cmluZ1RhZyIpLGE9IkNTU1J1bGVMaXN0LENTU1N0eWxlRGVjbGFyYXRpb24sQ1NTVmFsdWVMaXN0LENsaWVudFJlY3RMaXN0LERPTVJlY3RMaXN0LERPTVN0cmluZ0xpc3QsRE9NVG9rZW5MaXN0LERhdGFUcmFuc2Zlckl0ZW1MaXN0LEZpbGVMaXN0LEhUTUxBbGxDb2xsZWN0aW9uLEhUTUxDb2xsZWN0aW9uLEhUTUxGb3JtRWxlbWVudCxIVE1MU2VsZWN0RWxlbWVudCxNZWRpYUxpc3QsTWltZVR5cGVBcnJheSxOYW1lZE5vZGVNYXAsTm9kZUxpc3QsUGFpbnRSZXF1ZXN0TGlzdCxQbHVnaW4sUGx1Z2luQXJyYXksU1ZHTGVuZ3RoTGlzdCxTVkdOdW1iZXJMaXN0LFNWR1BhdGhTZWdMaXN0LFNWR1BvaW50TGlzdCxTVkdTdHJpbmdMaXN0LFNWR1RyYW5zZm9ybUxpc3QsU291cmNlQnVmZmVyTGlzdCxTdHlsZVNoZWV0TGlzdCxUZXh0VHJhY2tDdWVMaXN0LFRleHRUcmFja0xpc3QsVG91Y2hMaXN0Ii5zcGxpdCgiLCIpLHU9MDt1PGEubGVuZ3RoO3UrKyl7dmFyIGM9YVt1XSxsPW5bY10sZD1sJiZsLnByb3RvdHlwZTtkJiYhZFtzXSYmbyhkLHMsYyksaVtjXT1pLkFycmF5fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjEpO2UuZXhwb3J0cz1PYmplY3QoInoiKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKT9PYmplY3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIlN0cmluZyI9PW4oZSk/ZS5zcGxpdCgiIik6T2JqZWN0KGUpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSkuZG9jdW1lbnQ7ZS5leHBvcnRzPW4mJm4uZG9jdW1lbnRFbGVtZW50fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig0NSksbz1yKDM3KS5jb25jYXQoImxlbmd0aCIsInByb3RvdHlwZSIpO3QuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSxvKX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig3NiksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig2MSksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCl7fSxmdW5jdGlvbihlLHQscil7cig2Mik7dmFyIG49cigwKS5PYmplY3Q7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5kZWZpbmVQcm9wZXJ0eShlLHQscil9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KTtuKG4uUytuLkYqIXIoNCksIk9iamVjdCIse2RlZmluZVByb3BlcnR5OnIoOCkuZn0pfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyMSksbz1yKDIpKCJ0b1N0cmluZ1RhZyIpLGk9IkFyZ3VtZW50cyI9PW4oZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzfSgpKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQscixzO3JldHVybiB2b2lkIDA9PT1lPyJVbmRlZmluZWQiOm51bGw9PT1lPyJOdWxsIjoic3RyaW5nIj09dHlwZW9mKHI9ZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGVbdF19Y2F0Y2goZSl7fX0odD1PYmplY3QoZSksbykpP3I6aT9uKHQpOiJPYmplY3QiPT0ocz1uKHQpKSYmImZ1bmN0aW9uIj09dHlwZW9mIHQuY2FsbGVlPyJBcmd1bWVudHMiOnN9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMiksbz1yKDQ5KSxpPXIoNjUpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxyLHMpe3ZhciBhLHU9bih0KSxjPW8odS5sZW5ndGgpLGw9aShzLGMpO2lmKGUmJnIhPXIpe2Zvcig7Yz5sOylpZigoYT11W2wrK10pIT1hKXJldHVybiEwfWVsc2UgZm9yKDtjPmw7bCsrKWlmKChlfHxsIGluIHUpJiZ1W2xdPT09cilyZXR1cm4gZXx8bHx8MDtyZXR1cm4hZSYmLTF9fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzEpLG89TWF0aC5tYXgsaT1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4oZT1uKGUpKTwwP28oZSt0LDApOmkoZSx0KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDkpLG89cigyNCksaT1yKDIpKCJzcGVjaWVzIik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHIscz1uKGUpLmNvbnN0cnVjdG9yO3JldHVybiB2b2lkIDA9PT1zfHx2b2lkIDA9PShyPW4ocylbaV0pP3Q6byhyKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbixvLGkscz1yKDE0KSxhPXIoMTA4KSx1PXIoNTYpLGM9cigyOCksbD1yKDEpLGQ9bC5wcm9jZXNzLGY9bC5zZXRJbW1lZGlhdGUscD1sLmNsZWFySW1tZWRpYXRlLHk9bC5NZXNzYWdlQ2hhbm5lbCx2PWwuRGlzcGF0Y2gsaD0wLGI9e30sXz1mdW5jdGlvbigpe3ZhciBlPSt0aGlzO2lmKGIuaGFzT3duUHJvcGVydHkoZSkpe3ZhciB0PWJbZV07ZGVsZXRlIGJbZV0sdCgpfX0sbT1mdW5jdGlvbihlKXtfLmNhbGwoZS5kYXRhKX07ZiYmcHx8KGY9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLHI9MTthcmd1bWVudHMubGVuZ3RoPnI7KXQucHVzaChhcmd1bWVudHNbcisrXSk7cmV0dXJuIGJbKytoXT1mdW5jdGlvbigpe2EoImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpGdW5jdGlvbihlKSx0KX0sbihoKSxofSxwPWZ1bmN0aW9uKGUpe2RlbGV0ZSBiW2VdfSwicHJvY2VzcyI9PXIoMjEpKGQpP249ZnVuY3Rpb24oZSl7ZC5uZXh0VGljayhzKF8sZSwxKSl9OnYmJnYubm93P249ZnVuY3Rpb24oZSl7di5ub3cocyhfLGUsMSkpfTp5PyhpPShvPW5ldyB5KS5wb3J0MixvLnBvcnQxLm9ubWVzc2FnZT1tLG49cyhpLnBvc3RNZXNzYWdlLGksMSkpOmwuYWRkRXZlbnRMaXN0ZW5lciYmImZ1bmN0aW9uIj09dHlwZW9mIHBvc3RNZXNzYWdlJiYhbC5pbXBvcnRTY3JpcHRzPyhuPWZ1bmN0aW9uKGUpe2wucG9zdE1lc3NhZ2UoZSsiIiwiKiIpfSxsLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLG0sITEpKTpuPSJvbnJlYWR5c3RhdGVjaGFuZ2UiaW4gYygic2NyaXB0Iik/ZnVuY3Rpb24oZSl7dS5hcHBlbmRDaGlsZChjKCJzY3JpcHQiKSkub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7dS5yZW1vdmVDaGlsZCh0aGlzKSxfLmNhbGwoZSl9fTpmdW5jdGlvbihlKXtzZXRUaW1lb3V0KHMoXyxlLDEpLDApfSksZS5leHBvcnRzPXtzZXQ6ZixjbGVhcjpwfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybntlOiExLHY6ZSgpfX1jYXRjaChlKXtyZXR1cm57ZTohMCx2OmV9fX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDkpLG89cig3KSxpPXIoNTEpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKG4oZSksbyh0KSYmdC5jb25zdHJ1Y3Rvcj09PWUpcmV0dXJuIHQ7dmFyIHI9aS5mKGUpO3JldHVybigwLHIucmVzb2x2ZSkodCksci5wcm9taXNlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzEpLG89cigzMCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIpe3ZhciBpLHMsYT1TdHJpbmcobyh0KSksdT1uKHIpLGM9YS5sZW5ndGg7cmV0dXJuIHU8MHx8dT49Yz9lPyIiOnZvaWQgMDooaT1hLmNoYXJDb2RlQXQodSkpPDU1Mjk2fHxpPjU2MzE5fHx1KzE9PT1jfHwocz1hLmNoYXJDb2RlQXQodSsxKSk8NTYzMjB8fHM+NTczNDM/ZT9hLmNoYXJBdCh1KTppOmU/YS5zbGljZSh1LHUrMik6cy01NjMyMCsoaS01NTI5Njw8MTApKzY1NTM2fX19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cigzOCksbz1yKDE2KSxpPXIoMjYpLHM9e307cigxMSkocyxyKDIpKCJpdGVyYXRvciIpLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UucHJvdG90eXBlPW4ocyx7bmV4dDpvKDEscil9KSxpKGUsdCsiIEl0ZXJhdG9yIil9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig4KSxvPXIoOSksaT1yKDIwKTtlLmV4cG9ydHM9cig0KT9PYmplY3QuZGVmaW5lUHJvcGVydGllczpmdW5jdGlvbihlLHQpe28oZSk7Zm9yKHZhciByLHM9aSh0KSxhPXMubGVuZ3RoLHU9MDthPnU7KW4uZihlLHI9c1t1KytdLHRbcl0pO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDc0KSxvPXIoNzUpLGk9cigxNykscz1yKDEyKTtlLmV4cG9ydHM9cig0OCkoQXJyYXksIkFycmF5IixmdW5jdGlvbihlLHQpe3RoaXMuX3Q9cyhlKSx0aGlzLl9pPTAsdGhpcy5faz10fSxmdW5jdGlvbigpe3ZhciBlPXRoaXMuX3QsdD10aGlzLl9rLHI9dGhpcy5faSsrO3JldHVybiFlfHxyPj1lLmxlbmd0aD8odGhpcy5fdD12b2lkIDAsbygxKSk6bygwLCJrZXlzIj09dD9yOiJ2YWx1ZXMiPT10P2Vbcl06W3IsZVtyXV0pfSwidmFsdWVzIiksaS5Bcmd1bWVudHM9aS5BcnJheSxuKCJrZXlzIiksbigidmFsdWVzIiksbigiZW50cmllcyIpfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbigpe319LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJue3ZhbHVlOnQsZG9uZTohIWV9fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMCksbz1uLkpTT058fChuLkpTT049e3N0cmluZ2lmeTpKU09OLnN0cmluZ2lmeX0pO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gby5zdHJpbmdpZnkuYXBwbHkobyxhcmd1bWVudHMpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjMpKCJtZXRhIiksbz1yKDcpLGk9cigxMCkscz1yKDgpLmYsYT0wLHU9T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0sYz0hcigxMykoZnVuY3Rpb24oKXtyZXR1cm4gdShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKX0pLGw9ZnVuY3Rpb24oZSl7cyhlLG4se3ZhbHVlOntpOiJPIisgKythLHc6e319fSl9LGQ9ZS5leHBvcnRzPXtLRVk6bixORUVEOiExLGZhc3RLZXk6ZnVuY3Rpb24oZSx0KXtpZighbyhlKSlyZXR1cm4ic3ltYm9sIj09dHlwZW9mIGU/ZTooInN0cmluZyI9PXR5cGVvZiBlPyJTIjoiUCIpK2U7aWYoIWkoZSxuKSl7aWYoIXUoZSkpcmV0dXJuIkYiO2lmKCF0KXJldHVybiJFIjtsKGUpfXJldHVybiBlW25dLml9LGdldFdlYWs6ZnVuY3Rpb24oZSx0KXtpZighaShlLG4pKXtpZighdShlKSlyZXR1cm4hMDtpZighdClyZXR1cm4hMTtsKGUpfXJldHVybiBlW25dLnd9LG9uRnJlZXplOmZ1bmN0aW9uKGUpe3JldHVybiBjJiZkLk5FRUQmJnUoZSkmJiFpKGUsbikmJmwoZSksZX19fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoMTE5KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDgwKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoNTIpLHIoNTQpLGUuZXhwb3J0cz1yKDQwKS5mKCJpdGVyYXRvciIpfSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoODIpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7cig4Mykscig2MCkscig4Nykscig4OCksZS5leHBvcnRzPXIoMCkuU3ltYm9sfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMSksbz1yKDEwKSxpPXIoNCkscz1yKDYpLGE9cig1MCksdT1yKDc3KS5LRVksYz1yKDEzKSxsPXIoMzYpLGQ9cigyNiksZj1yKDIzKSxwPXIoMikseT1yKDQwKSx2PXIoNDEpLGg9cig4NCksYj1yKDg1KSxfPXIoOSksbT1yKDcpLGc9cigxMiksTz1yKDI3KSx3PXIoMTYpLGo9cigzOCksaz1yKDg2KSxSPXIoNDYpLEw9cig4KSx4PXIoMjApLFA9Ui5mLEM9TC5mLFM9ay5mLE09bi5TeW1ib2wsVT1uLkpTT04sRD1VJiZVLnN0cmluZ2lmeSxFPXAoIl9oaWRkZW4iKSxUPXAoInRvUHJpbWl0aXZlIiksST17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZSxIPWwoInN5bWJvbC1yZWdpc3RyeSIpLEE9bCgic3ltYm9scyIpLE49bCgib3Atc3ltYm9scyIpLEY9T2JqZWN0LnByb3RvdHlwZSxCPSJmdW5jdGlvbiI9PXR5cGVvZiBNLFY9bi5RT2JqZWN0LHo9IVZ8fCFWLnByb3RvdHlwZXx8IVYucHJvdG90eXBlLmZpbmRDaGlsZCxHPWkmJmMoZnVuY3Rpb24oKXtyZXR1cm4gNyE9aihDKHt9LCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEModGhpcywiYSIse3ZhbHVlOjd9KS5hfX0pKS5hfSk/ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPVAoRix0KTtuJiZkZWxldGUgRlt0XSxDKGUsdCxyKSxuJiZlIT09RiYmQyhGLHQsbil9OkMscT1mdW5jdGlvbihlKXt2YXIgdD1BW2VdPWooTS5wcm90b3R5cGUpO3JldHVybiB0Ll9rPWUsdH0sSj1CJiYic3ltYm9sIj09dHlwZW9mIE0uaXRlcmF0b3I/ZnVuY3Rpb24oZSl7cmV0dXJuInN5bWJvbCI9PXR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIE19LFo9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlPT09RiYmWihOLHQsciksXyhlKSx0PU8odCwhMCksXyhyKSxvKEEsdCk/KHIuZW51bWVyYWJsZT8obyhlLEUpJiZlW0VdW3RdJiYoZVtFXVt0XT0hMSkscj1qKHIse2VudW1lcmFibGU6dygwLCExKX0pKToobyhlLEUpfHxDKGUsRSx3KDEse30pKSxlW0VdW3RdPSEwKSxHKGUsdCxyKSk6QyhlLHQscil9LFc9ZnVuY3Rpb24oZSx0KXtfKGUpO2Zvcih2YXIgcixuPWgodD1nKHQpKSxvPTAsaT1uLmxlbmd0aDtpPm87KVooZSxyPW5bbysrXSx0W3JdKTtyZXR1cm4gZX0sWT1mdW5jdGlvbihlKXt2YXIgdD1JLmNhbGwodGhpcyxlPU8oZSwhMCkpO3JldHVybiEodGhpcz09PUYmJm8oQSxlKSYmIW8oTixlKSkmJighKHR8fCFvKHRoaXMsZSl8fCFvKEEsZSl8fG8odGhpcyxFKSYmdGhpc1tFXVtlXSl8fHQpfSxLPWZ1bmN0aW9uKGUsdCl7aWYoZT1nKGUpLHQ9Tyh0LCEwKSxlIT09Rnx8IW8oQSx0KXx8byhOLHQpKXt2YXIgcj1QKGUsdCk7cmV0dXJuIXJ8fCFvKEEsdCl8fG8oZSxFKSYmZVtFXVt0XXx8KHIuZW51bWVyYWJsZT0hMCkscn19LCQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9UyhnKGUpKSxuPVtdLGk9MDtyLmxlbmd0aD5pOylvKEEsdD1yW2krK10pfHx0PT1FfHx0PT11fHxuLnB1c2godCk7cmV0dXJuIG59LFg9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHI9ZT09PUYsbj1TKHI/TjpnKGUpKSxpPVtdLHM9MDtuLmxlbmd0aD5zOykhbyhBLHQ9bltzKytdKXx8ciYmIW8oRix0KXx8aS5wdXNoKEFbdF0pO3JldHVybiBpfTtCfHwoYSgoTT1mdW5jdGlvbigpe2lmKHRoaXMgaW5zdGFuY2VvZiBNKXRocm93IFR5cGVFcnJvcigiU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yISIpO3ZhciBlPWYoYXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTp2b2lkIDApLHQ9ZnVuY3Rpb24ocil7dGhpcz09PUYmJnQuY2FsbChOLHIpLG8odGhpcyxFKSYmbyh0aGlzW0VdLGUpJiYodGhpc1tFXVtlXT0hMSksRyh0aGlzLGUsdygxLHIpKX07cmV0dXJuIGkmJnomJkcoRixlLHtjb25maWd1cmFibGU6ITAsc2V0OnR9KSxxKGUpfSkucHJvdG90eXBlLCJ0b1N0cmluZyIsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fa30pLFIuZj1LLEwuZj1aLHIoNTcpLmY9ay5mPSQscigyOSkuZj1ZLHIoNDMpLmY9WCxpJiYhcigxNSkmJmEoRiwicHJvcGVydHlJc0VudW1lcmFibGUiLFksITApLHkuZj1mdW5jdGlvbihlKXtyZXR1cm4gcShwKGUpKX0pLHMocy5HK3MuVytzLkYqIUIse1N5bWJvbDpNfSk7Zm9yKHZhciBRPSJoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlcyIuc3BsaXQoIiwiKSxlZT0wO1EubGVuZ3RoPmVlOylwKFFbZWUrK10pO2Zvcih2YXIgdGU9eChwLnN0b3JlKSxyZT0wO3RlLmxlbmd0aD5yZTspdih0ZVtyZSsrXSk7cyhzLlMrcy5GKiFCLCJTeW1ib2wiLHtmb3I6ZnVuY3Rpb24oZSl7cmV0dXJuIG8oSCxlKz0iIik/SFtlXTpIW2VdPU0oZSl9LGtleUZvcjpmdW5jdGlvbihlKXtpZighSihlKSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhIHN5bWJvbCEiKTtmb3IodmFyIHQgaW4gSClpZihIW3RdPT09ZSlyZXR1cm4gdH0sdXNlU2V0dGVyOmZ1bmN0aW9uKCl7ej0hMH0sdXNlU2ltcGxlOmZ1bmN0aW9uKCl7ej0hMX19KSxzKHMuUytzLkYqIUIsIk9iamVjdCIse2NyZWF0ZTpmdW5jdGlvbihlLHQpe3JldHVybiB2b2lkIDA9PT10P2ooZSk6VyhqKGUpLHQpfSxkZWZpbmVQcm9wZXJ0eTpaLGRlZmluZVByb3BlcnRpZXM6VyxnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6SyxnZXRPd25Qcm9wZXJ0eU5hbWVzOiQsZ2V0T3duUHJvcGVydHlTeW1ib2xzOlh9KSxVJiZzKHMuUytzLkYqKCFCfHxjKGZ1bmN0aW9uKCl7dmFyIGU9TSgpO3JldHVybiJbbnVsbF0iIT1EKFtlXSl8fCJ7fSIhPUQoe2E6ZX0pfHwie30iIT1EKE9iamVjdChlKSl9KSksIkpTT04iLHtzdHJpbmdpZnk6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LHIsbj1bZV0sbz0xO2FyZ3VtZW50cy5sZW5ndGg+bzspbi5wdXNoKGFyZ3VtZW50c1tvKytdKTtpZihyPXQ9blsxXSwobSh0KXx8dm9pZCAwIT09ZSkmJiFKKGUpKXJldHVybiBiKHQpfHwodD1mdW5jdGlvbihlLHQpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiByJiYodD1yLmNhbGwodGhpcyxlLHQpKSwhSih0KSlyZXR1cm4gdH0pLG5bMV09dCxELmFwcGx5KFUsbil9fSksTS5wcm90b3R5cGVbVF18fHIoMTEpKE0ucHJvdG90eXBlLFQsTS5wcm90b3R5cGUudmFsdWVPZiksZChNLCJTeW1ib2wiKSxkKE1hdGgsIk1hdGgiLCEwKSxkKG4uSlNPTiwiSlNPTiIsITApfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyMCksbz1yKDQzKSxpPXIoMjkpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1uKGUpLHI9by5mO2lmKHIpZm9yKHZhciBzLGE9cihlKSx1PWkuZixjPTA7YS5sZW5ndGg+YzspdS5jYWxsKGUscz1hW2MrK10pJiZ0LnB1c2gocyk7cmV0dXJuIHR9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyMSk7ZS5leHBvcnRzPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVybiJBcnJheSI9PW4oZSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMiksbz1yKDU3KS5mLGk9e30udG9TdHJpbmcscz0ib2JqZWN0Ij09dHlwZW9mIHdpbmRvdyYmd2luZG93JiZPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcz9PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpOltdO2UuZXhwb3J0cy5mPWZ1bmN0aW9uKGUpe3JldHVybiBzJiYiW29iamVjdCBXaW5kb3ddIj09aS5jYWxsKGUpP2Z1bmN0aW9uKGUpe3RyeXtyZXR1cm4gbyhlKX1jYXRjaChlKXtyZXR1cm4gcy5zbGljZSgpfX0oZSk6byhuKGUpKX19LGZ1bmN0aW9uKGUsdCxyKXtyKDQxKSgiYXN5bmNJdGVyYXRvciIpfSxmdW5jdGlvbihlLHQscil7cig0MSkoIm9ic2VydmFibGUiKX0sZnVuY3Rpb24oZSx0LHIpe3IoOTApLGUuZXhwb3J0cz1yKDApLk9iamVjdC5rZXlzfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMiksbz1yKDIwKTtyKDQ0KSgia2V5cyIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG8obihlKSl9fSl9LGZ1bmN0aW9uKGUsdCxyKXtyKDkyKSxlLmV4cG9ydHM9cigwKS5PYmplY3QuZ2V0UHJvdG90eXBlT2Z9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMyKSxvPXIoNTMpO3IoNDQpKCJnZXRQcm90b3R5cGVPZiIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIG8obihlKSl9fSl9LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig5NCksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtyKDk1KSxlLmV4cG9ydHM9cigwKS5PYmplY3Quc2V0UHJvdG90eXBlT2Z9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYpO24obi5TLCJPYmplY3QiLHtzZXRQcm90b3R5cGVPZjpyKDk2KS5zZXR9KX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNyksbz1yKDkpLGk9ZnVuY3Rpb24oZSx0KXtpZihvKGUpLCFuKHQpJiZudWxsIT09dCl0aHJvdyBUeXBlRXJyb3IodCsiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlISIpfTtlLmV4cG9ydHM9e3NldDpPYmplY3Quc2V0UHJvdG90eXBlT2Z8fCgiX19wcm90b19fImlue30/ZnVuY3Rpb24oZSx0LG4pe3RyeXsobj1yKDE0KShGdW5jdGlvbi5jYWxsLHIoNDYpLmYoT2JqZWN0LnByb3RvdHlwZSwiX19wcm90b19fIikuc2V0LDIpKShlLFtdKSx0PSEoZSBpbnN0YW5jZW9mIEFycmF5KX1jYXRjaChlKXt0PSEwfXJldHVybiBmdW5jdGlvbihlLHIpe3JldHVybiBpKGUsciksdD9lLl9fcHJvdG9fXz1yOm4oZSxyKSxlfX0oe30sITEpOnZvaWQgMCksY2hlY2s6aX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig5OCksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtyKDk5KTt2YXIgbj1yKDApLk9iamVjdDtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5jcmVhdGUoZSx0KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYpO24obi5TLCJPYmplY3QiLHtjcmVhdGU6cigzOCl9KX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX10Ll9fZXNNb2R1bGU9ITA7dmFyIG89bihyKDI1KSksaT1uKHIoMTI1KSk7dC5kZWZhdWx0PWZ1bmN0aW9uIGUodCxyLG4pe251bGw9PT10JiYodD1GdW5jdGlvbi5wcm90b3R5cGUpO3ZhciBzPSgwLGkuZGVmYXVsdCkodCxyKTtpZih2b2lkIDA9PT1zKXt2YXIgYT0oMCxvLmRlZmF1bHQpKHQpO3JldHVybiBudWxsPT09YT92b2lkIDA6ZShhLHIsbil9aWYoInZhbHVlImluIHMpcmV0dXJuIHMudmFsdWU7dmFyIHU9cy5nZXQ7cmV0dXJuIHZvaWQgMCE9PXU/dS5jYWxsKG4pOnZvaWQgMH19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYzKSxvPXIoMikoIml0ZXJhdG9yIiksaT1yKDE3KTtlLmV4cG9ydHM9cigwKS5nZXRJdGVyYXRvck1ldGhvZD1mdW5jdGlvbihlKXtpZih2b2lkIDAhPWUpcmV0dXJuIGVbb118fGVbIkBAaXRlcmF0b3IiXXx8aVtuKGUpXX19LGZ1bmN0aW9uKGUsdCxyKXtyKDYwKSxyKDUyKSxyKDU0KSxyKDEwMykscigxMTQpLHIoMTE1KSxlLmV4cG9ydHM9cigwKS5Qcm9taXNlfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuLG8saSxzLGE9cigxNSksdT1yKDEpLGM9cigxNCksbD1yKDYzKSxkPXIoNiksZj1yKDcpLHA9cigyNCkseT1yKDEwNCksdj1yKDEwNSksaD1yKDY2KSxiPXIoNjcpLnNldCxfPXIoMTA5KSgpLG09cig1MSksZz1yKDY4KSxPPXIoMTEwKSx3PXIoNjkpLGo9dS5UeXBlRXJyb3Isaz11LnByb2Nlc3MsUj1rJiZrLnZlcnNpb25zLEw9UiYmUi52OHx8IiIseD11LlByb21pc2UsUD0icHJvY2VzcyI9PWwoayksQz1mdW5jdGlvbigpe30sUz1vPW0uZixNPSEhZnVuY3Rpb24oKXt0cnl7dmFyIGU9eC5yZXNvbHZlKDEpLHQ9KGUuY29uc3RydWN0b3I9e30pW3IoMikoInNwZWNpZXMiKV09ZnVuY3Rpb24oZSl7ZShDLEMpfTtyZXR1cm4oUHx8ImZ1bmN0aW9uIj09dHlwZW9mIFByb21pc2VSZWplY3Rpb25FdmVudCkmJmUudGhlbihDKWluc3RhbmNlb2YgdCYmMCE9PUwuaW5kZXhPZigiNi42IikmJi0xPT09Ty5pbmRleE9mKCJDaHJvbWUvNjYiKX1jYXRjaChlKXt9fSgpLFU9ZnVuY3Rpb24oZSl7dmFyIHQ7cmV0dXJuISghZihlKXx8ImZ1bmN0aW9uIiE9dHlwZW9mKHQ9ZS50aGVuKSkmJnR9LEQ9ZnVuY3Rpb24oZSx0KXtpZighZS5fbil7ZS5fbj0hMDt2YXIgcj1lLl9jO18oZnVuY3Rpb24oKXtmb3IodmFyIG49ZS5fdixvPTE9PWUuX3MsaT0wO3IubGVuZ3RoPmk7KSFmdW5jdGlvbih0KXt2YXIgcixpLHMsYT1vP3Qub2s6dC5mYWlsLHU9dC5yZXNvbHZlLGM9dC5yZWplY3QsbD10LmRvbWFpbjt0cnl7YT8ob3x8KDI9PWUuX2gmJkkoZSksZS5faD0xKSwhMD09PWE/cj1uOihsJiZsLmVudGVyKCkscj1hKG4pLGwmJihsLmV4aXQoKSxzPSEwKSkscj09PXQucHJvbWlzZT9jKGooIlByb21pc2UtY2hhaW4gY3ljbGUiKSk6KGk9VShyKSk/aS5jYWxsKHIsdSxjKTp1KHIpKTpjKG4pfWNhdGNoKGUpe2wmJiFzJiZsLmV4aXQoKSxjKGUpfX0ocltpKytdKTtlLl9jPVtdLGUuX249ITEsdCYmIWUuX2gmJkUoZSl9KX19LEU9ZnVuY3Rpb24oZSl7Yi5jYWxsKHUsZnVuY3Rpb24oKXt2YXIgdCxyLG4sbz1lLl92LGk9VChlKTtpZihpJiYodD1nKGZ1bmN0aW9uKCl7UD9rLmVtaXQoInVuaGFuZGxlZFJlamVjdGlvbiIsbyxlKToocj11Lm9udW5oYW5kbGVkcmVqZWN0aW9uKT9yKHtwcm9taXNlOmUscmVhc29uOm99KToobj11LmNvbnNvbGUpJiZuLmVycm9yJiZuLmVycm9yKCJVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24iLG8pfSksZS5faD1QfHxUKGUpPzI6MSksZS5fYT12b2lkIDAsaSYmdC5lKXRocm93IHQudn0pfSxUPWZ1bmN0aW9uKGUpe3JldHVybiAxIT09ZS5faCYmMD09PShlLl9hfHxlLl9jKS5sZW5ndGh9LEk9ZnVuY3Rpb24oZSl7Yi5jYWxsKHUsZnVuY3Rpb24oKXt2YXIgdDtQP2suZW1pdCgicmVqZWN0aW9uSGFuZGxlZCIsZSk6KHQ9dS5vbnJlamVjdGlvbmhhbmRsZWQpJiZ0KHtwcm9taXNlOmUscmVhc29uOmUuX3Z9KX0pfSxIPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fZHx8KHQuX2Q9ITAsKHQ9dC5fd3x8dCkuX3Y9ZSx0Ll9zPTIsdC5fYXx8KHQuX2E9dC5fYy5zbGljZSgpKSxEKHQsITApKX0sQT1mdW5jdGlvbihlKXt2YXIgdCxyPXRoaXM7aWYoIXIuX2Qpe3IuX2Q9ITAscj1yLl93fHxyO3RyeXtpZihyPT09ZSl0aHJvdyBqKCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZiIpOyh0PVUoZSkpP18oZnVuY3Rpb24oKXt2YXIgbj17X3c6cixfZDohMX07dHJ5e3QuY2FsbChlLGMoQSxuLDEpLGMoSCxuLDEpKX1jYXRjaChlKXtILmNhbGwobixlKX19KTooci5fdj1lLHIuX3M9MSxEKHIsITEpKX1jYXRjaChlKXtILmNhbGwoe193OnIsX2Q6ITF9LGUpfX19O018fCh4PWZ1bmN0aW9uKGUpe3kodGhpcyx4LCJQcm9taXNlIiwiX2giKSxwKGUpLG4uY2FsbCh0aGlzKTt0cnl7ZShjKEEsdGhpcywxKSxjKEgsdGhpcywxKSl9Y2F0Y2goZSl7SC5jYWxsKHRoaXMsZSl9fSwobj1mdW5jdGlvbihlKXt0aGlzLl9jPVtdLHRoaXMuX2E9dm9pZCAwLHRoaXMuX3M9MCx0aGlzLl9kPSExLHRoaXMuX3Y9dm9pZCAwLHRoaXMuX2g9MCx0aGlzLl9uPSExfSkucHJvdG90eXBlPXIoMTExKSh4LnByb3RvdHlwZSx7dGhlbjpmdW5jdGlvbihlLHQpe3ZhciByPVMoaCh0aGlzLHgpKTtyZXR1cm4gci5vaz0iZnVuY3Rpb24iIT10eXBlb2YgZXx8ZSxyLmZhaWw9ImZ1bmN0aW9uIj09dHlwZW9mIHQmJnQsci5kb21haW49UD9rLmRvbWFpbjp2b2lkIDAsdGhpcy5fYy5wdXNoKHIpLHRoaXMuX2EmJnRoaXMuX2EucHVzaChyKSx0aGlzLl9zJiZEKHRoaXMsITEpLHIucHJvbWlzZX0sY2F0Y2g6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsZSl9fSksaT1mdW5jdGlvbigpe3ZhciBlPW5ldyBuO3RoaXMucHJvbWlzZT1lLHRoaXMucmVzb2x2ZT1jKEEsZSwxKSx0aGlzLnJlamVjdD1jKEgsZSwxKX0sbS5mPVM9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT14fHxlPT09cz9uZXcgaShlKTpvKGUpfSksZChkLkcrZC5XK2QuRiohTSx7UHJvbWlzZTp4fSkscigyNikoeCwiUHJvbWlzZSIpLHIoMTEyKSgiUHJvbWlzZSIpLHM9cigwKS5Qcm9taXNlLGQoZC5TK2QuRiohTSwiUHJvbWlzZSIse3JlamVjdDpmdW5jdGlvbihlKXt2YXIgdD1TKHRoaXMpO3JldHVybigwLHQucmVqZWN0KShlKSx0LnByb21pc2V9fSksZChkLlMrZC5GKihhfHwhTSksIlByb21pc2UiLHtyZXNvbHZlOmZ1bmN0aW9uKGUpe3JldHVybiB3KGEmJnRoaXM9PT1zP3g6dGhpcyxlKX19KSxkKGQuUytkLkYqIShNJiZyKDExMykoZnVuY3Rpb24oZSl7eC5hbGwoZSkuY2F0Y2goQyl9KSksIlByb21pc2UiLHthbGw6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPVModCksbj1yLnJlc29sdmUsbz1yLnJlamVjdCxpPWcoZnVuY3Rpb24oKXt2YXIgcj1bXSxpPTAscz0xO3YoZSwhMSxmdW5jdGlvbihlKXt2YXIgYT1pKyssdT0hMTtyLnB1c2godm9pZCAwKSxzKyssdC5yZXNvbHZlKGUpLnRoZW4oZnVuY3Rpb24oZSl7dXx8KHU9ITAsclthXT1lLC0tc3x8bihyKSl9LG8pfSksLS1zfHxuKHIpfSk7cmV0dXJuIGkuZSYmbyhpLnYpLHIucHJvbWlzZX0scmFjZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9Uyh0KSxuPXIucmVqZWN0LG89ZyhmdW5jdGlvbigpe3YoZSwhMSxmdW5jdGlvbihlKXt0LnJlc29sdmUoZSkudGhlbihyLnJlc29sdmUsbil9KX0pO3JldHVybiBvLmUmJm4oby52KSxyLnByb21pc2V9fSl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLG4pe2lmKCEoZSBpbnN0YW5jZW9mIHQpfHx2b2lkIDAhPT1uJiZuIGluIGUpdGhyb3cgVHlwZUVycm9yKHIrIjogaW5jb3JyZWN0IGludm9jYXRpb24hIik7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxNCksbz1yKDEwNiksaT1yKDEwNykscz1yKDkpLGE9cig0OSksdT1yKDEwMSksYz17fSxsPXt9Oyh0PWUuZXhwb3J0cz1mdW5jdGlvbihlLHQscixkLGYpe3ZhciBwLHksdixoLGI9Zj9mdW5jdGlvbigpe3JldHVybiBlfTp1KGUpLF89bihyLGQsdD8yOjEpLG09MDtpZigiZnVuY3Rpb24iIT10eXBlb2YgYil0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBpdGVyYWJsZSEiKTtpZihpKGIpKXtmb3IocD1hKGUubGVuZ3RoKTtwPm07bSsrKWlmKChoPXQ/XyhzKHk9ZVttXSlbMF0seVsxXSk6XyhlW21dKSk9PT1jfHxoPT09bClyZXR1cm4gaH1lbHNlIGZvcih2PWIuY2FsbChlKTshKHk9di5uZXh0KCkpLmRvbmU7KWlmKChoPW8odixfLHkudmFsdWUsdCkpPT09Y3x8aD09PWwpcmV0dXJuIGh9KS5CUkVBSz1jLHQuUkVUVVJOPWx9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDkpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscixvKXt0cnl7cmV0dXJuIG8/dChuKHIpWzBdLHJbMV0pOnQocil9Y2F0Y2godCl7dmFyIGk9ZS5yZXR1cm47dGhyb3cgdm9pZCAwIT09aSYmbihpLmNhbGwoZSkpLHR9fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTcpLG89cigyKSgiaXRlcmF0b3IiKSxpPUFycmF5LnByb3RvdHlwZTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PWUmJihuLkFycmF5PT09ZXx8aVtvXT09PWUpfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXZvaWQgMD09PXI7c3dpdGNoKHQubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG4/ZSgpOmUuY2FsbChyKTtjYXNlIDE6cmV0dXJuIG4/ZSh0WzBdKTplLmNhbGwocix0WzBdKTtjYXNlIDI6cmV0dXJuIG4/ZSh0WzBdLHRbMV0pOmUuY2FsbChyLHRbMF0sdFsxXSk7Y2FzZSAzOnJldHVybiBuP2UodFswXSx0WzFdLHRbMl0pOmUuY2FsbChyLHRbMF0sdFsxXSx0WzJdKTtjYXNlIDQ6cmV0dXJuIG4/ZSh0WzBdLHRbMV0sdFsyXSx0WzNdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSx0WzNdKX1yZXR1cm4gZS5hcHBseShyLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSksbz1yKDY3KS5zZXQsaT1uLk11dGF0aW9uT2JzZXJ2ZXJ8fG4uV2ViS2l0TXV0YXRpb25PYnNlcnZlcixzPW4ucHJvY2VzcyxhPW4uUHJvbWlzZSx1PSJwcm9jZXNzIj09cigyMSkocyk7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIGUsdCxyLGM9ZnVuY3Rpb24oKXt2YXIgbixvO2Zvcih1JiYobj1zLmRvbWFpbikmJm4uZXhpdCgpO2U7KXtvPWUuZm4sZT1lLm5leHQ7dHJ5e28oKX1jYXRjaChuKXt0aHJvdyBlP3IoKTp0PXZvaWQgMCxufX10PXZvaWQgMCxuJiZuLmVudGVyKCl9O2lmKHUpcj1mdW5jdGlvbigpe3MubmV4dFRpY2soYyl9O2Vsc2UgaWYoIWl8fG4ubmF2aWdhdG9yJiZuLm5hdmlnYXRvci5zdGFuZGFsb25lKWlmKGEmJmEucmVzb2x2ZSl7dmFyIGw9YS5yZXNvbHZlKHZvaWQgMCk7cj1mdW5jdGlvbigpe2wudGhlbihjKX19ZWxzZSByPWZ1bmN0aW9uKCl7by5jYWxsKG4sYyl9O2Vsc2V7dmFyIGQ9ITAsZj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIik7bmV3IGkoYykub2JzZXJ2ZShmLHtjaGFyYWN0ZXJEYXRhOiEwfSkscj1mdW5jdGlvbigpe2YuZGF0YT1kPSFkfX1yZXR1cm4gZnVuY3Rpb24obil7dmFyIG89e2ZuOm4sbmV4dDp2b2lkIDB9O3QmJih0Lm5leHQ9byksZXx8KGU9byxyKCkpLHQ9b319fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKS5uYXZpZ2F0b3I7ZS5leHBvcnRzPW4mJm4udXNlckFnZW50fHwiIn0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTEpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBvIGluIHQpciYmZVtvXT9lW29dPXRbb106bihlLG8sdFtvXSk7cmV0dXJuIGV9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMSksbz1yKDApLGk9cig4KSxzPXIoNCksYT1yKDIpKCJzcGVjaWVzIik7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0PSJmdW5jdGlvbiI9PXR5cGVvZiBvW2VdP29bZV06bltlXTtzJiZ0JiYhdFthXSYmaS5mKHQsYSx7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0pfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMikoIml0ZXJhdG9yIiksbz0hMTt0cnl7dmFyIGk9WzddW25dKCk7aS5yZXR1cm49ZnVuY3Rpb24oKXtvPSEwfSxBcnJheS5mcm9tKGksZnVuY3Rpb24oKXt0aHJvdyAyfSl9Y2F0Y2goZSl7fWUuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCF0JiYhbylyZXR1cm4hMTt2YXIgcj0hMTt0cnl7dmFyIGk9WzddLHM9aVtuXSgpO3MubmV4dD1mdW5jdGlvbigpe3JldHVybntkb25lOnI9ITB9fSxpW25dPWZ1bmN0aW9uKCl7cmV0dXJuIHN9LGUoaSl9Y2F0Y2goZSl7fXJldHVybiByfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDYpLG89cigwKSxpPXIoMSkscz1yKDY2KSxhPXIoNjkpO24obi5QK24uUiwiUHJvbWlzZSIse2ZpbmFsbHk6ZnVuY3Rpb24oZSl7dmFyIHQ9cyh0aGlzLG8uUHJvbWlzZXx8aS5Qcm9taXNlKSxyPSJmdW5jdGlvbiI9PXR5cGVvZiBlO3JldHVybiB0aGlzLnRoZW4ocj9mdW5jdGlvbihyKXtyZXR1cm4gYSh0LGUoKSkudGhlbihmdW5jdGlvbigpe3JldHVybiByfSl9OmUscj9mdW5jdGlvbihyKXtyZXR1cm4gYSh0LGUoKSkudGhlbihmdW5jdGlvbigpe3Rocm93IHJ9KX06ZSl9fSl9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cig2KSxvPXIoNTEpLGk9cig2OCk7bihuLlMsIlByb21pc2UiLHt0cnk6ZnVuY3Rpb24oZSl7dmFyIHQ9by5mKHRoaXMpLHI9aShlKTtyZXR1cm4oci5lP3QucmVqZWN0OnQucmVzb2x2ZSkoci52KSx0LnByb21pc2V9fSl9LCxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0Lk9iamVjdFR5cGU9dC5DaGFuZ2VUeXBlPXZvaWQgMDt2YXIgbz1uKHIoMykpLGk9bihyKDUpKTtyKDEyMyk7dmFyIHM9cigxOSksYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7KDAsby5kZWZhdWx0KSh0aGlzLGUpO3RoaXMuX29ic2VydmVycz1bXSx0aGlzLl9maWx0ZXJzPXt9LHRoaXMuX2RhdGE9dHx8e30sdGhpcy5faW50ZXJuYWxPYnNlcnZlKHRoaXMuX2RhdGEpfXJldHVybigwLGkuZGVmYXVsdCkoZSxbe2tleToib2JzZXJ2ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb2JzZXJ2ZXJzLnB1c2goZSl9fSx7a2V5OiJmaW5kIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD0oMCxzLnBhcnNlQXR0cmlidXRlcykoZSk7cmV0dXJuIHRoaXMuX2ZpbmRXaXRoU3BsaXQodCl9fSx7a2V5OiJmaW5kQmVmb3JlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD17fSxyPSgwLHMucGFyc2VBdHRyaWJ1dGVzKShlKTtyZXR1cm4gdC5sYXN0PXIucG9wKCksdC5vYmo9dGhpcy5fZmluZFdpdGhTcGxpdChyKSx0fX0se2tleToiX2ZpbmRXaXRoU3BsaXQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2RhdGE7cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbihlKXt0PXRbZV19KSx0fX0se2tleToiX2ludGVybmFsT2JzZXJ2ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLl9kYXRhPU9iamVjdC5kZWVwT2JzZXJ2ZShlLGZ1bmN0aW9uKGUpe2UuZXZlcnkoZnVuY3Rpb24oZSl7dC5fb25DaGFuZ2VzKGUpfSl9KX19LHtrZXk6Il9maXJlRXZlbnQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QoZSl9KX19LHtrZXk6Il9vbkNoYW5nZXMiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWUub2JqZWN0LHI9dm9pZCAwO3QuY29uc3RydWN0b3I9PT1PYmplY3QmJihyPWMuT0JKRUNUKSx0LmNvbnN0cnVjdG9yPT09QXJyYXkmJihyPWMuQVJSQVkpO3ZhciBuPWUua2V5cGF0aCxvPXRbZS5uYW1lXTsidXBkYXRlIiE9PWUudHlwZXx8bi5pbmNsdWRlcygiLmxlbmd0aCIpfHx0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnUuVVBEQVRFLG9UeXBlOnIsZmllbGQ6bixkYXRhOm99KSwiYWRkIj09PWUudHlwZSYmdGhpcy5fZmlyZUV2ZW50KHtjVHlwZTp1LkFERCxvVHlwZTpyLGZpZWxkOm4sZGF0YTpvfSksImRlbGV0ZSI9PT1lLnR5cGUmJnRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6dS5SRU1PVkUsb1R5cGU6cixmaWVsZDpufSl9fSx7a2V5OiJkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YX19XSksZX0oKSx1PXQuQ2hhbmdlVHlwZT17VVBEQVRFOiJ1cGRhdGUiLEFERDoiYWRkIixSRU1PVkU6InJlbW92ZSJ9LGM9dC5PYmplY3RUeXBlPXtPQkpFQ1Q6Im9iamVjdCIsQVJSQVk6ImFycmF5In07dC5kZWZhdWx0PWF9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocigxOCkpLGk9bihyKDMpKSxzPW4ocig1KSksYT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSx1PW4ocigxMTcpKSxjPXIoMTkpLGw9YS5nZXRMb2dnZXIoIkRhdGFPYmplY3RDaGlsZCIpLGQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpe2Z1bmN0aW9uIHIoZSl7dGhyb3ciW0RhdGFPYmplY3RDaGlsZF0gIitlKyIgbWFuZGF0b3J5IHBhcmFtZXRlciBpcyBtaXNzaW5nIn0oMCxpLmRlZmF1bHQpKHRoaXMsZSk7dmFyIG49dGhpczt0LnBhcmVudD9uLl9wYXJlbnQ9dC5wYXJlbnQ6cigicGFyZW50IiksdC51cmw/bi5fdXJsPXQudXJsOnIoInVybCIpLHQuY3JlYXRlZD9uLl9jcmVhdGVkPXQuY3JlYXRlZDpyKCJjcmVhdGVkIiksdC5yZXBvcnRlcj9uLl9yZXBvcnRlcj10LnJlcG9ydGVyOnIoInJlcG9ydGVyIiksdC5ydW50aW1lP24uX3J1bnRpbWU9dC5ydW50aW1lOnIoInJ1bnRpbWUiKSx0LnNjaGVtYT9uLl9zY2hlbWE9dC5zY2hlbWE6cigic2NoZW1hIiksdC5wYXJlbnRPYmplY3Q/bi5fcGFyZW50T2JqZWN0PXQucGFyZW50T2JqZWN0OnIoInBhcmVudE9iamVjdCIpLHQubmFtZSYmKG4uX25hbWU9dC5uYW1lKSx0LmRlc2NyaXB0aW9uJiYobi5fZGVzY3JpcHRpb249dC5kZXNjcmlwdGlvbiksdC50YWdzJiYobi5fdGFncz10LnRhZ3MpLHQucmVzb3VyY2VzJiYobi5fcmVzb3VyY2VzPXQucmVzb3VyY2VzKSx0Lm9ic2VydmVyU3RvcmFnZSYmKG4uX29ic2VydmVyU3RvcmFnZT10Lm9ic2VydmVyU3RvcmFnZSksdC5wdWJsaWNPYnNlcnZhdGlvbiYmKG4uX3B1YmxpY09ic2VydmF0aW9uPXQucHVibGljT2JzZXJ2YXRpb24pLG4uX2NoaWxkSWQ9dC51cmwsdC5kYXRhP24uX3N5bmNPYmo9bmV3IHUuZGVmYXVsdCh0LmRhdGEpOm4uX3N5bmNPYmo9bmV3IHUuZGVmYXVsdCh7fSksbC5sb2coIltEYXRhT2JqZWN0Q2hpbGQgLSAgQ29uc3RydWN0b3JdIC0gIixuLl9zeW5jT2JqKSxuLl9idXM9bi5fcGFyZW50T2JqZWN0Ll9idXMsbi5fb3duZXI9bi5fcGFyZW50T2JqZWN0Ll9vd25lcixuLl9hbGxvY2F0ZUxpc3RlbmVycygpLG4uX21ldGFkYXRhPXQsZGVsZXRlIG4uX21ldGFkYXRhLnBhcmVudE9iamVjdCxuLl9zaGFyaW5nU3RhdHVzPSExfXJldHVybigwLHMuZGVmYXVsdCkoZSxbe2tleToic2hhcmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fc2hhcmluZ1N0YXR1cz1uZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7dmFyIG87bz1lP3QubWV0YWRhdGEucGFyZW50OnQubWV0YWRhdGEucGFyZW50KyIvY2hpbGRyZW4vIit0Lm1ldGFkYXRhLmNoaWxkcmVuO3ZhciBpPXQubWV0YWRhdGE7aS5kYXRhPXQuZGF0YTt2YXIgcz17dHlwZToiY3JlYXRlIixmcm9tOnQubWV0YWRhdGEucmVwb3J0ZXIsdG86byxib2R5OntyZXNvdXJjZTppLnVybCx2YWx1ZTppfX07aWYodC5pZGVudGl0eSYmKHMuYm9keS5pZGVudGl0eT10LmlkZW50aXR5KSx0Ll9wYXJlbnRPYmplY3QuZGF0YS5oYXNPd25Qcm9wZXJ0eSgibXV0dWFsIikmJihzLmJvZHkubXV0dWFsPXQuX3BhcmVudE9iamVjdC5kYXRhLm11dHVhbCksdC5fcGFyZW50T2JqZWN0Lm1ldGFkYXRhLnJlcG9ydGVyPT09dC5tZXRhZGF0YS5yZXBvcnRlcilyZXR1cm4gdC5fYnVzLnBvc3RNZXNzYWdlKCgwLGMuZGVlcENsb25lKShzKSkscigpO3ZhciBhPXQuX2J1cy5wb3N0TWVzc2FnZSgoMCxjLmRlZXBDbG9uZSkocyksZnVuY3Rpb24oZSl7aWYoZS50bz09PXQuX3JlcG9ydGVyKXt0Ll9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihzLmZyb20sZS5pZCksbC5sb2coIltTeW5jaGVyLkRhdGFPYmplY3RDaGlsZC5zaGFyZV0gUGFyZW50IHJlcG9ydGVyIHJlcGx5ICIsZSk7dmFyIG89e2NvZGU6ZS5ib2R5JiZlLmJvZHkuY29kZT9lLmJvZHkuY29kZTo1MDAsZGVzYzplLmJvZHkmJmUuYm9keS5kZXNjP2UuYm9keS5kZXNjOiJVbmtub3duIn07cmV0dXJuIGUuYm9keS5jb2RlPDMwMD9yKG8pOm4obyl9fSwhMSk7c2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiB0Ll9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihzLmZyb20sYSksbih7Y29kZTo0MDgsZGVzYzoidGltb3V0In0pfSwzZTMpfSl9fSx7a2V5OiJzdG9yZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e30scj1lLm1ldGFkYXRhLmNoaWxkcmVuKyIuIitlLm1ldGFkYXRhLnVybDt0LnZhbHVlPWUubWV0YWRhdGEsdC5pZGVudGl0eT1lLmlkZW50aXR5O3ZhciBuPXtmcm9tOmUubWV0YWRhdGEucmVwb3J0ZXIsdG86ZS5fcGFyZW50T2JqZWN0Ll9zeW5jaGVyLl9zdWJVUkwsdHlwZToiY3JlYXRlIixib2R5OntyZXNvdXJjZTplLm1ldGFkYXRhLnBhcmVudCxhdHRyaWJ1dGU6cix2YWx1ZTp0fX07bC5sb2coIltEYXRhT2JqZWN0Q2hpbGQuc3RvcmVdOiIsbiksZS5fYnVzLnBvc3RNZXNzYWdlKG4pfX0se2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fcmVwb3J0ZXI9PT1lLl9vd25lciYmKGUuX2xpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl9yZXBvcnRlcixmdW5jdGlvbih0KXsicmVzcG9uc2UiPT09dC50eXBlJiZ0LmlkPT09ZS5fbXNnSWQmJihsLmxvZygiRGF0YU9iamVjdENoaWxkLm9uUmVzcG9uc2U6Iix0KSxlLl9vblJlc3BvbnNlKHQpKX0pKX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2xpc3RlbmVyJiZ0aGlzLl9saXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6ImRlbGV0ZSIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9yZWxlYXNlTGlzdGVuZXJzKCl9fSx7a2V5OiJvbkNoYW5nZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKHQpe2wubG9nKCJbRGF0YU9iamVjdENoaWxkIC0gb2JzZXJ2ZXJdIC0gIix0KSxlKHQpfSl9fSx7a2V5OiJvblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlc3BvbnNlSGFuZGxlcj1lfX0se2tleToiX29uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXt0eXBlOmUudHlwZSx1cmw6ZS5ib2R5LnNvdXJjZSxjb2RlOmUuYm9keS5jb2RlfTt0aGlzLl9vblJlc3BvbnNlSGFuZGxlciYmdGhpcy5fb25SZXNwb25zZUhhbmRsZXIodCl9fSx7a2V5OiJzaGFyZWFibGUiLGdldDpmdW5jdGlvbigpe3ZhciBlPXRoaXMubWV0YWRhdGE7cmV0dXJuIGUuZGF0YT10aGlzLmRhdGEsZX19LHtrZXk6Im1ldGFkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGF9fSx7a2V5OiJjaGlsZElkIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRJZH19LHtrZXk6InNoYXJpbmdTdGF0dXMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zaGFyaW5nU3RhdHVzfX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N5bmNPYmouZGF0YX19LHtrZXk6ImlkZW50aXR5IixzZXQ6ZnVuY3Rpb24oZSl7dGhpcy5faWRlbnRpdHk9ZX0sZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lkZW50aXR5fX1dKSxlfSgpO3QuZGVmYXVsdD1kLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXtyKDEyMCksZS5leHBvcnRzPXIoMCkuT2JqZWN0LmFzc2lnbn0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNik7bihuLlMrbi5GLCJPYmplY3QiLHthc3NpZ246cigxMjEpfSl9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cigyMCksbz1yKDQzKSxpPXIoMjkpLHM9cigzMiksYT1yKDU1KSx1PU9iamVjdC5hc3NpZ247ZS5leHBvcnRzPSF1fHxyKDEzKShmdW5jdGlvbigpe3ZhciBlPXt9LHQ9e30scj1TeW1ib2woKSxuPSJhYmNkZWZnaGlqa2xtbm9wcXJzdCI7cmV0dXJuIGVbcl09NyxuLnNwbGl0KCIiKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3RbZV09ZX0pLDchPXUoe30sZSlbcl18fE9iamVjdC5rZXlzKHUoe30sdCkpLmpvaW4oIiIpIT1ufSk/ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHI9cyhlKSx1PWFyZ3VtZW50cy5sZW5ndGgsYz0xLGw9by5mLGQ9aS5mO3U+YzspZm9yKHZhciBmLHA9YShhcmd1bWVudHNbYysrXSkseT1sP24ocCkuY29uY2F0KGwocCkpOm4ocCksdj15Lmxlbmd0aCxoPTA7dj5oOylkLmNhbGwocCxmPXlbaCsrXSkmJihyW2ZdPXBbZl0pO3JldHVybiByfTp1fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoNDcpKSxpPW4ocigxOCkpLHM9bihyKDQyKSksYT1uKHIoNzgpKSx1PW4ocigzKSksYz1uKHIoNSkpLGw9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSksZD1yKDExNyksZj1uKGQpLHA9bihyKDExOCkpLHk9cigxOSksdj1uKHIoMTI4KSksaD1sLmdldExvZ2dlcigiRGF0YU9iamVjdCIpLGI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpe2Z1bmN0aW9uIHIoZSl7dGhyb3ciW0RhdGFPYmplY3RdICIrZSsiIG1hbmRhdG9yeSBwYXJhbWV0ZXIgaXMgbWlzc2luZyJ9KDAsdS5kZWZhdWx0KSh0aGlzLGUpO3ZhciBuPXRoaXM7dC5zeW5jaGVyP24uX3N5bmNoZXI9dC5zeW5jaGVyOnIoInN5bmNoZXIiKSx0LnVybD9uLl91cmw9dC51cmw6cigidXJsIiksdC5jcmVhdGVkP24uX2NyZWF0ZWQ9dC5jcmVhdGVkOnIoImNyZWF0ZWQiKSx0LnJlcG9ydGVyP24uX3JlcG9ydGVyPXQucmVwb3J0ZXI6cigicmVwb3J0ZXIiKSx0LnJ1bnRpbWU/bi5fcnVudGltZT10LnJ1bnRpbWU6cigicnVudGltZSIpLHQuc2NoZW1hP24uX3NjaGVtYT10LnNjaGVtYTpyKCJzY2hlbWEiKSx0Lm5hbWU/bi5fbmFtZT10Lm5hbWU6cigibmFtZSIpLG4uX3N0YXR1cz10LnN0YXR1cyx0LmRhdGE/bi5fc3luY09iaj1uZXcgZi5kZWZhdWx0KHQuZGF0YSk6bi5fc3luY09iaj1uZXcgZi5kZWZhdWx0KHt9KSxuLl9jaGlsZHJlbnM9dC5jaGlsZHJlbnMsbi5fbXV0dWFsPXQubXV0dWFsLG4uX3ZlcnNpb249MCxuLl9jaGlsZElkPTAsbi5fY2hpbGRyZW5MaXN0ZW5lcnM9W10sbi5fb25BZGRDaGlsZHJlbkhhbmRsZXIsbi5fcmVzdW1lZD10LnJlc3VtZSx0LnJlc3VtZSYmKG4uX3ZlcnNpb249dC52ZXJzaW9uKSxuLl9vd25lcj10LnN5bmNoZXIuX293bmVyLG4uX2J1cz10LnN5bmNoZXIuX2J1cyx0LmRlc2NyaXB0aW9uJiYobi5fZGVzY3JpcHRpb249dC5kZXNjcmlwdGlvbiksdC50YWdzJiYobi5fdGFncz10LnRhZ3MpLHQucmVzb3VyY2VzJiYobi5fcmVzb3VyY2VzPXQucmVzb3VyY2VzKSx0Lm9ic2VydmVyU3RvcmFnZSYmKG4uX29ic2VydmVyU3RvcmFnZT10Lm9ic2VydmVyU3RvcmFnZSksdC5wdWJsaWNPYnNlcnZhdGlvbiYmKG4uX3B1YmxpY09ic2VydmF0aW9uPXQucHVibGljT2JzZXJ2YXRpb24pLG4uX21ldGFkYXRhPSgwLGEuZGVmYXVsdCkodCksKCF0Lmhhc093blByb3BlcnR5KCJyZXN1bWUiKXx8dC5oYXNPd25Qcm9wZXJ0eSgicmVzdW1lIikmJiF0LnJlc3VtZSkmJihuLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9bi5fbWV0YWRhdGEuY3JlYXRlZCksZGVsZXRlIG4uX21ldGFkYXRhLmRhdGEsZGVsZXRlIG4uX21ldGFkYXRhLnN5bmNoZXIsZGVsZXRlIG4uX21ldGFkYXRhLmF1dGhvcmlzZSxuLl9oeXBlcnR5UmVzb3VyY2VGYWN0b3J5PW5ldyB2LmRlZmF1bHQsbi5fY2hpbGRyZW5PYmplY3RzPXt9LG4uX3NoYXJlZENoaWxkcz1bXX1yZXR1cm4oMCxjLmRlZmF1bHQpKGUsW3trZXk6Il9nZXRMYXN0Q2hpbGRJZCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9MCxyPWUuX293bmVyKyIjIit0O3JldHVybigwLHMuZGVmYXVsdCkoZS5fY2hpbGRyZW5zKS5maWx0ZXIoZnVuY3Rpb24odCl7ZS5fY2hpbGRyZW5zW3RdLmNoaWxkSWQ+ciYmKHI9ZS5fY2hpbGRyZW5zW3RdLmNoaWxkSWQpfSksTnVtYmVyKHIuc3BsaXQoIiMiKVsxXSl9fSx7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMscj10Ll91cmwrIi9jaGlsZHJlbi8iO2gubG9nKCJbRGF0YSBPYmplY3QgLSBBbGxvY2F0ZUxpc3RlbmVyc10gLSAiLHQuX2NoaWxkcmVucyksdC5fY2hpbGRyZW5zJiZ0Ll9jaGlsZHJlbnMuZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgbz1yK24saT10Ll9idXMuYWRkTGlzdGVuZXIobyxmdW5jdGlvbihyKXtpZihyLmZyb20hPT1lLl9vd25lcilzd2l0Y2goaC5sb2coIkRhdGFPYmplY3QtQ2hpbGRyZW4tUkNWOiAiLHIpLHIudHlwZSl7Y2FzZSJjcmVhdGUiOnQuX29uQ2hpbGRDcmVhdGUocik7YnJlYWs7Y2FzZSJkZWxldGUiOmgubG9nKHIpO2JyZWFrO2RlZmF1bHQ6dC5fY2hhbmdlQ2hpbGRyZW4ocil9fSk7dC5fY2hpbGRyZW5MaXN0ZW5lcnMucHVzaChpKX0pfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9jaGlsZHJlbkxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UucmVtb3ZlKCl9KSwoMCxzLmRlZmF1bHQpKGUuX2NoaWxkcmVuT2JqZWN0cykuZm9yRWFjaChmdW5jdGlvbih0KXsoMCxzLmRlZmF1bHQpKGUuX2NoaWxkcmVuT2JqZWN0c1t0XSkuZm9yRWFjaChmdW5jdGlvbihyKXtlLl9jaGlsZHJlbk9iamVjdHNbdF1bcl0uX3JlbGVhc2VMaXN0ZW5lcnMoKX0pfSl9fSx7a2V5OiJyZXN1bWVDaGlsZHJlbnMiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10aGlzLG49dGhpcy5fb3duZXIrIiMiK3RoaXMuX2NoaWxkSWQ7KDAscy5kZWZhdWx0KShlKS5mb3JFYWNoKGZ1bmN0aW9uKG8pe3ZhciBpPWVbb107KDAscy5kZWZhdWx0KShpKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBzPSExO3IuX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShvKXx8KHIuX2NoaWxkcmVuT2JqZWN0c1tvXT17fSksaVtlXS52YWx1ZS5yZXNvdXJjZVR5cGUmJiFyLl9jaGlsZHJlbk9iamVjdHNbb10uaGFzT3duUHJvcGVydHkoZSk/KHIuX2NoaWxkcmVuT2JqZWN0c1tvXVtlXT1yLl9yZXN1bWVIeXBlcnR5UmVzb3VyY2UoaVtlXSkscz0hMCk6ci5fY2hpbGRyZW5PYmplY3RzW29dLmhhc093blByb3BlcnR5KGUpfHwoci5fY2hpbGRyZW5PYmplY3RzW29dW2VdPXIuX3Jlc3VtZUNoaWxkKGlbZV0pLGgubG9nKCJbRGF0YU9iamVjdC5yZXN1bWVDaGlsZHJlbnNdIG5ldyBEYXRhT2JqZWN0Q2hpbGQ6ICIsci5fY2hpbGRyZW5PYmplY3RzW29dW2VdKSxzPSEwKSxzJiZlPm4mJihuPWUsaC5sb2coIltEYXRhT2JqZWN0UmVwb3J0ZXIucmVzdW1lQ2hpbGRyZW5zXSAtIHJlc3VtaW5nOiAiLHQuX2NoaWxkcmVuT2JqZWN0c1tvXVtlXSkpfSl9KSx0aGlzLl9jaGlsZElkPU51bWJlcihuLnNwbGl0KCIjIilbMV0pfX0se2tleToiX3Jlc3VtZUNoaWxkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS52YWx1ZTtyLnBhcmVudE9iamVjdD10LHIucGFyZW50PXQuX3VybDt2YXIgbj1uZXcgcC5kZWZhdWx0KHIpO24uaWRlbnRpdHk9ZS5pZGVudGl0eTt2YXIgbz17dHlwZToiY3JlYXRlIixmcm9tOm4ucmVwb3J0ZXIsdXJsOm4ucGFyZW50LHZhbHVlOm4uZGF0YSxjaGlsZElkOm4udXJsLGlkZW50aXR5Om4uaWRlbnRpdHksY2hpbGQ6bn07cmV0dXJuIG4ucmVzb3VyY2VUeXBlJiYoby5yZXNvdXJjZT1uKSx0Ll9vbkFkZENoaWxkcmVuSGFuZGxlciYmdC5fb25BZGRDaGlsZHJlbkhhbmRsZXIobyksbn19LHtrZXk6Il9yZXN1bWVIeXBlcnR5UmVzb3VyY2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLnZhbHVlO3IucGFyZW50T2JqZWN0PXQsci5wYXJlbnQ9dC5fdXJsO3ZhciBuPXQuX2h5cGVydHlSZXNvdXJjZUZhY3RvcnkuY3JlYXRlSHlwZXJ0eVJlc291cmNlKCExLHIucmVzb3VyY2VUeXBlLHIpO24uaWRlbnRpdHk9ZS5pZGVudGl0eTt2YXIgbz17dHlwZToiY3JlYXRlIixmcm9tOm4ucmVwb3J0ZXIsdXJsOm4ucGFyZW50LHZhbHVlOm4uZGF0YSxjaGlsZElkOm4udXJsLGlkZW50aXR5Om4uaWRlbnRpdHksY2hpbGQ6bn07cmV0dXJuIG4ucmVzb3VyY2VUeXBlJiYoby5yZXNvdXJjZT1uKSx0Ll9vbkFkZENoaWxkcmVuSGFuZGxlciYmdC5fb25BZGRDaGlsZHJlbkhhbmRsZXIobyksbn19LHtrZXk6InBhdXNlIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJyZXN1bWUiLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3ciTm90IGltcGxlbWVudGVkIn19LHtrZXk6InN0b3AiLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3ciTm90IGltcGxlbWVudGVkIn19LHtrZXk6ImFkZENoaWxkIix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgbz10aGlzLHM9dm9pZCAwO3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKGkpe3ZhciBhPW8uX3VybCsiL2NoaWxkcmVuLyIrZSx1PW8uX2dldENoaWxkSW5wdXQobik7dS5kYXRhPXQsdS5jaGlsZHJlbj1lLHM9bmV3IHAuZGVmYXVsdCh1KSxyJiYocy5pZGVudGl0eT1yKSxzLnNoYXJlKCksaC5sb2coIltEYXRhT2JqZWN0LmFkZENoaWxkXSBhZGRlZCAiLHMpLHMub25DaGFuZ2UoZnVuY3Rpb24oZSl7by5fb25DaGFuZ2UoZSx7cGF0aDphLGNoaWxkSWQ6dS51cmx9KX0pLG8uX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShlKXx8KG8uX2NoaWxkcmVuT2JqZWN0c1tlXT17fSksby5fY2hpbGRyZW5PYmplY3RzW2VdW3UudXJsXT1zLGkocyl9KX19LHtrZXk6Il9kZWxldGVDaGlsZHJlbnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PVtdO3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKHIpe2lmKGUuY2hpbGRyZW5zKXtoLmxvZygiW0RhdGFPYmplY3QuZGVsZXRlQ2hpbGRyZW5zXSIsZS5jaGlsZHJlbnMpO3ZhciBuPXZvaWQgMDtmb3IobiBpbiBlLmNoaWxkcmVucyl7dmFyIG89dm9pZCAwO2ZvcihvIGluIGUuY2hpbGRyZW5zW25dKXt2YXIgcz1lLmNoaWxkcmVuc1tuXVtvXTtoLmxvZygiW0RhdGFPYmplY3QuX2RlbGV0ZUNoaWxkcmVuc10gY2hpbGQiLHMpLHMubWV0YWRhdGEuaGFzT3duUHJvcGVydHkoInJlc291cmNlVHlwZSIpJiZ0LnB1c2goZS5jaGlsZHJlbnNbbl1bb10uZGVsZXRlKCkpfX19aC5sb2coIltEYXRhT2JqZWN0Ll9kZWxldGVDaGlsZHJlbnNdIHByb21pc2VzICIsdCksdC5sZW5ndGg+MD9pLmRlZmF1bHQuYWxsKHQpLnRoZW4oZnVuY3Rpb24oKXtyKCJbRGF0YU9iamVjdC5fZGVsZXRlQ2hpbGRyZW5zXSBkb25lIil9KTpyKCJbRGF0YU9iamVjdC5fZGVsZXRlQ2hpbGRyZW5zXSBub3RoaW5nIHRvIGRlbGV0ZSIpfSl9fSx7a2V5OiJfZ2V0Q2hpbGRJbnB1dCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPSgwLGEuZGVmYXVsdCkoe30sZSk7cmV0dXJuIHQuX2NoaWxkSWQrKyxyLnVybD10Ll9vd25lcisiIyIrdC5fY2hpbGRJZCxyLnBhcmVudE9iamVjdD10LHIucmVwb3J0ZXI9dC5fb3duZXIsci5jcmVhdGVkPShuZXcgRGF0ZSkudG9JU09TdHJpbmcoKSxyLnJ1bnRpbWU9dC5fc3luY2hlci5fcnVudGltZVVybCxyLnAycEhhbmRsZXI9dC5fc3luY2hlci5fcDJwSGFuZGxlcixyLnAycFJlcXVlc3Rlcj10Ll9zeW5jaGVyLl9wMnBSZXF1ZXN0ZXIsci5zY2hlbWE9dC5fc2NoZW1hLHIucGFyZW50PXQudXJsLHJ9fSx7a2V5OiJhZGRIeXBlcnR5UmVzb3VyY2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4sbyl7dmFyIHM9dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihpKXt2YXIgYT12b2lkIDAsdT1zLl91cmwrIi9jaGlsZHJlbi8iK2UsYz1zLl9nZXRDaGlsZElucHV0KG8pO2MuY2hpbGRyZW49ZSxzLl9oeXBlcnR5UmVzb3VyY2VGYWN0b3J5LmNyZWF0ZUh5cGVydHlSZXNvdXJjZVdpdGhDb250ZW50KCEwLHQscixjKS50aGVuKGZ1bmN0aW9uKHQpe2E9dCxuJiYoYS5pZGVudGl0eT1uKSxhLnNoYXJlKCksaC5sb2coIltEYXRhT2JqZWN0LmFkZEh5cGVydHlSZXNvdXJjZV0gYWRkZWQgIixhKSxhLm9uQ2hhbmdlKGZ1bmN0aW9uKGUpe3MuX29uQ2hhbmdlKGUse3BhdGg6dSxjaGlsZElkOmEuY2hpbGRJZH0pfSkscy5fY2hpbGRyZW5PYmplY3RzLmhhc093blByb3BlcnR5KGUpfHwocy5fY2hpbGRyZW5PYmplY3RzW2VdPXt9KSxzLl9jaGlsZHJlbk9iamVjdHNbZV1bYS5jaGlsZElkXT1hLGkoYSl9KX0pfX0se2tleToib25BZGRDaGlsZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXI9ZX19LHtrZXk6Il9vbkNoaWxkQ3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2gubG9nKCJbRGF0YU9iamVjdC5fb25DaGlsZENyZWF0ZV0gcmVjZWl2ZWRCeSAiK3QuX293bmVyKyIgOiAiLGUpO3ZhciByPXtmcm9tOmUudG8sdG86ZS5mcm9tLHR5cGU6InJlc3BvbnNlIixpZDplLmlkLGJvZHk6e2NvZGU6MTAwfX07dC5fYnVzLnBvc3RNZXNzYWdlKHIpLGUuYm9keS52YWx1ZS5yZXNvdXJjZVR5cGU/dC5fb25IeXBlcnR5UmVzb3VyY2VBZGRlZChlKTp0Ll9vbkNoaWxkQWRkZWQoZSl9fSx7a2V5OiJfb25DaGlsZEFkZGVkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9KDAseS5kZWVwQ2xvbmUpKGUuYm9keS52YWx1ZSk7ci5wYXJlbnRPYmplY3Q9dDt2YXIgbj1yLmNoaWxkcmVuLG89bmV3IHAuZGVmYXVsdChyKTtvLmlkZW50aXR5PWUuYm9keS5pZGVudGl0eSx0Ll9jaGlsZHJlbk9iamVjdHMuaGFzT3duUHJvcGVydHkobil8fCh0Ll9jaGlsZHJlbk9iamVjdHNbbl09e30pLHQuX2NoaWxkcmVuT2JqZWN0c1tuXVtyLnVybF09byxlLnRvPT09dC5tZXRhZGF0YS51cmwmJm8uc3RvcmUoKSx0Ll9oeXBlcnR5RXZ0KGUsbyl9fSx7a2V5OiJfb25IeXBlcnR5UmVzb3VyY2VBZGRlZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS52YWx1ZSxuPXZvaWQgMCxvPXIuY2hpbGRyZW47ci5wYXJlbnRPYmplY3Q9dCwobj10Ll9oeXBlcnR5UmVzb3VyY2VGYWN0b3J5LmNyZWF0ZUh5cGVydHlSZXNvdXJjZSghMSxyLnJlc291cmNlVHlwZSxyKSkuaWRlbnRpdHk9ZS5ib2R5LmlkZW50aXR5LHQuX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShvKXx8KHQuX2NoaWxkcmVuT2JqZWN0c1tvXT17fSksdC5fY2hpbGRyZW5PYmplY3RzW29dW24uY2hpbGRJZF09bix0Ll9oeXBlcnR5RXZ0KGUsbiksZS50bz09PXQubWV0YWRhdGEudXJsJiZuLnN0b3JlKCl9fSx7a2V5OiJfaHlwZXJ0eUV2dCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj17dHlwZTplLnR5cGUsZnJvbTplLmZyb20sdXJsOmUudG8sdmFsdWU6dC5kYXRhLGNoaWxkSWQ6dC51cmwsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LGNoaWxkOnR9O3QucmVzb3VyY2VUeXBlJiYoci5yZXNvdXJjZT10KSx0aGlzLl9vbkFkZENoaWxkcmVuSGFuZGxlciYmdGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXIocil9fSx7a2V5OiJfb25DaGFuZ2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZihyLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9KG5ldyBEYXRlKS50b0lTT1N0cmluZygpLHIuX3ZlcnNpb24rKywibGl2ZSI9PT1yLl9zdGF0dXMpe3ZhciBuPXt0eXBlOiJ1cGRhdGUiLGZyb206ci5fdXJsLHRvOnIuX3VybCsiL2NoYW5nZXMiLGJvZHk6e3ZlcnNpb246ci5fdmVyc2lvbixzb3VyY2U6ci5fb3duZXIsYXR0cmlidXRlOmUuZmllbGQsbGFzdE1vZGlmaWVkOnIuX21ldGFkYXRhLmxhc3RNb2RpZmllZH19O2gubG9nKCJbRGF0YU9iamVjdCAtIF9vbkNoYW5nZV0gLSAiLGUsdCxuKSxlLm9UeXBlPT09ZC5PYmplY3RUeXBlLk9CSkVDVD9lLmNUeXBlIT09ZC5DaGFuZ2VUeXBlLlJFTU9WRSYmKG4uYm9keS52YWx1ZT0oMCx5LmRlZXBDbG9uZSkoZS5kYXRhKSk6KG4uYm9keS5hdHRyaWJ1dGVUeXBlPWUub1R5cGUsbi5ib2R5LnZhbHVlPWUuZGF0YSxlLmNUeXBlIT09ZC5DaGFuZ2VUeXBlLlVQREFURSYmKG4uYm9keS5vcGVyYXRpb249ZS5jVHlwZSkpLHQmJihuLnRvPXQucGF0aCxuLmJvZHkucmVzb3VyY2U9dC5jaGlsZElkKSxyLmRhdGEuX211dHVhbHx8KG4uYm9keS5tdXR1YWw9ci5fbXV0dWFsKSxyLl9idXMucG9zdE1lc3NhZ2Uobil9fX0se2tleToiX2NoYW5nZU9iamVjdCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO2lmKHIuX3ZlcnNpb24rMTw9dC5ib2R5LnZlcnNpb24pe3IuX3ZlcnNpb249dC5ib2R5LnZlcnNpb247dmFyIG4saT10LmJvZHkuYXR0cmlidXRlO249Im9iamVjdCI9PT0oMCxvLmRlZmF1bHQpKHQuYm9keS52YWx1ZSk/KDAseS5kZWVwQ2xvbmUpKHQuYm9keS52YWx1ZSk6dC5ib2R5LnZhbHVlO3ZhciBzPWUuZmluZEJlZm9yZShpKTtpZih0LmJvZHkubGFzdE1vZGlmaWVkP3IuX21ldGFkYXRhLmxhc3RNb2RpZmllZD10LmJvZHkubGFzdE1vZGlmaWVkOnIuX21ldGFkYXRhLmxhc3RNb2RpZmllZD0obmV3IERhdGUpLnRvSVNPU3RyaW5nKCksdC5ib2R5LmF0dHJpYnV0ZVR5cGU9PT1kLk9iamVjdFR5cGUuQVJSQVkpaWYodC5ib2R5Lm9wZXJhdGlvbj09PWQuQ2hhbmdlVHlwZS5BREQpe3ZhciBhPXMub2JqLHU9cy5sYXN0O0FycmF5LnByb3RvdHlwZS5zcGxpY2UuYXBwbHkoYSxbdSwwXS5jb25jYXQobikpfWVsc2UgaWYodC5ib2R5Lm9wZXJhdGlvbj09PWQuQ2hhbmdlVHlwZS5SRU1PVkUpe3ZhciBjPXMub2JqLGw9cy5sYXN0O2Muc3BsaWNlKGwsbil9ZWxzZSBzLm9ialtzLmxhc3RdPW47ZWxzZSB0LmJvZHkuaGFzT3duUHJvcGVydHkoInZhbHVlIik/cy5vYmpbcy5sYXN0XT1uOmRlbGV0ZSBzLm9ialtzLmxhc3RdfWVsc2UgaC5sb2coIlVOU1lOQ0hST05JWkVEIFZFUlNJT046IChkYXRhID0+ICIrci5fdmVyc2lvbisiLCBtc2cgPT4gIit0LmJvZHkudmVyc2lvbisiKSIpfX0se2tleToiX2NoYW5nZUNoaWxkcmVuIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9KDAseS5kaXZpZGVVUkwpKGUudG8pLmlkZW50aXR5LG49cj9yLnN1YnN0cmluZyhyLmxhc3RJbmRleE9mKCIvIikrMSk6dm9pZCAwLG89ZS5ib2R5LnJlc291cmNlLGk9dC5fY2hpbGRyZW5PYmplY3RzW25dW29dO2gubG9nKCJDaGFuZ2UgY2hpbGRyZW46ICIsdC5fb3duZXIsZSxuKSxpP3QuX2NoYW5nZU9iamVjdChpLl9zeW5jT2JqLGUpOmgud2FybigiTm8gY2hpbGRyZW4gZm91bmQgZm9yOiAiLG8pfX0se2tleToibWV0YWRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YX19LHtrZXk6InVybCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VybH19LHtrZXk6InNjaGVtYSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NjaGVtYX19LHtrZXk6InN0YXR1cyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YXR1c319LHtrZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zeW5jT2JqLmRhdGF9fSx7a2V5OiJjaGlsZHJlbnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZHJlbk9iamVjdHN9fV0pLGV9KCk7dC5kZWZhdWx0PWIsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0KXshZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZShlLHQscixuLG8saSl7ZnVuY3Rpb24gcyhlLG4pe2lmKHMuZGVsYXk9biwhcy5wYXVzZSYmdS5jaGFuZ2VzZXQubGVuZ3RoPjApe2lmKCFlKXt2YXIgbz11LmNoYW5nZXNldC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIXJ8fHIuaW5kZXhPZihlLnR5cGUpPj0wfSk7by5sZW5ndGg+MCYmdChvKX11LmNoYW5nZXNldD1bXX19dmFyIGEsdT10aGlzO3JldHVybiBzLnBhdXNlPW8scy5kZWxheT1pLHUuZ2V0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIl9fb2JzZXJ2ZXJfXyI9PT10P3U6InVub2JzZXJ2ZSI9PT10P2Z1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC51bm9ic2VydmUoZSksZX06ImRlbGl2ZXIiPT09dD9zOmVbdF19LHUudGFyZ2V0PWUsdS5jaGFuZ2VzZXQ9W10sdS50YXJnZXQuX19vYnNlcnZlckNhbGxiYWNrc19ffHwoT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIl9fb2JzZXJ2ZXJDYWxsYmFja3NfXyIse2VudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiExLHZhbHVlOltdfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIl9fb2JzZXJ2ZXJzX18iLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMSx2YWx1ZTpbXX0pKSx1LnRhcmdldC5fX29ic2VydmVyQ2FsbGJhY2tzX18ucHVzaCh0KSx1LnRhcmdldC5fX29ic2VydmVyc19fLnB1c2godGhpcyksYT1uZXcgUHJveHkoZSx1KSxzKCExLGkpLGF9T2JqZWN0Lm9ic2VydmV8fCJmdW5jdGlvbiIhPXR5cGVvZiBQcm94eXx8KGUucHJvdG90eXBlLmRlbGl2ZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXQobnVsbCwiZGVsaXZlciIpfSxlLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWVbdF0sbz12b2lkIDA9PT1uPyJhZGQiOiJ1cGRhdGUiO2lmKGVbdF09cixlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmKCF0aGlzLmFjY2VwdGxpc3R8fHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKG8pPj0wKSl7dmFyIGk9e29iamVjdDplLG5hbWU6dCx0eXBlOm99LHM9MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxhPXRoaXMuZGVsaXZlcigpOyJ1cGRhdGUiPT09byYmKGkub2xkVmFsdWU9biksdGhpcy5jaGFuZ2VzZXQucHVzaChpKSxzJiZhKCExLCJudW1iZXIiPT10eXBlb2YgYS5kZWxheT9hLmRlbGF5OjEwKX1yZXR1cm4hMH0sZS5wcm90b3R5cGUuZGVsZXRlUHJvcGVydHk9ZnVuY3Rpb24oZSx0KXt2YXIgcj1lW3RdO2lmKGRlbGV0ZSBlW3RdLGUuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wJiYhdGhpcy5hY2NlcHRsaXN0fHx0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZigiZGVsZXRlIik+PTApe3ZhciBuPXtvYmplY3Q6ZSxuYW1lOnQsdHlwZToiZGVsZXRlIixvbGRWYWx1ZTpyfSxvPTA9PT10aGlzLmNoYW5nZXNldC5sZW5ndGgsaT10aGlzLmRlbGl2ZXIoKTt0aGlzLmNoYW5nZXNldC5wdXNoKG4pLG8mJmkoITEsIm51bWJlciI9PXR5cGVvZiBpLmRlbGF5P2kuZGVsYXk6MTApfXJldHVybiEwfSxlLnByb3RvdHlwZS5kZWZpbmVQcm9wZXJ0eT1mdW5jdGlvbihlLHQscil7aWYoT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxyKSxlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoInJlY29uZmlndXJlIik+PTApe3ZhciBuPXtvYmplY3Q6ZSxuYW1lOnQsdHlwZToicmVjb25maWd1cmUifSxvPTA9PT10aGlzLmNoYW5nZXNldC5sZW5ndGgsaT10aGlzLmRlbGl2ZXIoKTt0aGlzLmNoYW5nZXNldC5wdXNoKG4pLG8mJmkoITEsIm51bWJlciI9PXR5cGVvZiBpLmRlbGF5P2kuZGVsYXk6MTApfXJldHVybiEwfSxlLnByb3RvdHlwZS5zZXRQcm90b3R5cGVPZj1mdW5jdGlvbihlLHQpe3ZhciByPU9iamVjdC5nZXRQcm90b3R5cGVPZihlKTtpZihPYmplY3Quc2V0UHJvdG90eXBlT2YoZSx0KSxlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoInNldFByb3RvdHlwZSIpPj0wKXt2YXIgbj17b2JqZWN0OmUsbmFtZToiX19wcm90b19fIix0eXBlOiJzZXRQcm90b3R5cGUiLG9sZFZhbHVlOnJ9LG89MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxpPXRoaXMuZGVsaXZlcigpO3RoaXMuY2hhbmdlc2V0LnB1c2gobiksbyYmaSghMSwibnVtYmVyIj09dHlwZW9mIGkuZGVsYXk/aS5kZWxheToxMCl9cmV0dXJuITB9LGUucHJvdG90eXBlLnByZXZlbnRFeHRlbnNpb25zPWZ1bmN0aW9uKGUpe2lmKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyhlKSxlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoInByZXZlbnRFeHRlbnNpb25zIik+PTApe3ZhciB0PXtvYmplY3Q6ZSx0eXBlOiJwcmV2ZW50RXh0ZW5zaW9ucyJ9LHI9MD09PXRoaXMuY2hhbmdlc2V0Lmxlbmd0aCxuPXRoaXMuZGVsaXZlcigpO3RoaXMuY2hhbmdlc2V0LnB1c2godCksciYmbighMSwibnVtYmVyIj09dHlwZW9mIG4uZGVsYXk/bi5kZWxheToxMCl9cmV0dXJuITB9LE9iamVjdC5vYnNlcnZlPWZ1bmN0aW9uKHQscixuLG8saSxzKXtyZXR1cm4gbmV3IGUodCxyLG4sbyxpLHMpfSxPYmplY3QudW5vYnNlcnZlPWZ1bmN0aW9uKGUsdCl7aWYoZS5fX29ic2VydmVyQ2FsbGJhY2tzX18pe2lmKCF0KXJldHVybiBlLl9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5zcGxpY2UoMCxlLl9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5sZW5ndGgpLHZvaWQgZS5fX29ic2VydmVyc19fLnNwbGljZSgwLGUuX19vYnNlcnZlcnNfXy5sZW5ndGgpO2UuX19vYnNlcnZlckNhbGxiYWNrc19fLmZvckVhY2goZnVuY3Rpb24ocixuKXt0PT09ciYmKGUuX19vYnNlcnZlckNhbGxiYWNrc19fLnNwbGljZShuLDEpLGRlbGV0ZSBlLl9fb2JzZXJ2ZXJzX19bbl0uY2FsbGJhY2ssZS5fX29ic2VydmVyc19fLnNwbGljZShuLDEpKX0pfX0sQXJyYXkub2JzZXJ2ZT1mdW5jdGlvbihlLHQscixuLG8saSl7aWYoIShlIGluc3RhbmNlb2YgQXJyYXl8fEFycmF5LmlzQXJyYXkoZSkpKXRocm93IG5ldyBUeXBlRXJyb3IoIkZpcnN0IGFyZ3VtZW50IHRvIEFycmF5Lm9ic2VydmVyIGlzIG5vdCBhbiBBcnJheSIpO3I9cnx8WyJhZGQiLCJ1cGRhdGUiLCJkZWxldGUiLCJzcGxpY2UiXTt2YXIgcz1uZXcgUHJveHkoZSx7Z2V0OmZ1bmN0aW9uKHQsbil7cmV0dXJuInVub2JzZXJ2ZSI9PT1uP2Z1bmN0aW9uKGUpe3JldHVybiBlP09iamVjdC51bm9ic2VydmUodCxlKTp0LnVub2JzZXJ2ZSgpfToic3BsaWNlIj09PW4/ZnVuY3Rpb24obixvKXtpZigibnVtYmVyIiE9dHlwZW9mIG58fCJudW1iZXIiIT10eXBlb2Ygbyl0aHJvdyBuZXcgVHlwZUVycm9yKCJGaXJzdCB0d28gYXJndW1lbnRzIHRvIEFycmF5IHNwbGljZSBhcmUgbm90IG51bWJlciwgbnVtYmVyIik7dmFyIGk9dGhpcy5zbGljZShuLG4rbykscz1hcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzLmxlbmd0aC0yOjAsdT17b2JqZWN0OmUsdHlwZToic3BsaWNlIixpbmRleDpuLHJlbW92ZWQ6aSxhZGRlZENvdW50OnN9O2lmKHQuc3BsaWNlLmFwcGx5KHQsYXJndW1lbnRzKSxyLmluZGV4T2YoInNwbGljZSIpPj0wKXtuPTA9PT1hLl9fb2JzZXJ2ZXJfXy5jaGFuZ2VzZXQubGVuZ3RoO3ZhciBjPWEuX19vYnNlcnZlcl9fLmRlbGl2ZXIoKTthLl9fb2JzZXJ2ZXJfXy5jaGFuZ2VzZXQucHVzaCh1KSxuJiZjKCExLCJudW1iZXIiPT10eXBlb2YgYy5kZWxheT9jLmRlbGF5OjEwKX19OiJwdXNoIj09PW4/ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc3BsaWNlKHRoaXMubGVuZ3RoLDAsZSl9OiJwb3AiPT09bj9mdW5jdGlvbigpe3JldHVybiB0aGlzLnNwbGljZSh0aGlzLmxlbmd0aC0xLDEpfToidW5zaGlmdCI9PT1uP2Z1bmN0aW9uKGUpe3JldHVybiB0aGlzLnNwbGljZSgwLDAsZSl9OiJzaGlmdCI9PT1uP2Z1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3BsaWNlKDAsMSl9OnRbbl19fSksYT1PYmplY3Qub2JzZXJ2ZShzLGZ1bmN0aW9uKGUpe3ZhciBuPWUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiJsZW5ndGgiIT09ZS5uYW1lJiYiYWRkIiE9PWUubmFtZSYmKCFyfHxyLmluZGV4T2YoZS50eXBlKT49MCl9KTtuLmxlbmd0aD4wJiZ0KG4pfSxyLG4sbyxpKTtyZXR1cm4gYX0sQXJyYXkudW5vYnNlcnZlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUudW5vYnNlcnZlKHQpfSksT2JqZWN0LmRlZXBPYnNlcnZlPWZ1bmN0aW9uKGUsdCxyKXtmdW5jdGlvbiBuKGUscil7T2JqZWN0LmtleXMoZSkuZm9yRWFjaChmdW5jdGlvbihuKXtpZigoIm9iamVjdCI9PT1vKGVbbl0pfHwiYXJyYXkiPT09byhlW25dKSkmJiFlW25dLmhhc093blByb3BlcnR5KCJfX29ic2VydmVyc19fIikpe3ZhciBpPXIuc2xpY2UoMCk7aS5wdXNoKG4pLGVbbl09T2JqZWN0LmRlZXBPYnNlcnZlKGVbbl0sdCxpKX19KX12YXIgbz1mdW5jdGlvbihlKXtyZXR1cm57fS50b1N0cmluZy5jYWxsKGUpLm1hdGNoKC9ccyhbYS16QS1aXSspLylbMV0udG9Mb3dlckNhc2UoKX07cmV0dXJuIG4oZSxyPXJ8fFtdKSxPYmplY3Qub2JzZXJ2ZShlLGZ1bmN0aW9uKGUpe3ZhciBvPVtdO2UuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD0oci5sZW5ndGg+MD9yLmpvaW4oIi4iKSsiLiI6IiIpK2UubmFtZTsidXBkYXRlIiE9PWUudHlwZSYmImFkZCIhPT1lLnR5cGV8fG4oZS5vYmplY3Qsciksby5wdXNoKHtuYW1lOmUubmFtZSxvYmplY3Q6ZS5vYmplY3QsdHlwZTplLnR5cGUsb2xkVmFsdWU6ZS5vbGRWYWx1ZSxuZXdWYWx1ZTplLm9iamVjdFtlLm5hbWVdLGtleXBhdGg6dH0pLGZ1bmN0aW9uIGUodCxyLG4saSxzKXtpIGluc3RhbmNlb2YgT2JqZWN0P09iamVjdC5rZXlzKGkpLmZvckVhY2goZnVuY3Rpb24oYSl7aWYoIW58fG5bYV0hPT1pW2FdKXt2YXIgdT1uJiZ2b2lkIDAhPT1uW2FdP25bYV06dm9pZCAwLGM9dm9pZCAwPT09dT8iYWRkIjoidXBkYXRlIixsPXMrIi4iK2E7by5wdXNoKHtuYW1lOnQsb2JqZWN0OnIsdHlwZTpjLG9sZFZhbHVlOnUsbmV3VmFsdWU6aVthXSxrZXlwYXRoOmx9KSxlKHQscix1LGlbYV0sbCl9fSk6biBpbnN0YW5jZW9mIE9iamVjdCYmT2JqZWN0LmtleXMobikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgdT1udWxsPT09aT8idXBkYXRlIjoiZGVsZXRlIixjPXMrIi4iK2E7by5wdXNoKHtuYW1lOnQsb2JqZWN0OnIsdHlwZTp1LG9sZFZhbHVlOm5bYV0sbmV3VmFsdWU6aSxrZXlwYXRoOmN9KSxlKHQscixuW2FdLHZvaWQgMCxjKX0pfShlLm5hbWUsZS5vYmplY3QsZS5vbGRWYWx1ZSxlLm9iamVjdFtlLm5hbWVdLHQpfSksdChvKX0pfX0oKX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDE4KSksaT1uKHIoMjUpKSxzPW4ocigzKSksYT1uKHIoNSkpLHU9bihyKDMzKSksYz1uKHIoMzQpKSxsPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLGQ9bihyKDEyOSkpLGY9bigocigxOSkscigxMzApKSkscD1sLmdldExvZ2dlcigiRmlsZUh5cGVydHlSZXNvdXJjZSIpLHk9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIpeygwLHMuZGVmYXVsdCkodGhpcyx0KTt2YXIgbj0oMCx1LmRlZmF1bHQpKHRoaXMsKHQuX19wcm90b19ffHwoMCxpLmRlZmF1bHQpKHQpKS5jYWxsKHRoaXMsZSxyKSk7cmV0dXJuIG4ubWV0YWRhdGEucmVzb3VyY2VUeXBlPSJmaWxlIixufXJldHVybigwLGMuZGVmYXVsdCkodCxlKSwoMCxhLmRlZmF1bHQpKHQsW3trZXk6ImluaXQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aWYoIWUpdGhyb3cgbmV3IEVycm9yKCJbRmlsZUh5cGVydHlSZXNvdXJjZS5jb25zdHJ1Y3Rvcl0gbWlzc2luZyBtYW5kYXRvcnkgKmZpbGUqIGlucHV0ICIpO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7aWYodC5fbWV0YWRhdGEubmFtZT1lLm5hbWUsdC5fbWV0YWRhdGEubGFzdE1vZGlmaWVkPWUubGFzdE1vZGlmaWVkLHQuX21ldGFkYXRhLnNpemU9ZS5zaXplLHQuX21ldGFkYXRhLm1pbWV0eXBlPWUudHlwZSxwLmxvZygiW0ZpbGVIeXBlcnR5UmVzb3VyY2UuaW5pdF0gZmlsZTogIixlKSx0Ll9pc1NlbmRlcilzd2l0Y2goZS50eXBlLnNwbGl0KCIvIilbMF0pe2Nhc2UiaW1hZ2UiOnQuX2dldEltYWdlUHJldmlldyhlKS50aGVuKGZ1bmN0aW9uKG4pe3QuX21ldGFkYXRhLnByZXZpZXc9bix0Ll9jb250ZW50PWUscigpfSk7YnJlYWs7ZGVmYXVsdDp0Ll9jb250ZW50PWUscigpfWVsc2UgdC5fY29udGVudD1lLmNvbnRlbnQsZS5wcmV2aWV3JiYodC5fbWV0YWRhdGEucHJldmlldz1lLnByZXZpZXcpLHIoKX0pfX0se2tleToiX2dldEltYWdlUHJldmlldyIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEZpbGVSZWFkZXI7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtmLmRlZmF1bHQucmVzaXplKGUse3dpZHRoOjEwMCxoZWlnaHQ6MTAwfSxmdW5jdGlvbihlLG4pe24/KHQucmVhZEFzRGF0YVVSTChlKSx0Lm9ubG9hZD1mdW5jdGlvbihlKXtyKGUudGFyZ2V0LnJlc3VsdCl9KToocC53YXJuKCJbRmlsZUh5cGVydHlSZXNvdXJjZS5fZ2V0SW1hZ2VQcmV2aWV3XSB1bmFibGUgdG8gY3JlYXRlIGltYWdlIHByZXZpZXcgZnJvbSBvcmlnaW5hbCBpbWFnZSAiKSxyKHZvaWQgMCkpfSl9KX19LHtrZXk6InRvTWVzc2FnZSIsdmFsdWU6ZnVuY3Rpb24oKXt9fSx7a2V5OiJuYW1lIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGEubmFtZX19LHtrZXk6InByZXZpZXciLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YS5wcmV2aWV3fX1dKSx0fShkLmRlZmF1bHQpO3QuZGVmYXVsdD15LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cigxMjYpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7cigxMjcpO3ZhciBuPXIoMCkuT2JqZWN0O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiBuLmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTIpLG89cig0NikuZjtyKDQ0KSgiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlLHQpe3JldHVybiBvKG4oZSksdCl9fSl9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocigxOCkpLGk9bihyKDMpKSxzPW4ocig1KSksYT1uKHIoMTI0KSksdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXsoMCxpLmRlZmF1bHQpKHRoaXMsZSl9cmV0dXJuKDAscy5kZWZhdWx0KShlLFt7a2V5OiJjcmVhdGVIeXBlcnR5UmVzb3VyY2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj12b2lkIDA7c3dpdGNoKHQpe2Nhc2UiZmlsZSI6bj1uZXcgYS5kZWZhdWx0KGUscik7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoIltIeXBlcnR5UmVzb3VyY2VGYWN0b3J5LmNyZWF0ZUh5cGVydHlSZXNvdXJjZV0gbm90IHN1cHBvcnRlZCB0eXBlOiAiLHQpfXJldHVybiBufX0se2tleToiY3JlYXRlSHlwZXJ0eVJlc291cmNlV2l0aENvbnRlbnQiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBpPXZvaWQgMDtyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihvKXtzd2l0Y2godCl7Y2FzZSJmaWxlIjppPW5ldyBhLmRlZmF1bHQoZSxuKTticmVhaztkZWZhdWx0OnJlamVjdCgpfWkuaW5pdChyKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGkuc2F2ZSgpfSkudGhlbihmdW5jdGlvbigpe28oaSl9KX0pfX1dKSxlfSgpO3QuZGVmYXVsdD11LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocigxOCkpLGk9bihyKDI1KSkscz1uKHIoMykpLGE9bihyKDUpKSx1PW4ocigzMykpLGM9bihyKDEwMCkpLGw9bihyKDM0KSksZD1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSxmPXIoMTkpLHA9bihyKDExOCkpLHk9ZC5nZXRMb2dnZXIoIkh5cGVydHlSZXNvdXJjZSIpLHY9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIpeygwLHMuZGVmYXVsdCkodGhpcyx0KTt2YXIgbj0oMCx1LmRlZmF1bHQpKHRoaXMsKHQuX19wcm90b19ffHwoMCxpLmRlZmF1bHQpKHQpKS5jYWxsKHRoaXMscikpLG89bjtyZXR1cm4gby5hcnJheWJ1ZmZlclNpemVMaW1pdD01MjQyODgwLG8uX2lzU2VuZGVyPWUsby5fbG9jYWxTdG9yYWdlVVJMPW8uX3BhcmVudE9iamVjdC5fc3luY2hlci5fcnVudGltZVVybCsiL3N0b3JhZ2UiLG59cmV0dXJuKDAsbC5kZWZhdWx0KSh0LGUpLCgwLGEuZGVmYXVsdCkodCxbe2tleToic2F2ZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHQscil7dmFyIG49e2Zyb206ZS5fb3duZXIsdG86ZS5fbG9jYWxTdG9yYWdlVVJMLHR5cGU6ImNyZWF0ZSIsYm9keTp7dmFsdWU6KDAsZi5kZWVwQ2xvbmUpKGUuX21ldGFkYXRhKX19O24uYm9keS52YWx1ZS5jb250ZW50PWUuX2NvbnRlbnQsZS5fYnVzLnBvc3RNZXNzYWdlKG4sZnVuY3Rpb24obil7eS5pbmZvKCJbSHlwZXJ0eVJlc291cmNlLnNhdmVdIHJlcGx5OiAiLG4pLGUuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKGUuX293bmVyLG4uaWQpLDIwMD09PW4uYm9keS5jb2RlPyhuLmJvZHkudmFsdWUmJihlLl9tZXRhZGF0YS5jb250ZW50VVJMfHwoZS5fbWV0YWRhdGEuY29udGVudFVSTD1bXSksZS5fbWV0YWRhdGEuY29udGVudFVSTC5wdXNoKG4uYm9keS52YWx1ZSkpLHQoKSk6cihuLmJvZHkuY29kZSsiICIrbi5ib2R5LmRlc2MpfSwhMSl9KX19LHtrZXk6InJlYWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIHkuaW5mbygiW0h5cGVydHlSZXNvdXJjZS5yZWFkXSAiLHRoaXMpLG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtpZih0LmNvbnRlbnQpcih0KTtlbHNle3ZhciBvPXQuX2dldEJlc3RDb250ZW50VVJMKHQuX21ldGFkYXRhLmNvbnRlbnRVUkwpO3kubG9nKCJTdG9yYWdlOiIsbyk7dmFyIGk9e2Zyb206dC5fb3duZXIsdG86by51cmwsdHlwZToicmVhZCIsYm9keTp7cmVzb3VyY2U6by51cmwrIi8iK28ucmVzb3VyY2UscDJwOiEwfX07dC5tZXRhZGF0YS5wMnBSZXF1ZXN0ZXImJnQubWV0YWRhdGEucDJwSGFuZGxlciYmKGkuYm9keS5wMnBSZXF1ZXN0ZXI9dC5tZXRhZGF0YS5wMnBSZXF1ZXN0ZXIsaS5ib2R5LnAycEhhbmRsZXI9dC5tZXRhZGF0YS5wMnBIYW5kbGVyKSx0Ll9nZXRCZXN0UmVzb3VyY2UoaSxlKS50aGVuKGZ1bmN0aW9uKGUpe3kuaW5mbygiW0h5cGVydHlSZXNvdXJjZV0gLSBnZXQgbG9jYWxseSB0aGUgcmVzb3VyY2U6IixlKSxyKHQpfSkuY2F0Y2goZnVuY3Rpb24oaSl7eS53YXJuKCJbSHlwZXJ0eVJlc291cmNlXSAtIGdldCBsb2NhbGx5IHRoZSByZXNvdXJjZSBmYWlsIixpKTt2YXIgcz17ZnJvbTp0Ll9vd25lcix0bzpvLnJlbW90ZVVSTCx0eXBlOiJyZWFkIixib2R5OntyZXNvdXJjZTpvLnJlbW90ZVVSTCsiLyIrby5yZXNvdXJjZSxwMnA6ITB9fTt0Lm1ldGFkYXRhLnAycFJlcXVlc3RlciYmdC5tZXRhZGF0YS5wMnBIYW5kbGVyJiYocy5ib2R5LnAycFJlcXVlc3Rlcj10Lm1ldGFkYXRhLnAycFJlcXVlc3RlcixzLmJvZHkucDJwSGFuZGxlcj10Lm1ldGFkYXRhLnAycEhhbmRsZXIpLHQuX2dldEJlc3RSZXNvdXJjZShzLGUpLnRoZW4oZnVuY3Rpb24oZSl7eS53YXJuKCJbSHlwZXJ0eVJlc291cmNlXSAtIGdldCByZW1vdGVseSB0aGUgcmVzb3VyY2UiLGUpLHIodCl9KS5jYXRjaChmdW5jdGlvbihlKXt5Lndhcm4oIltIeXBlcnR5UmVzb3VyY2VdIC0gZ2V0IHJlbW90ZWx5IHRoZSByZXNvdXJjZSBmYWlsIixlKSxuKGUuYm9keS5jb2RlKyIgIitlLmJvZHkuZGVzYyl9KX0pfX0pfX0se2tleToiX2dldEJlc3RSZXNvdXJjZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7dmFyIGk9c2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiByLl9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyLl9vd25lcixzKSxlLmJvZHkuY29kZT00MDgsZS5ib2R5LmRlc2M9IlJlc3BvbnNlIHRpbWVvdXQiLG8oZSl9LDNlMykscz1yLl9idXMucG9zdE1lc3NhZ2UoZSxmdW5jdGlvbihlKXt5LmxvZygiW0h5cGVydHlSZXNvdXJjZS5yZWFkXSByZXBseTogIixlKTt2YXIgcz1lLmlkO3N3aXRjaChjbGVhclRpbWVvdXQoaSksZS5ib2R5LmNvZGUpe2Nhc2UgMjAwOnIuX2NvbnRlbnQ9ZS5ib2R5LnZhbHVlLmNvbnRlbnQsZS5ib2R5LnZhbHVlLnNpemU8ci5hcnJheWJ1ZmZlclNpemVMaW1pdCYmci5zYXZlKCksci5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoci5fb3duZXIscyksbihlKTticmVhaztjYXNlIDE4Mzp0KGUuYm9keS52YWx1ZSk7YnJlYWs7ZGVmYXVsdDpyLl9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyLl9vd25lcixzKSxvKGUpfX0sITEpfSl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpczt5LmluZm8oIltIeXBlcnR5UmVzb3VyY2UuZGVsZXRlXSIsZS5tZXRhZGF0YSk7dmFyIHQ9e2Zyb206ZS5fb3duZXIsdG86ZS5fbG9jYWxTdG9yYWdlVVJMLHR5cGU6ImRlbGV0ZSIsYm9keTp7cmVzb3VyY2VzOmUubWV0YWRhdGEuY29udGVudFVSTH19O3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHIpe2UuX2J1cy5wb3N0TWVzc2FnZSh0LGZ1bmN0aW9uKGUpe3IoZS5ib2R5LmNvZGU8MzAwKX0pfSl9fSx7a2V5OiJfZ2V0QmVzdENvbnRlbnRVUkwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWVbMF0scj10LnN1YnN0cih0Lmxhc3RJbmRleE9mKCIvIikrMSk7cmV0dXJue3VybDp0aGlzLl9sb2NhbFN0b3JhZ2VVUkwscmVzb3VyY2U6cixyZW1vdGVVUkw6dC5zdWJzdHIoMCx0Lmxhc3RJbmRleE9mKCIvIikpfX19LHtrZXk6InJlc291cmNlVHlwZSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWV0YWRhdGEucmVzb3VyY2VUeXBlfX0se2tleToibWltZXR5cGUiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXRhZGF0YS50eXBlfX0se2tleToiY29udGVudCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbnRlbnR9fSx7a2V5OiJjb250ZW50VVJMIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGEuY29udGVudFVSTH19LHtrZXk6InNoYXJlYWJsZSIsZ2V0OmZ1bmN0aW9uKCl7dmFyIGU9KDAsYy5kZWZhdWx0KSh0LnByb3RvdHlwZS5fX3Byb3RvX198fCgwLGkuZGVmYXVsdCkodC5wcm90b3R5cGUpLCJtZXRhZGF0YSIsdGhpcyk7cmV0dXJuIGUucmVzb3VyY2VUeXBlPXRoaXMucmVzb3VyY2VUeXBlLGV9fV0pLHR9KHAuZGVmYXVsdCk7dC5kZWZhdWx0PXYsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDMpKSxpPW4ocig1KSkscz0idW5kZWZpbmVkIiE9dHlwZW9mIEJsb2ImJmZ1bmN0aW9uKCl7dHJ5e3JldHVybiBCb29sZWFuKG5ldyBCbG9iKX1jYXRjaChlKXtyZXR1cm4hMX19KCksYT1zJiYidW5kZWZpbmVkIiE9dHlwZW9mIFVpbnQ4QXJyYXkmJmZ1bmN0aW9uKCl7dHJ5e3JldHVybiAxMDA9PT1uZXcgQmxvYihbbmV3IFVpbnQ4QXJyYXkoMTAwKV0pLnNpemV9Y2F0Y2goZSl7cmV0dXJuITF9fSgpLHU9InVuZGVmaW5lZCIhPXR5cGVvZiBIVE1MQ2FudmFzRWxlbWVudCYmSFRNTENhbnZhc0VsZW1lbnQucHJvdG90eXBlLnRvQmxvYixjPXV8fCJ1bmRlZmluZWQiIT10eXBlb2YgVWludDhBcnJheSYmInVuZGVmaW5lZCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmInVuZGVmaW5lZCIhPXR5cGVvZiBhdG9iLGw9InVuZGVmaW5lZCIhPXR5cGVvZiBGaWxlUmVhZGVyfHwidW5kZWZpbmVkIiE9dHlwZW9mIFVSTCxkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeygwLG8uZGVmYXVsdCkodGhpcyxlKX1yZXR1cm4oMCxpLmRlZmF1bHQpKGUsbnVsbCxbe2tleToicmVzaXplIix2YWx1ZTpmdW5jdGlvbih0LHIsbil7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHImJihuPXIscj17d2lkdGg6NjQwLGhlaWdodDo0ODB9KSxyLndpZHRoLHIuaGVpZ2h0LCFlLmlzU3VwcG9ydGVkKCl8fCF0LnR5cGUubWF0Y2goL2ltYWdlLiovKSlyZXR1cm4gbih0LCExKSwhMTtpZih0LnR5cGUubWF0Y2goL2ltYWdlXC9naWYvKSlyZXR1cm4gbih0LCExKSwhMTt2YXIgbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTtyZXR1cm4gby5vbmxvYWQ9ZnVuY3Rpb24oaSl7dmFyIHM9by53aWR0aCxhPW8uaGVpZ2h0LGM9ITE7aWYocz49YSYmcz5yLndpZHRoPyhhKj1yLndpZHRoL3Mscz1yLndpZHRoLGM9ITApOmE+ci5oZWlnaHQmJihzKj1yLmhlaWdodC9hLGE9ci5oZWlnaHQsYz0hMCksYyl7dmFyIGw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7aWYobC53aWR0aD1zLGwuaGVpZ2h0PWEsbC5nZXRDb250ZXh0KCIyZCIpLmRyYXdJbWFnZShvLDAsMCxzLGEpLHUpbC50b0Jsb2IoZnVuY3Rpb24oZSl7bihlLCEwKX0sdC50eXBlKTtlbHNle3ZhciBkPWUuX3RvQmxvYihsLHQudHlwZSk7bihkLCEwKX19ZWxzZSBuKHQsITEpfSxlLl9sb2FkSW1hZ2Uobyx0KSwhMH19LHtrZXk6Il90b0Jsb2IiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS50b0RhdGFVUkwodCkuc3BsaXQoIiwiKSxuPXZvaWQgMDtuPXJbMF0uaW5kZXhPZigiYmFzZTY0Iik+PTA/YXRvYihyWzFdKTpkZWNvZGVVUklDb21wb25lbnQoclsxXSk7Zm9yKHZhciBvPW5ldyBBcnJheUJ1ZmZlcihuLmxlbmd0aCksaT1uZXcgVWludDhBcnJheShvKSx1PTA7dTxuLmxlbmd0aDt1Kz0xKWlbdV09bi5jaGFyQ29kZUF0KHUpO3ZhciBjPXJbMF0uc3BsaXQoIjoiKVsxXS5zcGxpdCgiOyIpWzBdLGw9bnVsbDtpZihzKWw9bmV3IEJsb2IoW2E/aTpvXSx7dHlwZTpjfSk7ZWxzZXt2YXIgZD1uZXcgQmxvYkJ1aWxkZXI7ZC5hcHBlbmQobyksbD1kLmdldEJsb2IoYyl9cmV0dXJuIGx9fSx7a2V5OiJfbG9hZEltYWdlIix2YWx1ZTpmdW5jdGlvbihlLHQscil7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiBVUkwpe3ZhciBuPW5ldyBGaWxlUmVhZGVyO24ub25sb2FkPWZ1bmN0aW9uKHQpe2Uuc3JjPXQudGFyZ2V0LnJlc3VsdCxyJiZyKCl9LG4ucmVhZEFzRGF0YVVSTCh0KX1lbHNlIGUuc3JjPVVSTC5jcmVhdGVPYmplY3RVUkwodCksciYmcigpfX0se2tleToiaXNTdXBwb3J0ZWQiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiBIVE1MQ2FudmFzRWxlbWVudCYmYyYmbH19XSksZX0oKTt0LmRlZmF1bHQ9ZCxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoMTgpKSxpPW4ocig3OCkpLHM9bihyKDMpKSxhPW4ocig1KSksdT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSxjPXIoMTkpLGw9bihyKDEzMikpLGQ9bihyKDEzMykpLGY9bihyKDEzNSkpLHA9dS5nZXRMb2dnZXIoIlN5bmNoZXIiKSx5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbil7KDAscy5kZWZhdWx0KSh0aGlzLGUpO3ZhciBvPXRoaXM7by5fb3duZXI9dCxvLl9idXM9cixvLl9zdWJVUkw9bi5ydW50aW1lVVJMKyIvc20iLG8uX3J1bnRpbWVVcmw9bi5ydW50aW1lVVJMLG8uX3AycEhhbmRsZXI9bi5wMnBIYW5kbGVyLG8uX3AycFJlcXVlc3Rlcj1uLnAycFJlcXVlc3RlcixvLl9yZXBvcnRlcnM9e30sby5fb2JzZXJ2ZXJzPXt9LG8uX3Byb3Zpc2lvbmFscz17fSxyLmFkZExpc3RlbmVyKHQsZnVuY3Rpb24oZSl7aWYoZS5mcm9tIT09dClzd2l0Y2gocC5pbmZvKCJbU3luY2hlcl0gU3luY2hlci1SQ1Y6ICIsZSxvKSxlLnR5cGUpe2Nhc2UiZm9yd2FyZCI6by5fb25Gb3J3YXJkKGUpO2JyZWFrO2Nhc2UiY3JlYXRlIjpvLl9vblJlbW90ZUNyZWF0ZShlKTticmVhaztjYXNlImRlbGV0ZSI6by5fb25SZW1vdGVEZWxldGUoZSk7YnJlYWs7Y2FzZSJleGVjdXRlIjpvLl9vbkV4ZWN1dGUoZSl9fSl9cmV0dXJuKDAsYS5kZWZhdWx0KShlLFt7a2V5OiJjcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1hcmd1bWVudHMubGVuZ3RoPjMmJnZvaWQgMCE9PWFyZ3VtZW50c1szXSYmYXJndW1lbnRzWzNdLG89YXJndW1lbnRzLmxlbmd0aD40JiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0mJmFyZ3VtZW50c1s0XSxzPWFyZ3VtZW50cy5sZW5ndGg+NSYmdm9pZCAwIT09YXJndW1lbnRzWzVdP2FyZ3VtZW50c1s1XToibm8gbmFtZSIsYT1hcmd1bWVudHNbNl0sdT1hcmd1bWVudHNbN107aWYoIWUpdGhyb3cgRXJyb3IoIltTeW5jaGVyIC0gQ3JlYXRlXSAtIFlvdSBuZWVkIHNwZWNpZnkgdGhlIGRhdGEgb2JqZWN0IHNjaGVtYSIpO2lmKCF0KXRocm93IEVycm9yKCJbU3luY2hlciAtIENyZWF0ZV0gLVRoZSBvYnNlcnZlcnMgc2hvdWxkIGJlIGRlZmluZWQiKTt2YXIgbD10aGlzO3U9dXx8e307dmFyIGQ9KDAsaS5kZWZhdWx0KSh7fSx1KTtyZXR1cm4gZC5wMnA9byxkLnN0b3JlPW4sZC5zY2hlbWE9ZSxkLmF1dGhvcmlzZT10LGQucDJwSGFuZGxlcj1sLl9wMnBIYW5kbGVyLGQucDJwUmVxdWVzdGVyPWwuX3AycFJlcXVlc3RlcixkLmRhdGE9cj8oMCxjLmRlZXBDbG9uZSkocik6e30sZC5uYW1lPTA9PT1zLmxlbmd0aD8ibm8gbmFtZSI6cyxkLnJlcG9ydGVyPXUuaGFzT3duUHJvcGVydHkoInJlcG9ydGVyIikmJiJib29sZWFuIiE9dHlwZW9mIHUucmVwb3J0ZXI/dS5yZXBvcnRlcjpsLl9vd25lcixkLnJlc3VtZT0hMSx1PyhkLm11dHVhbD0hdS5oYXNPd25Qcm9wZXJ0eSgibXV0dWFsIil8fHUubXV0dWFsLGQubmFtZT11Lmhhc093blByb3BlcnR5KCJuYW1lIik/dS5uYW1lOmQubmFtZSk6ZC5tdXR1YWw9ITAsdS5oYXNPd25Qcm9wZXJ0eSgicmV1c2VVUkwiKSYmKGQucmVzb3VyY2U9dS5yZXVzZVVSTCksYSYmKGQuaWRlbnRpdHk9YSkscC5sb2coIltzeW5jaGVyIC0gY3JlYXRlXSAtIGNyZWF0ZSBSZXBvcnRlciAtIGNyZWF0ZUlucHV0OiAiLGQpLGwuX2NyZWF0ZShkKX19LHtrZXk6InJlc3VtZVJlcG9ydGVycyIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHAubG9nKCJbc3luY2hlciAtIGNyZWF0ZV0gLSByZXN1bWUgUmVwb3J0ZXIgLSBjcml0ZXJpYTogIixlKSwoMCxpLmRlZmF1bHQpKGUse3Jlc3VtZTohMH0pLHRoaXMuX3Jlc3VtZUNyZWF0ZShlKX19LHtrZXk6InN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXSYmYXJndW1lbnRzWzJdLG49YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10mJmFyZ3VtZW50c1szXSxvPSEoYXJndW1lbnRzLmxlbmd0aD40JiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0pfHxhcmd1bWVudHNbNF0scz0hKGFyZ3VtZW50cy5sZW5ndGg+NSYmdm9pZCAwIT09YXJndW1lbnRzWzVdKXx8YXJndW1lbnRzWzVdLGE9YXJndW1lbnRzWzZdLHU9e307cmV0dXJuIHUucDJwPW4sdS5zdG9yZT1yLHUuc2NoZW1hPWUsdS5kb21haW5fc3Vic2NyaXB0aW9uPXMsdS5yZXNvdXJjZT10LGEmJih1LmlkZW50aXR5PWEpLHUubXV0dWFsPW8scC5sb2coIltzeW5jaGVyIC0gc3Vic2NyaWJlXSAtIHN1YnNjcmliZSBjcml0ZXJpYTogIix1KSwoMCxpLmRlZmF1bHQpKHUse3Jlc3VtZTohMX0pLHRoaXMuX3N1YnNjcmliZSh1KX19LHtrZXk6InJlc3VtZU9ic2VydmVycyIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9ZXx8e307cmV0dXJuKDAsaS5kZWZhdWx0KSh0LHtyZXN1bWU6ITB9KSx0aGlzLl9yZXN1bWVTdWJzY3JpYmUodCl9fSx7a2V5OiJyZWFkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e3R5cGU6InJlYWQiLGZyb206dC5fb3duZXIsdG86ZX07cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24oZSxuKXt0Ll9idXMucG9zdE1lc3NhZ2UocixmdW5jdGlvbihvKXtwLmxvZygiW1N5bmNoZXIucmVhZF0gcmVwbHk6ICIsbyk7dmFyIHM9e30sYT17fSx1PTA7aWYoby5ib2R5LmNvZGU8MzAwKWlmKG8uYm9keS52YWx1ZS5oYXNPd25Qcm9wZXJ0eSgicmVzcG9uc2VzIikpaWYoMD09PXUpYT1vLmJvZHkudmFsdWUsKyt1O2Vsc2V7ZGVsZXRlIG8uYm9keS52YWx1ZS5yZXNwb25zZXM7dmFyIGM9dm9pZCAwO2ZvcihjIGluIG8uYm9keS52YWx1ZSlzLmhhc093blByb3BlcnR5KGMpfHwoc1tjXT17fSksKDAsaS5kZWZhdWx0KShzW2NdLG8uYm9keS52YWx1ZVtjXSk7Kyt1PT09YS5yZXNwb25zZXMmJihhLmNoaWxkcmVuT2JqZWN0cz1zLGRlbGV0ZSBhLnJlc3BvbnNlcyx0Ll9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyLmZyb20sby5pZCksZShhKSl9ZWxzZSB0Ll9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihyLmZyb20sby5pZCksZShvLmJvZHkudmFsdWUpO2Vsc2UgbihvLmJvZHkuZGVzYyl9LCExKX0pfX0se2tleToib25Ob3RpZmljYXRpb24iLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uTm90aWZpY2F0aW9uSGFuZGxlcj1lfX0se2tleToib25DbG9zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25DbG9zZT1lfX0se2tleToiX2NyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihyLG4pe3ZhciBvPSgwLGkuZGVmYXVsdCkoe30sZSkscz1lLnJlc3VtZTtvLmNyZWF0ZWQ9KG5ldyBEYXRlKS50b0lTT1N0cmluZygpLG8ucnVudGltZT10Ll9ydW50aW1lVXJsO3ZhciBhPSgwLGMuZGVlcENsb25lKShvKTtkZWxldGUgYS5wMnAsZGVsZXRlIGEuc3RvcmUsZGVsZXRlIGEub2JzZXJ2ZXJzLGRlbGV0ZSBhLmlkZW50aXR5O3ZhciB1PXt0eXBlOiJjcmVhdGUiLGZyb206dC5fb3duZXIsdG86dC5fc3ViVVJMLGJvZHk6e3Jlc3VtZTpzLHZhbHVlOmF9fTt1LmJvZHkuc2NoZW1hPW8uc2NoZW1hLG8ucDJwJiYodS5ib2R5LnAycD1vLnAycCksby5zdG9yZSYmKHUuYm9keS5zdG9yZT1vLnN0b3JlKSxvLmlkZW50aXR5JiYodS5ib2R5LmlkZW50aXR5PW8uaWRlbnRpdHkpLHAubG9nKCJbc3luY2hlci5fY3JlYXRlXTogIixvLHUpLHQuX2J1cy5wb3N0TWVzc2FnZSh1LGZ1bmN0aW9uKGkpe2lmKHAubG9nKCJbc3luY2hlciAtIGNyZWF0ZV0gLSBjcmVhdGUtcmVzcG9uc2U6ICIsaSksMjAwPT09aS5ib2R5LmNvZGUpe28udXJsPWkuYm9keS5yZXNvdXJjZSxvLnN0YXR1cz0ibGl2ZSIsby5zeW5jaGVyPXQsby5jaGlsZHJlbnM9aS5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzO3ZhciBzPXQuX3JlcG9ydGVyc1tvLnVybF07c3x8KHM9bmV3IGwuZGVmYXVsdChvKSx0Ll9yZXBvcnRlcnNbby51cmxdPXMpLHMuaW52aXRlT2JzZXJ2ZXJzKGUuYXV0aG9yaXNlLGUucDJwKSxyKHMpfWVsc2UgbihpLmJvZHkuZGVzYyl9KX0pfX0se2tleToiX3Jlc3VtZUNyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXRoaXM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obixvKXt2YXIgaT1lLnJlc3VtZSxzPXt0eXBlOiJjcmVhdGUiLGZyb206ci5fb3duZXIsdG86ci5fc3ViVVJMLGJvZHk6e3Jlc3VtZTppfX07cC5sb2coIltzeW5jaGVyIC0gY3JlYXRlXTogIixlLHMpLGUmJihzLmJvZHkudmFsdWU9ZSxlLmhhc093blByb3BlcnR5KCJyZXBvcnRlciIpP3MuYm9keS52YWx1ZS5yZXBvcnRlcj1lLnJlcG9ydGVyOnMuYm9keS52YWx1ZS5yZXBvcnRlcj1yLl9vd25lciksZS5wMnAmJihzLmJvZHkucDJwPWUucDJwKSxlLnN0b3JlJiYocy5ib2R5LnN0b3JlPWUuc3RvcmUpLGUub2JzZXJ2ZXJzJiYocy5ib2R5LmF1dGhvcmlzZT1lLm9ic2VydmVycyksZS5pZGVudGl0eSYmKHMuYm9keS5pZGVudGl0eT1lLmlkZW50aXR5KSxwLmxvZygiW3N5bmNoZXIuX3Jlc3VtZUNyZWF0ZV0gLSByZXN1bWUgbWVzc2FnZTogIixzKSxyLl9idXMucG9zdE1lc3NhZ2UocyxmdW5jdGlvbihlKXtpZihwLmxvZygiW3N5bmNoZXIuX3Jlc3VtZUNyZWF0ZV0gLSBjcmVhdGUtcmVzdW1lZC1yZXNwb25zZTogIixlKSwyMDA9PT1lLmJvZHkuY29kZSl7dmFyIGk9ZS5ib2R5LnZhbHVlO2Zvcih2YXIgcyBpbiBpKXt2YXIgYT1pW3NdO2EuZGF0YT0oMCxjLmRlZXBDbG9uZSkoYS5kYXRhKXx8e30sYS5jaGlsZHJlbk9iamVjdHMmJihhLmNoaWxkcmVuT2JqZWN0cz0oMCxjLmRlZXBDbG9uZSkoYS5jaGlsZHJlbk9iamVjdHMpKSxhLm11dHVhbD0hMSxhLnJlc3VtZT0hMCxhLnN0YXR1cz0ibGl2ZSIsYS5zeW5jaGVyPXIscC5sb2coIltzeW5jaGVyLl9yZXN1bWVDcmVhdGVdIC0gY3JlYXRlLXJlc3VtZWQtZGF0YU9iamVjdFJlcG9ydGVyIixhKTt2YXIgdT1uZXcgbC5kZWZhdWx0KGEpO2EuY2hpbGRyZW5PYmplY3RzJiZ1LnJlc3VtZUNoaWxkcmVucyhhLmNoaWxkcmVuT2JqZWN0cyksci5fcmVwb3J0ZXJzW2EudXJsXT11fW4oci5fcmVwb3J0ZXJzKSx0Ll9vblJlcG9ydGVyc1Jlc3VtZSYmdC5fb25SZXBvcnRlcnNSZXN1bWUodC5fcmVwb3J0ZXJzKX1lbHNlIDQwND09PWUuYm9keS5jb2RlP24oe30pOm8oZS5ib2R5LmRlc2MpfSl9KX19LHtrZXk6Il9zdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24ocixuKXt2YXIgbz17dHlwZToic3Vic2NyaWJlIixmcm9tOnQuX293bmVyLHRvOnQuX3N1YlVSTCxib2R5Ont9fTtlJiYoZS5oYXNPd25Qcm9wZXJ0eSgicDJwIikmJihvLmJvZHkucDJwPWUucDJwKSxlLmhhc093blByb3BlcnR5KCJzdG9yZSIpJiYoby5ib2R5LnN0b3JlPWUuc3RvcmUpLGUuaGFzT3duUHJvcGVydHkoInNjaGVtYSIpJiYoby5ib2R5LnNjaGVtYT1lLnNjaGVtYSksZS5oYXNPd25Qcm9wZXJ0eSgiaWRlbnRpdHkiKSYmKG8uYm9keS5pZGVudGl0eT1lLmlkZW50aXR5KSxlLmhhc093blByb3BlcnR5KCJyZXNvdXJjZSIpJiYoby5ib2R5LnJlc291cmNlPWUucmVzb3VyY2UpLGUuaGFzT3duUHJvcGVydHkoImRvbWFpbl9zdWJzY3JpcHRpb24iKSYmKG8uYm9keS5kb21haW5fc3Vic2NyaXB0aW9uPWUuZG9tYWluX3N1YnNjcmlwdGlvbikpLG8uYm9keS5yZXN1bWU9ZS5yZXN1bWUsZS5oYXNPd25Qcm9wZXJ0eSgibXV0dWFsIikmJihvLmJvZHkubXV0dWFsPWUubXV0dWFsKSxwLmxvZygiW3N5bmNoZXJfc3Vic2NyaWJlXSAtIHN1YnNjcmliZSBtZXNzYWdlOiAiLGUsbyksdC5fYnVzLnBvc3RNZXNzYWdlKG8sZnVuY3Rpb24obyl7cC5sb2coIltzeW5jaGVyXSAtIHN1YnNjcmliZS1yZXNwb25zZTogIixvKTt2YXIgaT1vLmJvZHkucmVzb3VyY2Uscz10Ll9wcm92aXNpb25hbHNbaV07aWYoZGVsZXRlIHQuX3Byb3Zpc2lvbmFsc1tpXSxzJiZzLl9yZWxlYXNlTGlzdGVuZXJzKCksby5ib2R5LmNvZGU8MjAwKXAubG9nKCJbc3luY2hlcl0gLSBuZXcgRGF0YVByb3Zpc2lvbmFsOiAiLG8uYm9keS5jaGlsZHJlblJlc291cmNlcyxpKSxzPW5ldyBmLmRlZmF1bHQodC5fb3duZXIsaSx0Ll9idXMsby5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKSx0Ll9wcm92aXNpb25hbHNbaV09cztlbHNlIGlmKDIwMD09PW8uYm9keS5jb2RlKXtwLmxvZygiW3N5bmNoZXJdIC0gbmV3IERhdGEgT2JqZWN0IE9ic2VydmVyOiAiLG8sdC5fcHJvdmlzaW9uYWxzKTt2YXIgYT1vLmJvZHkudmFsdWU7YS5zeW5jaGVyPXQsYS5wMnA9ZS5wMnAsYS5zdG9yZT1lLnN0b3JlLGEuaWRlbnRpdHk9ZS5pZGVudGl0eSxhLnJlc3VtZT0hMSxhLm11dHVhbD1lLm11dHVhbDt2YXIgdT10Ll9vYnNlcnZlcnNbaV07dT91LnN5bmMoKToodT1uZXcgZC5kZWZhdWx0KGEpLHQuX29ic2VydmVyc1tpXT11KSxwLmxvZygiW3N5bmNoZXJdIC0gbmV3IERhdGEgT2JqZWN0IE9ic2VydmVyIGFscmVhZHkgZXhpc3Q6ICIsdSkscih1KSxzJiZzLmFwcGx5KHUpfWVsc2UgbihvLmJvZHkuZGVzYyl9KX0pfX0se2tleToiX3Jlc3VtZVN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXRoaXM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obixvKXt2YXIgaT17dHlwZToic3Vic2NyaWJlIixmcm9tOnIuX293bmVyLHRvOnIuX3N1YlVSTCxib2R5Ont9fTtlJiYoZS5oYXNPd25Qcm9wZXJ0eSgicDJwIikmJihpLmJvZHkucDJwPWUucDJwKSxlLmhhc093blByb3BlcnR5KCJzdG9yZSIpJiYoaS5ib2R5LnN0b3JlPWUuc3RvcmUpLGUuaGFzT3duUHJvcGVydHkoInNjaGVtYSIpJiYoaS5ib2R5LnNjaGVtYT1lLnNjaGVtYSksZS5oYXNPd25Qcm9wZXJ0eSgiaWRlbnRpdHkiKSYmKGkuYm9keS5pZGVudGl0eT1lLmlkZW50aXR5KSxlLmhhc093blByb3BlcnR5KCJyZXNvdXJjZSIpJiYoaS5ib2R5LnJlc291cmNlPWUudXJsKSksaS5ib2R5LnJlc3VtZT1lLnJlc3VtZTt2YXIgcz1lLm11dHVhbDtlLmhhc093blByb3BlcnR5KCJtdXR1YWwiKSYmKGkuYm9keS5tdXR1YWw9cykscC5sb2coIltzeW5jaGVyXSAtIHN1YnNjcmliZSBtZXNzYWdlOiAiLGUsaSksci5fYnVzLnBvc3RNZXNzYWdlKGksZnVuY3Rpb24oZSl7cC5sb2coIltzeW5jaGVyXSAtIHN1YnNjcmliZS1yZXN1bWVkLXJlc3BvbnNlOiAiLGUpO3ZhciBpPWUuYm9keS5yZXNvdXJjZSxzPXIuX3Byb3Zpc2lvbmFsc1tpXTtpZihkZWxldGUgci5fcHJvdmlzaW9uYWxzW2ldLHMmJnMuX3JlbGVhc2VMaXN0ZW5lcnMoKSxlLmJvZHkuY29kZTwyMDApcC5sb2coIltzeW5jaGVyXSAtIHJlc3VtZSBuZXcgRGF0YVByb3Zpc2lvbmFsOiAiLGUsaSkscz1uZXcgZi5kZWZhdWx0KHIuX293bmVyLGksci5fYnVzLGUuYm9keS5jaGlsZHJlblJlc291cmNlcyksci5fcHJvdmlzaW9uYWxzW2ldPXM7ZWxzZSBpZigyMDA9PT1lLmJvZHkuY29kZSl7dmFyIGE9ZS5ib2R5LnZhbHVlO2Zvcih2YXIgdSBpbiBhKXt2YXIgbD1hW3VdO3AubG9nKCJbc3luY2hlcl0gLSBSZXN1bWUgT2JqZWN0IE9ic2VydmVyOiAiLGUsbCxyLl9wcm92aXNpb25hbHMpLGwuY2hpbGRyZW5PYmplY3RzJiYobC5jaGlsZHJlbk9iamVjdHM9KDAsYy5kZWVwQ2xvbmUpKGwuY2hpbGRyZW5PYmplY3RzKSksbC5kYXRhPSgwLGMuZGVlcENsb25lKShsLmRhdGEpfHx7fSxsLnJlc3VtZT0hMCxsLnN5bmNoZXI9cixwLmxvZygiW3N5bmNoZXIuX3Jlc3VtZVN1YnNjcmliZV0gLSBjcmVhdGUgbmV3IGRhdGFPYmplY3Q6ICIsbCk7dmFyIHk9bmV3IGQuZGVmYXVsdChsKTtsLmNoaWxkcmVuT2JqZWN0cyYmeS5yZXN1bWVDaGlsZHJlbnMobC5jaGlsZHJlbk9iamVjdHMpLHAubG9nKCJbc3luY2hlci5fcmVzdW1lU3Vic2NyaWJlXSAtIG5ldyBkYXRhT2JqZWN0Iix5KSxyLl9vYnNlcnZlcnNbeS51cmxdPXksci5fcHJvdmlzaW9uYWxzW3kudXJsXSYmci5fcHJvdmlzaW9uYWxzW3kudXJsXS5hcHBseSh5KX1uKHIuX29ic2VydmVycyksdC5fb25PYnNlcnZlcnNSZXN1bWUmJnQuX29uT2JzZXJ2ZXJzUmVzdW1lKHIuX29ic2VydmVycyl9ZWxzZSA0MDQ9PT1lLmJvZHkuY29kZT9uKHt9KTpvKGUuYm9keS5kZXNjKX0pfSl9fSx7a2V5OiJfb25Gb3J3YXJkIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9yZXBvcnRlcnNbZS5ib2R5LnRvXS5fb25Gb3J3YXJkKGUpfX0se2tleToiX29uUmVtb3RlQ3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5mcm9tLnNsaWNlKDAsLTEzKSxuPSgwLGMuZGl2aWRlVVJMKShyKS5kb21haW4sbz17dHlwZTplLnR5cGUsZnJvbTplLmJvZHkuc291cmNlLHVybDpyLGRvbWFpbjpuLHNjaGVtYTplLmJvZHkuc2NoZW1hLHZhbHVlOmUuYm9keS52YWx1ZSxpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksYWNrOmZ1bmN0aW9uKHIpe3ZhciBuPTIwMDtyJiYobj1yKSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpufX0pfX07dC5fb25Ob3RpZmljYXRpb25IYW5kbGVyJiYocC5pbmZvKCJbU3luY2hlcl0gTk9USUZJQ0FUSU9OLUVWRU5UOiAiLG8pLHQuX29uTm90aWZpY2F0aW9uSGFuZGxlcihvKSl9fSx7a2V5OiJfb25SZW1vdGVEZWxldGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkucmVzb3VyY2Usbj10Ll9vYnNlcnZlcnNbcl0sbz17ZnJvbTp0Lm93bmVyLHRvOnQuX3N1YlVSTCxpZDplLmlkLHR5cGU6InVuc3Vic2NyaWJlIixib2R5OntyZXNvdXJjZTplLmJvZHkucmVzb3VyY2V9fTtpZih0Ll9idXMucG9zdE1lc3NhZ2UobyksZGVsZXRlIHQuX29ic2VydmVyc1tyXSxuKXt2YXIgaT17dHlwZTplLnR5cGUsdXJsOnIsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LGFjazpmdW5jdGlvbihyKXt2YXIgbz0yMDA7ciYmKG89ciksMjAwPT09byYmbi5kZWxldGUoKSx0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTpvLHNvdXJjZTp0Ll9vd25lcn19KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKHAubG9nKCJOT1RJRklDQVRJT04tRVZFTlQ6ICIsaSksdC5fb25Ob3RpZmljYXRpb25IYW5kbGVyKGkpKX1lbHNlIHQuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwNCxzb3VyY2U6dC5fb3duZXJ9fSl9fSx7a2V5OiJfb25FeGVjdXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9e2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZToyMDB9fTtpZigoZS5mcm9tPT09dC5fcnVudGltZVVybCsiL3JlZ2lzdHJ5LyJ8fGUuZnJvbT09PXQuX3J1bnRpbWVVcmwrIi9yZWdpc3RyeSIpJiZlLmJvZHkmJmUuYm9keS5tZXRob2QmJiJjbG9zZSI9PT1lLmJvZHkubWV0aG9kJiZ0Ll9vbkNsb3NlKXt2YXIgbj17dHlwZToiY2xvc2UiLGFjazpmdW5jdGlvbihlKXtlJiYoci5ib2R5LmNvZGU9ZSksdC5fYnVzLnBvc3RNZXNzYWdlKHIpfX07cC5pbmZvKCJbU3luY2hlcl0gQ2xvc2UtRVZFTlQ6ICIsbiksdC5fb25DbG9zZShuKX1lbHNlIHQuX2J1cy5wb3N0TWVzc2FnZShyKX19LHtrZXk6Im9uUmVwb3J0ZXJzUmVzdW1lIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlcG9ydGVyc1Jlc3VtZT1lfX0se2tleToib25PYnNlcnZlcnNSZXN1bWUiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uT2JzZXJ2ZXJzUmVzdW1lPWV9fSx7a2V5OiJvd25lciIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX293bmVyfX0se2tleToicmVwb3J0ZXJzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVwb3J0ZXJzfX0se2tleToib2JzZXJ2ZXJzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fb2JzZXJ2ZXJzfX1dKSxlfSgpO3QuZGVmYXVsdD15LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocig0MikpLGk9bihyKDU4KSkscz1uKHIoMTgpKSxhPW4ocigyNSkpLHU9bihyKDMpKSxjPW4ocig1KSksbD1uKHIoMzMpKSxkPW4ocigxMDApKSxmPW4ocigzNCkpLHA9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSkseT1uKHIoMTIyKSksdj1yKDE5KSxoPXAuZ2V0TG9nZ2VyKCJEYXRhT2JqZWN0UmVwb3J0ZXIiKSxiPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7KDAsdS5kZWZhdWx0KSh0aGlzLHQpO3ZhciByPSgwLGwuZGVmYXVsdCkodGhpcywodC5fX3Byb3RvX198fCgwLGEuZGVmYXVsdCkodCkpLmNhbGwodGhpcyxlKSksbj1yO3JldHVybiBuLl9zdWJzY3JpcHRpb25zPXt9LG4uX3N5bmNPYmoub2JzZXJ2ZShmdW5jdGlvbihlKXtoLmxvZygiW1N5bmNoZXIuRGF0YU9iamVjdFJlcG9ydGVyXSAiK24udXJsKyIgcHVibGlzaCBjaGFuZ2U6ICIsZSksbi5fb25DaGFuZ2UoZSl9KSxuLl9hbGxvY2F0ZUxpc3RlbmVycygpLG4uaW52aXRhdGlvbnM9W10sbi5fY2hpbGRyZW5TaXplVGhyZXNob2xkPTVlNCxyfXJldHVybigwLGYuZGVmYXVsdCkodCxlKSwoMCxjLmRlZmF1bHQpKHQsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxkLmRlZmF1bHQpKHQucHJvdG90eXBlLl9fcHJvdG9fX3x8KDAsYS5kZWZhdWx0KSh0LnByb3RvdHlwZSksIl9hbGxvY2F0ZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKTt2YXIgZT10aGlzO2UuX29iamVjdExpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwsZnVuY3Rpb24odCl7c3dpdGNoKGgubG9nKCJbU3luY2hlci5EYXRhT2JqZWN0UmVwb3J0ZXJdIGxpc3RlbmVyICIrZS5fdXJsKyIgUmVjZWl2ZWQ6ICIsdCksdC50eXBlKXtjYXNlInJlc3BvbnNlIjplLl9vblJlc3BvbnNlKHQpO2JyZWFrO2Nhc2UicmVhZCI6ZS5fb25SZWFkKHQpO2JyZWFrO2Nhc2UiZXhlY3V0ZSI6ZS5fb25FeGVjdXRlKHQpO2JyZWFrO2Nhc2UiY3JlYXRlIjplLl9vbkNoaWxkQ3JlYXRlKHQpfX0pfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsZC5kZWZhdWx0KSh0LnByb3RvdHlwZS5fX3Byb3RvX198fCgwLGEuZGVmYXVsdCkodC5wcm90b3R5cGUpLCJfcmVsZWFzZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKSx0aGlzLl9vYmplY3RMaXN0ZW5lci5yZW1vdmUoKX19LHtrZXk6Imludml0ZU9ic2VydmVycyIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49ZTtuLmxlbmd0aD4wJiYoaC5sb2coIltTeW5jaGVyLkRhdGFPYmplY3RSZXBvcnRlcl0gSW52aXRlT2JzZXJ2ZXJzICIsbixyLl9tZXRhZGF0YSksbi5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPW5ldyBzLmRlZmF1bHQoZnVuY3Rpb24obixvKXt2YXIgaT17dHlwZToiY3JlYXRlIixmcm9tOnIuX3N5bmNoZXIuX293bmVyLHRvOnIuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXN1bWU6ITEscmVzb3VyY2U6ci5fdXJsLHNjaGVtYTpyLl9zY2hlbWEsdmFsdWU6ci5fbWV0YWRhdGEsYXV0aG9yaXNlOltlXX19O3QmJihpLmJvZHkucDJwPXQpLHIuZGF0YS5tdXR1YWx8fChpLmJvZHkubXV0dWFsPXIuZGF0YS5tdXR1YWwpLHIuX2J1cy5wb3N0TWVzc2FnZShpLGZ1bmN0aW9uKHQpe2gubG9nKCJbU3luY2hlci5EYXRhT2JqZWN0UmVwb3J0ZXJdIEludml0YXRpb24gcmVwbHkgIix0KTt2YXIgcj17aW52aXRlZDplLGNvZGU6dC5ib2R5JiZ0LmJvZHkuY29kZT90LmJvZHkuY29kZTo1MDAsZGVzYzp0LmJvZHkmJnQuYm9keS5kZXNjP3QuYm9keS5kZXNjOiJVbmtub3duIn07ci5jb2RlPDMwMD9uKHIpOnIuY29kZT49MzAwJiZvKHIpfSl9KTtyLmludml0YXRpb25zLnB1c2gobil9KSl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9kZWxldGVDaGlsZHJlbnMoKS50aGVuKGZ1bmN0aW9uKHQpe2gubG9nKHQpO3ZhciByPXt0eXBlOiJkZWxldGUiLGZyb206ZS5fb3duZXIsdG86ZS5fc3luY2hlci5fc3ViVVJMLGJvZHk6e3Jlc291cmNlOmUuX3VybH19O2UuX2J1cy5wb3N0TWVzc2FnZShyLGZ1bmN0aW9uKHQpe2gubG9nKCJEYXRhT2JqZWN0UmVwb3J0ZXItREVMRVRFOiAiLHQpLDIwMD09PXQuYm9keS5jb2RlJiYoZS5fcmVsZWFzZUxpc3RlbmVycygpLGRlbGV0ZSBlLl9zeW5jaGVyLl9yZXBvcnRlcnNbZS5fdXJsXSxlLl9zeW5jT2JqPXt9KX0pfSl9fSx7a2V5OiJvblN1YnNjcmlwdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyPWV9fSx7a2V5OiJvblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlc3BvbnNlSGFuZGxlcj1lfX0se2tleToib25SZWFkIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlYWRIYW5kbGVyPWV9fSx7a2V5OiJvbkV4ZWN1dGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uRXhlY3V0ZUhhbmRsZXI9ZX19LHtrZXk6Il9vbkZvcndhcmQiLHZhbHVlOmZ1bmN0aW9uKGUpe3N3aXRjaChoLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLVJDVjogIixlKSxlLmJvZHkudHlwZSl7Y2FzZSJzdWJzY3JpYmUiOnRoaXMuX29uU3Vic2NyaWJlKGUpO2JyZWFrO2Nhc2UidW5zdWJzY3JpYmUiOnRoaXMuX29uVW5TdWJzY3JpYmUoZSl9fX0se2tleToiX29uU3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LmZyb20sbj0oMCx2LmRpdmlkZVVSTCkociksbz1uLmRvbWFpbixpPSEwO2UuYm9keS5oYXNPd25Qcm9wZXJ0eSgibXV0dWFsIikmJiFlLmJvZHkubXV0dWFsJiYoaT0hMSksaC5sb2coIltEYXRhT2JqZWN0UmVwb3J0ZXIuX29uU3Vic2NyaWJlXSIsZSxvLG4pO3ZhciBzPXt0eXBlOmUuYm9keS50eXBlLHVybDpyLGRvbWFpbjpvLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxudXR1YWw6aSxhY2NlcHQ6ZnVuY3Rpb24oKXt2YXIgbj17dXJsOnIsc3RhdHVzOiJsaXZlIn07dC5fc3Vic2NyaXB0aW9uc1tyXT1uLHQubWV0YWRhdGEuc3Vic2NyaXB0aW9ucyYmdC5tZXRhZGF0YS5zdWJzY3JpcHRpb25zLnB1c2gobi51cmwpO3ZhciBvPSgwLHYuZGVlcENsb25lKSh0Ll9tZXRhZGF0YSk7by5kYXRhPSgwLHYuZGVlcENsb25lKSh0LmRhdGEpLG8udmVyc2lvbj10Ll92ZXJzaW9uO3ZhciBpPXtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MjAwLHNjaGVtYTp0Ll9zY2hlbWEsdmFsdWU6b319O3JldHVybiBlLmJvZHkuaGFzT3duUHJvcGVydHkoIm11dHVhbCIpJiYhZS5ib2R5Lm11dHVhbCYmKGkuYm9keS5tdXR1YWw9ZS5ib2R5Lm11dHVhbCx0LmRhdGEubXV0dWFsPSExKSx0Ll9idXMucG9zdE1lc3NhZ2UoaSksbn0scmVqZWN0OmZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMyxkZXNjOnJ9fSl9fTt0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXImJihoLmxvZygiU1VCU0NSSVBUSU9OLUVWRU5UOiAiLHMpLHQuX29uU3Vic2NyaXB0aW9uSGFuZGxlcihzKSl9fSx7a2V5OiJfb25VblN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5mcm9tLG49KDAsdi5kaXZpZGVVUkwpKHIpLG89bi5kb21haW47aC5sb2coIltEYXRhT2JqZWN0UmVwb3J0ZXIuX29uVW5TdWJzY3JpYmVdIixlLG8sbiksZGVsZXRlIHQuX3N1YnNjcmlwdGlvbnNbcl0sZGVsZXRlIHQuaW52aXRhdGlvbnNbcl07dmFyIGk9e3R5cGU6ZS5ib2R5LnR5cGUsdXJsOnIsZG9tYWluOm8saWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5fTt0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXImJihoLmxvZygiVU4tU1VCU0NSSVBUSU9OLUVWRU5UOiAiLGkpLHQuX29uU3Vic2NyaXB0aW9uSGFuZGxlcihpKSl9fSx7a2V5OiJfb25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9e3R5cGU6ZS50eXBlLHVybDplLmZyb20sY29kZTplLmJvZHkuY29kZX07dGhpcy5fb25SZXNwb25zZUhhbmRsZXImJihoLmxvZygiUkVTUE9OU0UtRVZFTlQ6ICIsdCksdGhpcy5fb25SZXNwb25zZUhhbmRsZXIodCkpfX0se2tleToiX29uUmVhZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPSgwLGkuZGVmYXVsdCkodC5jaGlsZHJlbnNKU09OKS5sZW5ndGg+dC5fY2hpbGRyZW5TaXplVGhyZXNob2xkLG49e3R5cGU6ZS50eXBlLHVybDplLmZyb20sYWNjZXB0OmZ1bmN0aW9uKCl7cj90Ll9zeW5jUmVwbHlGb3JMYXJnZURhdGEoZSk6dC5fc3luY1JlcGx5KGUpfSxyZWplY3Q6ZnVuY3Rpb24ocil7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDAxLGRlc2M6cn19KX19LHM9W107dC5tZXRhZGF0YS5zdWJzY3JpcHRpb25zP3M9dC5tZXRhZGF0YS5zdWJzY3JpcHRpb25zOnQuX3N1YnNjcmlwdGlvbnMmJihzPSgwLG8uZGVmYXVsdCkodC5fc3Vic2NyaXB0aW9ucykubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0Ll9zdWJzY3JpcHRpb25zW2VdLnVybH0pKSwtMSE9cy5pbmRleE9mKGUuZnJvbSk/cj90Ll9zeW5jUmVwbHlGb3JMYXJnZURhdGEoZSk6dC5fc3luY1JlcGx5KGUpOnQuX29uUmVhZEhhbmRsZXImJihoLmxvZygiUkVBRC1FVkVOVDogIixuKSx0Ll9vblJlYWRIYW5kbGVyKG4pKX19LHtrZXk6Il9zeW5jUmVwbHkiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj0oMCx2LmRlZXBDbG9uZSkodC5tZXRhZGF0YSk7ci5kYXRhPSgwLHYuZGVlcENsb25lKSh0LmRhdGEpLHIuY2hpbGRyZW5PYmplY3RzPSgwLHYuZGVlcENsb25lKSh0LmNoaWxkcmVuc0pTT04pLHIudmVyc2lvbj10Ll92ZXJzaW9uO3ZhciBuPXtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MjAwLHZhbHVlOnJ9fTt0Ll9idXMucG9zdE1lc3NhZ2Uobil9fSx7a2V5OiJfc3luY1JlcGx5Rm9yTGFyZ2VEYXRhIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9KDAsdi5kZWVwQ2xvbmUpKHQubWV0YWRhdGEpO3IuZGF0YT0oMCx2LmRlZXBDbG9uZSkodC5kYXRhKSxyLnZlcnNpb249dC5fdmVyc2lvbixkZWxldGUgci5jaGlsZHJlbk9iamVjdHM7dmFyIG49dm9pZCAwLG89W10scz17fTtmb3IobiBpbiB0Ll9jaGlsZHJlbk9iamVjdHMpe3ZhciBhPXZvaWQgMDtmb3IoYSBpbiBzW25dPXt9LHQuX2NoaWxkcmVuT2JqZWN0c1tuXSkoMCxpLmRlZmF1bHQpKHMpLmxlbmd0aD50Ll9jaGlsZHJlblNpemVUaHJlc2hvbGQmJihvLnB1c2gocyksKHM9e30pW25dPXt9KSxzW25dW2FdPXt9LHNbbl1bYV0udmFsdWU9dC5fY2hpbGRyZW5PYmplY3RzW25dW2FdLm1ldGFkYXRhLHNbbl1bYV0uaWRlbnRpdHk9dC5fY2hpbGRyZW5PYmplY3RzW25dW2FdLmlkZW50aXR5fW8ucHVzaChzKSxyLnJlc3BvbnNlcz1vLmxlbmd0aCsxO3ZhciB1PXtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MTAwLHZhbHVlOnJ9fTt0Ll9idXMucG9zdE1lc3NhZ2UodSksby5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPSgwLHYuZGVlcENsb25lKSh1KTtuLmJvZHkudmFsdWU9ZSxuLmJvZHkudmFsdWUucmVzcG9uc2VzPXIucmVzcG9uc2VzLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll9idXMucG9zdE1lc3NhZ2Uobil9LDUwKX0pfX0se2tleToiX29uRXhlY3V0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpZighZS5ib2R5Lm1ldGhvZCl0aHJvdyBlO3ZhciByPXtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MjAwfX0sbj17dHlwZTplLnR5cGUsdXJsOmUuZnJvbSxtZXRob2Q6ZS5ib2R5Lm1ldGhvZCxwYXJhbXM6ZS5ib2R5LnBhcmFtcyxhY2NlcHQ6ZnVuY3Rpb24oKXt0Ll9idXMucG9zdE1lc3NhZ2Uocil9LHJlamVjdDpmdW5jdGlvbihyKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDEsZGVzYzpyfX0pfX07dC5fb25FeGVjdXRlSGFuZGxlciYmKGgubG9nKCJbRGF0YU9iamVjdFJlcG9ydGVyXSBFWEVDVVRFLUVWRU5UOiAiLG4pLHQuX29uRXhlY3V0ZUhhbmRsZXIobikpfX0se2tleToic3Vic2NyaXB0aW9ucyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N1YnNjcmlwdGlvbnN9fSx7a2V5OiJjaGlsZHJlbnNKU09OIixnZXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e30scj12b2lkIDA7Zm9yKHIgaW4gZS5fY2hpbGRyZW5PYmplY3RzKXt2YXIgbj12b2lkIDA7Zm9yKG4gaW4gdFtyXT17fSxlLl9jaGlsZHJlbk9iamVjdHNbcl0pdFtyXVtuXT17fSx0W3JdW25dLnZhbHVlPWUuX2NoaWxkcmVuT2JqZWN0c1tyXVtuXS5tZXRhZGF0YSx0W3JdW25dLmlkZW50aXR5PWUuX2NoaWxkcmVuT2JqZWN0c1tyXVtuXS5pZGVudGl0eX1yZXR1cm4gdH19XSksdH0oeS5kZWZhdWx0KTt0LmRlZmF1bHQ9YixlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoNDIpKSxpPW4ocig3OCkpLHM9bihyKDE4KSksYT1uKHIoMjUpKSx1PW4ocigzKSksYz1uKHIoNSkpLGw9bihyKDMzKSksZD1uKHIoMTAwKSksZj1uKHIoMzQpKSxwPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLHk9cigxOSksdj1uKHIoMTIyKSksaD1wLmdldExvZ2dlcigiRGF0YU9iamVjdE9ic2VydmVyIiksYj0iYW55IixfPSJzdGFydCIsbT0iZXhhY3QiLGc9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlKXsoMCx1LmRlZmF1bHQpKHRoaXMsdCk7dmFyIHI9KDAsbC5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAsYS5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLGUpKSxuPXI7cmV0dXJuIG4uX3ZlcnNpb249ZS52ZXJzaW9uLG4uX2ZpbHRlcnM9e30sbi5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uKGUpe24uX29uRmlsdGVyKGUpfSksbi5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxyfXJldHVybigwLGYuZGVmYXVsdCkodCxlKSwoMCxjLmRlZmF1bHQpKHQsW3trZXk6InN5bmMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gaC5pbmZvKCJbRGF0YU9iamVjdE9ic2VydmVyX3N5bmNdIHN5bmNocm9uaXNpbmcgIiksbmV3IHMuZGVmYXVsdChmdW5jdGlvbih0LHIpe2UuX3N5bmNoZXIucmVhZChlLl9tZXRhZGF0YS51cmwpLnRoZW4oZnVuY3Rpb24ocil7aC5pbmZvKCJbRGF0YU9iamVjdE9ic2VydmVyX3N5bmNdIHZhbHVlIHRvIHN5bmM6ICIsciksKDAsaS5kZWZhdWx0KShlLmRhdGEsKDAseS5kZWVwQ2xvbmUpKHIuZGF0YSkpLGUuX3ZlcnNpb249ci52ZXJzaW9uLGUuX21ldGFkYXRhLmxhc3RNb2RpZmllZD1yLmxhc3RNb2RpZmllZCxyLmNoaWxkcmVuT2JqZWN0cz8oZS5yZXN1bWVDaGlsZHJlbnMoci5jaGlsZHJlbk9iamVjdHMpLGUuX3N0b3JlQ2hpbGRyZW5zKCksdCghMCkpOnQoITApfSkuY2F0Y2goZnVuY3Rpb24oZSl7aC5pbmZvKCJbRGF0YU9iamVjdE9ic2VydmVyX3N5bmNdIHN5bmMgZmFpbGVkOiAiLGUpLHQoITEpfSl9KX19LHtrZXk6Il9zdG9yZUNoaWxkcmVucyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e307KDAsby5kZWZhdWx0KShlLl9jaGlsZHJlbk9iamVjdHMpLmZvckVhY2goZnVuY3Rpb24ocil7dmFyIG49ZS5fY2hpbGRyZW5PYmplY3RzW3JdO3Rbcl09e30sKDAsby5kZWZhdWx0KShuKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3Rbcl1bZV09e30sdFtyXVtlXS52YWx1ZT1uW2VdLm1ldGFkYXRhLHRbcl1bZV0uaWRlbnRpdHk9bltlXS5pZGVudGl0eX0pfSk7dmFyIHI9e2Zyb206ZS5fb3duZXIsdG86ZS5fc3luY2hlci5fc3ViVVJMLHR5cGU6ImNyZWF0ZSIsYm9keTp7cmVzb3VyY2U6ZS5fdXJsLGF0dHJpYnV0ZToiY2hpbGRyZW5PYmplY3RzIix2YWx1ZTp0fX07ZS5fYnVzLnBvc3RNZXNzYWdlKHIpfX0se2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGQuZGVmYXVsdCkodC5wcm90b3R5cGUuX19wcm90b19ffHwoMCxhLmRlZmF1bHQpKHQucHJvdG90eXBlKSwiX2FsbG9jYXRlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpO3ZhciBlPXRoaXM7ZS5fY2hhbmdlTGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCsiL2NoYW5nZXMiLGZ1bmN0aW9uKHQpeyJ1cGRhdGUiPT09dC50eXBlJiYoaC5sb2coIkRhdGFPYmplY3RPYnNlcnZlci0iK2UuX3VybCsiLVJDVjogIix0KSxlLl9jaGFuZ2VPYmplY3QoZS5fc3luY09iaix0KSl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGQuZGVmYXVsdCkodC5wcm90b3R5cGUuX19wcm90b19ffHwoMCxhLmRlZmF1bHQpKHQucHJvdG90eXBlKSwiX3JlbGVhc2VMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyksdGhpcy5fY2hhbmdlTGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9kZWxldGVDaGlsZHJlbnMoKS50aGVuKGZ1bmN0aW9uKCl7ZS51bnN1YnNjcmliZSgpLGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fb2JzZXJ2ZXJzW2UuX3VybF19KX19LHtrZXk6InVuc3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17dHlwZToidW5zdWJzY3JpYmUiLGZyb206ZS5fb3duZXIsdG86ZS5fc3luY2hlci5fc3ViVVJMLGJvZHk6e3Jlc291cmNlOmUuX3VybH19O2UuX2J1cy5wb3N0TWVzc2FnZSh0LGZ1bmN0aW9uKHQpe2gubG9nKCJEYXRhT2JqZWN0T2JzZXJ2ZXItVU5TVUJTQ1JJQkU6ICIsdCksMjAwPT09dC5ib2R5LmNvZGUmJihlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX29ic2VydmVyc1tlLl91cmxdKX0pfX0se2tleToib25DaGFuZ2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9ZSxuPXt0eXBlOm0sY2FsbGJhY2s6dH0sbz1lLmluZGV4T2YoIioiKTtvPT09ZS5sZW5ndGgtMSYmKDA9PT1vP24udHlwZT1iOihuLnR5cGU9XyxyPWUuc3Vic3RyKDAsZS5sZW5ndGgtMSkpKSx0aGlzLl9maWx0ZXJzW3JdPW59fSx7a2V5OiJfb25GaWx0ZXIiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7KDAsby5kZWZhdWx0KSh0Ll9maWx0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBuPXQuX2ZpbHRlcnNbcl07bi50eXBlPT09Yj9uLmNhbGxiYWNrKGUpOm4udHlwZT09PV8/MD09PWUuZmllbGQuaW5kZXhPZihyKSYmbi5jYWxsYmFjayhlKTpuLnR5cGU9PT1tJiZlLmZpZWxkPT09ciYmbi5jYWxsYmFjayhlKX0pfX0se2tleToib25EaXNjb25uZWN0ZWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIG5ldyBzLmRlZmF1bHQoZnVuY3Rpb24ocixuKXt0Ll9zdWJzY3JpYmVSZWdpc3RyYXRpb24oKS50aGVuKGZ1bmN0aW9uKCl7dC5fb25EaXNjb25uZWN0ZWQ9ZSxyKCl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gbihlKX0pfSl9fSx7a2V5OiJfc3Vic2NyaWJlUmVnaXN0cmF0aW9uIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17dHlwZToic3Vic2NyaWJlIixmcm9tOnRoaXMuX293bmVyLHRvOnRoaXMuX3N5bmNoZXIuX3J1bnRpbWVVcmwrIi9zdWJzY3JpcHRpb25zIixib2R5OntyZXNvdXJjZXM6W3RoaXMuX3VybCsiL3JlZ2lzdHJhdGlvbiJdfX07cmV0dXJuIG5ldyBzLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXtoLmxvZygiW0RhdGFPYmplY3RPYnNlcnZlci5fc3Vic2NyaWJlUmVnaXN0cmF0aW9uXSAiK2UuX3VybCsiIHJjdmVkIHJlcGx5ICIsdCksMjAwPT09dC5ib2R5LmNvZGU/KGUuX2dlbmVyYXRlTGlzdGVuZXIoZS5fdXJsKyIvcmVnaXN0cmF0aW9uIikscigpKTooaC5lcnJvcigiRXJyb3Igc3Vic2NyaWJpbmcgcmVnaXN0cmF0aW9uIHN0YXR1cyBmb3IgIixlLl91cmwpLG4oIkVycm9yIHN1YnNjcmliaW5nIHJlZ2lzdHJhdGlvbiBzdGF0dXMgZm9yICIrZS5fdXJsKSl9KX0pfX0se2tleToiX2dlbmVyYXRlTGlzdGVuZXIiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5fYnVzLmFkZExpc3RlbmVyKGUsZnVuY3Rpb24oZSl7aC5sb2coIltEYXRhT2JqZWN0T2JzZXJ2ZXIucmVnaXN0cmF0aW9uTm90aWZpY2F0aW9uXSAiK3QuX3VybCsiOiAiLGUpLGUuYm9keS52YWx1ZSYmImRpc2Nvbm5lY3RlZCI9PT1lLmJvZHkudmFsdWUmJnQuX29uRGlzY29ubmVjdGVkJiYoaC5sb2coIltEYXRhT2JqZWN0T2JzZXJ2ZXJdICIrdC5fdXJsKyI6IHdhcyBkaXNjb25uZWN0ZWQgIixlKSx0Ll9vbkRpc2Nvbm5lY3RlZCgpKX0pfX0se2tleToiZXhlY3V0ZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49dGhpcztyZXR1cm4gbmV3IHMuZGVmYXVsdChmdW5jdGlvbihvLGkpe3ZhciBzPXt0eXBlOiJleGVjdXRlIixmcm9tOnIuX293bmVyLHRvOm4uX3VybCxib2R5OnttZXRob2Q6ZSxwYXJhbXM6dH19O24uX2J1cy5wb3N0TWVzc2FnZShzLGZ1bmN0aW9uKHQpe2gubG9nKCJbRGF0YU9iamVjdE9ic2VydmVyLmV4ZWN1dGVdICIrbi5fdXJsKyIgcmN2ZWQgcmVwbHkgIix0KSwyMDA9PT10LmJvZHkuY29kZT9vKCk6KGgud2FybigiW0RhdGFPYmplY3RPYnNlcnZlci5leGVjdXRlXSBleGVjdXRpb24gb2YgbWV0aG9kICIrZSsiIHdhcyByZWplY3QgYnkgcmVwb3J0ZXIiKSxpKCJbRGF0YU9iamVjdE9ic2VydmVyLmV4ZWN1dGVdIGV4ZWN1dGlvbiBvZiBtZXRob2QgIitlKyIgd2FzIHJlamVjdCBieSByZXBvcnRlciIpKX0pfSl9fV0pLHR9KHYuZGVmYXVsdCk7dC5kZWZhdWx0PWcsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDQyKSksaT1uKHIoMTgpKSxzPW4ocigzKSksYT1uKHIoNSkpLHU9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSksYz1yKDE5KSxsPXUuZ2V0TG9nZ2VyKCJSZWdpc3RyYXRpb25TdGF0dXMiKSxkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbixvKXsoMCxzLmRlZmF1bHQpKHRoaXMsZSksdGhpcy5fcmVnaXN0cnlPYmplY3RVUkw9dCx0aGlzLl9ydW50aW1lVVJMPXIsdGhpcy5fZG9tYWluPSgwLGMuZGl2aWRlVVJMKShyKS5kb21haW4sdGhpcy5fZGlzY292ZXJlZE9iamVjdFVSTD1uLHRoaXMuX21lc3NhZ2VCdXM9byx0aGlzLl9zdWJzY3JpcHRpb25TZXQ9ITEsdGhpcy5fc3Vic2NyaWJlcnM9e2xpdmU6e30sZGlzY29ubmVjdGVkOnt9fX1yZXR1cm4oMCxhLmRlZmF1bHQpKGUsW3trZXk6Im9uTGl2ZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7ci5fc3Vic2NyaXB0aW9uU2V0PyhyLl9zdWJzY3JpYmVycy5saXZlW2VdPXQsbigpKTpyLl9zdWJzY3JpYmUoKS50aGVuKGZ1bmN0aW9uKCl7ci5fc3Vic2NyaWJlcnMubGl2ZVtlXT10LG4oKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiBvKGUpfSl9KX19LHtrZXk6Im9uRGlzY29ubmVjdGVkIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24obixvKXtyLl9zdWJzY3JpcHRpb25TZXQ/KHIuX3N1YnNjcmliZXJzLmRpc2Nvbm5lY3RlZFtlXT10LG4oKSk6ci5fc3Vic2NyaWJlKCkudGhlbihmdW5jdGlvbigpe3IuX3N1YnNjcmliZXJzLmRpc2Nvbm5lY3RlZFtlXT10LG4oKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiBvKGUpfSl9KX19LHtrZXk6Il9zdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOiJzdWJzY3JpYmUiLGZyb206dGhpcy5fZGlzY292ZXJlZE9iamVjdFVSTCx0bzp0aGlzLl9ydW50aW1lVVJMKyIvc3Vic2NyaXB0aW9ucyIsYm9keTp7cmVzb3VyY2VzOlt0aGlzLl9yZWdpc3RyeU9iamVjdFVSTCsiL3JlZ2lzdHJhdGlvbiJdfX07cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtlLl9tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24odCl7bC5sb2coIltEaXNjb3ZlcmVkT2JqZWN0LnN1YnNjcmliZV0gIitlLl9yZWdpc3RyeU9iamVjdFVSTCsiIHJjdmVkIHJlcGx5ICIsdCksMjAwPT09dC5ib2R5LmNvZGU/KGUuX2dlbmVyYXRlTGlzdGVuZXIoZS5fcmVnaXN0cnlPYmplY3RVUkwrIi9yZWdpc3RyYXRpb24iKSxlLl9zdWJzY3JpcHRpb25TZXQ9ITAscigpKToobC5lcnJvcigiRXJyb3Igc3Vic2NyaWJpbmcgIixlLl9yZWdpc3RyeU9iamVjdFVSTCksbigiRXJyb3Igc3Vic2NyaWJpbmcgIitlLl9yZWdpc3RyeU9iamVjdFVSTCkpfSl9KX19LHtrZXk6Il9nZW5lcmF0ZUxpc3RlbmVyIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3RoaXMuX21lc3NhZ2VCdXMuYWRkTGlzdGVuZXIoZSxmdW5jdGlvbihlKXtsLmxvZygiW0Rpc2NvdmVyZWRPYmplY3Qubm90aWZpY2F0aW9uXSAiK3QuX3JlZ2lzdHJ5T2JqZWN0VVJMKyI6ICIsZSksdC5fcHJvY2Vzc05vdGlmaWNhdGlvbihlKX0pfX0se2tleToiX3Byb2Nlc3NOb3RpZmljYXRpb24iLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkudmFsdWU7c2V0VGltZW91dChmdW5jdGlvbigpeygwLG8uZGVmYXVsdCkodC5fc3Vic2NyaWJlcnNbcl0pLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuX3N1YnNjcmliZXJzW3JdW2VdKCl9KX0sNWUzKX19LHtrZXk6Il91bnN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e3R5cGU6InVuc3Vic2NyaWJlIixmcm9tOnRoaXMuX2Rpc2NvdmVyZWRPYmplY3RVUkwsdG86dGhpcy5fcnVudGltZVVSTCsiL3N1YnNjcmlwdGlvbnMiLGJvZHk6e3Jlc291cmNlOnRoaXMuX3JlZ2lzdHJ5T2JqZWN0VVJMKyIvcmVnaXN0cmF0aW9uIn19O3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7ZS5fbWVzc2FnZUJ1cy5wb3N0TWVzc2FnZSh0LGZ1bmN0aW9uKHQpe2wubG9nKCJbRGlzY292ZXJlZE9iamVjdC51bnN1YnNjcmliZV0gIitlLl9yZWdpc3RyeU9iamVjdFVSTCsiIHJjdmVkIHJlcGx5ICIsdCksMjAwPT09dC5ib2R5LmNvZGU/cigpOihsLmVycm9yKCJFcnJvciB1bnN1YnNjcmliaW5nICIsZS5fcmVnaXN0cnlPYmplY3RVUkwpLG4oIkVycm9yIHVuc3Vic2NyaWJpbmcgIitlLl9yZWdpc3RyeU9iamVjdFVSTCkpfSl9KX19LHtrZXk6InVuc3Vic2NyaWJlTGl2ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihyLG4pe2UgaW4gdC5fc3Vic2NyaWJlcnMubGl2ZSYmZGVsZXRlIHQuX3N1YnNjcmliZXJzLmxpdmVbZV0sdC5fYXJlU3Vic2NyaXB0aW9uc0VtcHR5KCk/dC5fdW5zdWJzY3JpYmUoKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHIoKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiBuKGUpfSk6cigpfSl9fSx7a2V5OiJ1bnN1YnNjcmliZURpc2Nvbm5lY3RlZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihyLG4pe2UgaW4gdC5fc3Vic2NyaWJlcnMuZGlzY29ubmVjdGVkPyhkZWxldGUgdC5fc3Vic2NyaWJlcnMuZGlzY29ubmVjdGVkW2VdLHQuX2FyZVN1YnNjcmlwdGlvbnNFbXB0eSgpP3QuX3Vuc3Vic2NyaWJlKCkudGhlbihmdW5jdGlvbigpe3JldHVybiByKCl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gbihlKX0pOnIoKSk6bihlKyIgZG9lc24ndCBzdWJzY3JpYmUgb25EaXNjb25uZWN0ZWQgZm9yICIrdC5fcmVnaXN0cnlPYmplY3RVUkwpfSl9fSx7a2V5OiJfYXJlU3Vic2NyaXB0aW9uc0VtcHR5Iix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiAwPT09KDAsby5kZWZhdWx0KSh0aGlzLl9zdWJzY3JpYmVycy5saXZlKS5sZW5ndGgmJjA9PT0oMCxvLmRlZmF1bHQpKHRoaXMuX3N1YnNjcmliZXJzLmRpc2Nvbm5lY3RlZCkubGVuZ3RofX1dKSxlfSgpO3QuZGVmYXVsdD1kLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocigzKSksaT1uKHIoNSkpLHM9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSkuZ2V0TG9nZ2VyKCJEYXRhUHJvdmlzaW9uYWwiKSxhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbixpKXsoMCxvLmRlZmF1bHQpKHRoaXMsZSk7dmFyIHM9dGhpcztzLl9vd25lcj10LHMuX3VybD1yLHMuX2J1cz1uLHMuX2NoaWxkcmVuPWkscy5fY2hhbmdlcz1bXSxzLl9hbGxvY2F0ZUxpc3RlbmVycygpfXJldHVybigwLGkuZGVmYXVsdCkoZSxbe2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fbGlzdGVuZXI9ZS5fYnVzLmFkZExpc3RlbmVyKGUuX3VybCxmdW5jdGlvbih0KXtzLmxvZygiRGF0YVByb3Zpc2lvbmFsLSIrZS5fdXJsKyItUkNWOiAiLHQpLGUuX2NoYW5nZXMucHVzaCh0KX0pfX0se2tleToiX3JlbGVhc2VMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJhcHBseSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fY2hhbmdlcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuX2NoYW5nZU9iamVjdChlLl9zeW5jT2JqLHQpfSl9fSx7a2V5OiJjaGlsZHJlbiIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoaWxkcmVufX1dKSxlfSgpO3QuZGVmYXVsdD1hLGUuZXhwb3J0cz10LmRlZmF1bHR9LCwsZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDE4KSksaT1uKHIoMykpLHM9bihyKDUpKSxhPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLHU9cigxOSksYz1uKHIoMTM5KSksbD1hLmdldExvZ2dlcigiRGlzY292ZXJ5IiksZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG4peygwLGkuZGVmYXVsdCkodGhpcyxlKTt2YXIgbz10aGlzO28ubWVzc2FnZUJ1cz1uLG8ucnVudGltZVVSTD1yLG8uZG9tYWluPSgwLHUuZGl2aWRlVVJMKSh0KS5kb21haW4sby5kaXNjb3ZlcnlVUkw9dH1yZXR1cm4oMCxzLmRlZmF1bHQpKGUsW3trZXk6Il9pc0xlZ2FjeVVzZXIiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiEoIWUuaW5jbHVkZXMoIjoiKXx8ZS5pbmNsdWRlcygidXNlcjovLyIpKX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlclByb2ZpbGVEYXRhIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49dGhpcyxpPVtdLHM9e3R5cGU6InJlYWQiLGZyb206bi5kaXNjb3ZlcnlVUkwsdG86bi5ydW50aW1lVVJMKyIvZGlzY292ZXJ5LyIsYm9keTp7cmVzb3VyY2U6Ii9oeXBlcnR5L3VzZXJwcm9maWxlLyIrZX19O3JldHVybih0fHxyKSYmKHMuYm9keS5jcml0ZXJpYT17cmVzb3VyY2VzOnIsZGF0YVNjaGVtZXM6dH0pLG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtuLl9pc0xlZ2FjeVVzZXIoZSk/dChbe2h5cGVydHlJRDplLHN0YXR1czoibGl2ZSJ9XSk6bi5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKHMsZnVuY3Rpb24ocil7MjAwPT09ci5ib2R5LmNvZGU/KHIuYm9keS52YWx1ZS5tYXAoZnVuY3Rpb24oZSl7ZS5oeXBlcnR5SUQhPW4uZGlzY292ZXJ5VVJMJiZpLnB1c2goZSl9KSwwPT09aS5sZW5ndGg/dChbXSk6KGwubG9nKCJbRGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlclByb2ZpbGVEYXRhXSBSZXBseSBsb2c6ICIsaSksdChpKSkpOihsLndhcm4oIltEaXNjb3ZlcnkuZGlzY292ZXJIeXBlcnRpZXNQZXJVc2VyUHJvZmlsZURhdGFdIEVycm9yIFJlcGx5IGZvciAiK2UrIiBSZWFzb246ICIsci5ib2R5LmRlc2NyaXB0aW9uKSx0KFtdKSl9KX0pfX0se2tleToiZGlzY292ZXJIeXBlcnRpZXNQZXJVc2VyUHJvZmlsZURhdGFETyIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMsaT1hcmd1bWVudHM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24oZSx0KXtuLmRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlclByb2ZpbGVEYXRhLmFwcGx5KG4saSkudGhlbihmdW5jdGlvbih0KXtlKG4uX2NvbnZlcnRUb0Rpc2NvdmVyZWRPYmplY3QodCkpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSl9KX0pfX0se2tleToiZGlzY292ZXJEYXRhT2JqZWN0c1BlclVzZXJQcm9maWxlRGF0YSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMsaT17dHlwZToicmVhZCIsZnJvbTpuLmRpc2NvdmVyeVVSTCx0bzpuLnJ1bnRpbWVVUkwrIi9kaXNjb3ZlcnkvIixib2R5OntyZXNvdXJjZToiL2RhdGFPYmplY3QvdXNlcnByb2ZpbGUvIitlfX07cmV0dXJuKHR8fHIpJiYoaS5ib2R5LmNyaXRlcmlhPXtyZXNvdXJjZXM6cixkYXRhU2NoZW1lczp0fSksbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe24uX2lzTGVnYWN5VXNlcihlKT90KFt7aHlwZXJ0eUlEOmUsc3RhdHVzOiJsaXZlIn1dKTpuLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UoaSxmdW5jdGlvbihyKXsyMDA9PT1yLmJvZHkuY29kZT8obC5sb2coIlJlcGx5IGxvZzogIixyLmJvZHkudmFsdWUpLHQoci5ib2R5LnZhbHVlKSk6KGwud2FybigiW0Rpc2NvdmVyeS5kaXNjb3ZlckRhdGFPYmplY3RzUGVyVXNlclByb2ZpbGVEYXRhXSBFcnJvciBSZXBseSBmb3IgIitlKyIgUmVhc29uOiAiLHIuYm9keS5kZXNjcmlwdGlvbiksdChbXSkpfSl9KX19LHtrZXk6ImRpc2NvdmVyRGF0YU9iamVjdHNQZXJVc2VyUHJvZmlsZURhdGFETyIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMsaT1hcmd1bWVudHM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24oZSx0KXtuLmRpc2NvdmVyRGF0YU9iamVjdHNQZXJVc2VyUHJvZmlsZURhdGEuYXBwbHkobixpKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlKG4uX2NvbnZlcnRUb0Rpc2NvdmVyZWRPYmplY3QodCkpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSl9KX0pfX0se2tleToiZGlzY292ZXJIeXBlcnRpZXNQZXJHVUlEIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49dGhpcyxpPVtdLHM9e3R5cGU6InJlYWQiLGZyb206bi5kaXNjb3ZlcnlVUkwsdG86bi5ydW50aW1lVVJMKyIvZGlzY292ZXJ5LyIsYm9keTp7cmVzb3VyY2U6Ii9oeXBlcnR5L2d1aWQvIitlfX07cmV0dXJuKHR8fHIpJiYocy5ib2R5LmNyaXRlcmlhPXtyZXNvdXJjZXM6cixkYXRhU2NoZW1lczp0fSksbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe24ubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShzLGZ1bmN0aW9uKG8pezIwMD09PW8uYm9keS5jb2RlPyhvLmJvZHkudmFsdWUubWFwKGZ1bmN0aW9uKGUpe2UuaHlwZXJ0eUlEIT1uLmRpc2NvdmVyeVVSTCYmaS5wdXNoKGUpfSksMD09PWkubGVuZ3RoP3IoIk5vIEh5cGVydHkgd2FzIGZvdW5kIik6KGwubG9nKCJSZXBseSBsb2c6ICIsaSksdChpKSkpOihsLndhcm4oIltEaXNjb3ZlcnkuZGlzY292ZXJIeXBlcnRpZXNQZXJHVUlEXSBFcnJvciBSZXBseSBmb3IgIitlKyIgUmVhc29uOiAiLG8uYm9keS5kZXNjcmlwdGlvbiksdChbXSkpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0aWVzUGVyR1VJRERPIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49dGhpcyxpPWFyZ3VtZW50cztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihlLHQpe24uZGlzY292ZXJIeXBlcnRpZXNQZXJHVUlELmFwcGx5KG4saSkudGhlbihmdW5jdGlvbih0KXtlKG4uX2NvbnZlcnRUb0Rpc2NvdmVyZWRPYmplY3QodCkpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSl9KX0pfX0se2tleToiZGlzY292ZXJEYXRhT2JqZWN0c1BlckdVSUQiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzLGk9e3R5cGU6InJlYWQiLGZyb206bi5kaXNjb3ZlcnlVUkwsdG86bi5ydW50aW1lVVJMKyIvZGlzY292ZXJ5LyIsYm9keTp7cmVzb3VyY2U6Ii9kYXRhT2JqZWN0L2d1aWQvIitlfX07cmV0dXJuKHR8fHIpJiYoaS5ib2R5LmNyaXRlcmlhPXtyZXNvdXJjZXM6cixkYXRhU2NoZW1lczp0fSksbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe24ubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShpLGZ1bmN0aW9uKHIpezIwMD09PXIuYm9keS5jb2RlPyhsLmxvZygiUmVwbHkgbG9nOiAiLHIuYm9keS52YWx1ZSksdChyLmJvZHkudmFsdWUpKToobC53YXJuKCJbRGlzY292ZXJ5LmRpc2NvdmVyRGF0YU9iamVjdHNQZXJHVUlEXSBFcnJvciBSZXBseSBmb3IgIitlKyIgUmVhc29uOiAiLHIuYm9keS5kZXNjcmlwdGlvbiksdChbXSkpfSl9KX19LHtrZXk6ImRpc2NvdmVyRGF0YU9iamVjdHNQZXJHVUlERE8iLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzLGk9YXJndW1lbnRzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKGUsdCl7bi5kaXNjb3ZlckRhdGFPYmplY3RzUGVyR1VJRC5hcHBseShuLGkpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGUobi5fY29udmVydFRvRGlzY292ZXJlZE9iamVjdCh0KSl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gdChlKX0pfSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydGllcyIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGkscz10aGlzLGE9W107aT1ufHxzLmRvbWFpbjt2YXIgdT17dHlwZToicmVhZCIsZnJvbTpzLmRpc2NvdmVyeVVSTCx0bzpzLnJ1bnRpbWVVUkwrIi9kaXNjb3ZlcnkvIixib2R5OntyZXNvdXJjZToiL2h5cGVydHkvdXNlci8iK2V9fTtyZXR1cm4gdS5ib2R5LmNyaXRlcmlhPXR8fHI/e3Jlc291cmNlczpyLGRhdGFTY2hlbWVzOnQsZG9tYWluOml9Ontkb21haW46aX0sbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe3MuX2lzTGVnYWN5VXNlcihlKT90KFt7aHlwZXJ0eUlEOmUsc3RhdHVzOiJsaXZlIn1dKTpzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UodSxmdW5jdGlvbihyKXsyMDA9PT1yLmJvZHkuY29kZXx8NTAwPT09ci5ib2R5LmNvZGU/KHIuYm9keS52YWx1ZS5tYXAoZnVuY3Rpb24oZSl7ZS5oeXBlcnR5SUQhPXMuZGlzY292ZXJ5VVJMJiZhLnB1c2goZSl9KSxsLmxvZygiW0Rpc2NvdmVyeS5kaXNjb3Zlckh5cGVydGllc10gUmVwbHkgOiAiLGEpLHQoYSkpOihsLndhcm4oIltEaXNjb3ZlcnkuZGlzY292ZXJIeXBlcnRpZXNdIEVycm9yIFJlcGx5IGZvciAiK2UrIiBSZWFzb246ICIsci5ib2R5LmRlc2NyaXB0aW9uKSx0KGEpKX0pfSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydGllc0RPIix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgaT10aGlzLHM9YXJndW1lbnRzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKGUsdCl7aS5kaXNjb3Zlckh5cGVydGllcy5hcHBseShpLHMpLnRoZW4oZnVuY3Rpb24odCl7ZShpLl9jb252ZXJ0VG9EaXNjb3ZlcmVkT2JqZWN0KHQpKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfSl9KX19LHtrZXk6ImRpc2NvdmVyRGF0YU9iamVjdHMiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBpLHM9dGhpcztpPW58fHMuZG9tYWluO3ZhciBhPXt0eXBlOiJyZWFkIixmcm9tOnMuZGlzY292ZXJ5VVJMLHRvOnMucnVudGltZVVSTCsiL2Rpc2NvdmVyeS8iLGJvZHk6e3Jlc291cmNlOiIvZGF0YU9iamVjdC91c2VyLyIrZX19O3JldHVybiBhLmJvZHkuY3JpdGVyaWE9dHx8cj97cmVzb3VyY2VzOnIsZGF0YVNjaGVtZXM6dCxkb21haW46aX06e2RvbWFpbjppfSxuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHQscil7cy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKGEsZnVuY3Rpb24ocil7MjAwPT09ci5ib2R5LmNvZGU/KGwubG9nKCJSZXBseSBWYWx1ZSBMb2c6ICIsci5ib2R5LnZhbHVlKSx0KHIuYm9keS52YWx1ZSkpOihsLndhcm4oIltEaXNjb3ZlcnkuZGlzY292ZXJEYXRhT2JqZWN0c10gRXJyb3IgUmVwbHkgZm9yICIrZSsiIFJlYXNvbjogIixyLmJvZHkuZGVzY3JpcHRpb24pLHQoW10pKX0pfSl9fSx7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RzRE8iLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBpPXRoaXMscz1hcmd1bWVudHM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24oZSx0KXtpLmRpc2NvdmVyRGF0YU9iamVjdHMuYXBwbHkoaSxzKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlKGkuX2NvbnZlcnRUb0Rpc2NvdmVyZWRPYmplY3QodCkpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSl9KX0pfX0se2tleToiZGlzY292ZXJIeXBlcnR5UGVyVVJMIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByLG49dGhpcztyPXR8fG4uZG9tYWluO3ZhciBpPXt0eXBlOiJyZWFkIixmcm9tOm4uZGlzY292ZXJ5VVJMLHRvOm4ucnVudGltZVVSTCsiL2Rpc2NvdmVyeS8iLGJvZHk6e3Jlc291cmNlOiIvaHlwZXJ0eS91cmwvIitlLGNyaXRlcmlhOntkb21haW46cn19fTtyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe24ubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShpLGZ1bmN0aW9uKHIpezIwMD09PXIuYm9keS5jb2RlPyhsLmxvZygiUmVwbHkgVmFsdWUgTG9nOiAiLHIuYm9keS52YWx1ZSksdChyLmJvZHkudmFsdWUpKToobC53YXJuKCJbRGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0eVBlclVSTF0gRXJyb3IgUmVwbHkgZm9yICIrZSsiIFJlYXNvbjogIixyLmJvZHkuZGVzY3JpcHRpb24pLHQoW10pKX0pfSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydHlQZXJVUkxETyIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49YXJndW1lbnRzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKGUsdCl7ci5kaXNjb3Zlckh5cGVydHlQZXJVUkwuYXBwbHkocixuKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlKG5ldyBjLmRlZmF1bHQodCxyLnJ1bnRpbWVVUkwsci5kaXNjb3ZlcnlVUkwsci5tZXNzYWdlQnVzLHIpKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfSl9KX19LHtrZXk6ImRpc2NvdmVyRGF0YU9iamVjdFBlclVSTCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcixuPXRoaXM7cj10fHxuLmRvbWFpbjt2YXIgaT17dHlwZToicmVhZCIsZnJvbTpuLmRpc2NvdmVyeVVSTCx0bzpuLnJ1bnRpbWVVUkwrIi9kaXNjb3ZlcnkvIixib2R5OntyZXNvdXJjZToiL2RhdGFPYmplY3QvdXJsLyIrZSxjcml0ZXJpYTp7ZG9tYWluOnJ9fX07cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtuLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UoaSxmdW5jdGlvbihyKXsyMDA9PT1yLmJvZHkuY29kZT8obC5sb2coIlJlcGx5IFZhbHVlIExvZzogIixyLmJvZHkudmFsdWUpLHQoci5ib2R5LnZhbHVlKSk6KGwud2FybigiW0Rpc2NvdmVyeS5kaXNjb3ZlckRhdGFPYmplY3RQZXJVUkxdIEVycm9yIFJlcGx5IGZvciAiK2UrIiBSZWFzb246ICIsci5ib2R5LmRlc2NyaXB0aW9uKSx0KFtdKSl9KX0pfX0se2tleToiZGlzY292ZXJEYXRhT2JqZWN0UGVyVVJMRE8iLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPWFyZ3VtZW50cztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihlLHQpe3IuZGlzY292ZXJEYXRhT2JqZWN0UGVyVVJMLmFwcGx5KHIsbikudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZShuZXcgYy5kZWZhdWx0KHQsci5ydW50aW1lVVJMLHIuZGlzY292ZXJ5VVJMLHIubWVzc2FnZUJ1cyxyKSl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gdChlKX0pfSl9fSx7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RzUGVyTmFtZSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGkscz10aGlzO2k9bnx8cy5kb21haW47dmFyIGE9e3R5cGU6InJlYWQiLGZyb206cy5kaXNjb3ZlcnlVUkwsdG86cy5ydW50aW1lVVJMKyIvZGlzY292ZXJ5LyIsYm9keTp7cmVzb3VyY2U6Ii9kYXRhT2JqZWN0L25hbWUvIitlfX07cmV0dXJuIGEuYm9keS5jcml0ZXJpYT10fHxyP3tyZXNvdXJjZXM6cixkYXRhU2NoZW1lczp0LGRvbWFpbjppfTp7ZG9tYWluOml9LG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UoYSxmdW5jdGlvbihyKXsyMDA9PT1yLmJvZHkuY29kZT8obC5sb2coIlJlcGx5IFZhbHVlIExvZzogIixyLmJvZHkudmFsdWUpLHQoci5ib2R5LnZhbHVlKSk6KGwud2FybigiW0Rpc2NvdmVyeS5kaXNjb3ZlckRhdGFPYmplY3RzUGVyTmFtZV0gRXJyb3IgUmVwbHkgZm9yICIrZSsiIFJlYXNvbjogIixyLmJvZHkuZGVzY3JpcHRpb24pLHQoW10pKX0pfSl9fSx7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RzUGVyTmFtZURPIix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgaT10aGlzLHM9YXJndW1lbnRzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKGUsdCl7aS5kaXNjb3ZlckRhdGFPYmplY3RzUGVyTmFtZS5hcHBseShpLHMpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGUoaS5fY29udmVydFRvRGlzY292ZXJlZE9iamVjdCh0KSl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gdChlKX0pfSl9fSx7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RzUGVyUmVwb3J0ZXIiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBpLHM9dGhpcztpPW58fHMuZG9tYWluO3ZhciBhPXt0eXBlOiJyZWFkIixmcm9tOnMuZGlzY292ZXJ5VVJMLHRvOnMucnVudGltZVVSTCsiL2Rpc2NvdmVyeS8iLGJvZHk6e3Jlc291cmNlOiIvZGF0YU9iamVjdC9yZXBvcnRlci8iK2V9fTtyZXR1cm4gYS5ib2R5LmNyaXRlcmlhPXR8fHI/e3Jlc291cmNlczpyLGRhdGFTY2hlbWVzOnQsZG9tYWluOml9Ontkb21haW46aX0sbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe3MubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShhLGZ1bmN0aW9uKHIpezIwMD09PXIuYm9keS5jb2RlPyhsLmxvZygiUmVwbHkgVmFsdWUgTG9nOiAiLHIuYm9keS52YWx1ZSksdChyLmJvZHkudmFsdWUpKToobC53YXJuKCJbRGlzY292ZXJ5LmRpc2NvdmVyRGF0YU9iamVjdHNQZXJOYW1lXSBFcnJvciBSZXBseSBmb3IgIitlKyIgUmVhc29uOiAiLHIuYm9keS5kZXNjcmlwdGlvbiksdChbXSkpfSl9KX19LHtrZXk6ImRpc2NvdmVyRGF0YU9iamVjdHNQZXJSZXBvcnRlckRPIix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgaT10aGlzLHM9YXJndW1lbnRzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKGUsdCl7aS5kaXNjb3ZlckRhdGFPYmplY3RzUGVyUmVwb3J0ZXIuYXBwbHkoaSxzKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlKGkuX2NvbnZlcnRUb0Rpc2NvdmVyZWRPYmplY3QodCkpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSl9KX0pfX0se2tleToiX2NvbnZlcnRUb0Rpc2NvdmVyZWRPYmplY3QiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIGUubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgYy5kZWZhdWx0KGUsdC5ydW50aW1lVVJMLHQuZGlzY292ZXJ5VVJMLHQubWVzc2FnZUJ1cyx0KX0pfX0se2tleToiZGlzY292ZXJEYXRhT2JqZWN0Iix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgaSxzPXRoaXM7aT1ufHxzLmRvbWFpbjt2YXIgYT17dHlwZToicmVhZCIsZnJvbTpzLmRpc2NvdmVyeVVSTCx0bzoiZG9tYWluOi8vcmVnaXN0cnkuIitpLGJvZHk6e3Jlc291cmNlOmUsY3JpdGVyaWE6e3Jlc291cmNlczpyLGRhdGFTY2hlbWVzOnR9fX07cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UoYSxmdW5jdGlvbihyKXtpZihsLmxvZygiW0Rpc2NvdmVyeV0iLHIpLHIuYm9keS5jb2RlPjI5OSlyZXR1cm4gbC53YXJuKCJbRGlzY292ZXJ5LmRpc2NvdmVyRGF0YU9iamVjdF0gRXJyb3IgUmVwbHkgZm9yICIrZSsiIFJlYXNvbjogIixyLmJvZHkuZGVzY3JpcHRpb24pLHQoW10pO3ZhciBuPXIuYm9keS52YWx1ZTt0KG58fFtdKX0pfSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydHkiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBpLHM9dGhpcyxhPSgwLHUuY29udmVydFRvVXNlclVSTCkoZSk7cmV0dXJuIGk9bnx8cy5kb21haW4sbmV3IG8uZGVmYXVsdChmdW5jdGlvbihvLHUpe2lmKGwubG9nKCJbRGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0eV0gQUNUSVZFIERPTUFJTiAtPiAiLGksInVzZXItPiIsZSwic2NoZW1hLT4iLHQsInJlc291cmNlcy0+IixyLCJkb21haW4tPiIsbiksZS5pbmNsdWRlcygiOiIpJiYhZS5pbmNsdWRlcygidXNlcjovLyIpKXJldHVybiBsLmxvZygiW0Rpc2NvdmVyeS5kaXNjb3Zlckh5cGVydHldICIrZSsiIGlzIGxlZ2FjeSBkb21haW4iKSxvKHt1c2VySUQ6ZSxoeXBlcnR5SUQ6ZSxzY2hlbWE6dCxyZXNvdXJjZXM6cn0pO3ZhciBjPXt0eXBlOiJyZWFkIixmcm9tOnMuZGlzY292ZXJ5VVJMLHRvOiJkb21haW46Ly9yZWdpc3RyeS4iK2ksYm9keTp7cmVzb3VyY2U6YSxjcml0ZXJpYTp7cmVzb3VyY2VzOnIsZGF0YVNjaGVtZXM6dH19fTtsLmluZm8oIltEaXNjb3ZlcnldIG1zZyB0byBzZW5kLT4iLGMpLHMubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShjLGZ1bmN0aW9uKGUpe2wuaW5mbygiW0Rpc2NvdmVyeV0gT04gZGlzY292ZXJIeXBlcnR5LT4iLGUpO3ZhciB0PWUuYm9keS52YWx1ZTt0P28odCk6dSgiTm8gSHlwZXJ0eSB3YXMgZm91bmQiKX0pfSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydHlQZXJVc2VyIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj12b2lkIDA7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obyxpKXtpZihlLmluY2x1ZGVzKCI6IikmJiFlLmluY2x1ZGVzKCJ1c2VyOi8vIikpcmV0dXJuIGwubG9nKCJbRGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0eV0gIitlKyJpcyBsZWdhY3kgZG9tYWluIiksbyh7aWQ6ZSxoeXBlcnR5VVJMOmUsZGVzY3JpcHRvcjoidW5rbm93biJ9KTtuPXR8fHIuZG9tYWluO3ZhciBzPSJ1c2VyOi8vIitlLnN1YnN0cmluZyhlLmluZGV4T2YoIkAiKSsxLGUubGVuZ3RoKSsiLyIrZS5zdWJzdHJpbmcoMCxlLmluZGV4T2YoIkAiKSksYT17dHlwZToicmVhZCIsZnJvbTpyLmRpc2NvdmVyeVVSTCx0bzoiZG9tYWluOi8vcmVnaXN0cnkuIituLGJvZHk6e3Jlc291cmNlOnN9fTtsLmluZm8oIltEaXNjb3ZlcnldIE1lc3NhZ2U6ICIsYSxuLHMpLHIubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShhLGZ1bmN0aW9uKHQpe2wuaW5mbygiW0Rpc2NvdmVyeV0gbWVzc2FnZSByZXBseSIsdCk7dmFyIHI9dm9pZCAwLG49dm9pZCAwLHM9dm9pZCAwLGE9dC5ib2R5LnZhbHVlO2ZvcihyIGluIGEpaWYodm9pZCAwIT09YVtyXS5sYXN0TW9kaWZpZWQpaWYodm9pZCAwPT09biluPW5ldyBEYXRlKGFbcl0ubGFzdE1vZGlmaWVkKSxzPXI7ZWxzZXt2YXIgdT1uZXcgRGF0ZShhW3JdLmxhc3RNb2RpZmllZCk7bi5nZXRUaW1lKCk8dS5nZXRUaW1lKCkmJihuPXUscz1yKX1sLmluZm8oIltEaXNjb3ZlcnldIExhc3QgSHlwZXJ0eTogIixzLG4pO3ZhciBjPXM7aWYodm9pZCAwPT09YylyZXR1cm4gaSgiVXNlciBIeXBlcnR5IG5vdCBmb3VuZCIpO3ZhciBkPXtpZDplLGRlc2NyaXB0b3I6YVtjXS5kZXNjcmlwdG9yLGh5cGVydHlVUkw6Y307bC5pbmZvKCJbRGlzY292ZXJ5XSA9PT0+IGh5cGVydHlEaXNjb3ZlcnkgbWVzc2FnZUJ1bmRsZTogIixkKSxvKGQpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlciIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49dm9pZCAwO3JldHVybiBsLmxvZygib24gRnVuY3Rpb24tPiIsZSksbmV3IG8uZGVmYXVsdChmdW5jdGlvbihvLGkpe2lmKGUuaW5jbHVkZXMoIjoiKSYmIWUuaW5jbHVkZXMoInVzZXI6Ly8iKSl7bC5sb2coIltEaXNjb3ZlcnkuZGlzY292ZXJIeXBlcnR5XSBpcyBsZWdhY3kgZG9tYWluIik7dmFyIHM9e3VzZXJJRDplLGh5cGVydHlJRDplLHNjaGVtYTpzY2hlbWEscmVzb3VyY2VzOnJlc291cmNlc307cmV0dXJuIG8ocyl9bj10fHxyLmRvbWFpbjt2YXIgYT0idXNlcjovLyIrZS5zdWJzdHJpbmcoZS5pbmRleE9mKCJAIikrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsZS5pbmRleE9mKCJAIikpLHU9e3R5cGU6InJlYWQiLGZyb206ci5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrbixib2R5OntyZXNvdXJjZTphfX07bC5sb2coIltEaXNjb3ZlcnldIE1lc3NhZ2UgZGlzY292ZXJIeXBlcnRpZXNQZXJVc2VyOiAiLHUsbixhKSxyLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UodSxmdW5jdGlvbihlKXtsLmluZm8oIltEaXNjb3ZlcnldIGRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlciByZXBseSIsZSk7dmFyIHQ9ZS5ib2R5LnZhbHVlO2lmKCF0KXJldHVybiBpKCJVc2VyIEh5cGVydHkgbm90IGZvdW5kIik7byh0KX0pfSl9fSx7a2V5OiJyZXN1bWVEaXNjb3ZlcmllcyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBsLmxvZygiW0Rpc2NvdmVyeV0gcmVzdW1lRGlzY292ZXJpZXMiKSxuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHQscil7dmFyIG49e3R5cGU6InJlYWQiLGZyb206ZS5kaXNjb3ZlcnlVUkwsdG86ZS5ydW50aW1lVVJMKyIvc3Vic2NyaXB0aW9ucyIsYm9keTp7cmVzb3VyY2U6ZS5kaXNjb3ZlcnlVUkx9fTtlLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UobixmdW5jdGlvbihyKXtsLmxvZygiW0Rpc2NvdmVyeS5yZXN1bWVEaXNjb3Zlcmllc10gcmVwbHk6ICIscik7dmFyIG49W107MjAwPT09ci5ib2R5LmNvZGU/KHIuYm9keS52YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciByPXQuc3BsaXQoIi9yZWdpc3RyYXRpb24iKVswXTtsLmxvZygiW0Rpc2NvdmVyeS5yZXN1bWVEaXNjb3Zlcmllc10gYWRkaW5nIGxpc3RlbmVyIHRvOiAiLHIpLHIuaW5jbHVkZXMoImh5cGVydHk6Ly8iKT9uLnB1c2goZS5kaXNjb3Zlckh5cGVydHlQZXJVUkxETyhyKSk6bi5wdXNoKGUuZGlzY292ZXJEYXRhT2JqZWN0UGVyVVJMRE8ocikpfSksby5kZWZhdWx0LmFsbChuKS50aGVuKGZ1bmN0aW9uKGUpe3QoZSl9KSk6dChbXSl9KX0pfX1dKSxlfSgpO3QuZGVmYXVsdD1kLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocigyNSkpLGk9bihyKDMpKSxzPW4ocigzMykpLGE9bihyKDUpKSx1PW4ocigzNCkpLGM9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChlLHIsbixhLHUpeygwLGkuZGVmYXVsdCkodGhpcyx0KTt2YXIgYz0oMCxzLmRlZmF1bHQpKHRoaXMsKHQuX19wcm90b19ffHwoMCxvLmRlZmF1bHQpKHQpKS5jYWxsKHRoaXMsZS5oeXBlcnR5SUR8fGUudXJsLHIsbixhKSk7cmV0dXJuIGMuX2RhdGE9ZSxjLl9kaXNjb3Zlcnk9dSxjfXJldHVybigwLHUuZGVmYXVsdCkodCxlKSwoMCxhLmRlZmF1bHQpKHQsW3trZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhfX1dKSwoMCxhLmRlZmF1bHQpKHQsW3trZXk6ImNoZWNrIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17Ym9keTp7fX07ZS5fZGlzY292ZXJlZE9iamVjdFVSTC5zdGFydHNXaXRoKCJoeXBlcnR5Oi8vIik/ZS5fZGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0eVBlclVSTChlLl9kaXNjb3ZlcmVkT2JqZWN0VVJMKS50aGVuKGZ1bmN0aW9uKHIpe3QuYm9keS5zdGF0dXM9ci5zdGF0dXMsZS5fcHJvY2Vzc05vdGlmaWNhdGlvbih0KX0pOmUuX2Rpc2NvdmVyeS5kaXNjb3ZlckRhdGFPYmplY3RzUGVyVVJMKGUuX2Rpc2NvdmVyZWRPYmplY3RVUkwpLnRoZW4oZnVuY3Rpb24ocil7dC5ib2R5LnN0YXR1cz1yLnN0YXR1cyxlLl9wcm9jZXNzTm90aWZpY2F0aW9uKHQpfSl9fV0pLHR9KG4oKHIoMTkpLHIoMTM0KSkpLmRlZmF1bHQpO3QuZGVmYXVsdD1jLGUuZXhwb3J0cz10LmRlZmF1bHR9LCwsLCwsLCwsZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDE4KSksaT1uKHIoMykpLHM9bihyKDUpKSxhPXIoMTkpLHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixuKXsoMCxpLmRlZmF1bHQpKHRoaXMsZSk7dmFyIG89dGhpcztvLm1lc3NhZ2VCdXM9bixvLmRvbWFpbj0oMCxhLmRpdmlkZVVSTCkodCkuZG9tYWluLG8ub3duZXI9dCxvLnJ1bnRpbWVVUkw9cn1yZXR1cm4oMCxzLmRlZmF1bHQpKGUsW3trZXk6ImRpc2NvdmVyVXNlclJlZ2lzdGVyZWQiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihuLG8pe3ZhciBpLHM9ZXx8Ii4iLGE9e3R5cGU6InJlYWQiLGZyb206aT10fHxyLm93bmVyLHRvOnIucnVudGltZVVSTCsiL3JlZ2lzdHJ5LyIsYm9keTp7cmVzb3VyY2U6cyxjcml0ZXJpYTppfX07ci5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKGEsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5ib2R5LnJlc291cmNlO3QmJjIwMD09PWUuYm9keS5jb2RlP24odCk6bygiY29kZTogIitlLmJvZHkuY29kZSsiIE5vIHVzZXIgd2FzIGZvdW5kIil9KX0pfX0se2tleToiZGlzY292ZXJJZGVudGl0eVBlcklkUCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihyLG4pe3ZhciBvPXt0eXBlOiJyZWFkIixmcm9tOnRoaXMub3duZXIsdG86dC5ydW50aW1lVVJMKyIvaWRtIixib2R5OntyZXNvdXJjZTplLGNyaXRlcmlhOiJpZHAifX07dC5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG8sZnVuY3Rpb24oZSl7MjAwPT09ZS5ib2R5LmNvZGU/cihlLmJvZHkudmFsdWUpOm4oZS5ib2R5LmNvZGUrIiAiK2UuYm9keS5kZXNjKX0pfSl9fV0pLGV9KCk7dC5kZWZhdWx0PXUsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDE4KSksaT1uKHIoNTgpKSxzPW4ocigzKSksYT1uKHIoNSkpLHU9bigocigxNTApLHIoMTM0KSkpLGM9bihyKDE3MikpLGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixuLG8saSxhKXtpZigoMCxzLmRlZmF1bHQpKHRoaXMsZSksIXQpdGhyb3cgRXJyb3IoIlN5bmNoZXIgaXMgYSBuZWNlc3NhcnkgZGVwZW5kZWN5Iik7aWYoIXIpdGhyb3cgRXJyb3IoIkRpc2NvdmVyIGlzIGEgbmVjZXNzYXJ5IGRlcGVuZGVjeSIpO2lmKCFuKXRocm93IEVycm9yKCJEb21haW4gaXMgYSBuZWNlc3NhcnkgZGVwZW5kZWN5Iik7aWYoIW8pdGhyb3cgRXJyb3IoIlNlYXJjaCBpcyBhIG5lY2Vzc2FyeSBkZXBlbmRlY3kiKTt2YXIgdT10aGlzO3UuX3N5bmNoZXI9dCx1LmRpc2NvdmVyeT1yLHUuc2VhcmNoPW8sdS5teUlkZW50aXR5PWksdS5jb250cm9sbGVyTW9kZT0icmVwb3J0ZXIiLHUuY2hpbGRfY3NlcT0wLHUuZG9tYWluPW4sdS5fbWFuYWdlcj1hO3ZhciBsPXQub3duZXI7dS5fb2JqZWN0RGVzY1VSTD0iaHlwZXJ0eS1jYXRhbG9ndWU6Ly9jYXRhbG9ndWUuIituKyIvLndlbGwta25vd24vZGF0YXNjaGVtYS9Db21tdW5pY2F0aW9uIix1Ll9pbnZpdGF0aW9uc0hhbmRsZXI9bmV3IGMuZGVmYXVsdChsKX1yZXR1cm4oMCxhLmRlZmF1bHQpKGUsW3trZXk6Il9zZXRPbkFkZENoaWxkTGlzdGVuZXIiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7ZS5vbkFkZENoaWxkKGZ1bmN0aW9uKGUpe3QuY2hpbGRfY3NlcSs9MSxjb25zb2xlLmluZm8oIltDaGF0TWFuYWdlci5DaGF0Q29udHJvbGxlci5fc2V0T25BZGRDaGlsZExpc3RlbmVyXSBuZXcgQ2hpbGQgcmVjZWl2ZWQ6ICIsZSksdC5fb25NZXNzYWdlJiZ0Ll9vbk1lc3NhZ2UoZSl9KX19LHtrZXk6Il9vblN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZGF0YU9iamVjdFJlcG9ydGVyO2UuYWNjZXB0KCksY29uc29sZS5sb2coIltDaGF0TWFuYWdlci5DaGF0Q29udHJvbGxlci5vblN1YnNjcmliZV0gZXZlbnQiLGUsdC51cmwpLGNvbnNvbGUubG9nKCJbQ2hhdE1hbmFnZXIuQ2hhdENvbnRyb2xsZXIub25TdWJzY3JpYmVdIE5ldyB1c2VyIGhhcyBzdWJzY3JpYmUgdGhpcyBvYmplY3Q6ICIsdC5kYXRhLGUuaWRlbnRpdHkpO3ZhciByPUpTT04ucGFyc2UoKDAsaS5kZWZhdWx0KShlLmlkZW50aXR5KSk7ci5oYXNPd25Qcm9wZXJ0eSgiYXNzZXJ0aW9uIikmJmRlbGV0ZSByLmFzc2VydGlvbjt2YXIgbj17aHlwZXJ0eVVSTDplLnVybCxkb21haW46ZS5kb21haW4saWRlbnRpdHk6cn0sbz1lLmlkZW50aXR5LnVzZXJQcm9maWxlLnVzZXJVUkw7Y29uc29sZS5sb2coIltDaGF0TWFuYWdlci5DaGF0Q29udHJvbGxlci5vblN1YnNjcmliZV0gIG5ldyBwYXJ0aWNpcGFudCIsbiksZS5pZGVudGl0eS5sZWdhY3kmJihuLmxlZ2FjeT1lLmlkZW50aXR5LmxlZ2FjeSksdC5kYXRhLnBhcnRpY2lwYW50c1tvXT1uLGNvbnNvbGUubG9nKCJbQ2hhdE1hbmFnZXIuQ2hhdENvbnRyb2xsZXIub25TdWJzY3JpYmVdIGNvbW11bmljYXRpb25PYmplY3QgT0JKIGNoYXRjb250cm9sbGVyIix0LmRhdGEucGFydGljaXBhbnRzKSxjb25zb2xlLmxvZygiW0NoYXRNYW5hZ2VyLkNoYXRDb250cm9sbGVyLm9uU3Vic2NyaWJlIC0gb25TdWJzY3JpcHRpb25dICIsbiksdGhpcy5fb25Vc2VyQWRkZWQmJnRoaXMuX29uVXNlckFkZGVkKG4pfX0se2tleToiX29uVW5zdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2RhdGFPYmplY3RSZXBvcnRlcjtjb25zb2xlLmxvZygiW0NoYXRNYW5hZ2VyLkNoYXRDb250cm9sbGVyLm9uVW5zdWJzY3JpYmVdIGV2ZW50IixlLHQudXJsKTt2YXIgcj1lLmlkZW50aXR5LnVzZXJQcm9maWxlO2NvbnNvbGUubG9nKCJbQ2hhdE1hbmFnZXIuQ2hhdENvbnRyb2xsZXIub25VbnN1YnNjcmliZV0gIHBhcnRpY2lwYW50IGxlZnQiLHIpLGUuaWRlbnRpdHkubGVnYWN5JiYoci5sZWdhY3k9ZS5pZGVudGl0eS5sZWdhY3kpLGRlbGV0ZSB0LmRhdGEucGFydGljaXBhbnRzW3IudXNlclVSTF0sY29uc29sZS5sb2coIltDaGF0TWFuYWdlci5DaGF0Q29udHJvbGxlci5vblVuc3Vic2NyaWJlIC0gdGhpcy5fb25Vc2VyUmVtb3ZlZF0gIix0aGlzLm9uVXNlclJlbW92ZWQpLHRoaXMuX29uVXNlclJlbW92ZWQmJnRoaXMuX29uVXNlclJlbW92ZWQocil9fSx7a2V5OiJzZW5kRmlsZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPSJyZXBvcnRlciI9PT10LmNvbnRyb2xsZXJNb2RlP3QuZGF0YU9iamVjdFJlcG9ydGVyOnQuZGF0YU9iamVjdE9ic2VydmVyO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7dmFyIGk9e3VzZXJQcm9maWxlOnQubXlJZGVudGl0eX07ci5hZGRIeXBlcnR5UmVzb3VyY2UoInJlc291cmNlcyIsImZpbGUiLGUsaSkudGhlbihmdW5jdGlvbihlKXt2YXIgbz17dmFsdWU6ZSxpZGVudGl0eTp7dXNlclByb2ZpbGU6dC5teUlkZW50aXR5fSxyZXNvdXJjZTplfSxpPW5ldyB1LmRlZmF1bHQoci51cmwsdC5fbWFuYWdlci5fcnVudGltZVVSTCx0Ll9tYW5hZ2VyLl9oeXBlcnR5VVJMLHQuX21hbmFnZXIuX2J1cyk7IWZ1bmN0aW9uIGUodCxyLG8saSl7dmFyIHM9aTt0LnNoYXJpbmdTdGF0dXMudGhlbihuKG8pKS5jYXRjaChmdW5jdGlvbihuKXtjb25zb2xlLmxvZygiW0NoYXRNYW5hZ2VyLkNoYXRDb250cm9sbGVyLnNlbmRGaWxlXSBzaGFyZSBmYWlsZWQ6ICIsbikscy5vbkxpdmUocixmdW5jdGlvbigpe3MudW5zdWJzY3JpYmVMaXZlKHIpLHQuc2hhcmUoITApLGUodCxyLG8scyl9KX0pfShlLHQuX21hbmFnZXIuX2h5cGVydHlVUkwsbyxpKX0pfSkuY2F0Y2goZnVuY3Rpb24oZSl7Y29uc29sZS5lcnJvcigiUmVhc29uOiIsZSkscmVqZWN0KGUpfSl9fSx7a2V5OiJzZW5kIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj0icmVwb3J0ZXIiPT09ci5jb250cm9sbGVyTW9kZT9yLmRhdGFPYmplY3RSZXBvcnRlcjpyLmRhdGFPYmplY3RPYnNlcnZlcjtyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihvLGkpe3IuY2hpbGRfY3NlcSs9MTt2YXIgcz17dHlwZToiY2hhdCIsY29udGVudDplfSxhPXR8fHt1c2VyUHJvZmlsZTpyLm15SWRlbnRpdHl9O24uYWRkQ2hpbGQoInJlc291cmNlcyIscyxhKS50aGVuKGZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKCJbQ2hhdE1hbmFnZXIuQ2hhdENvbnRyb2xsZXJdW2FkZENoaWxkIC0gQ2hhdCBNZXNzYWdlXTogIixlKTt2YXIgdD17Y2hpbGRJZDplLl9jaGlsZElkLGZyb206ZS5fb3duZXIsdmFsdWU6ZS5kYXRhLHR5cGU6ImNyZWF0ZSIsaWRlbnRpdHk6YX0saT1uZXcgdS5kZWZhdWx0KG4udXJsLHIuX21hbmFnZXIuX3J1bnRpbWVVUkwsci5fbWFuYWdlci5faHlwZXJ0eVVSTCxyLl9tYW5hZ2VyLl9idXMpOyFmdW5jdGlvbiBlKHQscixuLGkpe3ZhciBzPWk7dC5zaGFyaW5nU3RhdHVzLnRoZW4obyhuKSkuY2F0Y2goZnVuY3Rpb24obyl7cy5vbkxpdmUocixmdW5jdGlvbigpe3MudW5zdWJzY3JpYmVMaXZlKHIpLHQuc2hhcmUoITApLGUodCxyLG4scyl9KX0pfShlLHIuX21hbmFnZXIuX2h5cGVydHlVUkwsdCxpKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoIlJlYXNvbjoiLGUpLGkoZSl9KX0pfX0se2tleToib25DaGFuZ2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uQ2hhbmdlPWV9fSx7a2V5OiJvbk1lc3NhZ2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uTWVzc2FnZT1lfX0se2tleToib25Vc2VyQWRkZWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uVXNlckFkZGVkPWV9fSx7a2V5OiJvblVzZXJSZW1vdmVkIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblVzZXJSZW1vdmVkPWV9fSx7a2V5OiJvbkNsb3NlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbkNsb3NlPWV9fSx7a2V5OiJvblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vblJlc3BvbnNlPWV9fSx7a2V5OiJhZGRVc2VyIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZnVuY3Rpb24oZSl7cmV0dXJuIGNvbnNvbGUubG9nKCJFbGVtZW50OiIsZS5sZW5ndGgpLDAhPT1lLmxlbmd0aH07cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obixpKXtpZigwPT09ZS5maWx0ZXIocikubGVuZ3RoKXJldHVybiBpKCJEb24ndCBoYXZlIHVzZXJzIHRvIGludml0ZSIpO2NvbnNvbGUuaW5mbygiW0NoYXRNYW5hZ2VyLkNoYXRDb250cm9sbGVyLmFkZFVzZXJzIF06ICIsZSk7dmFyIHM9W10sYT1bXSx1PXt9O2UuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgcj10LmRpc2NvdmVyeS5kaXNjb3Zlckh5cGVydGllc0RPKGUudXNlcixbImNvbW0iXSxbImNoYXQiXSxlLmRvbWFpbik7cy5wdXNoKHIpfSksby5kZWZhdWx0LmFsbChzKS50aGVuKGZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKCJbQ2hhdE1hbmFnZXIuQ2hhdENvbnRyb2xsZXIuYWRkVXNlcnNdIFVzZXJzIERpc2NvdmVyeSBSZXN1bHRzLT4iLGUpO3ZhciByPVtdO2UuZm9yRWFjaChmdW5jdGlvbihlKXtlLmZvckVhY2goZnVuY3Rpb24oZSl7ImxpdmUiPT09ZS5kYXRhLnN0YXR1cz8oci5wdXNoKGUuZGF0YS5oeXBlcnR5SUQpLHVbZS5kYXRhLmh5cGVydHlJRF09ZSk6YS5sZW5ndGg8NSYmYS5wdXNoKGUpfSl9KSxjb25zb2xlLmluZm8oIltDaGF0TWFuYWdlci5DaGF0Q29udHJvbGxlcl0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gU3luY2hlciBDcmVhdGUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcbiIpLGNvbnNvbGUuaW5mbygiW0NoYXRNYW5hZ2VyLkNoYXRDb250cm9sbGVyXVNlbGVjdGVkIEh5cGVydGllczogISEhICIsciksY29uc29sZS5pbmZvKCJIYXZlICIrci5sZW5ndGgrIiB1c2VyczsiKTt2YXIgbj0icmVwb3J0ZXIiPT09dC5jb250cm9sbGVyTW9kZT90LmRhdGFPYmplY3RSZXBvcnRlcjp0LmRhdGFPYmplY3RPYnNlcnZlcjthLmxlbmd0aD4wJiZ0Ll9pbnZpdGF0aW9uc0hhbmRsZXIuaW52aXRlRGlzY29ubmVjdGVkSHlwZXJ0aWVzKGEsbiksbi5pbnZpdGVPYnNlcnZlcnMociksbi5pbnZpdGF0aW9ucy5sZW5ndGg+MCYmdC5faW52aXRhdGlvbnNIYW5kbGVyLnByb2Nlc3NJbnZpdGF0aW9ucyh1LG4pfSkudGhlbihmdW5jdGlvbigpe2NvbnNvbGUuaW5mbygiW0NoYXRNYW5hZ2VyLkNoYXRDb250cm9sbGVyXUFyZSBpbnZpdGVkIHdpdGggc3VjY2VzcyAiK2UubGVuZ3RoKyIgdXNlcnM7IiksbighMCl9KS5jYXRjaChmdW5jdGlvbihlKXtjb25zb2xlLmVycm9yKCJBbiBlcnJvciBvY2N1cnJlZCB3aGVuIHRyeWluZyB0byBpbnZpdGUgdXNlcnM7XG4iLGUpLGkoZSl9KX0pfX0se2tleToiYWRkVXNlclJlcSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWZ1bmN0aW9uKGUpe3JldHVybiBjb25zb2xlLmxvZygiRWxlbWVudDoiLGUubGVuZ3RoKSwwIT09ZS5sZW5ndGh9O3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7cmV0dXJuIDA9PT1lLmZpbHRlcihyKS5sZW5ndGg/bygiW0NoYXRNYW5hZ2VyLkNoYXRDb250cm9sbGVyLmFkZFVzZXJSZXFdIERvbid0IGhhdmUgdXNlcnMgdG8gYWRkIik6Im9ic2VydmVyIj09PSF0LmNvbnRyb2xsZXJNb2RlP28oIltDaGF0TWFuYWdlci5DaGF0Q29udHJvbGxlci5hZGRVc2VyUmVxXSBvbmx5IGFsbG93ZWQgdG8gQ2hhdCBPYnNlcnZlciIpOnZvaWQgMH0pfX0se2tleToib25JbnZpdGF0aW9uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uSW52aXRhdGlvblJlc3BvbnNlPWUsdGhpcy5faW52aXRhdGlvbnNIYW5kbGVyLmludml0YXRpb25SZXNwb25zZT1lfX0se2tleToicmVtb3ZlVXNlciIsdmFsdWU6ZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIltDaGF0TWFuYWdlci5DaGF0Q29udHJvbGxlcl1Ob3QgeWV0IGltcGxlbWVudGVkOiAiLGUpfX0se2tleToiY2xvc2UiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe2lmKCJyZXBvcnRlciI9PT1lLmNvbnRyb2xsZXJNb2RlKWUuX2ludml0YXRpb25zSGFuZGxlci5jbGVhbkludml0YXRpb25zKGUuZGF0YU9iamVjdFJlcG9ydGVyKS50aGVuKGZ1bmN0aW9uKCl7dHJ5e2RlbGV0ZSBlLl9tYW5hZ2VyLl9yZXBvcnRlcnNDb250cm9sbGVyc1tlLmRhdGFPYmplY3RSZXBvcnRlci51cmxdLGUuZGF0YU9iamVjdFJlcG9ydGVyLmRlbGV0ZSgpLHQoITApLGUuX29uQ2xvc2UmJmUuX29uQ2xvc2Uoe2NvZGU6MjAwLGRlc2M6ImRlbGV0ZWQiLHVybDplLmRhdGFPYmplY3RSZXBvcnRlci51cmx9KX1jYXRjaChlKXtjb25zb2xlLmVycm9yKGUpLHIoITEpfX0pO2Vsc2UgdHJ5e2RlbGV0ZSBlLl9tYW5hZ2VyLl9vYnNlcnZlcnNDb250cm9sbGVyc1tlLmRhdGFPYmplY3RPYnNlcnZlci51cmxdLGUuZGF0YU9iamVjdE9ic2VydmVyLnVuc3Vic2NyaWJlKCksdCghMCl9Y2F0Y2goZSl7Y29uc29sZS5lcnJvcihlKSxyKCExKX19KX19LHtrZXk6Imludml0YXRpb25zSGFuZGxlciIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ludml0YXRpb25zSGFuZGxlcn19LHtrZXk6InVybCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuInJlcG9ydGVyIj09PXRoaXMuY29udHJvbGxlck1vZGU/dGhpcy5kYXRhT2JqZWN0UmVwb3J0ZXIudXJsOnRoaXMuZGF0YU9iamVjdE9ic2VydmVyLnVybH19LHtrZXk6ImRhdGFPYmplY3RSZXBvcnRlciIsc2V0OmZ1bmN0aW9uKGUpe2lmKCFlKXRocm93IG5ldyBFcnJvcigiW0NoYXRDb250cm9sbGVyXSBUaGUgZGF0YSBvYmplY3QgcmVwb3J0ZXIgaXMgbmVjZXNzYXJ5IHBhcmFtZXRlciAiKTt2YXIgdD10aGlzO3QuY29udHJvbGxlck1vZGU9InJlcG9ydGVyIixlLm9uU3Vic2NyaXB0aW9uKGZ1bmN0aW9uKGUpe3N3aXRjaChlLnR5cGUpe2Nhc2Uic3Vic2NyaWJlIjp0Ll9vblN1YnNjcmliZShlKTticmVhaztjYXNlInVuc3Vic2NyaWJlIjp0Ll9vblVuc3Vic2NyaWJlKGUpfX0pLHQuX3NldE9uQWRkQ2hpbGRMaXN0ZW5lcihlKSxlLm9uUmVhZChmdW5jdGlvbihlKXtlLmFjY2VwdCgpfSksZS5vbkV4ZWN1dGUoZnVuY3Rpb24oZSl7c3dpdGNoKGUubWV0aG9kKXtjYXNlImFkZFVzZXIiOnQuYWRkVXNlcihlLnBhcmFtc1swXSkudGhlbihmdW5jdGlvbigpe2UuYWNjZXB0KCl9KS5jYXRjaChmdW5jdGlvbih0KXtjb25zb2xlLmVycm9yKCJSZWFzb246Iix0KSxlLnJlamVjdCh0KX0pO2JyZWFrO2Nhc2UicmVtb3ZlVXNlciI6dC5yZW1vdmVVc2VyKGUucGFyYW1zKS50aGVuKGZ1bmN0aW9uKCl7ZS5hY2NlcHQoKX0pLmNhdGNoKGZ1bmN0aW9uKHQpe2NvbnNvbGUuZXJyb3IoIlJlYXNvbjoiLHQpLGUucmVqZWN0KHQpfSk7YnJlYWs7ZGVmYXVsdDplLnJlamVjdCgiW0NoYXRDb250cm9sbGVyLm9uRXhlY3V0ZV0gQ2hhdCBtZXRob2QgZXhlY3V0aW9uIG5vdCBhY2NlcHRlZCBieSBSZXBvcnRlciIpfX0pLHQuX2RhdGFPYmplY3RSZXBvcnRlcj1lfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YU9iamVjdFJlcG9ydGVyfX0se2tleToibWVzc2FnZXMiLGdldDpmdW5jdGlvbigpe3JldHVybiJyZXBvcnRlciI9PT10aGlzLmNvbnRyb2xsZXJNb2RlP3RoaXMuX2RhdGFPYmplY3RSZXBvcnRlci5fY2hpbGRyZW5PYmplY3RzLnJlc291cmNlczp0aGlzLl9kYXRhT2JqZWN0T2JzZXJ2ZXIuX2NoaWxkcmVuT2JqZWN0cy5yZXNvdXJjZXN9fSx7a2V5OiJkYXRhT2JqZWN0T2JzZXJ2ZXIiLHNldDpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuY29udHJvbGxlck1vZGU9Im9ic2VydmVyIix0Ll9kYXRhT2JqZWN0T2JzZXJ2ZXI9ZSxlLm9uQ2hhbmdlKCIqIixmdW5jdGlvbihlKXtpZihjb25zb2xlLmluZm8oIltDaGF0TWFuYWdlci5DaGF0Q29udHJvbGxlcl1PYnNlcnZlciAtIG9uQ2hhbmdlIixlKSxlLmZpZWxkLmluY2x1ZGVzKCJwYXJ0aWNpcGFudHMiKSlzd2l0Y2goZS5jVHlwZSl7Y2FzZSJhZGQiOnQuX29uVXNlckFkZGVkJiZ0Ll9vblVzZXJBZGRlZChlKTticmVhaztjYXNlInJlbW92ZSI6dC5fb25Vc2VyUmVtb3ZlZCYmdC5fb25Vc2VyUmVtb3ZlZChlKX10Ll9vbkNoYW5nZSYmdC5fb25DaGFuZ2UoZSl9KSx0Ll9zZXRPbkFkZENoaWxkTGlzdGVuZXIoZSl9LGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhT2JqZWN0T2JzZXJ2ZXJ9fSx7a2V5OiJkYXRhT2JqZWN0IixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4icmVwb3J0ZXIiPT09dGhpcy5jb250cm9sbGVyTW9kZT90aGlzLmRhdGFPYmplY3RSZXBvcnRlcjp0aGlzLmRhdGFPYmplY3RPYnNlcnZlcn19LHtrZXk6ImNsb3NlRXZlbnQiLHNldDpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2Nsb3NlRXZlbnQ9ZSx0Ll9vbkNsb3NlJiZ0Ll9vbkNsb3NlKGUpfSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2xvc2VFdmVudH19XSksZX0oKTt0LmRlZmF1bHQ9bCxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LlVzZXJJbmZvPXZvaWQgMDt2YXIgbz1uKHIoMTcxKSksaT1uKHIoMykpLHM9cigxOSk7dC5Vc2VySW5mbz1mdW5jdGlvbiBlKHQscixuKXt2YXIgYTsoMCxpLmRlZmF1bHQpKHRoaXMsZSk7dmFyIHU9KDAscy5kZWVwQ2xvbmUpKG4pO3JldHVybiBuLmhhc093blByb3BlcnR5KCJ1c2VyUHJvZmlsZSIpfHwodS51c2VyUHJvZmlsZT1uKSxhPXtoeXBlcnR5VVJMOnQsZG9tYWluOnJ9LCgwLG8uZGVmYXVsdCkoYSwiZG9tYWluIixyKSwoMCxvLmRlZmF1bHQpKGEsImlkZW50aXR5Iix1KSxhfX0sLCwsLCwsLCwsLCwsLCwsLGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuQ2hhdENvbnRyb2xsZXI9dC5DaGF0TWFuYWdlcj12b2lkIDA7dmFyIG89bihyKDE2OCkpLGk9bihyKDE0OSkpO3QuQ2hhdE1hbmFnZXI9by5kZWZhdWx0LHQuQ2hhdENvbnRyb2xsZXI9aS5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoNzgpKSxpPW4ocigxOCkpLHM9bihyKDMpKSxhPW4ocig1KSksdT1uKHIoMTQ4KSksYz1uKHIoMTM4KSksbD1uKHIoMTMxKSksZD1yKDE5KSxmPW4ocigxNjkpKSxwPXIoMTcwKSx5PW4ocigxNDkpKSx2PXIoMTUwKSxoPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LHIsbixvKXtpZigoMCxzLmRlZmF1bHQpKHRoaXMsZSksIXQpdGhyb3cgbmV3IEVycm9yKCJbQ2hhdE1hbmFnZXIuY29uc3RydWN0b3JdIFRoZSBteVVybCBpcyBhIG5lZWRlZCBwYXJhbWV0ZXIiKTtpZighcil0aHJvdyBuZXcgRXJyb3IoIltDaGF0TWFuYWdlci5jb25zdHJ1Y3Rvcl0gVGhlIE1pbmlCdXMgaXMgYSBuZWVkZWQgcGFyYW1ldGVyIik7aWYoIW4pdGhyb3cgbmV3IEVycm9yKCJbQ2hhdE1hbmFnZXIuY29uc3RydWN0b3JdIFRoZSBjb25maWd1cmF0aW9uIGlzIGEgbmVlZGVkIHBhcmFtZXRlciIpO3ZhciBpPXRoaXM7b3x8KG89bmV3IGwuZGVmYXVsdCh0LHIsbikpLGkuX3J1bnRpbWVVUkw9bi5ydW50aW1lVVJMO3ZhciBhPSgwLGQuZGl2aWRlVVJMKShpLl9ydW50aW1lVVJMKS5kb21haW4seT1uZXcgYy5kZWZhdWx0KHQsbi5ydW50aW1lVVJMLHIpLHY9bmV3IHUuZGVmYXVsdCh0LG4ucnVudGltZVVSTCxyKTtpLl9vYmplY3REZXNjVVJMPSJoeXBlcnR5LWNhdGFsb2d1ZTovL2NhdGFsb2d1ZS4iK2ErIi8ud2VsbC1rbm93bi9kYXRhc2NoZW1hL0NvbW11bmljYXRpb24iLGkuX3JlcG9ydGVyc0NvbnRyb2xsZXJzPXt9LGkuX29ic2VydmVyc0NvbnRyb2xsZXJzPXt9LGkuX215VXJsPXQsaS5fYnVzPXIsaS5fc3luY2hlcj1vLGkuX2RvbWFpbj1hLGkuZGlzY292ZXJ5PXksaS5pZGVudGl0eU1hbmFnZXI9dixpLmN1cnJlbnRJZGVudGl0eSxpLnNlYXJjaD1uZXcgZi5kZWZhdWx0KHksdiksaS5jb21tdW5pY2F0aW9uT2JqZWN0PXAuY29tbXVuaWNhdGlvbk9iamVjdCxpLmNvbW11bmljYXRpb25DaGlsZHJlbj1wLmNvbW11bmljYXRpb25DaGlsZHJlbixjb25zb2xlLmxvZygiW0NoYXRNYW5hZ2VyXSBEaXNjb3ZlciAiLHkpLGNvbnNvbGUubG9nKCJbQ2hhdE1hbmFnZXJdIElkZW50aXR5IE1hbmFnZXIgIix2KX1yZXR1cm4oMCxhLmRlZmF1bHQpKGUsW3trZXk6InByb2Nlc3NOb3RpZmljYXRpb24iLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aWYoY29uc29sZS5sb2coIltDaGF0TWFuYWdlci5wcm9jZXNzTm90aWZpY2F0aW9uOiAiLGUpLCJjcmVhdGUiPT09ZS50eXBlJiZ0Ll9vbkludml0YXRpb24mJnQuX29uSW52aXRhdGlvbihlKSwiZGVsZXRlIj09PWUudHlwZSl7Zm9yKHZhciByIGluIGUuYWNrKDIwMCksdC5fb2JzZXJ2ZXJzQ29udHJvbGxlcnNbZS51cmxdLmNsb3NlRXZlbnQ9ZSxkZWxldGUgdC5fb2JzZXJ2ZXJzQ29udHJvbGxlcnNbZS51cmxdLHQuX29ic2VydmVyc0NvbnRyb2xsZXJzLmNsb3NlRXZlbnQ9ZSx0LmNvbW11bmljYXRpb25PYmplY3Q9cC5jb21tdW5pY2F0aW9uT2JqZWN0LHRoaXMuX3JlcG9ydGVyc0NvbnRyb2xsZXJzKXRoaXMuX3JlcG9ydGVyc0NvbnRyb2xsZXJzW3JdLmNsb3NlRXZlbnQoZSk7Zm9yKHZhciBuIGluIHRoaXMuX29ic2VydmVyc0NvbnRyb2xsZXJzKXRoaXMuX29ic2VydmVyc0NvbnRyb2xsZXJzW25dLmNsb3NlRXZlbnQoZSl9fX0se2tleToibXlJZGVudGl0eSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihyLG4pe2lmKGNvbnNvbGUuaW5mbygiW0NoYXRNYW5hZ2VyLm15SWRlbnRpdHldIiksZSlyZXR1cm4gcihlKTt0Ll9teVVybC5pbmNsdWRlcygiaHlwZXJ0eTovLyIpP3QuaWRlbnRpdHlNYW5hZ2VyLmRpc2NvdmVyVXNlclJlZ2lzdGVyZWQoKS50aGVuKGZ1bmN0aW9uKGUpe3IoZSl9KS5jYXRjaChmdW5jdGlvbihlKXtuKGUpfSk6dC5pZGVudGl0eU1hbmFnZXIuZGlzY292ZXJJZGVudGl0eVBlcklkUCgpLnRoZW4oZnVuY3Rpb24oZSl7cihlKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe24oZSl9KX0pfX0se2tleToiY3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTp7fSxuPXRoaXMscz1uLl9zeW5jaGVyO3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKGEsdSl7bi5jb21tdW5pY2F0aW9uT2JqZWN0PXAuY29tbXVuaWNhdGlvbk9iamVjdCxuLmNvbW11bmljYXRpb25PYmplY3QuY3NlcT0xLG4uY29tbXVuaWNhdGlvbk9iamVjdC5zdGFydGluZ1RpbWU9KG5ldyBEYXRlKS50b0pTT04oKSxuLmNvbW11bmljYXRpb25PYmplY3Quc3RhdHVzPXAuQ29tbXVuaWNhdGlvblN0YXR1cy5PUEVOO3ZhciBjPXZvaWQgMDtuLm15SWRlbnRpdHkoKS50aGVuKGZ1bmN0aW9uKGwpe2M9bCxjb25zb2xlLmxvZygiW0NoYXRNYW5hZ2VyLmNyZWF0ZSBdIE15IElkZW50aXR5IixsKTt2YXIgZD1uZXcgdi5Vc2VySW5mbyhuLl9teVVybCxuLl9kb21haW4sbCk7bi5jb21tdW5pY2F0aW9uT2JqZWN0LnBhcnRpY2lwYW50c1tsLnVzZXJVUkxdPWQsY29uc29sZS5sb2coIltDaGF0TWFuYWdlci5jcmVhdGUgXSBwYXJ0aWNpcGFudHM6ICIsbi5jb21tdW5pY2F0aW9uT2JqZWN0LnBhcnRpY2lwYW50cyksY29uc29sZS5sb2coIltDaGF0TWFuYWdlci5jcmVhdGUgXSBjb21tdW5pY2F0aW9uT2JqZWN0IixuLmNvbW11bmljYXRpb25PYmplY3QpLGNvbnNvbGUuaW5mbygiW0NoYXRNYW5hZ2VyLmNyZWF0ZV0gc2VhcmNoaW5nICIrdCk7dmFyIGY9W10scD1bXSxoPXt9O3QuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgdD1uLmRpc2NvdmVyeS5kaXNjb3Zlckh5cGVydGllc0RPKGUudXNlcixbImNvbW0iXSxbImNoYXQiXSxlLmRvbWFpbik7Zi5wdXNoKHQpfSksaS5kZWZhdWx0LmFsbChmKS50aGVuKGZ1bmN0aW9uKHQpe2NvbnNvbGUubG9nKCJbQ2hhdE1hbmFnZXIuY3JlYXRlXSBVc2VycyBEaXNjb3ZlcnkgUmVzdWx0cy0+Iix0KTt2YXIgaT1bXTt0LmZvckVhY2goZnVuY3Rpb24oZSl7ZS5mb3JFYWNoKGZ1bmN0aW9uKGUpeyJsaXZlIj09PWUuZGF0YS5zdGF0dXM/KGkucHVzaChlLmRhdGEuaHlwZXJ0eUlEKSxoW2UuZGF0YS5oeXBlcnR5SURdPWUpOnAubGVuZ3RoPDUmJnAucHVzaChlKX0pfSksY29uc29sZS5pbmZvKCJbQ2hhdE1hbmFnZXJdIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gU3luY2hlciBDcmVhdGUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBcbiIpLGNvbnNvbGUuaW5mbygiW0NoYXRNYW5hZ2VyXSBTZWxlY3RlZCBIeXBlcnRpZXM6ICEhISAiLGkpLGNvbnNvbGUuaW5mbygiSGF2ZSAiK2kubGVuZ3RoKyIgdXNlcnM7Iik7dmFyIGE9KDAsby5kZWZhdWx0KSh7cmVzb3VyY2VzOlsiY2hhdCJdLG11dHVhbDohMH0scik7cmV0dXJuIGRlbGV0ZSBhLm5hbWUsY29uc29sZS5pbmZvKCJbQ2hhdE1hbmFnZXJdIGlucHV0IGRhdGE6IixhKSxzLmNyZWF0ZShuLl9vYmplY3REZXNjVVJMLGksbi5jb21tdW5pY2F0aW9uT2JqZWN0LCEwLCExLGUse30sYSl9KS50aGVuKGZ1bmN0aW9uKGUpe2NvbnNvbGUuaW5mbygiW0NoYXRNYW5hZ2VyXSAzLiBSZXR1cm4gQ3JlYXRlIERhdGEgT2JqZWN0IFJlcG9ydGVyIixlKTt2YXIgdD1uZXcgeS5kZWZhdWx0KHMsbi5kaXNjb3Zlcnksbi5fZG9tYWluLG4uc2VhcmNoLGMsbik7dC5kYXRhT2JqZWN0UmVwb3J0ZXI9ZSxuLl9yZXBvcnRlcnNDb250cm9sbGVyc1tlLnVybF09dCxjb25zb2xlLmxvZygiW0NoYXRNYW5hZ2VyXSBjaGF0Q29udHJvbGxlciBpbnZpdGF0aW9uc0hhbmRsZXI6ICIsdC5pbnZpdGF0aW9uc0hhbmRsZXIpLGUuaW52aXRhdGlvbnMubGVuZ3RoPjAmJnQuaW52aXRhdGlvbnNIYW5kbGVyLnByb2Nlc3NJbnZpdGF0aW9ucyhoLGUpLHAubGVuZ3RoPjAmJnQuaW52aXRhdGlvbnNIYW5kbGVyLmludml0ZURpc2Nvbm5lY3RlZEh5cGVydGllcyhwLGUpLGEodCl9KS5jYXRjaChmdW5jdGlvbihlKXt1KGUpfSl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gY29uc29sZS5sb2coIltDaGF0TWFuYWdlci5jcmVhdGVdIE15SWRlbnRpdHkgRXJyb3I6IixlKSx1KGUpfSl9KX19LHtrZXk6Im9uSW52aXRhdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25JbnZpdGF0aW9uPWV9fSx7a2V5OiJqb2luIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD0hKGFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdKXx8YXJndW1lbnRzWzFdLHI9YXJndW1lbnRzWzJdLG49dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihvLGkpe3ZhciBzPW4uX3N5bmNoZXIsYT12b2lkIDA7Y29uc29sZS5pbmZvKCJbQ2hhdE1hbmFnZXJdIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBTeW5jaGVyIHN1YnNjcmliZSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFxuIiksY29uc29sZS5pbmZvKCJpbnZpdGF0aW9uVVJMIixlKSxuLm15SWRlbnRpdHkocikudGhlbihmdW5jdGlvbihyKXtyZXR1cm4gYT1yLHMuc3Vic2NyaWJlKG4uX29iamVjdERlc2NVUkwsZSwhMCwhMSx0LHIpfSkudGhlbihmdW5jdGlvbihlKXtjb25zb2xlLmluZm8oIkRhdGEgT2JqZWN0IE9ic2VydmVyOiAiLGUpO3ZhciB0PW5ldyB5LmRlZmF1bHQocyxuLmRpc2NvdmVyeSxuLl9kb21haW4sbi5zZWFyY2gsYSxuKTtvKHQpLHQuZGF0YU9iamVjdE9ic2VydmVyPWUsbi5fb2JzZXJ2ZXJzQ29udHJvbGxlcnNbZS51cmxdPXR9KS5jYXRjaChmdW5jdGlvbihlKXtpKGUpfSl9KX19XSksZX0oKTt0LmRlZmF1bHQ9aCxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoNDIpKSxpPW4ocigxOCkpLHM9bihyKDMpKSxhPW4ocig1KSksdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyKXtpZigoMCxzLmRlZmF1bHQpKHRoaXMsZSksIXQpdGhyb3cgbmV3IEVycm9yKCJUaGUgZGlzY292ZXJ5IGNvbXBvbmVudCBpcyBhIG5lZWRlZCBwYXJhbWV0ZXIiKTtpZighcil0aHJvdyBuZXcgRXJyb3IoIlRoZSBpZGVudGl0eU1hbmFnZXIgY29tcG9uZW50IGlzIGEgbmVlZGVkIHBhcmFtZXRlciIpO3RoaXMuZGlzY292ZXJ5PXQsdGhpcy5pZGVudGl0eU1hbmFnZXI9cn1yZXR1cm4oMCxhLmRlZmF1bHQpKGUsW3trZXk6Im15SWRlbnRpdHkiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbih0LHIpe2UuaWRlbnRpdHlNYW5hZ2VyLmRpc2NvdmVyVXNlclJlZ2lzdGVyZWQoKS50aGVuKGZ1bmN0aW9uKGUpe3QoZSl9KS5jYXRjaChmdW5jdGlvbihlKXtyKGUpfSl9KX19LHtrZXk6Imh5cGVydGllcyIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe2FyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdJiZhcmd1bWVudHNbM119fSx7a2V5OiJ1c2VycyIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIHM9YXJndW1lbnRzLmxlbmd0aD40JiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0mJmFyZ3VtZW50c1s0XTtpZighZSl0aHJvdyBuZXcgRXJyb3IoIllvdSBuZWVkIHRvIHByb3ZpZGUgYSBsaXN0IG9mIHVzZXJzIik7aWYoIXQpdGhyb3cgbmV3IEVycm9yKCJZb3UgbmVlZCB0byBwcm92aWRlIGEgbGlzdCBvZiBkb21haW5zIik7aWYoIW4pdGhyb3cgbmV3IEVycm9yKCJZb3UgbmVlZCB0byBwcm92aWRlIGEgbGlzdCBvZiByZXNvdXJjZXMiKTtpZighcil0aHJvdyBuZXcgRXJyb3IoIllvdSBuZWVkIHRvIHByb3ZpZGUgYSBsaXN0IG9mIHNjaGVtZXMiKTt2YXIgYT10aGlzO3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKHUsYyl7aWYoY29uc29sZS5pbmZvKCJbU2VhcmNoXSBVc2VyczogIixlLGUubGVuZ3RoKSxjb25zb2xlLmluZm8oIltTZWFyY2hdIERvbWFpbnM6ICIsdCx0Lmxlbmd0aCksMD09PWUubGVuZ3RoKWNvbnNvbGUuaW5mbygiRG9uJ3QgaGF2ZSB1c2VycyB0byBkaXNjb3ZlcnkiKSx1KGUpO2Vsc2V7dmFyIGw9W107ZS5mb3JFYWNoKGZ1bmN0aW9uKGUsbyl7dmFyIGk9dFtvXTtjb25zb2xlLmluZm8oIltTZWFyY2hdIFNlYXJjaCB1c2VyICIrZSsiIGZvciBwcm92aWRlZCBkb21haW46IixpKSxzP2wucHVzaChhLmRpc2NvdmVyeS5kaXNjb3Zlckh5cGVydGllc1BlclVzZXJQcm9maWxlRGF0YShlLHIsbikpOmwucHVzaChhLmRpc2NvdmVyeS5kaXNjb3Zlckh5cGVydGllcyhlLHIsbixpKSl9KSxjb25zb2xlLmluZm8oIlJlcXVlc3RzIHByb21pc2VzOiAiLGwpLGkuZGVmYXVsdC5hbGwobC5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gZX0sZnVuY3Rpb24oZSl7cmV0dXJuIGV9KX0pKS50aGVuKGZ1bmN0aW9uKGUpe2NvbnNvbGUuaW5mbygiW1NlYXJjaF0gSHlwZXJ0aWVzIGZyb20gbmV3IERpc2NvdmVyeSIsZSk7dmFyIHQ9ZS5tYXAoZnVuY3Rpb24oZSl7aWYoZS5oYXNPd25Qcm9wZXJ0eSgiaHlwZXJ0eUlEIikpcmV0dXJuIGU7dmFyIHQ9KDAsby5kZWZhdWx0KShlKS5yZWR1Y2VSaWdodChmdW5jdGlvbih0LHIpe3ZhciBuPW5ldyBEYXRlKGVbcl0ubGFzdE1vZGlmaWVkKTtyZXR1cm4gbmV3IERhdGUoZVt0XS5sYXN0TW9kaWZpZWQpLmdldFRpbWUoKTxuLmdldFRpbWUoKT9yOnR9KTtyZXR1cm4gZVt0XX0pLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS5oYXNPd25Qcm9wZXJ0eSgiaHlwZXJ0eUlEIil9KTtjb25zb2xlLmxvZygiUmVxdWVzdHMgcmVzdWx0OiAiLHQpLGUuZm9yRWFjaChmdW5jdGlvbihlKXtpZigiTm8gSHlwZXJ0eSB3YXMgZm91bmQiIT09ZSlyZXR1cm4gdSh0KX0pLGMoIk5vIEh5cGVydHkgd2FzIGZvdW5kIil9KS5jYXRjaChmdW5jdGlvbih0KXtjb25zb2xlLmVycm9yKHQpLHUoZSl9KX19KX19XSksZX0oKTt0LmRlZmF1bHQ9dSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KSx0LkNvbW11bmljYXRpb25TdGF0dXM9e09QRU46Im9wZW4iLFBFTkRJTkc6InBlbmRpbmciLENMT1NFRDoiY2xvc2VkIixQQVVTRUQ6InBhdXNlZCIsRkFJTEVEOiJmYWlsZWQifSx0LmNvbW11bmljYXRpb25PYmplY3Q9e3N0YXJ0aW5nVGltZToiIixzdGF0dXM6IiIscGFydGljaXBhbnRzOnt9fSx0LmNvbW11bmljYXRpb25DaGlsZHJlbj17cGFyZW50OiJjb21tdW5pY2F0aW9uIixsaXN0ZW5lcjoicmVzb3VyY2VzIix0eXBlOiJIeXBlcnR5UmVzb3VyY2UifX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt0Ll9fZXNNb2R1bGU9ITA7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fShyKDU5KSk7dC5kZWZhdWx0PWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gdCBpbiBlPygwLG4uZGVmYXVsdCkoZSx0LHt2YWx1ZTpyLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1yLGV9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoNDIpKSxpPW4ocigxOCkpLHM9bihyKDMpKSxhPW4ocig1KSksdT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7aWYoKDAscy5kZWZhdWx0KSh0aGlzLGUpLCF0KXRocm93IEVycm9yKCJoeXBlcnR5VVJMIGlzIGEgbmVjZXNzYXJ5IGRlcGVuZGVjeSIpO3RoaXMuX2h5cGVydHlVUkw9dCx0aGlzLl9wZW5kaW5nPXt9fXJldHVybigwLGEuZGVmYXVsdCkoZSxbe2tleToiaW52aXRlRGlzY29ubmVjdGVkSHlwZXJ0aWVzIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7Y29uc29sZS5sb2coIltHcm91cENoYXRNYW5hZ2VyLkludml0YXRpb25zSGFuZGxlci5pbnZpdGVEaXNjb25uZWN0ZWRIeXBlcnRpZXNdIGxldHMgaW52aXRlICIsZSksZS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3IuX3BlbmRpbmdbdF18fChyLl9wZW5kaW5nW3RdPXt9KSxyLl9wZW5kaW5nW3RdW2UuZGF0YS5oeXBlcnR5SURdPWUsZS5vbkxpdmUoci5faHlwZXJ0eVVSTCxmdW5jdGlvbigpe2NvbnNvbGUubG9nKCJbR3JvdXBDaGF0TWFuYWdlci5jcmVhdGVdIGRpc2Nvbm5lY3RlZCBIeXBlcnR5IGlzIGJhY2sgdG8gbGl2ZSIsZSksdC5pbnZpdGVPYnNlcnZlcnMoW2UuZGF0YS5oeXBlcnR5SURdKSxlLnVuc3Vic2NyaWJlTGl2ZShyLl9oeXBlcnR5VVJMKSxkZWxldGUgci5fcGVuZGluZ1t0XVtlLmRhdGEuaHlwZXJ0eUlEXX0pfSl9fSx7a2V5OiJwcm9jZXNzSW52aXRhdGlvbnMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPXRoaXMsbz10Lmludml0YXRpb25zfHxbXTtjb25zb2xlLmxvZygiW0dyb3VwQ2hhdE1hbmFnZXIuSW52aXRhdGlvbnNIYW5kbGVyLnByb2Nlc3NJbnZpdGF0aW9uc10gd2FpdGluZyBmb3IgcmVwbGllcyAiLG8sdGhpcy5faW52aXRhdGlvbnNSZXNwb25zZSksby5mb3JFYWNoKGZ1bmN0aW9uKG8pe28udGhlbihmdW5jdGlvbihlKXtjb25zb2xlLmxvZygiW0dyb3VwQ2hhdE1hbmFnZXIuSW52aXRhdGlvbnNIYW5kbGVyLnByb2Nlc3NJbnZpdGF0aW9uc10gLSBPSzogIixlLHIuX2ludml0YXRpb25zUmVzcG9uc2UpLHIuX2ludml0YXRpb25zUmVzcG9uc2UmJnIuX2ludml0YXRpb25zUmVzcG9uc2UoZSl9KS5jYXRjaChmdW5jdGlvbihvKXtjb25zb2xlLmxvZygiW0dyb3VwQ2hhdE1hbmFnZXIuSW52aXRhdGlvbnNIYW5kbGVyLnByb2Nlc3NJbnZpdGF0aW9uc10gLSBOT1QgT0s6ICIsbyxyLl9pbnZpdGF0aW9uc1Jlc3BvbnNlKSxyLl9pbnZpdGF0aW9uc1Jlc3BvbnNlJiZyLl9pbnZpdGF0aW9uc1Jlc3BvbnNlKG8pLG4uaW52aXRlRGlzY29ubmVjdGVkSHlwZXJ0aWVzKFtlW28uaW52aXRlZF1dLHQpfSl9KX19LHtrZXk6InJlc3VtZURpc2NvdmVyaWVzIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24obixzKXt2YXIgYT17fSx1PVtdLGM9W10sbD1bXTtlLnJlc3VtZURpc2NvdmVyaWVzKCkudGhlbihmdW5jdGlvbihlKXtjb25zb2xlLmxvZygiW0dyb3VwQ2hhdE1hbmFnZXIuSW52aXRhdGlvbnNIYW5kbGVyLnJlc3VtZURpc2NvdmVyaWVzXSBmb3VuZDogIixlKSxlLmZvckVhY2goZnVuY3Rpb24oZSl7ZS5kYXRhLnJlc291cmNlcyYmImNoYXQiPT09ZS5kYXRhLnJlc291cmNlc1swXSYmKGNvbnNvbGUubG9nKCJbR3JvdXBDaGF0TWFuYWdlci5JbnZpdGF0aW9uc0hhbmRsZXIucmVzdW1lRGlzY292ZXJpZXNdIHJlc3VtaW5nOiAiLGUpLCJsaXZlIj09PWUuZGF0YS5zdGF0dXM/KGFbZS5kYXRhLmh5cGVydHlJRF09ZSx1LnB1c2goZS5kYXRhLmh5cGVydHlJRCksbC5wdXNoKGUudW5zdWJzY3JpYmVMaXZlKHIuX2h5cGVydHlVUkwpKSk6Yy5wdXNoKGUpKX0pLGMubGVuZ3RoPjAmJnIuaW52aXRlRGlzY29ubmVjdGVkSHlwZXJ0aWVzKGMsdCksKDAsby5kZWZhdWx0KShhKS5sZW5ndGg+MD8odC5pbnZpdGVPYnNlcnZlcnModSksdC5pbnZpdGF0aW9ucy5sZW5ndGg+MCYmci5wcm9jZXNzSW52aXRhdGlvbnMoYSx0KSxpLmRlZmF1bHQuYWxsKGwpLnRoZW4oZnVuY3Rpb24oKXtuKCl9KSk6bigpfSl9KS5jYXRjaChmdW5jdGlvbihlKXtyZWplY3QoIltHcm91cENoYXRNYW5hZ2VyLkludml0YXRpb25zSGFuZGxlci5yZXN1bWVEaXNjb3Zlcmllc10gZmFpbGVkIHwgIixlKX0pfX0se2tleToiY2xlYW5JbnZpdGF0aW9ucyIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXQuX3BlbmRpbmdbZV07cmV0dXJuIGNvbnNvbGUubG9nKCJbR3JvdXBDaGF0TWFuYWdlci5JbnZpdGF0aW9uc0hhbmRsZXIuY2xlYW5JbnZpdGF0aW9uc10gIixyKSxyP25ldyBpLmRlZmF1bHQoZnVuY3Rpb24oZSxuKXt2YXIgcz0oMCxvLmRlZmF1bHQpKHIpLGE9W107cy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2EucHVzaChyW2VdLnVuc3Vic2NyaWJlTGl2ZSh0Ll9oeXBlcnR5VVJMKSl9KSxpLmRlZmF1bHQuYWxsKHMpLnRoZW4oZnVuY3Rpb24oKXtlKCl9KX0pOmkuZGVmYXVsdC5yZXNvbHZlKCl9fSx7a2V5OiJpbnZpdGF0aW9uUmVzcG9uc2UiLHNldDpmdW5jdGlvbihlKXt0aGlzLl9pbnZpdGF0aW9uc1Jlc3BvbnNlPWV9fV0pLGV9KCk7dC5kZWZhdWx0PXUsZS5leHBvcnRzPXQuZGVmYXVsdH1dKX0pfSxmdW5jdGlvbihlLHQscil7IWZ1bmN0aW9uKHQscil7ZS5leHBvcnRzPXIoKX0oInVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQobil7aWYocltuXSlyZXR1cm4gcltuXS5leHBvcnRzO3ZhciBvPXJbbl09e2k6bixsOiExLGV4cG9ydHM6e319O3JldHVybiBlW25dLmNhbGwoby5leHBvcnRzLG8sby5leHBvcnRzLHQpLG8ubD0hMCxvLmV4cG9ydHN9dmFyIHI9e307cmV0dXJuIHQubT1lLHQuYz1yLHQuZD1mdW5jdGlvbihlLHIsbil7dC5vKGUscil8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIse2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiEwLGdldDpufSl9LHQubj1mdW5jdGlvbihlKXt2YXIgcj1lJiZlLl9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiBlfTtyZXR1cm4gdC5kKHIsImEiLHIpLHJ9LHQubz1mdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX0sdC5wPSIiLHQodC5zPTE5NCl9KHswOmZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5leHBvcnRzPXt2ZXJzaW9uOiIyLjUuNyJ9OyJudW1iZXIiPT10eXBlb2YgX19lJiYoX19lPXIpfSwxOmZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5leHBvcnRzPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLk1hdGg9PU1hdGg/c2VsZjpGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpOyJudW1iZXIiPT10eXBlb2YgX19nJiYoX19nPXIpfSwxMDpmdW5jdGlvbihlLHQpe3ZhciByPXt9Lmhhc093blByb3BlcnR5O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybiByLmNhbGwoZSx0KX19LDExOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDgpLG89cigxNik7ZS5leHBvcnRzPXIoNCk/ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBuLmYoZSx0LG8oMSxyKSl9OmZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZVt0XT1yLGV9fSwxMTk6ZnVuY3Rpb24oZSx0LHIpe3IoMTIwKSxlLmV4cG9ydHM9cigwKS5PYmplY3QuYXNzaWdufSwxMjpmdW5jdGlvbihlLHQscil7dmFyIG49cig1NSksbz1yKDMwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4obyhlKSl9fSwxMjA6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNik7bihuLlMrbi5GLCJPYmplY3QiLHthc3NpZ246cigxMjEpfSl9LDEyMTpmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMjApLG89cig0MyksaT1yKDI5KSxzPXIoMzIpLGE9cig1NSksdT1PYmplY3QuYXNzaWduO2UuZXhwb3J0cz0hdXx8cigxMykoZnVuY3Rpb24oKXt2YXIgZT17fSx0PXt9LHI9U3ltYm9sKCksbj0iYWJjZGVmZ2hpamtsbW5vcHFyc3QiO3JldHVybiBlW3JdPTcsbi5zcGxpdCgiIikuZm9yRWFjaChmdW5jdGlvbihlKXt0W2VdPWV9KSw3IT11KHt9LGUpW3JdfHxPYmplY3Qua2V5cyh1KHt9LHQpKS5qb2luKCIiKSE9bn0pP2Z1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXMoZSksdT1hcmd1bWVudHMubGVuZ3RoLGM9MSxsPW8uZixkPWkuZjt1PmM7KWZvcih2YXIgZixwPWEoYXJndW1lbnRzW2MrK10pLHk9bD9uKHApLmNvbmNhdChsKHApKTpuKHApLHY9eS5sZW5ndGgsaD0wO3Y+aDspZC5jYWxsKHAsZj15W2grK10pJiYocltmXT1wW2ZdKTtyZXR1cm4gcn06dX0sMTM6ZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKGUpe3JldHVybiEwfX19LDE0OmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDI0KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gocil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gZS5jYWxsKHQscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixuKXtyZXR1cm4gZS5jYWxsKHQscixuKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG4sbyl7cmV0dXJuIGUuY2FsbCh0LHIsbixvKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LDE1OmZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSEwfSwxNTE6ZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDc4KSksaT1uKHIoMykpO3QuZGVmYXVsdD1mdW5jdGlvbiBlKHQscixuLHMsYSx1KXsoMCxpLmRlZmF1bHQpKHRoaXMsZSksdCYmKHRoaXMucHJlZmVycmVkX3VzZXJuYW1lPXQpLG4mJih0aGlzLnBpY3R1cmU9bikscyYmKHRoaXMubmFtZT1zKSxhJiYodGhpcy5sb2NhbGU9YSksciYmKHRoaXMudXNlclVSTD1yKSx1JiYoMCxvLmRlZmF1bHQpKHRoaXMsdSl9LGUuZXhwb3J0cz10LmRlZmF1bHR9LDE2OmZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJue2VudW1lcmFibGU6ISgxJmUpLGNvbmZpZ3VyYWJsZTohKDImZSksd3JpdGFibGU6ISg0JmUpLHZhbHVlOnR9fX0sMTk0OmZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuVXNlclByb2ZpbGU9dm9pZCAwO3ZhciBvPW4ocigxNTEpKSxpPW4ocigxOTUpKTt0LlVzZXJQcm9maWxlPW8uZGVmYXVsdCx0LmRlZmF1bHQ9aS5kZWZhdWx0fSwxOTU6ZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDMpKSxpPW4ocigxNTEpKTt0LmRlZmF1bHQ9ZnVuY3Rpb24gZSh0LHIsbixzLGEsdSxjLGwpe2lmKCgwLG8uZGVmYXVsdCkodGhpcyxlKSwhdSl0aHJvdyBuZXcgRXJyb3IoIklEUCBzaG91bGQgYmUgYSBwYXJhbWV0ZXIiKTtpZighdCl0aHJvdyBuZXcgRXJyb3IoInVzZXJuYW1lIHNob3VsZCBiZSBhIHBhcmFtZXRlciIpO3RoaXMuaWRwPXUsYyYmKHRoaXMuYXNzZXJ0aW9uPWMpLHRoaXMudXNlclByb2ZpbGU9bmV3IGkuZGVmYXVsdCh0LHIsbixzLGEsbCl9LGUuZXhwb3J0cz10LmRlZmF1bHR9LDIwOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDQ1KSxvPXIoMzcpO2UuZXhwb3J0cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSxvKX19LDIxOmZ1bmN0aW9uKGUsdCl7dmFyIHI9e30udG9TdHJpbmc7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiByLmNhbGwoZSkuc2xpY2UoOCwtMSl9fSwyMzpmdW5jdGlvbihlLHQpe3ZhciByPTAsbj1NYXRoLnJhbmRvbSgpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4iU3ltYm9sKCIuY29uY2F0KHZvaWQgMD09PWU/IiI6ZSwiKV8iLCgrK3IrbikudG9TdHJpbmcoMzYpKX19LDI0OmZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIGV9fSwyNzpmdW5jdGlvbihlLHQscil7dmFyIG49cig3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighbihlKSlyZXR1cm4gZTt2YXIgcixvO2lmKHQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87aWYoImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS52YWx1ZU9mKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO2lmKCF0JiYiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnRvU3RyaW5nKSYmIW4obz1yLmNhbGwoZSkpKXJldHVybiBvO3Rocm93IFR5cGVFcnJvcigiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlIil9fSwyODpmdW5jdGlvbihlLHQscil7dmFyIG49cig3KSxvPXIoMSkuZG9jdW1lbnQsaT1uKG8pJiZuKG8uY3JlYXRlRWxlbWVudCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpP28uY3JlYXRlRWxlbWVudChlKTp7fX19LDI5OmZ1bmN0aW9uKGUsdCl7dC5mPXt9LnByb3BlcnR5SXNFbnVtZXJhYmxlfSwzOmZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD1mdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfX0sMzA6ZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYodm9pZCAwPT1lKXRocm93IFR5cGVFcnJvcigiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gICIrZSk7cmV0dXJuIGV9fSwzMTpmdW5jdGlvbihlLHQpe3ZhciByPU1hdGguY2VpbCxuPU1hdGguZmxvb3I7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBpc05hTihlPStlKT8wOihlPjA/bjpyKShlKX19LDMyOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMwKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdChuKGUpKX19LDM1OmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDM2KSgia2V5cyIpLG89cigyMyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuW2VdfHwobltlXT1vKGUpKX19LDM2OmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDApLG89cigxKSxpPW9bIl9fY29yZS1qc19zaGFyZWRfXyJdfHwob1siX19jb3JlLWpzX3NoYXJlZF9fIl09e30pOyhlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaVtlXXx8KGlbZV09dm9pZCAwIT09dD90Ont9KX0pKCJ2ZXJzaW9ucyIsW10pLnB1c2goe3ZlcnNpb246bi52ZXJzaW9uLG1vZGU6cigxNSk/InB1cmUiOiJnbG9iYWwiLGNvcHlyaWdodDoiwqkgMjAxOCBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSJ9KX0sMzc6ZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ImNvbnN0cnVjdG9yLGhhc093blByb3BlcnR5LGlzUHJvdG90eXBlT2YscHJvcGVydHlJc0VudW1lcmFibGUsdG9Mb2NhbGVTdHJpbmcsdG9TdHJpbmcsdmFsdWVPZiIuc3BsaXQoIiwiKX0sMzk6ZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz0hcig0KSYmIXIoMTMpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShyKDI4KSgiZGl2IiksImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LDQ6ZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz0hcigxMykoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSw0MzpmdW5jdGlvbihlLHQpe3QuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSw0NTpmdW5jdGlvbihlLHQscil7dmFyIG49cigxMCksbz1yKDEyKSxpPXIoNjQpKCExKSxzPXIoMzUpKCJJRV9QUk9UTyIpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLGE9byhlKSx1PTAsYz1bXTtmb3IociBpbiBhKXIhPXMmJm4oYSxyKSYmYy5wdXNoKHIpO2Zvcig7dC5sZW5ndGg+dTspbihhLHI9dFt1KytdKSYmKH5pKGMscil8fGMucHVzaChyKSk7cmV0dXJuIGN9fSw0OTpmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1NYXRoLm1pbjtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGU+MD9vKG4oZSksOTAwNzE5OTI1NDc0MDk5MSk6MH19LDU1OmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIxKTtlLmV4cG9ydHM9T2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVybiJTdHJpbmciPT1uKGUpP2Uuc3BsaXQoIiIpOk9iamVjdChlKX19LDY6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSksbz1yKDApLGk9cigxNCkscz1yKDExKSxhPXIoMTApLHU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBjLGwsZCxmPWUmdS5GLHA9ZSZ1LkcseT1lJnUuUyx2PWUmdS5QLGg9ZSZ1LkIsYj1lJnUuVyxfPXA/bzpvW3RdfHwob1t0XT17fSksbT1fLnByb3RvdHlwZSxnPXA/bjp5P25bdF06KG5bdF18fHt9KS5wcm90b3R5cGU7Zm9yKGMgaW4gcCYmKHI9dCkscikobD0hZiYmZyYmdm9pZCAwIT09Z1tjXSkmJmEoXyxjKXx8KGQ9bD9nW2NdOnJbY10sX1tjXT1wJiYiZnVuY3Rpb24iIT10eXBlb2YgZ1tjXT9yW2NdOmgmJmw/aShkLG4pOmImJmdbY109PWQ/ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24odCxyLG4pe2lmKHRoaXMgaW5zdGFuY2VvZiBlKXtzd2l0Y2goYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuZXcgZTtjYXNlIDE6cmV0dXJuIG5ldyBlKHQpO2Nhc2UgMjpyZXR1cm4gbmV3IGUodCxyKX1yZXR1cm4gbmV3IGUodCxyLG4pfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07cmV0dXJuIHQucHJvdG90eXBlPWUucHJvdG90eXBlLHR9KGQpOnYmJiJmdW5jdGlvbiI9PXR5cGVvZiBkP2koRnVuY3Rpb24uY2FsbCxkKTpkLHYmJigoXy52aXJ0dWFsfHwoXy52aXJ0dWFsPXt9KSlbY109ZCxlJnUuUiYmbSYmIW1bY10mJnMobSxjLGQpKSl9O3UuRj0xLHUuRz0yLHUuUz00LHUuUD04LHUuQj0xNix1Llc9MzIsdS5VPTY0LHUuUj0xMjgsZS5leHBvcnRzPXV9LDY0OmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEyKSxvPXIoNDkpLGk9cig2NSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIscyl7dmFyIGEsdT1uKHQpLGM9byh1Lmxlbmd0aCksbD1pKHMsYyk7aWYoZSYmciE9cil7Zm9yKDtjPmw7KWlmKChhPXVbbCsrXSkhPWEpcmV0dXJuITB9ZWxzZSBmb3IoO2M+bDtsKyspaWYoKGV8fGwgaW4gdSkmJnVbbF09PT1yKXJldHVybiBlfHxsfHwwO3JldHVybiFlJiYtMX19fSw2NTpmdW5jdGlvbihlLHQscil7dmFyIG49cigzMSksbz1NYXRoLm1heCxpPU1hdGgubWluO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybihlPW4oZSkpPDA/byhlK3QsMCk6aShlLHQpfX0sNzpmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIGU/bnVsbCE9PWU6ImZ1bmN0aW9uIj09dHlwZW9mIGV9fSw3ODpmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoMTE5KSxfX2VzTW9kdWxlOiEwfX0sODpmdW5jdGlvbihlLHQscil7dmFyIG49cig5KSxvPXIoMzkpLGk9cigyNykscz1PYmplY3QuZGVmaW5lUHJvcGVydHk7dC5mPXIoNCk/T2JqZWN0LmRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKGUsdCxyKXtpZihuKGUpLHQ9aSh0LCEwKSxuKHIpLG8pdHJ5e3JldHVybiBzKGUsdCxyKX1jYXRjaChlKXt9aWYoImdldCJpbiByfHwic2V0ImluIHIpdGhyb3cgVHlwZUVycm9yKCJBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEiKTtyZXR1cm4idmFsdWUiaW4gciYmKGVbdF09ci52YWx1ZSksZX19LDk6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNyk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKCFuKGUpKXRocm93IFR5cGVFcnJvcihlKyIgaXMgbm90IGFuIG9iamVjdCEiKTtyZXR1cm4gZX19fSl9KX0sZnVuY3Rpb24oZSx0LHIpeyFmdW5jdGlvbih0LHIpe2UuZXhwb3J0cz1yKCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZiYmc2VsZixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtmdW5jdGlvbiB0KG4pe2lmKHJbbl0pcmV0dXJuIHJbbl0uZXhwb3J0czt2YXIgbz1yW25dPXtpOm4sbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtuXS5jYWxsKG8uZXhwb3J0cyxvLG8uZXhwb3J0cyx0KSxvLmw9ITAsby5leHBvcnRzfXZhciByPXt9O3JldHVybiB0Lm09ZSx0LmM9cix0LmQ9ZnVuY3Rpb24oZSxyLG4pe3QubyhlLHIpfHxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLHtjb25maWd1cmFibGU6ITEsZW51bWVyYWJsZTohMCxnZXQ6bn0pfSx0Lm49ZnVuY3Rpb24oZSl7dmFyIHI9ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIHQuZChyLCJhIixyKSxyfSx0Lm89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsdCl9LHQucD0iIix0KHQucz0xNjIpfShbZnVuY3Rpb24oZSx0KXt2YXIgcj1lLmV4cG9ydHM9e3ZlcnNpb246IjIuNS43In07Im51bWJlciI9PXR5cGVvZiBfX2UmJihfX2U9cil9LGZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS5leHBvcnRzPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuTWF0aD09TWF0aD93aW5kb3c6InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiZzZWxmLk1hdGg9PU1hdGg/c2VsZjpGdW5jdGlvbigicmV0dXJuIHRoaXMiKSgpOyJudW1iZXIiPT10eXBlb2YgX19nJiYoX19nPXIpfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzNikoIndrcyIpLG89cigyMyksaT1yKDEpLlN5bWJvbCxzPSJmdW5jdGlvbiI9PXR5cGVvZiBpOyhlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5bZV18fChuW2VdPXMmJmlbZV18fChzP2k6bykoIlN5bWJvbC4iK2UpKX0pLnN0b3JlPW59LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dC5fX2VzTW9kdWxlPSEwLHQuZGVmYXVsdD1mdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz0hcigxMykoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCJhIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDd9fSkuYX0pfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19KHIoNTkpKTt0LmRlZmF1bHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBvPXRbcl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsInZhbHVlImluIG8mJihvLndyaXRhYmxlPSEwKSwoMCxuLmRlZmF1bHQpKGUsby5rZXksbyl9fXJldHVybiBmdW5jdGlvbih0LHIsbil7cmV0dXJuIHImJmUodC5wcm90b3R5cGUsciksbiYmZSh0LG4pLHR9fSgpfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKSxvPXIoMCksaT1yKDE0KSxzPXIoMTEpLGE9cigxMCksdT1mdW5jdGlvbihlLHQscil7dmFyIGMsbCxkLGY9ZSZ1LkYscD1lJnUuRyx5PWUmdS5TLHY9ZSZ1LlAsaD1lJnUuQixiPWUmdS5XLF89cD9vOm9bdF18fChvW3RdPXt9KSxtPV8ucHJvdG90eXBlLGc9cD9uOnk/blt0XTooblt0XXx8e30pLnByb3RvdHlwZTtmb3IoYyBpbiBwJiYocj10KSxyKShsPSFmJiZnJiZ2b2lkIDAhPT1nW2NdKSYmYShfLGMpfHwoZD1sP2dbY106cltjXSxfW2NdPXAmJiJmdW5jdGlvbiIhPXR5cGVvZiBnW2NdP3JbY106aCYmbD9pKGQsbik6YiYmZ1tjXT09ZD9mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbih0LHIsbil7aWYodGhpcyBpbnN0YW5jZW9mIGUpe3N3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIG5ldyBlO2Nhc2UgMTpyZXR1cm4gbmV3IGUodCk7Y2FzZSAyOnJldHVybiBuZXcgZSh0LHIpfXJldHVybiBuZXcgZSh0LHIsbil9cmV0dXJuIGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtyZXR1cm4gdC5wcm90b3R5cGU9ZS5wcm90b3R5cGUsdH0oZCk6diYmImZ1bmN0aW9uIj09dHlwZW9mIGQ/aShGdW5jdGlvbi5jYWxsLGQpOmQsdiYmKChfLnZpcnR1YWx8fChfLnZpcnR1YWw9e30pKVtjXT1kLGUmdS5SJiZtJiYhbVtjXSYmcyhtLGMsZCkpKX07dS5GPTEsdS5HPTIsdS5TPTQsdS5QPTgsdS5CPTE2LHUuVz0zMix1LlU9NjQsdS5SPTEyOCxlLmV4cG9ydHM9dX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiBlP251bGwhPT1lOiJmdW5jdGlvbiI9PXR5cGVvZiBlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOSksbz1yKDM5KSxpPXIoMjcpLHM9T2JqZWN0LmRlZmluZVByb3BlcnR5O3QuZj1yKDQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbihlLHQscil7aWYobihlKSx0PWkodCwhMCksbihyKSxvKXRyeXtyZXR1cm4gcyhlLHQscil9Y2F0Y2goZSl7fWlmKCJnZXQiaW4gcnx8InNldCJpbiByKXRocm93IFR5cGVFcnJvcigiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhIik7cmV0dXJuInZhbHVlImluIHImJihlW3RdPXIudmFsdWUpLGV9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig3KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7aWYoIW4oZSkpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgYW4gb2JqZWN0ISIpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0KXt2YXIgcj17fS5oYXNPd25Qcm9wZXJ0eTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gci5jYWxsKGUsdCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig4KSxvPXIoMTYpO2UuZXhwb3J0cz1yKDQpP2Z1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbi5mKGUsdCxvKDEscikpfTpmdW5jdGlvbihlLHQscil7cmV0dXJuIGVbdF09cixlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNTUpLG89cigzMCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBuKG8oZSkpfX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiEhZSgpfWNhdGNoKGUpe3JldHVybiEwfX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDI0KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2lmKG4oZSksdm9pZCAwPT09dClyZXR1cm4gZTtzd2l0Y2gocil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gZS5jYWxsKHQscil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocixuKXtyZXR1cm4gZS5jYWxsKHQscixuKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihyLG4sbyl7cmV0dXJuIGUuY2FsbCh0LHIsbixvKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodCxhcmd1bWVudHMpfX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSEwfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybntlbnVtZXJhYmxlOiEoMSZlKSxjb25maWd1cmFibGU6ISgyJmUpLHdyaXRhYmxlOiEoNCZlKSx2YWx1ZTp0fX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPXt9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoMTAyKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBvKGUpe2Z1bmN0aW9uIHQoZSl7cmV0dXJuIGUucmVwbGFjZSgvKFthLXpBLVotXSopKDpcL1wvKD86XC4pP3w6KShbLWEtekEtWjAtOUA6JS5fXCt+Iz1dezIsMjU2fSkoWy1hLXpBLVowLTlAOiUuX1wrfiM9XC9dKikvZ2ksIiQxLCQzLCQ0Iikuc3BsaXQoIiwiKX12YXIgcj10KGUpO2lmKHJbMF09PT1lJiYhclswXS5pbmNsdWRlcygiQCIpKXt2YXIgbj17dHlwZToiIixkb21haW46ZSxpZGVudGl0eToiIn07cmV0dXJuIGNvbnNvbGUud2FybigiW0RpdmlkZVVSTF0gRGl2aWRlVVJMIGRvbid0IHN1cHBvcnQgdXJsIHdpdGhvdXQgc2NoZW1lLiBQbGVhc2UgcmV2aWV3IHlvdXIgdXJsIGFkZHJlc3MiLGUpLG59cmV0dXJuIHJbMF09PT1lJiZyWzBdLmluY2x1ZGVzKCJAIikmJihyPXQoKHJbMF09PT1lPyJzbXRwIjpyWzBdKSsiOi8vIityWzBdKSksclsxXS5pbmNsdWRlcygiQCIpJiYoclsyXT1yWzBdKyI6Ly8iK3JbMV0sclsxXT1yWzFdLnN1YnN0cihyWzFdLmluZGV4T2YoIkAiKSsxKSkse3R5cGU6clswXSxkb21haW46clsxXSxpZGVudGl0eTpyWzJdfX1mdW5jdGlvbiBpKGUpe3ZhciB0PWUuaW5kZXhPZigiQCIpO3JldHVybiJ1c2VyOi8vIitlLnN1YnN0cmluZyh0KzEsZS5sZW5ndGgpKyIvIitlLnN1YnN0cmluZygwLHQpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgcz1uKHIoNTgpKSxhPW4ocig0MikpO3QuZGl2aWRlVVJMPW8sdC5kaXZpZGVFbWFpbD1mdW5jdGlvbihlKXt2YXIgdD1lLmluZGV4T2YoIkAiKTtyZXR1cm57dXNlcm5hbWU6ZS5zdWJzdHJpbmcoMCx0KSxkb21haW46ZS5zdWJzdHJpbmcodCsxLGUubGVuZ3RoKX19LHQuZW1wdHlPYmplY3Q9ZnVuY3Rpb24oZSl7cmV0dXJuISgoMCxhLmRlZmF1bHQpKGUpLmxlbmd0aD4wKX0sdC5kZWVwQ2xvbmU9ZnVuY3Rpb24oZSl7aWYoZSlyZXR1cm4gSlNPTi5wYXJzZSgoMCxzLmRlZmF1bHQpKGUpKX0sdC5nZXRVc2VyVVJMRnJvbUVtYWlsPWksdC5nZXRVc2VyRW1haWxGcm9tVVJMPWZ1bmN0aW9uKGUpe3ZhciB0PW8oZSk7cmV0dXJuIHQuaWRlbnRpdHkucmVwbGFjZSgiLyIsIiIpKyJAIit0LmRvbWFpbn0sdC5jb252ZXJ0VG9Vc2VyVVJMPWZ1bmN0aW9uKGUpe2lmKCJ1c2VyOi8vIj09PWUuc3Vic3RyaW5nKDAsNykpe3ZhciB0PW8oZSk7aWYodC5kb21haW4mJnQuaWRlbnRpdHkpcmV0dXJuIGU7dGhyb3cidXNlclVSTCB3aXRoIHdyb25nIGZvcm1hdCJ9cmV0dXJuIGkoZSl9LHQuY2hlY2tBdHRyaWJ1dGU9ZnVuY3Rpb24oZSl7dmFyIHQ9LygoKFthLXpBLVpdKyk6XC9cLyhbMC05YS16QS1aXVstXHddKlswLTlhLXpBLVpdXC4pK1thLXpBLVpdezIsOX0pXC9bYS16QS1aMC05XC5dK0BbYS16QS1aMC05XSsoXC0pP1thLXpBLVowLTldKyhcLik/W2EtekEtWjAtOV17MiwxMH0/XC5bYS16QS1aXXsyLDEwfSkoLisoPz0uaWRlbnRpdHkpKT8vZ20scj1bXSxuPVtdO2lmKG51bGw9PWUubWF0Y2godCkpbj1lLnNwbGl0KCIuIik7ZWxzZXtmb3IodmFyIG89dm9pZCAwO251bGwhPT0obz10LmV4ZWMoZSkpOylvLmluZGV4PT09dC5sYXN0SW5kZXgmJnQubGFzdEluZGV4Kyssby5mb3JFYWNoKGZ1bmN0aW9uKGUsdCl7MD09PXQmJnIucHVzaChlKX0pO3ZhciBpPXZvaWQgMDtyLmZvckVhY2goZnVuY3Rpb24odCl7aT1lLnJlcGxhY2UodCwiKisqIiksbj1pLnNwbGl0KCIuIikubWFwKGZ1bmN0aW9uKGUpe3JldHVybiIqKyoiPT09ZT90OmV9KX0pfXJldHVybiBjb25zb2xlLmxvZygiW1NlcnZpY2VGcmFtZXdvcmsuVXRpbHMuY2hlY2tBdHRyaWJ1dGVdIixuKSxufSx0LnBhcnNlQXR0cmlidXRlcz1mdW5jdGlvbihlKXtpZihlLmluY2x1ZGVzKCI6Ly8iKSl7dmFyIHQ9ZS5zcGxpdCgvKFswLTlhLXpBLVpdWy1cd10qKTpcL1wvL2cpWzBdLHI9dC5zcGxpdCgiLiIpLG49ZS5yZXBsYWNlKHQsIiIpO2lmKGUuaW5jbHVkZXMoImlkZW50aXR5Iikpe3ZhciBvPW4uc3BsaXQoImlkZW50aXR5LiIpO2NvbnNvbGUubG9nKCJhcnJheTIgIitvKSxuPW9bMF0uc2xpY2UoIi4iLC0xKSxvPW9bMV0uc3BsaXQoIi4iKSxyLnB1c2gobiwiaWRlbnRpdHkiKSxyPXIuY29uY2F0KG8pfWVsc2Ugci5wdXNoKG4pO3JldHVybiByLmZpbHRlcihCb29sZWFuKX1yZXR1cm4gZS5zcGxpdCgiLiIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNDUpLG89cigzNyk7ZS5leHBvcnRzPU9iamVjdC5rZXlzfHxmdW5jdGlvbihlKXtyZXR1cm4gbihlLG8pfX0sZnVuY3Rpb24oZSx0KXt2YXIgcj17fS50b1N0cmluZztlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHIuY2FsbChlKS5zbGljZSg4LC0xKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbixvOyFmdW5jdGlvbihpLHMpeyJ1c2Ugc3RyaWN0Ijt2b2lkIDAhPT0obz0iZnVuY3Rpb24iPT10eXBlb2Yobj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXt2YXIgcj1lW3RdO2lmKCJmdW5jdGlvbiI9PXR5cGVvZiByLmJpbmQpcmV0dXJuIHIuYmluZChlKTt0cnl7cmV0dXJuIEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLmNhbGwocixlKX1jYXRjaCh0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5LmFwcGx5KHIsW2UsYXJndW1lbnRzXSl9fX1mdW5jdGlvbiB0KHQpe3JldHVybiJkZWJ1ZyI9PT10JiYodD0ibG9nIiksdHlwZW9mIGNvbnNvbGUhPT1hJiYodm9pZCAwIT09Y29uc29sZVt0XT9lKGNvbnNvbGUsdCk6dm9pZCAwIT09Y29uc29sZS5sb2c/ZShjb25zb2xlLCJsb2ciKTpzKX1mdW5jdGlvbiByKGUsdCl7Zm9yKHZhciByPTA7cjx1Lmxlbmd0aDtyKyspe3ZhciBuPXVbcl07dGhpc1tuXT1yPGU/czp0aGlzLm1ldGhvZEZhY3RvcnkobixlLHQpfXRoaXMubG9nPXRoaXMuZGVidWd9ZnVuY3Rpb24gbihlLHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7dHlwZW9mIGNvbnNvbGUhPT1hJiYoci5jYWxsKHRoaXMsdCxuKSx0aGlzW2VdLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9fWZ1bmN0aW9uIG8oZSxyLG8pe3JldHVybiB0KGUpfHxuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBpKGUsdCxuKXtmdW5jdGlvbiBpKCl7dmFyIGU7aWYodHlwZW9mIHdpbmRvdyE9PWEpe3RyeXtlPXdpbmRvdy5sb2NhbFN0b3JhZ2VbbF19Y2F0Y2goZSl7fWlmKHR5cGVvZiBlPT09YSl0cnl7dmFyIHQ9d2luZG93LmRvY3VtZW50LmNvb2tpZSxyPXQuaW5kZXhPZihlbmNvZGVVUklDb21wb25lbnQobCkrIj0iKTstMSE9PXImJihlPS9eKFteO10rKS8uZXhlYyh0LnNsaWNlKHIpKVsxXSl9Y2F0Y2goZSl7fXJldHVybiB2b2lkIDA9PT1jLmxldmVsc1tlXSYmKGU9dm9pZCAwKSxlfX12YXIgcyxjPXRoaXMsbD0ibG9nbGV2ZWwiO2UmJihsKz0iOiIrZSksYy5uYW1lPWUsYy5sZXZlbHM9e1RSQUNFOjAsREVCVUc6MSxJTkZPOjIsV0FSTjozLEVSUk9SOjQsU0lMRU5UOjV9LGMubWV0aG9kRmFjdG9yeT1ufHxvLGMuZ2V0TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gc30sYy5zZXRMZXZlbD1mdW5jdGlvbih0LG4pe2lmKCJzdHJpbmciPT10eXBlb2YgdCYmdm9pZCAwIT09Yy5sZXZlbHNbdC50b1VwcGVyQ2FzZSgpXSYmKHQ9Yy5sZXZlbHNbdC50b1VwcGVyQ2FzZSgpXSksISgibnVtYmVyIj09dHlwZW9mIHQmJnQ+PTAmJnQ8PWMubGV2ZWxzLlNJTEVOVCkpdGhyb3cibG9nLnNldExldmVsKCkgY2FsbGVkIHdpdGggaW52YWxpZCBsZXZlbDogIit0O2lmKHM9dCwhMSE9PW4mJmZ1bmN0aW9uKGUpe3ZhciB0PSh1W2VdfHwic2lsZW50IikudG9VcHBlckNhc2UoKTtpZih0eXBlb2Ygd2luZG93IT09YSl7dHJ5e3JldHVybiB2b2lkKHdpbmRvdy5sb2NhbFN0b3JhZ2VbbF09dCl9Y2F0Y2goZSl7fXRyeXt3aW5kb3cuZG9jdW1lbnQuY29va2llPWVuY29kZVVSSUNvbXBvbmVudChsKSsiPSIrdCsiOyJ9Y2F0Y2goZSl7fX19KHQpLHIuY2FsbChjLHQsZSksdHlwZW9mIGNvbnNvbGU9PT1hJiZ0PGMubGV2ZWxzLlNJTEVOVClyZXR1cm4iTm8gY29uc29sZSBhdmFpbGFibGUgZm9yIGxvZ2dpbmcifSxjLnNldERlZmF1bHRMZXZlbD1mdW5jdGlvbihlKXtpKCl8fGMuc2V0TGV2ZWwoZSwhMSl9LGMuZW5hYmxlQWxsPWZ1bmN0aW9uKGUpe2Muc2V0TGV2ZWwoYy5sZXZlbHMuVFJBQ0UsZSl9LGMuZGlzYWJsZUFsbD1mdW5jdGlvbihlKXtjLnNldExldmVsKGMubGV2ZWxzLlNJTEVOVCxlKX07dmFyIGQ9aSgpO251bGw9PWQmJihkPW51bGw9PXQ/IldBUk4iOnQpLGMuc2V0TGV2ZWwoZCwhMSl9dmFyIHM9ZnVuY3Rpb24oKXt9LGE9InVuZGVmaW5lZCIsdT1bInRyYWNlIiwiZGVidWciLCJpbmZvIiwid2FybiIsImVycm9yIl0sYz1uZXcgaSxsPXt9O2MuZ2V0TG9nZ2VyPWZ1bmN0aW9uKGUpe2lmKCJzdHJpbmciIT10eXBlb2YgZXx8IiI9PT1lKXRocm93IG5ldyBUeXBlRXJyb3IoIllvdSBtdXN0IHN1cHBseSBhIG5hbWUgd2hlbiBjcmVhdGluZyBhIGxvZ2dlci4iKTt2YXIgdD1sW2VdO3JldHVybiB0fHwodD1sW2VdPW5ldyBpKGUsYy5nZXRMZXZlbCgpLGMubWV0aG9kRmFjdG9yeSkpLHR9O3ZhciBkPXR5cGVvZiB3aW5kb3chPT1hP3dpbmRvdy5sb2c6dm9pZCAwO3JldHVybiBjLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdHlwZW9mIHdpbmRvdyE9PWEmJndpbmRvdy5sb2c9PT1jJiYod2luZG93LmxvZz1kKSxjfSxjLmdldExvZ2dlcnM9ZnVuY3Rpb24oKXtyZXR1cm4gbH0sY30pP24uY2FsbCh0LHIsdCxlKTpuKSYmKGUuZXhwb3J0cz1vKX0oKX0sZnVuY3Rpb24oZSx0KXt2YXIgcj0wLG49TWF0aC5yYW5kb20oKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIlN5bWJvbCgiLmNvbmNhdCh2b2lkIDA9PT1lPyIiOmUsIilfIiwoKytyK24pLnRvU3RyaW5nKDM2KSl9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBUeXBlRXJyb3IoZSsiIGlzIG5vdCBhIGZ1bmN0aW9uISIpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDkxKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOCkuZixvPXIoMTApLGk9cigyKSgidG9TdHJpbmdUYWciKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2UmJiFvKGU9cj9lOmUucHJvdG90eXBlLGkpJiZuKGUsaSx7Y29uZmlndXJhYmxlOiEwLHZhbHVlOnR9KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe2lmKCFuKGUpKXJldHVybiBlO3ZhciByLG87aWYodCYmImZ1bmN0aW9uIj09dHlwZW9mKHI9ZS50b1N0cmluZykmJiFuKG89ci5jYWxsKGUpKSlyZXR1cm4gbztpZigiZnVuY3Rpb24iPT10eXBlb2Yocj1lLnZhbHVlT2YpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87aWYoIXQmJiJmdW5jdGlvbiI9PXR5cGVvZihyPWUudG9TdHJpbmcpJiYhbihvPXIuY2FsbChlKSkpcmV0dXJuIG87dGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWUiKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpLG89cigxKS5kb2N1bWVudCxpPW4obykmJm4oby5jcmVhdGVFbGVtZW50KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGk/by5jcmVhdGVFbGVtZW50KGUpOnt9fX0sZnVuY3Rpb24oZSx0KXt0LmY9e30ucHJvcGVydHlJc0VudW1lcmFibGV9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2lmKHZvaWQgMD09ZSl0aHJvdyBUeXBlRXJyb3IoIkNhbid0IGNhbGwgbWV0aG9kIG9uICAiK2UpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0KXt2YXIgcj1NYXRoLmNlaWwsbj1NYXRoLmZsb29yO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gaXNOYU4oZT0rZSk/MDooZT4wP246cikoZSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMCk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QobihlKSl9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3QuX19lc01vZHVsZT0hMDt2YXIgbj1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19KHIoNDcpKTt0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0KXtpZighZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpO3JldHVybiF0fHwib2JqZWN0IiE9PSh2b2lkIDA9PT10PyJ1bmRlZmluZWQiOigwLG4uZGVmYXVsdCkodCkpJiYiZnVuY3Rpb24iIT10eXBlb2YgdD9lOnR9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXQuX19lc01vZHVsZT0hMDt2YXIgbz1uKHIoOTMpKSxpPW4ocig5NykpLHM9bihyKDQ3KSk7dC5kZWZhdWx0PWZ1bmN0aW9uKGUsdCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgIisodm9pZCAwPT09dD8idW5kZWZpbmVkIjooMCxzLmRlZmF1bHQpKHQpKSk7ZS5wcm90b3R5cGU9KDAsaS5kZWZhdWx0KSh0JiZ0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksdCYmKG8uZGVmYXVsdD8oMCxvLmRlZmF1bHQpKGUsdCk6ZS5fX3Byb3RvX189dCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzNikoImtleXMiKSxvPXIoMjMpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gbltlXXx8KG5bZV09byhlKSl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigwKSxvPXIoMSksaT1vWyJfX2NvcmUtanNfc2hhcmVkX18iXXx8KG9bIl9fY29yZS1qc19zaGFyZWRfXyJdPXt9KTsoZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGlbZV18fChpW2VdPXZvaWQgMCE9PXQ/dDp7fSl9KSgidmVyc2lvbnMiLFtdKS5wdXNoKHt2ZXJzaW9uOm4udmVyc2lvbixtb2RlOnIoMTUpPyJwdXJlIjoiZ2xvYmFsIixjb3B5cmlnaHQ6IsKpIDIwMTggRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSkifSl9LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPSJjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YiLnNwbGl0KCIsIil9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDkpLG89cig3MiksaT1yKDM3KSxzPXIoMzUpKCJJRV9QUk9UTyIpLGE9ZnVuY3Rpb24oKXt9LHU9ZnVuY3Rpb24oKXt2YXIgZSx0PXIoMjgpKCJpZnJhbWUiKSxuPWkubGVuZ3RoO2Zvcih0LnN0eWxlLmRpc3BsYXk9Im5vbmUiLHIoNTYpLmFwcGVuZENoaWxkKHQpLHQuc3JjPSJqYXZhc2NyaXB0OiIsKGU9dC5jb250ZW50V2luZG93LmRvY3VtZW50KS5vcGVuKCksZS53cml0ZSgiPHNjcmlwdD5kb2N1bWVudC5GPU9iamVjdDxcL3NjcmlwdD4iKSxlLmNsb3NlKCksdT1lLkY7bi0tOylkZWxldGUgdS5wcm90b3R5cGVbaVtuXV07cmV0dXJuIHUoKX07ZS5leHBvcnRzPU9iamVjdC5jcmVhdGV8fGZ1bmN0aW9uKGUsdCl7dmFyIHI7cmV0dXJuIG51bGwhPT1lPyhhLnByb3RvdHlwZT1uKGUpLHI9bmV3IGEsYS5wcm90b3R5cGU9bnVsbCxyW3NdPWUpOnI9dSgpLHZvaWQgMD09PXQ/cjpvKHIsdCl9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPSFyKDQpJiYhcigxMykoZnVuY3Rpb24oKXtyZXR1cm4gNyE9T2JqZWN0LmRlZmluZVByb3BlcnR5KHIoMjgpKCJkaXYiKSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiA3fX0pLmF9KX0sZnVuY3Rpb24oZSx0LHIpe3QuZj1yKDIpfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxKSxvPXIoMCksaT1yKDE1KSxzPXIoNDApLGE9cig4KS5mO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD1vLlN5bWJvbHx8KG8uU3ltYm9sPWk/e306bi5TeW1ib2x8fHt9KTsiXyI9PWUuY2hhckF0KDApfHxlIGluIHR8fGEodCxlLHt2YWx1ZTpzLmYoZSl9KX19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig4OSksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCl7dC5mPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHN9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYpLG89cigwKSxpPXIoMTMpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByPShvLk9iamVjdHx8e30pW2VdfHxPYmplY3RbZV0scz17fTtzW2VdPXQociksbihuLlMrbi5GKmkoZnVuY3Rpb24oKXtyKDEpfSksIk9iamVjdCIscyl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigxMCksbz1yKDEyKSxpPXIoNjQpKCExKSxzPXIoMzUpKCJJRV9QUk9UTyIpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLGE9byhlKSx1PTAsYz1bXTtmb3IociBpbiBhKXIhPXMmJm4oYSxyKSYmYy5wdXNoKHIpO2Zvcig7dC5sZW5ndGg+dTspbihhLHI9dFt1KytdKSYmKH5pKGMscil8fGMucHVzaChyKSk7cmV0dXJuIGN9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cigyOSksbz1yKDE2KSxpPXIoMTIpLHM9cigyNyksYT1yKDEwKSx1PXIoMzkpLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjt0LmY9cig0KT9jOmZ1bmN0aW9uKGUsdCl7aWYoZT1pKGUpLHQ9cyh0LCEwKSx1KXRyeXtyZXR1cm4gYyhlLHQpfWNhdGNoKGUpe31pZihhKGUsdCkpcmV0dXJuIG8oIW4uZi5jYWxsKGUsdCksZVt0XSl9fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fXQuX19lc01vZHVsZT0hMDt2YXIgbz1uKHIoNzkpKSxpPW4ocig4MSkpLHM9ImZ1bmN0aW9uIj09dHlwZW9mIGkuZGVmYXVsdCYmInN5bWJvbCI9PXR5cGVvZiBvLmRlZmF1bHQ/ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBlfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIGkuZGVmYXVsdCYmZS5jb25zdHJ1Y3Rvcj09PWkuZGVmYXVsdCYmZSE9PWkuZGVmYXVsdC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIGV9O3QuZGVmYXVsdD0iZnVuY3Rpb24iPT10eXBlb2YgaS5kZWZhdWx0JiYic3ltYm9sIj09PXMoby5kZWZhdWx0KT9mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZT8idW5kZWZpbmVkIjpzKGUpfTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmImZ1bmN0aW9uIj09dHlwZW9mIGkuZGVmYXVsdCYmZS5jb25zdHJ1Y3Rvcj09PWkuZGVmYXVsdCYmZSE9PWkuZGVmYXVsdC5wcm90b3R5cGU/InN5bWJvbCI6dm9pZCAwPT09ZT8idW5kZWZpbmVkIjpzKGUpfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDE1KSxvPXIoNiksaT1yKDUwKSxzPXIoMTEpLGE9cigxNyksdT1yKDcxKSxjPXIoMjYpLGw9cig1MyksZD1yKDIpKCJpdGVyYXRvciIpLGY9IShbXS5rZXlzJiYibmV4dCJpbltdLmtleXMoKSkscD1mdW5jdGlvbigpe3JldHVybiB0aGlzfTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIseSx2LGgsYil7dShyLHQseSk7dmFyIF8sbSxnLE89ZnVuY3Rpb24oZSl7aWYoIWYmJmUgaW4gUilyZXR1cm4gUltlXTtzd2l0Y2goZSl7Y2FzZSJrZXlzIjpjYXNlInZhbHVlcyI6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyByKHRoaXMsZSl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBuZXcgcih0aGlzLGUpfX0sdz10KyIgSXRlcmF0b3IiLGo9InZhbHVlcyI9PXYsaz0hMSxSPWUucHJvdG90eXBlLEw9UltkXXx8UlsiQEBpdGVyYXRvciJdfHx2JiZSW3ZdLHg9THx8Tyh2KSxQPXY/aj9PKCJlbnRyaWVzIik6eDp2b2lkIDAsQz0iQXJyYXkiPT10JiZSLmVudHJpZXN8fEw7aWYoQyYmKGc9bChDLmNhbGwobmV3IGUpKSkhPT1PYmplY3QucHJvdG90eXBlJiZnLm5leHQmJihjKGcsdywhMCksbnx8ImZ1bmN0aW9uIj09dHlwZW9mIGdbZF18fHMoZyxkLHApKSxqJiZMJiYidmFsdWVzIiE9PUwubmFtZSYmKGs9ITAseD1mdW5jdGlvbigpe3JldHVybiBMLmNhbGwodGhpcyl9KSxuJiYhYnx8IWYmJiFrJiZSW2RdfHxzKFIsZCx4KSxhW3RdPXgsYVt3XT1wLHYpaWYoXz17dmFsdWVzOmo/eDpPKCJ2YWx1ZXMiKSxrZXlzOmg/eDpPKCJrZXlzIiksZW50cmllczpQfSxiKWZvcihtIGluIF8pbSBpbiBSfHxpKFIsbSxfW21dKTtlbHNlIG8oby5QK28uRiooZnx8ayksdCxfKTtyZXR1cm4gX319LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMxKSxvPU1hdGgubWluO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZT4wP28obihlKSw5MDA3MTk5MjU0NzQwOTkxKTowfX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz1yKDExKX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDI0KTtlLmV4cG9ydHMuZj1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IGZ1bmN0aW9uKGUpe3ZhciB0LHI7dGhpcy5wcm9taXNlPW5ldyBlKGZ1bmN0aW9uKGUsbil7aWYodm9pZCAwIT09dHx8dm9pZCAwIT09cil0aHJvdyBUeXBlRXJyb3IoIkJhZCBQcm9taXNlIGNvbnN0cnVjdG9yIik7dD1lLHI9bn0pLHRoaXMucmVzb2x2ZT1uKHQpLHRoaXMucmVqZWN0PW4ocil9KGUpfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDcwKSghMCk7cig0OCkoU3RyaW5nLCJTdHJpbmciLGZ1bmN0aW9uKGUpe3RoaXMuX3Q9U3RyaW5nKGUpLHRoaXMuX2k9MH0sZnVuY3Rpb24oKXt2YXIgZSx0PXRoaXMuX3Qscj10aGlzLl9pO3JldHVybiByPj10Lmxlbmd0aD97dmFsdWU6dm9pZCAwLGRvbmU6ITB9OihlPW4odCxyKSx0aGlzLl9pKz1lLmxlbmd0aCx7dmFsdWU6ZSxkb25lOiExfSl9KX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTApLG89cigzMiksaT1yKDM1KSgiSUVfUFJPVE8iKSxzPU9iamVjdC5wcm90b3R5cGU7ZS5leHBvcnRzPU9iamVjdC5nZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24oZSl7cmV0dXJuIGU9byhlKSxuKGUsaSk/ZVtpXToiZnVuY3Rpb24iPT10eXBlb2YgZS5jb25zdHJ1Y3RvciYmZSBpbnN0YW5jZW9mIGUuY29uc3RydWN0b3I/ZS5jb25zdHJ1Y3Rvci5wcm90b3R5cGU6ZSBpbnN0YW5jZW9mIE9iamVjdD9zOm51bGx9fSxmdW5jdGlvbihlLHQscil7cig3Myk7Zm9yKHZhciBuPXIoMSksbz1yKDExKSxpPXIoMTcpLHM9cigyKSgidG9TdHJpbmdUYWciKSxhPSJDU1NSdWxlTGlzdCxDU1NTdHlsZURlY2xhcmF0aW9uLENTU1ZhbHVlTGlzdCxDbGllbnRSZWN0TGlzdCxET01SZWN0TGlzdCxET01TdHJpbmdMaXN0LERPTVRva2VuTGlzdCxEYXRhVHJhbnNmZXJJdGVtTGlzdCxGaWxlTGlzdCxIVE1MQWxsQ29sbGVjdGlvbixIVE1MQ29sbGVjdGlvbixIVE1MRm9ybUVsZW1lbnQsSFRNTFNlbGVjdEVsZW1lbnQsTWVkaWFMaXN0LE1pbWVUeXBlQXJyYXksTmFtZWROb2RlTWFwLE5vZGVMaXN0LFBhaW50UmVxdWVzdExpc3QsUGx1Z2luLFBsdWdpbkFycmF5LFNWR0xlbmd0aExpc3QsU1ZHTnVtYmVyTGlzdCxTVkdQYXRoU2VnTGlzdCxTVkdQb2ludExpc3QsU1ZHU3RyaW5nTGlzdCxTVkdUcmFuc2Zvcm1MaXN0LFNvdXJjZUJ1ZmZlckxpc3QsU3R5bGVTaGVldExpc3QsVGV4dFRyYWNrQ3VlTGlzdCxUZXh0VHJhY2tMaXN0LFRvdWNoTGlzdCIuc3BsaXQoIiwiKSx1PTA7dTxhLmxlbmd0aDt1Kyspe3ZhciBjPWFbdV0sbD1uW2NdLGQ9bCYmbC5wcm90b3R5cGU7ZCYmIWRbc10mJm8oZCxzLGMpLGlbY109aS5BcnJheX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIxKTtlLmV4cG9ydHM9T2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKGUpe3JldHVybiJTdHJpbmciPT1uKGUpP2Uuc3BsaXQoIiIpOk9iamVjdChlKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEpLmRvY3VtZW50O2UuZXhwb3J0cz1uJiZuLmRvY3VtZW50RWxlbWVudH0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNDUpLG89cigzNykuY29uY2F0KCJsZW5ndGgiLCJwcm90b3R5cGUiKTt0LmY9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXN8fGZ1bmN0aW9uKGUpe3JldHVybiBuKGUsbyl9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoNzYpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoNjEpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQpe30sZnVuY3Rpb24oZSx0LHIpe3IoNjIpO3ZhciBuPXIoMCkuT2JqZWN0O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7cmV0dXJuIG4uZGVmaW5lUHJvcGVydHkoZSx0LHIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoNik7bihuLlMrbi5GKiFyKDQpLCJPYmplY3QiLHtkZWZpbmVQcm9wZXJ0eTpyKDgpLmZ9KX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjEpLG89cigyKSgidG9TdHJpbmdUYWciKSxpPSJBcmd1bWVudHMiPT1uKGZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50c30oKSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3ZhciB0LHIscztyZXR1cm4gdm9pZCAwPT09ZT8iVW5kZWZpbmVkIjpudWxsPT09ZT8iTnVsbCI6InN0cmluZyI9PXR5cGVvZihyPWZ1bmN0aW9uKGUsdCl7dHJ5e3JldHVybiBlW3RdfWNhdGNoKGUpe319KHQ9T2JqZWN0KGUpLG8pKT9yOmk/bih0KToiT2JqZWN0Ij09KHM9bih0KSkmJiJmdW5jdGlvbiI9PXR5cGVvZiB0LmNhbGxlZT8iQXJndW1lbnRzIjpzfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTIpLG89cig0OSksaT1yKDY1KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQscixzKXt2YXIgYSx1PW4odCksYz1vKHUubGVuZ3RoKSxsPWkocyxjKTtpZihlJiZyIT1yKXtmb3IoO2M+bDspaWYoKGE9dVtsKytdKSE9YSlyZXR1cm4hMH1lbHNlIGZvcig7Yz5sO2wrKylpZigoZXx8bCBpbiB1KSYmdVtsXT09PXIpcmV0dXJuIGV8fGx8fDA7cmV0dXJuIWUmJi0xfX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMxKSxvPU1hdGgubWF4LGk9TWF0aC5taW47ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuKGU9bihlKSk8MD9vKGUrdCwwKTppKGUsdCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig5KSxvPXIoMjQpLGk9cigyKSgic3BlY2llcyIpO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3ZhciByLHM9bihlKS5jb25zdHJ1Y3RvcjtyZXR1cm4gdm9pZCAwPT09c3x8dm9pZCAwPT0ocj1uKHMpW2ldKT90Om8ocil9fSxmdW5jdGlvbihlLHQscil7dmFyIG4sbyxpLHM9cigxNCksYT1yKDEwOCksdT1yKDU2KSxjPXIoMjgpLGw9cigxKSxkPWwucHJvY2VzcyxmPWwuc2V0SW1tZWRpYXRlLHA9bC5jbGVhckltbWVkaWF0ZSx5PWwuTWVzc2FnZUNoYW5uZWwsdj1sLkRpc3BhdGNoLGg9MCxiPXt9LF89ZnVuY3Rpb24oKXt2YXIgZT0rdGhpcztpZihiLmhhc093blByb3BlcnR5KGUpKXt2YXIgdD1iW2VdO2RlbGV0ZSBiW2VdLHQoKX19LG09ZnVuY3Rpb24oZSl7Xy5jYWxsKGUuZGF0YSl9O2YmJnB8fChmPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxyPTE7YXJndW1lbnRzLmxlbmd0aD5yOyl0LnB1c2goYXJndW1lbnRzW3IrK10pO3JldHVybiBiWysraF09ZnVuY3Rpb24oKXthKCJmdW5jdGlvbiI9PXR5cGVvZiBlP2U6RnVuY3Rpb24oZSksdCl9LG4oaCksaH0scD1mdW5jdGlvbihlKXtkZWxldGUgYltlXX0sInByb2Nlc3MiPT1yKDIxKShkKT9uPWZ1bmN0aW9uKGUpe2QubmV4dFRpY2socyhfLGUsMSkpfTp2JiZ2Lm5vdz9uPWZ1bmN0aW9uKGUpe3Yubm93KHMoXyxlLDEpKX06eT8oaT0obz1uZXcgeSkucG9ydDIsby5wb3J0MS5vbm1lc3NhZ2U9bSxuPXMoaS5wb3N0TWVzc2FnZSxpLDEpKTpsLmFkZEV2ZW50TGlzdGVuZXImJiJmdW5jdGlvbiI9PXR5cGVvZiBwb3N0TWVzc2FnZSYmIWwuaW1wb3J0U2NyaXB0cz8obj1mdW5jdGlvbihlKXtsLnBvc3RNZXNzYWdlKGUrIiIsIioiKX0sbC5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixtLCExKSk6bj0ib25yZWFkeXN0YXRlY2hhbmdlImluIGMoInNjcmlwdCIpP2Z1bmN0aW9uKGUpe3UuYXBwZW5kQ2hpbGQoYygic2NyaXB0IikpLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe3UucmVtb3ZlQ2hpbGQodGhpcyksXy5jYWxsKGUpfX06ZnVuY3Rpb24oZSl7c2V0VGltZW91dChzKF8sZSwxKSwwKX0pLGUuZXhwb3J0cz17c2V0OmYsY2xlYXI6cH19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm57ZTohMSx2OmUoKX19Y2F0Y2goZSl7cmV0dXJue2U6ITAsdjplfX19fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig5KSxvPXIoNyksaT1yKDUxKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZihuKGUpLG8odCkmJnQuY29uc3RydWN0b3I9PT1lKXJldHVybiB0O3ZhciByPWkuZihlKTtyZXR1cm4oMCxyLnJlc29sdmUpKHQpLHIucHJvbWlzZX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDMxKSxvPXIoMzApO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCxyKXt2YXIgaSxzLGE9U3RyaW5nKG8odCkpLHU9bihyKSxjPWEubGVuZ3RoO3JldHVybiB1PDB8fHU+PWM/ZT8iIjp2b2lkIDA6KGk9YS5jaGFyQ29kZUF0KHUpKTw1NTI5Nnx8aT41NjMxOXx8dSsxPT09Y3x8KHM9YS5jaGFyQ29kZUF0KHUrMSkpPDU2MzIwfHxzPjU3MzQzP2U/YS5jaGFyQXQodSk6aTplP2Euc2xpY2UodSx1KzIpOnMtNTYzMjArKGktNTUyOTY8PDEwKSs2NTUzNn19fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMzgpLG89cigxNiksaT1yKDI2KSxzPXt9O3IoMTEpKHMscigyKSgiaXRlcmF0b3IiKSxmdW5jdGlvbigpe3JldHVybiB0aGlzfSksZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXtlLnByb3RvdHlwZT1uKHMse25leHQ6bygxLHIpfSksaShlLHQrIiBJdGVyYXRvciIpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoOCksbz1yKDkpLGk9cigyMCk7ZS5leHBvcnRzPXIoNCk/T2JqZWN0LmRlZmluZVByb3BlcnRpZXM6ZnVuY3Rpb24oZSx0KXtvKGUpO2Zvcih2YXIgcixzPWkodCksYT1zLmxlbmd0aCx1PTA7YT51OyluLmYoZSxyPXNbdSsrXSx0W3JdKTtyZXR1cm4gZX19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cig3NCksbz1yKDc1KSxpPXIoMTcpLHM9cigxMik7ZS5leHBvcnRzPXIoNDgpKEFycmF5LCJBcnJheSIsZnVuY3Rpb24oZSx0KXt0aGlzLl90PXMoZSksdGhpcy5faT0wLHRoaXMuX2s9dH0sZnVuY3Rpb24oKXt2YXIgZT10aGlzLl90LHQ9dGhpcy5fayxyPXRoaXMuX2krKztyZXR1cm4hZXx8cj49ZS5sZW5ndGg/KHRoaXMuX3Q9dm9pZCAwLG8oMSkpOm8oMCwia2V5cyI9PXQ/cjoidmFsdWVzIj09dD9lW3JdOltyLGVbcl1dKX0sInZhbHVlcyIpLGkuQXJndW1lbnRzPWkuQXJyYXksbigia2V5cyIpLG4oInZhbHVlcyIpLG4oImVudHJpZXMiKX0sZnVuY3Rpb24oZSx0KXtlLmV4cG9ydHM9ZnVuY3Rpb24oKXt9fSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQpe3JldHVybnt2YWx1ZTp0LGRvbmU6ISFlfX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDApLG89bi5KU09OfHwobi5KU09OPXtzdHJpbmdpZnk6SlNPTi5zdHJpbmdpZnl9KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIG8uc3RyaW5naWZ5LmFwcGx5KG8sYXJndW1lbnRzKX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIzKSgibWV0YSIpLG89cig3KSxpPXIoMTApLHM9cig4KS5mLGE9MCx1PU9iamVjdC5pc0V4dGVuc2libGV8fGZ1bmN0aW9uKCl7cmV0dXJuITB9LGM9IXIoMTMpKGZ1bmN0aW9uKCl7cmV0dXJuIHUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSl9KSxsPWZ1bmN0aW9uKGUpe3MoZSxuLHt2YWx1ZTp7aToiTyIrICsrYSx3Ont9fX0pfSxkPWUuZXhwb3J0cz17S0VZOm4sTkVFRDohMSxmYXN0S2V5OmZ1bmN0aW9uKGUsdCl7aWYoIW8oZSkpcmV0dXJuInN5bWJvbCI9PXR5cGVvZiBlP2U6KCJzdHJpbmciPT10eXBlb2YgZT8iUyI6IlAiKStlO2lmKCFpKGUsbikpe2lmKCF1KGUpKXJldHVybiJGIjtpZighdClyZXR1cm4iRSI7bChlKX1yZXR1cm4gZVtuXS5pfSxnZXRXZWFrOmZ1bmN0aW9uKGUsdCl7aWYoIWkoZSxuKSl7aWYoIXUoZSkpcmV0dXJuITA7aWYoIXQpcmV0dXJuITE7bChlKX1yZXR1cm4gZVtuXS53fSxvbkZyZWV6ZTpmdW5jdGlvbihlKXtyZXR1cm4gYyYmZC5ORUVEJiZ1KGUpJiYhaShlLG4pJiZsKGUpLGV9fX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDExOSksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9e2RlZmF1bHQ6cig4MCksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKGUsdCxyKXtyKDUyKSxyKDU0KSxlLmV4cG9ydHM9cig0MCkuZigiaXRlcmF0b3IiKX0sZnVuY3Rpb24oZSx0LHIpe2UuZXhwb3J0cz17ZGVmYXVsdDpyKDgyKSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoODMpLHIoNjApLHIoODcpLHIoODgpLGUuZXhwb3J0cz1yKDApLlN5bWJvbH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDEpLG89cigxMCksaT1yKDQpLHM9cig2KSxhPXIoNTApLHU9cig3NykuS0VZLGM9cigxMyksbD1yKDM2KSxkPXIoMjYpLGY9cigyMykscD1yKDIpLHk9cig0MCksdj1yKDQxKSxoPXIoODQpLGI9cig4NSksXz1yKDkpLG09cig3KSxnPXIoMTIpLE89cigyNyksdz1yKDE2KSxqPXIoMzgpLGs9cig4NiksUj1yKDQ2KSxMPXIoOCkseD1yKDIwKSxQPVIuZixDPUwuZixTPWsuZixNPW4uU3ltYm9sLFU9bi5KU09OLEQ9VSYmVS5zdHJpbmdpZnksRT1wKCJfaGlkZGVuIiksVD1wKCJ0b1ByaW1pdGl2ZSIpLEk9e30ucHJvcGVydHlJc0VudW1lcmFibGUsSD1sKCJzeW1ib2wtcmVnaXN0cnkiKSxBPWwoInN5bWJvbHMiKSxOPWwoIm9wLXN5bWJvbHMiKSxGPU9iamVjdC5wcm90b3R5cGUsQj0iZnVuY3Rpb24iPT10eXBlb2YgTSxWPW4uUU9iamVjdCx6PSFWfHwhVi5wcm90b3R5cGV8fCFWLnByb3RvdHlwZS5maW5kQ2hpbGQsRz1pJiZjKGZ1bmN0aW9uKCl7cmV0dXJuIDchPWooQyh7fSwiYSIse2dldDpmdW5jdGlvbigpe3JldHVybiBDKHRoaXMsImEiLHt2YWx1ZTo3fSkuYX19KSkuYX0pP2Z1bmN0aW9uKGUsdCxyKXt2YXIgbj1QKEYsdCk7biYmZGVsZXRlIEZbdF0sQyhlLHQsciksbiYmZSE9PUYmJkMoRix0LG4pfTpDLHE9ZnVuY3Rpb24oZSl7dmFyIHQ9QVtlXT1qKE0ucHJvdG90eXBlKTtyZXR1cm4gdC5faz1lLHR9LEo9QiYmInN5bWJvbCI9PXR5cGVvZiBNLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiJzeW1ib2wiPT10eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBNfSxaPWZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gZT09PUYmJlooTix0LHIpLF8oZSksdD1PKHQsITApLF8ociksbyhBLHQpPyhyLmVudW1lcmFibGU/KG8oZSxFKSYmZVtFXVt0XSYmKGVbRV1bdF09ITEpLHI9aihyLHtlbnVtZXJhYmxlOncoMCwhMSl9KSk6KG8oZSxFKXx8QyhlLEUsdygxLHt9KSksZVtFXVt0XT0hMCksRyhlLHQscikpOkMoZSx0LHIpfSxXPWZ1bmN0aW9uKGUsdCl7XyhlKTtmb3IodmFyIHIsbj1oKHQ9Zyh0KSksbz0wLGk9bi5sZW5ndGg7aT5vOylaKGUscj1uW28rK10sdFtyXSk7cmV0dXJuIGV9LFk9ZnVuY3Rpb24oZSl7dmFyIHQ9SS5jYWxsKHRoaXMsZT1PKGUsITApKTtyZXR1cm4hKHRoaXM9PT1GJiZvKEEsZSkmJiFvKE4sZSkpJiYoISh0fHwhbyh0aGlzLGUpfHwhbyhBLGUpfHxvKHRoaXMsRSkmJnRoaXNbRV1bZV0pfHx0KX0sSz1mdW5jdGlvbihlLHQpe2lmKGU9ZyhlKSx0PU8odCwhMCksZSE9PUZ8fCFvKEEsdCl8fG8oTix0KSl7dmFyIHI9UChlLHQpO3JldHVybiFyfHwhbyhBLHQpfHxvKGUsRSkmJmVbRV1bdF18fChyLmVudW1lcmFibGU9ITApLHJ9fSwkPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyPVMoZyhlKSksbj1bXSxpPTA7ci5sZW5ndGg+aTspbyhBLHQ9cltpKytdKXx8dD09RXx8dD09dXx8bi5wdXNoKHQpO3JldHVybiBufSxYPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyPWU9PT1GLG49UyhyP046ZyhlKSksaT1bXSxzPTA7bi5sZW5ndGg+czspIW8oQSx0PW5bcysrXSl8fHImJiFvKEYsdCl8fGkucHVzaChBW3RdKTtyZXR1cm4gaX07Qnx8KGEoKE09ZnVuY3Rpb24oKXtpZih0aGlzIGluc3RhbmNlb2YgTSl0aHJvdyBUeXBlRXJyb3IoIlN5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciEiKTt2YXIgZT1mKGFyZ3VtZW50cy5sZW5ndGg+MD9hcmd1bWVudHNbMF06dm9pZCAwKSx0PWZ1bmN0aW9uKHIpe3RoaXM9PT1GJiZ0LmNhbGwoTixyKSxvKHRoaXMsRSkmJm8odGhpc1tFXSxlKSYmKHRoaXNbRV1bZV09ITEpLEcodGhpcyxlLHcoMSxyKSl9O3JldHVybiBpJiZ6JiZHKEYsZSx7Y29uZmlndXJhYmxlOiEwLHNldDp0fSkscShlKX0pLnByb3RvdHlwZSwidG9TdHJpbmciLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2t9KSxSLmY9SyxMLmY9WixyKDU3KS5mPWsuZj0kLHIoMjkpLmY9WSxyKDQzKS5mPVgsaSYmIXIoMTUpJiZhKEYsInByb3BlcnR5SXNFbnVtZXJhYmxlIixZLCEwKSx5LmY9ZnVuY3Rpb24oZSl7cmV0dXJuIHEocChlKSl9KSxzKHMuRytzLlcrcy5GKiFCLHtTeW1ib2w6TX0pO2Zvcih2YXIgUT0iaGFzSW5zdGFuY2UsaXNDb25jYXRTcHJlYWRhYmxlLGl0ZXJhdG9yLG1hdGNoLHJlcGxhY2Usc2VhcmNoLHNwZWNpZXMsc3BsaXQsdG9QcmltaXRpdmUsdG9TdHJpbmdUYWcsdW5zY29wYWJsZXMiLnNwbGl0KCIsIiksZWU9MDtRLmxlbmd0aD5lZTspcChRW2VlKytdKTtmb3IodmFyIHRlPXgocC5zdG9yZSkscmU9MDt0ZS5sZW5ndGg+cmU7KXYodGVbcmUrK10pO3Mocy5TK3MuRiohQiwiU3ltYm9sIix7Zm9yOmZ1bmN0aW9uKGUpe3JldHVybiBvKEgsZSs9IiIpP0hbZV06SFtlXT1NKGUpfSxrZXlGb3I6ZnVuY3Rpb24oZSl7aWYoIUooZSkpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgYSBzeW1ib2whIik7Zm9yKHZhciB0IGluIEgpaWYoSFt0XT09PWUpcmV0dXJuIHR9LHVzZVNldHRlcjpmdW5jdGlvbigpe3o9ITB9LHVzZVNpbXBsZTpmdW5jdGlvbigpe3o9ITF9fSkscyhzLlMrcy5GKiFCLCJPYmplY3QiLHtjcmVhdGU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwPT09dD9qKGUpOlcoaihlKSx0KX0sZGVmaW5lUHJvcGVydHk6WixkZWZpbmVQcm9wZXJ0aWVzOlcsZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOkssZ2V0T3duUHJvcGVydHlOYW1lczokLGdldE93blByb3BlcnR5U3ltYm9sczpYfSksVSYmcyhzLlMrcy5GKighQnx8YyhmdW5jdGlvbigpe3ZhciBlPU0oKTtyZXR1cm4iW251bGxdIiE9RChbZV0pfHwie30iIT1EKHthOmV9KXx8Int9IiE9RChPYmplY3QoZSkpfSkpLCJKU09OIix7c3RyaW5naWZ5OmZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxyLG49W2VdLG89MTthcmd1bWVudHMubGVuZ3RoPm87KW4ucHVzaChhcmd1bWVudHNbbysrXSk7aWYocj10PW5bMV0sKG0odCl8fHZvaWQgMCE9PWUpJiYhSihlKSlyZXR1cm4gYih0KXx8KHQ9ZnVuY3Rpb24oZSx0KXtpZigiZnVuY3Rpb24iPT10eXBlb2YgciYmKHQ9ci5jYWxsKHRoaXMsZSx0KSksIUoodCkpcmV0dXJuIHR9KSxuWzFdPXQsRC5hcHBseShVLG4pfX0pLE0ucHJvdG90eXBlW1RdfHxyKDExKShNLnByb3RvdHlwZSxULE0ucHJvdG90eXBlLnZhbHVlT2YpLGQoTSwiU3ltYm9sIiksZChNYXRoLCJNYXRoIiwhMCksZChuLkpTT04sIkpTT04iLCEwKX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjApLG89cig0MyksaT1yKDI5KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9bihlKSxyPW8uZjtpZihyKWZvcih2YXIgcyxhPXIoZSksdT1pLmYsYz0wO2EubGVuZ3RoPmM7KXUuY2FsbChlLHM9YVtjKytdKSYmdC5wdXNoKHMpO3JldHVybiB0fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMjEpO2UuZXhwb3J0cz1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm4iQXJyYXkiPT1uKGUpfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTIpLG89cig1NykuZixpPXt9LnRvU3RyaW5nLHM9Im9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdyYmT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KTpbXTtlLmV4cG9ydHMuZj1mdW5jdGlvbihlKXtyZXR1cm4gcyYmIltvYmplY3QgV2luZG93XSI9PWkuY2FsbChlKT9mdW5jdGlvbihlKXt0cnl7cmV0dXJuIG8oZSl9Y2F0Y2goZSl7cmV0dXJuIHMuc2xpY2UoKX19KGUpOm8obihlKSl9fSxmdW5jdGlvbihlLHQscil7cig0MSkoImFzeW5jSXRlcmF0b3IiKX0sZnVuY3Rpb24oZSx0LHIpe3IoNDEpKCJvYnNlcnZhYmxlIil9LGZ1bmN0aW9uKGUsdCxyKXtyKDkwKSxlLmV4cG9ydHM9cigwKS5PYmplY3Qua2V5c30sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMzIpLG89cigyMCk7cig0NCkoImtleXMiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBvKG4oZSkpfX0pfSxmdW5jdGlvbihlLHQscil7cig5MiksZS5leHBvcnRzPXIoMCkuT2JqZWN0LmdldFByb3RvdHlwZU9mfSxmdW5jdGlvbihlLHQscil7dmFyIG49cigzMiksbz1yKDUzKTtyKDQ0KSgiZ2V0UHJvdG90eXBlT2YiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBvKG4oZSkpfX0pfSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoOTQpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7cig5NSksZS5leHBvcnRzPXIoMCkuT2JqZWN0LnNldFByb3RvdHlwZU9mfSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KTtuKG4uUywiT2JqZWN0Iix7c2V0UHJvdG90eXBlT2Y6cig5Nikuc2V0fSl9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDcpLG89cig5KSxpPWZ1bmN0aW9uKGUsdCl7aWYobyhlKSwhbih0KSYmbnVsbCE9PXQpdGhyb3cgVHlwZUVycm9yKHQrIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSEiKX07ZS5leHBvcnRzPXtzZXQ6T2JqZWN0LnNldFByb3RvdHlwZU9mfHwoIl9fcHJvdG9fXyJpbnt9P2Z1bmN0aW9uKGUsdCxuKXt0cnl7KG49cigxNCkoRnVuY3Rpb24uY2FsbCxyKDQ2KS5mKE9iamVjdC5wcm90b3R5cGUsIl9fcHJvdG9fXyIpLnNldCwyKSkoZSxbXSksdD0hKGUgaW5zdGFuY2VvZiBBcnJheSl9Y2F0Y2goZSl7dD0hMH1yZXR1cm4gZnVuY3Rpb24oZSxyKXtyZXR1cm4gaShlLHIpLHQ/ZS5fX3Byb3RvX189cjpuKGUsciksZX19KHt9LCExKTp2b2lkIDApLGNoZWNrOml9fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoOTgpLF9fZXNNb2R1bGU6ITB9fSxmdW5jdGlvbihlLHQscil7cig5OSk7dmFyIG49cigwKS5PYmplY3Q7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG4uY3JlYXRlKGUsdCl9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2KTtuKG4uUywiT2JqZWN0Iix7Y3JlYXRlOnIoMzgpfSl9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19dC5fX2VzTW9kdWxlPSEwO3ZhciBvPW4ocigyNSkpLGk9bihyKDEyNSkpO3QuZGVmYXVsdD1mdW5jdGlvbiBlKHQscixuKXtudWxsPT09dCYmKHQ9RnVuY3Rpb24ucHJvdG90eXBlKTt2YXIgcz0oMCxpLmRlZmF1bHQpKHQscik7aWYodm9pZCAwPT09cyl7dmFyIGE9KDAsby5kZWZhdWx0KSh0KTtyZXR1cm4gbnVsbD09PWE/dm9pZCAwOmUoYSxyLG4pfWlmKCJ2YWx1ZSJpbiBzKXJldHVybiBzLnZhbHVlO3ZhciB1PXMuZ2V0O3JldHVybiB2b2lkIDAhPT11P3UuY2FsbChuKTp2b2lkIDB9fSxmdW5jdGlvbihlLHQscil7dmFyIG49cig2Myksbz1yKDIpKCJpdGVyYXRvciIpLGk9cigxNyk7ZS5leHBvcnRzPXIoMCkuZ2V0SXRlcmF0b3JNZXRob2Q9ZnVuY3Rpb24oZSl7aWYodm9pZCAwIT1lKXJldHVybiBlW29dfHxlWyJAQGl0ZXJhdG9yIl18fGlbbihlKV19fSxmdW5jdGlvbihlLHQscil7cig2MCkscig1Mikscig1NCkscigxMDMpLHIoMTE0KSxyKDExNSksZS5leHBvcnRzPXIoMCkuUHJvbWlzZX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbixvLGkscyxhPXIoMTUpLHU9cigxKSxjPXIoMTQpLGw9cig2MyksZD1yKDYpLGY9cig3KSxwPXIoMjQpLHk9cigxMDQpLHY9cigxMDUpLGg9cig2NiksYj1yKDY3KS5zZXQsXz1yKDEwOSkoKSxtPXIoNTEpLGc9cig2OCksTz1yKDExMCksdz1yKDY5KSxqPXUuVHlwZUVycm9yLGs9dS5wcm9jZXNzLFI9ayYmay52ZXJzaW9ucyxMPVImJlIudjh8fCIiLHg9dS5Qcm9taXNlLFA9InByb2Nlc3MiPT1sKGspLEM9ZnVuY3Rpb24oKXt9LFM9bz1tLmYsTT0hIWZ1bmN0aW9uKCl7dHJ5e3ZhciBlPXgucmVzb2x2ZSgxKSx0PShlLmNvbnN0cnVjdG9yPXt9KVtyKDIpKCJzcGVjaWVzIildPWZ1bmN0aW9uKGUpe2UoQyxDKX07cmV0dXJuKFB8fCJmdW5jdGlvbiI9PXR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQpJiZlLnRoZW4oQylpbnN0YW5jZW9mIHQmJjAhPT1MLmluZGV4T2YoIjYuNiIpJiYtMT09PU8uaW5kZXhPZigiQ2hyb21lLzY2Iil9Y2F0Y2goZSl7fX0oKSxVPWZ1bmN0aW9uKGUpe3ZhciB0O3JldHVybiEoIWYoZSl8fCJmdW5jdGlvbiIhPXR5cGVvZih0PWUudGhlbikpJiZ0fSxEPWZ1bmN0aW9uKGUsdCl7aWYoIWUuX24pe2UuX249ITA7dmFyIHI9ZS5fYztfKGZ1bmN0aW9uKCl7Zm9yKHZhciBuPWUuX3Ysbz0xPT1lLl9zLGk9MDtyLmxlbmd0aD5pOykhZnVuY3Rpb24odCl7dmFyIHIsaSxzLGE9bz90Lm9rOnQuZmFpbCx1PXQucmVzb2x2ZSxjPXQucmVqZWN0LGw9dC5kb21haW47dHJ5e2E/KG98fCgyPT1lLl9oJiZJKGUpLGUuX2g9MSksITA9PT1hP3I9bjoobCYmbC5lbnRlcigpLHI9YShuKSxsJiYobC5leGl0KCkscz0hMCkpLHI9PT10LnByb21pc2U/YyhqKCJQcm9taXNlLWNoYWluIGN5Y2xlIikpOihpPVUocikpP2kuY2FsbChyLHUsYyk6dShyKSk6YyhuKX1jYXRjaChlKXtsJiYhcyYmbC5leGl0KCksYyhlKX19KHJbaSsrXSk7ZS5fYz1bXSxlLl9uPSExLHQmJiFlLl9oJiZFKGUpfSl9fSxFPWZ1bmN0aW9uKGUpe2IuY2FsbCh1LGZ1bmN0aW9uKCl7dmFyIHQscixuLG89ZS5fdixpPVQoZSk7aWYoaSYmKHQ9ZyhmdW5jdGlvbigpe1A/ay5lbWl0KCJ1bmhhbmRsZWRSZWplY3Rpb24iLG8sZSk6KHI9dS5vbnVuaGFuZGxlZHJlamVjdGlvbik/cih7cHJvbWlzZTplLHJlYXNvbjpvfSk6KG49dS5jb25zb2xlKSYmbi5lcnJvciYmbi5lcnJvcigiVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uIixvKX0pLGUuX2g9UHx8VChlKT8yOjEpLGUuX2E9dm9pZCAwLGkmJnQuZSl0aHJvdyB0LnZ9KX0sVD1mdW5jdGlvbihlKXtyZXR1cm4gMSE9PWUuX2gmJjA9PT0oZS5fYXx8ZS5fYykubGVuZ3RofSxJPWZ1bmN0aW9uKGUpe2IuY2FsbCh1LGZ1bmN0aW9uKCl7dmFyIHQ7UD9rLmVtaXQoInJlamVjdGlvbkhhbmRsZWQiLGUpOih0PXUub25yZWplY3Rpb25oYW5kbGVkKSYmdCh7cHJvbWlzZTplLHJlYXNvbjplLl92fSl9KX0sSD1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2R8fCh0Ll9kPSEwLCh0PXQuX3d8fHQpLl92PWUsdC5fcz0yLHQuX2F8fCh0Ll9hPXQuX2Muc2xpY2UoKSksRCh0LCEwKSl9LEE9ZnVuY3Rpb24oZSl7dmFyIHQscj10aGlzO2lmKCFyLl9kKXtyLl9kPSEwLHI9ci5fd3x8cjt0cnl7aWYocj09PWUpdGhyb3cgaigiUHJvbWlzZSBjYW4ndCBiZSByZXNvbHZlZCBpdHNlbGYiKTsodD1VKGUpKT9fKGZ1bmN0aW9uKCl7dmFyIG49e193OnIsX2Q6ITF9O3RyeXt0LmNhbGwoZSxjKEEsbiwxKSxjKEgsbiwxKSl9Y2F0Y2goZSl7SC5jYWxsKG4sZSl9fSk6KHIuX3Y9ZSxyLl9zPTEsRChyLCExKSl9Y2F0Y2goZSl7SC5jYWxsKHtfdzpyLF9kOiExfSxlKX19fTtNfHwoeD1mdW5jdGlvbihlKXt5KHRoaXMseCwiUHJvbWlzZSIsIl9oIikscChlKSxuLmNhbGwodGhpcyk7dHJ5e2UoYyhBLHRoaXMsMSksYyhILHRoaXMsMSkpfWNhdGNoKGUpe0guY2FsbCh0aGlzLGUpfX0sKG49ZnVuY3Rpb24oZSl7dGhpcy5fYz1bXSx0aGlzLl9hPXZvaWQgMCx0aGlzLl9zPTAsdGhpcy5fZD0hMSx0aGlzLl92PXZvaWQgMCx0aGlzLl9oPTAsdGhpcy5fbj0hMX0pLnByb3RvdHlwZT1yKDExMSkoeC5wcm90b3R5cGUse3RoZW46ZnVuY3Rpb24oZSx0KXt2YXIgcj1TKGgodGhpcyx4KSk7cmV0dXJuIHIub2s9ImZ1bmN0aW9uIiE9dHlwZW9mIGV8fGUsci5mYWlsPSJmdW5jdGlvbiI9PXR5cGVvZiB0JiZ0LHIuZG9tYWluPVA/ay5kb21haW46dm9pZCAwLHRoaXMuX2MucHVzaChyKSx0aGlzLl9hJiZ0aGlzLl9hLnB1c2gociksdGhpcy5fcyYmRCh0aGlzLCExKSxyLnByb21pc2V9LGNhdGNoOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnRoZW4odm9pZCAwLGUpfX0pLGk9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgbjt0aGlzLnByb21pc2U9ZSx0aGlzLnJlc29sdmU9YyhBLGUsMSksdGhpcy5yZWplY3Q9YyhILGUsMSl9LG0uZj1TPWZ1bmN0aW9uKGUpe3JldHVybiBlPT09eHx8ZT09PXM/bmV3IGkoZSk6byhlKX0pLGQoZC5HK2QuVytkLkYqIU0se1Byb21pc2U6eH0pLHIoMjYpKHgsIlByb21pc2UiKSxyKDExMikoIlByb21pc2UiKSxzPXIoMCkuUHJvbWlzZSxkKGQuUytkLkYqIU0sIlByb21pc2UiLHtyZWplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQ9Uyh0aGlzKTtyZXR1cm4oMCx0LnJlamVjdCkoZSksdC5wcm9taXNlfX0pLGQoZC5TK2QuRiooYXx8IU0pLCJQcm9taXNlIix7cmVzb2x2ZTpmdW5jdGlvbihlKXtyZXR1cm4gdyhhJiZ0aGlzPT09cz94OnRoaXMsZSl9fSksZChkLlMrZC5GKiEoTSYmcigxMTMpKGZ1bmN0aW9uKGUpe3guYWxsKGUpLmNhdGNoKEMpfSkpLCJQcm9taXNlIix7YWxsOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1TKHQpLG49ci5yZXNvbHZlLG89ci5yZWplY3QsaT1nKGZ1bmN0aW9uKCl7dmFyIHI9W10saT0wLHM9MTt2KGUsITEsZnVuY3Rpb24oZSl7dmFyIGE9aSsrLHU9ITE7ci5wdXNoKHZvaWQgMCkscysrLHQucmVzb2x2ZShlKS50aGVuKGZ1bmN0aW9uKGUpe3V8fCh1PSEwLHJbYV09ZSwtLXN8fG4ocikpfSxvKX0pLC0tc3x8bihyKX0pO3JldHVybiBpLmUmJm8oaS52KSxyLnByb21pc2V9LHJhY2U6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPVModCksbj1yLnJlamVjdCxvPWcoZnVuY3Rpb24oKXt2KGUsITEsZnVuY3Rpb24oZSl7dC5yZXNvbHZlKGUpLnRoZW4oci5yZXNvbHZlLG4pfSl9KTtyZXR1cm4gby5lJiZuKG8udiksci5wcm9taXNlfX0pfSxmdW5jdGlvbihlLHQpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscixuKXtpZighKGUgaW5zdGFuY2VvZiB0KXx8dm9pZCAwIT09biYmbiBpbiBlKXRocm93IFR5cGVFcnJvcihyKyI6IGluY29ycmVjdCBpbnZvY2F0aW9uISIpO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMTQpLG89cigxMDYpLGk9cigxMDcpLHM9cig5KSxhPXIoNDkpLHU9cigxMDEpLGM9e30sbD17fTsodD1lLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsZCxmKXt2YXIgcCx5LHYsaCxiPWY/ZnVuY3Rpb24oKXtyZXR1cm4gZX06dShlKSxfPW4ocixkLHQ/MjoxKSxtPTA7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGIpdGhyb3cgVHlwZUVycm9yKGUrIiBpcyBub3QgaXRlcmFibGUhIik7aWYoaShiKSl7Zm9yKHA9YShlLmxlbmd0aCk7cD5tO20rKylpZigoaD10P18ocyh5PWVbbV0pWzBdLHlbMV0pOl8oZVttXSkpPT09Y3x8aD09PWwpcmV0dXJuIGh9ZWxzZSBmb3Iodj1iLmNhbGwoZSk7ISh5PXYubmV4dCgpKS5kb25lOylpZigoaD1vKHYsXyx5LnZhbHVlLHQpKT09PWN8fGg9PT1sKXJldHVybiBofSkuQlJFQUs9Yyx0LlJFVFVSTj1sfSxmdW5jdGlvbihlLHQscil7dmFyIG49cig5KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIsbyl7dHJ5e3JldHVybiBvP3QobihyKVswXSxyWzFdKTp0KHIpfWNhdGNoKHQpe3ZhciBpPWUucmV0dXJuO3Rocm93IHZvaWQgMCE9PWkmJm4oaS5jYWxsKGUpKSx0fX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDE3KSxvPXIoMikoIml0ZXJhdG9yIiksaT1BcnJheS5wcm90b3R5cGU7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDAhPT1lJiYobi5BcnJheT09PWV8fGlbb109PT1lKX19LGZ1bmN0aW9uKGUsdCl7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj12b2lkIDA9PT1yO3N3aXRjaCh0Lmxlbmd0aCl7Y2FzZSAwOnJldHVybiBuP2UoKTplLmNhbGwocik7Y2FzZSAxOnJldHVybiBuP2UodFswXSk6ZS5jYWxsKHIsdFswXSk7Y2FzZSAyOnJldHVybiBuP2UodFswXSx0WzFdKTplLmNhbGwocix0WzBdLHRbMV0pO2Nhc2UgMzpyZXR1cm4gbj9lKHRbMF0sdFsxXSx0WzJdKTplLmNhbGwocix0WzBdLHRbMV0sdFsyXSk7Y2FzZSA0OnJldHVybiBuP2UodFswXSx0WzFdLHRbMl0sdFszXSk6ZS5jYWxsKHIsdFswXSx0WzFdLHRbMl0sdFszXSl9cmV0dXJuIGUuYXBwbHkocix0KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEpLG89cig2Nykuc2V0LGk9bi5NdXRhdGlvbk9ic2VydmVyfHxuLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIscz1uLnByb2Nlc3MsYT1uLlByb21pc2UsdT0icHJvY2VzcyI9PXIoMjEpKHMpO2UuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciBlLHQscixjPWZ1bmN0aW9uKCl7dmFyIG4sbztmb3IodSYmKG49cy5kb21haW4pJiZuLmV4aXQoKTtlOyl7bz1lLmZuLGU9ZS5uZXh0O3RyeXtvKCl9Y2F0Y2gobil7dGhyb3cgZT9yKCk6dD12b2lkIDAsbn19dD12b2lkIDAsbiYmbi5lbnRlcigpfTtpZih1KXI9ZnVuY3Rpb24oKXtzLm5leHRUaWNrKGMpfTtlbHNlIGlmKCFpfHxuLm5hdmlnYXRvciYmbi5uYXZpZ2F0b3Iuc3RhbmRhbG9uZSlpZihhJiZhLnJlc29sdmUpe3ZhciBsPWEucmVzb2x2ZSh2b2lkIDApO3I9ZnVuY3Rpb24oKXtsLnRoZW4oYyl9fWVsc2Ugcj1mdW5jdGlvbigpe28uY2FsbChuLGMpfTtlbHNle3ZhciBkPSEwLGY9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiIpO25ldyBpKGMpLm9ic2VydmUoZix7Y2hhcmFjdGVyRGF0YTohMH0pLHI9ZnVuY3Rpb24oKXtmLmRhdGE9ZD0hZH19cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciBvPXtmbjpuLG5leHQ6dm9pZCAwfTt0JiYodC5uZXh0PW8pLGV8fChlPW8scigpKSx0PW99fX0sZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXIoMSkubmF2aWdhdG9yO2UuZXhwb3J0cz1uJiZuLnVzZXJBZ2VudHx8IiJ9LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDExKTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0LHIpe2Zvcih2YXIgbyBpbiB0KXImJmVbb10/ZVtvXT10W29dOm4oZSxvLHRbb10pO3JldHVybiBlfX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1yKDEpLG89cigwKSxpPXIoOCkscz1yKDQpLGE9cigyKSgic3BlY2llcyIpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXt2YXIgdD0iZnVuY3Rpb24iPT10eXBlb2Ygb1tlXT9vW2VdOm5bZV07cyYmdCYmIXRbYV0mJmkuZih0LGEse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc319KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDIpKCJpdGVyYXRvciIpLG89ITE7dHJ5e3ZhciBpPVs3XVtuXSgpO2kucmV0dXJuPWZ1bmN0aW9uKCl7bz0hMH0sQXJyYXkuZnJvbShpLGZ1bmN0aW9uKCl7dGhyb3cgMn0pfWNhdGNoKGUpe31lLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtpZighdCYmIW8pcmV0dXJuITE7dmFyIHI9ITE7dHJ5e3ZhciBpPVs3XSxzPWlbbl0oKTtzLm5leHQ9ZnVuY3Rpb24oKXtyZXR1cm57ZG9uZTpyPSEwfX0saVtuXT1mdW5jdGlvbigpe3JldHVybiBzfSxlKGkpfWNhdGNoKGUpe31yZXR1cm4gcn19LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7dmFyIG49cig2KSxvPXIoMCksaT1yKDEpLHM9cig2NiksYT1yKDY5KTtuKG4uUCtuLlIsIlByb21pc2UiLHtmaW5hbGx5OmZ1bmN0aW9uKGUpe3ZhciB0PXModGhpcyxvLlByb21pc2V8fGkuUHJvbWlzZSkscj0iZnVuY3Rpb24iPT10eXBlb2YgZTtyZXR1cm4gdGhpcy50aGVuKHI/ZnVuY3Rpb24ocil7cmV0dXJuIGEodCxlKCkpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gcn0pfTplLHI/ZnVuY3Rpb24ocil7cmV0dXJuIGEodCxlKCkpLnRoZW4oZnVuY3Rpb24oKXt0aHJvdyByfSl9OmUpfX0pfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoNiksbz1yKDUxKSxpPXIoNjgpO24obi5TLCJQcm9taXNlIix7dHJ5OmZ1bmN0aW9uKGUpe3ZhciB0PW8uZih0aGlzKSxyPWkoZSk7cmV0dXJuKHIuZT90LnJlamVjdDp0LnJlc29sdmUpKHIudiksdC5wcm9taXNlfX0pfSwsZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksdC5PYmplY3RUeXBlPXQuQ2hhbmdlVHlwZT12b2lkIDA7dmFyIG89bihyKDMpKSxpPW4ocig1KSk7cigxMjMpO3ZhciBzPXIoMTkpLGE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQpeygwLG8uZGVmYXVsdCkodGhpcyxlKTt0aGlzLl9vYnNlcnZlcnM9W10sdGhpcy5fZmlsdGVycz17fSx0aGlzLl9kYXRhPXR8fHt9LHRoaXMuX2ludGVybmFsT2JzZXJ2ZSh0aGlzLl9kYXRhKX1yZXR1cm4oMCxpLmRlZmF1bHQpKGUsW3trZXk6Im9ic2VydmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29ic2VydmVycy5wdXNoKGUpfX0se2tleToiZmluZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9KDAscy5wYXJzZUF0dHJpYnV0ZXMpKGUpO3JldHVybiB0aGlzLl9maW5kV2l0aFNwbGl0KHQpfX0se2tleToiZmluZEJlZm9yZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9e30scj0oMCxzLnBhcnNlQXR0cmlidXRlcykoZSk7cmV0dXJuIHQubGFzdD1yLnBvcCgpLHQub2JqPXRoaXMuX2ZpbmRXaXRoU3BsaXQociksdH19LHtrZXk6Il9maW5kV2l0aFNwbGl0Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9kYXRhO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24oZSl7dD10W2VdfSksdH19LHtrZXk6Il9pbnRlcm5hbE9ic2VydmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dGhpcy5fZGF0YT1PYmplY3QuZGVlcE9ic2VydmUoZSxmdW5jdGlvbihlKXtlLmV2ZXJ5KGZ1bmN0aW9uKGUpe3QuX29uQ2hhbmdlcyhlKX0pfSl9fSx7a2V5OiJfZmlyZUV2ZW50Iix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vYnNlcnZlcnMuZm9yRWFjaChmdW5jdGlvbih0KXt0KGUpfSl9fSx7a2V5OiJfb25DaGFuZ2VzIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lLm9iamVjdCxyPXZvaWQgMDt0LmNvbnN0cnVjdG9yPT09T2JqZWN0JiYocj1jLk9CSkVDVCksdC5jb25zdHJ1Y3Rvcj09PUFycmF5JiYocj1jLkFSUkFZKTt2YXIgbj1lLmtleXBhdGgsbz10W2UubmFtZV07InVwZGF0ZSIhPT1lLnR5cGV8fG4uaW5jbHVkZXMoIi5sZW5ndGgiKXx8dGhpcy5fZmlyZUV2ZW50KHtjVHlwZTp1LlVQREFURSxvVHlwZTpyLGZpZWxkOm4sZGF0YTpvfSksImFkZCI9PT1lLnR5cGUmJnRoaXMuX2ZpcmVFdmVudCh7Y1R5cGU6dS5BREQsb1R5cGU6cixmaWVsZDpuLGRhdGE6b30pLCJkZWxldGUiPT09ZS50eXBlJiZ0aGlzLl9maXJlRXZlbnQoe2NUeXBlOnUuUkVNT1ZFLG9UeXBlOnIsZmllbGQ6bn0pfX0se2tleToiZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGF9fV0pLGV9KCksdT10LkNoYW5nZVR5cGU9e1VQREFURToidXBkYXRlIixBREQ6ImFkZCIsUkVNT1ZFOiJyZW1vdmUifSxjPXQuT2JqZWN0VHlwZT17T0JKRUNUOiJvYmplY3QiLEFSUkFZOiJhcnJheSJ9O3QuZGVmYXVsdD1hfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoMTgpKSxpPW4ocigzKSkscz1uKHIoNSkpLGE9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSksdT1uKHIoMTE3KSksYz1yKDE5KSxsPWEuZ2V0TG9nZ2VyKCJEYXRhT2JqZWN0Q2hpbGQiKSxkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXtmdW5jdGlvbiByKGUpe3Rocm93IltEYXRhT2JqZWN0Q2hpbGRdICIrZSsiIG1hbmRhdG9yeSBwYXJhbWV0ZXIgaXMgbWlzc2luZyJ9KDAsaS5kZWZhdWx0KSh0aGlzLGUpO3ZhciBuPXRoaXM7dC5wYXJlbnQ/bi5fcGFyZW50PXQucGFyZW50OnIoInBhcmVudCIpLHQudXJsP24uX3VybD10LnVybDpyKCJ1cmwiKSx0LmNyZWF0ZWQ/bi5fY3JlYXRlZD10LmNyZWF0ZWQ6cigiY3JlYXRlZCIpLHQucmVwb3J0ZXI/bi5fcmVwb3J0ZXI9dC5yZXBvcnRlcjpyKCJyZXBvcnRlciIpLHQucnVudGltZT9uLl9ydW50aW1lPXQucnVudGltZTpyKCJydW50aW1lIiksdC5zY2hlbWE/bi5fc2NoZW1hPXQuc2NoZW1hOnIoInNjaGVtYSIpLHQucGFyZW50T2JqZWN0P24uX3BhcmVudE9iamVjdD10LnBhcmVudE9iamVjdDpyKCJwYXJlbnRPYmplY3QiKSx0Lm5hbWUmJihuLl9uYW1lPXQubmFtZSksdC5kZXNjcmlwdGlvbiYmKG4uX2Rlc2NyaXB0aW9uPXQuZGVzY3JpcHRpb24pLHQudGFncyYmKG4uX3RhZ3M9dC50YWdzKSx0LnJlc291cmNlcyYmKG4uX3Jlc291cmNlcz10LnJlc291cmNlcyksdC5vYnNlcnZlclN0b3JhZ2UmJihuLl9vYnNlcnZlclN0b3JhZ2U9dC5vYnNlcnZlclN0b3JhZ2UpLHQucHVibGljT2JzZXJ2YXRpb24mJihuLl9wdWJsaWNPYnNlcnZhdGlvbj10LnB1YmxpY09ic2VydmF0aW9uKSxuLl9jaGlsZElkPXQudXJsLHQuZGF0YT9uLl9zeW5jT2JqPW5ldyB1LmRlZmF1bHQodC5kYXRhKTpuLl9zeW5jT2JqPW5ldyB1LmRlZmF1bHQoe30pLGwubG9nKCJbRGF0YU9iamVjdENoaWxkIC0gIENvbnN0cnVjdG9yXSAtICIsbi5fc3luY09iaiksbi5fYnVzPW4uX3BhcmVudE9iamVjdC5fYnVzLG4uX293bmVyPW4uX3BhcmVudE9iamVjdC5fb3duZXIsbi5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxuLl9tZXRhZGF0YT10LGRlbGV0ZSBuLl9tZXRhZGF0YS5wYXJlbnRPYmplY3Qsbi5fc2hhcmluZ1N0YXR1cz0hMX1yZXR1cm4oMCxzLmRlZmF1bHQpKGUsW3trZXk6InNoYXJlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX3NoYXJpbmdTdGF0dXM9bmV3IG8uZGVmYXVsdChmdW5jdGlvbihyLG4pe3ZhciBvO289ZT90Lm1ldGFkYXRhLnBhcmVudDp0Lm1ldGFkYXRhLnBhcmVudCsiL2NoaWxkcmVuLyIrdC5tZXRhZGF0YS5jaGlsZHJlbjt2YXIgaT10Lm1ldGFkYXRhO2kuZGF0YT10LmRhdGE7dmFyIHM9e3R5cGU6ImNyZWF0ZSIsZnJvbTp0Lm1ldGFkYXRhLnJlcG9ydGVyLHRvOm8sYm9keTp7cmVzb3VyY2U6aS51cmwsdmFsdWU6aX19O2lmKHQuaWRlbnRpdHkmJihzLmJvZHkuaWRlbnRpdHk9dC5pZGVudGl0eSksdC5fcGFyZW50T2JqZWN0LmRhdGEuaGFzT3duUHJvcGVydHkoIm11dHVhbCIpJiYocy5ib2R5Lm11dHVhbD10Ll9wYXJlbnRPYmplY3QuZGF0YS5tdXR1YWwpLHQuX3BhcmVudE9iamVjdC5tZXRhZGF0YS5yZXBvcnRlcj09PXQubWV0YWRhdGEucmVwb3J0ZXIpcmV0dXJuIHQuX2J1cy5wb3N0TWVzc2FnZSgoMCxjLmRlZXBDbG9uZSkocykpLHIoKTt2YXIgYT10Ll9idXMucG9zdE1lc3NhZ2UoKDAsYy5kZWVwQ2xvbmUpKHMpLGZ1bmN0aW9uKGUpe2lmKGUudG89PT10Ll9yZXBvcnRlcil7dC5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIocy5mcm9tLGUuaWQpLGwubG9nKCJbU3luY2hlci5EYXRhT2JqZWN0Q2hpbGQuc2hhcmVdIFBhcmVudCByZXBvcnRlciByZXBseSAiLGUpO3ZhciBvPXtjb2RlOmUuYm9keSYmZS5ib2R5LmNvZGU/ZS5ib2R5LmNvZGU6NTAwLGRlc2M6ZS5ib2R5JiZlLmJvZHkuZGVzYz9lLmJvZHkuZGVzYzoiVW5rbm93biJ9O3JldHVybiBlLmJvZHkuY29kZTwzMDA/cihvKTpuKG8pfX0sITEpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gdC5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIocy5mcm9tLGEpLG4oe2NvZGU6NDA4LGRlc2M6InRpbW91dCJ9KX0sM2UzKX0pfX0se2tleToic3RvcmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt9LHI9ZS5tZXRhZGF0YS5jaGlsZHJlbisiLiIrZS5tZXRhZGF0YS51cmw7dC52YWx1ZT1lLm1ldGFkYXRhLHQuaWRlbnRpdHk9ZS5pZGVudGl0eTt2YXIgbj17ZnJvbTplLm1ldGFkYXRhLnJlcG9ydGVyLHRvOmUuX3BhcmVudE9iamVjdC5fc3luY2hlci5fc3ViVVJMLHR5cGU6ImNyZWF0ZSIsYm9keTp7cmVzb3VyY2U6ZS5tZXRhZGF0YS5wYXJlbnQsYXR0cmlidXRlOnIsdmFsdWU6dH19O2wubG9nKCJbRGF0YU9iamVjdENoaWxkLnN0b3JlXToiLG4pLGUuX2J1cy5wb3N0TWVzc2FnZShuKX19LHtrZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX3JlcG9ydGVyPT09ZS5fb3duZXImJihlLl9saXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fcmVwb3J0ZXIsZnVuY3Rpb24odCl7InJlc3BvbnNlIj09PXQudHlwZSYmdC5pZD09PWUuX21zZ0lkJiYobC5sb2coIkRhdGFPYmplY3RDaGlsZC5vblJlc3BvbnNlOiIsdCksZS5fb25SZXNwb25zZSh0KSl9KSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLl9saXN0ZW5lciYmdGhpcy5fbGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJkZWxldGUiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5fcmVsZWFzZUxpc3RlbmVycygpfX0se2tleToib25DaGFuZ2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX3N5bmNPYmoub2JzZXJ2ZShmdW5jdGlvbih0KXtsLmxvZygiW0RhdGFPYmplY3RDaGlsZCAtIG9ic2VydmVyXSAtICIsdCksZSh0KX0pfX0se2tleToib25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25SZXNwb25zZUhhbmRsZXI9ZX19LHtrZXk6Il9vblJlc3BvbnNlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD17dHlwZTplLnR5cGUsdXJsOmUuYm9keS5zb3VyY2UsY29kZTplLmJvZHkuY29kZX07dGhpcy5fb25SZXNwb25zZUhhbmRsZXImJnRoaXMuX29uUmVzcG9uc2VIYW5kbGVyKHQpfX0se2tleToic2hhcmVhYmxlIixnZXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm1ldGFkYXRhO3JldHVybiBlLmRhdGE9dGhpcy5kYXRhLGV9fSx7a2V5OiJtZXRhZGF0YSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhfX0se2tleToiY2hpbGRJZCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NoaWxkSWR9fSx7a2V5OiJzaGFyaW5nU3RhdHVzIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2hhcmluZ1N0YXR1c319LHtrZXk6ImRhdGEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zeW5jT2JqLmRhdGF9fSx7a2V5OiJpZGVudGl0eSIsc2V0OmZ1bmN0aW9uKGUpe3RoaXMuX2lkZW50aXR5PWV9LGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pZGVudGl0eX19XSksZX0oKTt0LmRlZmF1bHQ9ZCxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7cigxMjApLGUuZXhwb3J0cz1yKDApLk9iamVjdC5hc3NpZ259LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDYpO24obi5TK24uRiwiT2JqZWN0Iix7YXNzaWduOnIoMTIxKX0pfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO3ZhciBuPXIoMjApLG89cig0MyksaT1yKDI5KSxzPXIoMzIpLGE9cig1NSksdT1PYmplY3QuYXNzaWduO2UuZXhwb3J0cz0hdXx8cigxMykoZnVuY3Rpb24oKXt2YXIgZT17fSx0PXt9LHI9U3ltYm9sKCksbj0iYWJjZGVmZ2hpamtsbW5vcHFyc3QiO3JldHVybiBlW3JdPTcsbi5zcGxpdCgiIikuZm9yRWFjaChmdW5jdGlvbihlKXt0W2VdPWV9KSw3IT11KHt9LGUpW3JdfHxPYmplY3Qua2V5cyh1KHt9LHQpKS5qb2luKCIiKSE9bn0pP2Z1bmN0aW9uKGUsdCl7Zm9yKHZhciByPXMoZSksdT1hcmd1bWVudHMubGVuZ3RoLGM9MSxsPW8uZixkPWkuZjt1PmM7KWZvcih2YXIgZixwPWEoYXJndW1lbnRzW2MrK10pLHk9bD9uKHApLmNvbmNhdChsKHApKTpuKHApLHY9eS5sZW5ndGgsaD0wO3Y+aDspZC5jYWxsKHAsZj15W2grK10pJiYocltmXT1wW2ZdKTtyZXR1cm4gcn06dX0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDQ3KSksaT1uKHIoMTgpKSxzPW4ocig0MikpLGE9bihyKDc4KSksdT1uKHIoMykpLGM9bihyKDUpKSxsPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLGQ9cigxMTcpLGY9bihkKSxwPW4ocigxMTgpKSx5PXIoMTkpLHY9bihyKDEyOCkpLGg9bC5nZXRMb2dnZXIoIkRhdGFPYmplY3QiKSxiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXtmdW5jdGlvbiByKGUpe3Rocm93IltEYXRhT2JqZWN0XSAiK2UrIiBtYW5kYXRvcnkgcGFyYW1ldGVyIGlzIG1pc3NpbmcifSgwLHUuZGVmYXVsdCkodGhpcyxlKTt2YXIgbj10aGlzO3Quc3luY2hlcj9uLl9zeW5jaGVyPXQuc3luY2hlcjpyKCJzeW5jaGVyIiksdC51cmw/bi5fdXJsPXQudXJsOnIoInVybCIpLHQuY3JlYXRlZD9uLl9jcmVhdGVkPXQuY3JlYXRlZDpyKCJjcmVhdGVkIiksdC5yZXBvcnRlcj9uLl9yZXBvcnRlcj10LnJlcG9ydGVyOnIoInJlcG9ydGVyIiksdC5ydW50aW1lP24uX3J1bnRpbWU9dC5ydW50aW1lOnIoInJ1bnRpbWUiKSx0LnNjaGVtYT9uLl9zY2hlbWE9dC5zY2hlbWE6cigic2NoZW1hIiksdC5uYW1lP24uX25hbWU9dC5uYW1lOnIoIm5hbWUiKSxuLl9zdGF0dXM9dC5zdGF0dXMsdC5kYXRhP24uX3N5bmNPYmo9bmV3IGYuZGVmYXVsdCh0LmRhdGEpOm4uX3N5bmNPYmo9bmV3IGYuZGVmYXVsdCh7fSksbi5fY2hpbGRyZW5zPXQuY2hpbGRyZW5zLG4uX211dHVhbD10Lm11dHVhbCxuLl92ZXJzaW9uPTAsbi5fY2hpbGRJZD0wLG4uX2NoaWxkcmVuTGlzdGVuZXJzPVtdLG4uX29uQWRkQ2hpbGRyZW5IYW5kbGVyLG4uX3Jlc3VtZWQ9dC5yZXN1bWUsdC5yZXN1bWUmJihuLl92ZXJzaW9uPXQudmVyc2lvbiksbi5fb3duZXI9dC5zeW5jaGVyLl9vd25lcixuLl9idXM9dC5zeW5jaGVyLl9idXMsdC5kZXNjcmlwdGlvbiYmKG4uX2Rlc2NyaXB0aW9uPXQuZGVzY3JpcHRpb24pLHQudGFncyYmKG4uX3RhZ3M9dC50YWdzKSx0LnJlc291cmNlcyYmKG4uX3Jlc291cmNlcz10LnJlc291cmNlcyksdC5vYnNlcnZlclN0b3JhZ2UmJihuLl9vYnNlcnZlclN0b3JhZ2U9dC5vYnNlcnZlclN0b3JhZ2UpLHQucHVibGljT2JzZXJ2YXRpb24mJihuLl9wdWJsaWNPYnNlcnZhdGlvbj10LnB1YmxpY09ic2VydmF0aW9uKSxuLl9tZXRhZGF0YT0oMCxhLmRlZmF1bHQpKHQpLCghdC5oYXNPd25Qcm9wZXJ0eSgicmVzdW1lIil8fHQuaGFzT3duUHJvcGVydHkoInJlc3VtZSIpJiYhdC5yZXN1bWUpJiYobi5fbWV0YWRhdGEubGFzdE1vZGlmaWVkPW4uX21ldGFkYXRhLmNyZWF0ZWQpLGRlbGV0ZSBuLl9tZXRhZGF0YS5kYXRhLGRlbGV0ZSBuLl9tZXRhZGF0YS5zeW5jaGVyLGRlbGV0ZSBuLl9tZXRhZGF0YS5hdXRob3Jpc2Usbi5faHlwZXJ0eVJlc291cmNlRmFjdG9yeT1uZXcgdi5kZWZhdWx0LG4uX2NoaWxkcmVuT2JqZWN0cz17fSxuLl9zaGFyZWRDaGlsZHM9W119cmV0dXJuKDAsYy5kZWZhdWx0KShlLFt7a2V5OiJfZ2V0TGFzdENoaWxkSWQiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PTAscj1lLl9vd25lcisiIyIrdDtyZXR1cm4oMCxzLmRlZmF1bHQpKGUuX2NoaWxkcmVucykuZmlsdGVyKGZ1bmN0aW9uKHQpe2UuX2NoaWxkcmVuc1t0XS5jaGlsZElkPnImJihyPWUuX2NoaWxkcmVuc1t0XS5jaGlsZElkKX0pLE51bWJlcihyLnNwbGl0KCIjIilbMV0pfX0se2tleToiX2FsbG9jYXRlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD10aGlzLHI9dC5fdXJsKyIvY2hpbGRyZW4vIjtoLmxvZygiW0RhdGEgT2JqZWN0IC0gQWxsb2NhdGVMaXN0ZW5lcnNdIC0gIix0Ll9jaGlsZHJlbnMpLHQuX2NoaWxkcmVucyYmdC5fY2hpbGRyZW5zLmZvckVhY2goZnVuY3Rpb24obil7dmFyIG89cituLGk9dC5fYnVzLmFkZExpc3RlbmVyKG8sZnVuY3Rpb24ocil7aWYoci5mcm9tIT09ZS5fb3duZXIpc3dpdGNoKGgubG9nKCJEYXRhT2JqZWN0LUNoaWxkcmVuLVJDVjogIixyKSxyLnR5cGUpe2Nhc2UiY3JlYXRlIjp0Ll9vbkNoaWxkQ3JlYXRlKHIpO2JyZWFrO2Nhc2UiZGVsZXRlIjpoLmxvZyhyKTticmVhaztkZWZhdWx0OnQuX2NoYW5nZUNoaWxkcmVuKHIpfX0pO3QuX2NoaWxkcmVuTGlzdGVuZXJzLnB1c2goaSl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fY2hpbGRyZW5MaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbihlKXtlLnJlbW92ZSgpfSksKDAscy5kZWZhdWx0KShlLl9jaGlsZHJlbk9iamVjdHMpLmZvckVhY2goZnVuY3Rpb24odCl7KDAscy5kZWZhdWx0KShlLl9jaGlsZHJlbk9iamVjdHNbdF0pLmZvckVhY2goZnVuY3Rpb24ocil7ZS5fY2hpbGRyZW5PYmplY3RzW3RdW3JdLl9yZWxlYXNlTGlzdGVuZXJzKCl9KX0pfX0se2tleToicmVzdW1lQ2hpbGRyZW5zIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9dGhpcyxuPXRoaXMuX293bmVyKyIjIit0aGlzLl9jaGlsZElkOygwLHMuZGVmYXVsdCkoZSkuZm9yRWFjaChmdW5jdGlvbihvKXt2YXIgaT1lW29dOygwLHMuZGVmYXVsdCkoaSkuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgcz0hMTtyLl9jaGlsZHJlbk9iamVjdHMuaGFzT3duUHJvcGVydHkobyl8fChyLl9jaGlsZHJlbk9iamVjdHNbb109e30pLGlbZV0udmFsdWUucmVzb3VyY2VUeXBlJiYhci5fY2hpbGRyZW5PYmplY3RzW29dLmhhc093blByb3BlcnR5KGUpPyhyLl9jaGlsZHJlbk9iamVjdHNbb11bZV09ci5fcmVzdW1lSHlwZXJ0eVJlc291cmNlKGlbZV0pLHM9ITApOnIuX2NoaWxkcmVuT2JqZWN0c1tvXS5oYXNPd25Qcm9wZXJ0eShlKXx8KHIuX2NoaWxkcmVuT2JqZWN0c1tvXVtlXT1yLl9yZXN1bWVDaGlsZChpW2VdKSxoLmxvZygiW0RhdGFPYmplY3QucmVzdW1lQ2hpbGRyZW5zXSBuZXcgRGF0YU9iamVjdENoaWxkOiAiLHIuX2NoaWxkcmVuT2JqZWN0c1tvXVtlXSkscz0hMCkscyYmZT5uJiYobj1lLGgubG9nKCJbRGF0YU9iamVjdFJlcG9ydGVyLnJlc3VtZUNoaWxkcmVuc10gLSByZXN1bWluZzogIix0Ll9jaGlsZHJlbk9iamVjdHNbb11bZV0pKX0pfSksdGhpcy5fY2hpbGRJZD1OdW1iZXIobi5zcGxpdCgiIyIpWzFdKX19LHtrZXk6Il9yZXN1bWVDaGlsZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUudmFsdWU7ci5wYXJlbnRPYmplY3Q9dCxyLnBhcmVudD10Ll91cmw7dmFyIG49bmV3IHAuZGVmYXVsdChyKTtuLmlkZW50aXR5PWUuaWRlbnRpdHk7dmFyIG89e3R5cGU6ImNyZWF0ZSIsZnJvbTpuLnJlcG9ydGVyLHVybDpuLnBhcmVudCx2YWx1ZTpuLmRhdGEsY2hpbGRJZDpuLnVybCxpZGVudGl0eTpuLmlkZW50aXR5LGNoaWxkOm59O3JldHVybiBuLnJlc291cmNlVHlwZSYmKG8ucmVzb3VyY2U9biksdC5fb25BZGRDaGlsZHJlbkhhbmRsZXImJnQuX29uQWRkQ2hpbGRyZW5IYW5kbGVyKG8pLG59fSx7a2V5OiJfcmVzdW1lSHlwZXJ0eVJlc291cmNlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS52YWx1ZTtyLnBhcmVudE9iamVjdD10LHIucGFyZW50PXQuX3VybDt2YXIgbj10Ll9oeXBlcnR5UmVzb3VyY2VGYWN0b3J5LmNyZWF0ZUh5cGVydHlSZXNvdXJjZSghMSxyLnJlc291cmNlVHlwZSxyKTtuLmlkZW50aXR5PWUuaWRlbnRpdHk7dmFyIG89e3R5cGU6ImNyZWF0ZSIsZnJvbTpuLnJlcG9ydGVyLHVybDpuLnBhcmVudCx2YWx1ZTpuLmRhdGEsY2hpbGRJZDpuLnVybCxpZGVudGl0eTpuLmlkZW50aXR5LGNoaWxkOm59O3JldHVybiBuLnJlc291cmNlVHlwZSYmKG8ucmVzb3VyY2U9biksdC5fb25BZGRDaGlsZHJlbkhhbmRsZXImJnQuX29uQWRkQ2hpbGRyZW5IYW5kbGVyKG8pLG59fSx7a2V5OiJwYXVzZSIsdmFsdWU6ZnVuY3Rpb24oKXt0aHJvdyJOb3QgaW1wbGVtZW50ZWQifX0se2tleToicmVzdW1lIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJzdG9wIix2YWx1ZTpmdW5jdGlvbigpe3Rocm93Ik5vdCBpbXBsZW1lbnRlZCJ9fSx7a2V5OiJhZGRDaGlsZCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIG89dGhpcyxzPXZvaWQgMDtyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihpKXt2YXIgYT1vLl91cmwrIi9jaGlsZHJlbi8iK2UsdT1vLl9nZXRDaGlsZElucHV0KG4pO3UuZGF0YT10LHUuY2hpbGRyZW49ZSxzPW5ldyBwLmRlZmF1bHQodSksciYmKHMuaWRlbnRpdHk9cikscy5zaGFyZSgpLGgubG9nKCJbRGF0YU9iamVjdC5hZGRDaGlsZF0gYWRkZWQgIixzKSxzLm9uQ2hhbmdlKGZ1bmN0aW9uKGUpe28uX29uQ2hhbmdlKGUse3BhdGg6YSxjaGlsZElkOnUudXJsfSl9KSxvLl9jaGlsZHJlbk9iamVjdHMuaGFzT3duUHJvcGVydHkoZSl8fChvLl9jaGlsZHJlbk9iamVjdHNbZV09e30pLG8uX2NoaWxkcmVuT2JqZWN0c1tlXVt1LnVybF09cyxpKHMpfSl9fSx7a2V5OiJfZGVsZXRlQ2hpbGRyZW5zIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1bXTtyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihyKXtpZihlLmNoaWxkcmVucyl7aC5sb2coIltEYXRhT2JqZWN0LmRlbGV0ZUNoaWxkcmVuc10iLGUuY2hpbGRyZW5zKTt2YXIgbj12b2lkIDA7Zm9yKG4gaW4gZS5jaGlsZHJlbnMpe3ZhciBvPXZvaWQgMDtmb3IobyBpbiBlLmNoaWxkcmVuc1tuXSl7dmFyIHM9ZS5jaGlsZHJlbnNbbl1bb107aC5sb2coIltEYXRhT2JqZWN0Ll9kZWxldGVDaGlsZHJlbnNdIGNoaWxkIixzKSxzLm1ldGFkYXRhLmhhc093blByb3BlcnR5KCJyZXNvdXJjZVR5cGUiKSYmdC5wdXNoKGUuY2hpbGRyZW5zW25dW29dLmRlbGV0ZSgpKX19fWgubG9nKCJbRGF0YU9iamVjdC5fZGVsZXRlQ2hpbGRyZW5zXSBwcm9taXNlcyAiLHQpLHQubGVuZ3RoPjA/aS5kZWZhdWx0LmFsbCh0KS50aGVuKGZ1bmN0aW9uKCl7cigiW0RhdGFPYmplY3QuX2RlbGV0ZUNoaWxkcmVuc10gZG9uZSIpfSk6cigiW0RhdGFPYmplY3QuX2RlbGV0ZUNoaWxkcmVuc10gbm90aGluZyB0byBkZWxldGUiKX0pfX0se2tleToiX2dldENoaWxkSW5wdXQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj0oMCxhLmRlZmF1bHQpKHt9LGUpO3JldHVybiB0Ll9jaGlsZElkKyssci51cmw9dC5fb3duZXIrIiMiK3QuX2NoaWxkSWQsci5wYXJlbnRPYmplY3Q9dCxyLnJlcG9ydGVyPXQuX293bmVyLHIuY3JlYXRlZD0obmV3IERhdGUpLnRvSVNPU3RyaW5nKCksci5ydW50aW1lPXQuX3N5bmNoZXIuX3J1bnRpbWVVcmwsci5wMnBIYW5kbGVyPXQuX3N5bmNoZXIuX3AycEhhbmRsZXIsci5wMnBSZXF1ZXN0ZXI9dC5fc3luY2hlci5fcDJwUmVxdWVzdGVyLHIuc2NoZW1hPXQuX3NjaGVtYSxyLnBhcmVudD10LnVybCxyfX0se2tleToiYWRkSHlwZXJ0eVJlc291cmNlIix2YWx1ZTpmdW5jdGlvbihlLHQscixuLG8pe3ZhciBzPXRoaXM7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24oaSl7dmFyIGE9dm9pZCAwLHU9cy5fdXJsKyIvY2hpbGRyZW4vIitlLGM9cy5fZ2V0Q2hpbGRJbnB1dChvKTtjLmNoaWxkcmVuPWUscy5faHlwZXJ0eVJlc291cmNlRmFjdG9yeS5jcmVhdGVIeXBlcnR5UmVzb3VyY2VXaXRoQ29udGVudCghMCx0LHIsYykudGhlbihmdW5jdGlvbih0KXthPXQsbiYmKGEuaWRlbnRpdHk9biksYS5zaGFyZSgpLGgubG9nKCJbRGF0YU9iamVjdC5hZGRIeXBlcnR5UmVzb3VyY2VdIGFkZGVkICIsYSksYS5vbkNoYW5nZShmdW5jdGlvbihlKXtzLl9vbkNoYW5nZShlLHtwYXRoOnUsY2hpbGRJZDphLmNoaWxkSWR9KX0pLHMuX2NoaWxkcmVuT2JqZWN0cy5oYXNPd25Qcm9wZXJ0eShlKXx8KHMuX2NoaWxkcmVuT2JqZWN0c1tlXT17fSkscy5fY2hpbGRyZW5PYmplY3RzW2VdW2EuY2hpbGRJZF09YSxpKGEpfSl9KX19LHtrZXk6Im9uQWRkQ2hpbGQiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyPWV9fSx7a2V5OiJfb25DaGlsZENyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztoLmxvZygiW0RhdGFPYmplY3QuX29uQ2hpbGRDcmVhdGVdIHJlY2VpdmVkQnkgIit0Ll9vd25lcisiIDogIixlKTt2YXIgcj17ZnJvbTplLnRvLHRvOmUuZnJvbSx0eXBlOiJyZXNwb25zZSIsaWQ6ZS5pZCxib2R5Ontjb2RlOjEwMH19O3QuX2J1cy5wb3N0TWVzc2FnZShyKSxlLmJvZHkudmFsdWUucmVzb3VyY2VUeXBlP3QuX29uSHlwZXJ0eVJlc291cmNlQWRkZWQoZSk6dC5fb25DaGlsZEFkZGVkKGUpfX0se2tleToiX29uQ2hpbGRBZGRlZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPSgwLHkuZGVlcENsb25lKShlLmJvZHkudmFsdWUpO3IucGFyZW50T2JqZWN0PXQ7dmFyIG49ci5jaGlsZHJlbixvPW5ldyBwLmRlZmF1bHQocik7by5pZGVudGl0eT1lLmJvZHkuaWRlbnRpdHksdC5fY2hpbGRyZW5PYmplY3RzLmhhc093blByb3BlcnR5KG4pfHwodC5fY2hpbGRyZW5PYmplY3RzW25dPXt9KSx0Ll9jaGlsZHJlbk9iamVjdHNbbl1bci51cmxdPW8sZS50bz09PXQubWV0YWRhdGEudXJsJiZvLnN0b3JlKCksdC5faHlwZXJ0eUV2dChlLG8pfX0se2tleToiX29uSHlwZXJ0eVJlc291cmNlQWRkZWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkudmFsdWUsbj12b2lkIDAsbz1yLmNoaWxkcmVuO3IucGFyZW50T2JqZWN0PXQsKG49dC5faHlwZXJ0eVJlc291cmNlRmFjdG9yeS5jcmVhdGVIeXBlcnR5UmVzb3VyY2UoITEsci5yZXNvdXJjZVR5cGUscikpLmlkZW50aXR5PWUuYm9keS5pZGVudGl0eSx0Ll9jaGlsZHJlbk9iamVjdHMuaGFzT3duUHJvcGVydHkobyl8fCh0Ll9jaGlsZHJlbk9iamVjdHNbb109e30pLHQuX2NoaWxkcmVuT2JqZWN0c1tvXVtuLmNoaWxkSWRdPW4sdC5faHlwZXJ0eUV2dChlLG4pLGUudG89PT10Lm1ldGFkYXRhLnVybCYmbi5zdG9yZSgpfX0se2tleToiX2h5cGVydHlFdnQiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9e3R5cGU6ZS50eXBlLGZyb206ZS5mcm9tLHVybDplLnRvLHZhbHVlOnQuZGF0YSxjaGlsZElkOnQudXJsLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxjaGlsZDp0fTt0LnJlc291cmNlVHlwZSYmKHIucmVzb3VyY2U9dCksdGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXImJnRoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyKHIpfX0se2tleToiX29uQ2hhbmdlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7aWYoci5fbWV0YWRhdGEubGFzdE1vZGlmaWVkPShuZXcgRGF0ZSkudG9JU09TdHJpbmcoKSxyLl92ZXJzaW9uKyssImxpdmUiPT09ci5fc3RhdHVzKXt2YXIgbj17dHlwZToidXBkYXRlIixmcm9tOnIuX3VybCx0bzpyLl91cmwrIi9jaGFuZ2VzIixib2R5Ont2ZXJzaW9uOnIuX3ZlcnNpb24sc291cmNlOnIuX293bmVyLGF0dHJpYnV0ZTplLmZpZWxkLGxhc3RNb2RpZmllZDpyLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWR9fTtoLmxvZygiW0RhdGFPYmplY3QgLSBfb25DaGFuZ2VdIC0gIixlLHQsbiksZS5vVHlwZT09PWQuT2JqZWN0VHlwZS5PQkpFQ1Q/ZS5jVHlwZSE9PWQuQ2hhbmdlVHlwZS5SRU1PVkUmJihuLmJvZHkudmFsdWU9KDAseS5kZWVwQ2xvbmUpKGUuZGF0YSkpOihuLmJvZHkuYXR0cmlidXRlVHlwZT1lLm9UeXBlLG4uYm9keS52YWx1ZT1lLmRhdGEsZS5jVHlwZSE9PWQuQ2hhbmdlVHlwZS5VUERBVEUmJihuLmJvZHkub3BlcmF0aW9uPWUuY1R5cGUpKSx0JiYobi50bz10LnBhdGgsbi5ib2R5LnJlc291cmNlPXQuY2hpbGRJZCksci5kYXRhLl9tdXR1YWx8fChuLmJvZHkubXV0dWFsPXIuX211dHVhbCksci5fYnVzLnBvc3RNZXNzYWdlKG4pfX19LHtrZXk6Il9jaGFuZ2VPYmplY3QiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztpZihyLl92ZXJzaW9uKzE8PXQuYm9keS52ZXJzaW9uKXtyLl92ZXJzaW9uPXQuYm9keS52ZXJzaW9uO3ZhciBuLGk9dC5ib2R5LmF0dHJpYnV0ZTtuPSJvYmplY3QiPT09KDAsby5kZWZhdWx0KSh0LmJvZHkudmFsdWUpPygwLHkuZGVlcENsb25lKSh0LmJvZHkudmFsdWUpOnQuYm9keS52YWx1ZTt2YXIgcz1lLmZpbmRCZWZvcmUoaSk7aWYodC5ib2R5Lmxhc3RNb2RpZmllZD9yLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9dC5ib2R5Lmxhc3RNb2RpZmllZDpyLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9KG5ldyBEYXRlKS50b0lTT1N0cmluZygpLHQuYm9keS5hdHRyaWJ1dGVUeXBlPT09ZC5PYmplY3RUeXBlLkFSUkFZKWlmKHQuYm9keS5vcGVyYXRpb249PT1kLkNoYW5nZVR5cGUuQUREKXt2YXIgYT1zLm9iaix1PXMubGFzdDtBcnJheS5wcm90b3R5cGUuc3BsaWNlLmFwcGx5KGEsW3UsMF0uY29uY2F0KG4pKX1lbHNlIGlmKHQuYm9keS5vcGVyYXRpb249PT1kLkNoYW5nZVR5cGUuUkVNT1ZFKXt2YXIgYz1zLm9iaixsPXMubGFzdDtjLnNwbGljZShsLG4pfWVsc2Ugcy5vYmpbcy5sYXN0XT1uO2Vsc2UgdC5ib2R5Lmhhc093blByb3BlcnR5KCJ2YWx1ZSIpP3Mub2JqW3MubGFzdF09bjpkZWxldGUgcy5vYmpbcy5sYXN0XX1lbHNlIGgubG9nKCJVTlNZTkNIUk9OSVpFRCBWRVJTSU9OOiAoZGF0YSA9PiAiK3IuX3ZlcnNpb24rIiwgbXNnID0+ICIrdC5ib2R5LnZlcnNpb24rIikiKX19LHtrZXk6Il9jaGFuZ2VDaGlsZHJlbiIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPSgwLHkuZGl2aWRlVVJMKShlLnRvKS5pZGVudGl0eSxuPXI/ci5zdWJzdHJpbmcoci5sYXN0SW5kZXhPZigiLyIpKzEpOnZvaWQgMCxvPWUuYm9keS5yZXNvdXJjZSxpPXQuX2NoaWxkcmVuT2JqZWN0c1tuXVtvXTtoLmxvZygiQ2hhbmdlIGNoaWxkcmVuOiAiLHQuX293bmVyLGUsbiksaT90Ll9jaGFuZ2VPYmplY3QoaS5fc3luY09iaixlKTpoLndhcm4oIk5vIGNoaWxkcmVuIGZvdW5kIGZvcjogIixvKX19LHtrZXk6Im1ldGFkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGF9fSx7a2V5OiJ1cmwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl91cmx9fSx7a2V5OiJzY2hlbWEiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zY2hlbWF9fSx7a2V5OiJzdGF0dXMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGF0dXN9fSx7a2V5OiJkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3luY09iai5kYXRhfX0se2tleToiY2hpbGRyZW5zIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY2hpbGRyZW5PYmplY3RzfX1dKSxlfSgpO3QuZGVmYXVsdD1iLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCl7IWZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGUoZSx0LHIsbixvLGkpe2Z1bmN0aW9uIHMoZSxuKXtpZihzLmRlbGF5PW4sIXMucGF1c2UmJnUuY2hhbmdlc2V0Lmxlbmd0aD4wKXtpZighZSl7dmFyIG89dS5jaGFuZ2VzZXQuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFyfHxyLmluZGV4T2YoZS50eXBlKT49MH0pO28ubGVuZ3RoPjAmJnQobyl9dS5jaGFuZ2VzZXQ9W119fXZhciBhLHU9dGhpcztyZXR1cm4gcy5wYXVzZT1vLHMuZGVsYXk9aSx1LmdldD1mdW5jdGlvbihlLHQpe3JldHVybiJfX29ic2VydmVyX18iPT09dD91OiJ1bm9ic2VydmUiPT09dD9mdW5jdGlvbigpe3JldHVybiBPYmplY3QudW5vYnNlcnZlKGUpLGV9OiJkZWxpdmVyIj09PXQ/czplW3RdfSx1LnRhcmdldD1lLHUuY2hhbmdlc2V0PVtdLHUudGFyZ2V0Ll9fb2JzZXJ2ZXJDYWxsYmFja3NfX3x8KE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCJfX29ic2VydmVyQ2FsbGJhY2tzX18iLHtlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMSx2YWx1ZTpbXX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCJfX29ic2VydmVyc19fIix7ZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITEsdmFsdWU6W119KSksdS50YXJnZXQuX19vYnNlcnZlckNhbGxiYWNrc19fLnB1c2godCksdS50YXJnZXQuX19vYnNlcnZlcnNfXy5wdXNoKHRoaXMpLGE9bmV3IFByb3h5KGUsdSkscyghMSxpKSxhfU9iamVjdC5vYnNlcnZlfHwiZnVuY3Rpb24iIT10eXBlb2YgUHJveHl8fChlLnByb3RvdHlwZS5kZWxpdmVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0KG51bGwsImRlbGl2ZXIiKX0sZS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1lW3RdLG89dm9pZCAwPT09bj8iYWRkIjoidXBkYXRlIjtpZihlW3RdPXIsZS5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAmJighdGhpcy5hY2NlcHRsaXN0fHx0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZihvKT49MCkpe3ZhciBpPXtvYmplY3Q6ZSxuYW1lOnQsdHlwZTpvfSxzPTA9PT10aGlzLmNoYW5nZXNldC5sZW5ndGgsYT10aGlzLmRlbGl2ZXIoKTsidXBkYXRlIj09PW8mJihpLm9sZFZhbHVlPW4pLHRoaXMuY2hhbmdlc2V0LnB1c2goaSkscyYmYSghMSwibnVtYmVyIj09dHlwZW9mIGEuZGVsYXk/YS5kZWxheToxMCl9cmV0dXJuITB9LGUucHJvdG90eXBlLmRlbGV0ZVByb3BlcnR5PWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZVt0XTtpZihkZWxldGUgZVt0XSxlLl9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCYmIXRoaXMuYWNjZXB0bGlzdHx8dGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoImRlbGV0ZSIpPj0wKXt2YXIgbj17b2JqZWN0OmUsbmFtZTp0LHR5cGU6ImRlbGV0ZSIsb2xkVmFsdWU6cn0sbz0wPT09dGhpcy5jaGFuZ2VzZXQubGVuZ3RoLGk9dGhpcy5kZWxpdmVyKCk7dGhpcy5jaGFuZ2VzZXQucHVzaChuKSxvJiZpKCExLCJudW1iZXIiPT10eXBlb2YgaS5kZWxheT9pLmRlbGF5OjEwKX1yZXR1cm4hMH0sZS5wcm90b3R5cGUuZGVmaW5lUHJvcGVydHk9ZnVuY3Rpb24oZSx0LHIpe2lmKE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsciksZS5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAmJiF0aGlzLmFjY2VwdGxpc3R8fHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKCJyZWNvbmZpZ3VyZSIpPj0wKXt2YXIgbj17b2JqZWN0OmUsbmFtZTp0LHR5cGU6InJlY29uZmlndXJlIn0sbz0wPT09dGhpcy5jaGFuZ2VzZXQubGVuZ3RoLGk9dGhpcy5kZWxpdmVyKCk7dGhpcy5jaGFuZ2VzZXQucHVzaChuKSxvJiZpKCExLCJudW1iZXIiPT10eXBlb2YgaS5kZWxheT9pLmRlbGF5OjEwKX1yZXR1cm4hMH0sZS5wcm90b3R5cGUuc2V0UHJvdG90eXBlT2Y9ZnVuY3Rpb24oZSx0KXt2YXIgcj1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZSk7aWYoT2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdCksZS5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAmJiF0aGlzLmFjY2VwdGxpc3R8fHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKCJzZXRQcm90b3R5cGUiKT49MCl7dmFyIG49e29iamVjdDplLG5hbWU6Il9fcHJvdG9fXyIsdHlwZToic2V0UHJvdG90eXBlIixvbGRWYWx1ZTpyfSxvPTA9PT10aGlzLmNoYW5nZXNldC5sZW5ndGgsaT10aGlzLmRlbGl2ZXIoKTt0aGlzLmNoYW5nZXNldC5wdXNoKG4pLG8mJmkoITEsIm51bWJlciI9PXR5cGVvZiBpLmRlbGF5P2kuZGVsYXk6MTApfXJldHVybiEwfSxlLnByb3RvdHlwZS5wcmV2ZW50RXh0ZW5zaW9ucz1mdW5jdGlvbihlKXtpZihPYmplY3QucHJldmVudEV4dGVuc2lvbnMoZSksZS5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAmJiF0aGlzLmFjY2VwdGxpc3R8fHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKCJwcmV2ZW50RXh0ZW5zaW9ucyIpPj0wKXt2YXIgdD17b2JqZWN0OmUsdHlwZToicHJldmVudEV4dGVuc2lvbnMifSxyPTA9PT10aGlzLmNoYW5nZXNldC5sZW5ndGgsbj10aGlzLmRlbGl2ZXIoKTt0aGlzLmNoYW5nZXNldC5wdXNoKHQpLHImJm4oITEsIm51bWJlciI9PXR5cGVvZiBuLmRlbGF5P24uZGVsYXk6MTApfXJldHVybiEwfSxPYmplY3Qub2JzZXJ2ZT1mdW5jdGlvbih0LHIsbixvLGkscyl7cmV0dXJuIG5ldyBlKHQscixuLG8saSxzKX0sT2JqZWN0LnVub2JzZXJ2ZT1mdW5jdGlvbihlLHQpe2lmKGUuX19vYnNlcnZlckNhbGxiYWNrc19fKXtpZighdClyZXR1cm4gZS5fX29ic2VydmVyQ2FsbGJhY2tzX18uc3BsaWNlKDAsZS5fX29ic2VydmVyQ2FsbGJhY2tzX18ubGVuZ3RoKSx2b2lkIGUuX19vYnNlcnZlcnNfXy5zcGxpY2UoMCxlLl9fb2JzZXJ2ZXJzX18ubGVuZ3RoKTtlLl9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5mb3JFYWNoKGZ1bmN0aW9uKHIsbil7dD09PXImJihlLl9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5zcGxpY2UobiwxKSxkZWxldGUgZS5fX29ic2VydmVyc19fW25dLmNhbGxiYWNrLGUuX19vYnNlcnZlcnNfXy5zcGxpY2UobiwxKSl9KX19LEFycmF5Lm9ic2VydmU9ZnVuY3Rpb24oZSx0LHIsbixvLGkpe2lmKCEoZSBpbnN0YW5jZW9mIEFycmF5fHxBcnJheS5pc0FycmF5KGUpKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJGaXJzdCBhcmd1bWVudCB0byBBcnJheS5vYnNlcnZlciBpcyBub3QgYW4gQXJyYXkiKTtyPXJ8fFsiYWRkIiwidXBkYXRlIiwiZGVsZXRlIiwic3BsaWNlIl07dmFyIHM9bmV3IFByb3h5KGUse2dldDpmdW5jdGlvbih0LG4pe3JldHVybiJ1bm9ic2VydmUiPT09bj9mdW5jdGlvbihlKXtyZXR1cm4gZT9PYmplY3QudW5vYnNlcnZlKHQsZSk6dC51bm9ic2VydmUoKX06InNwbGljZSI9PT1uP2Z1bmN0aW9uKG4sbyl7aWYoIm51bWJlciIhPXR5cGVvZiBufHwibnVtYmVyIiE9dHlwZW9mIG8pdGhyb3cgbmV3IFR5cGVFcnJvcigiRmlyc3QgdHdvIGFyZ3VtZW50cyB0byBBcnJheSBzcGxpY2UgYXJlIG5vdCBudW1iZXIsIG51bWJlciIpO3ZhciBpPXRoaXMuc2xpY2UobixuK28pLHM9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50cy5sZW5ndGgtMjowLHU9e29iamVjdDplLHR5cGU6InNwbGljZSIsaW5kZXg6bixyZW1vdmVkOmksYWRkZWRDb3VudDpzfTtpZih0LnNwbGljZS5hcHBseSh0LGFyZ3VtZW50cyksci5pbmRleE9mKCJzcGxpY2UiKT49MCl7bj0wPT09YS5fX29ic2VydmVyX18uY2hhbmdlc2V0Lmxlbmd0aDt2YXIgYz1hLl9fb2JzZXJ2ZXJfXy5kZWxpdmVyKCk7YS5fX29ic2VydmVyX18uY2hhbmdlc2V0LnB1c2godSksbiYmYyghMSwibnVtYmVyIj09dHlwZW9mIGMuZGVsYXk/Yy5kZWxheToxMCl9fToicHVzaCI9PT1uP2Z1bmN0aW9uKGUpe3JldHVybiB0aGlzLnNwbGljZSh0aGlzLmxlbmd0aCwwLGUpfToicG9wIj09PW4/ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zcGxpY2UodGhpcy5sZW5ndGgtMSwxKX06InVuc2hpZnQiPT09bj9mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zcGxpY2UoMCwwLGUpfToic2hpZnQiPT09bj9mdW5jdGlvbigpe3JldHVybiB0aGlzLnNwbGljZSgwLDEpfTp0W25dfX0pLGE9T2JqZWN0Lm9ic2VydmUocyxmdW5jdGlvbihlKXt2YXIgbj1lLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4ibGVuZ3RoIiE9PWUubmFtZSYmImFkZCIhPT1lLm5hbWUmJighcnx8ci5pbmRleE9mKGUudHlwZSk+PTApfSk7bi5sZW5ndGg+MCYmdChuKX0scixuLG8saSk7cmV0dXJuIGF9LEFycmF5LnVub2JzZXJ2ZT1mdW5jdGlvbihlLHQpe3JldHVybiBlLnVub2JzZXJ2ZSh0KX0pLE9iamVjdC5kZWVwT2JzZXJ2ZT1mdW5jdGlvbihlLHQscil7ZnVuY3Rpb24gbihlLHIpe09iamVjdC5rZXlzKGUpLmZvckVhY2goZnVuY3Rpb24obil7aWYoKCJvYmplY3QiPT09byhlW25dKXx8ImFycmF5Ij09PW8oZVtuXSkpJiYhZVtuXS5oYXNPd25Qcm9wZXJ0eSgiX19vYnNlcnZlcnNfXyIpKXt2YXIgaT1yLnNsaWNlKDApO2kucHVzaChuKSxlW25dPU9iamVjdC5kZWVwT2JzZXJ2ZShlW25dLHQsaSl9fSl9dmFyIG89ZnVuY3Rpb24oZSl7cmV0dXJue30udG9TdHJpbmcuY2FsbChlKS5tYXRjaCgvXHMoW2EtekEtWl0rKS8pWzFdLnRvTG93ZXJDYXNlKCl9O3JldHVybiBuKGUscj1yfHxbXSksT2JqZWN0Lm9ic2VydmUoZSxmdW5jdGlvbihlKXt2YXIgbz1bXTtlLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIHQ9KHIubGVuZ3RoPjA/ci5qb2luKCIuIikrIi4iOiIiKStlLm5hbWU7InVwZGF0ZSIhPT1lLnR5cGUmJiJhZGQiIT09ZS50eXBlfHxuKGUub2JqZWN0LHIpLG8ucHVzaCh7bmFtZTplLm5hbWUsb2JqZWN0OmUub2JqZWN0LHR5cGU6ZS50eXBlLG9sZFZhbHVlOmUub2xkVmFsdWUsbmV3VmFsdWU6ZS5vYmplY3RbZS5uYW1lXSxrZXlwYXRoOnR9KSxmdW5jdGlvbiBlKHQscixuLGkscyl7aSBpbnN0YW5jZW9mIE9iamVjdD9PYmplY3Qua2V5cyhpKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2lmKCFufHxuW2FdIT09aVthXSl7dmFyIHU9biYmdm9pZCAwIT09blthXT9uW2FdOnZvaWQgMCxjPXZvaWQgMD09PXU/ImFkZCI6InVwZGF0ZSIsbD1zKyIuIithO28ucHVzaCh7bmFtZTp0LG9iamVjdDpyLHR5cGU6YyxvbGRWYWx1ZTp1LG5ld1ZhbHVlOmlbYV0sa2V5cGF0aDpsfSksZSh0LHIsdSxpW2FdLGwpfX0pOm4gaW5zdGFuY2VvZiBPYmplY3QmJk9iamVjdC5rZXlzKG4pLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIHU9bnVsbD09PWk/InVwZGF0ZSI6ImRlbGV0ZSIsYz1zKyIuIithO28ucHVzaCh7bmFtZTp0LG9iamVjdDpyLHR5cGU6dSxvbGRWYWx1ZTpuW2FdLG5ld1ZhbHVlOmksa2V5cGF0aDpjfSksZSh0LHIsblthXSx2b2lkIDAsYyl9KX0oZS5uYW1lLGUub2JqZWN0LGUub2xkVmFsdWUsZS5vYmplY3RbZS5uYW1lXSx0KX0pLHQobyl9KX19KCl9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocigxOCkpLGk9bihyKDI1KSkscz1uKHIoMykpLGE9bihyKDUpKSx1PW4ocigzMykpLGM9bihyKDM0KSksbD1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSxkPW4ocigxMjkpKSxmPW4oKHIoMTkpLHIoMTMwKSkpLHA9bC5nZXRMb2dnZXIoIkZpbGVIeXBlcnR5UmVzb3VyY2UiKSx5PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyKXsoMCxzLmRlZmF1bHQpKHRoaXMsdCk7dmFyIG49KDAsdS5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAsaS5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLGUscikpO3JldHVybiBuLm1ldGFkYXRhLnJlc291cmNlVHlwZT0iZmlsZSIsbn1yZXR1cm4oMCxjLmRlZmF1bHQpKHQsZSksKDAsYS5kZWZhdWx0KSh0LFt7a2V5OiJpbml0Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2lmKCFlKXRocm93IG5ldyBFcnJvcigiW0ZpbGVIeXBlcnR5UmVzb3VyY2UuY29uc3RydWN0b3JdIG1pc3NpbmcgbWFuZGF0b3J5ICpmaWxlKiBpbnB1dCAiKTtyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihyLG4pe2lmKHQuX21ldGFkYXRhLm5hbWU9ZS5uYW1lLHQuX21ldGFkYXRhLmxhc3RNb2RpZmllZD1lLmxhc3RNb2RpZmllZCx0Ll9tZXRhZGF0YS5zaXplPWUuc2l6ZSx0Ll9tZXRhZGF0YS5taW1ldHlwZT1lLnR5cGUscC5sb2coIltGaWxlSHlwZXJ0eVJlc291cmNlLmluaXRdIGZpbGU6ICIsZSksdC5faXNTZW5kZXIpc3dpdGNoKGUudHlwZS5zcGxpdCgiLyIpWzBdKXtjYXNlImltYWdlIjp0Ll9nZXRJbWFnZVByZXZpZXcoZSkudGhlbihmdW5jdGlvbihuKXt0Ll9tZXRhZGF0YS5wcmV2aWV3PW4sdC5fY29udGVudD1lLHIoKX0pO2JyZWFrO2RlZmF1bHQ6dC5fY29udGVudD1lLHIoKX1lbHNlIHQuX2NvbnRlbnQ9ZS5jb250ZW50LGUucHJldmlldyYmKHQuX21ldGFkYXRhLnByZXZpZXc9ZS5wcmV2aWV3KSxyKCl9KX19LHtrZXk6Il9nZXRJbWFnZVByZXZpZXciLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBGaWxlUmVhZGVyO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7Zi5kZWZhdWx0LnJlc2l6ZShlLHt3aWR0aDoxMDAsaGVpZ2h0OjEwMH0sZnVuY3Rpb24oZSxuKXtuPyh0LnJlYWRBc0RhdGFVUkwoZSksdC5vbmxvYWQ9ZnVuY3Rpb24oZSl7cihlLnRhcmdldC5yZXN1bHQpfSk6KHAud2FybigiW0ZpbGVIeXBlcnR5UmVzb3VyY2UuX2dldEltYWdlUHJldmlld10gdW5hYmxlIHRvIGNyZWF0ZSBpbWFnZSBwcmV2aWV3IGZyb20gb3JpZ2luYWwgaW1hZ2UgIikscih2b2lkIDApKX0pfSl9fSx7a2V5OiJ0b01lc3NhZ2UiLHZhbHVlOmZ1bmN0aW9uKCl7fX0se2tleToibmFtZSIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhLm5hbWV9fSx7a2V5OiJwcmV2aWV3IixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGEucHJldmlld319XSksdH0oZC5kZWZhdWx0KTt0LmRlZmF1bHQ9eSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXtkZWZhdWx0OnIoMTI2KSxfX2VzTW9kdWxlOiEwfX0sZnVuY3Rpb24oZSx0LHIpe3IoMTI3KTt2YXIgbj1yKDApLk9iamVjdDtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KX19LGZ1bmN0aW9uKGUsdCxyKXt2YXIgbj1yKDEyKSxvPXIoNDYpLmY7cig0NCkoImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyhuKGUpLHQpfX0pfSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoMTgpKSxpPW4ocigzKSkscz1uKHIoNSkpLGE9bihyKDEyNCkpLHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7KDAsaS5kZWZhdWx0KSh0aGlzLGUpfXJldHVybigwLHMuZGVmYXVsdCkoZSxbe2tleToiY3JlYXRlSHlwZXJ0eVJlc291cmNlIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49dm9pZCAwO3N3aXRjaCh0KXtjYXNlImZpbGUiOm49bmV3IGEuZGVmYXVsdChlLHIpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJbSHlwZXJ0eVJlc291cmNlRmFjdG9yeS5jcmVhdGVIeXBlcnR5UmVzb3VyY2VdIG5vdCBzdXBwb3J0ZWQgdHlwZTogIix0KX1yZXR1cm4gbn19LHtrZXk6ImNyZWF0ZUh5cGVydHlSZXNvdXJjZVdpdGhDb250ZW50Iix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgaT12b2lkIDA7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obyl7c3dpdGNoKHQpe2Nhc2UiZmlsZSI6aT1uZXcgYS5kZWZhdWx0KGUsbik7YnJlYWs7ZGVmYXVsdDpyZWplY3QoKX1pLmluaXQocikudGhlbihmdW5jdGlvbigpe3JldHVybiBpLnNhdmUoKX0pLnRoZW4oZnVuY3Rpb24oKXtvKGkpfSl9KX19XSksZX0oKTt0LmRlZmF1bHQ9dSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoMTgpKSxpPW4ocigyNSkpLHM9bihyKDMpKSxhPW4ocig1KSksdT1uKHIoMzMpKSxjPW4ocigxMDApKSxsPW4ocigzNCkpLGQ9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSksZj1yKDE5KSxwPW4ocigxMTgpKSx5PWQuZ2V0TG9nZ2VyKCJIeXBlcnR5UmVzb3VyY2UiKSx2PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyKXsoMCxzLmRlZmF1bHQpKHRoaXMsdCk7dmFyIG49KDAsdS5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAsaS5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLHIpKSxvPW47cmV0dXJuIG8uYXJyYXlidWZmZXJTaXplTGltaXQ9NTI0Mjg4MCxvLl9pc1NlbmRlcj1lLG8uX2xvY2FsU3RvcmFnZVVSTD1vLl9wYXJlbnRPYmplY3QuX3N5bmNoZXIuX3J1bnRpbWVVcmwrIi9zdG9yYWdlIixufXJldHVybigwLGwuZGVmYXVsdCkodCxlKSwoMCxhLmRlZmF1bHQpKHQsW3trZXk6InNhdmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe3ZhciBuPXtmcm9tOmUuX293bmVyLHRvOmUuX2xvY2FsU3RvcmFnZVVSTCx0eXBlOiJjcmVhdGUiLGJvZHk6e3ZhbHVlOigwLGYuZGVlcENsb25lKShlLl9tZXRhZGF0YSl9fTtuLmJvZHkudmFsdWUuY29udGVudD1lLl9jb250ZW50LGUuX2J1cy5wb3N0TWVzc2FnZShuLGZ1bmN0aW9uKG4pe3kuaW5mbygiW0h5cGVydHlSZXNvdXJjZS5zYXZlXSByZXBseTogIixuKSxlLl9idXMucmVtb3ZlUmVzcG9uc2VMaXN0ZW5lcihlLl9vd25lcixuLmlkKSwyMDA9PT1uLmJvZHkuY29kZT8obi5ib2R5LnZhbHVlJiYoZS5fbWV0YWRhdGEuY29udGVudFVSTHx8KGUuX21ldGFkYXRhLmNvbnRlbnRVUkw9W10pLGUuX21ldGFkYXRhLmNvbnRlbnRVUkwucHVzaChuLmJvZHkudmFsdWUpKSx0KCkpOnIobi5ib2R5LmNvZGUrIiAiK24uYm9keS5kZXNjKX0sITEpfSl9fSx7a2V5OiJyZWFkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiB5LmluZm8oIltIeXBlcnR5UmVzb3VyY2UucmVhZF0gIix0aGlzKSxuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7aWYodC5jb250ZW50KXIodCk7ZWxzZXt2YXIgbz10Ll9nZXRCZXN0Q29udGVudFVSTCh0Ll9tZXRhZGF0YS5jb250ZW50VVJMKTt5LmxvZygiU3RvcmFnZToiLG8pO3ZhciBpPXtmcm9tOnQuX293bmVyLHRvOm8udXJsLHR5cGU6InJlYWQiLGJvZHk6e3Jlc291cmNlOm8udXJsKyIvIitvLnJlc291cmNlLHAycDohMH19O3QubWV0YWRhdGEucDJwUmVxdWVzdGVyJiZ0Lm1ldGFkYXRhLnAycEhhbmRsZXImJihpLmJvZHkucDJwUmVxdWVzdGVyPXQubWV0YWRhdGEucDJwUmVxdWVzdGVyLGkuYm9keS5wMnBIYW5kbGVyPXQubWV0YWRhdGEucDJwSGFuZGxlciksdC5fZ2V0QmVzdFJlc291cmNlKGksZSkudGhlbihmdW5jdGlvbihlKXt5LmluZm8oIltIeXBlcnR5UmVzb3VyY2VdIC0gZ2V0IGxvY2FsbHkgdGhlIHJlc291cmNlOiIsZSkscih0KX0pLmNhdGNoKGZ1bmN0aW9uKGkpe3kud2FybigiW0h5cGVydHlSZXNvdXJjZV0gLSBnZXQgbG9jYWxseSB0aGUgcmVzb3VyY2UgZmFpbCIsaSk7dmFyIHM9e2Zyb206dC5fb3duZXIsdG86by5yZW1vdGVVUkwsdHlwZToicmVhZCIsYm9keTp7cmVzb3VyY2U6by5yZW1vdGVVUkwrIi8iK28ucmVzb3VyY2UscDJwOiEwfX07dC5tZXRhZGF0YS5wMnBSZXF1ZXN0ZXImJnQubWV0YWRhdGEucDJwSGFuZGxlciYmKHMuYm9keS5wMnBSZXF1ZXN0ZXI9dC5tZXRhZGF0YS5wMnBSZXF1ZXN0ZXIscy5ib2R5LnAycEhhbmRsZXI9dC5tZXRhZGF0YS5wMnBIYW5kbGVyKSx0Ll9nZXRCZXN0UmVzb3VyY2UocyxlKS50aGVuKGZ1bmN0aW9uKGUpe3kud2FybigiW0h5cGVydHlSZXNvdXJjZV0gLSBnZXQgcmVtb3RlbHkgdGhlIHJlc291cmNlIixlKSxyKHQpfSkuY2F0Y2goZnVuY3Rpb24oZSl7eS53YXJuKCJbSHlwZXJ0eVJlc291cmNlXSAtIGdldCByZW1vdGVseSB0aGUgcmVzb3VyY2UgZmFpbCIsZSksbihlLmJvZHkuY29kZSsiICIrZS5ib2R5LmRlc2MpfSl9KX19KX19LHtrZXk6Il9nZXRCZXN0UmVzb3VyY2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihuLG8pe3ZhciBpPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtyZXR1cm4gci5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoci5fb3duZXIscyksZS5ib2R5LmNvZGU9NDA4LGUuYm9keS5kZXNjPSJSZXNwb25zZSB0aW1lb3V0IixvKGUpfSwzZTMpLHM9ci5fYnVzLnBvc3RNZXNzYWdlKGUsZnVuY3Rpb24oZSl7eS5sb2coIltIeXBlcnR5UmVzb3VyY2UucmVhZF0gcmVwbHk6ICIsZSk7dmFyIHM9ZS5pZDtzd2l0Y2goY2xlYXJUaW1lb3V0KGkpLGUuYm9keS5jb2RlKXtjYXNlIDIwMDpyLl9jb250ZW50PWUuYm9keS52YWx1ZS5jb250ZW50LGUuYm9keS52YWx1ZS5zaXplPHIuYXJyYXlidWZmZXJTaXplTGltaXQmJnIuc2F2ZSgpLHIuX2J1cy5yZW1vdmVSZXNwb25zZUxpc3RlbmVyKHIuX293bmVyLHMpLG4oZSk7YnJlYWs7Y2FzZSAxODM6dChlLmJvZHkudmFsdWUpO2JyZWFrO2RlZmF1bHQ6ci5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoci5fb3duZXIscyksbyhlKX19LCExKX0pfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7eS5pbmZvKCJbSHlwZXJ0eVJlc291cmNlLmRlbGV0ZV0iLGUubWV0YWRhdGEpO3ZhciB0PXtmcm9tOmUuX293bmVyLHRvOmUuX2xvY2FsU3RvcmFnZVVSTCx0eXBlOiJkZWxldGUiLGJvZHk6e3Jlc291cmNlczplLm1ldGFkYXRhLmNvbnRlbnRVUkx9fTtyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihyKXtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbihlKXtyKGUuYm9keS5jb2RlPDMwMCl9KX0pfX0se2tleToiX2dldEJlc3RDb250ZW50VVJMIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1lWzBdLHI9dC5zdWJzdHIodC5sYXN0SW5kZXhPZigiLyIpKzEpO3JldHVybnt1cmw6dGhpcy5fbG9jYWxTdG9yYWdlVVJMLHJlc291cmNlOnIscmVtb3RlVVJMOnQuc3Vic3RyKDAsdC5sYXN0SW5kZXhPZigiLyIpKX19fSx7a2V5OiJyZXNvdXJjZVR5cGUiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1ldGFkYXRhLnJlc291cmNlVHlwZX19LHtrZXk6Im1pbWV0eXBlIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbWV0YWRhdGEudHlwZX19LHtrZXk6ImNvbnRlbnQiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb250ZW50fX0se2tleToiY29udGVudFVSTCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21ldGFkYXRhLmNvbnRlbnRVUkx9fSx7a2V5OiJzaGFyZWFibGUiLGdldDpmdW5jdGlvbigpe3ZhciBlPSgwLGMuZGVmYXVsdCkodC5wcm90b3R5cGUuX19wcm90b19ffHwoMCxpLmRlZmF1bHQpKHQucHJvdG90eXBlKSwibWV0YWRhdGEiLHRoaXMpO3JldHVybiBlLnJlc291cmNlVHlwZT10aGlzLnJlc291cmNlVHlwZSxlfX1dKSx0fShwLmRlZmF1bHQpO3QuZGVmYXVsdD12LGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocigzKSksaT1uKHIoNSkpLHM9InVuZGVmaW5lZCIhPXR5cGVvZiBCbG9iJiZmdW5jdGlvbigpe3RyeXtyZXR1cm4gQm9vbGVhbihuZXcgQmxvYil9Y2F0Y2goZSl7cmV0dXJuITF9fSgpLGE9cyYmInVuZGVmaW5lZCIhPXR5cGVvZiBVaW50OEFycmF5JiZmdW5jdGlvbigpe3RyeXtyZXR1cm4gMTAwPT09bmV3IEJsb2IoW25ldyBVaW50OEFycmF5KDEwMCldKS5zaXplfWNhdGNoKGUpe3JldHVybiExfX0oKSx1PSJ1bmRlZmluZWQiIT10eXBlb2YgSFRNTENhbnZhc0VsZW1lbnQmJkhUTUxDYW52YXNFbGVtZW50LnByb3RvdHlwZS50b0Jsb2IsYz11fHwidW5kZWZpbmVkIiE9dHlwZW9mIFVpbnQ4QXJyYXkmJiJ1bmRlZmluZWQiIT10eXBlb2YgQXJyYXlCdWZmZXImJiJ1bmRlZmluZWQiIT10eXBlb2YgYXRvYixsPSJ1bmRlZmluZWQiIT10eXBlb2YgRmlsZVJlYWRlcnx8InVuZGVmaW5lZCIhPXR5cGVvZiBVUkwsZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXsoMCxvLmRlZmF1bHQpKHRoaXMsZSl9cmV0dXJuKDAsaS5kZWZhdWx0KShlLG51bGwsW3trZXk6InJlc2l6ZSIsdmFsdWU6ZnVuY3Rpb24odCxyLG4pe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiByJiYobj1yLHI9e3dpZHRoOjY0MCxoZWlnaHQ6NDgwfSksci53aWR0aCxyLmhlaWdodCwhZS5pc1N1cHBvcnRlZCgpfHwhdC50eXBlLm1hdGNoKC9pbWFnZS4qLykpcmV0dXJuIG4odCwhMSksITE7aWYodC50eXBlLm1hdGNoKC9pbWFnZVwvZ2lmLykpcmV0dXJuIG4odCwhMSksITE7dmFyIG89ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7cmV0dXJuIG8ub25sb2FkPWZ1bmN0aW9uKGkpe3ZhciBzPW8ud2lkdGgsYT1vLmhlaWdodCxjPSExO2lmKHM+PWEmJnM+ci53aWR0aD8oYSo9ci53aWR0aC9zLHM9ci53aWR0aCxjPSEwKTphPnIuaGVpZ2h0JiYocyo9ci5oZWlnaHQvYSxhPXIuaGVpZ2h0LGM9ITApLGMpe3ZhciBsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpO2lmKGwud2lkdGg9cyxsLmhlaWdodD1hLGwuZ2V0Q29udGV4dCgiMmQiKS5kcmF3SW1hZ2UobywwLDAscyxhKSx1KWwudG9CbG9iKGZ1bmN0aW9uKGUpe24oZSwhMCl9LHQudHlwZSk7ZWxzZXt2YXIgZD1lLl90b0Jsb2IobCx0LnR5cGUpO24oZCwhMCl9fWVsc2Ugbih0LCExKX0sZS5fbG9hZEltYWdlKG8sdCksITB9fSx7a2V5OiJfdG9CbG9iIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPWUudG9EYXRhVVJMKHQpLnNwbGl0KCIsIiksbj12b2lkIDA7bj1yWzBdLmluZGV4T2YoImJhc2U2NCIpPj0wP2F0b2IoclsxXSk6ZGVjb2RlVVJJQ29tcG9uZW50KHJbMV0pO2Zvcih2YXIgbz1uZXcgQXJyYXlCdWZmZXIobi5sZW5ndGgpLGk9bmV3IFVpbnQ4QXJyYXkobyksdT0wO3U8bi5sZW5ndGg7dSs9MSlpW3VdPW4uY2hhckNvZGVBdCh1KTt2YXIgYz1yWzBdLnNwbGl0KCI6IilbMV0uc3BsaXQoIjsiKVswXSxsPW51bGw7aWYocylsPW5ldyBCbG9iKFthP2k6b10se3R5cGU6Y30pO2Vsc2V7dmFyIGQ9bmV3IEJsb2JCdWlsZGVyO2QuYXBwZW5kKG8pLGw9ZC5nZXRCbG9iKGMpfXJldHVybiBsfX0se2tleToiX2xvYWRJbWFnZSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgVVJMKXt2YXIgbj1uZXcgRmlsZVJlYWRlcjtuLm9ubG9hZD1mdW5jdGlvbih0KXtlLnNyYz10LnRhcmdldC5yZXN1bHQsciYmcigpfSxuLnJlYWRBc0RhdGFVUkwodCl9ZWxzZSBlLnNyYz1VUkwuY3JlYXRlT2JqZWN0VVJMKHQpLHImJnIoKX19LHtrZXk6ImlzU3VwcG9ydGVkIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgSFRNTENhbnZhc0VsZW1lbnQmJmMmJmx9fV0pLGV9KCk7dC5kZWZhdWx0PWQsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDE4KSksaT1uKHIoNzgpKSxzPW4ocigzKSksYT1uKHIoNSkpLHU9ZnVuY3Rpb24oZSl7aWYoZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciB0PXt9O2lmKG51bGwhPWUpZm9yKHZhciByIGluIGUpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscikmJih0W3JdPWVbcl0pO3JldHVybiB0LmRlZmF1bHQ9ZSx0fShyKDIyKSksYz1yKDE5KSxsPW4ocigxMzIpKSxkPW4ocigxMzMpKSxmPW4ocigxMzUpKSxwPXUuZ2V0TG9nZ2VyKCJTeW5jaGVyIikseT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG4peygwLHMuZGVmYXVsdCkodGhpcyxlKTt2YXIgbz10aGlzO28uX293bmVyPXQsby5fYnVzPXIsby5fc3ViVVJMPW4ucnVudGltZVVSTCsiL3NtIixvLl9ydW50aW1lVXJsPW4ucnVudGltZVVSTCxvLl9wMnBIYW5kbGVyPW4ucDJwSGFuZGxlcixvLl9wMnBSZXF1ZXN0ZXI9bi5wMnBSZXF1ZXN0ZXIsby5fcmVwb3J0ZXJzPXt9LG8uX29ic2VydmVycz17fSxvLl9wcm92aXNpb25hbHM9e30sci5hZGRMaXN0ZW5lcih0LGZ1bmN0aW9uKGUpe2lmKGUuZnJvbSE9PXQpc3dpdGNoKHAuaW5mbygiW1N5bmNoZXJdIFN5bmNoZXItUkNWOiAiLGUsbyksZS50eXBlKXtjYXNlImZvcndhcmQiOm8uX29uRm9yd2FyZChlKTticmVhaztjYXNlImNyZWF0ZSI6by5fb25SZW1vdGVDcmVhdGUoZSk7YnJlYWs7Y2FzZSJkZWxldGUiOm8uX29uUmVtb3RlRGVsZXRlKGUpO2JyZWFrO2Nhc2UiZXhlY3V0ZSI6by5fb25FeGVjdXRlKGUpfX0pfXJldHVybigwLGEuZGVmYXVsdCkoZSxbe2tleToiY3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10mJmFyZ3VtZW50c1szXSxvPWFyZ3VtZW50cy5sZW5ndGg+NCYmdm9pZCAwIT09YXJndW1lbnRzWzRdJiZhcmd1bWVudHNbNF0scz1hcmd1bWVudHMubGVuZ3RoPjUmJnZvaWQgMCE9PWFyZ3VtZW50c1s1XT9hcmd1bWVudHNbNV06Im5vIG5hbWUiLGE9YXJndW1lbnRzWzZdLHU9YXJndW1lbnRzWzddO2lmKCFlKXRocm93IEVycm9yKCJbU3luY2hlciAtIENyZWF0ZV0gLSBZb3UgbmVlZCBzcGVjaWZ5IHRoZSBkYXRhIG9iamVjdCBzY2hlbWEiKTtpZighdCl0aHJvdyBFcnJvcigiW1N5bmNoZXIgLSBDcmVhdGVdIC1UaGUgb2JzZXJ2ZXJzIHNob3VsZCBiZSBkZWZpbmVkIik7dmFyIGw9dGhpczt1PXV8fHt9O3ZhciBkPSgwLGkuZGVmYXVsdCkoe30sdSk7cmV0dXJuIGQucDJwPW8sZC5zdG9yZT1uLGQuc2NoZW1hPWUsZC5hdXRob3Jpc2U9dCxkLnAycEhhbmRsZXI9bC5fcDJwSGFuZGxlcixkLnAycFJlcXVlc3Rlcj1sLl9wMnBSZXF1ZXN0ZXIsZC5kYXRhPXI/KDAsYy5kZWVwQ2xvbmUpKHIpOnt9LGQubmFtZT0wPT09cy5sZW5ndGg/Im5vIG5hbWUiOnMsZC5yZXBvcnRlcj11Lmhhc093blByb3BlcnR5KCJyZXBvcnRlciIpJiYiYm9vbGVhbiIhPXR5cGVvZiB1LnJlcG9ydGVyP3UucmVwb3J0ZXI6bC5fb3duZXIsZC5yZXN1bWU9ITEsdT8oZC5tdXR1YWw9IXUuaGFzT3duUHJvcGVydHkoIm11dHVhbCIpfHx1Lm11dHVhbCxkLm5hbWU9dS5oYXNPd25Qcm9wZXJ0eSgibmFtZSIpP3UubmFtZTpkLm5hbWUpOmQubXV0dWFsPSEwLHUuaGFzT3duUHJvcGVydHkoInJldXNlVVJMIikmJihkLnJlc291cmNlPXUucmV1c2VVUkwpLGEmJihkLmlkZW50aXR5PWEpLHAubG9nKCJbc3luY2hlciAtIGNyZWF0ZV0gLSBjcmVhdGUgUmVwb3J0ZXIgLSBjcmVhdGVJbnB1dDogIixkKSxsLl9jcmVhdGUoZCl9fSx7a2V5OiJyZXN1bWVSZXBvcnRlcnMiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiBwLmxvZygiW3N5bmNoZXIgLSBjcmVhdGVdIC0gcmVzdW1lIFJlcG9ydGVyIC0gY3JpdGVyaWE6ICIsZSksKDAsaS5kZWZhdWx0KShlLHtyZXN1bWU6ITB9KSx0aGlzLl9yZXN1bWVDcmVhdGUoZSl9fSx7a2V5OiJzdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9YXJndW1lbnRzLmxlbmd0aD4yJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0mJmFyZ3VtZW50c1syXSxuPWFyZ3VtZW50cy5sZW5ndGg+MyYmdm9pZCAwIT09YXJndW1lbnRzWzNdJiZhcmd1bWVudHNbM10sbz0hKGFyZ3VtZW50cy5sZW5ndGg+NCYmdm9pZCAwIT09YXJndW1lbnRzWzRdKXx8YXJndW1lbnRzWzRdLHM9IShhcmd1bWVudHMubGVuZ3RoPjUmJnZvaWQgMCE9PWFyZ3VtZW50c1s1XSl8fGFyZ3VtZW50c1s1XSxhPWFyZ3VtZW50c1s2XSx1PXt9O3JldHVybiB1LnAycD1uLHUuc3RvcmU9cix1LnNjaGVtYT1lLHUuZG9tYWluX3N1YnNjcmlwdGlvbj1zLHUucmVzb3VyY2U9dCxhJiYodS5pZGVudGl0eT1hKSx1Lm11dHVhbD1vLHAubG9nKCJbc3luY2hlciAtIHN1YnNjcmliZV0gLSBzdWJzY3JpYmUgY3JpdGVyaWE6ICIsdSksKDAsaS5kZWZhdWx0KSh1LHtyZXN1bWU6ITF9KSx0aGlzLl9zdWJzY3JpYmUodSl9fSx7a2V5OiJyZXN1bWVPYnNlcnZlcnMiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PWV8fHt9O3JldHVybigwLGkuZGVmYXVsdCkodCx7cmVzdW1lOiEwfSksdGhpcy5fcmVzdW1lU3Vic2NyaWJlKHQpfX0se2tleToicmVhZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXt0eXBlOiJyZWFkIixmcm9tOnQuX293bmVyLHRvOmV9O3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKGUsbil7dC5fYnVzLnBvc3RNZXNzYWdlKHIsZnVuY3Rpb24obyl7cC5sb2coIltTeW5jaGVyLnJlYWRdIHJlcGx5OiAiLG8pO3ZhciBzPXt9LGE9e30sdT0wO2lmKG8uYm9keS5jb2RlPDMwMClpZihvLmJvZHkudmFsdWUuaGFzT3duUHJvcGVydHkoInJlc3BvbnNlcyIpKWlmKDA9PT11KWE9by5ib2R5LnZhbHVlLCsrdTtlbHNle2RlbGV0ZSBvLmJvZHkudmFsdWUucmVzcG9uc2VzO3ZhciBjPXZvaWQgMDtmb3IoYyBpbiBvLmJvZHkudmFsdWUpcy5oYXNPd25Qcm9wZXJ0eShjKXx8KHNbY109e30pLCgwLGkuZGVmYXVsdCkoc1tjXSxvLmJvZHkudmFsdWVbY10pOysrdT09PWEucmVzcG9uc2VzJiYoYS5jaGlsZHJlbk9iamVjdHM9cyxkZWxldGUgYS5yZXNwb25zZXMsdC5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoci5mcm9tLG8uaWQpLGUoYSkpfWVsc2UgdC5fYnVzLnJlbW92ZVJlc3BvbnNlTGlzdGVuZXIoci5mcm9tLG8uaWQpLGUoby5ib2R5LnZhbHVlKTtlbHNlIG4oby5ib2R5LmRlc2MpfSwhMSl9KX19LHtrZXk6Im9uTm90aWZpY2F0aW9uIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXI9ZX19LHtrZXk6Im9uQ2xvc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uQ2xvc2U9ZX19LHtrZXk6Il9jcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24ocixuKXt2YXIgbz0oMCxpLmRlZmF1bHQpKHt9LGUpLHM9ZS5yZXN1bWU7by5jcmVhdGVkPShuZXcgRGF0ZSkudG9JU09TdHJpbmcoKSxvLnJ1bnRpbWU9dC5fcnVudGltZVVybDt2YXIgYT0oMCxjLmRlZXBDbG9uZSkobyk7ZGVsZXRlIGEucDJwLGRlbGV0ZSBhLnN0b3JlLGRlbGV0ZSBhLm9ic2VydmVycyxkZWxldGUgYS5pZGVudGl0eTt2YXIgdT17dHlwZToiY3JlYXRlIixmcm9tOnQuX293bmVyLHRvOnQuX3N1YlVSTCxib2R5OntyZXN1bWU6cyx2YWx1ZTphfX07dS5ib2R5LnNjaGVtYT1vLnNjaGVtYSxvLnAycCYmKHUuYm9keS5wMnA9by5wMnApLG8uc3RvcmUmJih1LmJvZHkuc3RvcmU9by5zdG9yZSksby5pZGVudGl0eSYmKHUuYm9keS5pZGVudGl0eT1vLmlkZW50aXR5KSxwLmxvZygiW3N5bmNoZXIuX2NyZWF0ZV06ICIsbyx1KSx0Ll9idXMucG9zdE1lc3NhZ2UodSxmdW5jdGlvbihpKXtpZihwLmxvZygiW3N5bmNoZXIgLSBjcmVhdGVdIC0gY3JlYXRlLXJlc3BvbnNlOiAiLGkpLDIwMD09PWkuYm9keS5jb2RlKXtvLnVybD1pLmJvZHkucmVzb3VyY2Usby5zdGF0dXM9ImxpdmUiLG8uc3luY2hlcj10LG8uY2hpbGRyZW5zPWkuYm9keS5jaGlsZHJlblJlc291cmNlczt2YXIgcz10Ll9yZXBvcnRlcnNbby51cmxdO3N8fChzPW5ldyBsLmRlZmF1bHQobyksdC5fcmVwb3J0ZXJzW28udXJsXT1zKSxzLmludml0ZU9ic2VydmVycyhlLmF1dGhvcmlzZSxlLnAycCkscihzKX1lbHNlIG4oaS5ib2R5LmRlc2MpfSl9KX19LHtrZXk6Il9yZXN1bWVDcmVhdGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10aGlzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7dmFyIGk9ZS5yZXN1bWUscz17dHlwZToiY3JlYXRlIixmcm9tOnIuX293bmVyLHRvOnIuX3N1YlVSTCxib2R5OntyZXN1bWU6aX19O3AubG9nKCJbc3luY2hlciAtIGNyZWF0ZV06ICIsZSxzKSxlJiYocy5ib2R5LnZhbHVlPWUsZS5oYXNPd25Qcm9wZXJ0eSgicmVwb3J0ZXIiKT9zLmJvZHkudmFsdWUucmVwb3J0ZXI9ZS5yZXBvcnRlcjpzLmJvZHkudmFsdWUucmVwb3J0ZXI9ci5fb3duZXIpLGUucDJwJiYocy5ib2R5LnAycD1lLnAycCksZS5zdG9yZSYmKHMuYm9keS5zdG9yZT1lLnN0b3JlKSxlLm9ic2VydmVycyYmKHMuYm9keS5hdXRob3Jpc2U9ZS5vYnNlcnZlcnMpLGUuaWRlbnRpdHkmJihzLmJvZHkuaWRlbnRpdHk9ZS5pZGVudGl0eSkscC5sb2coIltzeW5jaGVyLl9yZXN1bWVDcmVhdGVdIC0gcmVzdW1lIG1lc3NhZ2U6ICIscyksci5fYnVzLnBvc3RNZXNzYWdlKHMsZnVuY3Rpb24oZSl7aWYocC5sb2coIltzeW5jaGVyLl9yZXN1bWVDcmVhdGVdIC0gY3JlYXRlLXJlc3VtZWQtcmVzcG9uc2U6ICIsZSksMjAwPT09ZS5ib2R5LmNvZGUpe3ZhciBpPWUuYm9keS52YWx1ZTtmb3IodmFyIHMgaW4gaSl7dmFyIGE9aVtzXTthLmRhdGE9KDAsYy5kZWVwQ2xvbmUpKGEuZGF0YSl8fHt9LGEuY2hpbGRyZW5PYmplY3RzJiYoYS5jaGlsZHJlbk9iamVjdHM9KDAsYy5kZWVwQ2xvbmUpKGEuY2hpbGRyZW5PYmplY3RzKSksYS5tdXR1YWw9ITEsYS5yZXN1bWU9ITAsYS5zdGF0dXM9ImxpdmUiLGEuc3luY2hlcj1yLHAubG9nKCJbc3luY2hlci5fcmVzdW1lQ3JlYXRlXSAtIGNyZWF0ZS1yZXN1bWVkLWRhdGFPYmplY3RSZXBvcnRlciIsYSk7dmFyIHU9bmV3IGwuZGVmYXVsdChhKTthLmNoaWxkcmVuT2JqZWN0cyYmdS5yZXN1bWVDaGlsZHJlbnMoYS5jaGlsZHJlbk9iamVjdHMpLHIuX3JlcG9ydGVyc1thLnVybF09dX1uKHIuX3JlcG9ydGVycyksdC5fb25SZXBvcnRlcnNSZXN1bWUmJnQuX29uUmVwb3J0ZXJzUmVzdW1lKHQuX3JlcG9ydGVycyl9ZWxzZSA0MDQ9PT1lLmJvZHkuY29kZT9uKHt9KTpvKGUuYm9keS5kZXNjKX0pfSl9fSx7a2V5OiJfc3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7dmFyIG89e3R5cGU6InN1YnNjcmliZSIsZnJvbTp0Ll9vd25lcix0bzp0Ll9zdWJVUkwsYm9keTp7fX07ZSYmKGUuaGFzT3duUHJvcGVydHkoInAycCIpJiYoby5ib2R5LnAycD1lLnAycCksZS5oYXNPd25Qcm9wZXJ0eSgic3RvcmUiKSYmKG8uYm9keS5zdG9yZT1lLnN0b3JlKSxlLmhhc093blByb3BlcnR5KCJzY2hlbWEiKSYmKG8uYm9keS5zY2hlbWE9ZS5zY2hlbWEpLGUuaGFzT3duUHJvcGVydHkoImlkZW50aXR5IikmJihvLmJvZHkuaWRlbnRpdHk9ZS5pZGVudGl0eSksZS5oYXNPd25Qcm9wZXJ0eSgicmVzb3VyY2UiKSYmKG8uYm9keS5yZXNvdXJjZT1lLnJlc291cmNlKSxlLmhhc093blByb3BlcnR5KCJkb21haW5fc3Vic2NyaXB0aW9uIikmJihvLmJvZHkuZG9tYWluX3N1YnNjcmlwdGlvbj1lLmRvbWFpbl9zdWJzY3JpcHRpb24pKSxvLmJvZHkucmVzdW1lPWUucmVzdW1lLGUuaGFzT3duUHJvcGVydHkoIm11dHVhbCIpJiYoby5ib2R5Lm11dHVhbD1lLm11dHVhbCkscC5sb2coIltzeW5jaGVyX3N1YnNjcmliZV0gLSBzdWJzY3JpYmUgbWVzc2FnZTogIixlLG8pLHQuX2J1cy5wb3N0TWVzc2FnZShvLGZ1bmN0aW9uKG8pe3AubG9nKCJbc3luY2hlcl0gLSBzdWJzY3JpYmUtcmVzcG9uc2U6ICIsbyk7dmFyIGk9by5ib2R5LnJlc291cmNlLHM9dC5fcHJvdmlzaW9uYWxzW2ldO2lmKGRlbGV0ZSB0Ll9wcm92aXNpb25hbHNbaV0scyYmcy5fcmVsZWFzZUxpc3RlbmVycygpLG8uYm9keS5jb2RlPDIwMClwLmxvZygiW3N5bmNoZXJdIC0gbmV3IERhdGFQcm92aXNpb25hbDogIixvLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMsaSkscz1uZXcgZi5kZWZhdWx0KHQuX293bmVyLGksdC5fYnVzLG8uYm9keS5jaGlsZHJlblJlc291cmNlcyksdC5fcHJvdmlzaW9uYWxzW2ldPXM7ZWxzZSBpZigyMDA9PT1vLmJvZHkuY29kZSl7cC5sb2coIltzeW5jaGVyXSAtIG5ldyBEYXRhIE9iamVjdCBPYnNlcnZlcjogIixvLHQuX3Byb3Zpc2lvbmFscyk7dmFyIGE9by5ib2R5LnZhbHVlO2Euc3luY2hlcj10LGEucDJwPWUucDJwLGEuc3RvcmU9ZS5zdG9yZSxhLmlkZW50aXR5PWUuaWRlbnRpdHksYS5yZXN1bWU9ITEsYS5tdXR1YWw9ZS5tdXR1YWw7dmFyIHU9dC5fb2JzZXJ2ZXJzW2ldO3U/dS5zeW5jKCk6KHU9bmV3IGQuZGVmYXVsdChhKSx0Ll9vYnNlcnZlcnNbaV09dSkscC5sb2coIltzeW5jaGVyXSAtIG5ldyBEYXRhIE9iamVjdCBPYnNlcnZlciBhbHJlYWR5IGV4aXN0OiAiLHUpLHIodSkscyYmcy5hcHBseSh1KX1lbHNlIG4oby5ib2R5LmRlc2MpfSl9KX19LHtrZXk6Il9yZXN1bWVTdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj10aGlzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7dmFyIGk9e3R5cGU6InN1YnNjcmliZSIsZnJvbTpyLl9vd25lcix0bzpyLl9zdWJVUkwsYm9keTp7fX07ZSYmKGUuaGFzT3duUHJvcGVydHkoInAycCIpJiYoaS5ib2R5LnAycD1lLnAycCksZS5oYXNPd25Qcm9wZXJ0eSgic3RvcmUiKSYmKGkuYm9keS5zdG9yZT1lLnN0b3JlKSxlLmhhc093blByb3BlcnR5KCJzY2hlbWEiKSYmKGkuYm9keS5zY2hlbWE9ZS5zY2hlbWEpLGUuaGFzT3duUHJvcGVydHkoImlkZW50aXR5IikmJihpLmJvZHkuaWRlbnRpdHk9ZS5pZGVudGl0eSksZS5oYXNPd25Qcm9wZXJ0eSgicmVzb3VyY2UiKSYmKGkuYm9keS5yZXNvdXJjZT1lLnVybCkpLGkuYm9keS5yZXN1bWU9ZS5yZXN1bWU7dmFyIHM9ZS5tdXR1YWw7ZS5oYXNPd25Qcm9wZXJ0eSgibXV0dWFsIikmJihpLmJvZHkubXV0dWFsPXMpLHAubG9nKCJbc3luY2hlcl0gLSBzdWJzY3JpYmUgbWVzc2FnZTogIixlLGkpLHIuX2J1cy5wb3N0TWVzc2FnZShpLGZ1bmN0aW9uKGUpe3AubG9nKCJbc3luY2hlcl0gLSBzdWJzY3JpYmUtcmVzdW1lZC1yZXNwb25zZTogIixlKTt2YXIgaT1lLmJvZHkucmVzb3VyY2Uscz1yLl9wcm92aXNpb25hbHNbaV07aWYoZGVsZXRlIHIuX3Byb3Zpc2lvbmFsc1tpXSxzJiZzLl9yZWxlYXNlTGlzdGVuZXJzKCksZS5ib2R5LmNvZGU8MjAwKXAubG9nKCJbc3luY2hlcl0gLSByZXN1bWUgbmV3IERhdGFQcm92aXNpb25hbDogIixlLGkpLHM9bmV3IGYuZGVmYXVsdChyLl9vd25lcixpLHIuX2J1cyxlLmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMpLHIuX3Byb3Zpc2lvbmFsc1tpXT1zO2Vsc2UgaWYoMjAwPT09ZS5ib2R5LmNvZGUpe3ZhciBhPWUuYm9keS52YWx1ZTtmb3IodmFyIHUgaW4gYSl7dmFyIGw9YVt1XTtwLmxvZygiW3N5bmNoZXJdIC0gUmVzdW1lIE9iamVjdCBPYnNlcnZlcjogIixlLGwsci5fcHJvdmlzaW9uYWxzKSxsLmNoaWxkcmVuT2JqZWN0cyYmKGwuY2hpbGRyZW5PYmplY3RzPSgwLGMuZGVlcENsb25lKShsLmNoaWxkcmVuT2JqZWN0cykpLGwuZGF0YT0oMCxjLmRlZXBDbG9uZSkobC5kYXRhKXx8e30sbC5yZXN1bWU9ITAsbC5zeW5jaGVyPXIscC5sb2coIltzeW5jaGVyLl9yZXN1bWVTdWJzY3JpYmVdIC0gY3JlYXRlIG5ldyBkYXRhT2JqZWN0OiAiLGwpO3ZhciB5PW5ldyBkLmRlZmF1bHQobCk7bC5jaGlsZHJlbk9iamVjdHMmJnkucmVzdW1lQ2hpbGRyZW5zKGwuY2hpbGRyZW5PYmplY3RzKSxwLmxvZygiW3N5bmNoZXIuX3Jlc3VtZVN1YnNjcmliZV0gLSBuZXcgZGF0YU9iamVjdCIseSksci5fb2JzZXJ2ZXJzW3kudXJsXT15LHIuX3Byb3Zpc2lvbmFsc1t5LnVybF0mJnIuX3Byb3Zpc2lvbmFsc1t5LnVybF0uYXBwbHkoeSl9bihyLl9vYnNlcnZlcnMpLHQuX29uT2JzZXJ2ZXJzUmVzdW1lJiZ0Ll9vbk9ic2VydmVyc1Jlc3VtZShyLl9vYnNlcnZlcnMpfWVsc2UgNDA0PT09ZS5ib2R5LmNvZGU/bih7fSk6byhlLmJvZHkuZGVzYyl9KX0pfX0se2tleToiX29uRm9yd2FyZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fcmVwb3J0ZXJzW2UuYm9keS50b10uX29uRm9yd2FyZChlKX19LHtrZXk6Il9vblJlbW90ZUNyZWF0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuZnJvbS5zbGljZSgwLC0xMyksbj0oMCxjLmRpdmlkZVVSTCkocikuZG9tYWluLG89e3R5cGU6ZS50eXBlLGZyb206ZS5ib2R5LnNvdXJjZSx1cmw6cixkb21haW46bixzY2hlbWE6ZS5ib2R5LnNjaGVtYSx2YWx1ZTplLmJvZHkudmFsdWUsaWRlbnRpdHk6ZS5ib2R5LmlkZW50aXR5LGFjazpmdW5jdGlvbihyKXt2YXIgbj0yMDA7ciYmKG49ciksdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6bn19KX19O3QuX29uTm90aWZpY2F0aW9uSGFuZGxlciYmKHAuaW5mbygiW1N5bmNoZXJdIE5PVElGSUNBVElPTi1FVkVOVDogIixvKSx0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXIobykpfX0se2tleToiX29uUmVtb3RlRGVsZXRlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LnJlc291cmNlLG49dC5fb2JzZXJ2ZXJzW3JdLG89e2Zyb206dC5vd25lcix0bzp0Ll9zdWJVUkwsaWQ6ZS5pZCx0eXBlOiJ1bnN1YnNjcmliZSIsYm9keTp7cmVzb3VyY2U6ZS5ib2R5LnJlc291cmNlfX07aWYodC5fYnVzLnBvc3RNZXNzYWdlKG8pLGRlbGV0ZSB0Ll9vYnNlcnZlcnNbcl0sbil7dmFyIGk9e3R5cGU6ZS50eXBlLHVybDpyLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eSxhY2s6ZnVuY3Rpb24ocil7dmFyIG89MjAwO3ImJihvPXIpLDIwMD09PW8mJm4uZGVsZXRlKCksdC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6byxzb3VyY2U6dC5fb3duZXJ9fSl9fTt0Ll9vbk5vdGlmaWNhdGlvbkhhbmRsZXImJihwLmxvZygiTk9USUZJQ0FUSU9OLUVWRU5UOiAiLGkpLHQuX29uTm90aWZpY2F0aW9uSGFuZGxlcihpKSl9ZWxzZSB0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDQsc291cmNlOnQuX293bmVyfX0pfX0se2tleToiX29uRXhlY3V0ZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPXtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6MjAwfX07aWYoKGUuZnJvbT09PXQuX3J1bnRpbWVVcmwrIi9yZWdpc3RyeS8ifHxlLmZyb209PT10Ll9ydW50aW1lVXJsKyIvcmVnaXN0cnkiKSYmZS5ib2R5JiZlLmJvZHkubWV0aG9kJiYiY2xvc2UiPT09ZS5ib2R5Lm1ldGhvZCYmdC5fb25DbG9zZSl7dmFyIG49e3R5cGU6ImNsb3NlIixhY2s6ZnVuY3Rpb24oZSl7ZSYmKHIuYm9keS5jb2RlPWUpLHQuX2J1cy5wb3N0TWVzc2FnZShyKX19O3AuaW5mbygiW1N5bmNoZXJdIENsb3NlLUVWRU5UOiAiLG4pLHQuX29uQ2xvc2Uobil9ZWxzZSB0Ll9idXMucG9zdE1lc3NhZ2Uocil9fSx7a2V5OiJvblJlcG9ydGVyc1Jlc3VtZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25SZXBvcnRlcnNSZXN1bWU9ZX19LHtrZXk6Im9uT2JzZXJ2ZXJzUmVzdW1lIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbk9ic2VydmVyc1Jlc3VtZT1lfX0se2tleToib3duZXIiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9vd25lcn19LHtrZXk6InJlcG9ydGVycyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlcG9ydGVyc319LHtrZXk6Im9ic2VydmVycyIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX29ic2VydmVyc319XSksZX0oKTt0LmRlZmF1bHQ9eSxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoNDIpKSxpPW4ocig1OCkpLHM9bihyKDE4KSksYT1uKHIoMjUpKSx1PW4ocigzKSksYz1uKHIoNSkpLGw9bihyKDMzKSksZD1uKHIoMTAwKSksZj1uKHIoMzQpKSxwPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLHk9bihyKDEyMikpLHY9cigxOSksaD1wLmdldExvZ2dlcigiRGF0YU9iamVjdFJlcG9ydGVyIiksYj1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUpeygwLHUuZGVmYXVsdCkodGhpcyx0KTt2YXIgcj0oMCxsLmRlZmF1bHQpKHRoaXMsKHQuX19wcm90b19ffHwoMCxhLmRlZmF1bHQpKHQpKS5jYWxsKHRoaXMsZSkpLG49cjtyZXR1cm4gbi5fc3Vic2NyaXB0aW9ucz17fSxuLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24oZSl7aC5sb2coIltTeW5jaGVyLkRhdGFPYmplY3RSZXBvcnRlcl0gIituLnVybCsiIHB1Ymxpc2ggY2hhbmdlOiAiLGUpLG4uX29uQ2hhbmdlKGUpfSksbi5fYWxsb2NhdGVMaXN0ZW5lcnMoKSxuLmludml0YXRpb25zPVtdLG4uX2NoaWxkcmVuU2l6ZVRocmVzaG9sZD01ZTQscn1yZXR1cm4oMCxmLmRlZmF1bHQpKHQsZSksKDAsYy5kZWZhdWx0KSh0LFt7a2V5OiJfYWxsb2NhdGVMaXN0ZW5lcnMiLHZhbHVlOmZ1bmN0aW9uKCl7KDAsZC5kZWZhdWx0KSh0LnByb3RvdHlwZS5fX3Byb3RvX198fCgwLGEuZGVmYXVsdCkodC5wcm90b3R5cGUpLCJfYWxsb2NhdGVMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyk7dmFyIGU9dGhpcztlLl9vYmplY3RMaXN0ZW5lcj1lLl9idXMuYWRkTGlzdGVuZXIoZS5fdXJsLGZ1bmN0aW9uKHQpe3N3aXRjaChoLmxvZygiW1N5bmNoZXIuRGF0YU9iamVjdFJlcG9ydGVyXSBsaXN0ZW5lciAiK2UuX3VybCsiIFJlY2VpdmVkOiAiLHQpLHQudHlwZSl7Y2FzZSJyZXNwb25zZSI6ZS5fb25SZXNwb25zZSh0KTticmVhaztjYXNlInJlYWQiOmUuX29uUmVhZCh0KTticmVhaztjYXNlImV4ZWN1dGUiOmUuX29uRXhlY3V0ZSh0KTticmVhaztjYXNlImNyZWF0ZSI6ZS5fb25DaGlsZENyZWF0ZSh0KX19KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpeygwLGQuZGVmYXVsdCkodC5wcm90b3R5cGUuX19wcm90b19ffHwoMCxhLmRlZmF1bHQpKHQucHJvdG90eXBlKSwiX3JlbGVhc2VMaXN0ZW5lcnMiLHRoaXMpLmNhbGwodGhpcyksdGhpcy5fb2JqZWN0TGlzdGVuZXIucmVtb3ZlKCl9fSx7a2V5OiJpbnZpdGVPYnNlcnZlcnMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPWU7bi5sZW5ndGg+MCYmKGgubG9nKCJbU3luY2hlci5EYXRhT2JqZWN0UmVwb3J0ZXJdIEludml0ZU9ic2VydmVycyAiLG4sci5fbWV0YWRhdGEpLG4uZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgbj1uZXcgcy5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7dmFyIGk9e3R5cGU6ImNyZWF0ZSIsZnJvbTpyLl9zeW5jaGVyLl9vd25lcix0bzpyLl9zeW5jaGVyLl9zdWJVUkwsYm9keTp7cmVzdW1lOiExLHJlc291cmNlOnIuX3VybCxzY2hlbWE6ci5fc2NoZW1hLHZhbHVlOnIuX21ldGFkYXRhLGF1dGhvcmlzZTpbZV19fTt0JiYoaS5ib2R5LnAycD10KSxyLmRhdGEubXV0dWFsfHwoaS5ib2R5Lm11dHVhbD1yLmRhdGEubXV0dWFsKSxyLl9idXMucG9zdE1lc3NhZ2UoaSxmdW5jdGlvbih0KXtoLmxvZygiW1N5bmNoZXIuRGF0YU9iamVjdFJlcG9ydGVyXSBJbnZpdGF0aW9uIHJlcGx5ICIsdCk7dmFyIHI9e2ludml0ZWQ6ZSxjb2RlOnQuYm9keSYmdC5ib2R5LmNvZGU/dC5ib2R5LmNvZGU6NTAwLGRlc2M6dC5ib2R5JiZ0LmJvZHkuZGVzYz90LmJvZHkuZGVzYzoiVW5rbm93biJ9O3IuY29kZTwzMDA/bihyKTpyLmNvZGU+PTMwMCYmbyhyKX0pfSk7ci5pbnZpdGF0aW9ucy5wdXNoKG4pfSkpfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fZGVsZXRlQ2hpbGRyZW5zKCkudGhlbihmdW5jdGlvbih0KXtoLmxvZyh0KTt2YXIgcj17dHlwZToiZGVsZXRlIixmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTplLl91cmx9fTtlLl9idXMucG9zdE1lc3NhZ2UocixmdW5jdGlvbih0KXtoLmxvZygiRGF0YU9iamVjdFJlcG9ydGVyLURFTEVURTogIix0KSwyMDA9PT10LmJvZHkuY29kZSYmKGUuX3JlbGVhc2VMaXN0ZW5lcnMoKSxkZWxldGUgZS5fc3luY2hlci5fcmVwb3J0ZXJzW2UuX3VybF0sZS5fc3luY09iaj17fSl9KX0pfX0se2tleToib25TdWJzY3JpcHRpb24iLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uU3Vic2NyaXB0aW9uSGFuZGxlcj1lfX0se2tleToib25SZXNwb25zZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25SZXNwb25zZUhhbmRsZXI9ZX19LHtrZXk6Im9uUmVhZCIsdmFsdWU6ZnVuY3Rpb24oZSl7dGhpcy5fb25SZWFkSGFuZGxlcj1lfX0se2tleToib25FeGVjdXRlIix2YWx1ZTpmdW5jdGlvbihlKXt0aGlzLl9vbkV4ZWN1dGVIYW5kbGVyPWV9fSx7a2V5OiJfb25Gb3J3YXJkIix2YWx1ZTpmdW5jdGlvbihlKXtzd2l0Y2goaC5sb2coIkRhdGFPYmplY3RSZXBvcnRlci1SQ1Y6ICIsZSksZS5ib2R5LnR5cGUpe2Nhc2Uic3Vic2NyaWJlIjp0aGlzLl9vblN1YnNjcmliZShlKTticmVhaztjYXNlInVuc3Vic2NyaWJlIjp0aGlzLl9vblVuU3Vic2NyaWJlKGUpfX19LHtrZXk6Il9vblN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPWUuYm9keS5mcm9tLG49KDAsdi5kaXZpZGVVUkwpKHIpLG89bi5kb21haW4saT0hMDtlLmJvZHkuaGFzT3duUHJvcGVydHkoIm11dHVhbCIpJiYhZS5ib2R5Lm11dHVhbCYmKGk9ITEpLGgubG9nKCJbRGF0YU9iamVjdFJlcG9ydGVyLl9vblN1YnNjcmliZV0iLGUsbyxuKTt2YXIgcz17dHlwZTplLmJvZHkudHlwZSx1cmw6cixkb21haW46byxpZGVudGl0eTplLmJvZHkuaWRlbnRpdHksbnV0dWFsOmksYWNjZXB0OmZ1bmN0aW9uKCl7dmFyIG49e3VybDpyLHN0YXR1czoibGl2ZSJ9O3QuX3N1YnNjcmlwdGlvbnNbcl09bix0Lm1ldGFkYXRhLnN1YnNjcmlwdGlvbnMmJnQubWV0YWRhdGEuc3Vic2NyaXB0aW9ucy5wdXNoKG4udXJsKTt2YXIgbz0oMCx2LmRlZXBDbG9uZSkodC5fbWV0YWRhdGEpO28uZGF0YT0oMCx2LmRlZXBDbG9uZSkodC5kYXRhKSxvLnZlcnNpb249dC5fdmVyc2lvbjt2YXIgaT17aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMCxzY2hlbWE6dC5fc2NoZW1hLHZhbHVlOm99fTtyZXR1cm4gZS5ib2R5Lmhhc093blByb3BlcnR5KCJtdXR1YWwiKSYmIWUuYm9keS5tdXR1YWwmJihpLmJvZHkubXV0dWFsPWUuYm9keS5tdXR1YWwsdC5kYXRhLm11dHVhbD0hMSksdC5fYnVzLnBvc3RNZXNzYWdlKGkpLG59LHJlamVjdDpmdW5jdGlvbihyKXt0Ll9idXMucG9zdE1lc3NhZ2Uoe2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLGZyb206ZS50byx0bzplLmZyb20sYm9keTp7Y29kZTo0MDMsZGVzYzpyfX0pfX07dC5fb25TdWJzY3JpcHRpb25IYW5kbGVyJiYoaC5sb2coIlNVQlNDUklQVElPTi1FVkVOVDogIixzKSx0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXIocykpfX0se2tleToiX29uVW5TdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj1lLmJvZHkuZnJvbSxuPSgwLHYuZGl2aWRlVVJMKShyKSxvPW4uZG9tYWluO2gubG9nKCJbRGF0YU9iamVjdFJlcG9ydGVyLl9vblVuU3Vic2NyaWJlXSIsZSxvLG4pLGRlbGV0ZSB0Ll9zdWJzY3JpcHRpb25zW3JdLGRlbGV0ZSB0Lmludml0YXRpb25zW3JdO3ZhciBpPXt0eXBlOmUuYm9keS50eXBlLHVybDpyLGRvbWFpbjpvLGlkZW50aXR5OmUuYm9keS5pZGVudGl0eX07dC5fb25TdWJzY3JpcHRpb25IYW5kbGVyJiYoaC5sb2coIlVOLVNVQlNDUklQVElPTi1FVkVOVDogIixpKSx0Ll9vblN1YnNjcmlwdGlvbkhhbmRsZXIoaSkpfX0se2tleToiX29uUmVzcG9uc2UiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLGNvZGU6ZS5ib2R5LmNvZGV9O3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyJiYoaC5sb2coIlJFU1BPTlNFLUVWRU5UOiAiLHQpLHRoaXMuX29uUmVzcG9uc2VIYW5kbGVyKHQpKX19LHtrZXk6Il9vblJlYWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMscj0oMCxpLmRlZmF1bHQpKHQuY2hpbGRyZW5zSlNPTikubGVuZ3RoPnQuX2NoaWxkcmVuU2l6ZVRocmVzaG9sZCxuPXt0eXBlOmUudHlwZSx1cmw6ZS5mcm9tLGFjY2VwdDpmdW5jdGlvbigpe3I/dC5fc3luY1JlcGx5Rm9yTGFyZ2VEYXRhKGUpOnQuX3N5bmNSZXBseShlKX0scmVqZWN0OmZ1bmN0aW9uKHIpe3QuX2J1cy5wb3N0TWVzc2FnZSh7aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjQwMSxkZXNjOnJ9fSl9fSxzPVtdO3QubWV0YWRhdGEuc3Vic2NyaXB0aW9ucz9zPXQubWV0YWRhdGEuc3Vic2NyaXB0aW9uczp0Ll9zdWJzY3JpcHRpb25zJiYocz0oMCxvLmRlZmF1bHQpKHQuX3N1YnNjcmlwdGlvbnMpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gdC5fc3Vic2NyaXB0aW9uc1tlXS51cmx9KSksLTEhPXMuaW5kZXhPZihlLmZyb20pP3I/dC5fc3luY1JlcGx5Rm9yTGFyZ2VEYXRhKGUpOnQuX3N5bmNSZXBseShlKTp0Ll9vblJlYWRIYW5kbGVyJiYoaC5sb2coIlJFQUQtRVZFTlQ6ICIsbiksdC5fb25SZWFkSGFuZGxlcihuKSl9fSx7a2V5OiJfc3luY1JlcGx5Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9KDAsdi5kZWVwQ2xvbmUpKHQubWV0YWRhdGEpO3IuZGF0YT0oMCx2LmRlZXBDbG9uZSkodC5kYXRhKSxyLmNoaWxkcmVuT2JqZWN0cz0oMCx2LmRlZXBDbG9uZSkodC5jaGlsZHJlbnNKU09OKSxyLnZlcnNpb249dC5fdmVyc2lvbjt2YXIgbj17aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMCx2YWx1ZTpyfX07dC5fYnVzLnBvc3RNZXNzYWdlKG4pfX0se2tleToiX3N5bmNSZXBseUZvckxhcmdlRGF0YSIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPSgwLHYuZGVlcENsb25lKSh0Lm1ldGFkYXRhKTtyLmRhdGE9KDAsdi5kZWVwQ2xvbmUpKHQuZGF0YSksci52ZXJzaW9uPXQuX3ZlcnNpb24sZGVsZXRlIHIuY2hpbGRyZW5PYmplY3RzO3ZhciBuPXZvaWQgMCxvPVtdLHM9e307Zm9yKG4gaW4gdC5fY2hpbGRyZW5PYmplY3RzKXt2YXIgYT12b2lkIDA7Zm9yKGEgaW4gc1tuXT17fSx0Ll9jaGlsZHJlbk9iamVjdHNbbl0pKDAsaS5kZWZhdWx0KShzKS5sZW5ndGg+dC5fY2hpbGRyZW5TaXplVGhyZXNob2xkJiYoby5wdXNoKHMpLChzPXt9KVtuXT17fSksc1tuXVthXT17fSxzW25dW2FdLnZhbHVlPXQuX2NoaWxkcmVuT2JqZWN0c1tuXVthXS5tZXRhZGF0YSxzW25dW2FdLmlkZW50aXR5PXQuX2NoaWxkcmVuT2JqZWN0c1tuXVthXS5pZGVudGl0eX1vLnB1c2gocyksci5yZXNwb25zZXM9by5sZW5ndGgrMTt2YXIgdT17aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjEwMCx2YWx1ZTpyfX07dC5fYnVzLnBvc3RNZXNzYWdlKHUpLG8uZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgbj0oMCx2LmRlZXBDbG9uZSkodSk7bi5ib2R5LnZhbHVlPWUsbi5ib2R5LnZhbHVlLnJlc3BvbnNlcz1yLnJlc3BvbnNlcyxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5fYnVzLnBvc3RNZXNzYWdlKG4pfSw1MCl9KX19LHtrZXk6Il9vbkV4ZWN1dGUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aWYoIWUuYm9keS5tZXRob2QpdGhyb3cgZTt2YXIgcj17aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsZnJvbTplLnRvLHRvOmUuZnJvbSxib2R5Ontjb2RlOjIwMH19LG49e3R5cGU6ZS50eXBlLHVybDplLmZyb20sbWV0aG9kOmUuYm9keS5tZXRob2QscGFyYW1zOmUuYm9keS5wYXJhbXMsYWNjZXB0OmZ1bmN0aW9uKCl7dC5fYnVzLnBvc3RNZXNzYWdlKHIpfSxyZWplY3Q6ZnVuY3Rpb24ocil7dC5fYnVzLnBvc3RNZXNzYWdlKHtpZDplLmlkLHR5cGU6InJlc3BvbnNlIixmcm9tOmUudG8sdG86ZS5mcm9tLGJvZHk6e2NvZGU6NDAxLGRlc2M6cn19KX19O3QuX29uRXhlY3V0ZUhhbmRsZXImJihoLmxvZygiW0RhdGFPYmplY3RSZXBvcnRlcl0gRVhFQ1VURS1FVkVOVDogIixuKSx0Ll9vbkV4ZWN1dGVIYW5kbGVyKG4pKX19LHtrZXk6InN1YnNjcmlwdGlvbnMiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdWJzY3JpcHRpb25zfX0se2tleToiY2hpbGRyZW5zSlNPTiIsZ2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt9LHI9dm9pZCAwO2ZvcihyIGluIGUuX2NoaWxkcmVuT2JqZWN0cyl7dmFyIG49dm9pZCAwO2ZvcihuIGluIHRbcl09e30sZS5fY2hpbGRyZW5PYmplY3RzW3JdKXRbcl1bbl09e30sdFtyXVtuXS52YWx1ZT1lLl9jaGlsZHJlbk9iamVjdHNbcl1bbl0ubWV0YWRhdGEsdFtyXVtuXS5pZGVudGl0eT1lLl9jaGlsZHJlbk9iamVjdHNbcl1bbl0uaWRlbnRpdHl9cmV0dXJuIHR9fV0pLHR9KHkuZGVmYXVsdCk7dC5kZWZhdWx0PWIsZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDQyKSksaT1uKHIoNzgpKSxzPW4ocigxOCkpLGE9bihyKDI1KSksdT1uKHIoMykpLGM9bihyKDUpKSxsPW4ocigzMykpLGQ9bihyKDEwMCkpLGY9bihyKDM0KSkscD1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSx5PXIoMTkpLHY9bihyKDEyMikpLGg9cC5nZXRMb2dnZXIoIkRhdGFPYmplY3RPYnNlcnZlciIpLGI9ImFueSIsXz0ic3RhcnQiLG09ImV4YWN0IixnPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7KDAsdS5kZWZhdWx0KSh0aGlzLHQpO3ZhciByPSgwLGwuZGVmYXVsdCkodGhpcywodC5fX3Byb3RvX198fCgwLGEuZGVmYXVsdCkodCkpLmNhbGwodGhpcyxlKSksbj1yO3JldHVybiBuLl92ZXJzaW9uPWUudmVyc2lvbixuLl9maWx0ZXJzPXt9LG4uX3N5bmNPYmoub2JzZXJ2ZShmdW5jdGlvbihlKXtuLl9vbkZpbHRlcihlKX0pLG4uX2FsbG9jYXRlTGlzdGVuZXJzKCkscn1yZXR1cm4oMCxmLmRlZmF1bHQpKHQsZSksKDAsYy5kZWZhdWx0KSh0LFt7a2V5OiJzeW5jIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIGguaW5mbygiW0RhdGFPYmplY3RPYnNlcnZlcl9zeW5jXSBzeW5jaHJvbmlzaW5nICIpLG5ldyBzLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtlLl9zeW5jaGVyLnJlYWQoZS5fbWV0YWRhdGEudXJsKS50aGVuKGZ1bmN0aW9uKHIpe2guaW5mbygiW0RhdGFPYmplY3RPYnNlcnZlcl9zeW5jXSB2YWx1ZSB0byBzeW5jOiAiLHIpLCgwLGkuZGVmYXVsdCkoZS5kYXRhLCgwLHkuZGVlcENsb25lKShyLmRhdGEpKSxlLl92ZXJzaW9uPXIudmVyc2lvbixlLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQ9ci5sYXN0TW9kaWZpZWQsci5jaGlsZHJlbk9iamVjdHM/KGUucmVzdW1lQ2hpbGRyZW5zKHIuY2hpbGRyZW5PYmplY3RzKSxlLl9zdG9yZUNoaWxkcmVucygpLHQoITApKTp0KCEwKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe2guaW5mbygiW0RhdGFPYmplY3RPYnNlcnZlcl9zeW5jXSBzeW5jIGZhaWxlZDogIixlKSx0KCExKX0pfSl9fSx7a2V5OiJfc3RvcmVDaGlsZHJlbnMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt9OygwLG8uZGVmYXVsdCkoZS5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBuPWUuX2NoaWxkcmVuT2JqZWN0c1tyXTt0W3JdPXt9LCgwLG8uZGVmYXVsdCkobikuZm9yRWFjaChmdW5jdGlvbihlKXt0W3JdW2VdPXt9LHRbcl1bZV0udmFsdWU9bltlXS5tZXRhZGF0YSx0W3JdW2VdLmlkZW50aXR5PW5bZV0uaWRlbnRpdHl9KX0pO3ZhciByPXtmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCx0eXBlOiJjcmVhdGUiLGJvZHk6e3Jlc291cmNlOmUuX3VybCxhdHRyaWJ1dGU6ImNoaWxkcmVuT2JqZWN0cyIsdmFsdWU6dH19O2UuX2J1cy5wb3N0TWVzc2FnZShyKX19LHtrZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxkLmRlZmF1bHQpKHQucHJvdG90eXBlLl9fcHJvdG9fX3x8KDAsYS5kZWZhdWx0KSh0LnByb3RvdHlwZSksIl9hbGxvY2F0ZUxpc3RlbmVycyIsdGhpcykuY2FsbCh0aGlzKTt2YXIgZT10aGlzO2UuX2NoYW5nZUxpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwrIi9jaGFuZ2VzIixmdW5jdGlvbih0KXsidXBkYXRlIj09PXQudHlwZSYmKGgubG9nKCJEYXRhT2JqZWN0T2JzZXJ2ZXItIitlLl91cmwrIi1SQ1Y6ICIsdCksZS5fY2hhbmdlT2JqZWN0KGUuX3N5bmNPYmosdCkpfSl9fSx7a2V5OiJfcmVsZWFzZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXsoMCxkLmRlZmF1bHQpKHQucHJvdG90eXBlLl9fcHJvdG9fX3x8KDAsYS5kZWZhdWx0KSh0LnByb3RvdHlwZSksIl9yZWxlYXNlTGlzdGVuZXJzIix0aGlzKS5jYWxsKHRoaXMpLHRoaXMuX2NoYW5nZUxpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiZGVsZXRlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fZGVsZXRlQ2hpbGRyZW5zKCkudGhlbihmdW5jdGlvbigpe2UudW5zdWJzY3JpYmUoKSxlLl9yZWxlYXNlTGlzdGVuZXJzKCksZGVsZXRlIGUuX3N5bmNoZXIuX29ic2VydmVyc1tlLl91cmxdfSl9fSx7a2V5OiJ1bnN1YnNjcmliZSIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e3R5cGU6InVuc3Vic2NyaWJlIixmcm9tOmUuX293bmVyLHRvOmUuX3N5bmNoZXIuX3N1YlVSTCxib2R5OntyZXNvdXJjZTplLl91cmx9fTtlLl9idXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXtoLmxvZygiRGF0YU9iamVjdE9ic2VydmVyLVVOU1VCU0NSSUJFOiAiLHQpLDIwMD09PXQuYm9keS5jb2RlJiYoZS5fcmVsZWFzZUxpc3RlbmVycygpLGRlbGV0ZSBlLl9zeW5jaGVyLl9vYnNlcnZlcnNbZS5fdXJsXSl9KX19LHtrZXk6Im9uQ2hhbmdlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPWUsbj17dHlwZTptLGNhbGxiYWNrOnR9LG89ZS5pbmRleE9mKCIqIik7bz09PWUubGVuZ3RoLTEmJigwPT09bz9uLnR5cGU9Yjoobi50eXBlPV8scj1lLnN1YnN0cigwLGUubGVuZ3RoLTEpKSksdGhpcy5fZmlsdGVyc1tyXT1ufX0se2tleToiX29uRmlsdGVyIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzOygwLG8uZGVmYXVsdCkodC5fZmlsdGVycykuZm9yRWFjaChmdW5jdGlvbihyKXt2YXIgbj10Ll9maWx0ZXJzW3JdO24udHlwZT09PWI/bi5jYWxsYmFjayhlKTpuLnR5cGU9PT1fPzA9PT1lLmZpZWxkLmluZGV4T2YocikmJm4uY2FsbGJhY2soZSk6bi50eXBlPT09bSYmZS5maWVsZD09PXImJm4uY2FsbGJhY2soZSl9KX19LHtrZXk6Im9uRGlzY29ubmVjdGVkIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBuZXcgcy5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7dC5fc3Vic2NyaWJlUmVnaXN0cmF0aW9uKCkudGhlbihmdW5jdGlvbigpe3QuX29uRGlzY29ubmVjdGVkPWUscigpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSl9KX0pfX0se2tleToiX3N1YnNjcmliZVJlZ2lzdHJhdGlvbiIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e3R5cGU6InN1YnNjcmliZSIsZnJvbTp0aGlzLl9vd25lcix0bzp0aGlzLl9zeW5jaGVyLl9ydW50aW1lVXJsKyIvc3Vic2NyaXB0aW9ucyIsYm9keTp7cmVzb3VyY2VzOlt0aGlzLl91cmwrIi9yZWdpc3RyYXRpb24iXX19O3JldHVybiBuZXcgcy5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7ZS5fYnVzLnBvc3RNZXNzYWdlKHQsZnVuY3Rpb24odCl7aC5sb2coIltEYXRhT2JqZWN0T2JzZXJ2ZXIuX3N1YnNjcmliZVJlZ2lzdHJhdGlvbl0gIitlLl91cmwrIiByY3ZlZCByZXBseSAiLHQpLDIwMD09PXQuYm9keS5jb2RlPyhlLl9nZW5lcmF0ZUxpc3RlbmVyKGUuX3VybCsiL3JlZ2lzdHJhdGlvbiIpLHIoKSk6KGguZXJyb3IoIkVycm9yIHN1YnNjcmliaW5nIHJlZ2lzdHJhdGlvbiBzdGF0dXMgZm9yICIsZS5fdXJsKSxuKCJFcnJvciBzdWJzY3JpYmluZyByZWdpc3RyYXRpb24gc3RhdHVzIGZvciAiK2UuX3VybCkpfSl9KX19LHtrZXk6Il9nZW5lcmF0ZUxpc3RlbmVyIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2J1cy5hZGRMaXN0ZW5lcihlLGZ1bmN0aW9uKGUpe2gubG9nKCJbRGF0YU9iamVjdE9ic2VydmVyLnJlZ2lzdHJhdGlvbk5vdGlmaWNhdGlvbl0gIit0Ll91cmwrIjogIixlKSxlLmJvZHkudmFsdWUmJiJkaXNjb25uZWN0ZWQiPT09ZS5ib2R5LnZhbHVlJiZ0Ll9vbkRpc2Nvbm5lY3RlZCYmKGgubG9nKCJbRGF0YU9iamVjdE9ic2VydmVyXSAiK3QuX3VybCsiOiB3YXMgZGlzY29ubmVjdGVkICIsZSksdC5fb25EaXNjb25uZWN0ZWQoKSl9KX19LHtrZXk6ImV4ZWN1dGUiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPXRoaXM7cmV0dXJuIG5ldyBzLmRlZmF1bHQoZnVuY3Rpb24obyxpKXt2YXIgcz17dHlwZToiZXhlY3V0ZSIsZnJvbTpyLl9vd25lcix0bzpuLl91cmwsYm9keTp7bWV0aG9kOmUscGFyYW1zOnR9fTtuLl9idXMucG9zdE1lc3NhZ2UocyxmdW5jdGlvbih0KXtoLmxvZygiW0RhdGFPYmplY3RPYnNlcnZlci5leGVjdXRlXSAiK24uX3VybCsiIHJjdmVkIHJlcGx5ICIsdCksMjAwPT09dC5ib2R5LmNvZGU/bygpOihoLndhcm4oIltEYXRhT2JqZWN0T2JzZXJ2ZXIuZXhlY3V0ZV0gZXhlY3V0aW9uIG9mIG1ldGhvZCAiK2UrIiB3YXMgcmVqZWN0IGJ5IHJlcG9ydGVyIiksaSgiW0RhdGFPYmplY3RPYnNlcnZlci5leGVjdXRlXSBleGVjdXRpb24gb2YgbWV0aG9kICIrZSsiIHdhcyByZWplY3QgYnkgcmVwb3J0ZXIiKSl9KX0pfX1dKSx0fSh2LmRlZmF1bHQpO3QuZGVmYXVsdD1nLGUuZXhwb3J0cz10LmRlZmF1bHR9LGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocig0MikpLGk9bihyKDE4KSkscz1uKHIoMykpLGE9bihyKDUpKSx1PWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLGM9cigxOSksbD11LmdldExvZ2dlcigiUmVnaXN0cmF0aW9uU3RhdHVzIiksZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG4sbyl7KDAscy5kZWZhdWx0KSh0aGlzLGUpLHRoaXMuX3JlZ2lzdHJ5T2JqZWN0VVJMPXQsdGhpcy5fcnVudGltZVVSTD1yLHRoaXMuX2RvbWFpbj0oMCxjLmRpdmlkZVVSTCkocikuZG9tYWluLHRoaXMuX2Rpc2NvdmVyZWRPYmplY3RVUkw9bix0aGlzLl9tZXNzYWdlQnVzPW8sdGhpcy5fc3Vic2NyaXB0aW9uU2V0PSExLHRoaXMuX3N1YnNjcmliZXJzPXtsaXZlOnt9LGRpc2Nvbm5lY3RlZDp7fX19cmV0dXJuKDAsYS5kZWZhdWx0KShlLFt7a2V5OiJvbkxpdmUiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihuLG8pe3IuX3N1YnNjcmlwdGlvblNldD8oci5fc3Vic2NyaWJlcnMubGl2ZVtlXT10LG4oKSk6ci5fc3Vic2NyaWJlKCkudGhlbihmdW5jdGlvbigpe3IuX3N1YnNjcmliZXJzLmxpdmVbZV09dCxuKCl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gbyhlKX0pfSl9fSx7a2V5OiJvbkRpc2Nvbm5lY3RlZCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzO3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7ci5fc3Vic2NyaXB0aW9uU2V0PyhyLl9zdWJzY3JpYmVycy5kaXNjb25uZWN0ZWRbZV09dCxuKCkpOnIuX3N1YnNjcmliZSgpLnRoZW4oZnVuY3Rpb24oKXtyLl9zdWJzY3JpYmVycy5kaXNjb25uZWN0ZWRbZV09dCxuKCl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gbyhlKX0pfSl9fSx7a2V5OiJfc3Vic2NyaWJlIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsdD17dHlwZToic3Vic2NyaWJlIixmcm9tOnRoaXMuX2Rpc2NvdmVyZWRPYmplY3RVUkwsdG86dGhpcy5fcnVudGltZVVSTCsiL3N1YnNjcmlwdGlvbnMiLGJvZHk6e3Jlc291cmNlczpbdGhpcy5fcmVnaXN0cnlPYmplY3RVUkwrIi9yZWdpc3RyYXRpb24iXX19O3JldHVybiBuZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7ZS5fbWVzc2FnZUJ1cy5wb3N0TWVzc2FnZSh0LGZ1bmN0aW9uKHQpe2wubG9nKCJbRGlzY292ZXJlZE9iamVjdC5zdWJzY3JpYmVdICIrZS5fcmVnaXN0cnlPYmplY3RVUkwrIiByY3ZlZCByZXBseSAiLHQpLDIwMD09PXQuYm9keS5jb2RlPyhlLl9nZW5lcmF0ZUxpc3RlbmVyKGUuX3JlZ2lzdHJ5T2JqZWN0VVJMKyIvcmVnaXN0cmF0aW9uIiksZS5fc3Vic2NyaXB0aW9uU2V0PSEwLHIoKSk6KGwuZXJyb3IoIkVycm9yIHN1YnNjcmliaW5nICIsZS5fcmVnaXN0cnlPYmplY3RVUkwpLG4oIkVycm9yIHN1YnNjcmliaW5nICIrZS5fcmVnaXN0cnlPYmplY3RVUkwpKX0pfSl9fSx7a2V5OiJfZ2VuZXJhdGVMaXN0ZW5lciIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLl9tZXNzYWdlQnVzLmFkZExpc3RlbmVyKGUsZnVuY3Rpb24oZSl7bC5sb2coIltEaXNjb3ZlcmVkT2JqZWN0Lm5vdGlmaWNhdGlvbl0gIit0Ll9yZWdpc3RyeU9iamVjdFVSTCsiOiAiLGUpLHQuX3Byb2Nlc3NOb3RpZmljYXRpb24oZSl9KX19LHtrZXk6Il9wcm9jZXNzTm90aWZpY2F0aW9uIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9ZS5ib2R5LnZhbHVlO3NldFRpbWVvdXQoZnVuY3Rpb24oKXsoMCxvLmRlZmF1bHQpKHQuX3N1YnNjcmliZXJzW3JdKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3JldHVybiB0Ll9zdWJzY3JpYmVyc1tyXVtlXSgpfSl9LDVlMyl9fSx7a2V5OiJfdW5zdWJzY3JpYmUiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt0eXBlOiJ1bnN1YnNjcmliZSIsZnJvbTp0aGlzLl9kaXNjb3ZlcmVkT2JqZWN0VVJMLHRvOnRoaXMuX3J1bnRpbWVVUkwrIi9zdWJzY3JpcHRpb25zIixib2R5OntyZXNvdXJjZTp0aGlzLl9yZWdpc3RyeU9iamVjdFVSTCsiL3JlZ2lzdHJhdGlvbiJ9fTtyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihyLG4pe2UuX21lc3NhZ2VCdXMucG9zdE1lc3NhZ2UodCxmdW5jdGlvbih0KXtsLmxvZygiW0Rpc2NvdmVyZWRPYmplY3QudW5zdWJzY3JpYmVdICIrZS5fcmVnaXN0cnlPYmplY3RVUkwrIiByY3ZlZCByZXBseSAiLHQpLDIwMD09PXQuYm9keS5jb2RlP3IoKToobC5lcnJvcigiRXJyb3IgdW5zdWJzY3JpYmluZyAiLGUuX3JlZ2lzdHJ5T2JqZWN0VVJMKSxuKCJFcnJvciB1bnN1YnNjcmliaW5nICIrZS5fcmVnaXN0cnlPYmplY3RVUkwpKX0pfSl9fSx7a2V5OiJ1bnN1YnNjcmliZUxpdmUiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtlIGluIHQuX3N1YnNjcmliZXJzLmxpdmUmJmRlbGV0ZSB0Ll9zdWJzY3JpYmVycy5saXZlW2VdLHQuX2FyZVN1YnNjcmlwdGlvbnNFbXB0eSgpP3QuX3Vuc3Vic2NyaWJlKCkudGhlbihmdW5jdGlvbigpe3JldHVybiByKCl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gbihlKX0pOnIoKX0pfX0se2tleToidW5zdWJzY3JpYmVEaXNjb25uZWN0ZWQiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24ocixuKXtlIGluIHQuX3N1YnNjcmliZXJzLmRpc2Nvbm5lY3RlZD8oZGVsZXRlIHQuX3N1YnNjcmliZXJzLmRpc2Nvbm5lY3RlZFtlXSx0Ll9hcmVTdWJzY3JpcHRpb25zRW1wdHkoKT90Ll91bnN1YnNjcmliZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gcigpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIG4oZSl9KTpyKCkpOm4oZSsiIGRvZXNuJ3Qgc3Vic2NyaWJlIG9uRGlzY29ubmVjdGVkIGZvciAiK3QuX3JlZ2lzdHJ5T2JqZWN0VVJMKX0pfX0se2tleToiX2FyZVN1YnNjcmlwdGlvbnNFbXB0eSIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gMD09PSgwLG8uZGVmYXVsdCkodGhpcy5fc3Vic2NyaWJlcnMubGl2ZSkubGVuZ3RoJiYwPT09KDAsby5kZWZhdWx0KSh0aGlzLl9zdWJzY3JpYmVycy5kaXNjb25uZWN0ZWQpLmxlbmd0aH19XSksZX0oKTt0LmRlZmF1bHQ9ZCxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoMykpLGk9bihyKDUpKSxzPWZ1bmN0aW9uKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD17fTtpZihudWxsIT1lKWZvcih2YXIgciBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpJiYodFtyXT1lW3JdKTtyZXR1cm4gdC5kZWZhdWx0PWUsdH0ocigyMikpLmdldExvZ2dlcigiRGF0YVByb3Zpc2lvbmFsIiksYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxyLG4saSl7KDAsby5kZWZhdWx0KSh0aGlzLGUpO3ZhciBzPXRoaXM7cy5fb3duZXI9dCxzLl91cmw9cixzLl9idXM9bixzLl9jaGlsZHJlbj1pLHMuX2NoYW5nZXM9W10scy5fYWxsb2NhdGVMaXN0ZW5lcnMoKX1yZXR1cm4oMCxpLmRlZmF1bHQpKGUsW3trZXk6Il9hbGxvY2F0ZUxpc3RlbmVycyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX2xpc3RlbmVyPWUuX2J1cy5hZGRMaXN0ZW5lcihlLl91cmwsZnVuY3Rpb24odCl7cy5sb2coIkRhdGFQcm92aXNpb25hbC0iK2UuX3VybCsiLVJDVjogIix0KSxlLl9jaGFuZ2VzLnB1c2godCl9KX19LHtrZXk6Il9yZWxlYXNlTGlzdGVuZXJzIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2xpc3RlbmVyLnJlbW92ZSgpfX0se2tleToiYXBwbHkiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX2NoYW5nZXMuZm9yRWFjaChmdW5jdGlvbih0KXtlLl9jaGFuZ2VPYmplY3QoZS5fc3luY09iaix0KX0pfX0se2tleToiY2hpbGRyZW4iLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jaGlsZHJlbn19XSksZX0oKTt0LmRlZmF1bHQ9YSxlLmV4cG9ydHM9dC5kZWZhdWx0fSwsLGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBvPW4ocigxOCkpLGk9bihyKDMpKSxzPW4ocig1KSksYT1mdW5jdGlvbihlKXtpZihlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9e307aWYobnVsbCE9ZSlmb3IodmFyIHIgaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKSYmKHRbcl09ZVtyXSk7cmV0dXJuIHQuZGVmYXVsdD1lLHR9KHIoMjIpKSx1PXIoMTkpLGM9bihyKDEzOSkpLGw9YS5nZXRMb2dnZXIoIkRpc2NvdmVyeSIpLGQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQscixuKXsoMCxpLmRlZmF1bHQpKHRoaXMsZSk7dmFyIG89dGhpcztvLm1lc3NhZ2VCdXM9bixvLnJ1bnRpbWVVUkw9cixvLmRvbWFpbj0oMCx1LmRpdmlkZVVSTCkodCkuZG9tYWluLG8uZGlzY292ZXJ5VVJMPXR9cmV0dXJuKDAscy5kZWZhdWx0KShlLFt7a2V5OiJfaXNMZWdhY3lVc2VyIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4hKCFlLmluY2x1ZGVzKCI6Iil8fGUuaW5jbHVkZXMoInVzZXI6Ly8iKSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydGllc1BlclVzZXJQcm9maWxlRGF0YSIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMsaT1bXSxzPXt0eXBlOiJyZWFkIixmcm9tOm4uZGlzY292ZXJ5VVJMLHRvOm4ucnVudGltZVVSTCsiL2Rpc2NvdmVyeS8iLGJvZHk6e3Jlc291cmNlOiIvaHlwZXJ0eS91c2VycHJvZmlsZS8iK2V9fTtyZXR1cm4odHx8cikmJihzLmJvZHkuY3JpdGVyaWE9e3Jlc291cmNlczpyLGRhdGFTY2hlbWVzOnR9KSxuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHQscil7bi5faXNMZWdhY3lVc2VyKGUpP3QoW3toeXBlcnR5SUQ6ZSxzdGF0dXM6ImxpdmUifV0pOm4ubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShzLGZ1bmN0aW9uKHIpezIwMD09PXIuYm9keS5jb2RlPyhyLmJvZHkudmFsdWUubWFwKGZ1bmN0aW9uKGUpe2UuaHlwZXJ0eUlEIT1uLmRpc2NvdmVyeVVSTCYmaS5wdXNoKGUpfSksMD09PWkubGVuZ3RoP3QoW10pOihsLmxvZygiW0Rpc2NvdmVyeS5kaXNjb3Zlckh5cGVydGllc1BlclVzZXJQcm9maWxlRGF0YV0gUmVwbHkgbG9nOiAiLGkpLHQoaSkpKToobC53YXJuKCJbRGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlclByb2ZpbGVEYXRhXSBFcnJvciBSZXBseSBmb3IgIitlKyIgUmVhc29uOiAiLHIuYm9keS5kZXNjcmlwdGlvbiksdChbXSkpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlclByb2ZpbGVEYXRhRE8iLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzLGk9YXJndW1lbnRzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKGUsdCl7bi5kaXNjb3Zlckh5cGVydGllc1BlclVzZXJQcm9maWxlRGF0YS5hcHBseShuLGkpLnRoZW4oZnVuY3Rpb24odCl7ZShuLl9jb252ZXJ0VG9EaXNjb3ZlcmVkT2JqZWN0KHQpKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfSl9KX19LHtrZXk6ImRpc2NvdmVyRGF0YU9iamVjdHNQZXJVc2VyUHJvZmlsZURhdGEiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzLGk9e3R5cGU6InJlYWQiLGZyb206bi5kaXNjb3ZlcnlVUkwsdG86bi5ydW50aW1lVVJMKyIvZGlzY292ZXJ5LyIsYm9keTp7cmVzb3VyY2U6Ii9kYXRhT2JqZWN0L3VzZXJwcm9maWxlLyIrZX19O3JldHVybih0fHxyKSYmKGkuYm9keS5jcml0ZXJpYT17cmVzb3VyY2VzOnIsZGF0YVNjaGVtZXM6dH0pLG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtuLl9pc0xlZ2FjeVVzZXIoZSk/dChbe2h5cGVydHlJRDplLHN0YXR1czoibGl2ZSJ9XSk6bi5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKGksZnVuY3Rpb24ocil7MjAwPT09ci5ib2R5LmNvZGU/KGwubG9nKCJSZXBseSBsb2c6ICIsci5ib2R5LnZhbHVlKSx0KHIuYm9keS52YWx1ZSkpOihsLndhcm4oIltEaXNjb3ZlcnkuZGlzY292ZXJEYXRhT2JqZWN0c1BlclVzZXJQcm9maWxlRGF0YV0gRXJyb3IgUmVwbHkgZm9yICIrZSsiIFJlYXNvbjogIixyLmJvZHkuZGVzY3JpcHRpb24pLHQoW10pKX0pfSl9fSx7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RzUGVyVXNlclByb2ZpbGVEYXRhRE8iLHZhbHVlOmZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10aGlzLGk9YXJndW1lbnRzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKGUsdCl7bi5kaXNjb3ZlckRhdGFPYmplY3RzUGVyVXNlclByb2ZpbGVEYXRhLmFwcGx5KG4saSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZShuLl9jb252ZXJ0VG9EaXNjb3ZlcmVkT2JqZWN0KHQpKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0aWVzUGVyR1VJRCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMsaT1bXSxzPXt0eXBlOiJyZWFkIixmcm9tOm4uZGlzY292ZXJ5VVJMLHRvOm4ucnVudGltZVVSTCsiL2Rpc2NvdmVyeS8iLGJvZHk6e3Jlc291cmNlOiIvaHlwZXJ0eS9ndWlkLyIrZX19O3JldHVybih0fHxyKSYmKHMuYm9keS5jcml0ZXJpYT17cmVzb3VyY2VzOnIsZGF0YVNjaGVtZXM6dH0pLG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtuLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UocyxmdW5jdGlvbihvKXsyMDA9PT1vLmJvZHkuY29kZT8oby5ib2R5LnZhbHVlLm1hcChmdW5jdGlvbihlKXtlLmh5cGVydHlJRCE9bi5kaXNjb3ZlcnlVUkwmJmkucHVzaChlKX0pLDA9PT1pLmxlbmd0aD9yKCJObyBIeXBlcnR5IHdhcyBmb3VuZCIpOihsLmxvZygiUmVwbHkgbG9nOiAiLGkpLHQoaSkpKToobC53YXJuKCJbRGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0aWVzUGVyR1VJRF0gRXJyb3IgUmVwbHkgZm9yICIrZSsiIFJlYXNvbjogIixvLmJvZHkuZGVzY3JpcHRpb24pLHQoW10pKX0pfSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydGllc1BlckdVSURETyIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMsaT1hcmd1bWVudHM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24oZSx0KXtuLmRpc2NvdmVySHlwZXJ0aWVzUGVyR1VJRC5hcHBseShuLGkpLnRoZW4oZnVuY3Rpb24odCl7ZShuLl9jb252ZXJ0VG9EaXNjb3ZlcmVkT2JqZWN0KHQpKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfSl9KX19LHtrZXk6ImRpc2NvdmVyRGF0YU9iamVjdHNQZXJHVUlEIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49dGhpcyxpPXt0eXBlOiJyZWFkIixmcm9tOm4uZGlzY292ZXJ5VVJMLHRvOm4ucnVudGltZVVSTCsiL2Rpc2NvdmVyeS8iLGJvZHk6e3Jlc291cmNlOiIvZGF0YU9iamVjdC9ndWlkLyIrZX19O3JldHVybih0fHxyKSYmKGkuYm9keS5jcml0ZXJpYT17cmVzb3VyY2VzOnIsZGF0YVNjaGVtZXM6dH0pLG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtuLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UoaSxmdW5jdGlvbihyKXsyMDA9PT1yLmJvZHkuY29kZT8obC5sb2coIlJlcGx5IGxvZzogIixyLmJvZHkudmFsdWUpLHQoci5ib2R5LnZhbHVlKSk6KGwud2FybigiW0Rpc2NvdmVyeS5kaXNjb3ZlckRhdGFPYmplY3RzUGVyR1VJRF0gRXJyb3IgUmVwbHkgZm9yICIrZSsiIFJlYXNvbjogIixyLmJvZHkuZGVzY3JpcHRpb24pLHQoW10pKX0pfSl9fSx7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RzUGVyR1VJRERPIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49dGhpcyxpPWFyZ3VtZW50cztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihlLHQpe24uZGlzY292ZXJEYXRhT2JqZWN0c1BlckdVSUQuYXBwbHkobixpKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlKG4uX2NvbnZlcnRUb0Rpc2NvdmVyZWRPYmplY3QodCkpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSl9KX0pfX0se2tleToiZGlzY292ZXJIeXBlcnRpZXMiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBpLHM9dGhpcyxhPVtdO2k9bnx8cy5kb21haW47dmFyIHU9e3R5cGU6InJlYWQiLGZyb206cy5kaXNjb3ZlcnlVUkwsdG86cy5ydW50aW1lVVJMKyIvZGlzY292ZXJ5LyIsYm9keTp7cmVzb3VyY2U6Ii9oeXBlcnR5L3VzZXIvIitlfX07cmV0dXJuIHUuYm9keS5jcml0ZXJpYT10fHxyP3tyZXNvdXJjZXM6cixkYXRhU2NoZW1lczp0LGRvbWFpbjppfTp7ZG9tYWluOml9LG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtzLl9pc0xlZ2FjeVVzZXIoZSk/dChbe2h5cGVydHlJRDplLHN0YXR1czoibGl2ZSJ9XSk6cy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKHUsZnVuY3Rpb24ocil7MjAwPT09ci5ib2R5LmNvZGV8fDUwMD09PXIuYm9keS5jb2RlPyhyLmJvZHkudmFsdWUubWFwKGZ1bmN0aW9uKGUpe2UuaHlwZXJ0eUlEIT1zLmRpc2NvdmVyeVVSTCYmYS5wdXNoKGUpfSksbC5sb2coIltEaXNjb3ZlcnkuZGlzY292ZXJIeXBlcnRpZXNdIFJlcGx5IDogIixhKSx0KGEpKToobC53YXJuKCJbRGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0aWVzXSBFcnJvciBSZXBseSBmb3IgIitlKyIgUmVhc29uOiAiLHIuYm9keS5kZXNjcmlwdGlvbiksdChhKSl9KX0pfX0se2tleToiZGlzY292ZXJIeXBlcnRpZXNETyIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGk9dGhpcyxzPWFyZ3VtZW50cztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihlLHQpe2kuZGlzY292ZXJIeXBlcnRpZXMuYXBwbHkoaSxzKS50aGVuKGZ1bmN0aW9uKHQpe2UoaS5fY29udmVydFRvRGlzY292ZXJlZE9iamVjdCh0KSl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gdChlKX0pfSl9fSx7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RzIix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgaSxzPXRoaXM7aT1ufHxzLmRvbWFpbjt2YXIgYT17dHlwZToicmVhZCIsZnJvbTpzLmRpc2NvdmVyeVVSTCx0bzpzLnJ1bnRpbWVVUkwrIi9kaXNjb3ZlcnkvIixib2R5OntyZXNvdXJjZToiL2RhdGFPYmplY3QvdXNlci8iK2V9fTtyZXR1cm4gYS5ib2R5LmNyaXRlcmlhPXR8fHI/e3Jlc291cmNlczpyLGRhdGFTY2hlbWVzOnQsZG9tYWluOml9Ontkb21haW46aX0sbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe3MubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShhLGZ1bmN0aW9uKHIpezIwMD09PXIuYm9keS5jb2RlPyhsLmxvZygiUmVwbHkgVmFsdWUgTG9nOiAiLHIuYm9keS52YWx1ZSksdChyLmJvZHkudmFsdWUpKToobC53YXJuKCJbRGlzY292ZXJ5LmRpc2NvdmVyRGF0YU9iamVjdHNdIEVycm9yIFJlcGx5IGZvciAiK2UrIiBSZWFzb246ICIsci5ib2R5LmRlc2NyaXB0aW9uKSx0KFtdKSl9KX0pfX0se2tleToiZGlzY292ZXJEYXRhT2JqZWN0c0RPIix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgaT10aGlzLHM9YXJndW1lbnRzO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKGUsdCl7aS5kaXNjb3ZlckRhdGFPYmplY3RzLmFwcGx5KGkscykudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZShpLl9jb252ZXJ0VG9EaXNjb3ZlcmVkT2JqZWN0KHQpKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfSl9KX19LHtrZXk6ImRpc2NvdmVySHlwZXJ0eVBlclVSTCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcixuPXRoaXM7cj10fHxuLmRvbWFpbjt2YXIgaT17dHlwZToicmVhZCIsZnJvbTpuLmRpc2NvdmVyeVVSTCx0bzpuLnJ1bnRpbWVVUkwrIi9kaXNjb3ZlcnkvIixib2R5OntyZXNvdXJjZToiL2h5cGVydHkvdXJsLyIrZSxjcml0ZXJpYTp7ZG9tYWluOnJ9fX07cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtuLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UoaSxmdW5jdGlvbihyKXsyMDA9PT1yLmJvZHkuY29kZT8obC5sb2coIlJlcGx5IFZhbHVlIExvZzogIixyLmJvZHkudmFsdWUpLHQoci5ib2R5LnZhbHVlKSk6KGwud2FybigiW0Rpc2NvdmVyeS5kaXNjb3Zlckh5cGVydHlQZXJVUkxdIEVycm9yIFJlcGx5IGZvciAiK2UrIiBSZWFzb246ICIsci5ib2R5LmRlc2NyaXB0aW9uKSx0KFtdKSl9KX0pfX0se2tleToiZGlzY292ZXJIeXBlcnR5UGVyVVJMRE8iLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPWFyZ3VtZW50cztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihlLHQpe3IuZGlzY292ZXJIeXBlcnR5UGVyVVJMLmFwcGx5KHIsbikudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZShuZXcgYy5kZWZhdWx0KHQsci5ydW50aW1lVVJMLHIuZGlzY292ZXJ5VVJMLHIubWVzc2FnZUJ1cyxyKSl9KS5jYXRjaChmdW5jdGlvbihlKXtyZXR1cm4gdChlKX0pfSl9fSx7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RQZXJVUkwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHIsbj10aGlzO3I9dHx8bi5kb21haW47dmFyIGk9e3R5cGU6InJlYWQiLGZyb206bi5kaXNjb3ZlcnlVUkwsdG86bi5ydW50aW1lVVJMKyIvZGlzY292ZXJ5LyIsYm9keTp7cmVzb3VyY2U6Ii9kYXRhT2JqZWN0L3VybC8iK2UsY3JpdGVyaWE6e2RvbWFpbjpyfX19O3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHQscil7bi5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKGksZnVuY3Rpb24ocil7MjAwPT09ci5ib2R5LmNvZGU/KGwubG9nKCJSZXBseSBWYWx1ZSBMb2c6ICIsci5ib2R5LnZhbHVlKSx0KHIuYm9keS52YWx1ZSkpOihsLndhcm4oIltEaXNjb3ZlcnkuZGlzY292ZXJEYXRhT2JqZWN0UGVyVVJMXSBFcnJvciBSZXBseSBmb3IgIitlKyIgUmVhc29uOiAiLHIuYm9keS5kZXNjcmlwdGlvbiksdChbXSkpfSl9KX19LHtrZXk6ImRpc2NvdmVyRGF0YU9iamVjdFBlclVSTERPIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXMsbj1hcmd1bWVudHM7cmV0dXJuIG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24oZSx0KXtyLmRpc2NvdmVyRGF0YU9iamVjdFBlclVSTC5hcHBseShyLG4pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGUobmV3IGMuZGVmYXVsdCh0LHIucnVudGltZVVSTCxyLmRpc2NvdmVyeVVSTCxyLm1lc3NhZ2VCdXMscikpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSl9KX0pfX0se2tleToiZGlzY292ZXJEYXRhT2JqZWN0c1Blck5hbWUiLHZhbHVlOmZ1bmN0aW9uKGUsdCxyLG4pe3ZhciBpLHM9dGhpcztpPW58fHMuZG9tYWluO3ZhciBhPXt0eXBlOiJyZWFkIixmcm9tOnMuZGlzY292ZXJ5VVJMLHRvOnMucnVudGltZVVSTCsiL2Rpc2NvdmVyeS8iLGJvZHk6e3Jlc291cmNlOiIvZGF0YU9iamVjdC9uYW1lLyIrZX19O3JldHVybiBhLmJvZHkuY3JpdGVyaWE9dHx8cj97cmVzb3VyY2VzOnIsZGF0YVNjaGVtZXM6dCxkb21haW46aX06e2RvbWFpbjppfSxuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHQscil7cy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKGEsZnVuY3Rpb24ocil7MjAwPT09ci5ib2R5LmNvZGU/KGwubG9nKCJSZXBseSBWYWx1ZSBMb2c6ICIsci5ib2R5LnZhbHVlKSx0KHIuYm9keS52YWx1ZSkpOihsLndhcm4oIltEaXNjb3ZlcnkuZGlzY292ZXJEYXRhT2JqZWN0c1Blck5hbWVdIEVycm9yIFJlcGx5IGZvciAiK2UrIiBSZWFzb246ICIsci5ib2R5LmRlc2NyaXB0aW9uKSx0KFtdKSl9KX0pfX0se2tleToiZGlzY292ZXJEYXRhT2JqZWN0c1Blck5hbWVETyIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGk9dGhpcyxzPWFyZ3VtZW50cztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihlLHQpe2kuZGlzY292ZXJEYXRhT2JqZWN0c1Blck5hbWUuYXBwbHkoaSxzKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlKGkuX2NvbnZlcnRUb0Rpc2NvdmVyZWRPYmplY3QodCkpfSkuY2F0Y2goZnVuY3Rpb24oZSl7cmV0dXJuIHQoZSl9KX0pfX0se2tleToiZGlzY292ZXJEYXRhT2JqZWN0c1BlclJlcG9ydGVyIix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgaSxzPXRoaXM7aT1ufHxzLmRvbWFpbjt2YXIgYT17dHlwZToicmVhZCIsZnJvbTpzLmRpc2NvdmVyeVVSTCx0bzpzLnJ1bnRpbWVVUkwrIi9kaXNjb3ZlcnkvIixib2R5OntyZXNvdXJjZToiL2RhdGFPYmplY3QvcmVwb3J0ZXIvIitlfX07cmV0dXJuIGEuYm9keS5jcml0ZXJpYT10fHxyP3tyZXNvdXJjZXM6cixkYXRhU2NoZW1lczp0LGRvbWFpbjppfTp7ZG9tYWluOml9LG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24odCxyKXtzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UoYSxmdW5jdGlvbihyKXsyMDA9PT1yLmJvZHkuY29kZT8obC5sb2coIlJlcGx5IFZhbHVlIExvZzogIixyLmJvZHkudmFsdWUpLHQoci5ib2R5LnZhbHVlKSk6KGwud2FybigiW0Rpc2NvdmVyeS5kaXNjb3ZlckRhdGFPYmplY3RzUGVyTmFtZV0gRXJyb3IgUmVwbHkgZm9yICIrZSsiIFJlYXNvbjogIixyLmJvZHkuZGVzY3JpcHRpb24pLHQoW10pKX0pfSl9fSx7a2V5OiJkaXNjb3ZlckRhdGFPYmplY3RzUGVyUmVwb3J0ZXJETyIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGk9dGhpcyxzPWFyZ3VtZW50cztyZXR1cm4gbmV3IG8uZGVmYXVsdChmdW5jdGlvbihlLHQpe2kuZGlzY292ZXJEYXRhT2JqZWN0c1BlclJlcG9ydGVyLmFwcGx5KGkscykudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZShpLl9jb252ZXJ0VG9EaXNjb3ZlcmVkT2JqZWN0KHQpKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JldHVybiB0KGUpfSl9KX19LHtrZXk6Il9jb252ZXJ0VG9EaXNjb3ZlcmVkT2JqZWN0Iix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBlLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gbmV3IGMuZGVmYXVsdChlLHQucnVudGltZVVSTCx0LmRpc2NvdmVyeVVSTCx0Lm1lc3NhZ2VCdXMsdCl9KX19LHtrZXk6ImRpc2NvdmVyRGF0YU9iamVjdCIsdmFsdWU6ZnVuY3Rpb24oZSx0LHIsbil7dmFyIGkscz10aGlzO2k9bnx8cy5kb21haW47dmFyIGE9e3R5cGU6InJlYWQiLGZyb206cy5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIraSxib2R5OntyZXNvdXJjZTplLGNyaXRlcmlhOntyZXNvdXJjZXM6cixkYXRhU2NoZW1lczp0fX19O3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKHQscil7cy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKGEsZnVuY3Rpb24ocil7aWYobC5sb2coIltEaXNjb3ZlcnldIixyKSxyLmJvZHkuY29kZT4yOTkpcmV0dXJuIGwud2FybigiW0Rpc2NvdmVyeS5kaXNjb3ZlckRhdGFPYmplY3RdIEVycm9yIFJlcGx5IGZvciAiK2UrIiBSZWFzb246ICIsci5ib2R5LmRlc2NyaXB0aW9uKSx0KFtdKTt2YXIgbj1yLmJvZHkudmFsdWU7dChufHxbXSl9KX0pfX0se2tleToiZGlzY292ZXJIeXBlcnR5Iix2YWx1ZTpmdW5jdGlvbihlLHQscixuKXt2YXIgaSxzPXRoaXMsYT0oMCx1LmNvbnZlcnRUb1VzZXJVUkwpKGUpO3JldHVybiBpPW58fHMuZG9tYWluLG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obyx1KXtpZihsLmxvZygiW0Rpc2NvdmVyeS5kaXNjb3Zlckh5cGVydHldIEFDVElWRSBET01BSU4gLT4gIixpLCJ1c2VyLT4iLGUsInNjaGVtYS0+Iix0LCJyZXNvdXJjZXMtPiIsciwiZG9tYWluLT4iLG4pLGUuaW5jbHVkZXMoIjoiKSYmIWUuaW5jbHVkZXMoInVzZXI6Ly8iKSlyZXR1cm4gbC5sb2coIltEaXNjb3ZlcnkuZGlzY292ZXJIeXBlcnR5XSAiK2UrIiBpcyBsZWdhY3kgZG9tYWluIiksbyh7dXNlcklEOmUsaHlwZXJ0eUlEOmUsc2NoZW1hOnQscmVzb3VyY2VzOnJ9KTt2YXIgYz17dHlwZToicmVhZCIsZnJvbTpzLmRpc2NvdmVyeVVSTCx0bzoiZG9tYWluOi8vcmVnaXN0cnkuIitpLGJvZHk6e3Jlc291cmNlOmEsY3JpdGVyaWE6e3Jlc291cmNlczpyLGRhdGFTY2hlbWVzOnR9fX07bC5pbmZvKCJbRGlzY292ZXJ5XSBtc2cgdG8gc2VuZC0+IixjKSxzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UoYyxmdW5jdGlvbihlKXtsLmluZm8oIltEaXNjb3ZlcnldIE9OIGRpc2NvdmVySHlwZXJ0eS0+IixlKTt2YXIgdD1lLmJvZHkudmFsdWU7dD9vKHQpOnUoIk5vIEh5cGVydHkgd2FzIGZvdW5kIil9KX0pfX0se2tleToiZGlzY292ZXJIeXBlcnR5UGVyVXNlciIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLG49dm9pZCAwO3JldHVybiBuZXcgby5kZWZhdWx0KGZ1bmN0aW9uKG8saSl7aWYoZS5pbmNsdWRlcygiOiIpJiYhZS5pbmNsdWRlcygidXNlcjovLyIpKXJldHVybiBsLmxvZygiW0Rpc2NvdmVyeS5kaXNjb3Zlckh5cGVydHldICIrZSsiaXMgbGVnYWN5IGRvbWFpbiIpLG8oe2lkOmUsaHlwZXJ0eVVSTDplLGRlc2NyaXB0b3I6InVua25vd24ifSk7bj10fHxyLmRvbWFpbjt2YXIgcz0idXNlcjovLyIrZS5zdWJzdHJpbmcoZS5pbmRleE9mKCJAIikrMSxlLmxlbmd0aCkrIi8iK2Uuc3Vic3RyaW5nKDAsZS5pbmRleE9mKCJAIikpLGE9e3R5cGU6InJlYWQiLGZyb206ci5kaXNjb3ZlcnlVUkwsdG86ImRvbWFpbjovL3JlZ2lzdHJ5LiIrbixib2R5OntyZXNvdXJjZTpzfX07bC5pbmZvKCJbRGlzY292ZXJ5XSBNZXNzYWdlOiAiLGEsbixzKSxyLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2UoYSxmdW5jdGlvbih0KXtsLmluZm8oIltEaXNjb3ZlcnldIG1lc3NhZ2UgcmVwbHkiLHQpO3ZhciByPXZvaWQgMCxuPXZvaWQgMCxzPXZvaWQgMCxhPXQuYm9keS52YWx1ZTtmb3IociBpbiBhKWlmKHZvaWQgMCE9PWFbcl0ubGFzdE1vZGlmaWVkKWlmKHZvaWQgMD09PW4pbj1uZXcgRGF0ZShhW3JdLmxhc3RNb2RpZmllZCkscz1yO2Vsc2V7dmFyIHU9bmV3IERhdGUoYVtyXS5sYXN0TW9kaWZpZWQpO24uZ2V0VGltZSgpPHUuZ2V0VGltZSgpJiYobj11LHM9cil9bC5pbmZvKCJbRGlzY292ZXJ5XSBMYXN0IEh5cGVydHk6ICIscyxuKTt2YXIgYz1zO2lmKHZvaWQgMD09PWMpcmV0dXJuIGkoIlVzZXIgSHlwZXJ0eSBub3QgZm91bmQiKTt2YXIgZD17aWQ6ZSxkZXNjcmlwdG9yOmFbY10uZGVzY3JpcHRvcixoeXBlcnR5VVJMOmN9O2wuaW5mbygiW0Rpc2NvdmVyeV0gPT09PiBoeXBlcnR5RGlzY292ZXJ5IG1lc3NhZ2VCdW5kbGU6ICIsZCksbyhkKX0pfSl9fSx7a2V5OiJkaXNjb3Zlckh5cGVydGllc1BlclVzZXIiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPXZvaWQgMDtyZXR1cm4gbC5sb2coIm9uIEZ1bmN0aW9uLT4iLGUpLG5ldyBvLmRlZmF1bHQoZnVuY3Rpb24obyxpKXtpZihlLmluY2x1ZGVzKCI6IikmJiFlLmluY2x1ZGVzKCJ1c2VyOi8vIikpe2wubG9nKCJbRGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0eV0gaXMgbGVnYWN5IGRvbWFpbiIpO3ZhciBzPXt1c2VySUQ6ZSxoeXBlcnR5SUQ6ZSxzY2hlbWE6c2NoZW1hLHJlc291cmNlczpyZXNvdXJjZXN9O3JldHVybiBvKHMpfW49dHx8ci5kb21haW47dmFyIGE9InVzZXI6Ly8iK2Uuc3Vic3RyaW5nKGUuaW5kZXhPZigiQCIpKzEsZS5sZW5ndGgpKyIvIitlLnN1YnN0cmluZygwLGUuaW5kZXhPZigiQCIpKSx1PXt0eXBlOiJyZWFkIixmcm9tOnIuZGlzY292ZXJ5VVJMLHRvOiJkb21haW46Ly9yZWdpc3RyeS4iK24sYm9keTp7cmVzb3VyY2U6YX19O2wubG9nKCJbRGlzY292ZXJ5XSBNZXNzYWdlIGRpc2NvdmVySHlwZXJ0aWVzUGVyVXNlcjogIix1LG4sYSksci5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKHUsZnVuY3Rpb24oZSl7bC5pbmZvKCJbRGlzY292ZXJ5XSBkaXNjb3Zlckh5cGVydGllc1BlclVzZXIgcmVwbHkiLGUpO3ZhciB0PWUuYm9keS52YWx1ZTtpZighdClyZXR1cm4gaSgiVXNlciBIeXBlcnR5IG5vdCBmb3VuZCIpO28odCl9KX0pfX0se2tleToicmVzdW1lRGlzY292ZXJpZXMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gbC5sb2coIltEaXNjb3ZlcnldIHJlc3VtZURpc2NvdmVyaWVzIiksbmV3IG8uZGVmYXVsdChmdW5jdGlvbih0LHIpe3ZhciBuPXt0eXBlOiJyZWFkIixmcm9tOmUuZGlzY292ZXJ5VVJMLHRvOmUucnVudGltZVVSTCsiL3N1YnNjcmlwdGlvbnMiLGJvZHk6e3Jlc291cmNlOmUuZGlzY292ZXJ5VVJMfX07ZS5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG4sZnVuY3Rpb24ocil7bC5sb2coIltEaXNjb3ZlcnkucmVzdW1lRGlzY292ZXJpZXNdIHJlcGx5OiAiLHIpO3ZhciBuPVtdOzIwMD09PXIuYm9keS5jb2RlPyhyLmJvZHkudmFsdWUuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgcj10LnNwbGl0KCIvcmVnaXN0cmF0aW9uIilbMF07bC5sb2coIltEaXNjb3ZlcnkucmVzdW1lRGlzY292ZXJpZXNdIGFkZGluZyBsaXN0ZW5lciB0bzogIixyKSxyLmluY2x1ZGVzKCJoeXBlcnR5Oi8vIik/bi5wdXNoKGUuZGlzY292ZXJIeXBlcnR5UGVyVVJMRE8ocikpOm4ucHVzaChlLmRpc2NvdmVyRGF0YU9iamVjdFBlclVSTERPKHIpKX0pLG8uZGVmYXVsdC5hbGwobikudGhlbihmdW5jdGlvbihlKXt0KGUpfSkpOnQoW10pfSl9KX19XSksZX0oKTt0LmRlZmF1bHQ9ZCxlLmV4cG9ydHM9dC5kZWZhdWx0fSxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoMjUpKSxpPW4ocigzKSkscz1uKHIoMzMpKSxhPW4ocig1KSksdT1uKHIoMzQpKSxjPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSxyLG4sYSx1KXsoMCxpLmRlZmF1bHQpKHRoaXMsdCk7dmFyIGM9KDAscy5kZWZhdWx0KSh0aGlzLCh0Ll9fcHJvdG9fX3x8KDAsby5kZWZhdWx0KSh0KSkuY2FsbCh0aGlzLGUuaHlwZXJ0eUlEfHxlLnVybCxyLG4sYSkpO3JldHVybiBjLl9kYXRhPWUsYy5fZGlzY292ZXJ5PXUsY31yZXR1cm4oMCx1LmRlZmF1bHQpKHQsZSksKDAsYS5kZWZhdWx0KSh0LFt7a2V5OiJkYXRhIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YX19XSksKDAsYS5kZWZhdWx0KSh0LFt7a2V5OiJjaGVjayIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9e2JvZHk6e319O2UuX2Rpc2NvdmVyZWRPYmplY3RVUkwuc3RhcnRzV2l0aCgiaHlwZXJ0eTovLyIpP2UuX2Rpc2NvdmVyeS5kaXNjb3Zlckh5cGVydHlQZXJVUkwoZS5fZGlzY292ZXJlZE9iamVjdFVSTCkudGhlbihmdW5jdGlvbihyKXt0LmJvZHkuc3RhdHVzPXIuc3RhdHVzLGUuX3Byb2Nlc3NOb3RpZmljYXRpb24odCl9KTplLl9kaXNjb3ZlcnkuZGlzY292ZXJEYXRhT2JqZWN0c1BlclVSTChlLl9kaXNjb3ZlcmVkT2JqZWN0VVJMKS50aGVuKGZ1bmN0aW9uKHIpe3QuYm9keS5zdGF0dXM9ci5zdGF0dXMsZS5fcHJvY2Vzc05vdGlmaWNhdGlvbih0KX0pfX1dKSx0fShuKChyKDE5KSxyKDEzNCkpKS5kZWZhdWx0KTt0LmRlZmF1bHQ9YyxlLmV4cG9ydHM9dC5kZWZhdWx0fSwsLCxmdW5jdGlvbihlLHQscil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGUmJmUuX19lc01vZHVsZT9lOntkZWZhdWx0OmV9fU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1uKHIoMykpLGk9bihyKDUpKSxzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeygwLG8uZGVmYXVsdCkodGhpcyxlKX1yZXR1cm4oMCxpLmRlZmF1bHQpKGUsW3trZXk6ImFkZEV2ZW50TGlzdGVuZXIiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dGhpc1tlXT10fX0se2tleToidHJpZ2dlciIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt0aGlzW2VdJiZ0aGlzW2VdKHQpfX1dKSxlfSgpO3QuZGVmYXVsdD1zLGUuZXhwb3J0cz10LmRlZmF1bHR9LCwsLCwsLCwsLCwsLCwsLCwsLGZ1bmN0aW9uKGUsdCxyKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihlKXtyZXR1cm4gZSYmZS5fX2VzTW9kdWxlP2U6e2RlZmF1bHQ6ZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pLHQuQ29udGV4dFJlcG9ydGVyPXQuQ29udGV4dE9ic2VydmVyPXZvaWQgMDt2YXIgbz1uKHIoMTYzKSksaT1uKHIoMTY0KSk7dC5Db250ZXh0T2JzZXJ2ZXI9by5kZWZhdWx0LHQuQ29udGV4dFJlcG9ydGVyPWkuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDQyKSksaT1uKHIoMTgpKSxzPW4ocigyNSkpLGE9bihyKDMpKSx1PW4ocig1KSksYz1uKHIoMzMpKSxsPW4ocigzNCkpLGQ9bihyKDEzMSkpLGY9bihyKDEzOCkpLHA9cigxOSkseT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscixuLG8saSl7aWYoKDAsYS5kZWZhdWx0KSh0aGlzLHQpLCFlKXRocm93IG5ldyBFcnJvcigiVGhlIGh5cGVydHlVUkwgaXMgYSBuZWVkZWQgcGFyYW1ldGVyIik7aWYoIXIpdGhyb3cgbmV3IEVycm9yKCJUaGUgTWluaUJ1cyBpcyBhIG5lZWRlZCBwYXJhbWV0ZXIiKTtpZighbil0aHJvdyBuZXcgRXJyb3IoIlRoZSBjb25maWd1cmF0aW9uIGlzIGEgbmVlZGVkIHBhcmFtZXRlciAiKTt2YXIgdT0oMCxjLmRlZmF1bHQpKHRoaXMsKHQuX19wcm90b19ffHwoMCxzLmRlZmF1bHQpKHQpKS5jYWxsKHRoaXMpKSxsPXU7bC5fY29udGV4dFJlc291cmNlVHlwZXM9byxsLl91cmw9ZSxsLl9kaXNjb3ZlclVzZXJzUHJvbWlzZXM9e30sbC5fb2JzZXJ2ZVByb21pc2VzPXt9LGNvbnNvbGUubG9nKCJbQ29udGV4dE9ic2VydmVyXSBzdGFydGVkIHdpdGggaHlwZXJ0eVVSTC0+IixlKSxsLl9kb21haW49KDAscC5kaXZpZGVVUkwpKG4ucnVudGltZVVSTCkuZG9tYWluLGwuX29iamVjdERlc2NVUkw9Imh5cGVydHktY2F0YWxvZ3VlOi8vY2F0YWxvZ3VlLiIrbC5fZG9tYWluKyIvLndlbGwta25vd24vZGF0YXNjaGVtYS9Db250ZXh0IixsLl91c2VyczJvYnNlcnZlPVtdLGwuX29ic2VydmVycz17fSx1Ll9zeW5jaGVyPWl8fG5ldyBkLmRlZmF1bHQoZSxyLG4pO3ZhciB5PW5ldyBmLmRlZmF1bHQoZSxuLnJ1bnRpbWVVUkwscik7cmV0dXJuIGwuX2Rpc2NvdmVyeT15LGwuX2Rpc2NvdmVyaWVzPXt9LHdpbmRvdy5kaXNjb3Zlcnk9bC5fZGlzY292ZXJ5LHV9cmV0dXJuKDAsbC5kZWZhdWx0KSh0LGUpLCgwLHUuZGVmYXVsdCkodCxbe2tleToic3RhcnQiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcztyZXR1cm4gY29uc29sZS5sb2coIltDb250ZXh0T2JzZXJ2ZXIuc3RhcnRdICIpLG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24obixpKXtyLl9zeW5jaGVyLnJlc3VtZU9ic2VydmVycyh7c3RvcmU6ITB9KS50aGVuKGZ1bmN0aW9uKGkpe3ZhciBzPSgwLG8uZGVmYXVsdCkoaSk7cy5sZW5ndGg+MD8oY29uc29sZS5sb2coIltDb250ZXh0T2JzZXJ2ZXIuc3RhcnRdIHJlc3VtaW5nOiAiLGkpLHIuX29ic2VydmVycz1pLG4oaSkscy5mb3JFYWNoKGZ1bmN0aW9uKHIpe3ZhciBuPWlbcl07ZSYmKGNvbnRleHQuZGF0YS52YWx1ZXM9ZSksbi5zeW5jKCksdCYmbi5vbkRpc2Nvbm5lY3RlZCh0KX0pKTpuKCExKX0pLmNhdGNoKGZ1bmN0aW9uKGUpe2NvbnNvbGUuaW5mbygiW0NvbnRleHRPYnNlcnZlcl0gUmVzdW1lIE9ic2VydmVyIGZhaWxlZCB8ICIsZSksbighMSl9KX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JlamVjdCgiW0NvbnRleHRPYnNlcnZlcl0gU3RhcnQgZmFpbGVkIHwgIixlKX0pfX0se2tleToicmVzdW1lRGlzY292ZXJpZXMiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbih0LHIpe2UuX2Rpc2NvdmVyeS5yZXN1bWVEaXNjb3ZlcmllcygpLnRoZW4oZnVuY3Rpb24ocil7Y29uc29sZS5sb2coIltDb250ZXh0T2JzZXJ2ZXIuX3Jlc3VtZURpc2NvdmVyaWVzXSBmb3VuZDogIixyKSxyLmZvckVhY2goZnVuY3Rpb24ocil7ci5kYXRhLnJlc291cmNlcyYmci5kYXRhLnJlc291cmNlc1swXT09PWUuX2NvbnRleHRSZXNvdXJjZVR5cGVzWzBdJiYoY29uc29sZS5sb2coIltDb250ZXh0T2JzZXJ2ZXIuX3Jlc3VtZURpc2NvdmVyaWVzXSByZXN1bWluZzogIixyKSwibGl2ZSI9PT1yLmRhdGEuc3RhdHVzPyh0KFtyLmRhdGFdKSxyLnVuc3Vic2NyaWJlTGl2ZShlLl91cmwpKTpyLm9uTGl2ZShlLl91cmwsZnVuY3Rpb24oKXtjb25zb2xlLmxvZygiW0NvbnRleHRPYnNlcnZlci5fcmVzdW1lRGlzY292ZXJpZXNdIGRpc2Nvbm5lY3RlZCBIeXBlcnR5IGlzIGJhY2sgdG8gbGl2ZSIsciksdChbci5kYXRhXSksci51bnN1YnNjcmliZUxpdmUoZS5fdXJsKX0pKX0pfSl9KS5jYXRjaChmdW5jdGlvbihlKXtyZWplY3QoIltDb250ZXh0T2JzZXJ2ZXJdIHJlc3VtZURpc2NvdmVyaWVzIGZhaWxlZCB8ICIsZSl9KX19LHtrZXk6Im9uUmVzdW1lT2JzZXJ2ZXIiLHZhbHVlOmZ1bmN0aW9uKGUpe3RoaXMuX29uUmVzdW1lT2JzZXJ2ZXI9ZX19LHtrZXk6ImRpc2NvdmVyVXNlcnMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIHI9dGhpcyxuPWUrIkAiK3Q7cmV0dXJuIHIuX2Rpc2NvdmVyVXNlcnNQcm9taXNlc1tuXXx8KHIuX2Rpc2NvdmVyVXNlcnNQcm9taXNlc1tuXT1uZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKG4sbyl7ci5fZGlzY292ZXJ5LmRpc2NvdmVySHlwZXJ0aWVzRE8oZSxbImNvbnRleHQiXSxyLl9jb250ZXh0UmVzb3VyY2VUeXBlcyx0KS50aGVuKGZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKCJbQ29udGV4dE9ic2VydmVyLmRpc2NvdmVyVXNlcnNdIGRpc2NvdmVyeSByZXN1bHQtPiIsZSk7dmFyIHQ9W10sbz1bXTtlLmZvckVhY2goZnVuY3Rpb24oZSl7ci5fZGlzY292ZXJpZXNbZS5kYXRhLmh5cGVydHlJRF09ZSwibGl2ZSI9PT1lLmRhdGEuc3RhdHVzP3QucHVzaChlLmRhdGEpOm8ucHVzaChlKX0pLHQubGVuZ3RoPjA/KGNvbnNvbGUubG9nKCJbQ29udGV4dE9ic2VydmVyLmRpc2NvdmVyVXNlcnNdIHJldHVybmluZyBkaXNjb3ZlcmVkIGh5cGVydGllcyBkYXRhLT4iLHQpLG4odCkpOm8ubGVuZ3RoPjAmJihjb25zb2xlLmxvZygiW0NvbnRleHRPYnNlcnZlci5kaXNjb3ZlclVzZXJzXSBkaXNjb25uZWN0ZWQgSHlwZXJ0aWVzICIsbyksb1swXS5vbkxpdmUoci5fdXJsLGZ1bmN0aW9uKCl7Y29uc29sZS5sb2coIltDb250ZXh0T2JzZXJ2ZXIuZGlzY292ZXJVc2Vyc10gZGlzY29ubmVjdGVkIEh5cGVydHkgaXMgYmFjayB0byBsaXZlIixvWzBdKSx0LnB1c2gob1swXS5kYXRhKSxuKHQpLG9bMF0udW5zdWJzY3JpYmVMaXZlKHIuX3VybCl9KSl9KX0pKSxyLl9kaXNjb3ZlclVzZXJzUHJvbWlzZXNbbl19fSx7a2V5OiJvYnNlcnZlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiB0Ll9vYnNlcnZlUHJvbWlzZXNbZS5oeXBlcnR5SURdfHwodC5fb2JzZXJ2ZVByb21pc2VzW2UuaHlwZXJ0eUlEXT1uZXcgaS5kZWZhdWx0KGZ1bmN0aW9uKHIsbil7dC5fdXNlcnMyb2JzZXJ2ZS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2lmKHQuX3JlcG9ydGVyPT09ZS5oeXBlcnR5SUQpcmV0dXJuIHIodCl9KSx0Ll9kaXNjb3ZlcnkuZGlzY292ZXJEYXRhT2JqZWN0c1BlclJlcG9ydGVyKGUuaHlwZXJ0eUlELFsiY29udGV4dCJdLHQuX2NvbnRleHRSZXNvdXJjZVR5cGVzLHQuX2RvbWFpbikudGhlbihmdW5jdGlvbihvKXtjb25zb2xlLmxvZygiW0NvbnRleHRPYnNlcnZlci5kaXNjb3ZlckF2YWlsYWJpbGl0eV0gZGlzY292ZXJlZCBjb250ZXh0IG9iamVjdHMgIixvKTt2YXIgaT0wLHM9dm9pZCAwO28uZm9yRWFjaChmdW5jdGlvbihlKXtlLmhhc093blByb3BlcnR5KCJsYXN0TW9kaWZpZWQiKSYmZS5oYXNPd25Qcm9wZXJ0eSgidXJsIikmJkRhdGUucGFyc2UoZS5sYXN0TW9kaWZpZWQpPmkmJihpPWUubGFzdE1vZGlmaWVkLHM9ZS51cmwpfSksMCE9aSYmcz9yKHQuX3N1YnNjcmliZUNvbnRleHQoZSxzKSk6bigiW0NvbnRleHRPYnNlcnZlci5vYnNlcnZlXSBkaXNjb3ZlcmVkIERhdGFPYmplY3MgYXJlIGludmFsaWQiLG8pfSl9KSksdC5fb2JzZXJ2ZVByb21pc2VzW2UuaHlwZXJ0eUlEXX19LHtrZXk6Il9zdWJzY3JpYmVDb250ZXh0Iix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24oZSxuKXtyLl91c2VyczJvYnNlcnZlLmZvckVhY2goZnVuY3Rpb24ocil7aWYoci51cmw9PT10KXJldHVybiBlKHIpfSksci5fc3luY2hlci5zdWJzY3JpYmUoci5fb2JqZWN0RGVzY1VSTCx0LG51bGwsbnVsbCxudWxsLCExKS50aGVuKGZ1bmN0aW9uKHQpe2NvbnNvbGUubG9nKCJbQ29udGV4dE9ic2VydmVyLl9zdWJzY3JpYmVDb250ZXh0XSBvYnNlcnZlciBvYmplY3QiLHQpLHIuX3VzZXJzMm9ic2VydmUucHVzaCh0KSx0Lm9uRGlzY29ubmVjdGVkKGZ1bmN0aW9uKCl7Y29uc29sZS5sb2coIltDb250ZXh0T2JzZXJ2ZXIub25EaXNjb25uZWN0ZWRdOiAiLHQpLHQuZGF0YS52YWx1ZXNbMF0udmFsdWU9InVuYXZhaWxhYmxlIix0LnN5bmMoKX0pLGUodCl9KX0pfX0se2tleToiX2Rpc2NvdmVyQW5kU3Vic2NyaWJlTGVnYWN5VXNlcnMiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24ocixuKXt0Ll9kaXNjb3ZlcnkuZGlzY292ZXJEYXRhT2JqZWN0c1Blck5hbWUoZSkudGhlbihmdW5jdGlvbihlKXtjb25zb2xlLmxvZygiW0NvbnRleHRPYnNlcnZlci5fZGlzY292ZXJBbmRTdWJzY3JpYmVMZWdhY3lVc2Vyc10gQWxsIERhdGFPYmplY3RzIFJlc3VsdCIsZSksZS5mb3JFYWNoKGZ1bmN0aW9uKGUpeyJsaXZlIj09PWUuc3RhdHVzJiYoY29uc29sZS5sb2coIkxpdmUgb2JqIixlKSxlLmh5cGVydHlJRHx8KGUuaHlwZXJ0eUlEPWUucmVwb3J0ZXIpLHQuX3N1YnNjcmliZUNvbnRleHQoZS5zY2hlbWEsZS51cmwpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIGNvbnNvbGUubG9nKCJbQ29udGV4dE9ic2VydmVyLl9kaXNjb3ZlckFuZFN1YnNjcmliZUxlZ2FjeVVzZXJzXSBfc3Vic2NyaWJlQ29udGV4dCIsZSkscihlKX0pKX0pfSkuY2F0Y2goZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coImVycm9yICIsZSl9KX0pfX0se2tleToidW5vYnNlcnZlIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX3VzZXJzMm9ic2VydmUuZm9yRWFjaChmdW5jdGlvbihyLG4pe3IudXJsPT09ZSYmKHIudW5zdWJzY3JpYmUoKSx0Ll91c2VyczJvYnNlcnZlLnNwbGljZShuLDEpKX0pfX1dKSx0fShuKHIoMTQzKSkuZGVmYXVsdCk7dC5kZWZhdWx0PXksZS5leHBvcnRzPXQuZGVmYXVsdH0sZnVuY3Rpb24oZSx0LHIpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKGUpe3JldHVybiBlJiZlLl9fZXNNb2R1bGU/ZTp7ZGVmYXVsdDplfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSk7dmFyIG89bihyKDQyKSksaT1uKHIoMTgpKSxzPW4ocigyNSkpLGE9bihyKDMpKSx1PW4ocig1KSksYz1uKHIoMzMpKSxsPW4ocigzNCkpLGQ9bihyKDEzMSkpLGY9bihyKDE0MykpLHA9cigxOSkseT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KGUscixuLG8pe2lmKCgwLGEuZGVmYXVsdCkodGhpcyx0KSwhZSl0aHJvdyBuZXcgRXJyb3IoIlRoZSBoeXBlcnR5VVJMIGlzIGEgbmVlZGVkIHBhcmFtZXRlciIpO2lmKCFyKXRocm93IG5ldyBFcnJvcigiVGhlIE1pbmlCdXMgaXMgYSBuZWVkZWQgcGFyYW1ldGVyIik7aWYoIW4pdGhyb3cgbmV3IEVycm9yKCJUaGUgY29uZmlndXJhdGlvbiBpcyBhIG5lZWRlZCBwYXJhbWV0ZXIiKTt2YXIgaT0oMCxjLmRlZmF1bHQpKHRoaXMsKHQuX19wcm90b19ffHwoMCxzLmRlZmF1bHQpKHQpKS5jYWxsKHRoaXMsZSxyLG4pKTtyZXR1cm4gY29uc29sZS5pbmZvKCJbQ29udGV4dFJlcG9ydGVyXSBzdGFydGVkIHdpdGggdXJsOiAiLGUpLGkuc3luY2hlcj1vfHxuZXcgZC5kZWZhdWx0KGUscixuKSxpLmRvbWFpbj0oMCxwLmRpdmlkZVVSTCkobi5ydW50aW1lVVJMKS5kb21haW4saS5jb250ZXh0cz17fSxpLmNvbnRleHREZXNjVVJMPSJoeXBlcnR5LWNhdGFsb2d1ZTovL2NhdGFsb2d1ZS4iK2kuZG9tYWluKyIvLndlbGwta25vd24vZGF0YXNjaGVtYS9Db250ZXh0IixpLnN5bmNoZXIub25Ob3RpZmljYXRpb24oZnVuY3Rpb24oZSl7aS5vbk5vdGlmaWNhdGlvbihlKX0pLGkuc3luY2hlci5vbkNsb3NlKGZ1bmN0aW9uKGUpe2NvbnNvbGUubG9nKCJbQ29udGV4dFJlcG9ydGVyLm9uQ2xvc2VdIiksaS5zZXRTdGF0dXMoZS5pZCwidW5hdmFpbGFibGUiKSxlLmFjaygpfSksaX1yZXR1cm4oMCxsLmRlZmF1bHQpKHQsZSksKDAsdS5kZWZhdWx0KSh0LFt7a2V5OiJzdGFydCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcztyZXR1cm4gbmV3IGkuZGVmYXVsdChmdW5jdGlvbihyLG4pe2Uuc3luY2hlci5yZXN1bWVSZXBvcnRlcnMoe3N0b3JlOiEwfSkudGhlbihmdW5jdGlvbihlKXt2YXIgbj0oMCxvLmRlZmF1bHQpKGUpO24ubGVuZ3RoPjA/KGNvbnNvbGUubG9nKCJbQ29udGV4dFJlcG9ydGVyLnN0YXJ0XSByZXN1bWluZyAiLGVbblswXV0pLHQuY29udGV4dHM9ZSxuLmZvckVhY2goZnVuY3Rpb24oZSl7dC5fb25TdWJzY3JpcHRpb24odC5jb250ZXh0c1tlXSl9KSxyKHQuY29udGV4dHMpKTooY29uc29sZS5sb2coIltDb250ZXh0UmVwb3J0ZXIuc3RhcnRdIG5vdGhpbmcgdG8gcmVzdW1lICIsZSkscighMSkpfSkuY2F0Y2goZnVuY3Rpb24oZSl7Y29uc29sZS5lcnJvcigiW0NvbnRleHRSZXBvcnRlcl0gUmVzdW1lIGZhaWxlZCB8ICIsZSl9KX0pLmNhdGNoKGZ1bmN0aW9uKGUpe3JlamVjdCgiW0NvbnRleHRSZXBvcnRlcl0gU3RhcnQgZmFpbGVkIHwgIixlKX0pfX0se2tleToicHJvY2Vzc05vdGlmaWNhdGlvbiIsdmFsdWU6ZnVuY3Rpb24oZSl7Y29uc29sZS5sb2coIltDb250ZXh0UmVwb3J0ZXIucHJvY2Vzc05vdGlmaWNhdGlvbjogIixlKSxlLmFjaygpfX0se2tleToiY3JlYXRlIix2YWx1ZTpmdW5jdGlvbihlLHQscil7dmFyIG49YXJndW1lbnRzLmxlbmd0aD4zJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOiJteUNvbnRleHQiLG89YXJndW1lbnRzLmxlbmd0aD40JiZ2b2lkIDAhPT1hcmd1bWVudHNbNF0/YXJndW1lbnRzWzRdOm51bGwscz1hcmd1bWVudHMubGVuZ3RoPjUmJnZvaWQgMCE9PWFyZ3VtZW50c1s1XT9hcmd1bWVudHNbNV06bnVsbCxhPXRoaXMsdT12b2lkIDA7cmV0dXJuIG5ldyBpLmRlZmF1bHQoZnVuY3Rpb24oaSxjKXt1PW98fHM/byYmIXM/e3Jlc291cmNlczpyLGV4cGlyZXM6MzAscmVwb3J0ZXI6b306IW8mJnM/e3Jlc291cmNlczpyLGV4cGlyZXM6MzAscmV1c2VVUkw6c306e3Jlc291cmNlczpyLGV4cGlyZXM6MzAscmV1c2VVUkw6cyxyZXBvcnRlcjpvfTp7cmVzb3VyY2VzOnIsZXhwaXJlczozMH0sY29uc29sZS5pbmZvKCJbQ29udGV4dFJlcG9ydGVyLmNyZWF0ZV0gbGV0cyBjcmVhdGUgYSBuZXcgVXNlciBhdmFpbGFiaWxpdHkgQ29udGV4dCBPYmplY3QgIix1KSxhLnN5bmNoZXIuY3JlYXRlKGEuY29udGV4dERlc2NVUkwsW10sdCwhMCwhMSxuLG51bGwsdSkudGhlbihmdW5jdGlvbih0KXthLmNvbnRleHRzW2VdPXQsYS5fb25TdWJzY3JpcHRpb24odCksaSh0KX0pLmNhdGNoKGZ1bmN0aW9uKGUpe2MoZSl9KX0pfX0se2tleToiX29uU3Vic2NyaXB0aW9uIix2YWx1ZTpmdW5jdGlvbihlKXtlLm9uU3Vic2NyaXB0aW9uKGZ1bmN0aW9uKGUpe2NvbnNvbGUuaW5mbygiW0NvbnRleHRSZXBvcnRlci5fb25TdWJzY3JpcHRpb25dIGFjY2VwdGluZzogIixlKSxlLmFjY2VwdCgpfSl9fSx7a2V5OiJzZXRDb250ZXh0Iix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7Y29uc29sZS5sb2coIlRISVMgW0NvbnRleHRSZXBvcnRlci5zZXRDb250ZXh0XSBiZWZvcmUgY2hhbmdlIDoiLHIuY29udGV4dHNbZV0pLGNvbnNvbGUubG9nKCJbQ29udGV4dFJlcG9ydGVyLnNldENvbnRleHRdIGJlZm9yZSBjaGFuZ2UgOiIsci5jb250ZXh0c1tlXS5kYXRhKSxyLmNvbnRleHRzW2VdLmRhdGEudmFsdWVzPXQsY29uc29sZS5kZWJ1ZygiW0NvbnRleHRSZXBvcnRlci5zZXRDb250ZXh0XSBhZnRlciBjaGFuZ2UgOiIsci5jb250ZXh0c1tlXS5kYXRhKSxyLnRyaWdnZXIoZSsiLWNvbnRleHQtdXBkYXRlIix0KX19XSksdH0oZi5kZWZhdWx0KTt0LmRlZmF1bHQ9eSxlLmV4cG9ydHM9dC5kZWZhdWx0fV0pfSl9XSkuZGVmYXVsdH0pOw==",
      "sourceCodeClassname": "slack.slack.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "7.10",
    "description": "Protostub to exchange messages with slack",
    "language": "javascript",
    "cguid": "46968ae37faa364f9cc07983229b5a641",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "slack.slack.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "VertxProtoStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "default",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "7.10",
    "description": "Protostub to exchange messages with vertx",
    "language": "javascript",
    "cguid": "459ddec3ec1a17767da034fbe0988f1f9",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "objectName": "default",
    "configuration": {
      "url": "wss://msg-node.hysmart.rethink.ptinovacao.pt/localhost/ws"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "VertxProtoStubNode": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "default",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "7.10",
    "description": "Protostub to exchange messages with vertx",
    "language": "javascript",
    "cguid": "41338ea57960781be06f8cf3c78cbf70f",
    "type": "ProtoStubs",
    "constraints": {
      "node": true
    },
    "objectName": "default",
    "configuration": {
      "url": "wss://msg-node.hysmart.rethink.ptinovacao.pt/localhost/ws"
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "VertxAppProtoStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "sharing-cities-dsm",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "11.40",
    "description": "Protostub to exchange messages with vertx",
    "language": "javascript",
    "cguid": "46c0d57ffd1f5fe7888e6ba971acb4e79",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "sharing-cities-dsm",
    "configuration": {
      "url": "https://vertx-runtime.hysmart.rethink.ptinovacao.pt/eventbus",
      "vertxbus_ping_interval": 10000,
      "host": "sharing-cities-dsm",
      "domain": "hysmart.rethink.ptinovacao.pt",
      "streams": [],
      "publicWallets": {
        "identity": {
          "userProfile": {
            "guid": "user-guid://public-wallets",
            "userURL": "user://public-wallets"
          }
        }
      }
    },
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  }
}