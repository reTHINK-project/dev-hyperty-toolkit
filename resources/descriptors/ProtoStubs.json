{
  "SlackProtoStub": {
    "sourcePackage": {
      "sourceCode": "(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("activate", [], factory);
	else if(typeof exports === 'object')
		exports["activate"] = factory();
	else
		root["activate"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 127);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = exec;

var _tinyJsonHttp = __webpack_require__(130);

var _tinyJsonHttp2 = _interopRequireDefault(_tinyJsonHttp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function exec(url, form, callback) {

  // stringify any objects under keys since form is posted as application/x-www-form-urlencoded
  Object.keys(form).forEach(function (key) {
    if (_typeof(form[key]) === 'object') {
      form[key] = JSON.stringify(form[key]);
    }
  });

  // always post
  _tinyJsonHttp2.default.post({
    url: 'https://slack.com/api/' + url,
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    data: form
  }, function _res(err, res) {
    // var rateLimit = 'You are sending too many requests. Please relax.'
    if (err) {
      // if request failed bubble the error
      callback(err);
    } else if (res.body && res.body.error) {
      callback(Error(res.body.error));
    } else {
      callback(null, res.body);
    }
  });
}
module.exports = exports['default'];

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = validate;

var _api = __webpack_require__(152);

var _api2 = _interopRequireDefault(_api);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validate(method, params) {
  // get all the requried params for this method
  var required = _api2.default[method].filter(function (param) {
    return param.required === 'Required';
  });
  // collect any missing params
  var missing = required.filter(function (param) {
    return typeof params[param.name] === 'undefined';
  });
  // optimisitcally assume the best
  var err = false;
  // but have a plan for the worst
  if (missing.length) {
    var bullets = missing.map(function (param) {
      return '- ' + param.name + ' ... ' + param.description;
    });
    var msg = method + ' missing params:\n' + bullets.join('\n');
    err = Error(msg);
  }
  return err;
} //
// validate returns an error object if any required params are missing
//
// example usage:
// 
//   // token and id are required params
//   function apiCall(params, callback) { 
//     let err = validate('api.signature', params)
//     if (err) {
//       callback(err)
//     }
//     else {
//       // do api call
//     }
//   }
//
module.exports = exports['default'];

/***/ }),
/* 2 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(132)
var ieee754 = __webpack_require__(133)
var isArray = __webpack_require__(14)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 4 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 5 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var processNextTick = __webpack_require__(8);
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = __webpack_require__(7);
util.inherits = __webpack_require__(4);
/*</replacement>*/

var Readable = __webpack_require__(17);
var Writable = __webpack_require__(21);

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer))

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var ClientRequest = __webpack_require__(134)
var extend = __webpack_require__(144)
var statusCodes = __webpack_require__(145)
var url = __webpack_require__(11)

var http = exports

http.request = function (opts, cb) {
	if (typeof opts === 'string')
		opts = url.parse(opts)
	else
		opts = extend(opts)

	// Normally, the page is loaded from http or https, so not specifying a protocol
	// will result in a (valid) protocol-relative url. However, this won't work if
	// the protocol is something else, like 'file:'
	var defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''

	var protocol = opts.protocol || defaultProtocol
	var host = opts.hostname || opts.host
	var port = opts.port
	var path = opts.path || '/'

	// Necessary for IPv6 addresses
	if (host && host.indexOf(':') !== -1)
		host = '[' + host + ']'

	// This may be a relative url. The browser should always be able to interpret it correctly.
	opts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path
	opts.method = (opts.method || 'GET').toUpperCase()
	opts.headers = opts.headers || {}

	// Also valid opts.auth, opts.mode

	var req = new ClientRequest(opts)
	if (cb)
		req.on('response', cb)
	return req
}

http.get = function get (opts, cb) {
	var req = http.request(opts, cb)
	req.end()
	return req
}

http.Agent = function () {}
http.Agent.defaultMaxSockets = 4

http.STATUS_CODES = statusCodes

http.METHODS = [
	'CHECKOUT',
	'CONNECT',
	'COPY',
	'DELETE',
	'GET',
	'HEAD',
	'LOCK',
	'M-SEARCH',
	'MERGE',
	'MKACTIVITY',
	'MKCOL',
	'MOVE',
	'NOTIFY',
	'OPTIONS',
	'PATCH',
	'POST',
	'PROPFIND',
	'PROPPATCH',
	'PURGE',
	'PUT',
	'REPORT',
	'SEARCH',
	'SUBSCRIBE',
	'TRACE',
	'UNLOCK',
	'UNSUBSCRIBE'
]
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(3)
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var punycode = __webpack_require__(146);
var util = __webpack_require__(148);

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = __webpack_require__(12);

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(149);
exports.encode = exports.stringify = __webpack_require__(150);


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rtmstart;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function rtmstart(params, callback) {
  var ns = 'rtm.start';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 14 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)

exports.blobConstructor = false
try {
	new Blob([new ArrayBuffer(1)])
	exports.blobConstructor = true
} catch (e) {}

// The xhr request to example.com may violate some restrictive CSP configurations,
// so if we're running in a browser that supports `fetch`, avoid calling getXHR()
// and assume support for certain features below.
var xhr
function getXHR () {
	// Cache the xhr value
	if (xhr !== undefined) return xhr

	if (global.XMLHttpRequest) {
		xhr = new global.XMLHttpRequest()
		// If XDomainRequest is available (ie only, where xhr might not work
		// cross domain), use the page location. Otherwise use example.com
		// Note: this doesn't actually make an http request.
		try {
			xhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')
		} catch(e) {
			xhr = null
		}
	} else {
		// Service workers don't have XHR
		xhr = null
	}
	return xhr
}

function checkTypeSupport (type) {
	var xhr = getXHR()
	if (!xhr) return false
	try {
		xhr.responseType = type
		return xhr.responseType === type
	} catch (e) {}
	return false
}

// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.
// Safari 7.1 appears to have fixed this bug.
var haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'
var haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)

// If fetch is supported, then arraybuffer will be supported too. Skip calling
// checkTypeSupport(), since that calls getXHR().
exports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))

// These next two tests unavoidably show warnings in Chrome. Since fetch will always
// be used if it's available, just return false for these to avoid the warnings.
exports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')
exports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&
	checkTypeSupport('moz-chunked-arraybuffer')

// If fetch is supported, then overrideMimeType will be supported too. Skip calling
// getXHR().
exports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)

exports.vbArray = isFunction(global.VBArray)

function isFunction (value) {
	return typeof value === 'function'
}

xhr = null // Help gc

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(17);
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(21);
exports.Duplex = __webpack_require__(6);
exports.Transform = __webpack_require__(23);
exports.PassThrough = __webpack_require__(142);


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var processNextTick = __webpack_require__(8);
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(14);
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(18).EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(19);
/*</replacement>*/

// TODO(bmeurer): Change this back to const once hole checks are
// properly optimized away early in Ignition+TurboFan.
/*<replacement>*/
var Buffer = __webpack_require__(10).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(7);
util.inherits = __webpack_require__(4);
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(136);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(137);
var destroyImpl = __webpack_require__(20);
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') {
    return emitter.prependListener(event, fn);
  } else {
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
  }
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(6);

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(22).StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(6);

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(22).StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(5)))

/***/ }),
/* 18 */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(18).EventEmitter;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

var processNextTick = __webpack_require__(8);
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var processNextTick = __webpack_require__(8);
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(7);
util.inherits = __webpack_require__(4);
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(141)
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(19);
/*</replacement>*/

/*<replacement>*/
var Buffer = __webpack_require__(10).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

var destroyImpl = __webpack_require__(20);

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(6);

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(6);

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = _isUint8Array(chunk) && !state.objectMode;

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5), __webpack_require__(138).setImmediate, __webpack_require__(2)))

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = __webpack_require__(3).Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(6);

/*<replacement>*/
var util = __webpack_require__(7);
util.inherits = __webpack_require__(4);
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return stream.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er, data) {
      done(stream, er, data);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data !== null && data !== undefined) stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var http = __webpack_require__(9);

var https = module.exports;

for (var key in http) {
    if (http.hasOwnProperty(key)) https[key] = http[key];
};

https.request = function (params, cb) {
    if (!params) params = {};
    params.scheme = 'https';
    params.protocol = 'https:';
    return http.request.call(this, params, cb);
}


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = authtest;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function authtest(params, callback) {
  var ns = 'auth.test';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = botsinfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function botsinfo(params, callback) {
  var ns = 'bots.info';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelsarchive;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelsarchive(params, callback) {
  var ns = 'channels.archive';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelscreate;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelscreate(params, callback) {
  var ns = 'channels.create';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelshistory;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelshistory(params, callback) {
  var ns = 'channels.history';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelsinfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelsinfo(params, callback) {
  var ns = 'channels.info';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelsinvite;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelsinvite(params, callback) {
  var ns = 'channels.invite';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelsjoin;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelsjoin(params, callback) {
  var ns = 'channels.join';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelskick;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelskick(params, callback) {
  var ns = 'channels.kick';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelsleave;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelsleave(params, callback) {
  var ns = 'channels.leave';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelslist(params, callback) {
  var ns = 'channels.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelsmark;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelsmark(params, callback) {
  var ns = 'channels.mark';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelsrename;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelsrename(params, callback) {
  var ns = 'channels.rename';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelsreplies;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelsreplies(params, callback) {
  var ns = 'channels.replies';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelssetPurpose;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelssetPurpose(params, callback) {
  var ns = 'channels.setPurpose';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelssetTopic;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelssetTopic(params, callback) {
  var ns = 'channels.setTopic';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = channelsunarchive;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function channelsunarchive(params, callback) {
  var ns = 'channels.unarchive';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = chatdelete;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function chatdelete(params, callback) {
  var ns = 'chat.delete';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = chatmeMessage;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function chatmeMessage(params, callback) {
  var ns = 'chat.meMessage';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = chatpostMessage;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function chatpostMessage(params, callback) {
  var ns = 'chat.postMessage';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = chatunfurl;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function chatunfurl(params, callback) {
  var ns = 'chat.unfurl';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = chatupdate;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function chatupdate(params, callback) {
  var ns = 'chat.update';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dndendDnd;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function dndendDnd(params, callback) {
  var ns = 'dnd.endDnd';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dndendSnooze;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function dndendSnooze(params, callback) {
  var ns = 'dnd.endSnooze';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dndinfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function dndinfo(params, callback) {
  var ns = 'dnd.info';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dndsetSnooze;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function dndsetSnooze(params, callback) {
  var ns = 'dnd.setSnooze';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dndteamInfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function dndteamInfo(params, callback) {
  var ns = 'dnd.teamInfo';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = emojilist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function emojilist(params, callback) {
  var ns = 'emoji.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filescommentsadd;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function filescommentsadd(params, callback) {
  var ns = 'files.comments.add';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filescommentsdelete;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function filescommentsdelete(params, callback) {
  var ns = 'files.comments.delete';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filescommentsedit;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function filescommentsedit(params, callback) {
  var ns = 'files.comments.edit';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filesdelete;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function filesdelete(params, callback) {
  var ns = 'files.delete';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filesinfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function filesinfo(params, callback) {
  var ns = 'files.info';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = fileslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function fileslist(params, callback) {
  var ns = 'files.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filesrevokePublicURL;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function filesrevokePublicURL(params, callback) {
  var ns = 'files.revokePublicURL';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filessharedPublicURL;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function filessharedPublicURL(params, callback) {
  var ns = 'files.sharedPublicURL';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filesupload;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function filesupload(params, callback) {
  var ns = 'files.upload';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsarchive;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsarchive(params, callback) {
  var ns = 'groups.archive';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsclose;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsclose(params, callback) {
  var ns = 'groups.close';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupscreate;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupscreate(params, callback) {
  var ns = 'groups.create';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupscreateChild;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupscreateChild(params, callback) {
  var ns = 'groups.createChild';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupshistory;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupshistory(params, callback) {
  var ns = 'groups.history';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsinfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsinfo(params, callback) {
  var ns = 'groups.info';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsinvite;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsinvite(params, callback) {
  var ns = 'groups.invite';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupskick;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupskick(params, callback) {
  var ns = 'groups.kick';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsleave;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsleave(params, callback) {
  var ns = 'groups.leave';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupslist(params, callback) {
  var ns = 'groups.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsmark;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsmark(params, callback) {
  var ns = 'groups.mark';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsopen;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsopen(params, callback) {
  var ns = 'groups.open';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsrename;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsrename(params, callback) {
  var ns = 'groups.rename';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupssetPurpose;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupssetPurpose(params, callback) {
  var ns = 'groups.setPurpose';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupssetTopic;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupssetTopic(params, callback) {
  var ns = 'groups.setTopic';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsunarchive;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsunarchive(params, callback) {
  var ns = 'groups.unarchive';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = imclose;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function imclose(params, callback) {
  var ns = 'im.close';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = imhistory;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function imhistory(params, callback) {
  var ns = 'im.history';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = imlist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function imlist(params, callback) {
  var ns = 'im.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = immark;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function immark(params, callback) {
  var ns = 'im.mark';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = imopen;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function imopen(params, callback) {
  var ns = 'im.open';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mpimclose;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function mpimclose(params, callback) {
  var ns = 'mpim.close';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mpimhistory;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function mpimhistory(params, callback) {
  var ns = 'mpim.history';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mpimlist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function mpimlist(params, callback) {
  var ns = 'mpim.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mpimmark;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function mpimmark(params, callback) {
  var ns = 'mpim.mark';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mpimopen;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function mpimopen(params, callback) {
  var ns = 'mpim.open';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = pinsadd;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function pinsadd(params, callback) {
  var ns = 'pins.add';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = pinslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function pinslist(params, callback) {
  var ns = 'pins.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = pinsremove;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function pinsremove(params, callback) {
  var ns = 'pins.remove';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reactionsadd;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function reactionsadd(params, callback) {
  var ns = 'reactions.add';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reactionsget;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function reactionsget(params, callback) {
  var ns = 'reactions.get';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reactionslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function reactionslist(params, callback) {
  var ns = 'reactions.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reactionsremove;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function reactionsremove(params, callback) {
  var ns = 'reactions.remove';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = remindersadd;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function remindersadd(params, callback) {
  var ns = 'reminders.add';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reminderscomplete;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function reminderscomplete(params, callback) {
  var ns = 'reminders.complete';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = remindersdelete;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function remindersdelete(params, callback) {
  var ns = 'reminders.delete';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = remindersinfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function remindersinfo(params, callback) {
  var ns = 'reminders.info';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reminderslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function reminderslist(params, callback) {
  var ns = 'reminders.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rtmconnect;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function rtmconnect(params, callback) {
  var ns = 'rtm.connect';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = searchall;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function searchall(params, callback) {
  var ns = 'search.all';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = searchfiles;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function searchfiles(params, callback) {
  var ns = 'search.files';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = searchmessages;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function searchmessages(params, callback) {
  var ns = 'search.messages';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = starsadd;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function starsadd(params, callback) {
  var ns = 'stars.add';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = starslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function starslist(params, callback) {
  var ns = 'stars.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = starsremove;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function starsremove(params, callback) {
  var ns = 'stars.remove';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = teamaccessLogs;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function teamaccessLogs(params, callback) {
  var ns = 'team.accessLogs';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = teambillableInfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function teambillableInfo(params, callback) {
  var ns = 'team.billableInfo';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = teaminfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function teaminfo(params, callback) {
  var ns = 'team.info';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = teamintegrationLogs;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function teamintegrationLogs(params, callback) {
  var ns = 'team.integrationLogs';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = teamprofileget;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function teamprofileget(params, callback) {
  var ns = 'team.profile.get';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usergroupscreate;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usergroupscreate(params, callback) {
  var ns = 'usergroups.create';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usergroupsdisable;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usergroupsdisable(params, callback) {
  var ns = 'usergroups.disable';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usergroupsenable;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usergroupsenable(params, callback) {
  var ns = 'usergroups.enable';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usergroupslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usergroupslist(params, callback) {
  var ns = 'usergroups.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usergroupsupdate;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usergroupsupdate(params, callback) {
  var ns = 'usergroups.update';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usergroupsuserslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usergroupsuserslist(params, callback) {
  var ns = 'usergroups.users.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usergroupsusersupdate;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usergroupsusersupdate(params, callback) {
  var ns = 'usergroups.users.update';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usersgetPresence;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usersgetPresence(params, callback) {
  var ns = 'users.getPresence';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usersidentity;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usersidentity(params, callback) {
  var ns = 'users.identity';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usersinfo;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usersinfo(params, callback) {
  var ns = 'users.info';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = userslist;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function userslist(params, callback) {
  var ns = 'users.list';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usersprofileget;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usersprofileget(params, callback) {
  var ns = 'users.profile.get';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usersprofileset;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usersprofileset(params, callback) {
  var ns = 'users.profile.set';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = userssetActive;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function userssetActive(params, callback) {
  var ns = 'users.setActive';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = userssetPresence;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function userssetPresence(params, callback) {
  var ns = 'users.setPresence';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["default"] = activate;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_slack__ = __webpack_require__(128);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_slack___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_slack__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_service_framework_dist_Syncher__ = __webpack_require__(179);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_service_framework_dist_Syncher___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_service_framework_dist_Syncher__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_service_framework_dist_IdentityFactory__ = __webpack_require__(180);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_service_framework_dist_IdentityFactory___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_service_framework_dist_IdentityFactory__);




class SlackProtoStub {

  constructor(runtimeProtoStubURL, bus, config) {
    if (!runtimeProtoStubURL) throw new Error('The runtimeProtoStubURL is a needed parameter');
    if (!bus) throw new Error('The bus is a needed parameter');
    if (!config) throw new Error('The config is a needed parameter');

    console.log('[SlackProtostub] Constructor Loaded');

    let _this = this;

    this._subscribedList = [];
    this._usersList = [];
    this._groupsList = [];
    this._channelsList = [];
    this._imsList = [];
    this._observer;
    this._channelID = '';
    this._id = 0;
    this._continuousOpen = true;
    this._token = '';

    this._runtimeProtoStubURL = runtimeProtoStubURL;
    this._bus = bus;
    this._config = config;

    this._runtimeSessionURL = config.runtimeURL;
    this._reOpen = false;
    this._slack = __WEBPACK_IMPORTED_MODULE_0_slack___default.a;
    console.log('[SlackProtostub] instatiate syncher with runtimeUrl', runtimeProtoStubURL);
    this._syncher = new __WEBPACK_IMPORTED_MODULE_1_service_framework_dist_Syncher__["Syncher"](runtimeProtoStubURL, bus, config);

    this._syncher.onNotification(event => {
      console.log('[SlackProtostub] On Syncher Notification', event);
    });

    bus.addListener('*', msg => {
      console.log('[SlackProtostub] new msg', msg);
      if (msg.body.hasOwnProperty('identity') && msg.body.identity.hasOwnProperty('access_token') && msg.body.identity.access_token) {

        let token = msg.body.identity.access_token;
        this._token = token;

        _this._open(token, () => {
          if (_this._filter(msg)) {

            console.log('[SlackProtostub] After Filter', msg);
            let schemaUrl = msg.body.schema;
            if (schemaUrl && msg.body.value.name) {

              let schemaSplitted = schemaUrl.split('/');

              if (schemaSplitted[schemaSplitted.length - 1] === 'Communication') {

                _this._getSlackInformation(msg.to).then(userInfo => {

                  console.log('Slack User information: ', userInfo);

                  // username, userURL, avatar, cn, locale, idp, assertion
                  let identity = new __WEBPACK_IMPORTED_MODULE_2_service_framework_dist_IdentityFactory__["MessageBodyIdentity"](userInfo.name, 'slack://slack.com/' + userInfo.name + '@slack.com', userInfo.profile.image_192, userInfo.name, '', 'slack.com');

                  _this._subscribe(schemaUrl, msg.from, identity).then(result => {
                    console.log('[SlackProtostub] subscribe result', result);
                    if (result) {

                      _this._token = token;

                      if (msg.body.identity.userProfile.id) {
                        _this._id = msg.body.identity.userProfile.id;
                      }

                      _this._createChannel(msg, userInfo.id);
                    }
                  });
                });
              }
            }
          }
        });
      }
    });
  }

  get config() {
    return this._config;
  }

  get runtimeSession() {
    return this._runtimeSessionURL;
  }

  _getSlackInformation(to) {
    let _this = this;

    return new Promise((resolve, reject) => {

      let URLUsersList = 'https://slack.com/api/users.list?token=' + _this._token;
      let URLGroupsList = 'https://slack.com/api/groups.list?token=' + _this._token;
      let URLChannelsList = 'https://slack.com/api/channels.list?token=' + _this._token;
      let URLImsList = 'https://slack.com/api/im.list?token=' + _this._token;

      let UsersListPromise = _this._sendHTTPRequest('GET', URLUsersList);
      let GroupsListPromise = _this._sendHTTPRequest('GET', URLGroupsList);
      let ChannelsListPromise = _this._sendHTTPRequest('GET', URLChannelsList);
      let ImsListPromise = _this._sendHTTPRequest('GET', URLImsList);

      Promise.all([UsersListPromise, GroupsListPromise, ChannelsListPromise, ImsListPromise]).then(function (result) {
        _this._usersList = result[0].members;
        _this._groupsList = result[1].groups;
        _this._channelsList = result[2].channels;
        _this._imsList = result[3].ims;

        //get userID to invite
        let toSplitted = to.split('://')[1];
        let user = toSplitted.split('@')[0];
        let userInfo = _this._usersList.filter(function (value) {
          return value.name === user;
        })[0];

        resolve(userInfo);
      }, function (error) {
        console.err('[SlackProtostub] ', error);
        reject(error);
      });
    });
  }

  _createChannel(msg, userID) {
    let _this = this;
    let channelExists = _this._channelsList.filter(function (value) {
      return value.name === msg.body.value.name;
    })[0];

    // if channel exist, invite user, else channel need to be created and then invite user
    if (channelExists) {
      console.log('[SlackProtostub] channel exist', channelExists);

      let channelMembers = _this._channelsList.filter(function (value) {
        return value.name === msg.body.value.name;
      })[0].members;
      let alreadyOnChannel = false;

      channelMembers.forEach(function (s) {
        if (s === userID) {
          alreadyOnChannel = true;
        }
      });
      console.log('[SlackProtostub] channel members', channelMembers, '   ->', alreadyOnChannel);

      // if user isnt on Channel invite, else just set channelID
      if (!alreadyOnChannel) {
        _this._invite(userID, channelExists.id);
      } else {
        _this._channelID = channelExists.id;
      }
    } else {
      _this._create(msg.body.value.name, userID).then(function (result) {
        if (result) {
          _this._invite(userID);
        }
      });
    }
  }

  _filter(msg) {
    if (msg.body && msg.body.via === this._runtimeProtoStubURL) {
      return false;
    }

    return true;
  }

  _open(token, callback) {
    let _this = this;

    if (!_this._session) {
      console.log('[SlackProtostub] new Session for token:', token);
      _this._session = _this._slack.rtm.client();

      _this._session.listen({ token });

      _this._session.message(message => {
        console.log('[SlackProtostub] new message on session', message);
        if (message.channel) {
          if (message.channel === _this._channelID && message.user !== _this._id || !message.hasOwnProperty('bot_id') && message.user === _this._id && message.channel === _this._channelID) {

            _this._getUserInfo(message.user).then(identity => {
              _this._observer.addChild('chatmessages', { message: message.text }, identity);
            });
          }
        }
      });
    } else {
      console.log('[SlackProtostub] session already exist');
    }
    callback();
  }

  /*****************************************************************************************************
  * It retrieves information from a slack user and creates a reTHINK Identity object with it
  * @param {string} user - slack user id
  * @return {Promise<Object>} Returns a promise with an Identity object resolved
  *******************************************************************************************************/

  _getUserInfo(user) {
    let _this = this;

    return new Promise(function (resolve) {
      _this._slack.users.info({ token: _this._token, user: user }, (err, data) => {
        if (err) {
          console.err('[SlackProtostub] error', err);
        } else {

          console.log('[SlackProtostub getUserInfo] ', data);
          let identity = new __WEBPACK_IMPORTED_MODULE_2_service_framework_dist_IdentityFactory__["MessageBodyIdentity"](data.user.name, 'slack://slack.com/' + data.user.name + '@slack.com', data.user.profile.image_192, data.user.name, '', 'slack.com');

          resolve(identity);
        }
      });
    });
  }

  _subscribe(schema, urlDataObj, identity) {
    let _this = this;

    return new Promise(function (resolve) {

      _this._subscribedList.forEach(function (obj) {
        if (obj.urlDataObj === urlDataObj && obj.subscribed) {
          resolve(true);
        }
      });

      let subscription = { urlDataObj: urlDataObj, schema: schema, subscribed: true };

      let objectDescURL = schema;
      let dataObjectUrl = urlDataObj.substring(0, urlDataObj.lastIndexOf('/'));

      console.log('[SlackProtostub] new subscription for schema:', objectDescURL, ' and dataObject:', dataObjectUrl);

      return _this._syncher.subscribe(objectDescURL, dataObjectUrl, false, false, false, identity).then(observer => {
        _this._observer = observer;
        _this._subscribedList.push(subscription);
        console.log('[SlackProtostub] subscribed', dataObjectUrl);
        console.log('[SlackProtostub] Observer', observer);
        observer.onAddChild(child => {
          console.info('[SlackProtostub] Observer - Add Child: ', child);
          _this._deliver(child);
        });

        observer.onChange('*', event => {
          console.log('[SlackProtostub] Observer - onChange: ', event);
        });
        resolve(true);
      }).catch(error => {
        console.err('[SlackProtostub] Subscribe', error);
        resolve(false);
      });
    });
  }

  _invite(idUser, idChannel) {
    let _this = this;

    if (!idChannel) {
      idChannel = _this._channelID;
    }

    let toInvite = { token: _this._token, channel: idChannel, user: idUser };

    _this._slack.channels.invite(toInvite, (err, data) => {
      if (err) {
        console.err('[SlackProtostub] error', err);
      } else {
        _this._channelID = idChannel;
        console.log('[SlackProtostub] user invited with sucess', data);
      }
    });
  }

  _deliver(child) {
    let _this = this;

    if (_this._channelID !== '' && child.value.message) {

      if (child.hasOwnProperty('identity') && child.identity.hasOwnProperty('userProfile') && child.identity.userProfile.hasOwnProperty('username') && child.identity.userProfile.username) {

        let text = '' + child.identity.userProfile.username + ': ' + child.value.message;
        let message = { as_user: true, token: _this._token, channel: _this._channelID, text: text };
        console.log('[SlackProtostub] (PostMessage slack api) token(', _this._token, ')  channel(', _this._channelID, ') text(', child.value.message, ')');

        _this._slack.chat.postMessage(message, function (err, data) {
          if (err) {
            console.err('[SlackProtostub] error', err);
          } else {
            console.log('[SlackProtostub] PostMessage with Sucess', data);
          }
        });
      }
    }
  }

  _create(channelName) {
    let _this = this;

    return new Promise(function (resolve) {
      let toCreate = { token: _this._token, name: channelName };
      _this._slack.channels.create(toCreate, (err, data) => {
        if (err) {
          console.err('[SlackProtostub] ', err);
        } else {
          if (data.ok) {
            console.log('[SlackProtostub] Channel Created with Sucess ', data);
            _this._channelID = data.channel.id;
            resolve(true);
          }
        }
      });
    });
  }

  _sendHTTPRequest(method, url) {
    return new Promise(function (resolve, reject) {
      let xhr = new XMLHttpRequest();
      if ('withCredentials' in xhr) {
        xhr.open(method, url, true);
      } else if (typeof XDomainRequest !== 'undefined') {
        // Otherwise, check if XDomainRequest.
        // XDomainRequest only exists in IE, and is IE's way of making CORS requests.
        xhr = new XDomainRequest();
        xhr.open(method, url);
      } else {
        // Otherwise, CORS is not supported by the browser.
        xhr = null;
      }
      if (xhr) {
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) {
              let info = JSON.parse(xhr.responseText);
              resolve(info);
            } else if (xhr.status === 400) {
              reject('There was an error processing the token');
            } else {
              reject('something else other than 200 was returned');
            }
          }
        };
        xhr.send();
      } else {
        reject('CORS not supported');
      }
    });
  }
}

function activate(url, bus, config) {
  return {
    name: 'SlackProtoStub',
    instance: new SlackProtoStub(url, bus, config)
  };
}

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _api = __webpack_require__(129);

var _api2 = _interopRequireDefault(_api);

var _api3 = __webpack_require__(153);

var _api4 = _interopRequireDefault(_api3);

var _bots = __webpack_require__(159);

var _bots2 = _interopRequireDefault(_bots);

var _auth = __webpack_require__(25);

var _auth2 = _interopRequireDefault(_auth);

var _auth3 = __webpack_require__(160);

var _auth4 = _interopRequireDefault(_auth3);

var _channels = __webpack_require__(161);

var _channels2 = _interopRequireDefault(_channels);

var _chat = __webpack_require__(162);

var _chat2 = _interopRequireDefault(_chat);

var _dnd = __webpack_require__(163);

var _dnd2 = _interopRequireDefault(_dnd);

var _emoji = __webpack_require__(52);

var _emoji2 = _interopRequireDefault(_emoji);

var _files = __webpack_require__(164);

var _files2 = _interopRequireDefault(_files);

var _groups = __webpack_require__(165);

var _groups2 = _interopRequireDefault(_groups);

var _im = __webpack_require__(166);

var _im2 = _interopRequireDefault(_im);

var _mpim = __webpack_require__(167);

var _mpim2 = _interopRequireDefault(_mpim);

var _oauth = __webpack_require__(168);

var _oauth2 = _interopRequireDefault(_oauth);

var _reactions = __webpack_require__(169);

var _reactions2 = _interopRequireDefault(_reactions);

var _reminders = __webpack_require__(170);

var _reminders2 = _interopRequireDefault(_reminders);

var _pins = __webpack_require__(171);

var _pins2 = _interopRequireDefault(_pins);

var _rtm = __webpack_require__(172);

var _rtm2 = _interopRequireDefault(_rtm);

var _rtm3 = __webpack_require__(13);

var _rtm4 = _interopRequireDefault(_rtm3);

var _rtm5 = __webpack_require__(100);

var _rtm6 = _interopRequireDefault(_rtm5);

var _search = __webpack_require__(174);

var _search2 = _interopRequireDefault(_search);

var _stars = __webpack_require__(175);

var _stars2 = _interopRequireDefault(_stars);

var _team = __webpack_require__(176);

var _team2 = _interopRequireDefault(_team);

var _usergroups = __webpack_require__(177);

var _usergroups2 = _interopRequireDefault(_usergroups);

var _users = __webpack_require__(178);

var _users2 = _interopRequireDefault(_users);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  api: { test: _api2.default, client: _api4.default },
  auth: { test: _auth2.default, revoke: _auth4.default },
  bots: _bots2.default,
  channels: _channels2.default,
  chat: _chat2.default,
  dnd: _dnd2.default,
  emoji: { list: _emoji2.default },
  files: _files2.default,
  groups: _groups2.default,
  im: _im2.default,
  mpim: _mpim2.default,
  oauth: { access: _oauth2.default },
  reactions: _reactions2.default,
  reminders: _reminders2.default,
  pins: _pins2.default,
  rtm: { client: _rtm2.default, start: _rtm4.default, connect: _rtm6.default },
  search: _search2.default,
  stars: _stars2.default,
  team: _team2.default,
  usergroups: _usergroups2.default,
  users: _users2.default
};
module.exports = exports['default'];

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = apitest;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function apitest(params, callback) {
  var ns = 'api.test';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

var _read = __webpack_require__(131)
var _write = __webpack_require__(151)

module.exports = {
  get: _read,
  post: _write.bind({}, 'POST'),
  put: _write.bind({}, 'PUT'),
  del: _write.bind({}, 'DELETE'),
}


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var http = __webpack_require__(9)
var https = __webpack_require__(24)
var url = __webpack_require__(11)
var qs = __webpack_require__(12)

module.exports = function _read(options, callback) {

  // require options.url or fail noisily 
  if (!options.url) {
    throw Error('options.url required')
  }

  // parse out the options from options.url
  var opts = url.parse(options.url)

  // check for additional query params
  if (options.data) {
    var isSearch = !!opts.search
    options.url += (isSearch? '&' : '?') + qs.stringify(options.data)
    opts = url.parse(options.url)
  }

  var method = opts.protocol === 'https:'? https.get : http.get

  opts.rejectUnauthorized = false
  opts.headers = options.headers || {}
  opts.headers['User-Agent'] = opts.headers['User-Agent'] || 'tiny-http'
  opts.headers['Content-Type'] = opts.headers['Content-Type'] || 'application/json'
  
  // make a request
  var req = method(opts, function __res(res) {
   
    var raw = []

    var ok = res.statusCode >= 200 && res.statusCode < 300
    if (!ok) {
      callback(Error('GET failed with: ' + res.statusCode))
      res.resume()
      return
    }
 
    res.on('data', function __data(chunk) {
      raw.push(chunk)
    })

    res.on('end', function __end() {
      var err = null
      var result = null
      try {
        var isJSON = res.headers['content-type'].startsWith('application/json')
        var rawData = Buffer.concat(raw).toString()
        result = isJSON? JSON.parse(rawData) : rawData
      } 
      catch (e) {
        err = e
      }
      callback(err, {body:result, headers:res.headers})
    })
  })
  
  req.on('error', callback)
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer))

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}


/***/ }),
/* 133 */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer, global, process) {var capability = __webpack_require__(15)
var inherits = __webpack_require__(4)
var response = __webpack_require__(135)
var stream = __webpack_require__(16)
var toArrayBuffer = __webpack_require__(143)

var IncomingMessage = response.IncomingMessage
var rStates = response.readyStates

function decideMode (preferBinary, useFetch) {
	if (capability.fetch && useFetch) {
		return 'fetch'
	} else if (capability.mozchunkedarraybuffer) {
		return 'moz-chunked-arraybuffer'
	} else if (capability.msstream) {
		return 'ms-stream'
	} else if (capability.arraybuffer && preferBinary) {
		return 'arraybuffer'
	} else if (capability.vbArray && preferBinary) {
		return 'text:vbarray'
	} else {
		return 'text'
	}
}

var ClientRequest = module.exports = function (opts) {
	var self = this
	stream.Writable.call(self)

	self._opts = opts
	self._body = []
	self._headers = {}
	if (opts.auth)
		self.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))
	Object.keys(opts.headers).forEach(function (name) {
		self.setHeader(name, opts.headers[name])
	})

	var preferBinary
	var useFetch = true
	if (opts.mode === 'disable-fetch' || 'timeout' in opts) {
		// If the use of XHR should be preferred and includes preserving the 'content-type' header.
		// Force XHR to be used since the Fetch API does not yet support timeouts.
		useFetch = false
		preferBinary = true
	} else if (opts.mode === 'prefer-streaming') {
		// If streaming is a high priority but binary compatibility and
		// the accuracy of the 'content-type' header aren't
		preferBinary = false
	} else if (opts.mode === 'allow-wrong-content-type') {
		// If streaming is more important than preserving the 'content-type' header
		preferBinary = !capability.overrideMimeType
	} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {
		// Use binary if text streaming may corrupt data or the content-type header, or for speed
		preferBinary = true
	} else {
		throw new Error('Invalid value for opts.mode')
	}
	self._mode = decideMode(preferBinary, useFetch)

	self.on('finish', function () {
		self._onFinish()
	})
}

inherits(ClientRequest, stream.Writable)

ClientRequest.prototype.setHeader = function (name, value) {
	var self = this
	var lowerName = name.toLowerCase()
	// This check is not necessary, but it prevents warnings from browsers about setting unsafe
	// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but
	// http-browserify did it, so I will too.
	if (unsafeHeaders.indexOf(lowerName) !== -1)
		return

	self._headers[lowerName] = {
		name: name,
		value: value
	}
}

ClientRequest.prototype.getHeader = function (name) {
	var header = this._headers[name.toLowerCase()]
	if (header)
		return header.value
	return null
}

ClientRequest.prototype.removeHeader = function (name) {
	var self = this
	delete self._headers[name.toLowerCase()]
}

ClientRequest.prototype._onFinish = function () {
	var self = this

	if (self._destroyed)
		return
	var opts = self._opts

	var headersObj = self._headers
	var body = null
	if (opts.method !== 'GET' && opts.method !== 'HEAD') {
		if (capability.blobConstructor) {
			body = new global.Blob(self._body.map(function (buffer) {
				return toArrayBuffer(buffer)
			}), {
				type: (headersObj['content-type'] || {}).value || ''
			})
		} else {
			// get utf8 string
			body = Buffer.concat(self._body).toString()
		}
	}

	// create flattened list of headers
	var headersList = []
	Object.keys(headersObj).forEach(function (keyName) {
		var name = headersObj[keyName].name
		var value = headersObj[keyName].value
		if (Array.isArray(value)) {
			value.forEach(function (v) {
				headersList.push([name, v])
			})
		} else {
			headersList.push([name, value])
		}
	})

	if (self._mode === 'fetch') {
		global.fetch(self._opts.url, {
			method: self._opts.method,
			headers: headersList,
			body: body || undefined,
			mode: 'cors',
			credentials: opts.withCredentials ? 'include' : 'same-origin'
		}).then(function (response) {
			self._fetchResponse = response
			self._connect()
		}, function (reason) {
			self.emit('error', reason)
		})
	} else {
		var xhr = self._xhr = new global.XMLHttpRequest()
		try {
			xhr.open(self._opts.method, self._opts.url, true)
		} catch (err) {
			process.nextTick(function () {
				self.emit('error', err)
			})
			return
		}

		// Can't set responseType on really old browsers
		if ('responseType' in xhr)
			xhr.responseType = self._mode.split(':')[0]

		if ('withCredentials' in xhr)
			xhr.withCredentials = !!opts.withCredentials

		if (self._mode === 'text' && 'overrideMimeType' in xhr)
			xhr.overrideMimeType('text/plain; charset=x-user-defined')

		if ('timeout' in opts) {
			xhr.timeout = opts.timeout
			xhr.ontimeout = function () {
				self.emit('timeout')
			}
		}

		headersList.forEach(function (header) {
			xhr.setRequestHeader(header[0], header[1])
		})

		self._response = null
		xhr.onreadystatechange = function () {
			switch (xhr.readyState) {
				case rStates.LOADING:
				case rStates.DONE:
					self._onXHRProgress()
					break
			}
		}
		// Necessary for streaming in Firefox, since xhr.response is ONLY defined
		// in onprogress, not in onreadystatechange with xhr.readyState = 3
		if (self._mode === 'moz-chunked-arraybuffer') {
			xhr.onprogress = function () {
				self._onXHRProgress()
			}
		}

		xhr.onerror = function () {
			if (self._destroyed)
				return
			self.emit('error', new Error('XHR error'))
		}

		try {
			xhr.send(body)
		} catch (err) {
			process.nextTick(function () {
				self.emit('error', err)
			})
			return
		}
	}
}

/**
 * Checks if xhr.status is readable and non-zero, indicating no error.
 * Even though the spec says it should be available in readyState 3,
 * accessing it throws an exception in IE8
 */
function statusValid (xhr) {
	try {
		var status = xhr.status
		return (status !== null && status !== 0)
	} catch (e) {
		return false
	}
}

ClientRequest.prototype._onXHRProgress = function () {
	var self = this

	if (!statusValid(self._xhr) || self._destroyed)
		return

	if (!self._response)
		self._connect()

	self._response._onXHRProgress()
}

ClientRequest.prototype._connect = function () {
	var self = this

	if (self._destroyed)
		return

	self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)
	self._response.on('error', function(err) {
		self.emit('error', err)
	})

	self.emit('response', self._response)
}

ClientRequest.prototype._write = function (chunk, encoding, cb) {
	var self = this

	self._body.push(chunk)
	cb()
}

ClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {
	var self = this
	self._destroyed = true
	if (self._response)
		self._response._destroyed = true
	if (self._xhr)
		self._xhr.abort()
	// Currently, there isn't a way to truly abort a fetch.
	// If you like bikeshedding, see https://github.com/whatwg/fetch/issues/27
}

ClientRequest.prototype.end = function (data, encoding, cb) {
	var self = this
	if (typeof data === 'function') {
		cb = data
		data = undefined
	}

	stream.Writable.prototype.end.call(self, data, encoding, cb)
}

ClientRequest.prototype.flushHeaders = function () {}
ClientRequest.prototype.setTimeout = function () {}
ClientRequest.prototype.setNoDelay = function () {}
ClientRequest.prototype.setSocketKeepAlive = function () {}

// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method
var unsafeHeaders = [
	'accept-charset',
	'accept-encoding',
	'access-control-request-headers',
	'access-control-request-method',
	'connection',
	'content-length',
	'cookie',
	'cookie2',
	'date',
	'dnt',
	'expect',
	'host',
	'keep-alive',
	'origin',
	'referer',
	'te',
	'trailer',
	'transfer-encoding',
	'upgrade',
	'user-agent',
	'via'
]

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer, __webpack_require__(2), __webpack_require__(5)))

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, Buffer, global) {var capability = __webpack_require__(15)
var inherits = __webpack_require__(4)
var stream = __webpack_require__(16)

var rStates = exports.readyStates = {
	UNSENT: 0,
	OPENED: 1,
	HEADERS_RECEIVED: 2,
	LOADING: 3,
	DONE: 4
}

var IncomingMessage = exports.IncomingMessage = function (xhr, response, mode) {
	var self = this
	stream.Readable.call(self)

	self._mode = mode
	self.headers = {}
	self.rawHeaders = []
	self.trailers = {}
	self.rawTrailers = []

	// Fake the 'close' event, but only once 'end' fires
	self.on('end', function () {
		// The nextTick is necessary to prevent the 'request' module from causing an infinite loop
		process.nextTick(function () {
			self.emit('close')
		})
	})

	if (mode === 'fetch') {
		self._fetchResponse = response

		self.url = response.url
		self.statusCode = response.status
		self.statusMessage = response.statusText
		
		response.headers.forEach(function(header, key){
			self.headers[key.toLowerCase()] = header
			self.rawHeaders.push(key, header)
		})


		// TODO: this doesn't respect backpressure. Once WritableStream is available, this can be fixed
		var reader = response.body.getReader()
		function read () {
			reader.read().then(function (result) {
				if (self._destroyed)
					return
				if (result.done) {
					self.push(null)
					return
				}
				self.push(new Buffer(result.value))
				read()
			}).catch(function(err) {
				self.emit('error', err)
			})
		}
		read()

	} else {
		self._xhr = xhr
		self._pos = 0

		self.url = xhr.responseURL
		self.statusCode = xhr.status
		self.statusMessage = xhr.statusText
		var headers = xhr.getAllResponseHeaders().split(/\r?\n/)
		headers.forEach(function (header) {
			var matches = header.match(/^([^:]+):\s*(.*)/)
			if (matches) {
				var key = matches[1].toLowerCase()
				if (key === 'set-cookie') {
					if (self.headers[key] === undefined) {
						self.headers[key] = []
					}
					self.headers[key].push(matches[2])
				} else if (self.headers[key] !== undefined) {
					self.headers[key] += ', ' + matches[2]
				} else {
					self.headers[key] = matches[2]
				}
				self.rawHeaders.push(matches[1], matches[2])
			}
		})

		self._charset = 'x-user-defined'
		if (!capability.overrideMimeType) {
			var mimeType = self.rawHeaders['mime-type']
			if (mimeType) {
				var charsetMatch = mimeType.match(/;\s*charset=([^;])(;|$)/)
				if (charsetMatch) {
					self._charset = charsetMatch[1].toLowerCase()
				}
			}
			if (!self._charset)
				self._charset = 'utf-8' // best guess
		}
	}
}

inherits(IncomingMessage, stream.Readable)

IncomingMessage.prototype._read = function () {}

IncomingMessage.prototype._onXHRProgress = function () {
	var self = this

	var xhr = self._xhr

	var response = null
	switch (self._mode) {
		case 'text:vbarray': // For IE9
			if (xhr.readyState !== rStates.DONE)
				break
			try {
				// This fails in IE8
				response = new global.VBArray(xhr.responseBody).toArray()
			} catch (e) {}
			if (response !== null) {
				self.push(new Buffer(response))
				break
			}
			// Falls through in IE8	
		case 'text':
			try { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4
				response = xhr.responseText
			} catch (e) {
				self._mode = 'text:vbarray'
				break
			}
			if (response.length > self._pos) {
				var newData = response.substr(self._pos)
				if (self._charset === 'x-user-defined') {
					var buffer = new Buffer(newData.length)
					for (var i = 0; i < newData.length; i++)
						buffer[i] = newData.charCodeAt(i) & 0xff

					self.push(buffer)
				} else {
					self.push(newData, self._charset)
				}
				self._pos = response.length
			}
			break
		case 'arraybuffer':
			if (xhr.readyState !== rStates.DONE || !xhr.response)
				break
			response = xhr.response
			self.push(new Buffer(new Uint8Array(response)))
			break
		case 'moz-chunked-arraybuffer': // take whole
			response = xhr.response
			if (xhr.readyState !== rStates.LOADING || !response)
				break
			self.push(new Buffer(new Uint8Array(response)))
			break
		case 'ms-stream':
			response = xhr.response
			if (xhr.readyState !== rStates.LOADING)
				break
			var reader = new global.MSStreamReader()
			reader.onprogress = function () {
				if (reader.result.byteLength > self._pos) {
					self.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))
					self._pos = reader.result.byteLength
				}
			}
			reader.onload = function () {
				self.push(null)
			}
			// reader.onerror = ??? // TODO: this
			reader.readAsArrayBuffer(response)
			break
	}

	// The ms-stream case handles end separately in reader.onload()
	if (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {
		self.push(null)
	}
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5), __webpack_require__(3).Buffer, __webpack_require__(2)))

/***/ }),
/* 136 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(10).Buffer;
/*</replacement>*/

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(139);
var global = __webpack_require__(140);
exports.setImmediate = global.setImmediate;
exports.clearImmediate = global.clearImmediate;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(5)))

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var win;

if (typeof window !== "undefined") {
    win = window;
} else if (typeof global !== "undefined") {
    win = global;
} else if (typeof self !== "undefined"){
    win = self;
} else {
    win = {};
}

module.exports = win;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(23);

/*<replacement>*/
var util = __webpack_require__(7);
util.inherits = __webpack_require__(4);
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(3).Buffer

module.exports = function (buf) {
	// If the buffer is backed by a Uint8Array, a faster version will work
	if (buf instanceof Uint8Array) {
		// If the buffer isn't a subarray, return the underlying ArrayBuffer
		if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {
			return buf.buffer
		} else if (typeof buf.buffer.slice === 'function') {
			// Otherwise we need to get a proper copy
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)
		}
	}

	if (Buffer.isBuffer(buf)) {
		// This is the slow version that will work with any Buffer
		// implementation (even in old browsers)
		var arrayCopy = new Uint8Array(buf.length)
		var len = buf.length
		for (var i = 0; i < len; i++) {
			arrayCopy[i] = buf[i]
		}
		return arrayCopy.buffer
	} else {
		throw new Error('Argument must be a Buffer')
	}
}


/***/ }),
/* 144 */
/***/ (function(module, exports) {

module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}


/***/ }),
/* 145 */
/***/ (function(module, exports) {

module.exports = {
  "100": "Continue",
  "101": "Switching Protocols",
  "102": "Processing",
  "200": "OK",
  "201": "Created",
  "202": "Accepted",
  "203": "Non-Authoritative Information",
  "204": "No Content",
  "205": "Reset Content",
  "206": "Partial Content",
  "207": "Multi-Status",
  "208": "Already Reported",
  "226": "IM Used",
  "300": "Multiple Choices",
  "301": "Moved Permanently",
  "302": "Found",
  "303": "See Other",
  "304": "Not Modified",
  "305": "Use Proxy",
  "307": "Temporary Redirect",
  "308": "Permanent Redirect",
  "400": "Bad Request",
  "401": "Unauthorized",
  "402": "Payment Required",
  "403": "Forbidden",
  "404": "Not Found",
  "405": "Method Not Allowed",
  "406": "Not Acceptable",
  "407": "Proxy Authentication Required",
  "408": "Request Timeout",
  "409": "Conflict",
  "410": "Gone",
  "411": "Length Required",
  "412": "Precondition Failed",
  "413": "Payload Too Large",
  "414": "URI Too Long",
  "415": "Unsupported Media Type",
  "416": "Range Not Satisfiable",
  "417": "Expectation Failed",
  "418": "I'm a teapot",
  "421": "Misdirected Request",
  "422": "Unprocessable Entity",
  "423": "Locked",
  "424": "Failed Dependency",
  "425": "Unordered Collection",
  "426": "Upgrade Required",
  "428": "Precondition Required",
  "429": "Too Many Requests",
  "431": "Request Header Fields Too Large",
  "451": "Unavailable For Legal Reasons",
  "500": "Internal Server Error",
  "501": "Not Implemented",
  "502": "Bad Gateway",
  "503": "Service Unavailable",
  "504": "Gateway Timeout",
  "505": "HTTP Version Not Supported",
  "506": "Variant Also Negotiates",
  "507": "Insufficient Storage",
  "508": "Loop Detected",
  "509": "Bandwidth Limit Exceeded",
  "510": "Not Extended",
  "511": "Network Authentication Required"
}


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return punycode;
		}.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(147)(module), __webpack_require__(2)))

/***/ }),
/* 147 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var qs = __webpack_require__(12)
var http = __webpack_require__(9)
var https = __webpack_require__(24)
var url = __webpack_require__(11)

module.exports = function _write(httpMethod, options, callback) {

  // require options.url or fail noisily 
  if (!options.url) {
    throw Error('options.url required')
  }

  // parse out the options from options.url
  var opts = url.parse(options.url)
  var method = opts.protocol === 'https:'? https.request : http.request
  var defaultContentType = 'application/json; charset=utf-8'

  // put the params on the query as well as the body?
  if (httpMethod === 'DELETE' && options.data) {
    var isSearch = !!opts.search
    options.url += (isSearch? '&' : '?') + qs.stringify(options.data)
    opts = url.parse(options.url)
  }

  opts.method = httpMethod
  opts.rejectUnauthorized = false
  opts.headers = options.headers || {}
  opts.headers['User-Agent'] = opts.headers['User-Agent'] || 'tiny-http'
  opts.headers['Content-Type'] = opts.headers['Content-Type'] || defaultContentType
  var reqJSON = opts.headers['Content-Type'].startsWith('application/json')
  var postData = reqJSON? JSON.stringify(options.data || {}) : qs.stringify(options.data || {})

  // make a POST request
  var req = method(opts, function(res) {
   
    var raw = [] // keep our buffers here
    var ok = res.statusCode >= 200 && res.statusCode < 300

    if (!ok) {
      callback(Error(httpMethod + ' failed with: ' + res.statusCode))
      res.resume()
      return
    }
 
    res.on('data', function __data(chunk) { 
      raw.push(chunk) 
    })

    res.on('end', function __end() {
      var err = null
      var result = null
      try {
        var isJSON = res.headers['content-type'].startsWith('application/json')
        var rawData = Buffer.concat(raw).toString()
        result = isJSON? JSON.parse(rawData) : rawData
      } 
      catch (e) {
        err = e
      }
      callback(err, {body:result, headers:res.headers})
    })
  })

  req.on('error', callback)

  req.write(postData)
 
  req.end()
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer))

/***/ }),
/* 152 */
/***/ (function(module, exports) {

module.exports = {"api.test":[{"name":"error","example":"my_error","required":"Optional","description":"Error response to return\n"},{"name":"foo","example":"bar","required":"Optional","description":"example property to return\n"}],"auth.revoke":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Optional","description":"Authentication token.\n"},{"name":"test","example":"true","required":"Optional","description":"Setting this parameter to 1 triggers a testing mode where the specified token will not actually be revoked.\n"}],"auth.test":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: identify\n"}],"bots.info":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users:read\n"},{"name":"bot","example":"B12345678","required":"Optional","description":"Bot user to get info on\n"}],"channels.archive":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to archive\n"}],"channels.create":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"name","example":"mychannel","required":"Required","description":"Name of channel to create\n"},{"name":"validate","example":"true","required":"Optional","description":"Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.\n"}],"channels.history":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:history\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to fetch history for.\n"},{"name":"latest","example":"1234567890.123456","required":"Optional, default=now","description":"End of time range of messages to include in results.\n"},{"name":"oldest","example":"1234567890.123456","required":"Optional, default=0","description":"Start of time range of messages to include in results.\n"},{"name":"inclusive","example":"true","required":"Optional, default=0","description":"Include messages with latest or oldest timestamp in results.\n"},{"name":"count","example":"100","required":"Optional, default=100","description":"Number of messages to return, between 1 and 1000.\n"},{"name":"unreads","example":"true","required":"Optional, default=0","description":"Include unread_count_display in the output?\n"}],"channels.info":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:read\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to get info on\n"}],"channels.invite":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to invite user to.\n"},{"name":"user","example":"U1234567890","required":"Required","description":"User to invite to channel.\n"}],"channels.join":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"name","example":"C1234567890","required":"Required","description":"Name of channel to join\n"},{"name":"validate","example":"true","required":"Optional","description":"Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.\n"}],"channels.kick":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to remove user from.\n"},{"name":"user","example":"U1234567890","required":"Required","description":"User to remove from channel.\n"}],"channels.leave":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to leave\n"}],"channels.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:read\n"},{"name":"exclude_archived","example":"true","required":"Optional, default=false","description":"Exclude archived channels from the list\n"},{"name":"exclude_members","example":"true","required":"Optional, default=false","description":"Exclude the members collection from each channel\n"}],"channels.mark":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to set reading cursor in.\n"},{"name":"ts","example":"1234567890.123456","required":"Required","description":"Timestamp of the most recently seen message.\n"}],"channels.rename":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to rename\n"},{"name":"name","example":" ","required":"Required","description":"New name for channel.\n"},{"name":"validate","example":"true","required":"Optional","description":"Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.\n"}],"channels.replies":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:history\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to fetch thread from\n"},{"name":"thread_ts","example":"1234567890.123456","required":"Required","description":"Unique identifier of a thread's parent message\n"}],"channels.setPurpose":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to set the purpose of\n"},{"name":"purpose","example":"My Purpose","required":"Required","description":"The new purpose\n"}],"channels.setTopic":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to set the topic of\n"},{"name":"topic","example":"My Topic","required":"Required","description":"The new topic\n"}],"channels.unarchive":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: channels:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to unarchive\n"}],"chat.delete":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: chat:write:bot or chat:write:user\n"},{"name":"ts","example":"1405894322.002768","required":"Required","description":"Timestamp of the message to be deleted.\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel containing the message to be deleted.\n"},{"name":"as_user","example":"true","required":"Optional","description":"Pass true to delete the message as the authed user. Bot users in this context are considered authed users.\n"}],"chat.meMessage":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: chat:write:user\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name.\n"},{"name":"text","example":"Hello world","required":"Required","description":"Text of the message to send.\n"}],"chat.postMessage":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: chat:write:bot or chat:write:user\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See below for more details.\n"},{"name":"text","example":"Hello world","required":"Required","description":"Text of the message to send. See below for an explanation of formatting. This field is usually required, unless you're providing only attachments instead.\n"},{"name":"parse","example":"full","required":"Optional","description":"Change how messages are treated. Defaults to none. See below.\n"},{"name":"link_names","example":"true","required":"Optional","description":"Find and link channel names and usernames.\n"},{"name":"attachments","example":"[{\"pretext\": \"pre-hello\", \"text\": \"text-world\"}]","required":"Optional","description":"Structured message attachments.\n"},{"name":"unfurl_links","example":"true","required":"Optional","description":"Pass true to enable unfurling of primarily text-based content.\n"},{"name":"unfurl_media","example":"false","required":"Optional","description":"Pass false to disable unfurling of media content.\n"},{"name":"username","example":"My Bot","required":"Optional","description":"Set your bot's user name. Must be used in conjunction with as_user set to false, otherwise ignored. See authorship below.\n"},{"name":"as_user","example":"true","required":"Optional","description":"Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See authorship below.\n"},{"name":"icon_url","example":"http://lorempixel.com/48/48","required":"Optional","description":"URL to an image to use as the icon for this message. Must be used in conjunction with as_user set to false, otherwise ignored. See authorship below.\n"},{"name":"icon_emoji","example":":chart_with_upwards_trend:","required":"Optional","description":"Emoji to use as the icon for this message. Overrides icon_url. Must be used in conjunction with as_user set to false, otherwise ignored. See authorship below.\n"},{"name":"thread_ts","example":"1234567890.123456","required":"Optional","description":"Provide another message's ts value to make this message a reply. Avoid using a reply's ts value; use its parent instead.\n"},{"name":"reply_broadcast","example":"true","required":"Optional","description":"Used in conjunction with thread_ts and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to false.\n"}],"chat.unfurl":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: links:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel ID of the message\n"},{"name":"ts","example":" ","required":"Required","description":"Timestamp of the message to add unfurl behavior to\n"},{"name":"unfurls","example":" ","required":"Required","description":"JSON mapping a set of URLs from the message to their unfurl attachments\n"},{"name":"user_auth_required","example":"true","required":"Optional, default=0","description":"Set to true or 1 to indicate the user must install your Slack app to trigger unfurls for this domain\n"}],"chat.update":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: chat:write:bot or chat:write:user\n"},{"name":"ts","example":"1405894322.002768","required":"Required","description":"Timestamp of the message to be updated.\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel containing the message to be updated.\n"},{"name":"text","example":"Hello world","required":"Required","description":"New text for the message, using the default formatting rules.\n"},{"name":"attachments","example":"[{\"pretext\": \"pre-hello\", \"text\": \"text-world\"}]","required":"Optional","description":"Structured message attachments.\n"},{"name":"parse","example":"none","required":"Optional","description":"Change how messages are treated. Defaults to client, unlike chat.postMessage. See below.\n"},{"name":"link_names","example":"true","required":"Optional","description":"Find and link channel names and usernames. Defaults to none. This parameter should be used in conjunction with parse. To set link_names to 1, specify a parse mode of full.\n"},{"name":"as_user","example":"true","required":"Optional","description":"Pass true to update the message as the authed user. Bot users in this context are considered authed users.\n"}],"dnd.endDnd":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: dnd:write\n"}],"dnd.endSnooze":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: dnd:write\n"}],"dnd.info":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: dnd:read\n"},{"name":"user","example":"U1234","required":"Optional","description":"User to fetch status for (defaults to current user)\n"}],"dnd.setSnooze":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: dnd:write\n"},{"name":"num_minutes","example":"60","required":"Required","description":"Number of minutes, from now, to snooze until.\n"}],"dnd.teamInfo":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: dnd:read\n"},{"name":"users","example":"U1234,U4567","required":"Optional","description":"Comma-separated list of users to fetch Do Not Disturb status for\n"}],"emoji.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: emoji:read\n"}],"files.comments.add":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: files:write:user\n"},{"name":"file","example":"F1234467890","required":"Required","description":"File to add a comment to.\n"},{"name":"comment","example":"Everyone should take a moment to read this file.","required":"Required","description":"Text of the comment to add.\n"}],"files.comments.delete":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: files:write:user\n"},{"name":"file","example":"F1234567890","required":"Required","description":"File to delete a comment from.\n"},{"name":"id","example":"Fc1234567890","required":"Required","description":"The comment to delete.\n"}],"files.comments.edit":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: files:write:user\n"},{"name":"file","example":"F1234567890","required":"Required","description":"File containing the comment to edit.\n"},{"name":"id","example":"Fc1234567890","required":"Required","description":"The comment to edit.\n"},{"name":"comment","example":"Everyone should take a moment to read this file, seriously.","required":"Required","description":"Text of the comment to edit.\n"}],"files.delete":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: files:write:user\n"},{"name":"file","example":"F1234567890","required":"Required","description":"ID of file to delete.\n"}],"files.info":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: files:read\n"},{"name":"file","example":"F2147483862","required":"Required","description":"Specify a file by providing its ID.\n"},{"name":"count","example":"20","required":"Optional, default=100","description":"Number of items to return per page.\n"},{"name":"page","example":"2","required":"Optional, default=1","description":"Page number of results to return.\n"}],"files.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: files:read\n"},{"name":"user","example":"U1234567890","required":"Optional","description":"Filter files created by a single user.\n"},{"name":"channel","example":"C1234567890","required":"Optional","description":"Filter files appearing in a specific channel, indicated by its ID.\n"},{"name":"ts_from","example":"123456789","required":"Optional, default=0","description":"Filter files created after this timestamp (inclusive).\n"},{"name":"ts_to","example":"123456789","required":"Optional, default=now","description":"Filter files created before this timestamp (inclusive).\n"},{"name":"types","example":"images","required":"Optional, default=all","description":"Filter files by type:\n\n\nall - All files\nspaces - Posts\nsnippets - Snippets\nimages - Image files\ngdocs - Google docs\nzips - Zip files\npdfs - PDF files\n\n\nYou can pass multiple values in the types argument, like types=spaces,snippets.The default value is all, which does not filter the list.\n"},{"name":"count","example":"20","required":"Optional, default=100","description":"Number of items to return per page.\n"},{"name":"page","example":"2","required":"Optional, default=1","description":"Page number of results to return.\n"}],"files.revokePublicURL":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: files:write:user\n"},{"name":"file","example":"F1234567890","required":"Required","description":"File to revoke\n"}],"files.sharedPublicURL":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: files:write:user\n"},{"name":"file","example":"F1234567890","required":"Required","description":"File to share\n"}],"files.upload":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: files:write:user\n"},{"name":"file","example":"...","required":"Optional","description":"File contents via multipart/form-data. If omitting this parameter, you must submit content.\n"},{"name":"content","example":"...","required":"Optional","description":"File contents via a POST variable. If omitting this parameter, you must provide a file.\n"},{"name":"filetype","example":"php","required":"Optional","description":"A file type identifier.\n"},{"name":"filename","example":"foo.txt","required":"Optional","description":"Filename of file.\n"},{"name":"title","example":"My File","required":"Optional","description":"Title of file.\n"},{"name":"initial_comment","example":"Best!","required":"Optional","description":"Initial comment to add to file.\n"},{"name":"channels","example":"C1234567890,C2345678901,C3456789012","required":"Optional","description":"Comma-separated list of channel names or IDs where the file will be shared.\n"}],"groups.archive":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to archive\n"}],"groups.close":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to close.\n"}],"groups.create":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"name","example":" ","required":"Required","description":"Name of private channel to create\n"},{"name":"validate","example":"true","required":"Optional","description":"Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.\n"}],"groups.createChild":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to clone and archive.\n"}],"groups.history":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:history\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to fetch history for.\n"},{"name":"latest","example":"1234567890.123456","required":"Optional, default=now","description":"End of time range of messages to include in results.\n"},{"name":"oldest","example":"1234567890.123456","required":"Optional, default=0","description":"Start of time range of messages to include in results.\n"},{"name":"inclusive","example":"true","required":"Optional, default=0","description":"Include messages with latest or oldest timestamp in results.\n"},{"name":"count","example":"100","required":"Optional, default=100","description":"Number of messages to return, between 1 and 1000.\n"},{"name":"unreads","example":"true","required":"Optional, default=0","description":"Include unread_count_display in the output?\n"}],"groups.info":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:read\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to get info on\n"}],"groups.invite":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to invite user to.\n"},{"name":"user","example":"U1234567890","required":"Required","description":"User to invite.\n"}],"groups.kick":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to remove user from.\n"},{"name":"user","example":"U1234567890","required":"Required","description":"User to remove from private channel.\n"}],"groups.leave":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to leave\n"}],"groups.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:read\n"},{"name":"exclude_archived","example":"true","required":"Optional, default=0","description":"Don't return archived private channels.\n"}],"groups.mark":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to set reading cursor in.\n"},{"name":"ts","example":"1234567890.123456","required":"Required","description":"Timestamp of the most recently seen message.\n"}],"groups.open":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to open.\n"}],"groups.rename":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to rename\n"},{"name":"name","example":" ","required":"Required","description":"New name for private channel.\n"},{"name":"validate","example":"true","required":"Optional","description":"Whether to return errors on invalid channel name instead of modifying it to meet the specified criteria.\n"}],"groups.replies":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:history\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Private channel to fetch thread from\n"},{"name":"thread_ts","example":"1234567890.123456","required":"Required","description":"Unique identifier of a thread's parent message\n"}],"groups.setPurpose":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to set the purpose of\n"},{"name":"purpose","example":"My Purpose","required":"Required","description":"The new purpose\n"}],"groups.setTopic":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to set the topic of\n"},{"name":"topic","example":"My Topic","required":"Required","description":"The new topic\n"}],"groups.unarchive":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: groups:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Private channel to unarchive\n"}],"im.close":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: im:write\n"},{"name":"channel","example":"D1234567890","required":"Required","description":"Direct message channel to close.\n"}],"im.history":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: im:history\n"},{"name":"channel","example":"D1234567890","required":"Required","description":"Direct message channel to fetch history for.\n"},{"name":"latest","example":"1234567890.123456","required":"Optional, default=now","description":"End of time range of messages to include in results.\n"},{"name":"oldest","example":"1234567890.123456","required":"Optional, default=0","description":"Start of time range of messages to include in results.\n"},{"name":"inclusive","example":"true","required":"Optional, default=0","description":"Include messages with latest or oldest timestamp in results.\n"},{"name":"count","example":"100","required":"Optional, default=100","description":"Number of messages to return, between 1 and 1000.\n"},{"name":"unreads","example":"true","required":"Optional, default=0","description":"Include unread_count_display in the output?\n"}],"im.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: im:read\n"}],"im.mark":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: im:write\n"},{"name":"channel","example":"D1234567890","required":"Required","description":"Direct message channel to set reading cursor in.\n"},{"name":"ts","example":"1234567890.123456","required":"Required","description":"Timestamp of the most recently seen message.\n"}],"im.open":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: im:write\n"},{"name":"user","example":"U1234567890","required":"Required","description":"User to open a direct message channel with.\n"},{"name":"return_im","example":"true","required":"Optional","description":"Boolean, indicates you want the full IM channel definition in the response.\n"}],"im.replies":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: im:history\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Direct message channel to fetch thread from\n"},{"name":"thread_ts","example":"1234567890.123456","required":"Required","description":"Unique identifier of a thread's parent message\n"}],"mpim.close":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: mpim:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"MPIM to close.\n"}],"mpim.history":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: mpim:history\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"Multiparty direct message to fetch history for.\n"},{"name":"latest","example":"1234567890.123456","required":"Optional, default=now","description":"End of time range of messages to include in results.\n"},{"name":"oldest","example":"1234567890.123456","required":"Optional, default=0","description":"Start of time range of messages to include in results.\n"},{"name":"inclusive","example":"true","required":"Optional, default=0","description":"Include messages with latest or oldest timestamp in results.\n"},{"name":"count","example":"100","required":"Optional, default=100","description":"Number of messages to return, between 1 and 1000.\n"},{"name":"unreads","example":"true","required":"Optional, default=0","description":"Include unread_count_display in the output?\n"}],"mpim.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: mpim:read\n"}],"mpim.mark":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: mpim:write\n"},{"name":"channel","example":"G1234567890","required":"Required","description":"multiparty direct message channel to set reading cursor in.\n"},{"name":"ts","example":"1234567890.123456","required":"Required","description":"Timestamp of the most recently seen message.\n"}],"mpim.open":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: mpim:write\n"},{"name":"users","example":"U1234567890,U2345678901,U3456789012","required":"Required","description":"Comma separated lists of users.  The ordering of the users is preserved whenever a MPIM group is returned.\n"}],"mpim.replies":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: mpim:history\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Multiparty direct message channel to fetch thread from.\n"},{"name":"thread_ts","example":"1234567890.123456","required":"Required","description":"Unique identifier of a thread's parent message.\n"}],"oauth.access":[{"name":"client_id","example":"4b39e9-752c4","required":"Required","description":"Issued when you created your application.\n"},{"name":"client_secret","example":"33fea0113f5b1","required":"Required","description":"Issued when you created your application.\n"},{"name":"code","example":"ccdaa72ad","required":"Required","description":"The code param returned via the OAuth callback.\n"},{"name":"redirect_uri","example":"http://example.com","required":"Optional","description":"This must match the originally submitted URI (if one was sent).\n"}],"pins.add":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: pins:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to pin the item in.\n"},{"name":"file","example":"F1234567890","required":"Optional","description":"File to pin.\n"},{"name":"file_comment","example":"Fc1234567890","required":"Optional","description":"File comment to pin.\n"},{"name":"timestamp","example":"1234567890.123456","required":"Optional","description":"Timestamp of the message to pin.\n"}],"pins.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: pins:read\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel to get pinned items for.\n"}],"pins.remove":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: pins:write\n"},{"name":"channel","example":"C1234567890","required":"Required","description":"Channel where the item is pinned to.\n"},{"name":"file","example":"F1234567890","required":"Optional","description":"File to un-pin.\n"},{"name":"file_comment","example":"Fc1234567890","required":"Optional","description":"File comment to un-pin.\n"},{"name":"timestamp","example":"1234567890.123456","required":"Optional","description":"Timestamp of the message to un-pin.\n"}],"reactions.add":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: reactions:write\n"},{"name":"name","example":"thumbsup","required":"Required","description":"Reaction (emoji) name.\n"},{"name":"file","example":"F1234567890","required":"Optional","description":"File to add reaction to.\n"},{"name":"file_comment","example":"Fc1234567890","required":"Optional","description":"File comment to add reaction to.\n"},{"name":"channel","example":"C1234567890","required":"Optional","description":"Channel where the message to add reaction to was posted.\n"},{"name":"timestamp","example":"1234567890.123456","required":"Optional","description":"Timestamp of the message to add reaction to.\n"}],"reactions.get":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: reactions:read\n"},{"name":"file","example":"F1234567890","required":"Optional","description":"File to get reactions for.\n"},{"name":"file_comment","example":"Fc1234567890","required":"Optional","description":"File comment to get reactions for.\n"},{"name":"channel","example":"C1234567890","required":"Optional","description":"Channel where the message to get reactions for was posted.\n"},{"name":"timestamp","example":"1234567890.123456","required":"Optional","description":"Timestamp of the message to get reactions for.\n"},{"name":"full","example":"true","required":"Optional","description":"If true always return the complete reaction list.\n"}],"reactions.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: reactions:read\n"},{"name":"user","example":"U1234567890","required":"Optional","description":"Show reactions made by this user. Defaults to the authed user.\n"},{"name":"full","example":"true","required":"Optional","description":"If true always return the complete reaction list.\n"},{"name":"count","example":"20","required":"Optional, default=100","description":"Number of items to return per page.\n"},{"name":"page","example":"2","required":"Optional, default=1","description":"Page number of results to return.\n"}],"reactions.remove":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: reactions:write\n"},{"name":"name","example":"thumbsup","required":"Required","description":"Reaction (emoji) name.\n"},{"name":"file","example":"F1234567890","required":"Optional","description":"File to remove reaction from.\n"},{"name":"file_comment","example":"Fc1234567890","required":"Optional","description":"File comment to remove reaction from.\n"},{"name":"channel","example":"C1234567890","required":"Optional","description":"Channel where the message to remove reaction from was posted.\n"},{"name":"timestamp","example":"1234567890.123456","required":"Optional","description":"Timestamp of the message to remove reaction from.\n"}],"reminders.add":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: reminders:write\n"},{"name":"text","example":"eat a banana","required":"Required","description":"The content of the reminder\n"},{"name":"time","example":"1602288000","required":"Required","description":"When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")\n"},{"name":"user","example":"U18888888","required":"Optional","description":"The user who will receive the reminder. If no user is specified, the reminder will go to user who created it.\n"}],"reminders.complete":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: reminders:write\n"},{"name":"reminder","example":"Rm12345678","required":"Required","description":"The ID of the reminder to be marked as complete\n"}],"reminders.delete":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: reminders:write\n"},{"name":"reminder","example":"Rm12345678","required":"Required","description":"The ID of the reminder\n"}],"reminders.info":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: reminders:read\n"},{"name":"reminder","example":"Rm23456789","required":"Required","description":"The ID of the reminder\n"}],"reminders.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: reminders:read\n"}],"rtm.connect":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires token type: session or oauth or bot or app\nRequires scope: client\n"}],"rtm.start":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: client\n"},{"name":"simple_latest","example":"true","required":"Optional","description":"Return timestamp only for latest message object of each channel (improves performance).\n"},{"name":"no_unreads","example":"true","required":"Optional","description":"Skip unread counts for each channel (improves performance).\n"},{"name":"mpim_aware","example":"true","required":"Optional","description":"Returns MPIMs to the client in the API response.\n"},{"name":"no_latest","example":"1","required":"Optional, default=0","description":"Exclude latest timestamps for channels, groups, mpims, and ims. Automatically sets no_unreads to 1\n"}],"search.all":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: search:read\n"},{"name":"query","example":"pickleface","required":"Required","description":"Search query. May contains booleans, etc.\n"},{"name":"sort","example":"timestamp","required":"Optional, default=score","description":"Return matches sorted by either score or timestamp.\n"},{"name":"sort_dir","example":"asc","required":"Optional, default=desc","description":"Change sort direction to ascending (asc) or descending (desc).\n"},{"name":"highlight","example":"true","required":"Optional","description":"Pass a value of true to enable query highlight markers (see below).\n"},{"name":"count","example":"20","required":"Optional, default=20","description":"Number of items to return per page.\n"},{"name":"page","example":"2","required":"Optional, default=1","description":"Page number of results to return.\n"}],"search.files":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: search:read\n"},{"name":"query","example":"pickleface","required":"Required","description":"Search query. May contain booleans, etc.\n"},{"name":"sort","example":"timestamp","required":"Optional, default=score","description":"Return matches sorted by either score or timestamp.\n"},{"name":"sort_dir","example":"asc","required":"Optional, default=desc","description":"Change sort direction to ascending (asc) or descending (desc).\n"},{"name":"highlight","example":"true","required":"Optional","description":"Pass a value of true to enable query highlight markers (see below).\n"},{"name":"count","example":"20","required":"Optional, default=20","description":"Number of items to return per page.\n"},{"name":"page","example":"2","required":"Optional, default=1","description":"Page number of results to return.\n"}],"search.messages":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: search:read\n"},{"name":"query","example":"pickleface","required":"Required","description":"Search query. May contains booleans, etc.\n"},{"name":"sort","example":"timestamp","required":"Optional, default=score","description":"Return matches sorted by either score or timestamp.\n"},{"name":"sort_dir","example":"asc","required":"Optional, default=desc","description":"Change sort direction to ascending (asc) or descending (desc).\n"},{"name":"highlight","example":"true","required":"Optional","description":"Pass a value of true to enable query highlight markers (see below).\n"},{"name":"count","example":"20","required":"Optional, default=20","description":"Number of items to return per page.\n"},{"name":"page","example":"2","required":"Optional, default=1","description":"Page number of results to return.\n"}],"stars.add":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: stars:write\n"},{"name":"file","example":"F1234567890","required":"Optional","description":"File to add star to.\n"},{"name":"file_comment","example":"Fc1234567890","required":"Optional","description":"File comment to add star to.\n"},{"name":"channel","example":"C1234567890","required":"Optional","description":"Channel to add star to, or channel where the message to add star to was posted (used with timestamp).\n"},{"name":"timestamp","example":"1234567890.123456","required":"Optional","description":"Timestamp of the message to add star to.\n"}],"stars.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: stars:read\n"},{"name":"count","example":"20","required":"Optional, default=100","description":"Number of items to return per page.\n"},{"name":"page","example":"2","required":"Optional, default=1","description":"Page number of results to return.\n"}],"stars.remove":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: stars:write\n"},{"name":"file","example":"F1234567890","required":"Optional","description":"File to remove star from.\n"},{"name":"file_comment","example":"Fc1234567890","required":"Optional","description":"File comment to remove star from.\n"},{"name":"channel","example":"C1234567890","required":"Optional","description":"Channel to remove star from, or channel where the message to remove star from was posted (used with timestamp).\n"},{"name":"timestamp","example":"1234567890.123456","required":"Optional","description":"Timestamp of the message to remove star from.\n"}],"team.accessLogs":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: admin\n"},{"name":"count","example":"20","required":"Optional, default=100","description":"Number of items to return per page.\n"},{"name":"page","example":"2","required":"Optional, default=1","description":"Page number of results to return.\n"},{"name":"before","example":"1457989166","required":"Optional, default=now","description":"End of time range of logs to include in results (inclusive).\n"}],"team.billableInfo":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: admin\n"},{"name":"user","example":"U1234567890","required":"Optional","description":"A user to retrieve the billable information for. Defaults to all users.\n"}],"team.info":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: team:read\n"}],"team.integrationLogs":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: admin\n"},{"name":"service_id","example":" ","required":"Optional","description":"Filter logs to this service. Defaults to all logs.\n"},{"name":"app_id","example":" ","required":"Optional","description":"Filter logs to this Slack app. Defaults to all logs.\n"},{"name":"user","example":"U1234567890","required":"Optional","description":"Filter logs generated by this user’s actions. Defaults to all logs.\n"},{"name":"change_type","example":"added","required":"Optional","description":"Filter logs with this change type. Defaults to all logs.\n"},{"name":"count","example":"20","required":"Optional, default=100","description":"Number of items to return per page.\n"},{"name":"page","example":"2","required":"Optional, default=1","description":"Page number of results to return.\n"}],"team.profile.get":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users.profile:read\n"},{"name":"visibility","example":"all","required":"Optional","description":"Filter by visibility.\n"}],"usergroups.create":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: usergroups:write\n"},{"name":"name","example":"My Test Team","required":"Required","description":"A name for the User Group. Must be unique among User Groups.\n"},{"name":"handle","example":"marketing","required":"Optional","description":"A mention handle. Must be unique among channels, users and User Groups.\n"},{"name":"description","example":" ","required":"Optional","description":"A short description of the User Group.\n"},{"name":"channels","example":"C1234567890,C2345678901,C3456789012","required":"Optional","description":"A comma separated string of encoded channel IDs for which the User Group uses as a default.\n"},{"name":"include_count","example":"true","required":"Optional","description":"Include the number of users in each User Group.\n"}],"usergroups.disable":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: usergroups:write\n"},{"name":"usergroup","example":"S0604QSJC","required":"Required","description":"The encoded ID of the User Group to disable.\n"},{"name":"include_count","example":"true","required":"Optional","description":"Include the number of users in the User Group.\n"}],"usergroups.enable":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: usergroups:write\n"},{"name":"usergroup","example":"S0604QSJC","required":"Required","description":"The encoded ID of the User Group to enable.\n"},{"name":"include_count","example":"true","required":"Optional","description":"Include the number of users in the User Group.\n"}],"usergroups.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: usergroups:read\n"},{"name":"include_disabled","example":"true","required":"Optional","description":"Include disabled User Groups.\n"},{"name":"include_count","example":"true","required":"Optional","description":"Include the number of users in each User Group.\n"},{"name":"include_users","example":"true","required":"Optional","description":"Include the list of users for each User Group.\n"}],"usergroups.update":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: usergroups:write\n"},{"name":"usergroup","example":"S0604QSJC","required":"Required","description":"The encoded ID of the User Group to update.\n"},{"name":"name","example":"My Test Team","required":"Optional","description":"A name for the User Group. Must be unique among User Groups.\n"},{"name":"handle","example":"marketing","required":"Optional","description":"A mention handle. Must be unique among channels, users and User Groups.\n"},{"name":"description","example":" ","required":"Optional","description":"A short description of the User Group.\n"},{"name":"channels","example":"C1234567890,C2345678901,C3456789012","required":"Optional","description":"A comma separated string of encoded channel IDs for which the User Group uses as a default.\n"},{"name":"include_count","example":"true","required":"Optional","description":"Include the number of users in the User Group.\n"}],"usergroups.users.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: usergroups:read\n"},{"name":"usergroup","example":"S0604QSJC","required":"Required","description":"The encoded ID of the User Group to update.\n"},{"name":"include_disabled","example":"true","required":"Optional","description":"Allow results that involve disabled User Groups.\n"}],"usergroups.users.update":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: usergroups:write\n"},{"name":"usergroup","example":"S0604QSJC","required":"Required","description":"The encoded ID of the User Group to update.\n"},{"name":"users","example":"U060R4BJ4,U060RNRCZ","required":"Required","description":"A comma separated string of encoded user IDs that represent the entire list of users for the User Group.\n"},{"name":"include_count","example":"true","required":"Optional","description":"Include the number of users in the User Group.\n"}],"users.deletePhoto":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users.profile:write\n"}],"users.getPresence":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users:read\n"},{"name":"user","example":"U1234567890","required":"Required","description":"User to get presence info on. Defaults to the authed user.\n"}],"users.identity":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: identity.basic\n"}],"users.info":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users:read\n"},{"name":"user","example":"U1234567890","required":"Required","description":"User to get info on\n"}],"users.list":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users:read\n"},{"name":"presence","example":"true","required":"Optional","description":"Whether to include presence data in the output\n"}],"users.setActive":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users:write\n"}],"users.setPhoto":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users.profile:write\n"},{"name":"image","example":"...","required":"Required","description":"File contents via multipart/form-data.\n"},{"name":"crop_x","example":"10","required":"Optional","description":"X coordinate of top-left corner of crop box\n"},{"name":"crop_y","example":"15","required":"Optional","description":"Y coordinate of top-left corner of crop box\n"},{"name":"crop_w","example":"100","required":"Optional","description":"Width/height of crop box (always square)\n"}],"users.setPresence":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users:write\n"},{"name":"presence","example":"away","required":"Required","description":"Either auto or away\n"}],"users.profile.get":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users.profile:read\n"},{"name":"user","example":"U1234567890","required":"Optional","description":"User to retrieve profile info for\n"},{"name":"include_labels","example":"true","required":"Optional, default=false","description":"Include labels for each ID in custom profile fields\n"}],"users.profile.set":[{"name":"token","example":"xxxx-xxxxxxxxx-xxxx","required":"Required","description":"Authentication token.\nRequires scope: users.profile:write\n"},{"name":"user","example":"U1234567890","required":"Optional","description":"ID of user to change. This argument may only be specified by team admins on paid teams.\n"},{"name":"profile","example":"{ first_name: \"John\", ... }","required":"Optional","description":"Collection of key:value pairs presented as a URL-encoded JSON hash.\n"},{"name":"name","example":"first_name","required":"Optional","description":"Name of a single key to set. Usable only if profile is not passed.\n"},{"name":"value","example":"John","required":"Optional","description":"Value to set a single key to. Usable only if profile is not passed.\n"}]}

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = client;

// generated by ./scripts/generate-stateful-client
function client(token) {
  var applied = {
    auth: {
      test: {}
    },
    bots: {
      info: {}
    },
    channels: {
      archive: {},
      create: {},
      history: {},
      info: {},
      invite: {},
      join: {},
      kick: {},
      leave: {},
      list: {},
      mark: {},
      rename: {},
      replies: {},
      setPurpose: {},
      setTopic: {},
      unarchive: {}
    },
    chat: {
      delete: {},
      meMessage: {},
      postMessage: {},
      unfurl: {},
      update: {}
    },
    dnd: {
      endDnd: {},
      endSnooze: {},
      info: {},
      setSnooze: {},
      teamInfo: {}
    },
    emoji: {
      list: {}
    },
    files: {
      comments: {
        add: {},
        delete: {},
        edit: {}
      },
      delete: {},
      info: {},
      list: {},
      revokePublicURL: {},
      sharedPublicURL: {},
      upload: {}
    },
    groups: {
      archive: {},
      close: {},
      create: {},
      createChild: {},
      history: {},
      info: {},
      invite: {},
      kick: {},
      leave: {},
      list: {},
      mark: {},
      open: {},
      rename: {},
      replies: {},
      setPurpose: {},
      setTopic: {},
      unarchive: {}
    },
    im: {
      close: {},
      history: {},
      list: {},
      mark: {},
      open: {},
      replies: {}
    },
    mpim: {
      close: {},
      history: {},
      list: {},
      mark: {},
      open: {},
      replies: {}
    },
    pins: {
      add: {},
      list: {},
      remove: {}
    },
    reactions: {
      add: {},
      get: {},
      list: {},
      remove: {}
    },
    reminders: {
      add: {},
      complete: {},
      delete: {},
      info: {},
      list: {}
    },
    rtm: {
      connect: {},
      start: {}
    },
    search: {
      all: {},
      files: {},
      messages: {}
    },
    stars: {
      add: {},
      list: {},
      remove: {}
    },
    team: {
      accessLogs: {},
      billableInfo: {},
      info: {},
      integrationLogs: {},
      profile: {
        get: {}
      }
    },
    usergroups: {
      create: {},
      disable: {},
      enable: {},
      list: {},
      update: {},
      users: {
        list: {},
        update: {}
      }
    },
    users: {
      deletePhoto: {},
      getPresence: {},
      identity: {},
      info: {},
      list: {},
      profile: {
        get: {},
        set: {}
      },
      setActive: {},
      setPhoto: {},
      setPresence: {}
    }
  };

  applied.auth.test = function (params, callback) {
    params.token = token;
    __webpack_require__(25).call({}, params, callback);
  };
  applied.bots.info = function (params, callback) {
    params.token = token;
    __webpack_require__(26).call({}, params, callback);
  };
  applied.channels.archive = function (params, callback) {
    params.token = token;
    __webpack_require__(27).call({}, params, callback);
  };
  applied.channels.create = function (params, callback) {
    params.token = token;
    __webpack_require__(28).call({}, params, callback);
  };
  applied.channels.history = function (params, callback) {
    params.token = token;
    __webpack_require__(29).call({}, params, callback);
  };
  applied.channels.info = function (params, callback) {
    params.token = token;
    __webpack_require__(30).call({}, params, callback);
  };
  applied.channels.invite = function (params, callback) {
    params.token = token;
    __webpack_require__(31).call({}, params, callback);
  };
  applied.channels.join = function (params, callback) {
    params.token = token;
    __webpack_require__(32).call({}, params, callback);
  };
  applied.channels.kick = function (params, callback) {
    params.token = token;
    __webpack_require__(33).call({}, params, callback);
  };
  applied.channels.leave = function (params, callback) {
    params.token = token;
    __webpack_require__(34).call({}, params, callback);
  };
  applied.channels.list = function (params, callback) {
    params.token = token;
    __webpack_require__(35).call({}, params, callback);
  };
  applied.channels.mark = function (params, callback) {
    params.token = token;
    __webpack_require__(36).call({}, params, callback);
  };
  applied.channels.rename = function (params, callback) {
    params.token = token;
    __webpack_require__(37).call({}, params, callback);
  };
  applied.channels.replies = function (params, callback) {
    params.token = token;
    __webpack_require__(38).call({}, params, callback);
  };
  applied.channels.setPurpose = function (params, callback) {
    params.token = token;
    __webpack_require__(39).call({}, params, callback);
  };
  applied.channels.setTopic = function (params, callback) {
    params.token = token;
    __webpack_require__(40).call({}, params, callback);
  };
  applied.channels.unarchive = function (params, callback) {
    params.token = token;
    __webpack_require__(41).call({}, params, callback);
  };
  applied.chat.delete = function (params, callback) {
    params.token = token;
    __webpack_require__(42).call({}, params, callback);
  };
  applied.chat.meMessage = function (params, callback) {
    params.token = token;
    __webpack_require__(43).call({}, params, callback);
  };
  applied.chat.postMessage = function (params, callback) {
    params.token = token;
    __webpack_require__(44).call({}, params, callback);
  };
  applied.chat.unfurl = function (params, callback) {
    params.token = token;
    __webpack_require__(45).call({}, params, callback);
  };
  applied.chat.update = function (params, callback) {
    params.token = token;
    __webpack_require__(46).call({}, params, callback);
  };
  applied.dnd.endDnd = function (params, callback) {
    params.token = token;
    __webpack_require__(47).call({}, params, callback);
  };
  applied.dnd.endSnooze = function (params, callback) {
    params.token = token;
    __webpack_require__(48).call({}, params, callback);
  };
  applied.dnd.info = function (params, callback) {
    params.token = token;
    __webpack_require__(49).call({}, params, callback);
  };
  applied.dnd.setSnooze = function (params, callback) {
    params.token = token;
    __webpack_require__(50).call({}, params, callback);
  };
  applied.dnd.teamInfo = function (params, callback) {
    params.token = token;
    __webpack_require__(51).call({}, params, callback);
  };
  applied.emoji.list = function (params, callback) {
    params.token = token;
    __webpack_require__(52).call({}, params, callback);
  };
  applied.files.comments.add = function (params, callback) {
    params.token = token;
    __webpack_require__(53).call({}, params, callback);
  };
  applied.files.comments.delete = function (params, callback) {
    params.token = token;
    __webpack_require__(54).call({}, params, callback);
  };
  applied.files.comments.edit = function (params, callback) {
    params.token = token;
    __webpack_require__(55).call({}, params, callback);
  };
  applied.files.delete = function (params, callback) {
    params.token = token;
    __webpack_require__(56).call({}, params, callback);
  };
  applied.files.info = function (params, callback) {
    params.token = token;
    __webpack_require__(57).call({}, params, callback);
  };
  applied.files.list = function (params, callback) {
    params.token = token;
    __webpack_require__(58).call({}, params, callback);
  };
  applied.files.revokePublicURL = function (params, callback) {
    params.token = token;
    __webpack_require__(59).call({}, params, callback);
  };
  applied.files.sharedPublicURL = function (params, callback) {
    params.token = token;
    __webpack_require__(60).call({}, params, callback);
  };
  applied.files.upload = function (params, callback) {
    params.token = token;
    __webpack_require__(61).call({}, params, callback);
  };
  applied.groups.archive = function (params, callback) {
    params.token = token;
    __webpack_require__(62).call({}, params, callback);
  };
  applied.groups.close = function (params, callback) {
    params.token = token;
    __webpack_require__(63).call({}, params, callback);
  };
  applied.groups.create = function (params, callback) {
    params.token = token;
    __webpack_require__(64).call({}, params, callback);
  };
  applied.groups.createChild = function (params, callback) {
    params.token = token;
    __webpack_require__(65).call({}, params, callback);
  };
  applied.groups.history = function (params, callback) {
    params.token = token;
    __webpack_require__(66).call({}, params, callback);
  };
  applied.groups.info = function (params, callback) {
    params.token = token;
    __webpack_require__(67).call({}, params, callback);
  };
  applied.groups.invite = function (params, callback) {
    params.token = token;
    __webpack_require__(68).call({}, params, callback);
  };
  applied.groups.kick = function (params, callback) {
    params.token = token;
    __webpack_require__(69).call({}, params, callback);
  };
  applied.groups.leave = function (params, callback) {
    params.token = token;
    __webpack_require__(70).call({}, params, callback);
  };
  applied.groups.list = function (params, callback) {
    params.token = token;
    __webpack_require__(71).call({}, params, callback);
  };
  applied.groups.mark = function (params, callback) {
    params.token = token;
    __webpack_require__(72).call({}, params, callback);
  };
  applied.groups.open = function (params, callback) {
    params.token = token;
    __webpack_require__(73).call({}, params, callback);
  };
  applied.groups.rename = function (params, callback) {
    params.token = token;
    __webpack_require__(74).call({}, params, callback);
  };
  applied.groups.replies = function (params, callback) {
    params.token = token;
    __webpack_require__(154).call({}, params, callback);
  };
  applied.groups.setPurpose = function (params, callback) {
    params.token = token;
    __webpack_require__(75).call({}, params, callback);
  };
  applied.groups.setTopic = function (params, callback) {
    params.token = token;
    __webpack_require__(76).call({}, params, callback);
  };
  applied.groups.unarchive = function (params, callback) {
    params.token = token;
    __webpack_require__(77).call({}, params, callback);
  };
  applied.im.close = function (params, callback) {
    params.token = token;
    __webpack_require__(78).call({}, params, callback);
  };
  applied.im.history = function (params, callback) {
    params.token = token;
    __webpack_require__(79).call({}, params, callback);
  };
  applied.im.list = function (params, callback) {
    params.token = token;
    __webpack_require__(80).call({}, params, callback);
  };
  applied.im.mark = function (params, callback) {
    params.token = token;
    __webpack_require__(81).call({}, params, callback);
  };
  applied.im.open = function (params, callback) {
    params.token = token;
    __webpack_require__(82).call({}, params, callback);
  };
  applied.im.replies = function (params, callback) {
    params.token = token;
    __webpack_require__(155).call({}, params, callback);
  };
  applied.mpim.close = function (params, callback) {
    params.token = token;
    __webpack_require__(83).call({}, params, callback);
  };
  applied.mpim.history = function (params, callback) {
    params.token = token;
    __webpack_require__(84).call({}, params, callback);
  };
  applied.mpim.list = function (params, callback) {
    params.token = token;
    __webpack_require__(85).call({}, params, callback);
  };
  applied.mpim.mark = function (params, callback) {
    params.token = token;
    __webpack_require__(86).call({}, params, callback);
  };
  applied.mpim.open = function (params, callback) {
    params.token = token;
    __webpack_require__(87).call({}, params, callback);
  };
  applied.mpim.replies = function (params, callback) {
    params.token = token;
    __webpack_require__(156).call({}, params, callback);
  };
  applied.pins.add = function (params, callback) {
    params.token = token;
    __webpack_require__(88).call({}, params, callback);
  };
  applied.pins.list = function (params, callback) {
    params.token = token;
    __webpack_require__(89).call({}, params, callback);
  };
  applied.pins.remove = function (params, callback) {
    params.token = token;
    __webpack_require__(90).call({}, params, callback);
  };
  applied.reactions.add = function (params, callback) {
    params.token = token;
    __webpack_require__(91).call({}, params, callback);
  };
  applied.reactions.get = function (params, callback) {
    params.token = token;
    __webpack_require__(92).call({}, params, callback);
  };
  applied.reactions.list = function (params, callback) {
    params.token = token;
    __webpack_require__(93).call({}, params, callback);
  };
  applied.reactions.remove = function (params, callback) {
    params.token = token;
    __webpack_require__(94).call({}, params, callback);
  };
  applied.reminders.add = function (params, callback) {
    params.token = token;
    __webpack_require__(95).call({}, params, callback);
  };
  applied.reminders.complete = function (params, callback) {
    params.token = token;
    __webpack_require__(96).call({}, params, callback);
  };
  applied.reminders.delete = function (params, callback) {
    params.token = token;
    __webpack_require__(97).call({}, params, callback);
  };
  applied.reminders.info = function (params, callback) {
    params.token = token;
    __webpack_require__(98).call({}, params, callback);
  };
  applied.reminders.list = function (params, callback) {
    params.token = token;
    __webpack_require__(99).call({}, params, callback);
  };
  applied.rtm.connect = function (params, callback) {
    params.token = token;
    __webpack_require__(100).call({}, params, callback);
  };
  applied.rtm.start = function (params, callback) {
    params.token = token;
    __webpack_require__(13).call({}, params, callback);
  };
  applied.search.all = function (params, callback) {
    params.token = token;
    __webpack_require__(101).call({}, params, callback);
  };
  applied.search.files = function (params, callback) {
    params.token = token;
    __webpack_require__(102).call({}, params, callback);
  };
  applied.search.messages = function (params, callback) {
    params.token = token;
    __webpack_require__(103).call({}, params, callback);
  };
  applied.stars.add = function (params, callback) {
    params.token = token;
    __webpack_require__(104).call({}, params, callback);
  };
  applied.stars.list = function (params, callback) {
    params.token = token;
    __webpack_require__(105).call({}, params, callback);
  };
  applied.stars.remove = function (params, callback) {
    params.token = token;
    __webpack_require__(106).call({}, params, callback);
  };
  applied.team.accessLogs = function (params, callback) {
    params.token = token;
    __webpack_require__(107).call({}, params, callback);
  };
  applied.team.billableInfo = function (params, callback) {
    params.token = token;
    __webpack_require__(108).call({}, params, callback);
  };
  applied.team.info = function (params, callback) {
    params.token = token;
    __webpack_require__(109).call({}, params, callback);
  };
  applied.team.integrationLogs = function (params, callback) {
    params.token = token;
    __webpack_require__(110).call({}, params, callback);
  };
  applied.team.profile.get = function (params, callback) {
    params.token = token;
    __webpack_require__(111).call({}, params, callback);
  };
  applied.usergroups.create = function (params, callback) {
    params.token = token;
    __webpack_require__(112).call({}, params, callback);
  };
  applied.usergroups.disable = function (params, callback) {
    params.token = token;
    __webpack_require__(113).call({}, params, callback);
  };
  applied.usergroups.enable = function (params, callback) {
    params.token = token;
    __webpack_require__(114).call({}, params, callback);
  };
  applied.usergroups.list = function (params, callback) {
    params.token = token;
    __webpack_require__(115).call({}, params, callback);
  };
  applied.usergroups.update = function (params, callback) {
    params.token = token;
    __webpack_require__(116).call({}, params, callback);
  };
  applied.usergroups.users.list = function (params, callback) {
    params.token = token;
    __webpack_require__(117).call({}, params, callback);
  };
  applied.usergroups.users.update = function (params, callback) {
    params.token = token;
    __webpack_require__(118).call({}, params, callback);
  };
  applied.users.deletePhoto = function (params, callback) {
    params.token = token;
    __webpack_require__(157).call({}, params, callback);
  };
  applied.users.getPresence = function (params, callback) {
    params.token = token;
    __webpack_require__(119).call({}, params, callback);
  };
  applied.users.identity = function (params, callback) {
    params.token = token;
    __webpack_require__(120).call({}, params, callback);
  };
  applied.users.info = function (params, callback) {
    params.token = token;
    __webpack_require__(121).call({}, params, callback);
  };
  applied.users.list = function (params, callback) {
    params.token = token;
    __webpack_require__(122).call({}, params, callback);
  };
  applied.users.profile.get = function (params, callback) {
    params.token = token;
    __webpack_require__(123).call({}, params, callback);
  };
  applied.users.profile.set = function (params, callback) {
    params.token = token;
    __webpack_require__(124).call({}, params, callback);
  };
  applied.users.setActive = function (params, callback) {
    params.token = token;
    __webpack_require__(125).call({}, params, callback);
  };
  applied.users.setPhoto = function (params, callback) {
    params.token = token;
    __webpack_require__(158).call({}, params, callback);
  };
  applied.users.setPresence = function (params, callback) {
    params.token = token;
    __webpack_require__(126).call({}, params, callback);
  };

  return applied;
}
module.exports = exports['default'];

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupsreplies;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function groupsreplies(params, callback) {
  var ns = 'groups.replies';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = imreplies;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function imreplies(params, callback) {
  var ns = 'im.replies';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mpimreplies;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function mpimreplies(params, callback) {
  var ns = 'mpim.replies';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usersdeletePhoto;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function usersdeletePhoto(params, callback) {
  var ns = 'users.deletePhoto';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = userssetPhoto;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function userssetPhoto(params, callback) {
  var ns = 'users.setPhoto';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bots = __webpack_require__(26);

var _bots2 = _interopRequireDefault(_bots);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  info: _bots2.default
};
module.exports = exports['default'];

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = authrevoke;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function authrevoke(params, callback) {
  var ns = 'auth.revoke';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _channels = __webpack_require__(27);

var _channels2 = _interopRequireDefault(_channels);

var _channels3 = __webpack_require__(28);

var _channels4 = _interopRequireDefault(_channels3);

var _channels5 = __webpack_require__(29);

var _channels6 = _interopRequireDefault(_channels5);

var _channels7 = __webpack_require__(30);

var _channels8 = _interopRequireDefault(_channels7);

var _channels9 = __webpack_require__(31);

var _channels10 = _interopRequireDefault(_channels9);

var _channels11 = __webpack_require__(32);

var _channels12 = _interopRequireDefault(_channels11);

var _channels13 = __webpack_require__(33);

var _channels14 = _interopRequireDefault(_channels13);

var _channels15 = __webpack_require__(34);

var _channels16 = _interopRequireDefault(_channels15);

var _channels17 = __webpack_require__(35);

var _channels18 = _interopRequireDefault(_channels17);

var _channels19 = __webpack_require__(36);

var _channels20 = _interopRequireDefault(_channels19);

var _channels21 = __webpack_require__(37);

var _channels22 = _interopRequireDefault(_channels21);

var _channels23 = __webpack_require__(38);

var _channels24 = _interopRequireDefault(_channels23);

var _channels25 = __webpack_require__(39);

var _channels26 = _interopRequireDefault(_channels25);

var _channels27 = __webpack_require__(40);

var _channels28 = _interopRequireDefault(_channels27);

var _channels29 = __webpack_require__(41);

var _channels30 = _interopRequireDefault(_channels29);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  archive: _channels2.default,
  create: _channels4.default,
  history: _channels6.default,
  info: _channels8.default,
  invite: _channels10.default,
  join: _channels12.default,
  kick: _channels14.default,
  leave: _channels16.default,
  list: _channels18.default,
  mark: _channels20.default,
  rename: _channels22.default,
  replies: _channels24.default,
  setPurpose: _channels26.default,
  setTopic: _channels28.default,
  unarchive: _channels30.default
};
module.exports = exports['default'];

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _chat = __webpack_require__(42);

var _chat2 = _interopRequireDefault(_chat);

var _chat3 = __webpack_require__(43);

var _chat4 = _interopRequireDefault(_chat3);

var _chat5 = __webpack_require__(44);

var _chat6 = _interopRequireDefault(_chat5);

var _chat7 = __webpack_require__(45);

var _chat8 = _interopRequireDefault(_chat7);

var _chat9 = __webpack_require__(46);

var _chat10 = _interopRequireDefault(_chat9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  delete: _chat2.default,
  meMessage: _chat4.default,
  postMessage: _chat6.default,
  unfurl: _chat8.default,
  update: _chat10.default
};
module.exports = exports['default'];

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _dnd = __webpack_require__(49);

var _dnd2 = _interopRequireDefault(_dnd);

var _dnd3 = __webpack_require__(47);

var _dnd4 = _interopRequireDefault(_dnd3);

var _dnd5 = __webpack_require__(48);

var _dnd6 = _interopRequireDefault(_dnd5);

var _dnd7 = __webpack_require__(50);

var _dnd8 = _interopRequireDefault(_dnd7);

var _dnd9 = __webpack_require__(51);

var _dnd10 = _interopRequireDefault(_dnd9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  info: _dnd2.default, endDnd: _dnd4.default, endSnooze: _dnd6.default, setSnooze: _dnd8.default, teamInfo: _dnd10.default
};
module.exports = exports['default'];

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _files = __webpack_require__(56);

var _files2 = _interopRequireDefault(_files);

var _files3 = __webpack_require__(57);

var _files4 = _interopRequireDefault(_files3);

var _files5 = __webpack_require__(58);

var _files6 = _interopRequireDefault(_files5);

var _files7 = __webpack_require__(61);

var _files8 = _interopRequireDefault(_files7);

var _filesComments = __webpack_require__(53);

var _filesComments2 = _interopRequireDefault(_filesComments);

var _filesComments3 = __webpack_require__(54);

var _filesComments4 = _interopRequireDefault(_filesComments3);

var _filesComments5 = __webpack_require__(55);

var _filesComments6 = _interopRequireDefault(_filesComments5);

var _files9 = __webpack_require__(59);

var _files10 = _interopRequireDefault(_files9);

var _files11 = __webpack_require__(60);

var _files12 = _interopRequireDefault(_files11);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  delete: _files2.default,
  info: _files4.default,
  list: _files6.default,
  upload: _files8.default,
  comments: {
    add: _filesComments2.default,
    delete: _filesComments4.default,
    edit: _filesComments6.default
  },
  revokePublicURL: _files10.default,
  sharedPublicURL: _files12.default
};
module.exports = exports['default'];

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _groups = __webpack_require__(62);

var _groups2 = _interopRequireDefault(_groups);

var _groups3 = __webpack_require__(63);

var _groups4 = _interopRequireDefault(_groups3);

var _groups5 = __webpack_require__(64);

var _groups6 = _interopRequireDefault(_groups5);

var _groups7 = __webpack_require__(65);

var _groups8 = _interopRequireDefault(_groups7);

var _groups9 = __webpack_require__(66);

var _groups10 = _interopRequireDefault(_groups9);

var _groups11 = __webpack_require__(67);

var _groups12 = _interopRequireDefault(_groups11);

var _groups13 = __webpack_require__(68);

var _groups14 = _interopRequireDefault(_groups13);

var _groups15 = __webpack_require__(69);

var _groups16 = _interopRequireDefault(_groups15);

var _groups17 = __webpack_require__(70);

var _groups18 = _interopRequireDefault(_groups17);

var _groups19 = __webpack_require__(71);

var _groups20 = _interopRequireDefault(_groups19);

var _groups21 = __webpack_require__(72);

var _groups22 = _interopRequireDefault(_groups21);

var _groups23 = __webpack_require__(73);

var _groups24 = _interopRequireDefault(_groups23);

var _groups25 = __webpack_require__(74);

var _groups26 = _interopRequireDefault(_groups25);

var _groups27 = __webpack_require__(75);

var _groups28 = _interopRequireDefault(_groups27);

var _groups29 = __webpack_require__(76);

var _groups30 = _interopRequireDefault(_groups29);

var _groups31 = __webpack_require__(77);

var _groups32 = _interopRequireDefault(_groups31);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  archive: _groups2.default,
  close: _groups4.default,
  create: _groups6.default,
  createChild: _groups8.default,
  history: _groups10.default,
  info: _groups12.default,
  invite: _groups14.default,
  kick: _groups16.default,
  leave: _groups18.default,
  list: _groups20.default,
  mark: _groups22.default,
  open: _groups24.default,
  rename: _groups26.default,
  setPurpose: _groups28.default,
  setTopic: _groups30.default,
  unarchive: _groups32.default
};
module.exports = exports['default'];

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _im = __webpack_require__(78);

var _im2 = _interopRequireDefault(_im);

var _im3 = __webpack_require__(79);

var _im4 = _interopRequireDefault(_im3);

var _im5 = __webpack_require__(80);

var _im6 = _interopRequireDefault(_im5);

var _im7 = __webpack_require__(81);

var _im8 = _interopRequireDefault(_im7);

var _im9 = __webpack_require__(82);

var _im10 = _interopRequireDefault(_im9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  close: _im2.default, history: _im4.default, list: _im6.default, mark: _im8.default, open: _im10.default
};
module.exports = exports['default'];

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mpim = __webpack_require__(83);

var _mpim2 = _interopRequireDefault(_mpim);

var _mpim3 = __webpack_require__(84);

var _mpim4 = _interopRequireDefault(_mpim3);

var _mpim5 = __webpack_require__(85);

var _mpim6 = _interopRequireDefault(_mpim5);

var _mpim7 = __webpack_require__(86);

var _mpim8 = _interopRequireDefault(_mpim7);

var _mpim9 = __webpack_require__(87);

var _mpim10 = _interopRequireDefault(_mpim9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  close: _mpim2.default,
  history: _mpim4.default,
  list: _mpim6.default,
  mark: _mpim8.default,
  open: _mpim10.default
};
module.exports = exports['default'];

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = oauthaccess;

var _exec = __webpack_require__(0);

var _exec2 = _interopRequireDefault(_exec);

var _validate = __webpack_require__(1);

var _validate2 = _interopRequireDefault(_validate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// this file was generated by ./scripts/generate-web-api
function oauthaccess(params, callback) {
  var ns = 'oauth.access';
  var err = (0, _validate2.default)(ns, params);
  if (err) {
    callback(err);
  } else {
    (0, _exec2.default)(ns, params, callback);
  }
}
module.exports = exports['default'];

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactions = __webpack_require__(91);

var _reactions2 = _interopRequireDefault(_reactions);

var _reactions3 = __webpack_require__(92);

var _reactions4 = _interopRequireDefault(_reactions3);

var _reactions5 = __webpack_require__(93);

var _reactions6 = _interopRequireDefault(_reactions5);

var _reactions7 = __webpack_require__(94);

var _reactions8 = _interopRequireDefault(_reactions7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  add: _reactions2.default, get: _reactions4.default, list: _reactions6.default, remove: _reactions8.default
};
module.exports = exports['default'];

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reminders = __webpack_require__(95);

var _reminders2 = _interopRequireDefault(_reminders);

var _reminders3 = __webpack_require__(96);

var _reminders4 = _interopRequireDefault(_reminders3);

var _reminders5 = __webpack_require__(97);

var _reminders6 = _interopRequireDefault(_reminders5);

var _reminders7 = __webpack_require__(98);

var _reminders8 = _interopRequireDefault(_reminders7);

var _reminders9 = __webpack_require__(99);

var _reminders10 = _interopRequireDefault(_reminders9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  add: _reminders2.default, complete: _reminders4.default, delete: _reminders6.default, info: _reminders8.default, list: _reminders10.default
};
module.exports = exports['default'];

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pins = __webpack_require__(88);

var _pins2 = _interopRequireDefault(_pins);

var _pins3 = __webpack_require__(89);

var _pins4 = _interopRequireDefault(_pins3);

var _pins5 = __webpack_require__(90);

var _pins6 = _interopRequireDefault(_pins5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  add: _pins2.default, list: _pins4.default, remove: _pins6.default
};
module.exports = exports['default'];

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = client;

var _rtm = __webpack_require__(13);

var _rtm2 = _interopRequireDefault(_rtm);

var _rtm3 = __webpack_require__(173);

var _rtm4 = _interopRequireDefault(_rtm3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// socket factory
function client() {

  // build a new bot every time
  var bot = {
    handlers: {
      started: []
    }
  };

  // add undocumented ping event
  _rtm4.default.push('pong');

  // generate event handler registration methods
  _rtm4.default.forEach(function (e) {
    bot.handlers[e] = [];
    bot[e] = function (handler) {
      bot.handlers[e].push(handler);
    };
  });

  bot.started = function (handler) {
    bot.handlers['started'].push(handler);
  };

  // kicks up a web socket connection
  bot.listen = function botListen(params, callback) {
    (0, _rtm2.default)(params, function (err, data) {
      if (err) {
        if (callback) callback(err);else throw err;
      } else {
        // grab a handle on the socket
        bot.ws = new WebSocket(data.url);
        // delegate everything
        bot.ws.onmessage = function message(e) {
          var json = JSON.parse(e.data);
          // Call all registered handlers for this event, if any
          if (bot.handlers[json.type]) bot.handlers[json.type].forEach(function (m) {
            return m.call({}, json);
          });
        };
        // call started callbacks
        bot.handlers['started'].forEach(function (m) {
          return m.call({}, data);
        });
        if (callback) callback(null, data);
      }
    });
  };

  // closes the socket
  bot.close = function botClose() {
    bot.ws.close();
  };

  //////////
  return bot;
}
module.exports = exports['default'];

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

// generated using ./scripts/generate-all
var events = ['accounts_changed', 'bot_added', 'bot_changed', 'channel_archive', 'channel_created', 'channel_deleted', 'channel_history_changed', 'channel_joined', 'channel_left', 'channel_marked', 'channel_rename', 'channel_unarchive', 'commands_changed', 'dnd_updated', 'dnd_updated_user', 'email_domain_changed', 'emoji_changed', 'file_change', 'file_comment_added', 'file_comment_deleted', 'file_comment_edited', 'file_created', 'file_deleted', 'file_public', 'file_shared', 'file_unshared', 'goodbye', 'group_archive', 'group_close', 'group_history_changed', 'group_joined', 'group_left', 'group_marked', 'group_open', 'group_rename', 'group_unarchive', 'hello', 'im_close', 'im_created', 'im_history_changed', 'im_marked', 'im_open', 'link_shared', 'manual_presence_change', 'member_joined_channel', 'member_left_channel', 'message', 'message.channels', 'message.groups', 'message.im', 'message.mpim', 'pin_added', 'pin_removed', 'pong', 'pref_change', 'presence_change', 'reaction_added', 'reaction_removed', 'reconnect_url', 'star_added', 'star_removed', 'subteam_created', 'subteam_self_added', 'subteam_self_removed', 'subteam_updated', 'team_domain_change', 'team_join', 'team_migration_started', 'team_plan_change', 'team_pref_change', 'team_profile_change', 'team_profile_delete', 'team_profile_reorder', 'team_rename', 'url_verification', 'user_change', 'user_typing'];

exports.default = events;
module.exports = exports['default'];

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _search = __webpack_require__(101);

var _search2 = _interopRequireDefault(_search);

var _search3 = __webpack_require__(102);

var _search4 = _interopRequireDefault(_search3);

var _search5 = __webpack_require__(103);

var _search6 = _interopRequireDefault(_search5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  all: _search2.default, files: _search4.default, messages: _search6.default
};
module.exports = exports['default'];

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stars = __webpack_require__(104);

var _stars2 = _interopRequireDefault(_stars);

var _stars3 = __webpack_require__(105);

var _stars4 = _interopRequireDefault(_stars3);

var _stars5 = __webpack_require__(106);

var _stars6 = _interopRequireDefault(_stars5);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  add: _stars2.default, list: _stars4.default, remove: _stars6.default
};
module.exports = exports['default'];

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _team = __webpack_require__(107);

var _team2 = _interopRequireDefault(_team);

var _team3 = __webpack_require__(108);

var _team4 = _interopRequireDefault(_team3);

var _team5 = __webpack_require__(109);

var _team6 = _interopRequireDefault(_team5);

var _team7 = __webpack_require__(110);

var _team8 = _interopRequireDefault(_team7);

var _teamProfile = __webpack_require__(111);

var _teamProfile2 = _interopRequireDefault(_teamProfile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  accessLogs: _team2.default,
  billableInfo: _team4.default,
  info: _team6.default,
  integrationLogs: _team8.default,
  profile: {
    get: _teamProfile2.default
  }
};
module.exports = exports['default'];

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _usergroups = __webpack_require__(112);

var _usergroups2 = _interopRequireDefault(_usergroups);

var _usergroups3 = __webpack_require__(113);

var _usergroups4 = _interopRequireDefault(_usergroups3);

var _usergroups5 = __webpack_require__(114);

var _usergroups6 = _interopRequireDefault(_usergroups5);

var _usergroups7 = __webpack_require__(115);

var _usergroups8 = _interopRequireDefault(_usergroups7);

var _usergroups9 = __webpack_require__(116);

var _usergroups10 = _interopRequireDefault(_usergroups9);

var _usergroupsUsers = __webpack_require__(117);

var _usergroupsUsers2 = _interopRequireDefault(_usergroupsUsers);

var _usergroupsUsers3 = __webpack_require__(118);

var _usergroupsUsers4 = _interopRequireDefault(_usergroupsUsers3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  create: _usergroups2.default,
  disable: _usergroups4.default,
  enable: _usergroups6.default,
  list: _usergroups8.default,
  update: _usergroups10.default,
  users: {
    list: _usergroupsUsers2.default,
    update: _usergroupsUsers4.default
  }
};
module.exports = exports['default'];

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _users = __webpack_require__(119);

var _users2 = _interopRequireDefault(_users);

var _usersProfile = __webpack_require__(123);

var _usersProfile2 = _interopRequireDefault(_usersProfile);

var _users3 = __webpack_require__(120);

var _users4 = _interopRequireDefault(_users3);

var _users5 = __webpack_require__(121);

var _users6 = _interopRequireDefault(_users5);

var _users7 = __webpack_require__(122);

var _users8 = _interopRequireDefault(_users7);

var _users9 = __webpack_require__(125);

var _users10 = _interopRequireDefault(_users9);

var _users11 = __webpack_require__(126);

var _users12 = _interopRequireDefault(_users11);

var _usersProfile3 = __webpack_require__(124);

var _usersProfile4 = _interopRequireDefault(_usersProfile3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  getPresence: _users2.default,
  identity: _users4.default,
  info: _users6.default,
  list: _users8.default,
  profile: {
    get: _usersProfile2.default,
    set: _usersProfile4.default
  },
  setActive: _users10.default,
  setPresence: _users12.default
};
module.exports = exports['default'];

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

// version: 0.7.1
// date: Sat Jul 22 2017 20:17:49 GMT+0100 (GMT Daylight Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("Syncher", [], factory);
	else if(typeof exports === 'object')
		exports["Syncher"] = factory();
	else
		root[""] = root[""] || {}, root[""]["Syncher"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 142);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

var core = module.exports = {version: '2.4.0'};
if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ }),
/* 1 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(11)(function(){
  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
});

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var store      = __webpack_require__(30)('wks')
  , uid        = __webpack_require__(23)
  , Symbol     = __webpack_require__(1).Symbol
  , USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function(name){
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var anObject       = __webpack_require__(5)
  , IE8_DOM_DEFINE = __webpack_require__(25)
  , toPrimitive    = __webpack_require__(21)
  , dP             = Object.defineProperty;

exports.f = __webpack_require__(2) ? Object.defineProperty : function defineProperty(O, P, Attributes){
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if(IE8_DOM_DEFINE)try {
    return dP(O, P, Attributes);
  } catch(e){ /* empty */ }
  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
  if('value' in Attributes)O[P] = Attributes.value;
  return O;
};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(6);
module.exports = function(it){
  if(!isObject(it))throw TypeError(it + ' is not an object!');
  return it;
};

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = function(it){
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var dP         = __webpack_require__(4)
  , createDesc = __webpack_require__(15);
module.exports = __webpack_require__(2) ? function(object, key, value){
  return dP.f(object, key, createDesc(1, value));
} : function(object, key, value){
  object[key] = value;
  return object;
};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var global    = __webpack_require__(1)
  , core      = __webpack_require__(0)
  , ctx       = __webpack_require__(14)
  , hide      = __webpack_require__(7)
  , PROTOTYPE = 'prototype';

var $export = function(type, name, source){
  var IS_FORCED = type & $export.F
    , IS_GLOBAL = type & $export.G
    , IS_STATIC = type & $export.S
    , IS_PROTO  = type & $export.P
    , IS_BIND   = type & $export.B
    , IS_WRAP   = type & $export.W
    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
    , expProto  = exports[PROTOTYPE]
    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
    , key, own, out;
  if(IS_GLOBAL)source = name;
  for(key in source){
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if(own && key in exports)continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function(C){
      var F = function(a, b, c){
        if(this instanceof C){
          switch(arguments.length){
            case 0: return new C;
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if(IS_PROTO){
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library` 
module.exports = $export;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(33);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = function(exec){
  try {
    return !!exec();
  } catch(e){
    return true;
  }
};

/***/ }),
/* 12 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function(it, key){
  return hasOwnProperty.call(it, key);
};

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(56)
  , defined = __webpack_require__(24);
module.exports = function(it){
  return IObject(defined(it));
};

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(19);
module.exports = function(fn, that, length){
  aFunction(fn);
  if(that === undefined)return fn;
  switch(length){
    case 1: return function(a){
      return fn.call(that, a);
    };
    case 2: return function(a, b){
      return fn.call(that, a, b);
    };
    case 3: return function(a, b, c){
      return fn.call(that, a, b, c);
    };
  }
  return function(/* ...args */){
    return fn.apply(that, arguments);
  };
};

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = function(bitmap, value){
  return {
    enumerable  : !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable    : !(bitmap & 4),
    value       : value
  };
};

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = {};

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(6)
  , document = __webpack_require__(1).document
  // in old IE typeof document.createElement is 'object'
  , is = isObject(document) && isObject(document.createElement);
module.exports = function(it){
  return is ? document.createElement(it) : {};
};

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys       = __webpack_require__(44)
  , enumBugKeys = __webpack_require__(29);

module.exports = Object.keys || function keys(O){
  return $keys(O, enumBugKeys);
};

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = function(it){
  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
  return it;
};

/***/ }),
/* 20 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function(it){
  return toString.call(it).slice(8, -1);
};

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(6);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function(it, S){
  if(!isObject(it))return it;
  var fn, val;
  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(4).f
  , has = __webpack_require__(12)
  , TAG = __webpack_require__(3)('toStringTag');

module.exports = function(it, tag, stat){
  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
};

/***/ }),
/* 23 */
/***/ (function(module, exports) {

var id = 0
  , px = Math.random();
module.exports = function(key){
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

/***/ }),
/* 24 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function(it){
  if(it == undefined)throw TypeError("Can't call method on  " + it);
  return it;
};

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(2) && !__webpack_require__(11)(function(){
  return Object.defineProperty(__webpack_require__(17)('div'), 'a', {get: function(){ return 7; }}).a != 7;
});

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = true;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(30)('keys')
  , uid    = __webpack_require__(23);
module.exports = function(key){
  return shared[key] || (shared[key] = uid(key));
};

/***/ }),
/* 28 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil  = Math.ceil
  , floor = Math.floor;
module.exports = function(it){
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

/***/ }),
/* 29 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(1)
  , SHARED = '__core-js_shared__'
  , store  = global[SHARED] || (global[SHARED] = {});
module.exports = function(key){
  return store[key] || (store[key] = {});
};

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(80), __esModule: true };

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(24);
module.exports = function(it){
  return Object(defined(it));
};

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(36), __esModule: true };

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(76);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(75);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(60);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(60);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(38);
var $Object = __webpack_require__(0).Object;
module.exports = function defineProperty(it, key, desc){
  return $Object.defineProperty(it, key, desc);
};

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject    = __webpack_require__(5)
  , dPs         = __webpack_require__(65)
  , enumBugKeys = __webpack_require__(29)
  , IE_PROTO    = __webpack_require__(27)('IE_PROTO')
  , Empty       = function(){ /* empty */ }
  , PROTOTYPE   = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function(){
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(17)('iframe')
    , i      = enumBugKeys.length
    , lt     = '<'
    , gt     = '>'
    , iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(42).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties){
  var result;
  if(O !== null){
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty;
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(9);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(2), 'Object', {defineProperty: __webpack_require__(4).f});

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY        = __webpack_require__(26)
  , $export        = __webpack_require__(9)
  , redefine       = __webpack_require__(46)
  , hide           = __webpack_require__(7)
  , has            = __webpack_require__(12)
  , Iterators      = __webpack_require__(16)
  , $iterCreate    = __webpack_require__(63)
  , setToStringTag = __webpack_require__(22)
  , getPrototypeOf = __webpack_require__(43)
  , ITERATOR       = __webpack_require__(3)('iterator')
  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
  , FF_ITERATOR    = '@@iterator'
  , KEYS           = 'keys'
  , VALUES         = 'values';

var returnThis = function(){ return this; };

module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
  $iterCreate(Constructor, NAME, next);
  var getMethod = function(kind){
    if(!BUGGY && kind in proto)return proto[kind];
    switch(kind){
      case KEYS: return function keys(){ return new Constructor(this, kind); };
      case VALUES: return function values(){ return new Constructor(this, kind); };
    } return function entries(){ return new Constructor(this, kind); };
  };
  var TAG        = NAME + ' Iterator'
    , DEF_VALUES = DEFAULT == VALUES
    , VALUES_BUG = false
    , proto      = Base.prototype
    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
    , $default   = $native || getMethod(DEFAULT)
    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
    , methods, key, IteratorPrototype;
  // Fix native
  if($anyNative){
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
    if(IteratorPrototype !== Object.prototype){
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if(DEF_VALUES && $native && $native.name !== VALUES){
    VALUES_BUG = true;
    $default = function values(){ return $native.call(this); };
  }
  // Define iterator
  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG]  = returnThis;
  if(DEFAULT){
    methods = {
      values:  DEF_VALUES ? $default : getMethod(VALUES),
      keys:    IS_SET     ? $default : getMethod(KEYS),
      entries: $entries
    };
    if(FORCED)for(key in methods){
      if(!(key in proto))redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(53), __esModule: true };

/***/ }),
/* 41 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(1).document && document.documentElement;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has         = __webpack_require__(12)
  , toObject    = __webpack_require__(32)
  , IE_PROTO    = __webpack_require__(27)('IE_PROTO')
  , ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function(O){
  O = toObject(O);
  if(has(O, IE_PROTO))return O[IE_PROTO];
  if(typeof O.constructor == 'function' && O instanceof O.constructor){
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

var has          = __webpack_require__(12)
  , toIObject    = __webpack_require__(13)
  , arrayIndexOf = __webpack_require__(62)(false)
  , IE_PROTO     = __webpack_require__(27)('IE_PROTO');

module.exports = function(object, names){
  var O      = toIObject(object)
    , i      = 0
    , result = []
    , key;
  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while(names.length > i)if(has(O, key = names[i++])){
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(9)
  , core    = __webpack_require__(0)
  , fails   = __webpack_require__(11);
module.exports = function(KEY, exec){
  var fn  = (core.Object || {})[KEY] || Object[KEY]
    , exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
};

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(7);

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(28)
  , min       = Math.min;
module.exports = function(it){
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var global         = __webpack_require__(1)
  , core           = __webpack_require__(0)
  , LIBRARY        = __webpack_require__(26)
  , wksExt         = __webpack_require__(49)
  , defineProperty = __webpack_require__(4).f;
module.exports = function(name){
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
};

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(3);

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at  = __webpack_require__(67)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(39)(String, 'String', function(iterated){
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , index = this._i
    , point;
  if(index >= O.length)return {value: undefined, done: true};
  point = $at(O, index);
  this._i += point.length;
  return {value: point, done: false};
});

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(70);
var global        = __webpack_require__(1)
  , hide          = __webpack_require__(7)
  , Iterators     = __webpack_require__(16)
  , TO_STRING_TAG = __webpack_require__(3)('toStringTag');

for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
  var NAME       = collections[i]
    , Collection = global[NAME]
    , proto      = Collection && Collection.prototype;
  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

/***/ }),
/* 52 */,
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

var core  = __webpack_require__(0)
  , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});
module.exports = function stringify(it){ // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};

/***/ }),
/* 54 */
/***/ (function(module, exports) {



/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(20)
  , TAG = __webpack_require__(3)('toStringTag')
  // ES3 wrong here
  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function(it, key){
  try {
    return it[key];
  } catch(e){ /* empty */ }
};

module.exports = function(it){
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(20);
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
  return cof(it) == 'String' ? it.split('') : Object(it);
};

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

var pIE            = __webpack_require__(41)
  , createDesc     = __webpack_require__(15)
  , toIObject      = __webpack_require__(13)
  , toPrimitive    = __webpack_require__(21)
  , has            = __webpack_require__(12)
  , IE8_DOM_DEFINE = __webpack_require__(25)
  , gOPD           = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(2) ? gOPD : function getOwnPropertyDescriptor(O, P){
  O = toIObject(O);
  P = toPrimitive(P, true);
  if(IE8_DOM_DEFINE)try {
    return gOPD(O, P);
  } catch(e){ /* empty */ }
  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
};

/***/ }),
/* 58 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(81), __esModule: true };

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(78);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(77);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 61 */
/***/ (function(module, exports) {

module.exports = function(){ /* empty */ };

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(13)
  , toLength  = __webpack_require__(47)
  , toIndex   = __webpack_require__(69);
module.exports = function(IS_INCLUDES){
  return function($this, el, fromIndex){
    var O      = toIObject($this)
      , length = toLength(O.length)
      , index  = toIndex(fromIndex, length)
      , value;
    // Array#includes uses SameValueZero equality algorithm
    if(IS_INCLUDES && el != el)while(length > index){
      value = O[index++];
      if(value != value)return true;
    // Array#toIndex ignores holes, Array#includes - not
    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
      if(O[index] === el)return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create         = __webpack_require__(37)
  , descriptor     = __webpack_require__(15)
  , setToStringTag = __webpack_require__(22)
  , IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(7)(IteratorPrototype, __webpack_require__(3)('iterator'), function(){ return this; });

module.exports = function(Constructor, NAME, next){
  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
  setToStringTag(Constructor, NAME + ' Iterator');
};

/***/ }),
/* 64 */
/***/ (function(module, exports) {

module.exports = function(done, value){
  return {value: value, done: !!done};
};

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var dP       = __webpack_require__(4)
  , anObject = __webpack_require__(5)
  , getKeys  = __webpack_require__(18);

module.exports = __webpack_require__(2) ? Object.defineProperties : function defineProperties(O, Properties){
  anObject(O);
  var keys   = getKeys(Properties)
    , length = keys.length
    , i = 0
    , P;
  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys      = __webpack_require__(44)
  , hiddenKeys = __webpack_require__(29).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
  return $keys(O, hiddenKeys);
};

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(28)
  , defined   = __webpack_require__(24);
// true  -> String#at
// false -> String#codePointAt
module.exports = function(TO_STRING){
  return function(that, pos){
    var s = String(defined(that))
      , i = toInteger(pos)
      , l = s.length
      , a, b;
    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var ctx                = __webpack_require__(14)
  , invoke             = __webpack_require__(89)
  , html               = __webpack_require__(42)
  , cel                = __webpack_require__(17)
  , global             = __webpack_require__(1)
  , process            = global.process
  , setTask            = global.setImmediate
  , clearTask          = global.clearImmediate
  , MessageChannel     = global.MessageChannel
  , counter            = 0
  , queue              = {}
  , ONREADYSTATECHANGE = 'onreadystatechange'
  , defer, channel, port;
var run = function(){
  var id = +this;
  if(queue.hasOwnProperty(id)){
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function(event){
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if(!setTask || !clearTask){
  setTask = function setImmediate(fn){
    var args = [], i = 1;
    while(arguments.length > i)args.push(arguments[i++]);
    queue[++counter] = function(){
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id){
    delete queue[id];
  };
  // Node.js 0.8-
  if(__webpack_require__(20)(process) == 'process'){
    defer = function(id){
      process.nextTick(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if(MessageChannel){
    channel = new MessageChannel;
    port    = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
    defer = function(id){
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if(ONREADYSTATECHANGE in cel('script')){
    defer = function(id){
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function(id){
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set:   setTask,
  clear: clearTask
};

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(28)
  , max       = Math.max
  , min       = Math.min;
module.exports = function(index, length){
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(61)
  , step             = __webpack_require__(64)
  , Iterators        = __webpack_require__(16)
  , toIObject        = __webpack_require__(13);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(39)(Array, 'Array', function(iterated, kind){
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , kind  = this._k
    , index = this._i++;
  if(!O || index >= O.length){
    this._t = undefined;
    return step(1);
  }
  if(kind == 'keys'  )return step(0, index);
  if(kind == 'values')return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = __webpack_require__(40);

var _stringify2 = _interopRequireDefault(_stringify);

var _keys = __webpack_require__(59);

var _keys2 = _interopRequireDefault(_keys);

exports.divideURL = divideURL;
exports.divideEmail = divideEmail;
exports.emptyObject = emptyObject;
exports.deepClone = deepClone;
exports.getUserURLFromEmail = getUserURLFromEmail;
exports.getUserEmailFromURL = getUserEmailFromURL;
exports.convertToUserURL = convertToUserURL;
exports.checkAttribute = checkAttribute;
exports.parseAttributes = parseAttributes;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/
/**
 * Support module with some functions will be useful
 * @module utils
 */

/**
 * @typedef divideURL
 * @type Object
 * @property {string} type The type of URL
 * @property {string} domain The domain of URL
 * @property {string} identity The identity of URL
 */

/**
 * Divide an url in type, domain and identity
 * @param  {URL.URL} url - url address
 * @return {divideURL} the result of divideURL
 */
function divideURL(url) {

  if (!url) throw Error('URL is needed to split');

  function recurse(value) {
    var regex = /([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._\+~#=]{2,256})([-a-zA-Z0-9@:%._\+~#=\/]*)/gi;
    var subst = '$1,$3,$4';
    var parts = value.replace(regex, subst).split(',');
    return parts;
  }

  var parts = recurse(url);

  // If the url has no scheme
  if (parts[0] === url && !parts[0].includes('@')) {

    var _result = {
      type: "",
      domain: url,
      identity: ""
    };

    console.error('[DivideURL] DivideURL don\'t support url without scheme. Please review your url address', url);

    return _result;
  }

  // check if the url has the scheme and includes an @
  if (parts[0] === url && parts[0].includes('@')) {
    var scheme = parts[0] === url ? 'smtp' : parts[0];
    parts = recurse(scheme + '://' + parts[0]);
  }

  // if the domain includes an @, divide it to domain and identity respectively
  if (parts[1].includes('@')) {
    parts[2] = parts[0] + '://' + parts[1];
    parts[1] = parts[1].substr(parts[1].indexOf('@') + 1);
  } /*else if (parts[2].includes('/')) {
    parts[2] = parts[2].substr(parts[2].lastIndexOf('/')+1);
    }*/

  var result = {
    type: parts[0],
    domain: parts[1],
    identity: parts[2]
  };

  return result;
}

function divideEmail(email) {
  var indexOfAt = email.indexOf('@');

  var result = {
    username: email.substring(0, indexOfAt),
    domain: email.substring(indexOfAt + 1, email.length)
  };

  return result;
}

/**
 * Check if an Object is empty
 * @param  {Object} object Object to be checked
 * @return {Boolean}       status of Object, empty or not (true|false);
 */
function emptyObject(object) {
  return (0, _keys2.default)(object).length > 0 ? false : true;
}

/**
 * Make a COPY of the original data
 * @param  {Object}  obj - object to be cloned
 * @return {Object}
 */
function deepClone(obj) {
  //TODO: simple but inefficient JSON deep clone...
  if (obj) return JSON.parse((0, _stringify2.default)(obj));
}

/**
 * Obtains the user URL that corresponds to a given email
 * @param  {string} userEmail The user email
 * @return {URL.URL} userURL The user URL
 */
function getUserURLFromEmail(userEmail) {
  var indexOfAt = userEmail.indexOf('@');
  return 'user://' + userEmail.substring(indexOfAt + 1, userEmail.length) + '/' + userEmail.substring(0, indexOfAt);
}

/**
 * Obtains the user email that corresponds to a given URL
 * @param  {URL.URL} userURL The user URL
 * @return {string} userEmail The user email
 */
function getUserEmailFromURL(userURL) {
  var url = divideURL(userURL);
  return url.identity.replace('/', '') + '@' + url.domain; // identity field has '/exampleID' instead of 'exampleID'
}

/**
 * Check if the user identifier is already in the URL format, if not, convert to URL format
 * @param  {string}   identifier  user identifier
 * @return {string}   userURL    the user URL
 */
function convertToUserURL(identifier) {

  // check if the identifier is already in the url format
  if (identifier.substring(0, 7) === 'user://') {
    var dividedURL = divideURL(identifier);

    //check if the url is well formated
    if (dividedURL.domain && dividedURL.identity) {
      return identifier;
    } else {
      throw 'userURL with wrong format';
    }

    //if not, convert the user email to URL format
  } else {
    return getUserURLFromEmail(identifier);
  }
}

function checkAttribute(path) {

  var regex = /((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9\.]+@[a-zA-Z0-9]+(\-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm;

  var list = [];
  var final = [];
  var test = path.match(regex);

  if (test == null) {
    final = path.split('.');
  } else {
    var m = void 0;
    while ((m = regex.exec(path)) !== null) {
      // This is necessary to avoid infinite loops with zero-width matches
      if (m.index === regex.lastIndex) {
        regex.lastIndex++;
      }

      // The result can be accessed through the `m`-variable.
      m.forEach(function (match, groupIndex) {
        if (groupIndex === 0) {
          list.push(match);
        }
      });
    }
    var result = void 0;
    list.forEach(function (url) {
      result = path.replace(url, '*+*');

      final = result.split('.').map(function (item) {
        if (item === '*+*') {
          return url;
        }
        return item;
      });
    });
  }

  console.log('[ServiceFramework.Utils.checkAttribute]', final);
  return final;
}

function parseAttributes(path) {
  var regex = /([0-9a-zA-Z][-\w]*):\/\//g;

  var string3 = 'identity';

  if (!path.includes('://')) {
    return path.split('.');
  } else {
    var string1 = path.split(regex)[0];

    var array1 = string1.split('.');

    var string2 = path.replace(string1, '');

    if (path.includes(string3)) {

      var array2 = string2.split(string3 + '.');

      console.log('array2 ' + array2);

      string2 = array2[0].slice('.', -1);

      array2 = array2[1].split('.');

      array1.push(string2, string3);

      array1 = array1.concat(array2);
    } else {
      array1.push(string2);
    }

    return array1.filter(Boolean);
  }
}

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(83), __esModule: true };

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var META     = __webpack_require__(23)('meta')
  , isObject = __webpack_require__(6)
  , has      = __webpack_require__(12)
  , setDesc  = __webpack_require__(4).f
  , id       = 0;
var isExtensible = Object.isExtensible || function(){
  return true;
};
var FREEZE = !__webpack_require__(11)(function(){
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function(it){
  setDesc(it, META, {value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  }});
};
var fastKey = function(it, create){
  // return primitive with prefix
  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return 'F';
    // not necessary to add metadata
    if(!create)return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function(it, create){
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return true;
    // not necessary to add metadata
    if(!create)return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function(it){
  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY:      META,
  NEED:     false,
  fastKey:  fastKey,
  getWeak:  getWeak,
  onFreeze: onFreeze
};

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var classof   = __webpack_require__(55)
  , ITERATOR  = __webpack_require__(3)('iterator')
  , Iterators = __webpack_require__(16);
module.exports = __webpack_require__(0).getIteratorMethod = function(it){
  if(it != undefined)return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(79), __esModule: true };

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(82), __esModule: true };

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(84), __esModule: true };

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(85), __esModule: true };

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(101);
var $Object = __webpack_require__(0).Object;
module.exports = function create(P, D){
  return $Object.create(P, D);
};

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(102);
module.exports = __webpack_require__(0).Object.getPrototypeOf;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(103);
module.exports = __webpack_require__(0).Object.keys;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(104);
module.exports = __webpack_require__(0).Object.setPrototypeOf;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(54);
__webpack_require__(50);
__webpack_require__(51);
__webpack_require__(105);
module.exports = __webpack_require__(0).Promise;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(106);
__webpack_require__(54);
__webpack_require__(107);
__webpack_require__(108);
module.exports = __webpack_require__(0).Symbol;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(50);
__webpack_require__(51);
module.exports = __webpack_require__(49).f('iterator');

/***/ }),
/* 86 */
/***/ (function(module, exports) {

module.exports = function(it, Constructor, name, forbiddenField){
  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(18)
  , gOPS    = __webpack_require__(58)
  , pIE     = __webpack_require__(41);
module.exports = function(it){
  var result     = getKeys(it)
    , getSymbols = gOPS.f;
  if(getSymbols){
    var symbols = getSymbols(it)
      , isEnum  = pIE.f
      , i       = 0
      , key;
    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
  } return result;
};

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var ctx         = __webpack_require__(14)
  , call        = __webpack_require__(92)
  , isArrayIter = __webpack_require__(90)
  , anObject    = __webpack_require__(5)
  , toLength    = __webpack_require__(47)
  , getIterFn   = __webpack_require__(74)
  , BREAK       = {}
  , RETURN      = {};
var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
    , f      = ctx(fn, that, entries ? 2 : 1)
    , index  = 0
    , length, step, iterator, result;
  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if(result === BREAK || result === RETURN)return result;
  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
    result = call(iterator, f, step.value, entries);
    if(result === BREAK || result === RETURN)return result;
  }
};
exports.BREAK  = BREAK;
exports.RETURN = RETURN;

/***/ }),
/* 89 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function(fn, args, that){
  var un = that === undefined;
  switch(args.length){
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return              fn.apply(that, args);
};

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators  = __webpack_require__(16)
  , ITERATOR   = __webpack_require__(3)('iterator')
  , ArrayProto = Array.prototype;

module.exports = function(it){
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(20);
module.exports = Array.isArray || function isArray(arg){
  return cof(arg) == 'Array';
};

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(5);
module.exports = function(iterator, fn, value, entries){
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch(e){
    var ret = iterator['return'];
    if(ret !== undefined)anObject(ret.call(iterator));
    throw e;
  }
};

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR     = __webpack_require__(3)('iterator')
  , SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function(){ SAFE_CLOSING = true; };
  Array.from(riter, function(){ throw 2; });
} catch(e){ /* empty */ }

module.exports = function(exec, skipClosing){
  if(!skipClosing && !SAFE_CLOSING)return false;
  var safe = false;
  try {
    var arr  = [7]
      , iter = arr[ITERATOR]();
    iter.next = function(){ return {done: safe = true}; };
    arr[ITERATOR] = function(){ return iter; };
    exec(arr);
  } catch(e){ /* empty */ }
  return safe;
};

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys   = __webpack_require__(18)
  , toIObject = __webpack_require__(13);
module.exports = function(object, el){
  var O      = toIObject(object)
    , keys   = getKeys(O)
    , length = keys.length
    , index  = 0
    , key;
  while(length > index)if(O[key = keys[index++]] === el)return key;
};

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var global    = __webpack_require__(1)
  , macrotask = __webpack_require__(68).set
  , Observer  = global.MutationObserver || global.WebKitMutationObserver
  , process   = global.process
  , Promise   = global.Promise
  , isNode    = __webpack_require__(20)(process) == 'process';

module.exports = function(){
  var head, last, notify;

  var flush = function(){
    var parent, fn;
    if(isNode && (parent = process.domain))parent.exit();
    while(head){
      fn   = head.fn;
      head = head.next;
      try {
        fn();
      } catch(e){
        if(head)notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if(parent)parent.enter();
  };

  // Node.js
  if(isNode){
    notify = function(){
      process.nextTick(flush);
    };
  // browsers with MutationObserver
  } else if(Observer){
    var toggle = true
      , node   = document.createTextNode('');
    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
    notify = function(){
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if(Promise && Promise.resolve){
    var promise = Promise.resolve();
    notify = function(){
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function(){
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function(fn){
    var task = {fn: fn, next: undefined};
    if(last)last.next = task;
    if(!head){
      head = task;
      notify();
    } last = task;
  };
};

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(13)
  , gOPN      = __webpack_require__(66).f
  , toString  = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function(it){
  try {
    return gOPN(it);
  } catch(e){
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it){
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(7);
module.exports = function(target, src, safe){
  for(var key in src){
    if(safe && target[key])target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(6)
  , anObject = __webpack_require__(5);
var check = function(O, proto){
  anObject(O);
  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function(test, buggy, set){
      try {
        set = __webpack_require__(14)(Function.call, __webpack_require__(57).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch(e){ buggy = true; }
      return function setPrototypeOf(O, proto){
        check(O, proto);
        if(buggy)O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global      = __webpack_require__(1)
  , core        = __webpack_require__(0)
  , dP          = __webpack_require__(4)
  , DESCRIPTORS = __webpack_require__(2)
  , SPECIES     = __webpack_require__(3)('species');

module.exports = function(KEY){
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
    configurable: true,
    get: function(){ return this; }
  });
};

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject  = __webpack_require__(5)
  , aFunction = __webpack_require__(19)
  , SPECIES   = __webpack_require__(3)('species');
module.exports = function(O, D){
  var C = anObject(O).constructor, S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(9)
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', {create: __webpack_require__(37)});

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject        = __webpack_require__(32)
  , $getPrototypeOf = __webpack_require__(43);

__webpack_require__(45)('getPrototypeOf', function(){
  return function getPrototypeOf(it){
    return $getPrototypeOf(toObject(it));
  };
});

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(32)
  , $keys    = __webpack_require__(18);

__webpack_require__(45)('keys', function(){
  return function keys(it){
    return $keys(toObject(it));
  };
});

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(9);
$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(98).set});

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY            = __webpack_require__(26)
  , global             = __webpack_require__(1)
  , ctx                = __webpack_require__(14)
  , classof            = __webpack_require__(55)
  , $export            = __webpack_require__(9)
  , isObject           = __webpack_require__(6)
  , aFunction          = __webpack_require__(19)
  , anInstance         = __webpack_require__(86)
  , forOf              = __webpack_require__(88)
  , speciesConstructor = __webpack_require__(100)
  , task               = __webpack_require__(68).set
  , microtask          = __webpack_require__(95)()
  , PROMISE            = 'Promise'
  , TypeError          = global.TypeError
  , process            = global.process
  , $Promise           = global[PROMISE]
  , process            = global.process
  , isNode             = classof(process) == 'process'
  , empty              = function(){ /* empty */ }
  , Internal, GenericPromiseCapability, Wrapper;

var USE_NATIVE = !!function(){
  try {
    // correct subclassing with @@species support
    var promise     = $Promise.resolve(1)
      , FakePromise = (promise.constructor = {})[__webpack_require__(3)('species')] = function(exec){ exec(empty, empty); };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
  } catch(e){ /* empty */ }
}();

// helpers
var sameConstructor = function(a, b){
  // with library wrapper special case
  return a === b || a === $Promise && b === Wrapper;
};
var isThenable = function(it){
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var newPromiseCapability = function(C){
  return sameConstructor($Promise, C)
    ? new PromiseCapability(C)
    : new GenericPromiseCapability(C);
};
var PromiseCapability = GenericPromiseCapability = function(C){
  var resolve, reject;
  this.promise = new C(function($$resolve, $$reject){
    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject  = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject  = aFunction(reject);
};
var perform = function(exec){
  try {
    exec();
  } catch(e){
    return {error: e};
  }
};
var notify = function(promise, isReject){
  if(promise._n)return;
  promise._n = true;
  var chain = promise._c;
  microtask(function(){
    var value = promise._v
      , ok    = promise._s == 1
      , i     = 0;
    var run = function(reaction){
      var handler = ok ? reaction.ok : reaction.fail
        , resolve = reaction.resolve
        , reject  = reaction.reject
        , domain  = reaction.domain
        , result, then;
      try {
        if(handler){
          if(!ok){
            if(promise._h == 2)onHandleUnhandled(promise);
            promise._h = 1;
          }
          if(handler === true)result = value;
          else {
            if(domain)domain.enter();
            result = handler(value);
            if(domain)domain.exit();
          }
          if(result === reaction.promise){
            reject(TypeError('Promise-chain cycle'));
          } else if(then = isThenable(result)){
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch(e){
        reject(e);
      }
    };
    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if(isReject && !promise._h)onUnhandled(promise);
  });
};
var onUnhandled = function(promise){
  task.call(global, function(){
    var value = promise._v
      , abrupt, handler, console;
    if(isUnhandled(promise)){
      abrupt = perform(function(){
        if(isNode){
          process.emit('unhandledRejection', value, promise);
        } else if(handler = global.onunhandledrejection){
          handler({promise: promise, reason: value});
        } else if((console = global.console) && console.error){
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if(abrupt)throw abrupt.error;
  });
};
var isUnhandled = function(promise){
  if(promise._h == 1)return false;
  var chain = promise._a || promise._c
    , i     = 0
    , reaction;
  while(chain.length > i){
    reaction = chain[i++];
    if(reaction.fail || !isUnhandled(reaction.promise))return false;
  } return true;
};
var onHandleUnhandled = function(promise){
  task.call(global, function(){
    var handler;
    if(isNode){
      process.emit('rejectionHandled', promise);
    } else if(handler = global.onrejectionhandled){
      handler({promise: promise, reason: promise._v});
    }
  });
};
var $reject = function(value){
  var promise = this;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if(!promise._a)promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function(value){
  var promise = this
    , then;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if(promise === value)throw TypeError("Promise can't be resolved itself");
    if(then = isThenable(value)){
      microtask(function(){
        var wrapper = {_w: promise, _d: false}; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch(e){
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch(e){
    $reject.call({_w: promise, _d: false}, e); // wrap
  }
};

// constructor polyfill
if(!USE_NATIVE){
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor){
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch(err){
      $reject.call(this, err);
    }
  };
  Internal = function Promise(executor){
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(97)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected){
      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail   = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if(this._a)this._a.push(reaction);
      if(this._s)notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function(onRejected){
      return this.then(undefined, onRejected);
    }
  });
  PromiseCapability = function(){
    var promise  = new Internal;
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject  = ctx($reject, promise, 1);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
__webpack_require__(22)($Promise, PROMISE);
__webpack_require__(99)(PROMISE);
Wrapper = __webpack_require__(0)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r){
    var capability = newPromiseCapability(this)
      , $$reject   = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x){
    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
    var capability = newPromiseCapability(this)
      , $$resolve  = capability.resolve;
    $$resolve(x);
    return capability.promise;
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(93)(function(iter){
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , resolve    = capability.resolve
      , reject     = capability.reject;
    var abrupt = perform(function(){
      var values    = []
        , index     = 0
        , remaining = 1;
      forOf(iterable, false, function(promise){
        var $index        = index++
          , alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function(value){
          if(alreadyCalled)return;
          alreadyCalled  = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , reject     = capability.reject;
    var abrupt = perform(function(){
      forOf(iterable, false, function(promise){
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  }
});

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global         = __webpack_require__(1)
  , has            = __webpack_require__(12)
  , DESCRIPTORS    = __webpack_require__(2)
  , $export        = __webpack_require__(9)
  , redefine       = __webpack_require__(46)
  , META           = __webpack_require__(73).KEY
  , $fails         = __webpack_require__(11)
  , shared         = __webpack_require__(30)
  , setToStringTag = __webpack_require__(22)
  , uid            = __webpack_require__(23)
  , wks            = __webpack_require__(3)
  , wksExt         = __webpack_require__(49)
  , wksDefine      = __webpack_require__(48)
  , keyOf          = __webpack_require__(94)
  , enumKeys       = __webpack_require__(87)
  , isArray        = __webpack_require__(91)
  , anObject       = __webpack_require__(5)
  , toIObject      = __webpack_require__(13)
  , toPrimitive    = __webpack_require__(21)
  , createDesc     = __webpack_require__(15)
  , _create        = __webpack_require__(37)
  , gOPNExt        = __webpack_require__(96)
  , $GOPD          = __webpack_require__(57)
  , $DP            = __webpack_require__(4)
  , $keys          = __webpack_require__(18)
  , gOPD           = $GOPD.f
  , dP             = $DP.f
  , gOPN           = gOPNExt.f
  , $Symbol        = global.Symbol
  , $JSON          = global.JSON
  , _stringify     = $JSON && $JSON.stringify
  , PROTOTYPE      = 'prototype'
  , HIDDEN         = wks('_hidden')
  , TO_PRIMITIVE   = wks('toPrimitive')
  , isEnum         = {}.propertyIsEnumerable
  , SymbolRegistry = shared('symbol-registry')
  , AllSymbols     = shared('symbols')
  , OPSymbols      = shared('op-symbols')
  , ObjectProto    = Object[PROTOTYPE]
  , USE_NATIVE     = typeof $Symbol == 'function'
  , QObject        = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function(){
  return _create(dP({}, 'a', {
    get: function(){ return dP(this, 'a', {value: 7}).a; }
  })).a != 7;
}) ? function(it, key, D){
  var protoDesc = gOPD(ObjectProto, key);
  if(protoDesc)delete ObjectProto[key];
  dP(it, key, D);
  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function(tag){
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
  return typeof it == 'symbol';
} : function(it){
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D){
  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if(has(AllSymbols, key)){
    if(!D.enumerable){
      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
      D = _create(D, {enumerable: createDesc(0, false)});
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P){
  anObject(it);
  var keys = enumKeys(P = toIObject(P))
    , i    = 0
    , l = keys.length
    , key;
  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P){
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key){
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
  it  = toIObject(it);
  key = toPrimitive(key, true);
  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
  var D = gOPD(it, key);
  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it){
  var names  = gOPN(toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
  var IS_OP  = it === ObjectProto
    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if(!USE_NATIVE){
  $Symbol = function Symbol(){
    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function(value){
      if(this === ObjectProto)$set.call(OPSymbols, value);
      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f   = $defineProperty;
  __webpack_require__(66).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(41).f  = $propertyIsEnumerable;
  __webpack_require__(58).f = $getOwnPropertySymbols;

  if(DESCRIPTORS && !__webpack_require__(26)){
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function(name){
    return wrap(wks(name));
  }
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

for(var symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function(key){
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(key){
    if(isSymbol(key))return keyOf(SymbolRegistry, key);
    throw TypeError(key + ' is not a symbol!');
  },
  useSetter: function(){ setter = true; },
  useSimple: function(){ setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it){
    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
    var args = [it]
      , i    = 1
      , replacer, $replacer;
    while(arguments.length > i)args.push(arguments[i++]);
    replacer = args[1];
    if(typeof replacer == 'function')$replacer = replacer;
    if($replacer || !isArray(replacer))replacer = function(key, value){
      if($replacer)value = $replacer.call(this, key, value);
      if(!isSymbol(value))return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(7)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(48)('asyncIterator');

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(48)('observable');

/***/ }),
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(159), __esModule: true };

/***/ }),
/* 119 */
/***/ (function(module, exports) {

//     proxy-observe v0.0.18
//     Copyright (c) 2015, 2016 Simon Y. Blackwell, AnyWhichWay
//     MIT License - http://opensource.org/licenses/mit-license.php
(function() {
	"use strict";
	// Creates and returns a Proxy wrapping a target so that all changes can be trapped and forwarded to
	// a callback. The callback takes an array of changes just like the traditional original Chrome Object.observe
	// {object:<object changed>,name:<field changed>,type:add|update|delete|reconfigure|preventExtensions|setPrototype,oldValue:<old value if update | delete>}
	// The acceptlist can be add|update|delete|reconfigure|preventExtensions|setPrototype.
	// v 0.0.10 to support pausing and restarting observation two additional constructor arguments are available to Object.observe:
	// pausable - create the Observer so it can be paused
	// pause - create observer in paused state
	// if pausable is true then an additional method deliver(ignorePrevious) is available to start delivery
	// to pause delivery set a property called pause on the function deliver to true
	// pausable is optional to reduce the chance of shadowing a property or method on any existing code called deliver
	if(!Object.observe && typeof(Proxy)==="function") {
		function Observer(target,callback,acceptlist,pausable,pause,delay) {
	    	var me = this, proxy;
	    	function deliver(ignorePrevious,delay) {
	    		deliver.delay = delay;
	    		if(!deliver.pause) {
	        		if(me.changeset.length>0) {
	        			if(!ignorePrevious) {
		    	    		var changes = me.changeset.filter(function(change) { return !acceptlist || acceptlist.indexOf(change.type)>=0; });
		        			if(changes.length>0) {
		        				callback(changes);
		        			}
	        			}
	        			me.changeset = [];
	        		}
	    		}
	    	}
	    	deliver.pause = pause;
	    	deliver.delay = delay;
		    me.get = function(target, property) {
		    	if(property==="__observer__") {
		    		return me;
		    	}
		    	if(property==="unobserve") {
		    		return function() {
		    			Object.unobserve(target);
		    			return target;
		    		};
		    	}
		    	if(property==="deliver") {
		    		return deliver;
		    	}
		    	return target[property];
		    }
	    	me.target = target;
	    	me.changeset = [];
	    	if(!me.target.__observerCallbacks__) {
	    		// __observerCallbacks__ is used as an index to get at the proxy which is the observer, so we can unobserve
	    		Object.defineProperty(target,"__observerCallbacks__",{enumerable:false,configurable:true,writable:false,value:[]});
	    		Object.defineProperty(target,"__observers__",{enumerable:false,configurable:true,writable:false,value:[]});
	    	}
	    	me.target.__observerCallbacks__.push(callback);
	    	me.target.__observers__.push(this);
	    	proxy = new Proxy(target,me);
	    	deliver(false,delay);
	    	return proxy;
	    }
		Observer.prototype.deliver = function() {
			return this.get(null,"deliver");
		}
	    Observer.prototype.set = function(target, property, value) { // , receiver
	    	var oldvalue = target[property];
	    	var type = (oldvalue===undefined ? "add" : "update");
	    	target[property] = value;
	    	if(target.__observers__.indexOf(this)>=0 && (!this.acceptlist || this.acceptlist.indexOf(type)>=0)) {
	        	var change = {object:target,name:property,type:type},
	        		start = this.changeset.length === 0,
	        		deliver = this.deliver();
	        	if(type==="update") {
	        		change.oldValue = oldvalue;
	        	}
	        	this.changeset.push(change);
	        	if(start) {
	        		deliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));
	        	}
	    	}
	    	return true;
	    };
	    Observer.prototype.deleteProperty = function(target, property) {
	    	var oldvalue = target[property];
	    	//if(typeof(oldvalue)!=="undefined") {
		    	delete target[property];
		    	if(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("delete")>=0) {
		        	var change = {object:target,name:property,type:"delete",oldValue:oldvalue},
		        		start = this.changeset.length === 0,
		        		deliver = this.deliver();
		        	this.changeset.push(change);
		        	if(start) {
		        		deliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));
		        	}
		    	}
	    	//}
	    	return true;
	    };
	    Observer.prototype.defineProperty = function(target, property, descriptor) {
	    	Object.defineProperty(target, property, descriptor);
	    	if(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("reconfigure")>=0) {
	        	var change = {object:target,name:property,type:"reconfigure"},
        			start = this.changeset.length === 0,
        			deliver = this.deliver();
	        	this.changeset.push(change);
	        	if(start) {
	        		deliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));
	        	}
	    	}
	    	return true;
	    };
	    Observer.prototype.setPrototypeOf = function(target, prototype) {
	    	var oldvalue = Object.getPrototypeOf(target);
	    	Object.setPrototypeOf(target, prototype);
	    	if(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("setPrototype")>=0) {
	        	var change = {object:target,name:"__proto__",type:"setPrototype",oldValue:oldvalue},
    				start = this.changeset.length === 0,
    				deliver = this.deliver();
	        	this.changeset.push(change);
	        	if(start) {
	        		deliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));
	        	}
	    	}
	    	return true;
	    };
	    Observer.prototype.preventExtensions = function(target) {
	        Object.preventExtensions(target);
	    	if(target.__observers__.indexOf(this)>=0 && !this.acceptlist || this.acceptlist.indexOf("preventExtensions")>=0) {
	        	var change = {object:target,type:"preventExtensions"},
					start = this.changeset.length === 0,
					deliver = this.deliver();
	        	this.changeset.push(change);
	        	if(start) {
	        		deliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));
	        	}
	    	}
	    	return true;
	    };
	    Object.observe = function(object,callback,acceptlist,pausable,pause,delay) {
	    	return new Observer(object,callback,acceptlist,pausable,pause,delay);
	    };
	    Object.unobserve = function(object,callback) {
	    	if(object.__observerCallbacks__) {
	    		if(!callback) {
	    			object.__observerCallbacks__.splice(0,object.__observerCallbacks__.length);
	    			object.__observers__.splice(0,object.__observers__.length);
	    			return;
	    		}
	    		object.__observerCallbacks__.forEach(function(observercallback,i) {
	    			if(callback===observercallback) {
	    				object.__observerCallbacks__.splice(i,1);
	    				delete object.__observers__[i].callback;
	    				object.__observers__.splice(i,1);
	    			}
	    		});
	    	}
	    };
	    Array.observe = function(object,callback,acceptlist,pausable,pause,delay) {
	    	if(!(object instanceof Array) && !Array.isArray(object)) {
	    		throw new TypeError("First argument to Array.observer is not an Array");
	    	}
            	acceptlist = acceptlist || ["add", "update", "delete", "splice"];
	    	var arrayproxy = new Proxy(object,{get: function(target,property) {
	    		if(property==="unobserve") {
		    		return function(callback) {
		    			if(callback) {
		    				return Object.unobserve(target,callback);
		    			}
		    			return target.unobserve();
		    		};
		    	}
	    		if(property==="splice") {
	    			return function(start,end) {
	    				if(typeof(start)!=="number" || typeof(end)!=="number") {
	    					throw new TypeError("First two arguments to Array splice are not number, number");
	    				}
	    	    		var removed = this.slice(start,start+end),
	    	    			addedCount = (arguments.length > 1 ? arguments.length-2 : 0),
	    	    			change =  {object:object,type:"splice",index:start,removed:removed,addedCount:addedCount};
	    	    		target.splice.apply(target,arguments);
	    	    		if(acceptlist.indexOf("splice")>=0) {
	    	    			var start = proxy.__observer__.changeset.length === 0,
	    	        			deliver = proxy.__observer__.deliver();
	    	    			proxy.__observer__.changeset.push(change);
	    	    			if(start) {
	    		        		deliver(false,(typeof(deliver.delay)==="number" ? deliver.delay : 10));
	    		        	}
	    	    		}
	    	    	}
	    		}
	    		if(property==="push") {
	    			 return function(item) {
	    		    	return this.splice(this.length,0,item);
	    		    }
	    		}
	    		if(property==="pop") {
	    			 return function() {
	    		    	return this.splice(this.length-1,1);
	    		    }
	    		}
	    		if(property==="unshift") {
	    			 return function(item) {
    		    		return this.splice(0,0,item);
    		    	}
	    		}
	    		if(property==="shift") {
	    			return function() {
	    	    		return this.splice(0,1);
	    	    	}
	    		}
	    		return target[property];
	    	}});
	    	var proxy = Object.observe(arrayproxy,function(changeset) { 
	    		var changes = changeset.filter(function(change) { return change.name!=="length" && change.name!=="add" && (!acceptlist || acceptlist.indexOf(change.type)>=0); });
	    		if(changes.length>0) {
	    			callback(changes);
	    		}
	    	},acceptlist,pausable,pause,delay);
	    	return proxy;
	    };
	    Array.unobserve = function(object,callback) {
		  return object.unobserve(callback);
	    }
	}
	Object.deepObserve = function(object,callback,parts) {

		parts = (parts ? parts : []);

		var toTypeName = function(obj) {
			return ({}).toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase()
		}

		function reobserve(value, parts) {
			var keys = Object.keys(value);
			keys.forEach(function(key) {
				if((toTypeName(value[key]) === 'object' || toTypeName(value[key]) === 'array') && !value[key].hasOwnProperty('__observers__')) {
					var newparts = parts.slice(0);
					newparts.push(key);
					value[key] = Object.deepObserve(value[key],callback,newparts);
				}
			});
		}

		reobserve(object, parts);

		var observed = Object.observe(object,function(changeset) {
			var changes = [];
			function recurse(name,rootObject,oldObject,newObject,path) {
				if(newObject instanceof Object) {
					var newkeys = Object.keys(newObject);
					newkeys.forEach(function(key) {
						if(!oldObject || (oldObject[key]!==newObject[key])) {
							var oldvalue = (oldObject && oldObject[key]!==undefined ? oldObject[key] : undefined),
								change = (oldvalue===undefined ? "add" : "update"),
								keypath = path + "." + key;

							changes.push({name:name,object:rootObject,type:change,oldValue:oldvalue,newValue:newObject[key],keypath:keypath});
							recurse(name,rootObject,oldvalue,newObject[key],keypath);
						}
					});
				} else if(oldObject instanceof Object) {
					var oldkeys = Object.keys(oldObject);
					oldkeys.forEach(function(key) {
						var change = (newObject===null ? "update" : "delete"),
							keypath = path + "." + key;
							
						changes.push({name:name,object:rootObject,type:change,oldValue:oldObject[key],newValue:newObject,keypath:keypath});
						recurse(name,rootObject,oldObject[key],undefined,keypath);
					});
				}
			}
			changeset.forEach(function(change) {
				var keypath = (parts.length>0 ? parts.join(".") + "." : "") + change.name;

				if (change.type === "update" || change.type === "add") { 
					reobserve(change.object, parts);
				}

				changes.push({name:change.name,object:change.object,type:change.type,oldValue:change.oldValue,newValue:change.object[change.name],keypath:keypath});
				recurse(change.name,change.object,change.oldValue,change.object[change.name],keypath);
			});
			callback(changes);
		});
		return observed;
	};
})();


/***/ }),
/* 120 */,
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = __webpack_require__(72);

var _promise2 = _interopRequireDefault(_promise);

var _keys = __webpack_require__(59);

var _keys2 = _interopRequireDefault(_keys);

var _assign = __webpack_require__(118);

var _assign2 = _interopRequireDefault(_assign);

var _getPrototypeOf = __webpack_require__(31);

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(10);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(35);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = __webpack_require__(125);

var _get3 = _interopRequireDefault(_get2);

var _inherits2 = __webpack_require__(34);

var _inherits3 = _interopRequireDefault(_inherits2);

var _utils = __webpack_require__(71);

var _DataObject2 = __webpack_require__(123);

var _DataObject3 = _interopRequireDefault(_DataObject2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/

var FilterType = { ANY: 'any', START: 'start', EXACT: 'exact' };

/**
 * The class returned from the Syncher subscribe call.
 * To be used as an observation point from a DataObjectReporter change.
 */

var DataObjectObserver = function (_DataObject) {
  (0, _inherits3.default)(DataObjectObserver, _DataObject);

  /* private
  _changeListener: MsgListener
    ----event handlers----
  _filters: {<filter>: {type: <start, exact>, callback: <function>} }
  */

  /**
   * @ignore
   * Should not be used directly by Hyperties. It's called by the Syncher.subscribe method
   */

  //TODO: For Further Study
  function DataObjectObserver(input) {
    (0, _classCallCheck3.default)(this, DataObjectObserver);

    var _this2 = (0, _possibleConstructorReturn3.default)(this, (DataObjectObserver.__proto__ || (0, _getPrototypeOf2.default)(DataObjectObserver)).call(this, input));
    //todo: check why
    //input.initialData = input.initialData.data;

    var _this = _this2;

    _this._version = input.version;
    _this._filters = {};

    _this._syncObj.observe(function (event) {
      _this._onFilter(event);
    });

    _this._allocateListeners();
    return _this2;
  }

  /**
   * Sync Data Object Observer with last version of Data Object Reporter. Useful for Resumes
   */


  (0, _createClass3.default)(DataObjectObserver, [{
    key: 'sync',
    value: function sync() {

      var _this = this;
      console.info('[DataObjectObserver_sync] synchronising ');

      _this._syncher.read(_this._metadata.url).then(function (value) {
        console.info('[DataObjectObserver_sync] value to sync: ', value);

        (0, _assign2.default)(_this.data, (0, _utils.deepClone)(value.data));

        _this._version = value.version;

        _this._metadata.lastModified = value.lastModified;

        /*if (value.version != _this._version) {
          console.info('[DataObjectObserver_sync] updating existing data: ', _this.data);
            Object.assign(_this.data || {}, deepClone(value.data));
            _this._metadata = deepClone(value);
            delete _this._metadata.data;
            _this._version = value.version;
          } else {
          console.info('[DataObjectObserver_sync] existing data is updated: ', value);
        }*/
      }).catch(function (reason) {
        console.info('[DataObjectObserver_sync] sync failed: ', reason);
      });
    }
  }, {
    key: '_allocateListeners',
    value: function _allocateListeners() {
      (0, _get3.default)(DataObjectObserver.prototype.__proto__ || (0, _getPrototypeOf2.default)(DataObjectObserver.prototype), '_allocateListeners', this).call(this);
      var _this = this;

      _this._changeListener = _this._bus.addListener(_this._url + '/changes', function (msg) {
        if (msg.type === 'update') {
          console.log('DataObjectObserver-' + _this._url + '-RCV: ', msg);
          _this._changeObject(_this._syncObj, msg);
        }
      });
    }
  }, {
    key: '_releaseListeners',
    value: function _releaseListeners() {
      (0, _get3.default)(DataObjectObserver.prototype.__proto__ || (0, _getPrototypeOf2.default)(DataObjectObserver.prototype), '_releaseListeners', this).call(this);
      var _this = this;

      _this._changeListener.remove();
    }

    /**
     * Release and delete object data
     */

  }, {
    key: 'delete',
    value: function _delete() {
      var _this = this;

      _this.unsubscribe();
      _this._releaseListeners();
      delete _this._syncher._observers[_this._url];
    }

    /**
     * Release and delete object data
     */

  }, {
    key: 'unsubscribe',
    value: function unsubscribe() {
      var _this = this;

      //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onLocalUnSubscribe
      var unSubscribeMsg = {
        type: 'unsubscribe', from: _this._owner, to: _this._syncher._subURL,
        body: { resource: _this._url }
      };

      _this._bus.postMessage(unSubscribeMsg, function (reply) {
        console.log('DataObjectObserver-UNSUBSCRIBE: ', reply);
        if (reply.body.code === 200) {
          _this._releaseListeners();
          delete _this._syncher._observers[_this._url];
        }
      });
    }

    /**
     * Register the change listeners sent by the reporter
     * @param {string} filter - Filter that identifies the field (separated dot path). Accepts * at the end for a more unrestricted filtering.
     * @param {function(event: MsgEvent)} callback
     */

  }, {
    key: 'onChange',
    value: function onChange(filter, callback) {
      var key = filter;
      var filterObj = {
        type: FilterType.EXACT,
        callback: callback
      };

      var idx = filter.indexOf('*');
      if (idx === filter.length - 1) {
        if (idx === 0) {
          filterObj.type = FilterType.ANY;
        } else {
          filterObj.type = FilterType.START;
          key = filter.substr(0, filter.length - 1);
        }
      }

      this._filters[key] = filterObj;
    }
  }, {
    key: '_onFilter',
    value: function _onFilter(event) {
      var _this = this;

      (0, _keys2.default)(_this._filters).forEach(function (key) {
        var filter = _this._filters[key];
        if (filter.type === FilterType.ANY) {
          //match anything
          filter.callback(event);
        } else if (filter.type === FilterType.START) {
          //if starts with filter...
          if (event.field.indexOf(key) === 0) {
            filter.callback(event);
          }
        } else if (filter.type === FilterType.EXACT) {
          //exact match
          if (event.field === key) {
            filter.callback(event);
          }
        }
      });
    }
  }, {
    key: 'onDisconnected',
    value: function onDisconnected(callback) {
      var _this3 = this;

      return new _promise2.default(function (resolve, reject) {

        _this3._subscribeRegistration().then(function () {
          _this3._onDisconnected = callback;
          resolve();
        }).catch(function (err) {
          return reject(err);
        });
      });
    }
  }, {
    key: '_subscribeRegistration',
    value: function _subscribeRegistration() {
      var _this4 = this;

      var msg = {
        type: 'subscribe',
        from: this._owner,
        to: this._syncher._runtimeUrl + '/subscriptions',
        body: {
          resources: [this._url + '/registration']
        }
      };

      return new _promise2.default(function (resolve, reject) {

        _this4._bus.postMessage(msg, function (reply) {
          console.log('[DataObjectObserver._subscribeRegistration] ' + _this4._url + ' rcved reply ', reply);

          if (reply.body.code === 200) {
            _this4._generateListener(_this4._url + '/registration');
            resolve();
          } else {
            console.error('Error subscribing registration status for ', _this4._url);
            reject('Error subscribing registration status for ' + _this4._url);
          }
        });
      });
    }
  }, {
    key: '_generateListener',
    value: function _generateListener(notificationURL) {
      var _this = this;

      _this._bus.addListener(notificationURL, function (msg) {
        console.log('[DataObjectObserver.registrationNotification] ' + _this._url + ': ', msg);
        if (msg.body.value && msg.body.value === 'disconnected' && _this._onDisconnected) {
          console.log('[DataObjectObserver] ' + _this._url + ': was disconnected ', msg);
          _this._onDisconnected();
        }
      });
    }

    /**
     * Requests the reporter to execute a method on the data object
     * @param {string} method - Name of the function to be executed.
     * @param {array} params - array of parameters for the requested function
     * @return {promise}
     */

  }, {
    key: 'execute',
    value: function execute(method, params) {
      var _this5 = this;

      var _this = this;

      return new _promise2.default(function (resolve, reject) {

        var msg = {
          type: 'execute',
          from: _this5._owner,
          to: _this._url,
          body: {
            method: method,
            params: params
          }
        };

        _this._bus.postMessage(msg, function (reply) {
          console.log('[DataObjectObserver.execute] ' + _this._url + ' rcved reply ', reply);

          if (reply.body.code === 200) {
            resolve();
          } else {
            console.warning('[DataObjectObserver.execute] execution of method ' + method + ' was reject by reporter');
            reject('[DataObjectObserver.execute] execution of method ' + method + ' was reject by reporter');
          }
        });
      });
    }
  }]);
  return DataObjectObserver;
}(_DataObject3.default /* implements SyncStatus */);

exports.default = DataObjectObserver;
module.exports = exports['default'];

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = __webpack_require__(59);

var _keys2 = _interopRequireDefault(_keys);

var _getPrototypeOf = __webpack_require__(31);

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(10);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(35);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = __webpack_require__(125);

var _get3 = _interopRequireDefault(_get2);

var _inherits2 = __webpack_require__(34);

var _inherits3 = _interopRequireDefault(_inherits2);

var _DataObject2 = __webpack_require__(123);

var _DataObject3 = _interopRequireDefault(_DataObject2);

var _utils = __webpack_require__(71);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The class returned from the Syncher create call.
 * To be used as a reporter point, changes will be submited to DataObjectObserver instances.
 */
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/

var DataObjectReporter = function (_DataObject) {
  (0, _inherits3.default)(DataObjectReporter, _DataObject);

  /* private
  _subscriptions: <hypertyUrl: { status: string } }>
    ----event handlers----
  _onSubscriptionHandler: (event) => void
  _onResponseHandler: (event) => void
  _onReadHandler: (event) => void
  */

  /**
   * @ignore
   * Should not be used directly by Hyperties. It's called by the Syncher.create method
   */

  //constructor(syncher, url, created, reporter, runtime, schema, name, initialStatus, initialData, childrens, mutual = true, resumed = false, description, tags, resources, observerStorage, publicObservation) {
  function DataObjectReporter(input) {
    (0, _classCallCheck3.default)(this, DataObjectReporter);

    var _this2 = (0, _possibleConstructorReturn3.default)(this, (DataObjectReporter.__proto__ || (0, _getPrototypeOf2.default)(DataObjectReporter)).call(this, input));

    var _this = _this2;

    _this._subscriptions = {};

    _this._syncObj.observe(function (event) {
      console.log('[Syncher.DataObjectReporter] ' + _this.url + ' publish change: ', event);
      _this._onChange(event);
    });

    _this._allocateListeners();

    _this._invitations = [];
    return _this2;
  }

  (0, _createClass3.default)(DataObjectReporter, [{
    key: '_allocateListeners',
    value: function _allocateListeners() {
      (0, _get3.default)(DataObjectReporter.prototype.__proto__ || (0, _getPrototypeOf2.default)(DataObjectReporter.prototype), '_allocateListeners', this).call(this);
      var _this = this;

      _this._objectListener = _this._bus.addListener(_this._url, function (msg) {
        console.log('[Syncher.DataObjectReporter] listener ' + _this._url + ' Received: ', msg);
        switch (msg.type) {
          case 'response':
            _this._onResponse(msg);break;
          case 'read':
            _this._onRead(msg);break;
          case 'execute':
            _this._onExecute(msg);break;
        }
      });
    }
  }, {
    key: '_releaseListeners',
    value: function _releaseListeners() {
      (0, _get3.default)(DataObjectReporter.prototype.__proto__ || (0, _getPrototypeOf2.default)(DataObjectReporter.prototype), '_releaseListeners', this).call(this);
      var _this = this;

      _this._objectListener.remove();
    }

    /**
     * Send invitations (create messages) to hyperties, observers list.
     * @param  {HypertyURL[]} observers List of Hyperty URL's
     */

  }, {
    key: 'inviteObservers',
    value: function inviteObservers(observers) {
      var _this = this;

      //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onCreate
      // TODO: remove value and add resources? should similar to 1st create

      var toInvite = [];

      observers.forEach(function (observer) {
        if (!_this._invitations[observer]) {
          toInvite.push(observer);
          _this._invitations[observer] = observer;
        }
      });

      if (toInvite.length > 0) {
        console.log('[Syncher.DataObjectReporter] InviteObservers ', toInvite, _this._metadata);

        var inviteMsg = {
          type: 'create', from: _this._syncher._owner, to: _this._syncher._subURL,
          body: { resume: false, resource: _this._url, schema: _this._schema, value: _this._metadata, authorise: toInvite }
        };

        _this._bus.postMessage(inviteMsg);
      }
    }

    /**
     * Release and delete object data
     */

  }, {
    key: 'delete',
    value: function _delete() {
      var _this = this;

      //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onDelete
      var deleteMsg = {
        type: 'delete', from: _this._owner, to: _this._syncher._subURL,
        body: { resource: _this._url }
      };

      _this._bus.postMessage(deleteMsg, function (reply) {
        console.log('DataObjectReporter-DELETE: ', reply);
        if (reply.body.code === 200) {
          _this._releaseListeners();
          delete _this._syncher._reporters[_this._url];

          //_this._syncObj.unobserve();
          _this._syncObj = {};
        }
      });
    }

    /**
     * Subscriptions requested and accepted to this reporter
     * @type {Object<HypertyURL, SyncSubscription>}
     */

  }, {
    key: 'onSubscription',


    /**
     * Setup the callback to process subscribe and unsubscribe notifications
     * @param {function(event: MsgEvent)} callback function to receive events
     */
    value: function onSubscription(callback) {
      this._onSubscriptionHandler = callback;
    }

    /**
     * Setup the callback to process response notifications of the create's
     * @param {function(event: MsgEvent)} callback function to receive events
     */

  }, {
    key: 'onResponse',
    value: function onResponse(callback) {
      this._onResponseHandler = callback;
    }

    /**
     * Setup the callback to process read notifications
     * @param {function(event: MsgEvent)} callback
     */

  }, {
    key: 'onRead',
    value: function onRead(callback) {
      this._onReadHandler = callback;
    }

    /**
     * Setup the callback to process execute notifications
     * @param {function(event: MsgEvent)} callback
     */

  }, {
    key: 'onExecute',
    value: function onExecute(callback) {
      this._onExecuteHandler = callback;
    }

    //FLOW-IN: message received from parent Syncher -> _onForward

  }, {
    key: '_onForward',
    value: function _onForward(msg) {
      var _this = this;

      console.log('DataObjectReporter-RCV: ', msg);
      switch (msg.body.type) {
        case 'subscribe':
          _this._onSubscribe(msg);break;
        case 'unsubscribe':
          _this._onUnSubscribe(msg);break;
      }
    }

    //FLOW-IN: message received from this -> _onForward: emitted by a remote Syncher -> subscribe

  }, {
    key: '_onSubscribe',
    value: function _onSubscribe(msg) {
      var _this3 = this;

      var _this = this;
      var hypertyUrl = msg.body.from;
      var dividedURL = (0, _utils.divideURL)(hypertyUrl);
      var domain = dividedURL.domain;

      console.log('[DataObjectReporter._onSubscribe]', msg, domain, dividedURL);

      var event = {
        type: msg.body.type,
        url: hypertyUrl,

        domain: domain,

        identity: msg.body.identity,

        accept: function accept() {
          //create new subscription
          var sub = { url: hypertyUrl, status: 'live' };
          _this._subscriptions[hypertyUrl] = sub;
          if (_this.metadata.subscriptions) {
            _this.metadata.subscriptions.push(sub.url);
          }

          var msgValue = _this._metadata;
          msgValue.data = (0, _utils.deepClone)(_this.data);
          msgValue.version = _this._version;

          //process and send childrens data
          // let childrenValues = {};
          //
          // if (_this._childrenObjects) {
          //   Object.keys(_this._childrenObjects).forEach((childrenId) => {
          //     let childrenData = _this._childrenObjects[childrenId];
          //     childrenValues[childrenId] = deepClone(childrenData);
          //   });
          //   msgValue.childrenObjects = childrenValues;
          // }

          var sendMsg = {
            id: msg.id, type: 'response', from: msg.to, to: msg.from,
            body: { code: 200, schema: _this._schema, value: msgValue }
          };

          //TODO: For Further Study
          if (msg.body.hasOwnProperty('mutualAuthentication') && !msg.body.mutualAuthentication) {
            sendMsg.body.mutualAuthentication = _this3._mutualAuthentication;
            _this3._mutualAuthentication = msg.body.mutualAuthentication;
          }

          //send ok response message
          _this._bus.postMessage(sendMsg);

          return sub;
        },

        reject: function reject(reason) {
          //send reject response message
          _this._bus.postMessage({
            id: msg.id, type: 'response', from: msg.to, to: msg.from,
            body: { code: 403, desc: reason }
          });
        }
      };

      if (_this._onSubscriptionHandler) {
        console.log('SUBSCRIPTION-EVENT: ', event);
        _this._onSubscriptionHandler(event);
      }
    }

    //FLOW-IN: message received from this -> _onForward: emitted by a remote DataObjectObserver -> unsubscribe

  }, {
    key: '_onUnSubscribe',
    value: function _onUnSubscribe(msg) {
      var _this = this;
      var hypertyUrl = msg.body.from;
      var dividedURL = (0, _utils.divideURL)(hypertyUrl);
      var domain = dividedURL.domain;

      console.log('[DataObjectReporter._onUnSubscribe]', msg, domain, dividedURL);

      //let sub = _this._subscriptions[hypertyUrl];
      delete _this._subscriptions[hypertyUrl];
      delete _this._invitations[hypertyUrl];

      var event = {
        type: msg.body.type,
        url: hypertyUrl,
        domain: domain,
        identity: msg.body.identity
      };

      // TODO: check if the _onSubscriptionHandler it is the same of the subscriptions???
      if (_this._onSubscriptionHandler) {
        console.log('UN-SUBSCRIPTION-EVENT: ', event);
        _this._onSubscriptionHandler(event);
      }
    }

    //FLOW-IN: message received from ReporterURL address: emited by a remote Syncher -> _onRemoteCreate -> event.ack

  }, {
    key: '_onResponse',
    value: function _onResponse(msg) {
      var _this = this;

      var event = {
        type: msg.type,
        url: msg.from,
        code: msg.body.code
      };

      if (_this._onResponseHandler) {
        console.log('RESPONSE-EVENT: ', event);
        _this._onResponseHandler(event);
      }
    }

    //FLOW-IN: message received from ReporterURL address: emited by a remote Syncher -> read

  }, {
    key: '_onRead',
    value: function _onRead(msg) {
      var _this = this;
      var objectValue = (0, _utils.deepClone)(_this.metadata);
      objectValue.data = (0, _utils.deepClone)(_this.data);
      objectValue.version = _this._version;

      var response = {
        id: msg.id, type: 'response', from: msg.to, to: msg.from,
        body: { code: 200, value: objectValue }
      };

      var event = {
        type: msg.type,
        url: msg.from,

        accept: function accept() {
          _this._bus.postMessage(response);
        },

        reject: function reject(reason) {
          _this._bus.postMessage({
            id: msg.id, type: 'response', from: msg.to, to: msg.from,
            body: { code: 401, desc: reason }
          });
        }
      };

      // if the requester is an authorised observer, the data object is responded otherwise an event is triggered
      var subscriptions = [];

      if (_this.metadata.subscriptions) {
        subscriptions = _this.metadata.subscriptions;
      } else if (_this._subscriptions) {
        subscriptions = (0, _keys2.default)(_this._subscriptions).map(function (key) {
          return _this._subscriptions[key].url;
        });
      }

      if (subscriptions.indexOf(msg.from) != -1) {
        _this._bus.postMessage(response);
      } else if (_this._onReadHandler) {
        console.log('READ-EVENT: ', event);
        _this._onReadHandler(event);
      }
    }

    // Execute request received

  }, {
    key: '_onExecute',
    value: function _onExecute(msg) {
      var _this = this;

      if (!msg.body.method) throw '[DataObjectReporter._onExecute] method missing ', msg;

      var response = {
        id: msg.id, type: 'response', from: msg.to, to: msg.from,
        body: { code: 200 }
      };

      var event = {
        type: msg.type,
        url: msg.from,
        method: msg.body.method,
        params: msg.body.params,

        accept: function accept() {
          _this._bus.postMessage(response);
        },

        reject: function reject(reason) {
          _this._bus.postMessage({
            id: msg.id, type: 'response', from: msg.to, to: msg.from,
            body: { code: 401, desc: reason }
          });
        }
      };

      if (_this._onExecuteHandler) {
        console.log('[DataObjectReporter] EXECUTE-EVENT: ', event);
        _this._onExecuteHandler(event);
      }
    }
  }, {
    key: 'subscriptions',
    get: function get() {
      return this._subscriptions;
    }
  }]);
  return DataObjectReporter;
}(_DataObject3.default /* implements SyncStatus */);

exports.default = DataObjectReporter;
module.exports = exports['default'];

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = __webpack_require__(72);

var _promise2 = _interopRequireDefault(_promise);

var _keys = __webpack_require__(59);

var _keys2 = _interopRequireDefault(_keys);

var _assign = __webpack_require__(118);

var _assign2 = _interopRequireDefault(_assign);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(10);

var _createClass3 = _interopRequireDefault(_createClass2);

var _ProxyObject = __webpack_require__(124);

var _ProxyObject2 = _interopRequireDefault(_ProxyObject);

var _DataObjectChild = __webpack_require__(149);

var _DataObjectChild2 = _interopRequireDefault(_DataObjectChild);

var _utils = __webpack_require__(71);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Main extension class for observers and reporters, with common properties and methods.
 * Children management is common for observers and reporters.
 */
var DataObject = function () {
  /* private
  _version: number
    _owner: HypertyURL
  _url: ObjectURL
  _schema: Schema
  _bus: MiniBus
  _status: on | paused
  _syncObj: SyncData
    _children: { id: DataObjectChild }
  _childrenListeners: [MsgListener]
    ----event handlers----
  _onAddChildHandler: (event) => void
  */

  /**
   * @ignore
   * Should not be used directly by Hyperties. It's called by the Syncher create or subscribe method's
   */
  //constructor(syncher, url, created, reporter, runtime, schema, name, initialStatus, initialData, childrens, mutual = true, resumed = false, description, tags, resources, observerStorage, publicObservation) {
  function DataObject(input) {
    (0, _classCallCheck3.default)(this, DataObject);

    var _this = this;

    function throwMandatoryParmMissingError(par) {
      throw '[DataObject] ' + par + ' mandatory parameter is missing';
    }

    input.syncher ? _this._syncher = input.syncher : throwMandatoryParmMissingError('syncher');
    input.url ? _this._url = input.url : throwMandatoryParmMissingError('url');
    input.created ? _this._created = input.created : throwMandatoryParmMissingError('created');
    input.reporter ? _this._reporter = input.reporter : throwMandatoryParmMissingError('reporter');
    input.runtime ? _this._runtime = input.runtime : throwMandatoryParmMissingError('runtime');
    input.schema ? _this._schema = input.schema : throwMandatoryParmMissingError('schema');
    input.name ? _this._name = input.name : throwMandatoryParmMissingError('name');

    _this._status = input.status;

    if (input.data) {
      _this._syncObj = new _ProxyObject2.default(input.data);
    } else {
      _this._syncObj = new _ProxyObject2.default({});
    }
    _this._childrens = input.childrens;

    //TODO: For Further Study
    _this._mutualAuthentication = input.mutual;

    _this._version = 0;
    _this._childId = 0;
    _this._childrenListeners = [];

    _this._resumed = input.resume;

    if (input.resume) {
      _this._version = input.version;
    }

    _this._owner = input.syncher._owner;
    _this._bus = input.syncher._bus;

    if (input.description) _this._description = input.description;
    if (input.tags) _this._tags = input.tags;
    if (input.resources) _this._resources = input.resources;
    if (input.observerStorage) _this._observerStorage = input.observerStorage;
    if (input.publicObservation) _this._publicObservation = input.publicObservation;

    _this._metadata = (0, _assign2.default)(input);
    _this._metadata.lastModified = _this._metadata.created;

    delete _this._metadata.data;
    delete _this._metadata.syncher;
    delete _this._metadata.authorise;
  }

  (0, _createClass3.default)(DataObject, [{
    key: '_getLastChildId',
    value: function _getLastChildId() {
      var _this = this;

      var childIdInt = 0;
      var childIdString = _this._owner + '#' + childIdInt;

      (0, _keys2.default)(_this._childrens).filter(function (key) {
        if (_this._childrens[key].childId > childIdString) {
          childIdString = _this._childrens[key].childId;
        }
      });

      return childIdInt = Number(childIdString.split('#')[1]);
    }
  }, {
    key: '_allocateListeners',
    value: function _allocateListeners() {
      var _this2 = this;

      var _this = this;

      var childBaseURL = _this._url + '/children/';
      console.log('[Data Object - AllocateListeners] - ', _this._childrens);
      if (_this._childrens) {
        _this._childrens.forEach(function (child) {
          var childURL = childBaseURL + child;
          var listener = _this._bus.addListener(childURL, function (msg) {
            //ignore msg sent by himself
            if (msg.from !== _this2._owner) {
              console.log('DataObject-Children-RCV: ', msg);
              switch (msg.type) {
                case 'create':
                  _this._onChildCreate(msg);break;
                case 'delete':
                  console.log(msg);break;
                default:
                  _this._changeChildren(msg);break;
              }
            }
          });

          _this._childrenListeners.push(listener);
        });
      }
    }
  }, {
    key: '_releaseListeners',
    value: function _releaseListeners() {
      var _this = this;

      _this._childrenListeners.forEach(function (listener) {
        listener.remove();
      });

      if (_this._childrenObjects) {
        (0, _keys2.default)(_this._childrenObjects).forEach(function (key) {
          _this._childrenObjects[key]._releaseListeners();
        });
      }
    }

    /**
     *
     */

  }, {
    key: 'resumeChildrens',
    value: function resumeChildrens(childrens) {
      var _this3 = this;

      var _this = this;

      var childIdString = this._owner + '#' + this._childId;

      if (childrens && !_this._childrenObjects) {
        _this._childrenObjects = {};
      }

      //setup childrens data from subscription
      (0, _keys2.default)(childrens).forEach(function (childrenResource) {
        var children = childrens[childrenResource];

        (0, _keys2.default)(children).forEach(function (childId) {
          var childInput = children[childId].value;
          console.log('[DataObject.resumeChildrens] new DataObjectChild: ', childrenResource, children, childInput);
          childInput.parentObject = _this;
          childInput.parent = _this._url;
          _this._childrenObjects[childId] = new _DataObjectChild2.default(childInput);
          _this._childrenObjects[childId].identity = children[childId].identity;

          if (childId > childIdString) {
            childIdString = childId;
          }

          console.log('[DataObjectReporter.resumeChildrens] - resumed: ', _this3._childrenObjects[childId]);
        });
      });

      this._childId = Number(childIdString.split('#')[1]);
    }

    /**
     * All Metadata about the Data Object
     * @type {Object} -
     */

  }, {
    key: 'pause',


    /**
     * @ignore
     */
    value: function pause() {
      //TODO: this feature needs more analise
      throw 'Not implemented';
    }

    /**
     * @ignore
     */

  }, {
    key: 'resume',
    value: function resume() {
      //TODO: this feature needs more analise
      throw 'Not implemented';
    }

    /**
     * @ignore
     */

  }, {
    key: 'stop',
    value: function stop() {
      //TODO: should remove the subscription and send message unsubscribe?
      throw 'Not implemented';
    }

    /**
     * Create and add a DataObjectChild to a children collection.
     * @param {String} children - Children name where the child is added.
     * @param {JSON} initialData - Initial data of the child
     * @param  {MessageBodyIdentity} identity - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.
     * @param  {SyncChildMetadata} input - (optional) All additional metadata about the DataObjectChild.
     * @return {Promise<DataObjectChild>} - Return Promise to a new DataObjectChild.
     */

  }, {
    key: 'addChild',
    value: function addChild(children, initialData, identity, input) {
      var _this = this;

      //returns promise, in the future, the API may change to asynchronous call
      return new _promise2.default(function (resolve) {

        var childInput = (0, _assign2.default)({}, input);

        //create new child unique ID, based on hypertyURL
        _this._childId++;
        childInput.url = _this._owner + '#' + _this._childId;
        var msgChildPath = _this._url + '/children/' + children;

        childInput.parentObject = _this;
        childInput.data = initialData;
        childInput.reporter = _this._owner;
        childInput.created = new Date().toISOString();
        childInput.runtime = _this._runtime;
        childInput.schema = _this._schema;
        childInput.parent = _this.url;

        var newChild = new _DataObjectChild2.default(childInput);

        var bodyValue = newChild.metadata;
        bodyValue.data = initialData;

        //FLOW-OUT: this message will be sent directly to a resource child address: MessageBus
        var requestMsg = {
          type: 'create', from: _this._owner, to: msgChildPath,
          body: { resource: childInput.url, value: bodyValue }
        };

        if (identity) {
          newChild.identity = identity;
          requestMsg.body.identity = identity;
        }

        //TODO: For Further Study
        if (!_this._mutualAuthentication) requestMsg.body.mutualAuthentication = _this._mutualAuthentication;

        var msgId = _this._bus.postMessage(requestMsg);

        console.log('[DataObject.addChild] added ', newChild, msgId, bodyValue);

        newChild.onChange(function (event) {
          _this._onChange(event, { path: msgChildPath, childId: childInput.url });
        });

        if (!_this._childrenObjects) {
          _this._childrenObjects = {};
        }

        _this._childrenObjects[childInput.url] = newChild;

        resolve(newChild);
      });
    }

    /**
     * Setup the callback to process create and delete of childrens.
     * @param {function(event: MsgEvent)} callback
     */

  }, {
    key: 'onAddChild',
    value: function onAddChild(callback) {
      this._onAddChildrenHandler = callback;
    }

    //FLOW-IN: message received from a remote DataObject -> addChild

  }, {
    key: '_onChildCreate',
    value: function _onChildCreate(msg) {
      var _this = this;
      var childInput = (0, _utils.deepClone)(msg.body.value);
      childInput.parentObject = _this;

      console.log('[DataObject._onChildCreate] receivedBy ' + _this._owner + ' : ', msg);
      var newChild = new _DataObjectChild2.default(childInput);
      newChild.identity = msg.body.identity;

      if (!_this._childrenObjects) {
        _this._childrenObjects = {};
      }

      _this._childrenObjects[childInput.url] = newChild;

      //todo: remove response below
      setTimeout(function () {
        //FLOW-OUT: will flow to DataObjectChild -> _onResponse
        _this._bus.postMessage({
          id: msg.id, type: 'response', from: msg.to, to: msg.from,
          body: { code: 200, source: _this._owner }
        });
      });

      var event = {
        type: msg.type,
        from: msg.from,
        url: msg.to,
        value: msg.body.value.data,
        childId: childInput.url,
        identity: msg.body.identity
      };

      if (_this._onAddChildrenHandler) {
        console.log('ADD-CHILDREN-EVENT: ', event);
        _this._onAddChildrenHandler(event);
      }
    }

    //send delta messages to subscriptions

  }, {
    key: '_onChange',
    value: function _onChange(event, childInfo) {
      var _this = this;

      _this._metadata.lastModified = new Date().toISOString();

      _this._version++;

      if (_this._status === 'live') {
        //FLOW-OUT: this message will be sent directly to a resource changes address: MessageBus
        var changeMsg = {
          type: 'update', from: _this._url, to: _this._url + '/changes',
          body: { version: _this._version, source: _this._owner, attribute: event.field, lastModified: _this._metadata.lastModified }
        };

        console.log('[DataObject - _onChange] - ', event, childInfo, changeMsg);

        if (event.oType === _ProxyObject.ObjectType.OBJECT) {
          if (event.cType !== _ProxyObject.ChangeType.REMOVE) {
            changeMsg.body.value = event.data;
          }
        } else {
          changeMsg.body.attributeType = event.oType;
          changeMsg.body.value = event.data;
          if (event.cType !== _ProxyObject.ChangeType.UPDATE) {
            changeMsg.body.operation = event.cType;
          }
        }

        //childInfo must have (path, childId)
        if (childInfo) {
          changeMsg.to = childInfo.path;
          changeMsg.body.resource = childInfo.childId;
        }

        //TODO: For Further Study
        if (!_this._mutualAuthentication) changeMsg.body.mutualAuthentication = _this._mutualAuthentication;

        _this._bus.postMessage(changeMsg);
      }
    }

    //FLOW-IN: delta message received from a remote DataObjectReporter or DataObjectChild when changing data

  }, {
    key: '_changeObject',
    value: function _changeObject(syncObj, msg) {
      var _this = this;

      //TODO: update version ?
      //how to handle an incorrect version ? Example: receive a version 3 when the observer is in version 1, where is the version 2 ?
      //will we need to confirm the reception ?
      if (_this._version + 1 <= msg.body.version) {
        _this._version = msg.body.version;
        var path = msg.body.attribute;
        var value = (0, _utils.deepClone)(msg.body.value);
        var findResult = syncObj.findBefore(path);

        if (msg.body.lastModified) {
          _this._metadata.lastModified = msg.body.lastModified;
        } else {
          _this._metadata.lastModified = new Date().toISOString();
        }

        if (msg.body.attributeType === _ProxyObject.ObjectType.ARRAY) {
          if (msg.body.operation === _ProxyObject.ChangeType.ADD) {
            var arr = findResult.obj;
            var index = findResult.last;
            Array.prototype.splice.apply(arr, [index, 0].concat(value));
          } else if (msg.body.operation === _ProxyObject.ChangeType.REMOVE) {
            var _arr = findResult.obj;
            var _index = findResult.last;
            _arr.splice(_index, value);
          } else {
            findResult.obj[findResult.last] = value; // UPDATE
          }
        } else {
          if (msg.body.value) {
            findResult.obj[findResult.last] = value; // UPDATE or ADD
          } else {
            delete findResult.obj[findResult.last]; // REMOVE
          }
        }
      } else {
        //TODO: how to handle unsynchronized versions?
        console.log('UNSYNCHRONIZED VERSION: (data => ' + _this._version + ', msg => ' + msg.body.version + ')');
      }
    }

    //FLOW-IN: message received from a remote DataObjectChild when changing data

  }, {
    key: '_changeChildren',
    value: function _changeChildren(msg) {
      var _this = this;
      console.log('Change children: ', _this._owner, msg);

      var childId = msg.body.resource;
      var children = _this._childrenObjects[childId];

      if (children) {
        _this._changeObject(children._syncObj, msg);
      } else {
        console.log('No children found for: ', childId);
      }
    }
  }, {
    key: 'metadata',
    get: function get() {
      return this._metadata;
    }

    /**
     * Object URL of reporter or observer
     * @type {ObjectURL}
     */

  }, {
    key: 'url',
    get: function get() {
      return this._url;
    }

    /**
     * Object schema URL (this field is not yet stable, and is subsject to change)
     * @type {SchemaURL}
     */

  }, {
    key: 'schema',
    get: function get() {
      return this._schema;
    }

    /**
     * Status of the reporter or observer connection (this field is not yet stable, and is subsject to change)
     * @type {Status} - Enum of: on | paused
     */

  }, {
    key: 'status',
    get: function get() {
      return this._status;
    }

    /**
     * Data structure to be synchronized.
     * @type {JSON} - JSON structure that should follow the defined schema, if any.
     */

  }, {
    key: 'data',
    get: function get() {
      return this._syncObj.data;
    }

    /**
     * All created children's since the subscription, doesn't contain all children's since reporter creation.
     * @type {Object<ChildId, DataObjectChild>}
     */

  }, {
    key: 'childrens',
    get: function get() {
      return this._childrenObjects;
    }
  }]);
  return DataObject;
}(); /**
     * Copyright 2016 PT Inovação e Sistemas SA
     * Copyright 2016 INESC-ID
     * Copyright 2016 QUOBIS NETWORKS SL
     * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
     * Copyright 2016 ORANGE SA
     * Copyright 2016 Deutsche Telekom AG
     * Copyright 2016 Apizee
     * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     **/

exports.default = DataObject;
module.exports = exports['default'];

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ObjectType = exports.ChangeType = undefined;

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(10);

var _createClass3 = _interopRequireDefault(_createClass2);

__webpack_require__(119);

var _utils = __webpack_require__(71);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var objectType = { ARRAY: '[object Array]', OBJECT: '[object Object]' };

/**
 * @access private
 * Main class that maintains a JSON object, and observes changes in this object, recursively.
 * Internal objects and arrays are also observed.
 */

var SyncObject = function () {
  function SyncObject(initialData) {
    (0, _classCallCheck3.default)(this, SyncObject);

    var _this = this;

    _this._observers = [];
    _this._filters = {};

    this._data = initialData || {};

    this._internalObserve(this._data);
  }

  (0, _createClass3.default)(SyncObject, [{
    key: 'observe',
    value: function observe(callback) {
      this._observers.push(callback);
    }
  }, {
    key: 'find',
    value: function find(path) {
      var list = (0, _utils.parseAttributes)(path);

      return this._findWithSplit(list);
    }
  }, {
    key: 'findBefore',
    value: function findBefore(path) {
      var result = {};
      var list = (0, _utils.parseAttributes)(path);
      result.last = list.pop();
      result.obj = this._findWithSplit(list);

      return result;
    }
  }, {
    key: '_findWithSplit',
    value: function _findWithSplit(list) {
      var obj = this._data;
      list.forEach(function (value) {
        obj = obj[value];
      });

      return obj;
    }
  }, {
    key: '_internalObserve',
    value: function _internalObserve(object) {
      var _this2 = this;

      var handler = function handler(changeset) {

        changeset.every(function (change) {
          _this2._onChanges(change);
        });
      };

      this._data = Object.deepObserve(object, handler);
    }
  }, {
    key: '_fireEvent',
    value: function _fireEvent(event) {
      this._observers.forEach(function (callback) {
        callback(event);
      });
    }
  }, {
    key: '_onChanges',
    value: function _onChanges(change) {

      var obj = change.object;
      var objType = void 0;

      if (obj.constructor === Object) {
        objType = ObjectType.OBJECT;
      }

      if (obj.constructor === Array) {
        objType = ObjectType.ARRAY;
      }

      var fieldString = change.keypath;

      // console.log('Field:', fieldString);
      // console.log('type:', change.type);

      //let oldValue = change.oldValue;
      var newValue = obj[change.name];

      // console.info(change.type + ' | Field: ' + fieldString + ' | New Value:', JSON.stringify(newValue), fieldString.includes('length'));

      if (change.type === 'update' && !fieldString.includes('.length')) {
        this._fireEvent({
          cType: ChangeType.UPDATE,
          oType: objType,
          field: fieldString,
          data: newValue
        });
      }

      if (change.type === 'add') {
        this._fireEvent({
          cType: ChangeType.ADD,
          oType: objType,
          field: fieldString,
          data: newValue
        });
      }

      if (change.type === 'delete') {
        this._fireEvent({
          cType: ChangeType.REMOVE,
          oType: objType,
          field: fieldString
        });
      }
    }
  }, {
    key: 'data',
    get: function get() {
      return this._data;
    }
  }]);
  return SyncObject;
}();

var ChangeType = exports.ChangeType = { UPDATE: 'update', ADD: 'add', REMOVE: 'remove' };
var ObjectType = exports.ObjectType = { OBJECT: 'object', ARRAY: 'array' };
exports.default = SyncObject;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _getPrototypeOf = __webpack_require__(31);

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _getOwnPropertyDescriptor = __webpack_require__(154);

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);

  if (desc === undefined) {
    var parent = (0, _getPrototypeOf2.default)(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

/***/ }),
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = __webpack_require__(72);

var _promise2 = _interopRequireDefault(_promise);

var _assign = __webpack_require__(118);

var _assign2 = _interopRequireDefault(_assign);

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(10);

var _createClass3 = _interopRequireDefault(_createClass2);

var _utils = __webpack_require__(71);

var _DataObjectReporter = __webpack_require__(122);

var _DataObjectReporter2 = _interopRequireDefault(_DataObjectReporter);

var _DataObjectObserver = __webpack_require__(121);

var _DataObjectObserver2 = _interopRequireDefault(_DataObjectObserver);

var _DataProvisional = __webpack_require__(150);

var _DataProvisional2 = _interopRequireDefault(_DataProvisional);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* The main class for the syncher package.
* The Syncher is a singleton class per Hyperty/URL and it is the owner of all created Data Sync Objects according to the Reporter - Observer pattern.
* Main functionality is to create reporters and to subscribe to existing ones.
*/
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/
var Syncher = function () {
  /* private
  _owner: URL
  _bus: MiniBus
    _subURL: URL
    _reporters: <url: DataObjectReporter>
  _observers: <url: DataObjectObserver>
  _provisionals: <url: DataProvisional>
    ----event handlers----
  _onNotificationHandler: (event) => void
  _onResume: (event) => void
  */

  /**
  * Constructor that should be used by the Hyperty owner
  * @param {HypertyURL} owner - Hyperty URL owner. An URL allocated by the runtime that uniquely identifies the Hyperty.
  * @param {MiniBus} bus - An instance of the MiniBus provided in the sandbox. When an object (Reporter or Observed) is created, the SyncherManager will add a listener in the MiniBus to receive/send Messages of that object.
  * @param {JSON} config - Configuration data. The only required field for now is the runtimeURL.
  */
  function Syncher(owner, bus, config) {
    (0, _classCallCheck3.default)(this, Syncher);

    var _this = this;

    _this._owner = owner;
    _this._bus = bus;

    _this._subURL = config.runtimeURL + '/sm';
    _this._runtimeUrl = config.runtimeURL;

    _this._reporters = {};
    _this._observers = {};
    _this._provisionals = {};

    bus.addListener(owner, function (msg) {
      //ignore msg sent by himself
      if (msg.from !== owner) {
        console.info('[Syncher] Syncher-RCV: ', msg, _this);
        switch (msg.type) {
          case 'forward':
            _this._onForward(msg);break;
          case 'create':
            _this._onRemoteCreate(msg);break;
          case 'delete':
            _this._onRemoteDelete(msg);break;
          case 'execute':
            _this._onExecute(msg);break;
        }
      }
    });
  }

  /**
  * The owner of the Syncher and all created reporters.
  * @type {HypertyURL}
  */


  (0, _createClass3.default)(Syncher, [{
    key: 'create',


    /**
    * Request a DataObjectReporter creation. The URL will be be requested by the allocation mechanism.
    * @param  {SchemaURL} schema - Hyperty Catalogue URL address that can be used to retrieve the JSON-Schema describing the Data Object schema
    * @param  {HypertyURL[]} observers - List of hyperties that are pre-authorized for subscription
    * @param  {JSON} initialData - Initial data of the reporter
    * @param  {boolean} store - (Optional) if true, object will be stored by the runtime
    * @param  {boolean} p2p - (Optional) if true, data synchronisation stream will use p2p connection as much as possible
    * @param  {string} name - (Optional) the name of the dataobject
    * @param  {MessageBodyIdentity} identity - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.
    * @param  {SyncMetadata} input - (optional) all metadata required to sunc the Data Object.
    * @return {Promise<DataObjectReporter>} Return Promise to a new Reporter. The reporter can be accepted or rejected by the PEP
    */
    value: function create(schema, observers, initialData) {
      var store = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      var p2p = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
      var name = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'no name';
      var identity = arguments[6];
      var input = arguments[7];


      if (!schema) throw Error('[Syncher - Create] - You need specify the data object schema');
      if (!observers) throw Error('[Syncher - Create] -The observers should be defined');

      var _this = this;
      var createInput = (0, _assign2.default)({}, input);

      createInput.p2p = p2p;
      createInput.store = store;
      createInput.schema = schema;
      createInput.authorise = observers;
      initialData ? createInput.data = (0, _utils.deepClone)(initialData) : createInput.data = {};
      createInput.name = name.length === 0 ? 'no name' : name;
      createInput.reporter = _this._owner;
      createInput.resume = false;
      if (input) {
        createInput.mutual = input.mutual ? input.mutual : true;
        createInput.name = input.name ? input.name : createInput.name;
      } else {
        createInput.mutual = true;
      }

      if (identity) {
        createInput.identity = identity;
      }

      //Object.assign(createInput, {resume: false});

      console.log('[syncher - create] - create Reporter - createInput: ', createInput);

      return _this._create(createInput);
    }

    /**
    * Request a DataObjectReporter creation. The URL will be be requested by the allocation mechanism.
    * @param  {Object} criteria - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.
    * @return {Promise<DataObjectReporter>[]} Return a promise with a list of DataObjectReporter to be resumed;
    */

  }, {
    key: 'resumeReporters',
    value: function resumeReporters(criteria) {
      var _this = this;
      console.log('[syncher - create] - resume Reporter - criteria: ', criteria);

      (0, _assign2.default)(criteria, { resume: true });

      return _this._resumeCreate(criteria);
    }

    /**
    * Request a subscription to an existent reporter object.
    * @param {SchemaURL} schema - Hyperty Catalogue URL address that can be used to retrieve the JSON-Schema describing the Data Object schema
    * @param {ObjectURL} objURL - Address of the existent reporter object to be observed
    * @param {Boolean} [store=false] - Save the subscription on the Syncher Manager for further resume (Default is false)
    * @param {Boolean} [p2p=false] - Info about if should use p2p connection (Default is false)
    * @param {Boolean} [mutual=true] - Info about if messages of this object should be encrypted (Default is true)
    * @param  {MessageBodyIdentity} identity - (optional) identity data to be added to identity the user reporter. To be used for legacy identities.
    * @return {Promise<DataObjectObserver>} Return Promise to a new observer. It's associated with the reporter.
    */

  }, {
    key: 'subscribe',
    value: function subscribe(schema, objURL) {
      var store = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var p2p = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      var mutual = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;
      var identity = arguments[5];

      var _this = this;
      var criteria = {};

      criteria.p2p = p2p;
      criteria.store = store;
      criteria.schema = schema;

      criteria.resource = objURL;
      if (identity) {
        criteria.identity = identity;
      }

      //TODO: For Further Study
      criteria.mutual = mutual;

      console.log('[syncher - subscribe] - subscribe criteria: ', criteria);

      (0, _assign2.default)(criteria, { resume: false });

      return _this._subscribe(criteria);
    }

    /**
    * Request a subscription to an existent reporter object.
    * @param {criteria} criteria - Information to discovery the observer object
    * @return {Promise<DataObjectObserver>} Return Promise to a new observer. It's associated with the reporter.
    */

  }, {
    key: 'resumeObservers',
    value: function resumeObservers(criteria) {
      var _this = this;
      var _criteria = criteria || {};

      (0, _assign2.default)(_criteria, { resume: true });

      return _this._resumeSubscribe(_criteria);
    }

    /**
    * Request a read action on the reporter object
    * @param {ObjectURL} objURL - URL of the reporter object to be read
    * @return {Promise<Object>} Return Promise to last available data of the reporter
    */

  }, {
    key: 'read',
    value: function read(objURL) {
      var _this = this;

      //FLOW-OUT: this message will be sent directly to reporter object (maybe there is no listener available, so it will be resolved with MessageBus -> resolve)
      //will reach the remote object in DataObjectReporter -> _onRead
      var readMsg = {
        type: 'read', from: _this._owner, to: objURL
      };

      return new _promise2.default(function (resolve, reject) {
        _this._bus.postMessage(readMsg, function (reply) {
          console.log('read-response: ', reply);
          if (reply.body.code === 200) {
            resolve(reply.body.value);
          } else {
            reject(reply.body.desc);
          }
        });
      });
    }

    /**
    * Setup the callback to process create and delete events of remove Reporter objects.
    * This is releated to the messagens sent by create to the observers Hyperty array.
    * @param {function(event: MsgEvent)} callback
    */

  }, {
    key: 'onNotification',
    value: function onNotification(callback) {
      this._onNotificationHandler = callback;
    }

    /**
    * Setup the callback to process close events from the runtime.
    * @param {function(event: MsgEvent)} callback
    */

  }, {
    key: 'onClose',
    value: function onClose(callback) {
      this._onClose = callback;
    }
  }, {
    key: '_create',
    value: function _create(input) {
      var _this = this;

      return new _promise2.default(function (resolve, reject) {

        var reporterInput = (0, _assign2.default)({}, input);

        var resume = input.resume;

        reporterInput.created = new Date().toISOString();
        reporterInput.runtime = _this._runtimeUrl;

        var requestValue = (0, _utils.deepClone)(reporterInput);

        delete requestValue.p2p;
        delete requestValue.store;
        delete requestValue.observers;
        delete requestValue.identity;

        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onCreate
        var requestMsg = {
          type: 'create', from: _this._owner, to: _this._subURL,
          body: { resume: resume, value: requestValue }
        };

        requestMsg.body.schema = reporterInput.schema;

        if (reporterInput.p2p) requestMsg.body.p2p = reporterInput.p2p;
        if (reporterInput.store) requestMsg.body.store = reporterInput.store;
        if (reporterInput.identity) requestMsg.body.identity = reporterInput.identity;

        console.log('[syncher._create]: ', reporterInput, requestMsg);

        //request create to the allocation system. Can be rejected by the PolicyEngine.
        _this._bus.postMessage(requestMsg, function (reply) {
          console.log('[syncher - create] - create-response: ', reply);
          if (reply.body.code === 200) {
            //reporter creation accepted
            reporterInput.url = reply.body.resource;

            reporterInput.status = 'live'; // pch: do we ned this?
            reporterInput.syncher = _this;
            reporterInput.childrens = reply.body.childrenResources;

            var newObj = _this._reporters[reporterInput.url];
            if (!newObj) {
              newObj = new _DataObjectReporter2.default(reporterInput);
              _this._reporters[reporterInput.url] = newObj;
              newObj.inviteObservers(input.authorise);
            }

            resolve(newObj);
          } else {
            //reporter creation rejected
            reject(reply.body.desc);
          }
        });
      });
    }
  }, {
    key: '_resumeCreate',
    value: function _resumeCreate(criteria) {
      var _this2 = this;

      var _this = this;

      return new _promise2.default(function (resolve, reject) {
        var resume = criteria.resume;

        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onCreate
        var requestMsg = {
          type: 'create', from: _this._owner, to: _this._subURL,
          body: { resume: resume }
        };

        console.log('[syncher - create]: ', criteria, requestMsg);

        if (criteria) {
          requestMsg.body.value = criteria;
          requestMsg.body.value.reporter = _this._owner;
        }

        if (criteria.p2p) requestMsg.body.p2p = criteria.p2p;
        if (criteria.store) requestMsg.body.store = criteria.store;
        if (criteria.observers) requestMsg.body.authorise = criteria.observers;
        if (criteria.identity) requestMsg.body.identity = criteria.identity;

        console.log('[syncher._resumeCreate] - resume message: ', requestMsg);

        //request create to the allocation system. Can be rejected by the PolicyEngine.
        _this._bus.postMessage(requestMsg, function (reply) {
          console.log('[syncher._resumeCreate] - create-resumed-response: ', reply);
          if (reply.body.code === 200) {

            var listOfReporters = reply.body.value;

            for (var index in listOfReporters) {

              var dataObject = listOfReporters[index];

              //reporter creation accepted

              dataObject.data = (0, _utils.deepClone)(dataObject.data) || {};

              if (dataObject.childrenObjects) {
                dataObject.childrenObjects = (0, _utils.deepClone)(dataObject.childrenObjects);
              }

              dataObject.mutual = false;
              dataObject.resume = true;
              dataObject.status = 'live'; // pch: do we ned this?
              dataObject.syncher = _this;

              console.log('[syncher._resumeCreate] - create-resumed-dataObjectReporter', dataObject);

              var newObj = new _DataObjectReporter2.default(dataObject);

              if (dataObject.childrenObjects) {
                newObj.resumeChildrens(dataObject.childrenObjects);
              }
              _this._reporters[dataObject.url] = newObj;
            }

            resolve(_this._reporters);
            if (_this2._onReportersResume) _this2._onReportersResume(_this2._reporters);
          } else if (reply.body.code === 404) {
            resolve({});
          } else {
            //reporter creation rejected
            reject(reply.body.desc);
          }
        });
      });
    }
  }, {
    key: '_subscribe',
    value: function _subscribe(input) {
      var _this = this;

      return new _promise2.default(function (resolve, reject) {

        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onLocalSubscribe
        var subscribeMsg = {
          type: 'subscribe', from: _this._owner, to: _this._subURL,
          body: {}
        };

        // Hyperty request to be an Observer
        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#hyperty-request-to-be-an-observer

        // Resume Subscriptions for the same Hyperty URL
        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-the-same-hyperty-url

        // Resume Subscriptions for a certain user and data schema independently of the Hyperty URL.
        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-a-certain-user-and-data-schema-independently-of-the-hyperty-url
        if (input) {
          if (input.hasOwnProperty('p2p')) subscribeMsg.body.p2p = input.p2p;
          if (input.hasOwnProperty('store')) subscribeMsg.body.store = input.store;
          if (input.hasOwnProperty('schema')) subscribeMsg.body.schema = input.schema;
          if (input.hasOwnProperty('identity')) subscribeMsg.body.identity = input.identity;
          if (input.hasOwnProperty('resource')) subscribeMsg.body.resource = input.resource;
        }

        subscribeMsg.body.resume = input.resume;

        //TODO: For Further Study
        if (input.hasOwnProperty('mutual')) subscribeMsg.body.mutualAuthentication = input.mutual;

        console.log('[syncher_subscribe] - subscribe message: ', input, subscribeMsg);

        //request subscription
        //Provisional data is applied to the DataObjectObserver after confirmation. Or discarded if there is no confirmation.
        //for more info see the DataProvisional class documentation.
        _this._bus.postMessage(subscribeMsg, function (reply) {
          console.log('[syncher] - subscribe-response: ', reply);

          var objURL = reply.body.resource;

          var newProvisional = _this._provisionals[objURL];
          delete _this._provisionals[objURL];
          if (newProvisional) newProvisional._releaseListeners();

          if (reply.body.code < 200) {
            console.log('[syncher] - new DataProvisional: ', reply.body.childrenResources, objURL);
            newProvisional = new _DataProvisional2.default(_this._owner, objURL, _this._bus, reply.body.childrenResources);
            _this._provisionals[objURL] = newProvisional;
          } else if (reply.body.code === 200) {
            console.log('[syncher] - new Data Object Observer: ', reply, _this._provisionals);

            var observerInput = reply.body.value;

            observerInput.syncher = _this;
            observerInput.p2p = input.p2p;
            observerInput.store = input.store;
            observerInput.identity = input.identity;
            observerInput.resume = false;

            // todo: For Further Study
            observerInput.mutual = input.mutual;

            //observerInput.children = newProvisional.children;

            //TODO: mutualAuthentication For Further Study
            var newObj = _this._observers[objURL];
            if (!newObj) {
              newObj = new _DataObjectObserver2.default(observerInput);
              _this._observers[objURL] = newObj;
            } else {
              newObj.sync();
            }

            console.log('[syncher] - new Data Object Observer already exist: ', newObj);

            resolve(newObj);

            if (newProvisional) {
              newProvisional.apply(newObj);
            }
          } else {
            reject(reply.body.desc);
          }
        });
      });
    }
  }, {
    key: '_resumeSubscribe',
    value: function _resumeSubscribe(criteria) {
      var _this3 = this;

      var _this = this;

      return new _promise2.default(function (resolve, reject) {

        //FLOW-OUT: this message will be sent to the runtime instance of SyncherManager -> _onLocalSubscribe
        var subscribeMsg = {
          type: 'subscribe', from: _this._owner, to: _this._subURL,
          body: {}
        };

        // Hyperty request to be an Observer
        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#hyperty-request-to-be-an-observer

        // Resume Subscriptions for the same Hyperty URL
        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-the-same-hyperty-url

        // Resume Subscriptions for a certain user and data schema independently of the Hyperty URL.
        // https://github.com/reTHINK-project/specs/blob/master/messages/data-sync-messages.md#resume-subscriptions-for-a-certain-user-and-data-schema-independently-of-the-hyperty-url
        if (criteria) {
          if (criteria.hasOwnProperty('p2p')) subscribeMsg.body.p2p = criteria.p2p;
          if (criteria.hasOwnProperty('store')) subscribeMsg.body.store = criteria.store;
          if (criteria.hasOwnProperty('schema')) subscribeMsg.body.schema = criteria.schema;
          if (criteria.hasOwnProperty('identity')) subscribeMsg.body.identity = criteria.identity;
          if (criteria.hasOwnProperty('resource')) subscribeMsg.body.resource = criteria.url;
        }

        subscribeMsg.body.resume = criteria.resume;

        //TODO: For Further Study
        var mutualAuthentication = criteria.mutual;
        if (criteria.hasOwnProperty('mutual')) subscribeMsg.body.mutualAuthentication = mutualAuthentication;

        console.log('[syncher] - subscribe message: ', criteria, subscribeMsg);

        //request subscription
        //Provisional data is applied to the DataObjectObserver after confirmation. Or discarded if there is no confirmation.
        //for more info see the DataProvisional class documentation.
        _this._bus.postMessage(subscribeMsg, function (reply) {
          console.log('[syncher] - subscribe-resumed-response: ', reply);

          var objURL = reply.body.resource;

          var newProvisional = _this._provisionals[objURL];
          delete _this._provisionals[objURL];
          if (newProvisional) newProvisional._releaseListeners();

          if (reply.body.code < 200) {
            // todo: check if this is needed for the resume

            console.log('[syncher] - resume new DataProvisional: ', reply, objURL);
            newProvisional = new _DataProvisional2.default(_this._owner, objURL, _this._bus, reply.body.childrenResources);
            _this._provisionals[objURL] = newProvisional;
          } else if (reply.body.code === 200) {

            var listOfObservers = reply.body.value;

            for (var index in listOfObservers) {

              var dataObject = listOfObservers[index];
              console.log('[syncher] - Resume Object Observer: ', reply, dataObject, _this._provisionals);

              if (dataObject.childrenObjects) {
                dataObject.childrenObjects = (0, _utils.deepClone)(dataObject.childrenObjects);
              }

              dataObject.data = (0, _utils.deepClone)(dataObject.data) || {};
              dataObject.resume = true;
              dataObject.syncher = _this;

              //TODO: mutualAuthentication For Further Study
              console.log('[syncher._resumeSubscribe] - create new dataObject: ', dataObject);
              var newObj = new _DataObjectObserver2.default(dataObject);

              if (dataObject.childrenObjects) {
                newObj.resumeChildrens(dataObject.childrenObjects);
              }
              console.log('[syncher._resumeSubscribe] - new dataObject', newObj);
              _this._observers[newObj.url] = newObj;

              if (_this._provisionals[newObj.url]) {
                _this._provisionals[newObj.url].apply(newObj);
              }

              //lets sync with Reporter
              // it was commented to let hyperties decide when to sync
              //newObj.sync();
            }

            resolve(_this._observers);

            if (_this3._onObserversResume) _this3._onObserversResume(_this._observers);
          } else if (reply.body.code === 404) {
            resolve({});
          } else {
            reject(reply.body.desc);
          }
        });
      });
    }

    //FLOW-IN: message received from a local runtime ReporterObject -> _onRemoteSubscribe

  }, {
    key: '_onForward',
    value: function _onForward(msg) {
      var _this = this;

      var reporter = _this._reporters[msg.body.to];
      reporter._onForward(msg);
    }

    //FLOW-IN: message received from a remote Syncher -> create (this is actually an invitation to subscribe)

  }, {
    key: '_onRemoteCreate',
    value: function _onRemoteCreate(msg) {
      var _this = this;
      var resource = msg.from.slice(0, -13); //remove "/subscription" from the URL
      var dividedURL = (0, _utils.divideURL)(resource);
      var domain = dividedURL.domain;

      var event = {
        type: msg.type,
        from: msg.body.source,
        url: resource,
        domain: domain,
        schema: msg.body.schema,
        value: msg.body.value,
        identity: msg.body.identity,

        ack: function ack(type) {
          var lType = 200;
          if (type) {
            lType = type;
          }

          //send ack response message
          _this._bus.postMessage({
            id: msg.id, type: 'response', from: msg.to, to: msg.from,
            body: { code: lType }
          });
        }
      };

      if (_this._onNotificationHandler) {
        console.info('[Syncher] NOTIFICATION-EVENT: ', event);
        _this._onNotificationHandler(event);
      }
    }

    //FLOW-IN: message received from a remote DataObjectReporter -> delete

  }, {
    key: '_onRemoteDelete',
    value: function _onRemoteDelete(msg) {
      var _this = this;

      //remove "/subscription" from the URL
      var resource = msg.body.resource;

      var object = _this._observers[resource];

      var unsubscribe = {
        from: _this.owner,
        to: _this._subURL,
        id: msg.id,
        type: 'unsubscribe',
        body: { resource: msg.body.resource }
      };

      _this._bus.postMessage(unsubscribe);

      delete _this._observers[resource];

      if (object) {
        var event = {
          type: msg.type,
          url: resource,
          identity: msg.body.identity,

          ack: function ack(type) {
            var lType = 200;
            if (type) {
              lType = type;
            }

            //TODO: any other different options for the release process, like accept but nor release local?
            if (lType === 200) {
              object.delete();
            }

            //send ack response message
            _this._bus.postMessage({
              id: msg.id, type: 'response', from: msg.to, to: msg.from,
              body: { code: lType, source: _this._owner }
            });
          }
        };

        if (_this._onNotificationHandler) {
          console.log('NOTIFICATION-EVENT: ', event);
          _this._onNotificationHandler(event);
        }
      } else {
        _this._bus.postMessage({
          id: msg.id, type: 'response', from: msg.to, to: msg.from,
          body: { code: 404, source: _this._owner }
        });
      }
    }

    // close event received from runtime registry

  }, {
    key: '_onExecute',
    value: function _onExecute(msg) {
      var _this = this;

      var reply = {
        id: msg.id, type: 'response', from: msg.to, to: msg.from,
        body: { code: 200 }
      };

      if ((msg.from === _this._runtimeUrl + '/registry/' || msg.from === _this._runtimeUrl + '/registry') && msg.body && msg.body.method && msg.body.method === 'close' && _this._onClose) {
        var event = {
          type: 'close',

          ack: function ack(type) {
            if (type) {
              reply.body.code = type;
            }

            //send ack response message
            _this._bus.postMessage(reply);
          }
        };

        console.info('[Syncher] Close-EVENT: ', event);
        _this._onClose(event);
      } else {
        _this._bus.postMessage(reply);
      }
    }

    /**
    * Callback system to trigger the resumed reporters
    * @param  {Function} callback - function callback which will be invoked
    * @return {Object<URL, DataObjectReporter>} Return one object with all resumed reporters;
    */

  }, {
    key: 'onReportersResume',
    value: function onReportersResume(callback) {
      this._onReportersResume = callback;
    }

    /**
    * Callback system to trigger the resumed observers
    * @param  {Function} callback - function callback which will be invoked
    * @return {Object<URL, DataObjectObserver>} Return one object with all resumed observers;
    */

  }, {
    key: 'onObserversResume',
    value: function onObserversResume(callback) {
      this._onObserversResume = callback;
    }
  }, {
    key: 'owner',
    get: function get() {
      return this._owner;
    }

    /**
    * All owned reporters, the ones that were created by a create
    * @type {Object<URL, DataObjectReporter>}
    */

  }, {
    key: 'reporters',
    get: function get() {
      return this._reporters;
    }

    /**
    * All owned observers, the ones that were created by a local subscription
    * @type {Object<URL, DataObjectObserver>}
    */

  }, {
    key: 'observers',
    get: function get() {
      return this._observers;
    }
  }]);
  return Syncher;
}();

exports.default = Syncher;
module.exports = exports['default'];

/***/ }),
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataObjectObserver = exports.DataObjectReporter = exports.Syncher = undefined;

var _Syncher = __webpack_require__(133);

var _Syncher2 = _interopRequireDefault(_Syncher);

var _DataObjectReporter = __webpack_require__(122);

var _DataObjectReporter2 = _interopRequireDefault(_DataObjectReporter);

var _DataObjectObserver = __webpack_require__(121);

var _DataObjectObserver2 = _interopRequireDefault(_DataObjectObserver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Syncher = _Syncher2.default;
exports.DataObjectReporter = _DataObjectReporter2.default;
exports.DataObjectObserver = _DataObjectObserver2.default;

/***/ }),
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(10);

var _createClass3 = _interopRequireDefault(_createClass2);

var _ProxyObject = __webpack_require__(124);

var _ProxyObject2 = _interopRequireDefault(_ProxyObject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import { deepClone } from '../utils/utils.js';

/**
 * The class returned from the DataObject addChildren call or from onAddChildren if remotely created.
 */
var DataObjectChild /* implements SyncStatus */ = function () {
  /* private
    ----event handlers----
  _onResponseHandler: (event) => void
  */

  /**
   * @ignore
   * Should not be used directly by Hyperties. It's called by the DataObject.addChildren
   */
  function DataObjectChild(input) {
    (0, _classCallCheck3.default)(this, DataObjectChild);

    var _this = this;

    function throwMandatoryParmMissingError(par) {
      throw '[DataObjectChild] ' + par + ' mandatory parameter is missing';
    }

    input.parent ? _this._parent = input.parent : throwMandatoryParmMissingError('parent');
    input.url ? _this._url = input.url : throwMandatoryParmMissingError('url');
    input.created ? _this._created = input.created : throwMandatoryParmMissingError('created');
    input.reporter ? _this._reporter = input.reporter : throwMandatoryParmMissingError('reporter');
    input.runtime ? _this._runtime = input.runtime : throwMandatoryParmMissingError('runtime');
    input.schema ? _this._schema = input.schema : throwMandatoryParmMissingError('schema');
    input.parentObject ? _this._parentObject = input.parentObject : throwMandatoryParmMissingError('parentObject');

    if (input.name) _this._name = input.name;
    if (input.description) _this._description = input.description;
    if (input.tags) _this._tags = input.tags;
    if (input.resources) _this._resources = input.resources;
    if (input.observerStorage) _this._observerStorage = input.observerStorage;
    if (input.publicObservation) _this._publicObservation = input.publicObservation;

    if (input.data) {
      _this._syncObj = new _ProxyObject2.default(input.data);
    } else {
      _this._syncObj = new _ProxyObject2.default({});
    }

    console.log('[DataObjectChild -  Constructor] - ', _this._syncObj);

    _this._bus = _this._parentObject._bus;
    _this._owner = _this._parentObject._owner;

    _this._allocateListeners();

    _this._metadata = input;

    // delete _this._metadata.data;
    delete _this._metadata.parentObject;
  }

  (0, _createClass3.default)(DataObjectChild, [{
    key: '_allocateListeners',
    value: function _allocateListeners() {
      var _this = this;

      //this is only needed for children reporters
      if (_this._reporter === _this._owner) {
        _this._listener = _this._bus.addListener(_this._reporter, function (msg) {
          if (msg.type === 'response' && msg.id === _this._msgId) {
            console.log('DataObjectChild.onResponse:', msg);
            _this._onResponse(msg);
          }
        });
      }
    }
  }, {
    key: '_releaseListeners',
    value: function _releaseListeners() {
      var _this = this;

      if (_this._listener) {
        _this._listener.remove();
      }
    }

    /**
     * Release and delete object data
     */

  }, {
    key: 'delete',
    value: function _delete() {
      var _this = this;

      _this._releaseListeners();

      //TODO: send delete message ?
    }

    /**
     * All Metadata about the Child Data Object
     * @type {Object} -
     */

  }, {
    key: 'onChange',


    /**
     * Register the change listeners sent by the reporter child
     * @param {function(event: MsgEvent)} callback
     */
    value: function onChange(callback) {
      this._syncObj.observe(function (event) {
        console.log('[DataObjectChild - observer] - ', event);
        callback(event);
      });
    }

    /**
     * Setup the callback to process response notifications of the creates
     * @param {function(event: MsgEvent)} callback
     */

  }, {
    key: 'onResponse',
    value: function onResponse(callback) {
      this._onResponseHandler = callback;
    }

    //FLOW-IN: message received from a remote DataObject -> _onChildCreate

  }, {
    key: '_onResponse',
    value: function _onResponse(msg) {
      var _this = this;

      var event = {
        type: msg.type,
        url: msg.body.source,
        code: msg.body.code
      };

      if (_this._onResponseHandler) {
        _this._onResponseHandler(event);
      }
    }
  }, {
    key: 'metadata',
    get: function get() {
      return this._metadata;
    }

    /**
     * Children ID generated on addChildren. Unique identifier
     * @type {URL} - URL of the format <HypertyURL>#<numeric-sequence>
     */

  }, {
    key: 'childId',
    get: function get() {
      return this._childId;
    }

    /**
     * Data Structure to be synchronized.
     * @type {JSON} - JSON structure that should follow the defined schema, if any.
     */

  }, {
    key: 'data',
    get: function get() {
      return this._syncObj.data;
    }

    /**
     * Set for this dataObjectChild an identity
     * @method identity
     * @param  {Identity} identity identity from who created the message
     */

  }, {
    key: 'identity',
    set: function set(identity) {
      this._identity = identity;
    }

    /**
     * Get for this dataObjectChild an identity
     * @method identity
     * @return {Identity} identity from who created the message
     */
    ,
    get: function get() {
      return this._identity;
    }
  }]);
  return DataObjectChild;
}(); /**
     * Copyright 2016 PT Inovação e Sistemas SA
     * Copyright 2016 INESC-ID
     * Copyright 2016 QUOBIS NETWORKS SL
     * Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
     * Copyright 2016 ORANGE SA
     * Copyright 2016 Deutsche Telekom AG
     * Copyright 2016 Apizee
     * Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     **/

exports.default = DataObjectChild;
module.exports = exports['default'];

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(10);

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/

/**
 * @access private
 * This class is responsible for collecting delta changes in remote objects, before the response of subscription reach the observer.
 * It's used in Syncher -> subscribe. The flow is defined as:
 * 1. (observer) --subscribe--> (reporter)
 * 2. (observer) <--delta updates-- (reporter)
 * 3. (observer) <--subscribe response-- (reporter)
 * This means that there could be delta updates transferred before the subscription confirmation.
 * Since there is no DataObjectObserver before the ubscription confirmation, there should be some other object collecting the updates.
 * Provisional data is applied to the DataObjectObserver after confirmation. Or discarded if there is no confirmation.
 */
var DataProvisional = function () {
  /* private
  _childrenListeners: [MsgListener]
  _listener: MsgListener
    _changes: []
  */

  function DataProvisional(owner, url, bus, children) {
    (0, _classCallCheck3.default)(this, DataProvisional);

    var _this = this;

    _this._owner = owner;
    _this._url = url;
    _this._bus = bus;
    _this._children = children;

    _this._changes = [];
    _this._allocateListeners();
  }

  (0, _createClass3.default)(DataProvisional, [{
    key: '_allocateListeners',
    value: function _allocateListeners() {
      var _this = this;

      _this._listener = _this._bus.addListener(_this._url, function (msg) {
        console.log('DataProvisional-' + _this._url + '-RCV: ', msg);
        _this._changes.push(msg);
      });

      /*
      _this._childrenListeners = [];
      if (_this._children) {
        let childBaseURL = url + '/children/';
        _this._children.forEach((child) => {
          let childURL = childBaseURL + child;
          let listener = _this._bus.addListener(childURL, (msg) => {
            //ignore msg sent by himself
            if (msg.from !== owner) {
              console.log(msg);
            }
          });
            _this._childrenListeners.push(listener);
        });
      }*/
    }
  }, {
    key: '_releaseListeners',
    value: function _releaseListeners() {
      var _this = this;

      _this._listener.remove();

      /*_this._childrenListeners.forEach((listener) => {
        listener.remove();
      });*/
    }
  }, {
    key: 'apply',
    value: function apply(observer) {
      var _this = this;
      _this._changes.forEach(function (change) {
        observer._changeObject(observer._syncObj, change);
      });
    }
  }, {
    key: 'children',
    get: function get() {
      return this._children;
    }
  }]);
  return DataProvisional;
}();

exports.default = DataProvisional;
module.exports = exports['default'];

/***/ }),
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(161), __esModule: true };

/***/ }),
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(165);
module.exports = __webpack_require__(0).Object.assign;

/***/ }),
/* 160 */,
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(167);
var $Object = __webpack_require__(0).Object;
module.exports = function getOwnPropertyDescriptor(it, key){
  return $Object.getOwnPropertyDescriptor(it, key);
};

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys  = __webpack_require__(18)
  , gOPS     = __webpack_require__(58)
  , pIE      = __webpack_require__(41)
  , toObject = __webpack_require__(32)
  , IObject  = __webpack_require__(56)
  , $assign  = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(11)(function(){
  var A = {}
    , B = {}
    , S = Symbol()
    , K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function(k){ B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
  var T     = toObject(target)
    , aLen  = arguments.length
    , index = 1
    , getSymbols = gOPS.f
    , isEnum     = pIE.f;
  while(aLen > index){
    var S      = IObject(arguments[index++])
      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
      , length = keys.length
      , j      = 0
      , key;
    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
  } return T;
} : $assign;

/***/ }),
/* 163 */,
/* 164 */,
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(9);

$export($export.S + $export.F, 'Object', {assign: __webpack_require__(162)});

/***/ }),
/* 166 */,
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject                 = __webpack_require__(13)
  , $getOwnPropertyDescriptor = __webpack_require__(57).f;

__webpack_require__(45)('getOwnPropertyDescriptor', function(){
  return function getOwnPropertyDescriptor(it, key){
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uPzVjYTYiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIGMyNGI3MGExODNiN2I3MzQzNWUwP2MwOWQiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY29yZS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fd2tzLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1kcC5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtb2JqZWN0LmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hpZGUuanMiLCJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanM/MjFhZiIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19leHBvcnQuanMiLCJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZmFpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faGFzLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWlvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3R4LmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3Byb3BlcnR5LWRlc2MuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlcmF0b3JzLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RvbS1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2YuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC10by1zdHJpbmctdGFnLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VpZC5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kZWZpbmVkLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2xpYnJhcnkuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2hhcmVkLWtleS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2hhcmVkLmpzIiwid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzLmpzIiwid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LXBpZS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19odG1sLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1ncG8uanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWtleXMtaW50ZXJuYWwuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LXNhcC5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19yZWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1sZW5ndGguanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fd2tzLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MtZXh0LmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vanNvbi9zdHJpbmdpZnkuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY2xhc3NvZi5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pb2JqZWN0LmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BkLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BzLmpzIiwid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9rZXlzLmpzIiwid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hZGQtdG8tdW5zY29wYWJsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYXJyYXktaW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1zdGVwLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1kcHMuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcG4uanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc3RyaW5nLWF0LmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3Rhc2suanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3V0aWxzLmpzIiwid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL3Byb21pc2UuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fbWV0YS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qcyIsIndlYnBhY2s6Ly8vLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlLmpzIiwid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL3N5bWJvbC5qcyIsIndlYnBhY2s6Ly8vLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wvaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qva2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYW4taW5zdGFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZW51bS1rZXlzLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Zvci1vZi5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pbnZva2UuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWNhbGwuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1kZXRlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fa2V5b2YuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fbWljcm90YXNrLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BuLWV4dC5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19yZWRlZmluZS1hbGwuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2V0LXByb3RvLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC1zcGVjaWVzLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NwZWNpZXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5wcm9taXNlLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN5bWJvbC5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2Fzc2lnbi5qcyIsIndlYnBhY2s6Ly8vLi9+L3Byb3h5LW9ic2VydmUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N5bmNoZXIvRGF0YU9iamVjdE9ic2VydmVyLmpzIiwid2VicGFjazovLy8uL3NyYy9zeW5jaGVyL0RhdGFPYmplY3RSZXBvcnRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3luY2hlci9EYXRhT2JqZWN0LmpzIiwid2VicGFjazovLy8uL3NyYy9zeW5jaGVyL1Byb3h5T2JqZWN0LmpzIiwid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3luY2hlci9TeW5jaGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9TeW5jaGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9zeW5jaGVyL0RhdGFPYmplY3RDaGlsZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3luY2hlci9EYXRhUHJvdmlzaW9uYWwuanMiLCJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvYXNzaWduLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWFzc2lnbi5qcyIsIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduLmpzIiwid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiXSwibmFtZXMiOlsiZGl2aWRlVVJMIiwiZGl2aWRlRW1haWwiLCJlbXB0eU9iamVjdCIsImRlZXBDbG9uZSIsImdldFVzZXJVUkxGcm9tRW1haWwiLCJnZXRVc2VyRW1haWxGcm9tVVJMIiwiY29udmVydFRvVXNlclVSTCIsImNoZWNrQXR0cmlidXRlIiwicGFyc2VBdHRyaWJ1dGVzIiwidXJsIiwiRXJyb3IiLCJyZWN1cnNlIiwidmFsdWUiLCJyZWdleCIsInN1YnN0IiwicGFydHMiLCJyZXBsYWNlIiwic3BsaXQiLCJpbmNsdWRlcyIsInJlc3VsdCIsInR5cGUiLCJkb21haW4iLCJpZGVudGl0eSIsImNvbnNvbGUiLCJlcnJvciIsInNjaGVtZSIsInN1YnN0ciIsImluZGV4T2YiLCJlbWFpbCIsImluZGV4T2ZBdCIsInVzZXJuYW1lIiwic3Vic3RyaW5nIiwibGVuZ3RoIiwib2JqZWN0Iiwib2JqIiwiSlNPTiIsInBhcnNlIiwidXNlckVtYWlsIiwidXNlclVSTCIsImlkZW50aWZpZXIiLCJkaXZpZGVkVVJMIiwicGF0aCIsImxpc3QiLCJmaW5hbCIsInRlc3QiLCJtYXRjaCIsIm0iLCJleGVjIiwiaW5kZXgiLCJsYXN0SW5kZXgiLCJmb3JFYWNoIiwiZ3JvdXBJbmRleCIsInB1c2giLCJtYXAiLCJpdGVtIiwibG9nIiwic3RyaW5nMyIsInN0cmluZzEiLCJhcnJheTEiLCJzdHJpbmcyIiwiYXJyYXkyIiwic2xpY2UiLCJjb25jYXQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiRmlsdGVyVHlwZSIsIkFOWSIsIlNUQVJUIiwiRVhBQ1QiLCJEYXRhT2JqZWN0T2JzZXJ2ZXIiLCJpbnB1dCIsIl90aGlzIiwiX3ZlcnNpb24iLCJ2ZXJzaW9uIiwiX2ZpbHRlcnMiLCJfc3luY09iaiIsIm9ic2VydmUiLCJldmVudCIsIl9vbkZpbHRlciIsIl9hbGxvY2F0ZUxpc3RlbmVycyIsImluZm8iLCJfc3luY2hlciIsInJlYWQiLCJfbWV0YWRhdGEiLCJ0aGVuIiwiZGF0YSIsImxhc3RNb2RpZmllZCIsImNhdGNoIiwicmVhc29uIiwiX2NoYW5nZUxpc3RlbmVyIiwiX2J1cyIsImFkZExpc3RlbmVyIiwiX3VybCIsIm1zZyIsIl9jaGFuZ2VPYmplY3QiLCJyZW1vdmUiLCJ1bnN1YnNjcmliZSIsIl9yZWxlYXNlTGlzdGVuZXJzIiwiX29ic2VydmVycyIsInVuU3Vic2NyaWJlTXNnIiwiZnJvbSIsIl9vd25lciIsInRvIiwiX3N1YlVSTCIsImJvZHkiLCJyZXNvdXJjZSIsInBvc3RNZXNzYWdlIiwicmVwbHkiLCJjb2RlIiwiY2FsbGJhY2siLCJrZXkiLCJmaWx0ZXJPYmoiLCJpZHgiLCJmaWVsZCIsInJlc29sdmUiLCJyZWplY3QiLCJfc3Vic2NyaWJlUmVnaXN0cmF0aW9uIiwiX29uRGlzY29ubmVjdGVkIiwiZXJyIiwiX3J1bnRpbWVVcmwiLCJyZXNvdXJjZXMiLCJfZ2VuZXJhdGVMaXN0ZW5lciIsIm5vdGlmaWNhdGlvblVSTCIsIm1ldGhvZCIsInBhcmFtcyIsIndhcm5pbmciLCJEYXRhT2JqZWN0UmVwb3J0ZXIiLCJfc3Vic2NyaXB0aW9ucyIsIl9vbkNoYW5nZSIsIl9pbnZpdGF0aW9ucyIsIl9vYmplY3RMaXN0ZW5lciIsIl9vblJlc3BvbnNlIiwiX29uUmVhZCIsIl9vbkV4ZWN1dGUiLCJvYnNlcnZlcnMiLCJ0b0ludml0ZSIsIm9ic2VydmVyIiwiaW52aXRlTXNnIiwicmVzdW1lIiwic2NoZW1hIiwiX3NjaGVtYSIsImF1dGhvcmlzZSIsImRlbGV0ZU1zZyIsIl9yZXBvcnRlcnMiLCJfb25TdWJzY3JpcHRpb25IYW5kbGVyIiwiX29uUmVzcG9uc2VIYW5kbGVyIiwiX29uUmVhZEhhbmRsZXIiLCJfb25FeGVjdXRlSGFuZGxlciIsIl9vblN1YnNjcmliZSIsIl9vblVuU3Vic2NyaWJlIiwiaHlwZXJ0eVVybCIsImFjY2VwdCIsInN1YiIsInN0YXR1cyIsIm1ldGFkYXRhIiwic3Vic2NyaXB0aW9ucyIsIm1zZ1ZhbHVlIiwic2VuZE1zZyIsImlkIiwiaGFzT3duUHJvcGVydHkiLCJtdXR1YWxBdXRoZW50aWNhdGlvbiIsIl9tdXR1YWxBdXRoZW50aWNhdGlvbiIsImRlc2MiLCJvYmplY3RWYWx1ZSIsInJlc3BvbnNlIiwiRGF0YU9iamVjdCIsInRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvciIsInBhciIsInN5bmNoZXIiLCJjcmVhdGVkIiwiX2NyZWF0ZWQiLCJyZXBvcnRlciIsIl9yZXBvcnRlciIsInJ1bnRpbWUiLCJfcnVudGltZSIsIm5hbWUiLCJfbmFtZSIsIl9zdGF0dXMiLCJfY2hpbGRyZW5zIiwiY2hpbGRyZW5zIiwibXV0dWFsIiwiX2NoaWxkSWQiLCJfY2hpbGRyZW5MaXN0ZW5lcnMiLCJfcmVzdW1lZCIsImRlc2NyaXB0aW9uIiwiX2Rlc2NyaXB0aW9uIiwidGFncyIsIl90YWdzIiwiX3Jlc291cmNlcyIsIm9ic2VydmVyU3RvcmFnZSIsIl9vYnNlcnZlclN0b3JhZ2UiLCJwdWJsaWNPYnNlcnZhdGlvbiIsIl9wdWJsaWNPYnNlcnZhdGlvbiIsImNoaWxkSWRJbnQiLCJjaGlsZElkU3RyaW5nIiwiY2hpbGRJZCIsIk51bWJlciIsImNoaWxkQmFzZVVSTCIsImNoaWxkIiwiY2hpbGRVUkwiLCJsaXN0ZW5lciIsIl9vbkNoaWxkQ3JlYXRlIiwiX2NoYW5nZUNoaWxkcmVuIiwiX2NoaWxkcmVuT2JqZWN0cyIsImNoaWxkcmVuUmVzb3VyY2UiLCJjaGlsZHJlbiIsImNoaWxkSW5wdXQiLCJwYXJlbnRPYmplY3QiLCJwYXJlbnQiLCJpbml0aWFsRGF0YSIsIm1zZ0NoaWxkUGF0aCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsIm5ld0NoaWxkIiwiYm9keVZhbHVlIiwicmVxdWVzdE1zZyIsIm1zZ0lkIiwib25DaGFuZ2UiLCJfb25BZGRDaGlsZHJlbkhhbmRsZXIiLCJzZXRUaW1lb3V0Iiwic291cmNlIiwiY2hpbGRJbmZvIiwiY2hhbmdlTXNnIiwiYXR0cmlidXRlIiwib1R5cGUiLCJPQkpFQ1QiLCJjVHlwZSIsIlJFTU9WRSIsImF0dHJpYnV0ZVR5cGUiLCJVUERBVEUiLCJvcGVyYXRpb24iLCJzeW5jT2JqIiwiZmluZFJlc3VsdCIsImZpbmRCZWZvcmUiLCJBUlJBWSIsIkFERCIsImFyciIsImxhc3QiLCJBcnJheSIsInByb3RvdHlwZSIsInNwbGljZSIsImFwcGx5Iiwib2JqZWN0VHlwZSIsIlN5bmNPYmplY3QiLCJfZGF0YSIsIl9pbnRlcm5hbE9ic2VydmUiLCJfZmluZFdpdGhTcGxpdCIsInBvcCIsImhhbmRsZXIiLCJjaGFuZ2VzZXQiLCJldmVyeSIsImNoYW5nZSIsIl9vbkNoYW5nZXMiLCJPYmplY3QiLCJkZWVwT2JzZXJ2ZSIsIm9ialR5cGUiLCJjb25zdHJ1Y3RvciIsIk9iamVjdFR5cGUiLCJmaWVsZFN0cmluZyIsImtleXBhdGgiLCJuZXdWYWx1ZSIsIl9maXJlRXZlbnQiLCJDaGFuZ2VUeXBlIiwiU3luY2hlciIsIm93bmVyIiwiYnVzIiwiY29uZmlnIiwicnVudGltZVVSTCIsIl9wcm92aXNpb25hbHMiLCJfb25Gb3J3YXJkIiwiX29uUmVtb3RlQ3JlYXRlIiwiX29uUmVtb3RlRGVsZXRlIiwic3RvcmUiLCJwMnAiLCJjcmVhdGVJbnB1dCIsIl9jcmVhdGUiLCJjcml0ZXJpYSIsIl9yZXN1bWVDcmVhdGUiLCJvYmpVUkwiLCJfc3Vic2NyaWJlIiwiX2NyaXRlcmlhIiwiX3Jlc3VtZVN1YnNjcmliZSIsInJlYWRNc2ciLCJfb25Ob3RpZmljYXRpb25IYW5kbGVyIiwiX29uQ2xvc2UiLCJyZXBvcnRlcklucHV0IiwicmVxdWVzdFZhbHVlIiwiY2hpbGRyZW5SZXNvdXJjZXMiLCJuZXdPYmoiLCJpbnZpdGVPYnNlcnZlcnMiLCJsaXN0T2ZSZXBvcnRlcnMiLCJkYXRhT2JqZWN0IiwiY2hpbGRyZW5PYmplY3RzIiwicmVzdW1lQ2hpbGRyZW5zIiwiX29uUmVwb3J0ZXJzUmVzdW1lIiwic3Vic2NyaWJlTXNnIiwibmV3UHJvdmlzaW9uYWwiLCJvYnNlcnZlcklucHV0Iiwic3luYyIsImxpc3RPZk9ic2VydmVycyIsIl9vbk9ic2VydmVyc1Jlc3VtZSIsImFjayIsImxUeXBlIiwiZGVsZXRlIiwiRGF0YU9iamVjdENoaWxkIiwiX3BhcmVudCIsIl9wYXJlbnRPYmplY3QiLCJfbGlzdGVuZXIiLCJfbXNnSWQiLCJfaWRlbnRpdHkiLCJEYXRhUHJvdmlzaW9uYWwiLCJfY2hpbGRyZW4iLCJfY2hhbmdlcyJdLCJtYXBwaW5n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QU1xQixJQUEzQixHQUFrQyxRQUE5QyxFQUF3REMsR0FBeEQ7QUFDQXRCLGNBQU1pUCxRQUFOLENBQWVwUSxJQUFmLENBQW9CeUMsR0FBcEI7QUFDRCxPQUhpQixDQUFsQjs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JEOzs7d0NBRW1CO0FBQ2xCLFVBQUl0QixRQUFRLElBQVo7O0FBRUFBLFlBQU00TyxTQUFOLENBQWdCcE4sTUFBaEI7O0FBRUE7OztBQUdEOzs7MEJBSUt5QyxRLEVBQVU7QUFDZCxVQUFJakUsUUFBUSxJQUFaO0FBQ0FBLFlBQU1pUCxRQUFOLENBQWV0USxPQUFmLENBQXVCLFVBQUN5TSxNQUFELEVBQVk7QUFDakNuSCxpQkFBUzFDLGFBQVQsQ0FBdUIwQyxTQUFTN0QsUUFBaEMsRUFBMENnTCxNQUExQztBQUNELE9BRkQ7QUFHRDs7O3dCQVBjO0FBQUUsYUFBTyxLQUFLNEQsU0FBWjtBQUF3Qjs7Ozs7a0JBVTVCRCxlOzs7Ozs7Ozs7O0FDcEdmLGtCQUFrQix5RDs7Ozs7Ozs7OztBQ0FsQjtBQUNBLHNEOzs7Ozs7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFOzs7Ozs7O0FDSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxVQUFVLEVBQUU7QUFDOUMsbUJBQW1CLHNDQUFzQztBQUN6RCxDQUFDLG9DQUFvQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQyxXOzs7Ozs7OztBQ2hDRDtBQUNBOztBQUVBLDBDQUEwQyxpQ0FBb0MsRTs7Ozs7OztBQ0g5RTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEUiLCJmaWxlIjoiU3luY2hlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFwiU3luY2hlclwiLCBbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJTeW5jaGVyXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcIlwiXSA9IHJvb3RbXCJcIl0gfHwge30sIHJvb3RbXCJcIl1bXCJTeW5jaGVyXCJdID0gZmFjdG9yeSgpO1xufSkodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGlkZW50aXR5IGZ1bmN0aW9uIGZvciBjYWxsaW5nIGhhcm1vbnkgaW1wb3J0cyB3aXRoIHRoZSBjb3JyZWN0IGNvbnRleHRcbiBcdF9fd2VicGFja19yZXF1aXJlX18uaSA9IGZ1bmN0aW9uKHZhbHVlKSB7IHJldHVybiB2YWx1ZTsgfTtcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTQyKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCBjMjRiNzBhMTgzYjdiNzM0MzVlMCIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7dmVyc2lvbjogJzIuNC4wJ307XG5pZih0eXBlb2YgX19lID09ICdudW1iZXInKV9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvcmUuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZiA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZih0eXBlb2YgX19nID09ICdudW1iZXInKV9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZ2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSIsIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7Z2V0OiBmdW5jdGlvbigpeyByZXR1cm4gNzsgfX0pLmEgIT0gNztcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IiwidmFyIHN0b3JlICAgICAgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgnd2tzJylcbiAgLCB1aWQgICAgICAgID0gcmVxdWlyZSgnLi9fdWlkJylcbiAgLCBTeW1ib2wgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuU3ltYm9sXG4gICwgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihuYW1lKXtcbiAgcmV0dXJuIHN0b3JlW25hbWVdIHx8IChzdG9yZVtuYW1lXSA9XG4gICAgVVNFX1NZTUJPTCAmJiBTeW1ib2xbbmFtZV0gfHwgKFVTRV9TWU1CT0wgPyBTeW1ib2wgOiB1aWQpKCdTeW1ib2wuJyArIG5hbWUpKTtcbn07XG5cbiRleHBvcnRzLnN0b3JlID0gc3RvcmU7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsInZhciBhbk9iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpXG4gICwgdG9QcmltaXRpdmUgICAgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKVxuICAsIGRQICAgICAgICAgICAgID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcyl7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZihJRThfRE9NX0RFRklORSl0cnkge1xuICAgIHJldHVybiBkUChPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxuICBpZignZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpdGhyb3cgVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEnKTtcbiAgaWYoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKU9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZHAuanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgaWYoIWlzT2JqZWN0KGl0KSl0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1vYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiB0eXBlb2YgaXQgPT09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiB0eXBlb2YgaXQgPT09ICdmdW5jdGlvbic7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSIsInZhciBkUCAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJylcbiAgLCBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24ob2JqZWN0LCBrZXksIHZhbHVlKXtcbiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbihvYmplY3QsIGtleSwgdmFsdWUpe1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hpZGUuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IDEwIiwidmFyIGdsb2JhbCAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgY29yZSAgICAgID0gcmVxdWlyZSgnLi9fY29yZScpXG4gICwgY3R4ICAgICAgID0gcmVxdWlyZSgnLi9fY3R4JylcbiAgLCBoaWRlICAgICAgPSByZXF1aXJlKCcuL19oaWRlJylcbiAgLCBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxudmFyICRleHBvcnQgPSBmdW5jdGlvbih0eXBlLCBuYW1lLCBzb3VyY2Upe1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRlxuICAgICwgSVNfR0xPQkFMID0gdHlwZSAmICRleHBvcnQuR1xuICAgICwgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuU1xuICAgICwgSVNfUFJPVE8gID0gdHlwZSAmICRleHBvcnQuUFxuICAgICwgSVNfQklORCAgID0gdHlwZSAmICRleHBvcnQuQlxuICAgICwgSVNfV1JBUCAgID0gdHlwZSAmICRleHBvcnQuV1xuICAgICwgZXhwb3J0cyAgID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSlcbiAgICAsIGV4cFByb3RvICA9IGV4cG9ydHNbUFJPVE9UWVBFXVxuICAgICwgdGFyZ2V0ICAgID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXVxuICAgICwga2V5LCBvd24sIG91dDtcbiAgaWYoSVNfR0xPQkFMKXNvdXJjZSA9IG5hbWU7XG4gIGZvcihrZXkgaW4gc291cmNlKXtcbiAgICAvLyBjb250YWlucyBpbiBuYXRpdmVcbiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkO1xuICAgIGlmKG93biAmJiBrZXkgaW4gZXhwb3J0cyljb250aW51ZTtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IG93biA/IHRhcmdldFtrZXldIDogc291cmNlW2tleV07XG4gICAgLy8gcHJldmVudCBnbG9iYWwgcG9sbHV0aW9uIGZvciBuYW1lc3BhY2VzXG4gICAgZXhwb3J0c1trZXldID0gSVNfR0xPQkFMICYmIHR5cGVvZiB0YXJnZXRba2V5XSAhPSAnZnVuY3Rpb24nID8gc291cmNlW2tleV1cbiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dFxuICAgIDogSVNfQklORCAmJiBvd24gPyBjdHgob3V0LCBnbG9iYWwpXG4gICAgLy8gd3JhcCBnbG9iYWwgY29uc3RydWN0b3JzIGZvciBwcmV2ZW50IGNoYW5nZSB0aGVtIGluIGxpYnJhcnlcbiAgICA6IElTX1dSQVAgJiYgdGFyZ2V0W2tleV0gPT0gb3V0ID8gKGZ1bmN0aW9uKEMpe1xuICAgICAgdmFyIEYgPSBmdW5jdGlvbihhLCBiLCBjKXtcbiAgICAgICAgaWYodGhpcyBpbnN0YW5jZW9mIEMpe1xuICAgICAgICAgIHN3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtcbiAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBDO1xuICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gbmV3IEMoYSk7XG4gICAgICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgQyhhLCBiKTtcbiAgICAgICAgICB9IHJldHVybiBuZXcgQyhhLCBiLCBjKTtcbiAgICAgICAgfSByZXR1cm4gQy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfTtcbiAgICAgIEZbUFJPVE9UWVBFXSA9IENbUFJPVE9UWVBFXTtcbiAgICAgIHJldHVybiBGO1xuICAgIC8vIG1ha2Ugc3RhdGljIHZlcnNpb25zIGZvciBwcm90b3R5cGUgbWV0aG9kc1xuICAgIH0pKG91dCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUubWV0aG9kcy4lTkFNRSVcbiAgICBpZihJU19QUk9UTyl7XG4gICAgICAoZXhwb3J0cy52aXJ0dWFsIHx8IChleHBvcnRzLnZpcnR1YWwgPSB7fSkpW2tleV0gPSBvdXQ7XG4gICAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUucHJvdG90eXBlLiVOQU1FJVxuICAgICAgaWYodHlwZSAmICRleHBvcnQuUiAmJiBleHBQcm90byAmJiAhZXhwUHJvdG9ba2V5XSloaWRlKGV4cFByb3RvLCBrZXksIG91dCk7XG4gICAgfVxuICB9XG59O1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YCBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2V4cG9ydC5qc1xuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9kZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHlcIik7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZGVmaW5lUHJvcGVydHkpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgKDAsIF9kZWZpbmVQcm9wZXJ0eTIuZGVmYXVsdCkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3RvcjtcbiAgfTtcbn0oKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzXG4vLyBtb2R1bGUgaWQgPSAxMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGV4ZWMpe1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaChlKXtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2ZhaWxzLmpzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiLCJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQsIGtleSl7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hhcy5qc1xuLy8gbW9kdWxlIGlkID0gMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIi8vIHRvIGluZGV4ZWQgb2JqZWN0LCB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0JylcbiAgLCBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBJT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSAxM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihmbiwgdGhhdCwgbGVuZ3RoKXtcbiAgYUZ1bmN0aW9uKGZuKTtcbiAgaWYodGhhdCA9PT0gdW5kZWZpbmVkKXJldHVybiBmbjtcbiAgc3dpdGNoKGxlbmd0aCl7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24oYSl7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhKTtcbiAgICB9O1xuICAgIGNhc2UgMjogcmV0dXJuIGZ1bmN0aW9uKGEsIGIpe1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYik7XG4gICAgfTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbihhLCBiLCBjKXtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uKC8qIC4uLmFyZ3MgKi8pe1xuICAgIHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmd1bWVudHMpO1xuICB9O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2N0eC5qc1xuLy8gbW9kdWxlIGlkID0gMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihiaXRtYXAsIHZhbHVlKXtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlICA6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlICAgIDogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZSAgICAgICA6IHZhbHVlXG4gIH07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qc1xuLy8gbW9kdWxlIGlkID0gMTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IiwibW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXJhdG9ycy5qc1xuLy8gbW9kdWxlIGlkID0gMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudFxuICAvLyBpbiBvbGQgSUUgdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCdcbiAgLCBpcyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RvbS1jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDE3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSIsIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKVxuICAsIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIGtleXMoTyl7XG4gIHJldHVybiAka2V5cyhPLCBlbnVtQnVnS2V5cyk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWtleXMuanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgaWYodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2EtZnVuY3Rpb24uanNcbi8vIG1vZHVsZSBpZCA9IDE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSIsInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2YuanNcbi8vIG1vZHVsZSBpZCA9IDIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCIvLyA3LjEuMSBUb1ByaW1pdGl2ZShpbnB1dCBbLCBQcmVmZXJyZWRUeXBlXSlcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuLy8gaW5zdGVhZCBvZiB0aGUgRVM2IHNwZWMgdmVyc2lvbiwgd2UgZGlkbid0IGltcGxlbWVudCBAQHRvUHJpbWl0aXZlIGNhc2Vcbi8vIGFuZCB0aGUgc2Vjb25kIGFyZ3VtZW50IC0gZmxhZyAtIHByZWZlcnJlZCB0eXBlIGlzIGEgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0LCBTKXtcbiAgaWYoIWlzT2JqZWN0KGl0KSlyZXR1cm4gaXQ7XG4gIHZhciBmbiwgdmFsO1xuICBpZihTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKXJldHVybiB2YWw7XG4gIGlmKHR5cGVvZiAoZm4gPSBpdC52YWx1ZU9mKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpcmV0dXJuIHZhbDtcbiAgaWYoIVMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qc1xuLy8gbW9kdWxlIGlkID0gMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmZcbiAgLCBoYXMgPSByZXF1aXJlKCcuL19oYXMnKVxuICAsIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0LCB0YWcsIHN0YXQpe1xuICBpZihpdCAmJiAhaGFzKGl0ID0gc3RhdCA/IGl0IDogaXQucHJvdG90eXBlLCBUQUcpKWRlZihpdCwgVEFHLCB7Y29uZmlndXJhYmxlOiB0cnVlLCB2YWx1ZTogdGFnfSk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2V0LXRvLXN0cmluZy10YWcuanNcbi8vIG1vZHVsZSBpZCA9IDIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCJ2YXIgaWQgPSAwXG4gICwgcHggPSBNYXRoLnJhbmRvbSgpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihrZXkpe1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VpZC5qc1xuLy8gbW9kdWxlIGlkID0gMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIi8vIDcuMi4xIFJlcXVpcmVPYmplY3RDb2VyY2libGUoYXJndW1lbnQpXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgaWYoaXQgPT0gdW5kZWZpbmVkKXRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RlZmluZWQuanNcbi8vIG1vZHVsZSBpZCA9IDI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdkaXYnKSwgJ2EnLCB7Z2V0OiBmdW5jdGlvbigpeyByZXR1cm4gNzsgfX0pLmEgIT0gNztcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faWU4LWRvbS1kZWZpbmUuanNcbi8vIG1vZHVsZSBpZCA9IDI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSIsIm1vZHVsZS5leHBvcnRzID0gdHJ1ZTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2xpYnJhcnkuanNcbi8vIG1vZHVsZSBpZCA9IDI2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKVxuICAsIHVpZCAgICA9IHJlcXVpcmUoJy4vX3VpZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihrZXkpe1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NoYXJlZC1rZXkuanNcbi8vIG1vZHVsZSBpZCA9IDI3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCIvLyA3LjEuNCBUb0ludGVnZXJcbnZhciBjZWlsICA9IE1hdGguY2VpbFxuICAsIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gaXNOYU4oaXQgPSAraXQpID8gMCA6IChpdCA+IDAgPyBmbG9vciA6IGNlaWwpKGl0KTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pbnRlZ2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAyOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IiwiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19lbnVtLWJ1Zy1rZXlzLmpzXG4vLyBtb2R1bGUgaWQgPSAyOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgU0hBUkVEID0gJ19fY29yZS1qc19zaGFyZWRfXydcbiAgLCBzdG9yZSAgPSBnbG9iYWxbU0hBUkVEXSB8fCAoZ2xvYmFsW1NIQVJFRF0gPSB7fSk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGtleSl7XG4gIHJldHVybiBzdG9yZVtrZXldIHx8IChzdG9yZVtrZXldID0ge30pO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NoYXJlZC5qc1xuLy8gbW9kdWxlIGlkID0gMzBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZlwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDMxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsIi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudClcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLW9iamVjdC5qc1xuLy8gbW9kdWxlIGlkID0gMzJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5LmpzXG4vLyBtb2R1bGUgaWQgPSAzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9zZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCIpO1xuXG52YXIgX3NldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NldFByb3RvdHlwZU9mKTtcblxudmFyIF9jcmVhdGUgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvY3JlYXRlXCIpO1xuXG52YXIgX2NyZWF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGUpO1xuXG52YXIgX3R5cGVvZjIgPSByZXF1aXJlKFwiLi4vaGVscGVycy90eXBlb2ZcIik7XG5cbnZhciBfdHlwZW9mMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3R5cGVvZjIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgKHR5cGVvZiBzdXBlckNsYXNzID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6ICgwLCBfdHlwZW9mMy5kZWZhdWx0KShzdXBlckNsYXNzKSkpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gKDAsIF9jcmVhdGUyLmRlZmF1bHQpKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2YyLmRlZmF1bHQgPyAoMCwgX3NldFByb3RvdHlwZU9mMi5kZWZhdWx0KShzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzLmpzXG4vLyBtb2R1bGUgaWQgPSAzNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF90eXBlb2YyID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG52YXIgX3R5cGVvZjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90eXBlb2YyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKHNlbGYsIGNhbGwpIHtcbiAgaWYgKCFzZWxmKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIGNhbGwgJiYgKCh0eXBlb2YgY2FsbCA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiAoMCwgX3R5cGVvZjMuZGVmYXVsdCkoY2FsbCkpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qc1xuLy8gbW9kdWxlIGlkID0gMzVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xudmFyICRPYmplY3QgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBkZXNjKXtcbiAgcmV0dXJuICRPYmplY3QuZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgZGVzYyk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGlkID0gMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSA2IDcgOCA5IiwiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIGRQcyAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpXG4gICwgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJylcbiAgLCBJRV9QUk9UTyAgICA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKVxuICAsIEVtcHR5ICAgICAgID0gZnVuY3Rpb24oKXsgLyogZW1wdHkgKi8gfVxuICAsIFBST1RPVFlQRSAgID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24oKXtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJylcbiAgICAsIGkgICAgICA9IGVudW1CdWdLZXlzLmxlbmd0aFxuICAgICwgbHQgICAgID0gJzwnXG4gICAgLCBndCAgICAgPSAnPidcbiAgICAsIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlKGktLSlkZWxldGUgY3JlYXRlRGljdFtQUk9UT1RZUEVdW2VudW1CdWdLZXlzW2ldXTtcbiAgcmV0dXJuIGNyZWF0ZURpY3QoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmNyZWF0ZSB8fCBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcyl7XG4gIHZhciByZXN1bHQ7XG4gIGlmKE8gIT09IG51bGwpe1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBhbk9iamVjdChPKTtcbiAgICByZXN1bHQgPSBuZXcgRW1wdHk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSAzN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0Jywge2RlZmluZVByb3BlcnR5OiByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mfSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5LmpzXG4vLyBtb2R1bGUgaWQgPSAzOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYgNyA4IDkiLCIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSAgICAgICAgPSByZXF1aXJlKCcuL19saWJyYXJ5JylcbiAgLCAkZXhwb3J0ICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgcmVkZWZpbmUgICAgICAgPSByZXF1aXJlKCcuL19yZWRlZmluZScpXG4gICwgaGlkZSAgICAgICAgICAgPSByZXF1aXJlKCcuL19oaWRlJylcbiAgLCBoYXMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgSXRlcmF0b3JzICAgICAgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKVxuICAsICRpdGVyQ3JlYXRlICAgID0gcmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKVxuICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKVxuICAsIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpXG4gICwgSVRFUkFUT1IgICAgICAgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKVxuICAsIEJVR0dZICAgICAgICAgID0gIShbXS5rZXlzICYmICduZXh0JyBpbiBbXS5rZXlzKCkpIC8vIFNhZmFyaSBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGBcbiAgLCBGRl9JVEVSQVRPUiAgICA9ICdAQGl0ZXJhdG9yJ1xuICAsIEtFWVMgICAgICAgICAgID0gJ2tleXMnXG4gICwgVkFMVUVTICAgICAgICAgPSAndmFsdWVzJztcblxudmFyIHJldHVyblRoaXMgPSBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihCYXNlLCBOQU1FLCBDb25zdHJ1Y3RvciwgbmV4dCwgREVGQVVMVCwgSVNfU0VULCBGT1JDRUQpe1xuICAkaXRlckNyZWF0ZShDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCk7XG4gIHZhciBnZXRNZXRob2QgPSBmdW5jdGlvbihraW5kKXtcbiAgICBpZighQlVHR1kgJiYga2luZCBpbiBwcm90bylyZXR1cm4gcHJvdG9ba2luZF07XG4gICAgc3dpdGNoKGtpbmQpe1xuICAgICAgY2FzZSBLRVlTOiByZXR1cm4gZnVuY3Rpb24ga2V5cygpeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgICAgY2FzZSBWQUxVRVM6IHJldHVybiBmdW5jdGlvbiB2YWx1ZXMoKXsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICB9IHJldHVybiBmdW5jdGlvbiBlbnRyaWVzKCl7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gIH07XG4gIHZhciBUQUcgICAgICAgID0gTkFNRSArICcgSXRlcmF0b3InXG4gICAgLCBERUZfVkFMVUVTID0gREVGQVVMVCA9PSBWQUxVRVNcbiAgICAsIFZBTFVFU19CVUcgPSBmYWxzZVxuICAgICwgcHJvdG8gICAgICA9IEJhc2UucHJvdG90eXBlXG4gICAgLCAkbmF0aXZlICAgID0gcHJvdG9bSVRFUkFUT1JdIHx8IHByb3RvW0ZGX0lURVJBVE9SXSB8fCBERUZBVUxUICYmIHByb3RvW0RFRkFVTFRdXG4gICAgLCAkZGVmYXVsdCAgID0gJG5hdGl2ZSB8fCBnZXRNZXRob2QoREVGQVVMVClcbiAgICAsICRlbnRyaWVzICAgPSBERUZBVUxUID8gIURFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZCgnZW50cmllcycpIDogdW5kZWZpbmVkXG4gICAgLCAkYW55TmF0aXZlID0gTkFNRSA9PSAnQXJyYXknID8gcHJvdG8uZW50cmllcyB8fCAkbmF0aXZlIDogJG5hdGl2ZVxuICAgICwgbWV0aG9kcywga2V5LCBJdGVyYXRvclByb3RvdHlwZTtcbiAgLy8gRml4IG5hdGl2ZVxuICBpZigkYW55TmF0aXZlKXtcbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mKCRhbnlOYXRpdmUuY2FsbChuZXcgQmFzZSkpO1xuICAgIGlmKEl0ZXJhdG9yUHJvdG90eXBlICE9PSBPYmplY3QucHJvdG90eXBlKXtcbiAgICAgIC8vIFNldCBAQHRvU3RyaW5nVGFnIHRvIG5hdGl2ZSBpdGVyYXRvcnNcbiAgICAgIHNldFRvU3RyaW5nVGFnKEl0ZXJhdG9yUHJvdG90eXBlLCBUQUcsIHRydWUpO1xuICAgICAgLy8gZml4IGZvciBzb21lIG9sZCBlbmdpbmVzXG4gICAgICBpZighTElCUkFSWSAmJiAhaGFzKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUikpaGlkZShJdGVyYXRvclByb3RvdHlwZSwgSVRFUkFUT1IsIHJldHVyblRoaXMpO1xuICAgIH1cbiAgfVxuICAvLyBmaXggQXJyYXkje3ZhbHVlcywgQEBpdGVyYXRvcn0ubmFtZSBpbiBWOCAvIEZGXG4gIGlmKERFRl9WQUxVRVMgJiYgJG5hdGl2ZSAmJiAkbmF0aXZlLm5hbWUgIT09IFZBTFVFUyl7XG4gICAgVkFMVUVTX0JVRyA9IHRydWU7XG4gICAgJGRlZmF1bHQgPSBmdW5jdGlvbiB2YWx1ZXMoKXsgcmV0dXJuICRuYXRpdmUuY2FsbCh0aGlzKTsgfTtcbiAgfVxuICAvLyBEZWZpbmUgaXRlcmF0b3JcbiAgaWYoKCFMSUJSQVJZIHx8IEZPUkNFRCkgJiYgKEJVR0dZIHx8IFZBTFVFU19CVUcgfHwgIXByb3RvW0lURVJBVE9SXSkpe1xuICAgIGhpZGUocHJvdG8sIElURVJBVE9SLCAkZGVmYXVsdCk7XG4gIH1cbiAgLy8gUGx1ZyBmb3IgbGlicmFyeVxuICBJdGVyYXRvcnNbTkFNRV0gPSAkZGVmYXVsdDtcbiAgSXRlcmF0b3JzW1RBR10gID0gcmV0dXJuVGhpcztcbiAgaWYoREVGQVVMVCl7XG4gICAgbWV0aG9kcyA9IHtcbiAgICAgIHZhbHVlczogIERFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChWQUxVRVMpLFxuICAgICAga2V5czogICAgSVNfU0VUICAgICA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKEtFWVMpLFxuICAgICAgZW50cmllczogJGVudHJpZXNcbiAgICB9O1xuICAgIGlmKEZPUkNFRClmb3Ioa2V5IGluIG1ldGhvZHMpe1xuICAgICAgaWYoIShrZXkgaW4gcHJvdG8pKXJlZGVmaW5lKHByb3RvLCBrZXksIG1ldGhvZHNba2V5XSk7XG4gICAgfSBlbHNlICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKEJVR0dZIHx8IFZBTFVFU19CVUcpLCBOQU1FLCBtZXRob2RzKTtcbiAgfVxuICByZXR1cm4gbWV0aG9kcztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWRlZmluZS5qc1xuLy8gbW9kdWxlIGlkID0gMzlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9qc29uL3N0cmluZ2lmeVwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvanNvbi9zdHJpbmdpZnkuanNcbi8vIG1vZHVsZSBpZCA9IDQwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiIsImV4cG9ydHMuZiA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LXBpZS5qc1xuLy8gbW9kdWxlIGlkID0gNDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19odG1sLmpzXG4vLyBtb2R1bGUgaWQgPSA0MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IiwiLy8gMTkuMS4yLjkgLyAxNS4yLjMuMiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciBoYXMgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgdG9PYmplY3QgICAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKVxuICAsIElFX1BST1RPICAgID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpXG4gICwgT2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbihPKXtcbiAgTyA9IHRvT2JqZWN0KE8pO1xuICBpZihoYXMoTywgSUVfUFJPVE8pKXJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYodHlwZW9mIE8uY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBPIGluc3RhbmNlb2YgTy5jb25zdHJ1Y3Rvcil7XG4gICAgcmV0dXJuIE8uY29uc3RydWN0b3IucHJvdG90eXBlO1xuICB9IHJldHVybiBPIGluc3RhbmNlb2YgT2JqZWN0ID8gT2JqZWN0UHJvdG8gOiBudWxsO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1ncG8uanNcbi8vIG1vZHVsZSBpZCA9IDQzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCJ2YXIgaGFzICAgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJylcbiAgLCB0b0lPYmplY3QgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JylcbiAgLCBhcnJheUluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKVxuICAsIElFX1BST1RPICAgICA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmplY3QsIG5hbWVzKXtcbiAgdmFyIE8gICAgICA9IHRvSU9iamVjdChvYmplY3QpXG4gICAgLCBpICAgICAgPSAwXG4gICAgLCByZXN1bHQgPSBbXVxuICAgICwga2V5O1xuICBmb3Ioa2V5IGluIE8paWYoa2V5ICE9IElFX1BST1RPKWhhcyhPLCBrZXkpICYmIHJlc3VsdC5wdXNoKGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUobmFtZXMubGVuZ3RoID4gaSlpZihoYXMoTywga2V5ID0gbmFtZXNbaSsrXSkpe1xuICAgIH5hcnJheUluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHJlc3VsdC5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3Qta2V5cy1pbnRlcm5hbC5qc1xuLy8gbW9kdWxlIGlkID0gNDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIi8vIG1vc3QgT2JqZWN0IG1ldGhvZHMgYnkgRVM2IHNob3VsZCBhY2NlcHQgcHJpbWl0aXZlc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKVxuICAsIGNvcmUgICAgPSByZXF1aXJlKCcuL19jb3JlJylcbiAgLCBmYWlscyAgID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oS0VZLCBleGVjKXtcbiAgdmFyIGZuICA9IChjb3JlLk9iamVjdCB8fCB7fSlbS0VZXSB8fCBPYmplY3RbS0VZXVxuICAgICwgZXhwID0ge307XG4gIGV4cFtLRVldID0gZXhlYyhmbik7XG4gICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24oKXsgZm4oMSk7IH0pLCAnT2JqZWN0JywgZXhwKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3Qtc2FwLmpzXG4vLyBtb2R1bGUgaWQgPSA0NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19oaWRlJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19yZWRlZmluZS5qc1xuLy8gbW9kdWxlIGlkID0gNDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIi8vIDcuMS4xNSBUb0xlbmd0aFxudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKVxuICAsIG1pbiAgICAgICA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpdCA+IDAgPyBtaW4odG9JbnRlZ2VyKGl0KSwgMHgxZmZmZmZmZmZmZmZmZikgOiAwOyAvLyBwb3coMiwgNTMpIC0gMSA9PSA5MDA3MTk5MjU0NzQwOTkxXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tbGVuZ3RoLmpzXG4vLyBtb2R1bGUgaWQgPSA0N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IiwidmFyIGdsb2JhbCAgICAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJylcbiAgLCBjb3JlICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2NvcmUnKVxuICAsIExJQlJBUlkgICAgICAgID0gcmVxdWlyZSgnLi9fbGlicmFyeScpXG4gICwgd2tzRXh0ICAgICAgICAgPSByZXF1aXJlKCcuL193a3MtZXh0JylcbiAgLCBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG5hbWUpe1xuICB2YXIgJFN5bWJvbCA9IGNvcmUuU3ltYm9sIHx8IChjb3JlLlN5bWJvbCA9IExJQlJBUlkgPyB7fSA6IGdsb2JhbC5TeW1ib2wgfHwge30pO1xuICBpZihuYW1lLmNoYXJBdCgwKSAhPSAnXycgJiYgIShuYW1lIGluICRTeW1ib2wpKWRlZmluZVByb3BlcnR5KCRTeW1ib2wsIG5hbWUsIHt2YWx1ZTogd2tzRXh0LmYobmFtZSl9KTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MtZGVmaW5lLmpzXG4vLyBtb2R1bGUgaWQgPSA0OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCJleHBvcnRzLmYgPSByZXF1aXJlKCcuL193a3MnKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy1leHQuanNcbi8vIG1vZHVsZSBpZCA9IDQ5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsIid1c2Ugc3RyaWN0JztcbnZhciAkYXQgID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbi8vIDIxLjEuMy4yNyBTdHJpbmcucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24oaXRlcmF0ZWQpe1xuICB0aGlzLl90ID0gU3RyaW5nKGl0ZXJhdGVkKTsgLy8gdGFyZ2V0XG4gIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4vLyAyMS4xLjUuMi4xICVTdHJpbmdJdGVyYXRvclByb3RvdHlwZSUubmV4dCgpXG59LCBmdW5jdGlvbigpe1xuICB2YXIgTyAgICAgPSB0aGlzLl90XG4gICAgLCBpbmRleCA9IHRoaXMuX2lcbiAgICAsIHBvaW50O1xuICBpZihpbmRleCA+PSBPLmxlbmd0aClyZXR1cm4ge3ZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWV9O1xuICBwb2ludCA9ICRhdChPLCBpbmRleCk7XG4gIHRoaXMuX2kgKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4ge3ZhbHVlOiBwb2ludCwgZG9uZTogZmFsc2V9O1xufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDUwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCJyZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpO1xudmFyIGdsb2JhbCAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIGhpZGUgICAgICAgICAgPSByZXF1aXJlKCcuL19oaWRlJylcbiAgLCBJdGVyYXRvcnMgICAgID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJylcbiAgLCBUT19TVFJJTkdfVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbmZvcih2YXIgY29sbGVjdGlvbnMgPSBbJ05vZGVMaXN0JywgJ0RPTVRva2VuTGlzdCcsICdNZWRpYUxpc3QnLCAnU3R5bGVTaGVldExpc3QnLCAnQ1NTUnVsZUxpc3QnXSwgaSA9IDA7IGkgPCA1OyBpKyspe1xuICB2YXIgTkFNRSAgICAgICA9IGNvbGxlY3Rpb25zW2ldXG4gICAgLCBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdXG4gICAgLCBwcm90byAgICAgID0gQ29sbGVjdGlvbiAmJiBDb2xsZWN0aW9uLnByb3RvdHlwZTtcbiAgaWYocHJvdG8gJiYgIXByb3RvW1RPX1NUUklOR19UQUddKWhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpO1xuICBJdGVyYXRvcnNbTkFNRV0gPSBJdGVyYXRvcnMuQXJyYXk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanNcbi8vIG1vZHVsZSBpZCA9IDUxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCJ2YXIgY29yZSAgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJylcbiAgLCAkSlNPTiA9IGNvcmUuSlNPTiB8fCAoY29yZS5KU09OID0ge3N0cmluZ2lmeTogSlNPTi5zdHJpbmdpZnl9KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3RyaW5naWZ5KGl0KXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICByZXR1cm4gJEpTT04uc3RyaW5naWZ5LmFwcGx5KCRKU09OLCBhcmd1bWVudHMpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L2ZuL2pzb24vc3RyaW5naWZ5LmpzXG4vLyBtb2R1bGUgaWQgPSA1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IDYiLCIvLyBnZXR0aW5nIHRhZyBmcm9tIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpXG4gICwgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJylcbiAgLy8gRVMzIHdyb25nIGhlcmVcbiAgLCBBUkcgPSBjb2YoZnVuY3Rpb24oKXsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbihpdCwga2V5KXtcbiAgdHJ5IHtcbiAgICByZXR1cm4gaXRba2V5XTtcbiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY2xhc3NvZi5qc1xuLy8gbW9kdWxlIGlkID0gNTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1IiwiLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3NcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0KCd6JykucHJvcGVydHlJc0VudW1lcmFibGUoMCkgPyBPYmplY3QgOiBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBjb2YoaXQpID09ICdTdHJpbmcnID8gaXQuc3BsaXQoJycpIDogT2JqZWN0KGl0KTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSA1NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IiwidmFyIHBJRSAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpXG4gICwgY3JlYXRlRGVzYyAgICAgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJylcbiAgLCB0b0lPYmplY3QgICAgICA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIHRvUHJpbWl0aXZlICAgID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJylcbiAgLCBoYXMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpXG4gICwgZ09QRCAgICAgICAgICAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKXtcbiAgTyA9IHRvSU9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBpZihJRThfRE9NX0RFRklORSl0cnkge1xuICAgIHJldHVybiBnT1BEKE8sIFApO1xuICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9XG4gIGlmKGhhcyhPLCBQKSlyZXR1cm4gY3JlYXRlRGVzYyghcElFLmYuY2FsbChPLCBQKSwgT1tQXSk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanNcbi8vIG1vZHVsZSBpZCA9IDU3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wcy5qc1xuLy8gbW9kdWxlIGlkID0gNThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3Qva2V5cy5qc1xuLy8gbW9kdWxlIGlkID0gNTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgNCA1IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfaXRlcmF0b3IgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9zeW1ib2wvaXRlcmF0b3JcIik7XG5cbnZhciBfaXRlcmF0b3IyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaXRlcmF0b3IpO1xuXG52YXIgX3N5bWJvbCA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL3N5bWJvbFwiKTtcblxudmFyIF9zeW1ib2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3ltYm9sKTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBfaXRlcmF0b3IyLmRlZmF1bHQgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBfc3ltYm9sMi5kZWZhdWx0ICYmIG9iaiAhPT0gX3N5bWJvbDIuZGVmYXVsdC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mKF9pdGVyYXRvcjIuZGVmYXVsdCkgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogJiYgdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IF9zeW1ib2wyLmRlZmF1bHQgJiYgb2JqICE9PSBfc3ltYm9sMi5kZWZhdWx0LnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvaGVscGVycy90eXBlb2YuanNcbi8vIG1vZHVsZSBpZCA9IDYwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKXsgLyogZW1wdHkgKi8gfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FkZC10by11bnNjb3BhYmxlcy5qc1xuLy8gbW9kdWxlIGlkID0gNjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIi8vIGZhbHNlIC0+IEFycmF5I2luZGV4T2Zcbi8vIHRydWUgIC0+IEFycmF5I2luY2x1ZGVzXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpXG4gICwgdG9MZW5ndGggID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJylcbiAgLCB0b0luZGV4ICAgPSByZXF1aXJlKCcuL190by1pbmRleCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihJU19JTkNMVURFUyl7XG4gIHJldHVybiBmdW5jdGlvbigkdGhpcywgZWwsIGZyb21JbmRleCl7XG4gICAgdmFyIE8gICAgICA9IHRvSU9iamVjdCgkdGhpcylcbiAgICAgICwgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpXG4gICAgICAsIGluZGV4ICA9IHRvSW5kZXgoZnJvbUluZGV4LCBsZW5ndGgpXG4gICAgICAsIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICBpZihJU19JTkNMVURFUyAmJiBlbCAhPSBlbCl3aGlsZShsZW5ndGggPiBpbmRleCl7XG4gICAgICB2YWx1ZSA9IE9baW5kZXgrK107XG4gICAgICBpZih2YWx1ZSAhPSB2YWx1ZSlyZXR1cm4gdHJ1ZTtcbiAgICAvLyBBcnJheSN0b0luZGV4IGlnbm9yZXMgaG9sZXMsIEFycmF5I2luY2x1ZGVzIC0gbm90XG4gICAgfSBlbHNlIGZvcig7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspaWYoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTyl7XG4gICAgICBpZihPW2luZGV4XSA9PT0gZWwpcmV0dXJuIElTX0lOQ0xVREVTIHx8IGluZGV4IHx8IDA7XG4gICAgfSByZXR1cm4gIUlTX0lOQ0xVREVTICYmIC0xO1xuICB9O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FycmF5LWluY2x1ZGVzLmpzXG4vLyBtb2R1bGUgaWQgPSA2MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNCA1IiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNyZWF0ZSAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpXG4gICwgZGVzY3JpcHRvciAgICAgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJylcbiAgLCBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJylcbiAgLCBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuXG4vLyAyNS4xLjIuMS4xICVJdGVyYXRvclByb3RvdHlwZSVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faGlkZScpKEl0ZXJhdG9yUHJvdG90eXBlLCByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKSwgZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXM7IH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KXtcbiAgQ29uc3RydWN0b3IucHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7bmV4dDogZGVzY3JpcHRvcigxLCBuZXh0KX0pO1xuICBzZXRUb1N0cmluZ1RhZyhDb25zdHJ1Y3RvciwgTkFNRSArICcgSXRlcmF0b3InKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWNyZWF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gNjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZG9uZSwgdmFsdWUpe1xuICByZXR1cm4ge3ZhbHVlOiB2YWx1ZSwgZG9uZTogISFkb25lfTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLXN0ZXAuanNcbi8vIG1vZHVsZSBpZCA9IDY0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCJ2YXIgZFAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKVxuICAsIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBnZXRLZXlzICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKXtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzICAgPSBnZXRLZXlzKFByb3BlcnRpZXMpXG4gICAgLCBsZW5ndGggPSBrZXlzLmxlbmd0aFxuICAgICwgaSA9IDBcbiAgICAsIFA7XG4gIHdoaWxlKGxlbmd0aCA+IGkpZFAuZihPLCBQID0ga2V5c1tpKytdLCBQcm9wZXJ0aWVzW1BdKTtcbiAgcmV0dXJuIE87XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwcy5qc1xuLy8gbW9kdWxlIGlkID0gNjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDQgNSIsIi8vIDE5LjEuMi43IC8gMTUuMi4zLjQgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbnZhciAka2V5cyAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKVxuICAsIGhpZGRlbktleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJykuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7XG5cbmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTyl7XG4gIHJldHVybiAka2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wbi5qc1xuLy8gbW9kdWxlIGlkID0gNjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKVxuICAsIGRlZmluZWQgICA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbi8vIHRydWUgIC0+IFN0cmluZyNhdFxuLy8gZmFsc2UgLT4gU3RyaW5nI2NvZGVQb2ludEF0XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKFRPX1NUUklORyl7XG4gIHJldHVybiBmdW5jdGlvbih0aGF0LCBwb3Mpe1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpXG4gICAgICAsIGkgPSB0b0ludGVnZXIocG9zKVxuICAgICAgLCBsID0gcy5sZW5ndGhcbiAgICAgICwgYSwgYjtcbiAgICBpZihpIDwgMCB8fCBpID49IGwpcmV0dXJuIFRPX1NUUklORyA/ICcnIDogdW5kZWZpbmVkO1xuICAgIGEgPSBzLmNoYXJDb2RlQXQoaSk7XG4gICAgcmV0dXJuIGEgPCAweGQ4MDAgfHwgYSA+IDB4ZGJmZiB8fCBpICsgMSA9PT0gbCB8fCAoYiA9IHMuY2hhckNvZGVBdChpICsgMSkpIDwgMHhkYzAwIHx8IGIgPiAweGRmZmZcbiAgICAgID8gVE9fU1RSSU5HID8gcy5jaGFyQXQoaSkgOiBhXG4gICAgICA6IFRPX1NUUklORyA/IHMuc2xpY2UoaSwgaSArIDIpIDogKGEgLSAweGQ4MDAgPDwgMTApICsgKGIgLSAweGRjMDApICsgMHgxMDAwMDtcbiAgfTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zdHJpbmctYXQuanNcbi8vIG1vZHVsZSBpZCA9IDY3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCJ2YXIgY3R4ICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fY3R4JylcbiAgLCBpbnZva2UgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19pbnZva2UnKVxuICAsIGh0bWwgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2h0bWwnKVxuICAsIGNlbCAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKVxuICAsIGdsb2JhbCAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgcHJvY2VzcyAgICAgICAgICAgID0gZ2xvYmFsLnByb2Nlc3NcbiAgLCBzZXRUYXNrICAgICAgICAgICAgPSBnbG9iYWwuc2V0SW1tZWRpYXRlXG4gICwgY2xlYXJUYXNrICAgICAgICAgID0gZ2xvYmFsLmNsZWFySW1tZWRpYXRlXG4gICwgTWVzc2FnZUNoYW5uZWwgICAgID0gZ2xvYmFsLk1lc3NhZ2VDaGFubmVsXG4gICwgY291bnRlciAgICAgICAgICAgID0gMFxuICAsIHF1ZXVlICAgICAgICAgICAgICA9IHt9XG4gICwgT05SRUFEWVNUQVRFQ0hBTkdFID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSdcbiAgLCBkZWZlciwgY2hhbm5lbCwgcG9ydDtcbnZhciBydW4gPSBmdW5jdGlvbigpe1xuICB2YXIgaWQgPSArdGhpcztcbiAgaWYocXVldWUuaGFzT3duUHJvcGVydHkoaWQpKXtcbiAgICB2YXIgZm4gPSBxdWV1ZVtpZF07XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgICBmbigpO1xuICB9XG59O1xudmFyIGxpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnQpe1xuICBydW4uY2FsbChldmVudC5kYXRhKTtcbn07XG4vLyBOb2RlLmpzIDAuOSsgJiBJRTEwKyBoYXMgc2V0SW1tZWRpYXRlLCBvdGhlcndpc2U6XG5pZighc2V0VGFzayB8fCAhY2xlYXJUYXNrKXtcbiAgc2V0VGFzayA9IGZ1bmN0aW9uIHNldEltbWVkaWF0ZShmbil7XG4gICAgdmFyIGFyZ3MgPSBbXSwgaSA9IDE7XG4gICAgd2hpbGUoYXJndW1lbnRzLmxlbmd0aCA+IGkpYXJncy5wdXNoKGFyZ3VtZW50c1tpKytdKTtcbiAgICBxdWV1ZVsrK2NvdW50ZXJdID0gZnVuY3Rpb24oKXtcbiAgICAgIGludm9rZSh0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJyA/IGZuIDogRnVuY3Rpb24oZm4pLCBhcmdzKTtcbiAgICB9O1xuICAgIGRlZmVyKGNvdW50ZXIpO1xuICAgIHJldHVybiBjb3VudGVyO1xuICB9O1xuICBjbGVhclRhc2sgPSBmdW5jdGlvbiBjbGVhckltbWVkaWF0ZShpZCl7XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgfTtcbiAgLy8gTm9kZS5qcyAwLjgtXG4gIGlmKHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJyl7XG4gICAgZGVmZXIgPSBmdW5jdGlvbihpZCl7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBNZXNzYWdlQ2hhbm5lbCwgaW5jbHVkZXMgV2ViV29ya2Vyc1xuICB9IGVsc2UgaWYoTWVzc2FnZUNoYW5uZWwpe1xuICAgIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWw7XG4gICAgcG9ydCAgICA9IGNoYW5uZWwucG9ydDI7XG4gICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBsaXN0ZW5lcjtcbiAgICBkZWZlciA9IGN0eChwb3J0LnBvc3RNZXNzYWdlLCBwb3J0LCAxKTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBwb3N0TWVzc2FnZSwgc2tpcCBXZWJXb3JrZXJzXG4gIC8vIElFOCBoYXMgcG9zdE1lc3NhZ2UsIGJ1dCBpdCdzIHN5bmMgJiB0eXBlb2YgaXRzIHBvc3RNZXNzYWdlIGlzICdvYmplY3QnXG4gIH0gZWxzZSBpZihnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lciAmJiB0eXBlb2YgcG9zdE1lc3NhZ2UgPT0gJ2Z1bmN0aW9uJyAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpe1xuICAgIGRlZmVyID0gZnVuY3Rpb24oaWQpe1xuICAgICAgZ2xvYmFsLnBvc3RNZXNzYWdlKGlkICsgJycsICcqJyk7XG4gICAgfTtcbiAgICBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGxpc3RlbmVyLCBmYWxzZSk7XG4gIC8vIElFOC1cbiAgfSBlbHNlIGlmKE9OUkVBRFlTVEFURUNIQU5HRSBpbiBjZWwoJ3NjcmlwdCcpKXtcbiAgICBkZWZlciA9IGZ1bmN0aW9uKGlkKXtcbiAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoY2VsKCdzY3JpcHQnKSlbT05SRUFEWVNUQVRFQ0hBTkdFXSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgICAgIHJ1bi5jYWxsKGlkKTtcbiAgICAgIH07XG4gICAgfTtcbiAgLy8gUmVzdCBvbGQgYnJvd3NlcnNcbiAgfSBlbHNlIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uKGlkKXtcbiAgICAgIHNldFRpbWVvdXQoY3R4KHJ1biwgaWQsIDEpLCAwKTtcbiAgICB9O1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiAgIHNldFRhc2ssXG4gIGNsZWFyOiBjbGVhclRhc2tcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190YXNrLmpzXG4vLyBtb2R1bGUgaWQgPSA2OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUiLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpXG4gICwgbWF4ICAgICAgID0gTWF0aC5tYXhcbiAgLCBtaW4gICAgICAgPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaW5kZXgsIGxlbmd0aCl7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDY5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCIndXNlIHN0cmljdCc7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpXG4gICwgc3RlcCAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2l0ZXItc3RlcCcpXG4gICwgSXRlcmF0b3JzICAgICAgICA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpXG4gICwgdG9JT2JqZWN0ICAgICAgICA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcblxuLy8gMjIuMS4zLjQgQXJyYXkucHJvdG90eXBlLmVudHJpZXMoKVxuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5rZXlzKClcbi8vIDIyLjEuMy4yOSBBcnJheS5wcm90b3R5cGUudmFsdWVzKClcbi8vIDIyLjEuMy4zMCBBcnJheS5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19pdGVyLWRlZmluZScpKEFycmF5LCAnQXJyYXknLCBmdW5jdGlvbihpdGVyYXRlZCwga2luZCl7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24oKXtcbiAgdmFyIE8gICAgID0gdGhpcy5fdFxuICAgICwga2luZCAgPSB0aGlzLl9rXG4gICAgLCBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpe1xuICAgIHRoaXMuX3QgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHN0ZXAoMSk7XG4gIH1cbiAgaWYoa2luZCA9PSAna2V5cycgIClyZXR1cm4gc3RlcCgwLCBpbmRleCk7XG4gIGlmKGtpbmQgPT0gJ3ZhbHVlcycpcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDcwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUiLCIvKipcclxuKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRFxyXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxyXG4qIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WXHJcbiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xyXG4qIENvcHlyaWdodCAyMDE2IEFwaXplZVxyXG4qIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElOXHJcbipcclxuKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4qIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuKlxyXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbipcclxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4qIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuKiovXHJcbi8qKlxyXG4gKiBTdXBwb3J0IG1vZHVsZSB3aXRoIHNvbWUgZnVuY3Rpb25zIHdpbGwgYmUgdXNlZnVsXHJcbiAqIEBtb2R1bGUgdXRpbHNcclxuICovXHJcblxyXG4vKipcclxuICogQHR5cGVkZWYgZGl2aWRlVVJMXHJcbiAqIEB0eXBlIE9iamVjdFxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gdHlwZSBUaGUgdHlwZSBvZiBVUkxcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGRvbWFpbiBUaGUgZG9tYWluIG9mIFVSTFxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaWRlbnRpdHkgVGhlIGlkZW50aXR5IG9mIFVSTFxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBEaXZpZGUgYW4gdXJsIGluIHR5cGUsIGRvbWFpbiBhbmQgaWRlbnRpdHlcclxuICogQHBhcmFtICB7VVJMLlVSTH0gdXJsIC0gdXJsIGFkZHJlc3NcclxuICogQHJldHVybiB7ZGl2aWRlVVJMfSB0aGUgcmVzdWx0IG9mIGRpdmlkZVVSTFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGRpdmlkZVVSTCh1cmwpIHtcclxuXHJcbiAgaWYgKCF1cmwpIHRocm93IEVycm9yKCdVUkwgaXMgbmVlZGVkIHRvIHNwbGl0Jyk7XHJcblxyXG5cdGZ1bmN0aW9uIHJlY3Vyc2UodmFsdWUpIHtcclxuXHRcdGNvbnN0IHJlZ2V4ID0gLyhbYS16QS1aLV0qKSg6XFwvXFwvKD86XFwuKT98OikoWy1hLXpBLVowLTlAOiUuX1xcK34jPV17MiwyNTZ9KShbLWEtekEtWjAtOUA6JS5fXFwrfiM9XFwvXSopL2dpO1xyXG4gICAgY29uc3Qgc3Vic3QgPSAnJDEsJDMsJDQnO1xyXG5cdCAgbGV0IHBhcnRzID0gdmFsdWUucmVwbGFjZShyZWdleCwgc3Vic3QpLnNwbGl0KCcsJyk7XHJcblx0XHRyZXR1cm4gcGFydHM7XHJcblx0fVxyXG5cclxuXHRsZXQgcGFydHMgPSByZWN1cnNlKHVybCk7XHJcblxyXG4gIC8vIElmIHRoZSB1cmwgaGFzIG5vIHNjaGVtZVxyXG4gIGlmIChwYXJ0c1swXSA9PT0gdXJsICYmICFwYXJ0c1swXS5pbmNsdWRlcygnQCcpKSB7XHJcblxyXG4gICAgbGV0IHJlc3VsdCA9IHtcclxuICAgICAgdHlwZTogXCJcIixcclxuICAgICAgZG9tYWluOiB1cmwsXHJcbiAgICAgIGlkZW50aXR5OiBcIlwiXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnNvbGUuZXJyb3IoJ1tEaXZpZGVVUkxdIERpdmlkZVVSTCBkb25cXCd0IHN1cHBvcnQgdXJsIHdpdGhvdXQgc2NoZW1lLiBQbGVhc2UgcmV2aWV3IHlvdXIgdXJsIGFkZHJlc3MnLCB1cmwpO1xyXG5cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG5cclxuXHQvLyBjaGVjayBpZiB0aGUgdXJsIGhhcyB0aGUgc2NoZW1lIGFuZCBpbmNsdWRlcyBhbiBAXHJcblx0aWYgKHBhcnRzWzBdID09PSB1cmwgJiYgcGFydHNbMF0uaW5jbHVkZXMoJ0AnKSkge1xyXG5cdFx0bGV0IHNjaGVtZSA9IHBhcnRzWzBdID09PSB1cmwgPyAnc210cCcgOiBwYXJ0c1swXTtcclxuXHRcdHBhcnRzID0gcmVjdXJzZShzY2hlbWUgKyAnOi8vJyArIHBhcnRzWzBdKTtcclxuXHR9XHJcblxyXG5cdC8vIGlmIHRoZSBkb21haW4gaW5jbHVkZXMgYW4gQCwgZGl2aWRlIGl0IHRvIGRvbWFpbiBhbmQgaWRlbnRpdHkgcmVzcGVjdGl2ZWx5XHJcblx0aWYgKHBhcnRzWzFdLmluY2x1ZGVzKCdAJykpIHtcclxuXHRcdHBhcnRzWzJdID0gcGFydHNbMF0gKyAnOi8vJyArIHBhcnRzWzFdO1xyXG5cdFx0cGFydHNbMV0gPSBwYXJ0c1sxXS5zdWJzdHIocGFydHNbMV0uaW5kZXhPZignQCcpICsgMSlcclxuICAgIH0gXHQvKmVsc2UgaWYgKHBhcnRzWzJdLmluY2x1ZGVzKCcvJykpIHtcclxuICAgIHBhcnRzWzJdID0gcGFydHNbMl0uc3Vic3RyKHBhcnRzWzJdLmxhc3RJbmRleE9mKCcvJykrMSk7XHJcbiAgfSovXHJcblxyXG4gIGxldCByZXN1bHQgPSB7XHJcbiAgICB0eXBlOiBwYXJ0c1swXSxcclxuICAgIGRvbWFpbjogcGFydHNbMV0sXHJcbiAgICBpZGVudGl0eTogcGFydHNbMl1cclxuICB9O1xyXG5cclxuICByZXR1cm4gcmVzdWx0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZGl2aWRlRW1haWwoZW1haWwpIHtcclxuICBsZXQgaW5kZXhPZkF0ID0gZW1haWwuaW5kZXhPZignQCcpO1xyXG5cclxuICBsZXQgcmVzdWx0ID0ge1xyXG4gICAgdXNlcm5hbWU6IGVtYWlsLnN1YnN0cmluZygwLCBpbmRleE9mQXQpLFxyXG4gICAgZG9tYWluOiBlbWFpbC5zdWJzdHJpbmcoaW5kZXhPZkF0ICsgMSwgZW1haWwubGVuZ3RoKVxyXG4gIH07XHJcblxyXG4gIHJldHVybiByZXN1bHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGVjayBpZiBhbiBPYmplY3QgaXMgZW1wdHlcclxuICogQHBhcmFtICB7T2JqZWN0fSBvYmplY3QgT2JqZWN0IHRvIGJlIGNoZWNrZWRcclxuICogQHJldHVybiB7Qm9vbGVhbn0gICAgICAgc3RhdHVzIG9mIE9iamVjdCwgZW1wdHkgb3Igbm90ICh0cnVlfGZhbHNlKTtcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBlbXB0eU9iamVjdChvYmplY3QpIHtcclxuICByZXR1cm4gT2JqZWN0LmtleXMob2JqZWN0KS5sZW5ndGggPiAwID8gZmFsc2UgOiB0cnVlO1xyXG59XHJcblxyXG4vKipcclxuICogTWFrZSBhIENPUFkgb2YgdGhlIG9yaWdpbmFsIGRhdGFcclxuICogQHBhcmFtICB7T2JqZWN0fSAgb2JqIC0gb2JqZWN0IHRvIGJlIGNsb25lZFxyXG4gKiBAcmV0dXJuIHtPYmplY3R9XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZGVlcENsb25lKG9iaikge1xyXG4gIC8vVE9ETzogc2ltcGxlIGJ1dCBpbmVmZmljaWVudCBKU09OIGRlZXAgY2xvbmUuLi5cclxuICBpZiAob2JqKSByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmopKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIE9idGFpbnMgdGhlIHVzZXIgVVJMIHRoYXQgY29ycmVzcG9uZHMgdG8gYSBnaXZlbiBlbWFpbFxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHVzZXJFbWFpbCBUaGUgdXNlciBlbWFpbFxyXG4gKiBAcmV0dXJuIHtVUkwuVVJMfSB1c2VyVVJMIFRoZSB1c2VyIFVSTFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJVUkxGcm9tRW1haWwodXNlckVtYWlsKSB7XHJcbiAgbGV0IGluZGV4T2ZBdCA9IHVzZXJFbWFpbC5pbmRleE9mKCdAJyk7XHJcbiAgcmV0dXJuICd1c2VyOi8vJyArIHVzZXJFbWFpbC5zdWJzdHJpbmcoaW5kZXhPZkF0ICsgMSwgdXNlckVtYWlsLmxlbmd0aCkgKyAnLycgKyB1c2VyRW1haWwuc3Vic3RyaW5nKDAsIGluZGV4T2ZBdCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBPYnRhaW5zIHRoZSB1c2VyIGVtYWlsIHRoYXQgY29ycmVzcG9uZHMgdG8gYSBnaXZlbiBVUkxcclxuICogQHBhcmFtICB7VVJMLlVSTH0gdXNlclVSTCBUaGUgdXNlciBVUkxcclxuICogQHJldHVybiB7c3RyaW5nfSB1c2VyRW1haWwgVGhlIHVzZXIgZW1haWxcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRVc2VyRW1haWxGcm9tVVJMKHVzZXJVUkwpIHtcclxuICBsZXQgdXJsID0gZGl2aWRlVVJMKHVzZXJVUkwpO1xyXG4gIHJldHVybiB1cmwuaWRlbnRpdHkucmVwbGFjZSgnLycsICcnKSArICdAJyArIHVybC5kb21haW47IC8vIGlkZW50aXR5IGZpZWxkIGhhcyAnL2V4YW1wbGVJRCcgaW5zdGVhZCBvZiAnZXhhbXBsZUlEJ1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIENoZWNrIGlmIHRoZSB1c2VyIGlkZW50aWZpZXIgaXMgYWxyZWFkeSBpbiB0aGUgVVJMIGZvcm1hdCwgaWYgbm90LCBjb252ZXJ0IHRvIFVSTCBmb3JtYXRcclxuICogQHBhcmFtICB7c3RyaW5nfSAgIGlkZW50aWZpZXIgIHVzZXIgaWRlbnRpZmllclxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9ICAgdXNlclVSTCAgICB0aGUgdXNlciBVUkxcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0VG9Vc2VyVVJMKGlkZW50aWZpZXIpIHtcclxuXHJcbiAgLy8gY2hlY2sgaWYgdGhlIGlkZW50aWZpZXIgaXMgYWxyZWFkeSBpbiB0aGUgdXJsIGZvcm1hdFxyXG4gIGlmIChpZGVudGlmaWVyLnN1YnN0cmluZygwLCA3KSA9PT0gJ3VzZXI6Ly8nKSB7XHJcbiAgICBsZXQgZGl2aWRlZFVSTCA9IGRpdmlkZVVSTChpZGVudGlmaWVyKTtcclxuXHJcbiAgICAvL2NoZWNrIGlmIHRoZSB1cmwgaXMgd2VsbCBmb3JtYXRlZFxyXG4gICAgaWYgKGRpdmlkZWRVUkwuZG9tYWluICYmIGRpdmlkZWRVUkwuaWRlbnRpdHkpIHtcclxuICAgICAgcmV0dXJuIGlkZW50aWZpZXI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aHJvdyAndXNlclVSTCB3aXRoIHdyb25nIGZvcm1hdCc7XHJcbiAgICB9XHJcblxyXG4gIC8vaWYgbm90LCBjb252ZXJ0IHRoZSB1c2VyIGVtYWlsIHRvIFVSTCBmb3JtYXRcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIGdldFVzZXJVUkxGcm9tRW1haWwoaWRlbnRpZmllcik7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tBdHRyaWJ1dGUocGF0aCkge1xyXG5cclxuICBsZXQgcmVnZXggPSAvKCgoW2EtekEtWl0rKTpcXC9cXC8oWzAtOWEtekEtWl1bLVxcd10qWzAtOWEtekEtWl1cXC4pK1thLXpBLVpdezIsOX0pXFwvW2EtekEtWjAtOVxcLl0rQFthLXpBLVowLTldKyhcXC0pP1thLXpBLVowLTldKyhcXC4pP1thLXpBLVowLTldezIsMTB9P1xcLlthLXpBLVpdezIsMTB9KSguKyg/PS5pZGVudGl0eSkpPy9nbTtcclxuXHJcbiAgbGV0IGxpc3QgPSBbXTtcclxuICBsZXQgZmluYWwgPSBbXTtcclxuICBsZXQgdGVzdCA9IHBhdGgubWF0Y2gocmVnZXgpO1xyXG5cclxuICBpZiAodGVzdCA9PSBudWxsKSB7XHJcbiAgICBmaW5hbCA9IHBhdGguc3BsaXQoJy4nKTtcclxuICB9IGVsc2Uge1xyXG4gICAgbGV0IG07XHJcbiAgICB3aGlsZSAoKG0gPSByZWdleC5leGVjKHBhdGgpKSAhPT0gbnVsbCkge1xyXG4gICAgICAvLyBUaGlzIGlzIG5lY2Vzc2FyeSB0byBhdm9pZCBpbmZpbml0ZSBsb29wcyB3aXRoIHplcm8td2lkdGggbWF0Y2hlc1xyXG4gICAgICBpZiAobS5pbmRleCA9PT0gcmVnZXgubGFzdEluZGV4KSB7XHJcbiAgICAgICAgcmVnZXgubGFzdEluZGV4Kys7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFRoZSByZXN1bHQgY2FuIGJlIGFjY2Vzc2VkIHRocm91Z2ggdGhlIGBtYC12YXJpYWJsZS5cclxuICAgICAgbS5mb3JFYWNoKChtYXRjaCwgZ3JvdXBJbmRleCkgPT4ge1xyXG4gICAgICAgIGlmIChncm91cEluZGV4ID09PSAwKSB7XHJcbiAgICAgICAgICBsaXN0LnB1c2gobWF0Y2gpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBsZXQgcmVzdWx0O1xyXG4gICAgbGlzdC5mb3JFYWNoKCh1cmwpID0+IHtcclxuICAgICAgcmVzdWx0ID0gcGF0aC5yZXBsYWNlKHVybCwgJyorKicpO1xyXG5cclxuICAgICAgZmluYWwgPSByZXN1bHQuc3BsaXQoJy4nKS5tYXAoKGl0ZW0pID0+IHtcclxuICAgICAgICBpZiAoaXRlbSA9PT0gJyorKicpIHsgcmV0dXJuIHVybDsgfVxyXG4gICAgICAgIHJldHVybiBpdGVtO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNvbnNvbGUubG9nKCdbU2VydmljZUZyYW1ld29yay5VdGlscy5jaGVja0F0dHJpYnV0ZV0nLCBmaW5hbCk7XHJcbiAgcmV0dXJuIGZpbmFsO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBdHRyaWJ1dGVzKHBhdGgpIHtcclxuICBsZXQgcmVnZXggPSAvKFswLTlhLXpBLVpdWy1cXHddKik6XFwvXFwvL2c7XHJcblxyXG4gIGxldCBzdHJpbmczID0gJ2lkZW50aXR5JztcclxuXHJcbiAgaWYgKCFwYXRoLmluY2x1ZGVzKCc6Ly8nKSkge1xyXG4gICAgcmV0dXJuIChwYXRoLnNwbGl0KCcuJykpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBsZXQgc3RyaW5nMSA9IHBhdGguc3BsaXQocmVnZXgpWzBdO1xyXG5cclxuICAgIGxldCBhcnJheTEgPSBzdHJpbmcxLnNwbGl0KCcuJyk7XHJcblxyXG4gICAgbGV0IHN0cmluZzIgPSBwYXRoLnJlcGxhY2Uoc3RyaW5nMSwgJycpO1xyXG5cclxuICAgIGlmIChwYXRoLmluY2x1ZGVzKHN0cmluZzMpKSB7XHJcblxyXG4gICAgICBsZXQgYXJyYXkyID0gc3RyaW5nMi5zcGxpdChzdHJpbmczICsgJy4nKTtcclxuXHJcbiAgICAgIGNvbnNvbGUubG9nKCdhcnJheTIgJyArIGFycmF5Mik7XHJcblxyXG4gICAgICBzdHJpbmcyID0gYXJyYXkyWzBdLnNsaWNlKCcuJywgLTEpO1xyXG5cclxuICAgICAgYXJyYXkyID0gYXJyYXkyWzFdLnNwbGl0KCcuJyk7XHJcblxyXG4gICAgICBhcnJheTEucHVzaChzdHJpbmcyLCBzdHJpbmczKTtcclxuXHJcbiAgICAgIGFycmF5MSA9IGFycmF5MS5jb25jYXQoYXJyYXkyKTtcclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcnJheTEucHVzaChzdHJpbmcyKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChhcnJheTEuZmlsdGVyKEJvb2xlYW4pKTtcclxuXHJcbiAgfVxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy91dGlscy91dGlscy5qcyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9wcm9taXNlLmpzXG4vLyBtb2R1bGUgaWQgPSA3MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUiLCJ2YXIgTUVUQSAgICAgPSByZXF1aXJlKCcuL191aWQnKSgnbWV0YScpXG4gICwgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKVxuICAsIGhhcyAgICAgID0gcmVxdWlyZSgnLi9faGFzJylcbiAgLCBzZXREZXNjICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmZcbiAgLCBpZCAgICAgICA9IDA7XG52YXIgaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZSB8fCBmdW5jdGlvbigpe1xuICByZXR1cm4gdHJ1ZTtcbn07XG52YXIgRlJFRVpFID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgcmV0dXJuIGlzRXh0ZW5zaWJsZShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKTtcbn0pO1xudmFyIHNldE1ldGEgPSBmdW5jdGlvbihpdCl7XG4gIHNldERlc2MoaXQsIE1FVEEsIHt2YWx1ZToge1xuICAgIGk6ICdPJyArICsraWQsIC8vIG9iamVjdCBJRFxuICAgIHc6IHt9ICAgICAgICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH19KTtcbn07XG52YXIgZmFzdEtleSA9IGZ1bmN0aW9uKGl0LCBjcmVhdGUpe1xuICAvLyByZXR1cm4gcHJpbWl0aXZlIHdpdGggcHJlZml4XG4gIGlmKCFpc09iamVjdChpdCkpcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJyA/IGl0IDogKHR5cGVvZiBpdCA9PSAnc3RyaW5nJyA/ICdTJyA6ICdQJykgKyBpdDtcbiAgaWYoIWhhcyhpdCwgTUVUQSkpe1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYoIWlzRXh0ZW5zaWJsZShpdCkpcmV0dXJuICdGJztcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmKCFjcmVhdGUpcmV0dXJuICdFJztcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gb2JqZWN0IElEXG4gIH0gcmV0dXJuIGl0W01FVEFdLmk7XG59O1xudmFyIGdldFdlYWsgPSBmdW5jdGlvbihpdCwgY3JlYXRlKXtcbiAgaWYoIWhhcyhpdCwgTUVUQSkpe1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYoIWlzRXh0ZW5zaWJsZShpdCkpcmV0dXJuIHRydWU7XG4gICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGFcbiAgICBpZighY3JlYXRlKXJldHVybiBmYWxzZTtcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gaGFzaCB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IHJldHVybiBpdFtNRVRBXS53O1xufTtcbi8vIGFkZCBtZXRhZGF0YSBvbiBmcmVlemUtZmFtaWx5IG1ldGhvZHMgY2FsbGluZ1xudmFyIG9uRnJlZXplID0gZnVuY3Rpb24oaXQpe1xuICBpZihGUkVFWkUgJiYgbWV0YS5ORUVEICYmIGlzRXh0ZW5zaWJsZShpdCkgJiYgIWhhcyhpdCwgTUVUQSkpc2V0TWV0YShpdCk7XG4gIHJldHVybiBpdDtcbn07XG52YXIgbWV0YSA9IG1vZHVsZS5leHBvcnRzID0ge1xuICBLRVk6ICAgICAgTUVUQSxcbiAgTkVFRDogICAgIGZhbHNlLFxuICBmYXN0S2V5OiAgZmFzdEtleSxcbiAgZ2V0V2VhazogIGdldFdlYWssXG4gIG9uRnJlZXplOiBvbkZyZWV6ZVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX21ldGEuanNcbi8vIG1vZHVsZSBpZCA9IDczXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsInZhciBjbGFzc29mICAgPSByZXF1aXJlKCcuL19jbGFzc29mJylcbiAgLCBJVEVSQVRPUiAgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKVxuICAsIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbihpdCl7XG4gIGlmKGl0ICE9IHVuZGVmaW5lZClyZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QuanNcbi8vIG1vZHVsZSBpZCA9IDc0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDQgNSIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvY3JlYXRlXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSA3NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2ZcIiksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzXG4vLyBtb2R1bGUgaWQgPSA3NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9zeW1ib2wuanNcbi8vIG1vZHVsZSBpZCA9IDc3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3JcIiksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL3N5bWJvbC9pdGVyYXRvci5qc1xuLy8gbW9kdWxlIGlkID0gNzhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZScpO1xudmFyICRPYmplY3QgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGUoUCwgRCl7XG4gIHJldHVybiAkT2JqZWN0LmNyZWF0ZShQLCBEKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSA3OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDgwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3Qua2V5cztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9rZXlzLmpzXG4vLyBtb2R1bGUgaWQgPSA4MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiA0IDUiLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZicpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LnNldFByb3RvdHlwZU9mO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDgyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsInJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5wcm9taXNlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL21vZHVsZXMvX2NvcmUnKS5Qcm9taXNlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZS5qc1xuLy8gbW9kdWxlIGlkID0gODNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1IiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5TeW1ib2w7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDg0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX3drcy1leHQnKS5mKCdpdGVyYXRvcicpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2l0ZXJhdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSA4NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0LCBDb25zdHJ1Y3RvciwgbmFtZSwgZm9yYmlkZGVuRmllbGQpe1xuICBpZighKGl0IGluc3RhbmNlb2YgQ29uc3RydWN0b3IpIHx8IChmb3JiaWRkZW5GaWVsZCAhPT0gdW5kZWZpbmVkICYmIGZvcmJpZGRlbkZpZWxkIGluIGl0KSl7XG4gICAgdGhyb3cgVHlwZUVycm9yKG5hbWUgKyAnOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnKTtcbiAgfSByZXR1cm4gaXQ7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYW4taW5zdGFuY2UuanNcbi8vIG1vZHVsZSBpZCA9IDg2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDQgNSIsIi8vIGFsbCBlbnVtZXJhYmxlIG9iamVjdCBrZXlzLCBpbmNsdWRlcyBzeW1ib2xzXG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJylcbiAgLCBnT1BTICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKVxuICAsIHBJRSAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgdmFyIHJlc3VsdCAgICAgPSBnZXRLZXlzKGl0KVxuICAgICwgZ2V0U3ltYm9scyA9IGdPUFMuZjtcbiAgaWYoZ2V0U3ltYm9scyl7XG4gICAgdmFyIHN5bWJvbHMgPSBnZXRTeW1ib2xzKGl0KVxuICAgICAgLCBpc0VudW0gID0gcElFLmZcbiAgICAgICwgaSAgICAgICA9IDBcbiAgICAgICwga2V5O1xuICAgIHdoaWxlKHN5bWJvbHMubGVuZ3RoID4gaSlpZihpc0VudW0uY2FsbChpdCwga2V5ID0gc3ltYm9sc1tpKytdKSlyZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZW51bS1rZXlzLmpzXG4vLyBtb2R1bGUgaWQgPSA4N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCJ2YXIgY3R4ICAgICAgICAgPSByZXF1aXJlKCcuL19jdHgnKVxuICAsIGNhbGwgICAgICAgID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJylcbiAgLCBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKVxuICAsIGFuT2JqZWN0ICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCB0b0xlbmd0aCAgICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpXG4gICwgZ2V0SXRlckZuICAgPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpXG4gICwgQlJFQUsgICAgICAgPSB7fVxuICAsIFJFVFVSTiAgICAgID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXRlcmFibGUsIGVudHJpZXMsIGZuLCB0aGF0LCBJVEVSQVRPUil7XG4gIHZhciBpdGVyRm4gPSBJVEVSQVRPUiA/IGZ1bmN0aW9uKCl7IHJldHVybiBpdGVyYWJsZTsgfSA6IGdldEl0ZXJGbihpdGVyYWJsZSlcbiAgICAsIGYgICAgICA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKVxuICAgICwgaW5kZXggID0gMFxuICAgICwgbGVuZ3RoLCBzdGVwLCBpdGVyYXRvciwgcmVzdWx0O1xuICBpZih0eXBlb2YgaXRlckZuICE9ICdmdW5jdGlvbicpdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZihpc0FycmF5SXRlcihpdGVyRm4pKWZvcihsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKyl7XG4gICAgcmVzdWx0ID0gZW50cmllcyA/IGYoYW5PYmplY3Qoc3RlcCA9IGl0ZXJhYmxlW2luZGV4XSlbMF0sIHN0ZXBbMV0pIDogZihpdGVyYWJsZVtpbmRleF0pO1xuICAgIGlmKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvcihpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKGl0ZXJhYmxlKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyApe1xuICAgIHJlc3VsdCA9IGNhbGwoaXRlcmF0b3IsIGYsIHN0ZXAudmFsdWUsIGVudHJpZXMpO1xuICAgIGlmKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgID0gQlJFQUs7XG5leHBvcnRzLlJFVFVSTiA9IFJFVFVSTjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Zvci1vZi5qc1xuLy8gbW9kdWxlIGlkID0gODhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1IiwiLy8gZmFzdCBhcHBseSwgaHR0cDovL2pzcGVyZi5sbmtpdC5jb20vZmFzdC1hcHBseS81XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGZuLCBhcmdzLCB0aGF0KXtcbiAgdmFyIHVuID0gdGhhdCA9PT0gdW5kZWZpbmVkO1xuICBzd2l0Y2goYXJncy5sZW5ndGgpe1xuICAgIGNhc2UgMDogcmV0dXJuIHVuID8gZm4oKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0KTtcbiAgICBjYXNlIDE6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgY2FzZSAzOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICBjYXNlIDQ6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICB9IHJldHVybiAgICAgICAgICAgICAgZm4uYXBwbHkodGhhdCwgYXJncyk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faW52b2tlLmpzXG4vLyBtb2R1bGUgaWQgPSA4OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUiLCIvLyBjaGVjayBvbiBkZWZhdWx0IEFycmF5IGl0ZXJhdG9yXG52YXIgSXRlcmF0b3JzICA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpXG4gICwgSVRFUkFUT1IgICA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpXG4gICwgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpdCAhPT0gdW5kZWZpbmVkICYmIChJdGVyYXRvcnMuQXJyYXkgPT09IGl0IHx8IEFycmF5UHJvdG9bSVRFUkFUT1JdID09PSBpdCk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qc1xuLy8gbW9kdWxlIGlkID0gOTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1IiwiLy8gNy4yLjIgSXNBcnJheShhcmd1bWVudClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiBpc0FycmF5KGFyZyl7XG4gIHJldHVybiBjb2YoYXJnKSA9PSAnQXJyYXknO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLWFycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSA5MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCIvLyBjYWxsIHNvbWV0aGluZyBvbiBpdGVyYXRvciBzdGVwIHdpdGggc2FmZSBjbG9zaW5nIG9uIGVycm9yXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXRlcmF0b3IsIGZuLCB2YWx1ZSwgZW50cmllcyl7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVudHJpZXMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTtcbiAgLy8gNy40LjYgSXRlcmF0b3JDbG9zZShpdGVyYXRvciwgY29tcGxldGlvbilcbiAgfSBjYXRjaChlKXtcbiAgICB2YXIgcmV0ID0gaXRlcmF0b3JbJ3JldHVybiddO1xuICAgIGlmKHJldCAhPT0gdW5kZWZpbmVkKWFuT2JqZWN0KHJldC5jYWxsKGl0ZXJhdG9yKSk7XG4gICAgdGhyb3cgZTtcbiAgfVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY2FsbC5qc1xuLy8gbW9kdWxlIGlkID0gOTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1IiwidmFyIElURVJBVE9SICAgICA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpXG4gICwgU0FGRV9DTE9TSU5HID0gZmFsc2U7XG5cbnRyeSB7XG4gIHZhciByaXRlciA9IFs3XVtJVEVSQVRPUl0oKTtcbiAgcml0ZXJbJ3JldHVybiddID0gZnVuY3Rpb24oKXsgU0FGRV9DTE9TSU5HID0gdHJ1ZTsgfTtcbiAgQXJyYXkuZnJvbShyaXRlciwgZnVuY3Rpb24oKXsgdGhyb3cgMjsgfSk7XG59IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZXhlYywgc2tpcENsb3Npbmcpe1xuICBpZighc2tpcENsb3NpbmcgJiYgIVNBRkVfQ0xPU0lORylyZXR1cm4gZmFsc2U7XG4gIHZhciBzYWZlID0gZmFsc2U7XG4gIHRyeSB7XG4gICAgdmFyIGFyciAgPSBbN11cbiAgICAgICwgaXRlciA9IGFycltJVEVSQVRPUl0oKTtcbiAgICBpdGVyLm5leHQgPSBmdW5jdGlvbigpeyByZXR1cm4ge2RvbmU6IHNhZmUgPSB0cnVlfTsgfTtcbiAgICBhcnJbSVRFUkFUT1JdID0gZnVuY3Rpb24oKXsgcmV0dXJuIGl0ZXI7IH07XG4gICAgZXhlYyhhcnIpO1xuICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiBzYWZlO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItZGV0ZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSA5M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUiLCJ2YXIgZ2V0S2V5cyAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKVxuICAsIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqZWN0LCBlbCl7XG4gIHZhciBPICAgICAgPSB0b0lPYmplY3Qob2JqZWN0KVxuICAgICwga2V5cyAgID0gZ2V0S2V5cyhPKVxuICAgICwgbGVuZ3RoID0ga2V5cy5sZW5ndGhcbiAgICAsIGluZGV4ICA9IDBcbiAgICAsIGtleTtcbiAgd2hpbGUobGVuZ3RoID4gaW5kZXgpaWYoT1trZXkgPSBrZXlzW2luZGV4KytdXSA9PT0gZWwpcmV0dXJuIGtleTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19rZXlvZi5qc1xuLy8gbW9kdWxlIGlkID0gOTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwidmFyIGdsb2JhbCAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgbWFjcm90YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldFxuICAsIE9ic2VydmVyICA9IGdsb2JhbC5NdXRhdGlvbk9ic2VydmVyIHx8IGdsb2JhbC5XZWJLaXRNdXRhdGlvbk9ic2VydmVyXG4gICwgcHJvY2VzcyAgID0gZ2xvYmFsLnByb2Nlc3NcbiAgLCBQcm9taXNlICAgPSBnbG9iYWwuUHJvbWlzZVxuICAsIGlzTm9kZSAgICA9IHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpe1xuICB2YXIgaGVhZCwgbGFzdCwgbm90aWZ5O1xuXG4gIHZhciBmbHVzaCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHBhcmVudCwgZm47XG4gICAgaWYoaXNOb2RlICYmIChwYXJlbnQgPSBwcm9jZXNzLmRvbWFpbikpcGFyZW50LmV4aXQoKTtcbiAgICB3aGlsZShoZWFkKXtcbiAgICAgIGZuICAgPSBoZWFkLmZuO1xuICAgICAgaGVhZCA9IGhlYWQubmV4dDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZuKCk7XG4gICAgICB9IGNhdGNoKGUpe1xuICAgICAgICBpZihoZWFkKW5vdGlmeSgpO1xuICAgICAgICBlbHNlIGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgfSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgIGlmKHBhcmVudClwYXJlbnQuZW50ZXIoKTtcbiAgfTtcblxuICAvLyBOb2RlLmpzXG4gIGlmKGlzTm9kZSl7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24oKXtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soZmx1c2gpO1xuICAgIH07XG4gIC8vIGJyb3dzZXJzIHdpdGggTXV0YXRpb25PYnNlcnZlclxuICB9IGVsc2UgaWYoT2JzZXJ2ZXIpe1xuICAgIHZhciB0b2dnbGUgPSB0cnVlXG4gICAgICAsIG5vZGUgICA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgICBuZXcgT2JzZXJ2ZXIoZmx1c2gpLm9ic2VydmUobm9kZSwge2NoYXJhY3RlckRhdGE6IHRydWV9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBub3RpZnkgPSBmdW5jdGlvbigpe1xuICAgICAgbm9kZS5kYXRhID0gdG9nZ2xlID0gIXRvZ2dsZTtcbiAgICB9O1xuICAvLyBlbnZpcm9ubWVudHMgd2l0aCBtYXliZSBub24tY29tcGxldGVseSBjb3JyZWN0LCBidXQgZXhpc3RlbnQgUHJvbWlzZVxuICB9IGVsc2UgaWYoUHJvbWlzZSAmJiBQcm9taXNlLnJlc29sdmUpe1xuICAgIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24oKXtcbiAgICAgIHByb21pc2UudGhlbihmbHVzaCk7XG4gICAgfTtcbiAgLy8gZm9yIG90aGVyIGVudmlyb25tZW50cyAtIG1hY3JvdGFzayBiYXNlZCBvbjpcbiAgLy8gLSBzZXRJbW1lZGlhdGVcbiAgLy8gLSBNZXNzYWdlQ2hhbm5lbFxuICAvLyAtIHdpbmRvdy5wb3N0TWVzc2FnXG4gIC8vIC0gb25yZWFkeXN0YXRlY2hhbmdlXG4gIC8vIC0gc2V0VGltZW91dFxuICB9IGVsc2Uge1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uKCl7XG4gICAgICAvLyBzdHJhbmdlIElFICsgd2VicGFjayBkZXYgc2VydmVyIGJ1ZyAtIHVzZSAuY2FsbChnbG9iYWwpXG4gICAgICBtYWNyb3Rhc2suY2FsbChnbG9iYWwsIGZsdXNoKTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKGZuKXtcbiAgICB2YXIgdGFzayA9IHtmbjogZm4sIG5leHQ6IHVuZGVmaW5lZH07XG4gICAgaWYobGFzdClsYXN0Lm5leHQgPSB0YXNrO1xuICAgIGlmKCFoZWFkKXtcbiAgICAgIGhlYWQgPSB0YXNrO1xuICAgICAgbm90aWZ5KCk7XG4gICAgfSBsYXN0ID0gdGFzaztcbiAgfTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19taWNyb3Rhc2suanNcbi8vIG1vZHVsZSBpZCA9IDk1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDQgNSIsIi8vIGZhbGxiYWNrIGZvciBJRTExIGJ1Z2d5IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHdpdGggaWZyYW1lIGFuZCB3aW5kb3dcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JylcbiAgLCBnT1BOICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmZcbiAgLCB0b1N0cmluZyAgPSB7fS50b1N0cmluZztcblxudmFyIHdpbmRvd05hbWVzID0gdHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiB3aW5kb3cgJiYgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXNcbiAgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh3aW5kb3cpIDogW107XG5cbnZhciBnZXRXaW5kb3dOYW1lcyA9IGZ1bmN0aW9uKGl0KXtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZ09QTihpdCk7XG4gIH0gY2F0Y2goZSl7XG4gICAgcmV0dXJuIHdpbmRvd05hbWVzLnNsaWNlKCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KXtcbiAgcmV0dXJuIHdpbmRvd05hbWVzICYmIHRvU3RyaW5nLmNhbGwoaXQpID09ICdbb2JqZWN0IFdpbmRvd10nID8gZ2V0V2luZG93TmFtZXMoaXQpIDogZ09QTih0b0lPYmplY3QoaXQpKTtcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BuLWV4dC5qc1xuLy8gbW9kdWxlIGlkID0gOTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwidmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHRhcmdldCwgc3JjLCBzYWZlKXtcbiAgZm9yKHZhciBrZXkgaW4gc3JjKXtcbiAgICBpZihzYWZlICYmIHRhcmdldFtrZXldKXRhcmdldFtrZXldID0gc3JjW2tleV07XG4gICAgZWxzZSBoaWRlKHRhcmdldCwga2V5LCBzcmNba2V5XSk7XG4gIH0gcmV0dXJuIHRhcmdldDtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19yZWRlZmluZS1hbGwuanNcbi8vIG1vZHVsZSBpZCA9IDk3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDQgNSIsIi8vIFdvcmtzIHdpdGggX19wcm90b19fIG9ubHkuIE9sZCB2OCBjYW4ndCB3b3JrIHdpdGggbnVsbCBwcm90byBvYmplY3RzLlxuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uKE8sIHByb3RvKXtcbiAgYW5PYmplY3QoTyk7XG4gIGlmKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpdGhyb3cgVHlwZUVycm9yKHByb3RvICsgXCI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhXCIpO1xufTtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCAoJ19fcHJvdG9fXycgaW4ge30gPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgZnVuY3Rpb24odGVzdCwgYnVnZ3ksIHNldCl7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7XG4gICAgICAgIHNldCh0ZXN0LCBbXSk7XG4gICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpO1xuICAgICAgfSBjYXRjaChlKXsgYnVnZ3kgPSB0cnVlOyB9XG4gICAgICByZXR1cm4gZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pe1xuICAgICAgICBjaGVjayhPLCBwcm90byk7XG4gICAgICAgIGlmKGJ1Z2d5KU8uX19wcm90b19fID0gcHJvdG87XG4gICAgICAgIGVsc2Ugc2V0KE8sIHByb3RvKTtcbiAgICAgICAgcmV0dXJuIE87XG4gICAgICB9O1xuICAgIH0oe30sIGZhbHNlKSA6IHVuZGVmaW5lZCksXG4gIGNoZWNrOiBjaGVja1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC1wcm90by5qc1xuLy8gbW9kdWxlIGlkID0gOThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJylcbiAgLCBjb3JlICAgICAgICA9IHJlcXVpcmUoJy4vX2NvcmUnKVxuICAsIGRQICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJylcbiAgLCBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJylcbiAgLCBTUEVDSUVTICAgICA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oS0VZKXtcbiAgdmFyIEMgPSB0eXBlb2YgY29yZVtLRVldID09ICdmdW5jdGlvbicgPyBjb3JlW0tFWV0gOiBnbG9iYWxbS0VZXTtcbiAgaWYoREVTQ1JJUFRPUlMgJiYgQyAmJiAhQ1tTUEVDSUVTXSlkUC5mKEMsIFNQRUNJRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfVxuICB9KTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtc3BlY2llcy5qc1xuLy8gbW9kdWxlIGlkID0gOTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1IiwiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJylcbiAgLCBTUEVDSUVTICAgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihPLCBEKXtcbiAgdmFyIEMgPSBhbk9iamVjdChPKS5jb25zdHJ1Y3RvciwgUztcbiAgcmV0dXJuIEMgPT09IHVuZGVmaW5lZCB8fCAoUyA9IGFuT2JqZWN0KEMpW1NQRUNJRVNdKSA9PSB1bmRlZmluZWQgPyBEIDogYUZ1bmN0aW9uKFMpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NwZWNpZXMtY29uc3RydWN0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDEwMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUiLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4vLyAxOS4xLjIuMiAvIDE1LjIuMy41IE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSlcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge2NyZWF0ZTogcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpfSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwiLy8gMTkuMS4yLjkgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgdG9PYmplY3QgICAgICAgID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgLCAkZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZ2V0UHJvdG90eXBlT2YnLCBmdW5jdGlvbigpe1xuICByZXR1cm4gZnVuY3Rpb24gZ2V0UHJvdG90eXBlT2YoaXQpe1xuICAgIHJldHVybiAkZ2V0UHJvdG90eXBlT2YodG9PYmplY3QoaXQpKTtcbiAgfTtcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDEwMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCIvLyAxOS4xLjIuMTQgT2JqZWN0LmtleXMoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpXG4gICwgJGtleXMgICAgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2tleXMnLCBmdW5jdGlvbigpe1xuICByZXR1cm4gZnVuY3Rpb24ga2V5cyhpdCl7XG4gICAgcmV0dXJuICRrZXlzKHRvT2JqZWN0KGl0KSk7XG4gIH07XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgNCA1IiwiLy8gMTkuMS4zLjE5IE9iamVjdC5zZXRQcm90b3R5cGVPZihPLCBwcm90bylcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHtzZXRQcm90b3R5cGVPZjogcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0fSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZi5qc1xuLy8gbW9kdWxlIGlkID0gMTA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyIsIid1c2Ugc3RyaWN0JztcbnZhciBMSUJSQVJZICAgICAgICAgICAgPSByZXF1aXJlKCcuL19saWJyYXJ5JylcbiAgLCBnbG9iYWwgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIGN0eCAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2N0eCcpXG4gICwgY2xhc3NvZiAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpXG4gICwgJGV4cG9ydCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCBpc09iamVjdCAgICAgICAgICAgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKVxuICAsIGFGdW5jdGlvbiAgICAgICAgICA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKVxuICAsIGFuSW5zdGFuY2UgICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJylcbiAgLCBmb3JPZiAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL19mb3Itb2YnKVxuICAsIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKVxuICAsIHRhc2sgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXRcbiAgLCBtaWNyb3Rhc2sgICAgICAgICAgPSByZXF1aXJlKCcuL19taWNyb3Rhc2snKSgpXG4gICwgUFJPTUlTRSAgICAgICAgICAgID0gJ1Byb21pc2UnXG4gICwgVHlwZUVycm9yICAgICAgICAgID0gZ2xvYmFsLlR5cGVFcnJvclxuICAsIHByb2Nlc3MgICAgICAgICAgICA9IGdsb2JhbC5wcm9jZXNzXG4gICwgJFByb21pc2UgICAgICAgICAgID0gZ2xvYmFsW1BST01JU0VdXG4gICwgcHJvY2VzcyAgICAgICAgICAgID0gZ2xvYmFsLnByb2Nlc3NcbiAgLCBpc05vZGUgICAgICAgICAgICAgPSBjbGFzc29mKHByb2Nlc3MpID09ICdwcm9jZXNzJ1xuICAsIGVtcHR5ICAgICAgICAgICAgICA9IGZ1bmN0aW9uKCl7IC8qIGVtcHR5ICovIH1cbiAgLCBJbnRlcm5hbCwgR2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5LCBXcmFwcGVyO1xuXG52YXIgVVNFX05BVElWRSA9ICEhZnVuY3Rpb24oKXtcbiAgdHJ5IHtcbiAgICAvLyBjb3JyZWN0IHN1YmNsYXNzaW5nIHdpdGggQEBzcGVjaWVzIHN1cHBvcnRcbiAgICB2YXIgcHJvbWlzZSAgICAgPSAkUHJvbWlzZS5yZXNvbHZlKDEpXG4gICAgICAsIEZha2VQcm9taXNlID0gKHByb21pc2UuY29uc3RydWN0b3IgPSB7fSlbcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKV0gPSBmdW5jdGlvbihleGVjKXsgZXhlYyhlbXB0eSwgZW1wdHkpOyB9O1xuICAgIC8vIHVuaGFuZGxlZCByZWplY3Rpb25zIHRyYWNraW5nIHN1cHBvcnQsIE5vZGVKUyBQcm9taXNlIHdpdGhvdXQgaXQgZmFpbHMgQEBzcGVjaWVzIHRlc3RcbiAgICByZXR1cm4gKGlzTm9kZSB8fCB0eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50ID09ICdmdW5jdGlvbicpICYmIHByb21pc2UudGhlbihlbXB0eSkgaW5zdGFuY2VvZiBGYWtlUHJvbWlzZTtcbiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxufSgpO1xuXG4vLyBoZWxwZXJzXG52YXIgc2FtZUNvbnN0cnVjdG9yID0gZnVuY3Rpb24oYSwgYil7XG4gIC8vIHdpdGggbGlicmFyeSB3cmFwcGVyIHNwZWNpYWwgY2FzZVxuICByZXR1cm4gYSA9PT0gYiB8fCBhID09PSAkUHJvbWlzZSAmJiBiID09PSBXcmFwcGVyO1xufTtcbnZhciBpc1RoZW5hYmxlID0gZnVuY3Rpb24oaXQpe1xuICB2YXIgdGhlbjtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiB0eXBlb2YgKHRoZW4gPSBpdC50aGVuKSA9PSAnZnVuY3Rpb24nID8gdGhlbiA6IGZhbHNlO1xufTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uKEMpe1xuICByZXR1cm4gc2FtZUNvbnN0cnVjdG9yKCRQcm9taXNlLCBDKVxuICAgID8gbmV3IFByb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgOiBuZXcgR2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5KEMpO1xufTtcbnZhciBQcm9taXNlQ2FwYWJpbGl0eSA9IEdlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uKEMpe1xuICB2YXIgcmVzb2x2ZSwgcmVqZWN0O1xuICB0aGlzLnByb21pc2UgPSBuZXcgQyhmdW5jdGlvbigkJHJlc29sdmUsICQkcmVqZWN0KXtcbiAgICBpZihyZXNvbHZlICE9PSB1bmRlZmluZWQgfHwgcmVqZWN0ICE9PSB1bmRlZmluZWQpdGhyb3cgVHlwZUVycm9yKCdCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvcicpO1xuICAgIHJlc29sdmUgPSAkJHJlc29sdmU7XG4gICAgcmVqZWN0ICA9ICQkcmVqZWN0O1xuICB9KTtcbiAgdGhpcy5yZXNvbHZlID0gYUZ1bmN0aW9uKHJlc29sdmUpO1xuICB0aGlzLnJlamVjdCAgPSBhRnVuY3Rpb24ocmVqZWN0KTtcbn07XG52YXIgcGVyZm9ybSA9IGZ1bmN0aW9uKGV4ZWMpe1xuICB0cnkge1xuICAgIGV4ZWMoKTtcbiAgfSBjYXRjaChlKXtcbiAgICByZXR1cm4ge2Vycm9yOiBlfTtcbiAgfVxufTtcbnZhciBub3RpZnkgPSBmdW5jdGlvbihwcm9taXNlLCBpc1JlamVjdCl7XG4gIGlmKHByb21pc2UuX24pcmV0dXJuO1xuICBwcm9taXNlLl9uID0gdHJ1ZTtcbiAgdmFyIGNoYWluID0gcHJvbWlzZS5fYztcbiAgbWljcm90YXNrKGZ1bmN0aW9uKCl7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdlxuICAgICAgLCBvayAgICA9IHByb21pc2UuX3MgPT0gMVxuICAgICAgLCBpICAgICA9IDA7XG4gICAgdmFyIHJ1biA9IGZ1bmN0aW9uKHJlYWN0aW9uKXtcbiAgICAgIHZhciBoYW5kbGVyID0gb2sgPyByZWFjdGlvbi5vayA6IHJlYWN0aW9uLmZhaWxcbiAgICAgICAgLCByZXNvbHZlID0gcmVhY3Rpb24ucmVzb2x2ZVxuICAgICAgICAsIHJlamVjdCAgPSByZWFjdGlvbi5yZWplY3RcbiAgICAgICAgLCBkb21haW4gID0gcmVhY3Rpb24uZG9tYWluXG4gICAgICAgICwgcmVzdWx0LCB0aGVuO1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYoaGFuZGxlcil7XG4gICAgICAgICAgaWYoIW9rKXtcbiAgICAgICAgICAgIGlmKHByb21pc2UuX2ggPT0gMilvbkhhbmRsZVVuaGFuZGxlZChwcm9taXNlKTtcbiAgICAgICAgICAgIHByb21pc2UuX2ggPSAxO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZihoYW5kbGVyID09PSB0cnVlKXJlc3VsdCA9IHZhbHVlO1xuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYoZG9tYWluKWRvbWFpbi5lbnRlcigpO1xuICAgICAgICAgICAgcmVzdWx0ID0gaGFuZGxlcih2YWx1ZSk7XG4gICAgICAgICAgICBpZihkb21haW4pZG9tYWluLmV4aXQoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYocmVzdWx0ID09PSByZWFjdGlvbi5wcm9taXNlKXtcbiAgICAgICAgICAgIHJlamVjdChUeXBlRXJyb3IoJ1Byb21pc2UtY2hhaW4gY3ljbGUnKSk7XG4gICAgICAgICAgfSBlbHNlIGlmKHRoZW4gPSBpc1RoZW5hYmxlKHJlc3VsdCkpe1xuICAgICAgICAgICAgdGhlbi5jYWxsKHJlc3VsdCwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9IGVsc2UgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9IGVsc2UgcmVqZWN0KHZhbHVlKTtcbiAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHdoaWxlKGNoYWluLmxlbmd0aCA+IGkpcnVuKGNoYWluW2krK10pOyAvLyB2YXJpYWJsZSBsZW5ndGggLSBjYW4ndCB1c2UgZm9yRWFjaFxuICAgIHByb21pc2UuX2MgPSBbXTtcbiAgICBwcm9taXNlLl9uID0gZmFsc2U7XG4gICAgaWYoaXNSZWplY3QgJiYgIXByb21pc2UuX2gpb25VbmhhbmRsZWQocHJvbWlzZSk7XG4gIH0pO1xufTtcbnZhciBvblVuaGFuZGxlZCA9IGZ1bmN0aW9uKHByb21pc2Upe1xuICB0YXNrLmNhbGwoZ2xvYmFsLCBmdW5jdGlvbigpe1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3ZcbiAgICAgICwgYWJydXB0LCBoYW5kbGVyLCBjb25zb2xlO1xuICAgIGlmKGlzVW5oYW5kbGVkKHByb21pc2UpKXtcbiAgICAgIGFicnVwdCA9IHBlcmZvcm0oZnVuY3Rpb24oKXtcbiAgICAgICAgaWYoaXNOb2RlKXtcbiAgICAgICAgICBwcm9jZXNzLmVtaXQoJ3VuaGFuZGxlZFJlamVjdGlvbicsIHZhbHVlLCBwcm9taXNlKTtcbiAgICAgICAgfSBlbHNlIGlmKGhhbmRsZXIgPSBnbG9iYWwub251bmhhbmRsZWRyZWplY3Rpb24pe1xuICAgICAgICAgIGhhbmRsZXIoe3Byb21pc2U6IHByb21pc2UsIHJlYXNvbjogdmFsdWV9KTtcbiAgICAgICAgfSBlbHNlIGlmKChjb25zb2xlID0gZ2xvYmFsLmNvbnNvbGUpICYmIGNvbnNvbGUuZXJyb3Ipe1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbicsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICAvLyBCcm93c2VycyBzaG91bGQgbm90IHRyaWdnZXIgYHJlamVjdGlvbkhhbmRsZWRgIGV2ZW50IGlmIGl0IHdhcyBoYW5kbGVkIGhlcmUsIE5vZGVKUyAtIHNob3VsZFxuICAgICAgcHJvbWlzZS5faCA9IGlzTm9kZSB8fCBpc1VuaGFuZGxlZChwcm9taXNlKSA/IDIgOiAxO1xuICAgIH0gcHJvbWlzZS5fYSA9IHVuZGVmaW5lZDtcbiAgICBpZihhYnJ1cHQpdGhyb3cgYWJydXB0LmVycm9yO1xuICB9KTtcbn07XG52YXIgaXNVbmhhbmRsZWQgPSBmdW5jdGlvbihwcm9taXNlKXtcbiAgaWYocHJvbWlzZS5faCA9PSAxKXJldHVybiBmYWxzZTtcbiAgdmFyIGNoYWluID0gcHJvbWlzZS5fYSB8fCBwcm9taXNlLl9jXG4gICAgLCBpICAgICA9IDBcbiAgICAsIHJlYWN0aW9uO1xuICB3aGlsZShjaGFpbi5sZW5ndGggPiBpKXtcbiAgICByZWFjdGlvbiA9IGNoYWluW2krK107XG4gICAgaWYocmVhY3Rpb24uZmFpbCB8fCAhaXNVbmhhbmRsZWQocmVhY3Rpb24ucHJvbWlzZSkpcmV0dXJuIGZhbHNlO1xuICB9IHJldHVybiB0cnVlO1xufTtcbnZhciBvbkhhbmRsZVVuaGFuZGxlZCA9IGZ1bmN0aW9uKHByb21pc2Upe1xuICB0YXNrLmNhbGwoZ2xvYmFsLCBmdW5jdGlvbigpe1xuICAgIHZhciBoYW5kbGVyO1xuICAgIGlmKGlzTm9kZSl7XG4gICAgICBwcm9jZXNzLmVtaXQoJ3JlamVjdGlvbkhhbmRsZWQnLCBwcm9taXNlKTtcbiAgICB9IGVsc2UgaWYoaGFuZGxlciA9IGdsb2JhbC5vbnJlamVjdGlvbmhhbmRsZWQpe1xuICAgICAgaGFuZGxlcih7cHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiBwcm9taXNlLl92fSk7XG4gICAgfVxuICB9KTtcbn07XG52YXIgJHJlamVjdCA9IGZ1bmN0aW9uKHZhbHVlKXtcbiAgdmFyIHByb21pc2UgPSB0aGlzO1xuICBpZihwcm9taXNlLl9kKXJldHVybjtcbiAgcHJvbWlzZS5fZCA9IHRydWU7XG4gIHByb21pc2UgPSBwcm9taXNlLl93IHx8IHByb21pc2U7IC8vIHVud3JhcFxuICBwcm9taXNlLl92ID0gdmFsdWU7XG4gIHByb21pc2UuX3MgPSAyO1xuICBpZighcHJvbWlzZS5fYSlwcm9taXNlLl9hID0gcHJvbWlzZS5fYy5zbGljZSgpO1xuICBub3RpZnkocHJvbWlzZSwgdHJ1ZSk7XG59O1xudmFyICRyZXNvbHZlID0gZnVuY3Rpb24odmFsdWUpe1xuICB2YXIgcHJvbWlzZSA9IHRoaXNcbiAgICAsIHRoZW47XG4gIGlmKHByb21pc2UuX2QpcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHRyeSB7XG4gICAgaWYocHJvbWlzZSA9PT0gdmFsdWUpdGhyb3cgVHlwZUVycm9yKFwiUHJvbWlzZSBjYW4ndCBiZSByZXNvbHZlZCBpdHNlbGZcIik7XG4gICAgaWYodGhlbiA9IGlzVGhlbmFibGUodmFsdWUpKXtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbigpe1xuICAgICAgICB2YXIgd3JhcHBlciA9IHtfdzogcHJvbWlzZSwgX2Q6IGZhbHNlfTsgLy8gd3JhcFxuICAgICAgICB0cnkge1xuICAgICAgICAgIHRoZW4uY2FsbCh2YWx1ZSwgY3R4KCRyZXNvbHZlLCB3cmFwcGVyLCAxKSwgY3R4KCRyZWplY3QsIHdyYXBwZXIsIDEpKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAkcmVqZWN0LmNhbGwod3JhcHBlciwgZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9taXNlLl92ID0gdmFsdWU7XG4gICAgICBwcm9taXNlLl9zID0gMTtcbiAgICAgIG5vdGlmeShwcm9taXNlLCBmYWxzZSk7XG4gICAgfVxuICB9IGNhdGNoKGUpe1xuICAgICRyZWplY3QuY2FsbCh7X3c6IHByb21pc2UsIF9kOiBmYWxzZX0sIGUpOyAvLyB3cmFwXG4gIH1cbn07XG5cbi8vIGNvbnN0cnVjdG9yIHBvbHlmaWxsXG5pZighVVNFX05BVElWRSl7XG4gIC8vIDI1LjQuMy4xIFByb21pc2UoZXhlY3V0b3IpXG4gICRQcm9taXNlID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcil7XG4gICAgYW5JbnN0YW5jZSh0aGlzLCAkUHJvbWlzZSwgUFJPTUlTRSwgJ19oJyk7XG4gICAgYUZ1bmN0aW9uKGV4ZWN1dG9yKTtcbiAgICBJbnRlcm5hbC5jYWxsKHRoaXMpO1xuICAgIHRyeSB7XG4gICAgICBleGVjdXRvcihjdHgoJHJlc29sdmUsIHRoaXMsIDEpLCBjdHgoJHJlamVjdCwgdGhpcywgMSkpO1xuICAgIH0gY2F0Y2goZXJyKXtcbiAgICAgICRyZWplY3QuY2FsbCh0aGlzLCBlcnIpO1xuICAgIH1cbiAgfTtcbiAgSW50ZXJuYWwgPSBmdW5jdGlvbiBQcm9taXNlKGV4ZWN1dG9yKXtcbiAgICB0aGlzLl9jID0gW107ICAgICAgICAgICAgIC8vIDwtIGF3YWl0aW5nIHJlYWN0aW9uc1xuICAgIHRoaXMuX2EgPSB1bmRlZmluZWQ7ICAgICAgLy8gPC0gY2hlY2tlZCBpbiBpc1VuaGFuZGxlZCByZWFjdGlvbnNcbiAgICB0aGlzLl9zID0gMDsgICAgICAgICAgICAgIC8vIDwtIHN0YXRlXG4gICAgdGhpcy5fZCA9IGZhbHNlOyAgICAgICAgICAvLyA8LSBkb25lXG4gICAgdGhpcy5fdiA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSB2YWx1ZVxuICAgIHRoaXMuX2ggPSAwOyAgICAgICAgICAgICAgLy8gPC0gcmVqZWN0aW9uIHN0YXRlLCAwIC0gZGVmYXVsdCwgMSAtIGhhbmRsZWQsIDIgLSB1bmhhbmRsZWRcbiAgICB0aGlzLl9uID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIG5vdGlmeVxuICB9O1xuICBJbnRlcm5hbC5wcm90b3R5cGUgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKSgkUHJvbWlzZS5wcm90b3R5cGUsIHtcbiAgICAvLyAyNS40LjUuMyBQcm9taXNlLnByb3RvdHlwZS50aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKVxuICAgIHRoZW46IGZ1bmN0aW9uIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpe1xuICAgICAgdmFyIHJlYWN0aW9uICAgID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsICRQcm9taXNlKSk7XG4gICAgICByZWFjdGlvbi5vayAgICAgPSB0eXBlb2Ygb25GdWxmaWxsZWQgPT0gJ2Z1bmN0aW9uJyA/IG9uRnVsZmlsbGVkIDogdHJ1ZTtcbiAgICAgIHJlYWN0aW9uLmZhaWwgICA9IHR5cGVvZiBvblJlamVjdGVkID09ICdmdW5jdGlvbicgJiYgb25SZWplY3RlZDtcbiAgICAgIHJlYWN0aW9uLmRvbWFpbiA9IGlzTm9kZSA/IHByb2Nlc3MuZG9tYWluIDogdW5kZWZpbmVkO1xuICAgICAgdGhpcy5fYy5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmKHRoaXMuX2EpdGhpcy5fYS5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmKHRoaXMuX3Mpbm90aWZ5KHRoaXMsIGZhbHNlKTtcbiAgICAgIHJldHVybiByZWFjdGlvbi5wcm9taXNlO1xuICAgIH0sXG4gICAgLy8gMjUuNC41LjEgUHJvbWlzZS5wcm90b3R5cGUuY2F0Y2gob25SZWplY3RlZClcbiAgICAnY2F0Y2gnOiBmdW5jdGlvbihvblJlamVjdGVkKXtcbiAgICAgIHJldHVybiB0aGlzLnRoZW4odW5kZWZpbmVkLCBvblJlamVjdGVkKTtcbiAgICB9XG4gIH0pO1xuICBQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHByb21pc2UgID0gbmV3IEludGVybmFsO1xuICAgIHRoaXMucHJvbWlzZSA9IHByb21pc2U7XG4gICAgdGhpcy5yZXNvbHZlID0gY3R4KCRyZXNvbHZlLCBwcm9taXNlLCAxKTtcbiAgICB0aGlzLnJlamVjdCAgPSBjdHgoJHJlamVjdCwgcHJvbWlzZSwgMSk7XG4gIH07XG59XG5cbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIHtQcm9taXNlOiAkUHJvbWlzZX0pO1xucmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKSgkUHJvbWlzZSwgUFJPTUlTRSk7XG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKFBST01JU0UpO1xuV3JhcHBlciA9IHJlcXVpcmUoJy4vX2NvcmUnKVtQUk9NSVNFXTtcblxuLy8gc3RhdGljc1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNSBQcm9taXNlLnJlamVjdChyKVxuICByZWplY3Q6IGZ1bmN0aW9uIHJlamVjdChyKXtcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KHRoaXMpXG4gICAgICAsICQkcmVqZWN0ICAgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICAkJHJlamVjdChyKTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKExJQlJBUlkgfHwgIVVTRV9OQVRJVkUpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC42IFByb21pc2UucmVzb2x2ZSh4KVxuICByZXNvbHZlOiBmdW5jdGlvbiByZXNvbHZlKHgpe1xuICAgIC8vIGluc3RhbmNlb2YgaW5zdGVhZCBvZiBpbnRlcm5hbCBzbG90IGNoZWNrIGJlY2F1c2Ugd2Ugc2hvdWxkIGZpeCBpdCB3aXRob3V0IHJlcGxhY2VtZW50IG5hdGl2ZSBQcm9taXNlIGNvcmVcbiAgICBpZih4IGluc3RhbmNlb2YgJFByb21pc2UgJiYgc2FtZUNvbnN0cnVjdG9yKHguY29uc3RydWN0b3IsIHRoaXMpKXJldHVybiB4O1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkodGhpcylcbiAgICAgICwgJCRyZXNvbHZlICA9IGNhcGFiaWxpdHkucmVzb2x2ZTtcbiAgICAkJHJlc29sdmUoeCk7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoVVNFX05BVElWRSAmJiByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uKGl0ZXIpe1xuICAkUHJvbWlzZS5hbGwoaXRlcilbJ2NhdGNoJ10oZW1wdHkpO1xufSkpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC4xIFByb21pc2UuYWxsKGl0ZXJhYmxlKVxuICBhbGw6IGZ1bmN0aW9uIGFsbChpdGVyYWJsZSl7XG4gICAgdmFyIEMgICAgICAgICAgPSB0aGlzXG4gICAgICAsIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShDKVxuICAgICAgLCByZXNvbHZlICAgID0gY2FwYWJpbGl0eS5yZXNvbHZlXG4gICAgICAsIHJlamVjdCAgICAgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgYWJydXB0ID0gcGVyZm9ybShmdW5jdGlvbigpe1xuICAgICAgdmFyIHZhbHVlcyAgICA9IFtdXG4gICAgICAgICwgaW5kZXggICAgID0gMFxuICAgICAgICAsIHJlbWFpbmluZyA9IDE7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uKHByb21pc2Upe1xuICAgICAgICB2YXIgJGluZGV4ICAgICAgICA9IGluZGV4KytcbiAgICAgICAgICAsIGFscmVhZHlDYWxsZWQgPSBmYWxzZTtcbiAgICAgICAgdmFsdWVzLnB1c2godW5kZWZpbmVkKTtcbiAgICAgICAgcmVtYWluaW5nKys7XG4gICAgICAgIEMucmVzb2x2ZShwcm9taXNlKS50aGVuKGZ1bmN0aW9uKHZhbHVlKXtcbiAgICAgICAgICBpZihhbHJlYWR5Q2FsbGVkKXJldHVybjtcbiAgICAgICAgICBhbHJlYWR5Q2FsbGVkICA9IHRydWU7XG4gICAgICAgICAgdmFsdWVzWyRpbmRleF0gPSB2YWx1ZTtcbiAgICAgICAgICAtLXJlbWFpbmluZyB8fCByZXNvbHZlKHZhbHVlcyk7XG4gICAgICAgIH0sIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICB9KTtcbiAgICBpZihhYnJ1cHQpcmVqZWN0KGFicnVwdC5lcnJvcik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfSxcbiAgLy8gMjUuNC40LjQgUHJvbWlzZS5yYWNlKGl0ZXJhYmxlKVxuICByYWNlOiBmdW5jdGlvbiByYWNlKGl0ZXJhYmxlKXtcbiAgICB2YXIgQyAgICAgICAgICA9IHRoaXNcbiAgICAgICwgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgICAsIHJlamVjdCAgICAgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgYWJydXB0ID0gcGVyZm9ybShmdW5jdGlvbigpe1xuICAgICAgZm9yT2YoaXRlcmFibGUsIGZhbHNlLCBmdW5jdGlvbihwcm9taXNlKXtcbiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oY2FwYWJpbGl0eS5yZXNvbHZlLCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgaWYoYWJydXB0KXJlamVjdChhYnJ1cHQuZXJyb3IpO1xuICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7XG4gIH1cbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYucHJvbWlzZS5qc1xuLy8gbW9kdWxlIGlkID0gMTA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDQgNSIsIid1c2Ugc3RyaWN0Jztcbi8vIEVDTUFTY3JpcHQgNiBzeW1ib2xzIHNoaW1cbnZhciBnbG9iYWwgICAgICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpXG4gICwgaGFzICAgICAgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKVxuICAsIERFU0NSSVBUT1JTICAgID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKVxuICAsICRleHBvcnQgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCByZWRlZmluZSAgICAgICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJylcbiAgLCBNRVRBICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGEnKS5LRVlcbiAgLCAkZmFpbHMgICAgICAgICA9IHJlcXVpcmUoJy4vX2ZhaWxzJylcbiAgLCBzaGFyZWQgICAgICAgICA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpXG4gICwgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpXG4gICwgdWlkICAgICAgICAgICAgPSByZXF1aXJlKCcuL191aWQnKVxuICAsIHdrcyAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fd2tzJylcbiAgLCB3a3NFeHQgICAgICAgICA9IHJlcXVpcmUoJy4vX3drcy1leHQnKVxuICAsIHdrc0RlZmluZSAgICAgID0gcmVxdWlyZSgnLi9fd2tzLWRlZmluZScpXG4gICwga2V5T2YgICAgICAgICAgPSByZXF1aXJlKCcuL19rZXlvZicpXG4gICwgZW51bUtleXMgICAgICAgPSByZXF1aXJlKCcuL19lbnVtLWtleXMnKVxuICAsIGlzQXJyYXkgICAgICAgID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKVxuICAsIGFuT2JqZWN0ICAgICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCB0b0lPYmplY3QgICAgICA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIHRvUHJpbWl0aXZlICAgID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJylcbiAgLCBjcmVhdGVEZXNjICAgICA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKVxuICAsIF9jcmVhdGUgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpXG4gICwgZ09QTkV4dCAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbi1leHQnKVxuICAsICRHT1BEICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKVxuICAsICREUCAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJylcbiAgLCAka2V5cyAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJylcbiAgLCBnT1BEICAgICAgICAgICA9ICRHT1BELmZcbiAgLCBkUCAgICAgICAgICAgICA9ICREUC5mXG4gICwgZ09QTiAgICAgICAgICAgPSBnT1BORXh0LmZcbiAgLCAkU3ltYm9sICAgICAgICA9IGdsb2JhbC5TeW1ib2xcbiAgLCAkSlNPTiAgICAgICAgICA9IGdsb2JhbC5KU09OXG4gICwgX3N0cmluZ2lmeSAgICAgPSAkSlNPTiAmJiAkSlNPTi5zdHJpbmdpZnlcbiAgLCBQUk9UT1RZUEUgICAgICA9ICdwcm90b3R5cGUnXG4gICwgSElEREVOICAgICAgICAgPSB3a3MoJ19oaWRkZW4nKVxuICAsIFRPX1BSSU1JVElWRSAgID0gd2tzKCd0b1ByaW1pdGl2ZScpXG4gICwgaXNFbnVtICAgICAgICAgPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZVxuICAsIFN5bWJvbFJlZ2lzdHJ5ID0gc2hhcmVkKCdzeW1ib2wtcmVnaXN0cnknKVxuICAsIEFsbFN5bWJvbHMgICAgID0gc2hhcmVkKCdzeW1ib2xzJylcbiAgLCBPUFN5bWJvbHMgICAgICA9IHNoYXJlZCgnb3Atc3ltYm9scycpXG4gICwgT2JqZWN0UHJvdG8gICAgPSBPYmplY3RbUFJPVE9UWVBFXVxuICAsIFVTRV9OQVRJVkUgICAgID0gdHlwZW9mICRTeW1ib2wgPT0gJ2Z1bmN0aW9uJ1xuICAsIFFPYmplY3QgICAgICAgID0gZ2xvYmFsLlFPYmplY3Q7XG4vLyBEb24ndCB1c2Ugc2V0dGVycyBpbiBRdCBTY3JpcHQsIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8xNzNcbnZhciBzZXR0ZXIgPSAhUU9iamVjdCB8fCAhUU9iamVjdFtQUk9UT1RZUEVdIHx8ICFRT2JqZWN0W1BST1RPVFlQRV0uZmluZENoaWxkO1xuXG4vLyBmYWxsYmFjayBmb3Igb2xkIEFuZHJvaWQsIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD02ODdcbnZhciBzZXRTeW1ib2xEZXNjID0gREVTQ1JJUFRPUlMgJiYgJGZhaWxzKGZ1bmN0aW9uKCl7XG4gIHJldHVybiBfY3JlYXRlKGRQKHt9LCAnYScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiBkUCh0aGlzLCAnYScsIHt2YWx1ZTogN30pLmE7IH1cbiAgfSkpLmEgIT0gNztcbn0pID8gZnVuY3Rpb24oaXQsIGtleSwgRCl7XG4gIHZhciBwcm90b0Rlc2MgPSBnT1BEKE9iamVjdFByb3RvLCBrZXkpO1xuICBpZihwcm90b0Rlc2MpZGVsZXRlIE9iamVjdFByb3RvW2tleV07XG4gIGRQKGl0LCBrZXksIEQpO1xuICBpZihwcm90b0Rlc2MgJiYgaXQgIT09IE9iamVjdFByb3RvKWRQKE9iamVjdFByb3RvLCBrZXksIHByb3RvRGVzYyk7XG59IDogZFA7XG5cbnZhciB3cmFwID0gZnVuY3Rpb24odGFnKXtcbiAgdmFyIHN5bSA9IEFsbFN5bWJvbHNbdGFnXSA9IF9jcmVhdGUoJFN5bWJvbFtQUk9UT1RZUEVdKTtcbiAgc3ltLl9rID0gdGFnO1xuICByZXR1cm4gc3ltO1xufTtcblxudmFyIGlzU3ltYm9sID0gVVNFX05BVElWRSAmJiB0eXBlb2YgJFN5bWJvbC5pdGVyYXRvciA9PSAnc3ltYm9sJyA/IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJztcbn0gOiBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpdCBpbnN0YW5jZW9mICRTeW1ib2w7XG59O1xuXG52YXIgJGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgRCl7XG4gIGlmKGl0ID09PSBPYmplY3RQcm90bykkZGVmaW5lUHJvcGVydHkoT1BTeW1ib2xzLCBrZXksIEQpO1xuICBhbk9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEQpO1xuICBpZihoYXMoQWxsU3ltYm9scywga2V5KSl7XG4gICAgaWYoIUQuZW51bWVyYWJsZSl7XG4gICAgICBpZighaGFzKGl0LCBISURERU4pKWRQKGl0LCBISURERU4sIGNyZWF0ZURlc2MoMSwge30pKTtcbiAgICAgIGl0W0hJRERFTl1ba2V5XSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmKGhhcyhpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0paXRbSElEREVOXVtrZXldID0gZmFsc2U7XG4gICAgICBEID0gX2NyZWF0ZShELCB7ZW51bWVyYWJsZTogY3JlYXRlRGVzYygwLCBmYWxzZSl9KTtcbiAgICB9IHJldHVybiBzZXRTeW1ib2xEZXNjKGl0LCBrZXksIEQpO1xuICB9IHJldHVybiBkUChpdCwga2V5LCBEKTtcbn07XG52YXIgJGRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKGl0LCBQKXtcbiAgYW5PYmplY3QoaXQpO1xuICB2YXIga2V5cyA9IGVudW1LZXlzKFAgPSB0b0lPYmplY3QoUCkpXG4gICAgLCBpICAgID0gMFxuICAgICwgbCA9IGtleXMubGVuZ3RoXG4gICAgLCBrZXk7XG4gIHdoaWxlKGwgPiBpKSRkZWZpbmVQcm9wZXJ0eShpdCwga2V5ID0ga2V5c1tpKytdLCBQW2tleV0pO1xuICByZXR1cm4gaXQ7XG59O1xudmFyICRjcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaXQsIFApe1xuICByZXR1cm4gUCA9PT0gdW5kZWZpbmVkID8gX2NyZWF0ZShpdCkgOiAkZGVmaW5lUHJvcGVydGllcyhfY3JlYXRlKGl0KSwgUCk7XG59O1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IGZ1bmN0aW9uIHByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSl7XG4gIHZhciBFID0gaXNFbnVtLmNhbGwodGhpcywga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSk7XG4gIGlmKHRoaXMgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKXJldHVybiBmYWxzZTtcbiAgcmV0dXJuIEUgfHwgIWhhcyh0aGlzLCBrZXkpIHx8ICFoYXMoQWxsU3ltYm9scywga2V5KSB8fCBoYXModGhpcywgSElEREVOKSAmJiB0aGlzW0hJRERFTl1ba2V5XSA/IEUgOiB0cnVlO1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpe1xuICBpdCAgPSB0b0lPYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBpZihpdCA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpcmV0dXJuO1xuICB2YXIgRCA9IGdPUEQoaXQsIGtleSk7XG4gIGlmKEQgJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIShoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSlELmVudW1lcmFibGUgPSB0cnVlO1xuICByZXR1cm4gRDtcbn07XG52YXIgJGdldE93blByb3BlcnR5TmFtZXMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KXtcbiAgdmFyIG5hbWVzICA9IGdPUE4odG9JT2JqZWN0KGl0KSlcbiAgICAsIHJlc3VsdCA9IFtdXG4gICAgLCBpICAgICAgPSAwXG4gICAgLCBrZXk7XG4gIHdoaWxlKG5hbWVzLmxlbmd0aCA+IGkpe1xuICAgIGlmKCFoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYga2V5ICE9IEhJRERFTiAmJiBrZXkgIT0gTUVUQSlyZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpe1xuICB2YXIgSVNfT1AgID0gaXQgPT09IE9iamVjdFByb3RvXG4gICAgLCBuYW1lcyAgPSBnT1BOKElTX09QID8gT1BTeW1ib2xzIDogdG9JT2JqZWN0KGl0KSlcbiAgICAsIHJlc3VsdCA9IFtdXG4gICAgLCBpICAgICAgPSAwXG4gICAgLCBrZXk7XG4gIHdoaWxlKG5hbWVzLmxlbmd0aCA+IGkpe1xuICAgIGlmKGhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiAoSVNfT1AgPyBoYXMoT2JqZWN0UHJvdG8sIGtleSkgOiB0cnVlKSlyZXN1bHQucHVzaChBbGxTeW1ib2xzW2tleV0pO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuXG4vLyAxOS40LjEuMSBTeW1ib2woW2Rlc2NyaXB0aW9uXSlcbmlmKCFVU0VfTkFUSVZFKXtcbiAgJFN5bWJvbCA9IGZ1bmN0aW9uIFN5bWJvbCgpe1xuICAgIGlmKHRoaXMgaW5zdGFuY2VvZiAkU3ltYm9sKXRocm93IFR5cGVFcnJvcignU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIScpO1xuICAgIHZhciB0YWcgPSB1aWQoYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpO1xuICAgIHZhciAkc2V0ID0gZnVuY3Rpb24odmFsdWUpe1xuICAgICAgaWYodGhpcyA9PT0gT2JqZWN0UHJvdG8pJHNldC5jYWxsKE9QU3ltYm9scywgdmFsdWUpO1xuICAgICAgaWYoaGFzKHRoaXMsIEhJRERFTikgJiYgaGFzKHRoaXNbSElEREVOXSwgdGFnKSl0aGlzW0hJRERFTl1bdGFnXSA9IGZhbHNlO1xuICAgICAgc2V0U3ltYm9sRGVzYyh0aGlzLCB0YWcsIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbiAgICB9O1xuICAgIGlmKERFU0NSSVBUT1JTICYmIHNldHRlcilzZXRTeW1ib2xEZXNjKE9iamVjdFByb3RvLCB0YWcsIHtjb25maWd1cmFibGU6IHRydWUsIHNldDogJHNldH0pO1xuICAgIHJldHVybiB3cmFwKHRhZyk7XG4gIH07XG4gIHJlZGVmaW5lKCRTeW1ib2xbUFJPVE9UWVBFXSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKXtcbiAgICByZXR1cm4gdGhpcy5faztcbiAgfSk7XG5cbiAgJEdPUEQuZiA9ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICREUC5mICAgPSAkZGVmaW5lUHJvcGVydHk7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZiA9IGdPUE5FeHQuZiA9ICRnZXRPd25Qcm9wZXJ0eU5hbWVzO1xuICByZXF1aXJlKCcuL19vYmplY3QtcGllJykuZiAgPSAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJykuZiA9ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbiAgaWYoREVTQ1JJUFRPUlMgJiYgIXJlcXVpcmUoJy4vX2xpYnJhcnknKSl7XG4gICAgcmVkZWZpbmUoT2JqZWN0UHJvdG8sICdwcm9wZXJ0eUlzRW51bWVyYWJsZScsICRwcm9wZXJ0eUlzRW51bWVyYWJsZSwgdHJ1ZSk7XG4gIH1cblxuICB3a3NFeHQuZiA9IGZ1bmN0aW9uKG5hbWUpe1xuICAgIHJldHVybiB3cmFwKHdrcyhuYW1lKSk7XG4gIH1cbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwge1N5bWJvbDogJFN5bWJvbH0pO1xuXG5mb3IodmFyIHN5bWJvbHMgPSAoXG4gIC8vIDE5LjQuMi4yLCAxOS40LjIuMywgMTkuNC4yLjQsIDE5LjQuMi42LCAxOS40LjIuOCwgMTkuNC4yLjksIDE5LjQuMi4xMCwgMTkuNC4yLjExLCAxOS40LjIuMTIsIDE5LjQuMi4xMywgMTkuNC4yLjE0XG4gICdoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlcydcbikuc3BsaXQoJywnKSwgaSA9IDA7IHN5bWJvbHMubGVuZ3RoID4gaTsgKXdrcyhzeW1ib2xzW2krK10pO1xuXG5mb3IodmFyIHN5bWJvbHMgPSAka2V5cyh3a3Muc3RvcmUpLCBpID0gMDsgc3ltYm9scy5sZW5ndGggPiBpOyApd2tzRGVmaW5lKHN5bWJvbHNbaSsrXSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsICdTeW1ib2wnLCB7XG4gIC8vIDE5LjQuMi4xIFN5bWJvbC5mb3Ioa2V5KVxuICAnZm9yJzogZnVuY3Rpb24oa2V5KXtcbiAgICByZXR1cm4gaGFzKFN5bWJvbFJlZ2lzdHJ5LCBrZXkgKz0gJycpXG4gICAgICA/IFN5bWJvbFJlZ2lzdHJ5W2tleV1cbiAgICAgIDogU3ltYm9sUmVnaXN0cnlba2V5XSA9ICRTeW1ib2woa2V5KTtcbiAgfSxcbiAgLy8gMTkuNC4yLjUgU3ltYm9sLmtleUZvcihzeW0pXG4gIGtleUZvcjogZnVuY3Rpb24ga2V5Rm9yKGtleSl7XG4gICAgaWYoaXNTeW1ib2woa2V5KSlyZXR1cm4ga2V5T2YoU3ltYm9sUmVnaXN0cnksIGtleSk7XG4gICAgdGhyb3cgVHlwZUVycm9yKGtleSArICcgaXMgbm90IGEgc3ltYm9sIScpO1xuICB9LFxuICB1c2VTZXR0ZXI6IGZ1bmN0aW9uKCl7IHNldHRlciA9IHRydWU7IH0sXG4gIHVzZVNpbXBsZTogZnVuY3Rpb24oKXsgc2V0dGVyID0gZmFsc2U7IH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnT2JqZWN0Jywge1xuICAvLyAxOS4xLjIuMiBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4gIGNyZWF0ZTogJGNyZWF0ZSxcbiAgLy8gMTkuMS4yLjQgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4gIGRlZmluZVByb3BlcnR5OiAkZGVmaW5lUHJvcGVydHksXG4gIC8vIDE5LjEuMi4zIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4gIGRlZmluZVByb3BlcnRpZXM6ICRkZWZpbmVQcm9wZXJ0aWVzLFxuICAvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgLy8gMTkuMS4yLjcgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbiAgZ2V0T3duUHJvcGVydHlOYW1lczogJGdldE93blByb3BlcnR5TmFtZXMsXG4gIC8vIDE5LjEuMi44IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoTylcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiAkZ2V0T3duUHJvcGVydHlTeW1ib2xzXG59KTtcblxuLy8gMjQuMy4yIEpTT04uc3RyaW5naWZ5KHZhbHVlIFssIHJlcGxhY2VyIFssIHNwYWNlXV0pXG4kSlNPTiAmJiAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghVVNFX05BVElWRSB8fCAkZmFpbHMoZnVuY3Rpb24oKXtcbiAgdmFyIFMgPSAkU3ltYm9sKCk7XG4gIC8vIE1TIEVkZ2UgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIHt9XG4gIC8vIFdlYktpdCBjb252ZXJ0cyBzeW1ib2wgdmFsdWVzIHRvIEpTT04gYXMgbnVsbFxuICAvLyBWOCB0aHJvd3Mgb24gYm94ZWQgc3ltYm9sc1xuICByZXR1cm4gX3N0cmluZ2lmeShbU10pICE9ICdbbnVsbF0nIHx8IF9zdHJpbmdpZnkoe2E6IFN9KSAhPSAne30nIHx8IF9zdHJpbmdpZnkoT2JqZWN0KFMpKSAhPSAne30nO1xufSkpLCAnSlNPTicsIHtcbiAgc3RyaW5naWZ5OiBmdW5jdGlvbiBzdHJpbmdpZnkoaXQpe1xuICAgIGlmKGl0ID09PSB1bmRlZmluZWQgfHwgaXNTeW1ib2woaXQpKXJldHVybjsgLy8gSUU4IHJldHVybnMgc3RyaW5nIG9uIHVuZGVmaW5lZFxuICAgIHZhciBhcmdzID0gW2l0XVxuICAgICAgLCBpICAgID0gMVxuICAgICAgLCByZXBsYWNlciwgJHJlcGxhY2VyO1xuICAgIHdoaWxlKGFyZ3VtZW50cy5sZW5ndGggPiBpKWFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgcmVwbGFjZXIgPSBhcmdzWzFdO1xuICAgIGlmKHR5cGVvZiByZXBsYWNlciA9PSAnZnVuY3Rpb24nKSRyZXBsYWNlciA9IHJlcGxhY2VyO1xuICAgIGlmKCRyZXBsYWNlciB8fCAhaXNBcnJheShyZXBsYWNlcikpcmVwbGFjZXIgPSBmdW5jdGlvbihrZXksIHZhbHVlKXtcbiAgICAgIGlmKCRyZXBsYWNlcil2YWx1ZSA9ICRyZXBsYWNlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xuICAgICAgaWYoIWlzU3ltYm9sKHZhbHVlKSlyZXR1cm4gdmFsdWU7XG4gICAgfTtcbiAgICBhcmdzWzFdID0gcmVwbGFjZXI7XG4gICAgcmV0dXJuIF9zdHJpbmdpZnkuYXBwbHkoJEpTT04sIGFyZ3MpO1xuICB9XG59KTtcblxuLy8gMTkuNC4zLjQgU3ltYm9sLnByb3RvdHlwZVtAQHRvUHJpbWl0aXZlXShoaW50KVxuJFN5bWJvbFtQUk9UT1RZUEVdW1RPX1BSSU1JVElWRV0gfHwgcmVxdWlyZSgnLi9faGlkZScpKCRTeW1ib2xbUFJPVE9UWVBFXSwgVE9fUFJJTUlUSVZFLCAkU3ltYm9sW1BST1RPVFlQRV0udmFsdWVPZik7XG4vLyAxOS40LjMuNSBTeW1ib2wucHJvdG90eXBlW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZygkU3ltYm9sLCAnU3ltYm9sJyk7XG4vLyAyMC4yLjEuOSBNYXRoW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZyhNYXRoLCAnTWF0aCcsIHRydWUpO1xuLy8gMjQuMy4zIEpTT05bQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKGdsb2JhbC5KU09OLCAnSlNPTicsIHRydWUpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuc3ltYm9sLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwicmVxdWlyZSgnLi9fd2tzLWRlZmluZScpKCdhc3luY0l0ZXJhdG9yJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDEwN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMiLCJyZXF1aXJlKCcuL193a3MtZGVmaW5lJykoJ29ic2VydmFibGUnKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9hc3NpZ25cIiksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9hc3NpZ24uanNcbi8vIG1vZHVsZSBpZCA9IDExOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvLyAgICAgcHJveHktb2JzZXJ2ZSB2MC4wLjE4XHJcbi8vICAgICBDb3B5cmlnaHQgKGMpIDIwMTUsIDIwMTYgU2ltb24gWS4gQmxhY2t3ZWxsLCBBbnlXaGljaFdheVxyXG4vLyAgICAgTUlUIExpY2Vuc2UgLSBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcbihmdW5jdGlvbigpIHtcclxuXHRcInVzZSBzdHJpY3RcIjtcclxuXHQvLyBDcmVhdGVzIGFuZCByZXR1cm5zIGEgUHJveHkgd3JhcHBpbmcgYSB0YXJnZXQgc28gdGhhdCBhbGwgY2hhbmdlcyBjYW4gYmUgdHJhcHBlZCBhbmQgZm9yd2FyZGVkIHRvXHJcblx0Ly8gYSBjYWxsYmFjay4gVGhlIGNhbGxiYWNrIHRha2VzIGFuIGFycmF5IG9mIGNoYW5nZXMganVzdCBsaWtlIHRoZSB0cmFkaXRpb25hbCBvcmlnaW5hbCBDaHJvbWUgT2JqZWN0Lm9ic2VydmVcclxuXHQvLyB7b2JqZWN0OjxvYmplY3QgY2hhbmdlZD4sbmFtZTo8ZmllbGQgY2hhbmdlZD4sdHlwZTphZGR8dXBkYXRlfGRlbGV0ZXxyZWNvbmZpZ3VyZXxwcmV2ZW50RXh0ZW5zaW9uc3xzZXRQcm90b3R5cGUsb2xkVmFsdWU6PG9sZCB2YWx1ZSBpZiB1cGRhdGUgfCBkZWxldGU+fVxyXG5cdC8vIFRoZSBhY2NlcHRsaXN0IGNhbiBiZSBhZGR8dXBkYXRlfGRlbGV0ZXxyZWNvbmZpZ3VyZXxwcmV2ZW50RXh0ZW5zaW9uc3xzZXRQcm90b3R5cGUuXHJcblx0Ly8gdiAwLjAuMTAgdG8gc3VwcG9ydCBwYXVzaW5nIGFuZCByZXN0YXJ0aW5nIG9ic2VydmF0aW9uIHR3byBhZGRpdGlvbmFsIGNvbnN0cnVjdG9yIGFyZ3VtZW50cyBhcmUgYXZhaWxhYmxlIHRvIE9iamVjdC5vYnNlcnZlOlxyXG5cdC8vIHBhdXNhYmxlIC0gY3JlYXRlIHRoZSBPYnNlcnZlciBzbyBpdCBjYW4gYmUgcGF1c2VkXHJcblx0Ly8gcGF1c2UgLSBjcmVhdGUgb2JzZXJ2ZXIgaW4gcGF1c2VkIHN0YXRlXHJcblx0Ly8gaWYgcGF1c2FibGUgaXMgdHJ1ZSB0aGVuIGFuIGFkZGl0aW9uYWwgbWV0aG9kIGRlbGl2ZXIoaWdub3JlUHJldmlvdXMpIGlzIGF2YWlsYWJsZSB0byBzdGFydCBkZWxpdmVyeVxyXG5cdC8vIHRvIHBhdXNlIGRlbGl2ZXJ5IHNldCBhIHByb3BlcnR5IGNhbGxlZCBwYXVzZSBvbiB0aGUgZnVuY3Rpb24gZGVsaXZlciB0byB0cnVlXHJcblx0Ly8gcGF1c2FibGUgaXMgb3B0aW9uYWwgdG8gcmVkdWNlIHRoZSBjaGFuY2Ugb2Ygc2hhZG93aW5nIGEgcHJvcGVydHkgb3IgbWV0aG9kIG9uIGFueSBleGlzdGluZyBjb2RlIGNhbGxlZCBkZWxpdmVyXHJcblx0aWYoIU9iamVjdC5vYnNlcnZlICYmIHR5cGVvZihQcm94eSk9PT1cImZ1bmN0aW9uXCIpIHtcclxuXHRcdGZ1bmN0aW9uIE9ic2VydmVyKHRhcmdldCxjYWxsYmFjayxhY2NlcHRsaXN0LHBhdXNhYmxlLHBhdXNlLGRlbGF5KSB7XHJcblx0ICAgIFx0dmFyIG1lID0gdGhpcywgcHJveHk7XHJcblx0ICAgIFx0ZnVuY3Rpb24gZGVsaXZlcihpZ25vcmVQcmV2aW91cyxkZWxheSkge1xyXG5cdCAgICBcdFx0ZGVsaXZlci5kZWxheSA9IGRlbGF5O1xyXG5cdCAgICBcdFx0aWYoIWRlbGl2ZXIucGF1c2UpIHtcclxuXHQgICAgICAgIFx0XHRpZihtZS5jaGFuZ2VzZXQubGVuZ3RoPjApIHtcclxuXHQgICAgICAgIFx0XHRcdGlmKCFpZ25vcmVQcmV2aW91cykge1xyXG5cdFx0ICAgIFx0ICAgIFx0XHR2YXIgY2hhbmdlcyA9IG1lLmNoYW5nZXNldC5maWx0ZXIoZnVuY3Rpb24oY2hhbmdlKSB7IHJldHVybiAhYWNjZXB0bGlzdCB8fCBhY2NlcHRsaXN0LmluZGV4T2YoY2hhbmdlLnR5cGUpPj0wOyB9KTtcclxuXHRcdCAgICAgICAgXHRcdFx0aWYoY2hhbmdlcy5sZW5ndGg+MCkge1xyXG5cdFx0ICAgICAgICBcdFx0XHRcdGNhbGxiYWNrKGNoYW5nZXMpO1xyXG5cdFx0ICAgICAgICBcdFx0XHR9XHJcblx0ICAgICAgICBcdFx0XHR9XHJcblx0ICAgICAgICBcdFx0XHRtZS5jaGFuZ2VzZXQgPSBbXTtcclxuXHQgICAgICAgIFx0XHR9XHJcblx0ICAgIFx0XHR9XHJcblx0ICAgIFx0fVxyXG5cdCAgICBcdGRlbGl2ZXIucGF1c2UgPSBwYXVzZTtcclxuXHQgICAgXHRkZWxpdmVyLmRlbGF5ID0gZGVsYXk7XHJcblx0XHQgICAgbWUuZ2V0ID0gZnVuY3Rpb24odGFyZ2V0LCBwcm9wZXJ0eSkge1xyXG5cdFx0ICAgIFx0aWYocHJvcGVydHk9PT1cIl9fb2JzZXJ2ZXJfX1wiKSB7XHJcblx0XHQgICAgXHRcdHJldHVybiBtZTtcclxuXHRcdCAgICBcdH1cclxuXHRcdCAgICBcdGlmKHByb3BlcnR5PT09XCJ1bm9ic2VydmVcIikge1xyXG5cdFx0ICAgIFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XHJcblx0XHQgICAgXHRcdFx0T2JqZWN0LnVub2JzZXJ2ZSh0YXJnZXQpO1xyXG5cdFx0ICAgIFx0XHRcdHJldHVybiB0YXJnZXQ7XHJcblx0XHQgICAgXHRcdH07XHJcblx0XHQgICAgXHR9XHJcblx0XHQgICAgXHRpZihwcm9wZXJ0eT09PVwiZGVsaXZlclwiKSB7XHJcblx0XHQgICAgXHRcdHJldHVybiBkZWxpdmVyO1xyXG5cdFx0ICAgIFx0fVxyXG5cdFx0ICAgIFx0cmV0dXJuIHRhcmdldFtwcm9wZXJ0eV07XHJcblx0XHQgICAgfVxyXG5cdCAgICBcdG1lLnRhcmdldCA9IHRhcmdldDtcclxuXHQgICAgXHRtZS5jaGFuZ2VzZXQgPSBbXTtcclxuXHQgICAgXHRpZighbWUudGFyZ2V0Ll9fb2JzZXJ2ZXJDYWxsYmFja3NfXykge1xyXG5cdCAgICBcdFx0Ly8gX19vYnNlcnZlckNhbGxiYWNrc19fIGlzIHVzZWQgYXMgYW4gaW5kZXggdG8gZ2V0IGF0IHRoZSBwcm94eSB3aGljaCBpcyB0aGUgb2JzZXJ2ZXIsIHNvIHdlIGNhbiB1bm9ic2VydmVcclxuXHQgICAgXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsXCJfX29ic2VydmVyQ2FsbGJhY2tzX19cIix7ZW51bWVyYWJsZTpmYWxzZSxjb25maWd1cmFibGU6dHJ1ZSx3cml0YWJsZTpmYWxzZSx2YWx1ZTpbXX0pO1xyXG5cdCAgICBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxcIl9fb2JzZXJ2ZXJzX19cIix7ZW51bWVyYWJsZTpmYWxzZSxjb25maWd1cmFibGU6dHJ1ZSx3cml0YWJsZTpmYWxzZSx2YWx1ZTpbXX0pO1xyXG5cdCAgICBcdH1cclxuXHQgICAgXHRtZS50YXJnZXQuX19vYnNlcnZlckNhbGxiYWNrc19fLnB1c2goY2FsbGJhY2spO1xyXG5cdCAgICBcdG1lLnRhcmdldC5fX29ic2VydmVyc19fLnB1c2godGhpcyk7XHJcblx0ICAgIFx0cHJveHkgPSBuZXcgUHJveHkodGFyZ2V0LG1lKTtcclxuXHQgICAgXHRkZWxpdmVyKGZhbHNlLGRlbGF5KTtcclxuXHQgICAgXHRyZXR1cm4gcHJveHk7XHJcblx0ICAgIH1cclxuXHRcdE9ic2VydmVyLnByb3RvdHlwZS5kZWxpdmVyID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmdldChudWxsLFwiZGVsaXZlclwiKTtcclxuXHRcdH1cclxuXHQgICAgT2JzZXJ2ZXIucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKHRhcmdldCwgcHJvcGVydHksIHZhbHVlKSB7IC8vICwgcmVjZWl2ZXJcclxuXHQgICAgXHR2YXIgb2xkdmFsdWUgPSB0YXJnZXRbcHJvcGVydHldO1xyXG5cdCAgICBcdHZhciB0eXBlID0gKG9sZHZhbHVlPT09dW5kZWZpbmVkID8gXCJhZGRcIiA6IFwidXBkYXRlXCIpO1xyXG5cdCAgICBcdHRhcmdldFtwcm9wZXJ0eV0gPSB2YWx1ZTtcclxuXHQgICAgXHRpZih0YXJnZXQuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wICYmICghdGhpcy5hY2NlcHRsaXN0IHx8IHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKHR5cGUpPj0wKSkge1xyXG5cdCAgICAgICAgXHR2YXIgY2hhbmdlID0ge29iamVjdDp0YXJnZXQsbmFtZTpwcm9wZXJ0eSx0eXBlOnR5cGV9LFxyXG5cdCAgICAgICAgXHRcdHN0YXJ0ID0gdGhpcy5jaGFuZ2VzZXQubGVuZ3RoID09PSAwLFxyXG5cdCAgICAgICAgXHRcdGRlbGl2ZXIgPSB0aGlzLmRlbGl2ZXIoKTtcclxuXHQgICAgICAgIFx0aWYodHlwZT09PVwidXBkYXRlXCIpIHtcclxuXHQgICAgICAgIFx0XHRjaGFuZ2Uub2xkVmFsdWUgPSBvbGR2YWx1ZTtcclxuXHQgICAgICAgIFx0fVxyXG5cdCAgICAgICAgXHR0aGlzLmNoYW5nZXNldC5wdXNoKGNoYW5nZSk7XHJcblx0ICAgICAgICBcdGlmKHN0YXJ0KSB7XHJcblx0ICAgICAgICBcdFx0ZGVsaXZlcihmYWxzZSwodHlwZW9mKGRlbGl2ZXIuZGVsYXkpPT09XCJudW1iZXJcIiA/IGRlbGl2ZXIuZGVsYXkgOiAxMCkpO1xyXG5cdCAgICAgICAgXHR9XHJcblx0ICAgIFx0fVxyXG5cdCAgICBcdHJldHVybiB0cnVlO1xyXG5cdCAgICB9O1xyXG5cdCAgICBPYnNlcnZlci5wcm90b3R5cGUuZGVsZXRlUHJvcGVydHkgPSBmdW5jdGlvbih0YXJnZXQsIHByb3BlcnR5KSB7XHJcblx0ICAgIFx0dmFyIG9sZHZhbHVlID0gdGFyZ2V0W3Byb3BlcnR5XTtcclxuXHQgICAgXHQvL2lmKHR5cGVvZihvbGR2YWx1ZSkhPT1cInVuZGVmaW5lZFwiKSB7XHJcblx0XHQgICAgXHRkZWxldGUgdGFyZ2V0W3Byb3BlcnR5XTtcclxuXHRcdCAgICBcdGlmKHRhcmdldC5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAgJiYgIXRoaXMuYWNjZXB0bGlzdCB8fCB0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZihcImRlbGV0ZVwiKT49MCkge1xyXG5cdFx0ICAgICAgICBcdHZhciBjaGFuZ2UgPSB7b2JqZWN0OnRhcmdldCxuYW1lOnByb3BlcnR5LHR5cGU6XCJkZWxldGVcIixvbGRWYWx1ZTpvbGR2YWx1ZX0sXHJcblx0XHQgICAgICAgIFx0XHRzdGFydCA9IHRoaXMuY2hhbmdlc2V0Lmxlbmd0aCA9PT0gMCxcclxuXHRcdCAgICAgICAgXHRcdGRlbGl2ZXIgPSB0aGlzLmRlbGl2ZXIoKTtcclxuXHRcdCAgICAgICAgXHR0aGlzLmNoYW5nZXNldC5wdXNoKGNoYW5nZSk7XHJcblx0XHQgICAgICAgIFx0aWYoc3RhcnQpIHtcclxuXHRcdCAgICAgICAgXHRcdGRlbGl2ZXIoZmFsc2UsKHR5cGVvZihkZWxpdmVyLmRlbGF5KT09PVwibnVtYmVyXCIgPyBkZWxpdmVyLmRlbGF5IDogMTApKTtcclxuXHRcdCAgICAgICAgXHR9XHJcblx0XHQgICAgXHR9XHJcblx0ICAgIFx0Ly99XHJcblx0ICAgIFx0cmV0dXJuIHRydWU7XHJcblx0ICAgIH07XHJcblx0ICAgIE9ic2VydmVyLnByb3RvdHlwZS5kZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uKHRhcmdldCwgcHJvcGVydHksIGRlc2NyaXB0b3IpIHtcclxuXHQgICAgXHRPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eSwgZGVzY3JpcHRvcik7XHJcblx0ICAgIFx0aWYodGFyZ2V0Ll9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCAmJiAhdGhpcy5hY2NlcHRsaXN0IHx8IHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKFwicmVjb25maWd1cmVcIik+PTApIHtcclxuXHQgICAgICAgIFx0dmFyIGNoYW5nZSA9IHtvYmplY3Q6dGFyZ2V0LG5hbWU6cHJvcGVydHksdHlwZTpcInJlY29uZmlndXJlXCJ9LFxyXG4gICAgICAgIFx0XHRcdHN0YXJ0ID0gdGhpcy5jaGFuZ2VzZXQubGVuZ3RoID09PSAwLFxyXG4gICAgICAgIFx0XHRcdGRlbGl2ZXIgPSB0aGlzLmRlbGl2ZXIoKTtcclxuXHQgICAgICAgIFx0dGhpcy5jaGFuZ2VzZXQucHVzaChjaGFuZ2UpO1xyXG5cdCAgICAgICAgXHRpZihzdGFydCkge1xyXG5cdCAgICAgICAgXHRcdGRlbGl2ZXIoZmFsc2UsKHR5cGVvZihkZWxpdmVyLmRlbGF5KT09PVwibnVtYmVyXCIgPyBkZWxpdmVyLmRlbGF5IDogMTApKTtcclxuXHQgICAgICAgIFx0fVxyXG5cdCAgICBcdH1cclxuXHQgICAgXHRyZXR1cm4gdHJ1ZTtcclxuXHQgICAgfTtcclxuXHQgICAgT2JzZXJ2ZXIucHJvdG90eXBlLnNldFByb3RvdHlwZU9mID0gZnVuY3Rpb24odGFyZ2V0LCBwcm90b3R5cGUpIHtcclxuXHQgICAgXHR2YXIgb2xkdmFsdWUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodGFyZ2V0KTtcclxuXHQgICAgXHRPYmplY3Quc2V0UHJvdG90eXBlT2YodGFyZ2V0LCBwcm90b3R5cGUpO1xyXG5cdCAgICBcdGlmKHRhcmdldC5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAgJiYgIXRoaXMuYWNjZXB0bGlzdCB8fCB0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZihcInNldFByb3RvdHlwZVwiKT49MCkge1xyXG5cdCAgICAgICAgXHR2YXIgY2hhbmdlID0ge29iamVjdDp0YXJnZXQsbmFtZTpcIl9fcHJvdG9fX1wiLHR5cGU6XCJzZXRQcm90b3R5cGVcIixvbGRWYWx1ZTpvbGR2YWx1ZX0sXHJcbiAgICBcdFx0XHRcdHN0YXJ0ID0gdGhpcy5jaGFuZ2VzZXQubGVuZ3RoID09PSAwLFxyXG4gICAgXHRcdFx0XHRkZWxpdmVyID0gdGhpcy5kZWxpdmVyKCk7XHJcblx0ICAgICAgICBcdHRoaXMuY2hhbmdlc2V0LnB1c2goY2hhbmdlKTtcclxuXHQgICAgICAgIFx0aWYoc3RhcnQpIHtcclxuXHQgICAgICAgIFx0XHRkZWxpdmVyKGZhbHNlLCh0eXBlb2YoZGVsaXZlci5kZWxheSk9PT1cIm51bWJlclwiID8gZGVsaXZlci5kZWxheSA6IDEwKSk7XHJcblx0ICAgICAgICBcdH1cclxuXHQgICAgXHR9XHJcblx0ICAgIFx0cmV0dXJuIHRydWU7XHJcblx0ICAgIH07XHJcblx0ICAgIE9ic2VydmVyLnByb3RvdHlwZS5wcmV2ZW50RXh0ZW5zaW9ucyA9IGZ1bmN0aW9uKHRhcmdldCkge1xyXG5cdCAgICAgICAgT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHRhcmdldCk7XHJcblx0ICAgIFx0aWYodGFyZ2V0Ll9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCAmJiAhdGhpcy5hY2NlcHRsaXN0IHx8IHRoaXMuYWNjZXB0bGlzdC5pbmRleE9mKFwicHJldmVudEV4dGVuc2lvbnNcIik+PTApIHtcclxuXHQgICAgICAgIFx0dmFyIGNoYW5nZSA9IHtvYmplY3Q6dGFyZ2V0LHR5cGU6XCJwcmV2ZW50RXh0ZW5zaW9uc1wifSxcclxuXHRcdFx0XHRcdHN0YXJ0ID0gdGhpcy5jaGFuZ2VzZXQubGVuZ3RoID09PSAwLFxyXG5cdFx0XHRcdFx0ZGVsaXZlciA9IHRoaXMuZGVsaXZlcigpO1xyXG5cdCAgICAgICAgXHR0aGlzLmNoYW5nZXNldC5wdXNoKGNoYW5nZSk7XHJcblx0ICAgICAgICBcdGlmKHN0YXJ0KSB7XHJcblx0ICAgICAgICBcdFx0ZGVsaXZlcihmYWxzZSwodHlwZW9mKGRlbGl2ZXIuZGVsYXkpPT09XCJudW1iZXJcIiA/IGRlbGl2ZXIuZGVsYXkgOiAxMCkpO1xyXG5cdCAgICAgICAgXHR9XHJcblx0ICAgIFx0fVxyXG5cdCAgICBcdHJldHVybiB0cnVlO1xyXG5cdCAgICB9O1xyXG5cdCAgICBPYmplY3Qub2JzZXJ2ZSA9IGZ1bmN0aW9uKG9iamVjdCxjYWxsYmFjayxhY2NlcHRsaXN0LHBhdXNhYmxlLHBhdXNlLGRlbGF5KSB7XHJcblx0ICAgIFx0cmV0dXJuIG5ldyBPYnNlcnZlcihvYmplY3QsY2FsbGJhY2ssYWNjZXB0bGlzdCxwYXVzYWJsZSxwYXVzZSxkZWxheSk7XHJcblx0ICAgIH07XHJcblx0ICAgIE9iamVjdC51bm9ic2VydmUgPSBmdW5jdGlvbihvYmplY3QsY2FsbGJhY2spIHtcclxuXHQgICAgXHRpZihvYmplY3QuX19vYnNlcnZlckNhbGxiYWNrc19fKSB7XHJcblx0ICAgIFx0XHRpZighY2FsbGJhY2spIHtcclxuXHQgICAgXHRcdFx0b2JqZWN0Ll9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5zcGxpY2UoMCxvYmplY3QuX19vYnNlcnZlckNhbGxiYWNrc19fLmxlbmd0aCk7XHJcblx0ICAgIFx0XHRcdG9iamVjdC5fX29ic2VydmVyc19fLnNwbGljZSgwLG9iamVjdC5fX29ic2VydmVyc19fLmxlbmd0aCk7XHJcblx0ICAgIFx0XHRcdHJldHVybjtcclxuXHQgICAgXHRcdH1cclxuXHQgICAgXHRcdG9iamVjdC5fX29ic2VydmVyQ2FsbGJhY2tzX18uZm9yRWFjaChmdW5jdGlvbihvYnNlcnZlcmNhbGxiYWNrLGkpIHtcclxuXHQgICAgXHRcdFx0aWYoY2FsbGJhY2s9PT1vYnNlcnZlcmNhbGxiYWNrKSB7XHJcblx0ICAgIFx0XHRcdFx0b2JqZWN0Ll9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5zcGxpY2UoaSwxKTtcclxuXHQgICAgXHRcdFx0XHRkZWxldGUgb2JqZWN0Ll9fb2JzZXJ2ZXJzX19baV0uY2FsbGJhY2s7XHJcblx0ICAgIFx0XHRcdFx0b2JqZWN0Ll9fb2JzZXJ2ZXJzX18uc3BsaWNlKGksMSk7XHJcblx0ICAgIFx0XHRcdH1cclxuXHQgICAgXHRcdH0pO1xyXG5cdCAgICBcdH1cclxuXHQgICAgfTtcclxuXHQgICAgQXJyYXkub2JzZXJ2ZSA9IGZ1bmN0aW9uKG9iamVjdCxjYWxsYmFjayxhY2NlcHRsaXN0LHBhdXNhYmxlLHBhdXNlLGRlbGF5KSB7XHJcblx0ICAgIFx0aWYoIShvYmplY3QgaW5zdGFuY2VvZiBBcnJheSkgJiYgIUFycmF5LmlzQXJyYXkob2JqZWN0KSkge1xyXG5cdCAgICBcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihcIkZpcnN0IGFyZ3VtZW50IHRvIEFycmF5Lm9ic2VydmVyIGlzIG5vdCBhbiBBcnJheVwiKTtcclxuXHQgICAgXHR9XHJcbiAgICAgICAgICAgIFx0YWNjZXB0bGlzdCA9IGFjY2VwdGxpc3QgfHwgW1wiYWRkXCIsIFwidXBkYXRlXCIsIFwiZGVsZXRlXCIsIFwic3BsaWNlXCJdO1xyXG5cdCAgICBcdHZhciBhcnJheXByb3h5ID0gbmV3IFByb3h5KG9iamVjdCx7Z2V0OiBmdW5jdGlvbih0YXJnZXQscHJvcGVydHkpIHtcclxuXHQgICAgXHRcdGlmKHByb3BlcnR5PT09XCJ1bm9ic2VydmVcIikge1xyXG5cdFx0ICAgIFx0XHRyZXR1cm4gZnVuY3Rpb24oY2FsbGJhY2spIHtcclxuXHRcdCAgICBcdFx0XHRpZihjYWxsYmFjaykge1xyXG5cdFx0ICAgIFx0XHRcdFx0cmV0dXJuIE9iamVjdC51bm9ic2VydmUodGFyZ2V0LGNhbGxiYWNrKTtcclxuXHRcdCAgICBcdFx0XHR9XHJcblx0XHQgICAgXHRcdFx0cmV0dXJuIHRhcmdldC51bm9ic2VydmUoKTtcclxuXHRcdCAgICBcdFx0fTtcclxuXHRcdCAgICBcdH1cclxuXHQgICAgXHRcdGlmKHByb3BlcnR5PT09XCJzcGxpY2VcIikge1xyXG5cdCAgICBcdFx0XHRyZXR1cm4gZnVuY3Rpb24oc3RhcnQsZW5kKSB7XHJcblx0ICAgIFx0XHRcdFx0aWYodHlwZW9mKHN0YXJ0KSE9PVwibnVtYmVyXCIgfHwgdHlwZW9mKGVuZCkhPT1cIm51bWJlclwiKSB7XHJcblx0ICAgIFx0XHRcdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKFwiRmlyc3QgdHdvIGFyZ3VtZW50cyB0byBBcnJheSBzcGxpY2UgYXJlIG5vdCBudW1iZXIsIG51bWJlclwiKTtcclxuXHQgICAgXHRcdFx0XHR9XHJcblx0ICAgIFx0ICAgIFx0XHR2YXIgcmVtb3ZlZCA9IHRoaXMuc2xpY2Uoc3RhcnQsc3RhcnQrZW5kKSxcclxuXHQgICAgXHQgICAgXHRcdFx0YWRkZWRDb3VudCA9IChhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50cy5sZW5ndGgtMiA6IDApLFxyXG5cdCAgICBcdCAgICBcdFx0XHRjaGFuZ2UgPSAge29iamVjdDpvYmplY3QsdHlwZTpcInNwbGljZVwiLGluZGV4OnN0YXJ0LHJlbW92ZWQ6cmVtb3ZlZCxhZGRlZENvdW50OmFkZGVkQ291bnR9O1xyXG5cdCAgICBcdCAgICBcdFx0dGFyZ2V0LnNwbGljZS5hcHBseSh0YXJnZXQsYXJndW1lbnRzKTtcclxuXHQgICAgXHQgICAgXHRcdGlmKGFjY2VwdGxpc3QuaW5kZXhPZihcInNwbGljZVwiKT49MCkge1xyXG5cdCAgICBcdCAgICBcdFx0XHR2YXIgc3RhcnQgPSBwcm94eS5fX29ic2VydmVyX18uY2hhbmdlc2V0Lmxlbmd0aCA9PT0gMCxcclxuXHQgICAgXHQgICAgICAgIFx0XHRcdGRlbGl2ZXIgPSBwcm94eS5fX29ic2VydmVyX18uZGVsaXZlcigpO1xyXG5cdCAgICBcdCAgICBcdFx0XHRwcm94eS5fX29ic2VydmVyX18uY2hhbmdlc2V0LnB1c2goY2hhbmdlKTtcclxuXHQgICAgXHQgICAgXHRcdFx0aWYoc3RhcnQpIHtcclxuXHQgICAgXHRcdCAgICAgICAgXHRcdGRlbGl2ZXIoZmFsc2UsKHR5cGVvZihkZWxpdmVyLmRlbGF5KT09PVwibnVtYmVyXCIgPyBkZWxpdmVyLmRlbGF5IDogMTApKTtcclxuXHQgICAgXHRcdCAgICAgICAgXHR9XHJcblx0ICAgIFx0ICAgIFx0XHR9XHJcblx0ICAgIFx0ICAgIFx0fVxyXG5cdCAgICBcdFx0fVxyXG5cdCAgICBcdFx0aWYocHJvcGVydHk9PT1cInB1c2hcIikge1xyXG5cdCAgICBcdFx0XHQgcmV0dXJuIGZ1bmN0aW9uKGl0ZW0pIHtcclxuXHQgICAgXHRcdCAgICBcdHJldHVybiB0aGlzLnNwbGljZSh0aGlzLmxlbmd0aCwwLGl0ZW0pO1xyXG5cdCAgICBcdFx0ICAgIH1cclxuXHQgICAgXHRcdH1cclxuXHQgICAgXHRcdGlmKHByb3BlcnR5PT09XCJwb3BcIikge1xyXG5cdCAgICBcdFx0XHQgcmV0dXJuIGZ1bmN0aW9uKCkge1xyXG5cdCAgICBcdFx0ICAgIFx0cmV0dXJuIHRoaXMuc3BsaWNlKHRoaXMubGVuZ3RoLTEsMSk7XHJcblx0ICAgIFx0XHQgICAgfVxyXG5cdCAgICBcdFx0fVxyXG5cdCAgICBcdFx0aWYocHJvcGVydHk9PT1cInVuc2hpZnRcIikge1xyXG5cdCAgICBcdFx0XHQgcmV0dXJuIGZ1bmN0aW9uKGl0ZW0pIHtcclxuICAgIFx0XHQgICAgXHRcdHJldHVybiB0aGlzLnNwbGljZSgwLDAsaXRlbSk7XHJcbiAgICBcdFx0ICAgIFx0fVxyXG5cdCAgICBcdFx0fVxyXG5cdCAgICBcdFx0aWYocHJvcGVydHk9PT1cInNoaWZ0XCIpIHtcclxuXHQgICAgXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xyXG5cdCAgICBcdCAgICBcdFx0cmV0dXJuIHRoaXMuc3BsaWNlKDAsMSk7XHJcblx0ICAgIFx0ICAgIFx0fVxyXG5cdCAgICBcdFx0fVxyXG5cdCAgICBcdFx0cmV0dXJuIHRhcmdldFtwcm9wZXJ0eV07XHJcblx0ICAgIFx0fX0pO1xyXG5cdCAgICBcdHZhciBwcm94eSA9IE9iamVjdC5vYnNlcnZlKGFycmF5cHJveHksZnVuY3Rpb24oY2hhbmdlc2V0KSB7IFxyXG5cdCAgICBcdFx0dmFyIGNoYW5nZXMgPSBjaGFuZ2VzZXQuZmlsdGVyKGZ1bmN0aW9uKGNoYW5nZSkgeyByZXR1cm4gY2hhbmdlLm5hbWUhPT1cImxlbmd0aFwiICYmIGNoYW5nZS5uYW1lIT09XCJhZGRcIiAmJiAoIWFjY2VwdGxpc3QgfHwgYWNjZXB0bGlzdC5pbmRleE9mKGNoYW5nZS50eXBlKT49MCk7IH0pO1xyXG5cdCAgICBcdFx0aWYoY2hhbmdlcy5sZW5ndGg+MCkge1xyXG5cdCAgICBcdFx0XHRjYWxsYmFjayhjaGFuZ2VzKTtcclxuXHQgICAgXHRcdH1cclxuXHQgICAgXHR9LGFjY2VwdGxpc3QscGF1c2FibGUscGF1c2UsZGVsYXkpO1xyXG5cdCAgICBcdHJldHVybiBwcm94eTtcclxuXHQgICAgfTtcclxuXHQgICAgQXJyYXkudW5vYnNlcnZlID0gZnVuY3Rpb24ob2JqZWN0LGNhbGxiYWNrKSB7XHJcblx0XHQgIHJldHVybiBvYmplY3QudW5vYnNlcnZlKGNhbGxiYWNrKTtcclxuXHQgICAgfVxyXG5cdH1cclxuXHRPYmplY3QuZGVlcE9ic2VydmUgPSBmdW5jdGlvbihvYmplY3QsY2FsbGJhY2sscGFydHMpIHtcclxuXHJcblx0XHRwYXJ0cyA9IChwYXJ0cyA/IHBhcnRzIDogW10pO1xyXG5cclxuXHRcdHZhciB0b1R5cGVOYW1lID0gZnVuY3Rpb24ob2JqKSB7XHJcblx0XHRcdHJldHVybiAoe30pLnRvU3RyaW5nLmNhbGwob2JqKS5tYXRjaCgvXFxzKFthLXpBLVpdKykvKVsxXS50b0xvd2VyQ2FzZSgpXHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gcmVvYnNlcnZlKHZhbHVlLCBwYXJ0cykge1xyXG5cdFx0XHR2YXIga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcclxuXHRcdFx0a2V5cy5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xyXG5cdFx0XHRcdGlmKCh0b1R5cGVOYW1lKHZhbHVlW2tleV0pID09PSAnb2JqZWN0JyB8fCB0b1R5cGVOYW1lKHZhbHVlW2tleV0pID09PSAnYXJyYXknKSAmJiAhdmFsdWVba2V5XS5oYXNPd25Qcm9wZXJ0eSgnX19vYnNlcnZlcnNfXycpKSB7XHJcblx0XHRcdFx0XHR2YXIgbmV3cGFydHMgPSBwYXJ0cy5zbGljZSgwKTtcclxuXHRcdFx0XHRcdG5ld3BhcnRzLnB1c2goa2V5KTtcclxuXHRcdFx0XHRcdHZhbHVlW2tleV0gPSBPYmplY3QuZGVlcE9ic2VydmUodmFsdWVba2V5XSxjYWxsYmFjayxuZXdwYXJ0cyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHJcblx0XHRyZW9ic2VydmUob2JqZWN0LCBwYXJ0cyk7XHJcblxyXG5cdFx0dmFyIG9ic2VydmVkID0gT2JqZWN0Lm9ic2VydmUob2JqZWN0LGZ1bmN0aW9uKGNoYW5nZXNldCkge1xyXG5cdFx0XHR2YXIgY2hhbmdlcyA9IFtdO1xyXG5cdFx0XHRmdW5jdGlvbiByZWN1cnNlKG5hbWUscm9vdE9iamVjdCxvbGRPYmplY3QsbmV3T2JqZWN0LHBhdGgpIHtcclxuXHRcdFx0XHRpZihuZXdPYmplY3QgaW5zdGFuY2VvZiBPYmplY3QpIHtcclxuXHRcdFx0XHRcdHZhciBuZXdrZXlzID0gT2JqZWN0LmtleXMobmV3T2JqZWN0KTtcclxuXHRcdFx0XHRcdG5ld2tleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcclxuXHRcdFx0XHRcdFx0aWYoIW9sZE9iamVjdCB8fCAob2xkT2JqZWN0W2tleV0hPT1uZXdPYmplY3Rba2V5XSkpIHtcclxuXHRcdFx0XHRcdFx0XHR2YXIgb2xkdmFsdWUgPSAob2xkT2JqZWN0ICYmIG9sZE9iamVjdFtrZXldIT09dW5kZWZpbmVkID8gb2xkT2JqZWN0W2tleV0gOiB1bmRlZmluZWQpLFxyXG5cdFx0XHRcdFx0XHRcdFx0Y2hhbmdlID0gKG9sZHZhbHVlPT09dW5kZWZpbmVkID8gXCJhZGRcIiA6IFwidXBkYXRlXCIpLFxyXG5cdFx0XHRcdFx0XHRcdFx0a2V5cGF0aCA9IHBhdGggKyBcIi5cIiArIGtleTtcclxuXHJcblx0XHRcdFx0XHRcdFx0Y2hhbmdlcy5wdXNoKHtuYW1lOm5hbWUsb2JqZWN0OnJvb3RPYmplY3QsdHlwZTpjaGFuZ2Usb2xkVmFsdWU6b2xkdmFsdWUsbmV3VmFsdWU6bmV3T2JqZWN0W2tleV0sa2V5cGF0aDprZXlwYXRofSk7XHJcblx0XHRcdFx0XHRcdFx0cmVjdXJzZShuYW1lLHJvb3RPYmplY3Qsb2xkdmFsdWUsbmV3T2JqZWN0W2tleV0sa2V5cGF0aCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH0gZWxzZSBpZihvbGRPYmplY3QgaW5zdGFuY2VvZiBPYmplY3QpIHtcclxuXHRcdFx0XHRcdHZhciBvbGRrZXlzID0gT2JqZWN0LmtleXMob2xkT2JqZWN0KTtcclxuXHRcdFx0XHRcdG9sZGtleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcclxuXHRcdFx0XHRcdFx0dmFyIGNoYW5nZSA9IChuZXdPYmplY3Q9PT1udWxsID8gXCJ1cGRhdGVcIiA6IFwiZGVsZXRlXCIpLFxyXG5cdFx0XHRcdFx0XHRcdGtleXBhdGggPSBwYXRoICsgXCIuXCIgKyBrZXk7XHJcblx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHRcdGNoYW5nZXMucHVzaCh7bmFtZTpuYW1lLG9iamVjdDpyb290T2JqZWN0LHR5cGU6Y2hhbmdlLG9sZFZhbHVlOm9sZE9iamVjdFtrZXldLG5ld1ZhbHVlOm5ld09iamVjdCxrZXlwYXRoOmtleXBhdGh9KTtcclxuXHRcdFx0XHRcdFx0cmVjdXJzZShuYW1lLHJvb3RPYmplY3Qsb2xkT2JqZWN0W2tleV0sdW5kZWZpbmVkLGtleXBhdGgpO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdGNoYW5nZXNldC5mb3JFYWNoKGZ1bmN0aW9uKGNoYW5nZSkge1xyXG5cdFx0XHRcdHZhciBrZXlwYXRoID0gKHBhcnRzLmxlbmd0aD4wID8gcGFydHMuam9pbihcIi5cIikgKyBcIi5cIiA6IFwiXCIpICsgY2hhbmdlLm5hbWU7XHJcblxyXG5cdFx0XHRcdGlmIChjaGFuZ2UudHlwZSA9PT0gXCJ1cGRhdGVcIiB8fCBjaGFuZ2UudHlwZSA9PT0gXCJhZGRcIikgeyBcclxuXHRcdFx0XHRcdHJlb2JzZXJ2ZShjaGFuZ2Uub2JqZWN0LCBwYXJ0cyk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRjaGFuZ2VzLnB1c2goe25hbWU6Y2hhbmdlLm5hbWUsb2JqZWN0OmNoYW5nZS5vYmplY3QsdHlwZTpjaGFuZ2UudHlwZSxvbGRWYWx1ZTpjaGFuZ2Uub2xkVmFsdWUsbmV3VmFsdWU6Y2hhbmdlLm9iamVjdFtjaGFuZ2UubmFtZV0sa2V5cGF0aDprZXlwYXRofSk7XHJcblx0XHRcdFx0cmVjdXJzZShjaGFuZ2UubmFtZSxjaGFuZ2Uub2JqZWN0LGNoYW5nZS5vbGRWYWx1ZSxjaGFuZ2Uub2JqZWN0W2NoYW5nZS5uYW1lXSxrZXlwYXRoKTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdGNhbGxiYWNrKGNoYW5nZXMpO1xyXG5cdFx0fSk7XHJcblx0XHRyZXR1cm4gb2JzZXJ2ZWQ7XHJcblx0fTtcclxufSkoKTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3Byb3h5LW9ic2VydmUvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDExOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgNyIsIi8qKlxyXG4qIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQVxyXG4qIENvcHlyaWdodCAyMDE2IElORVNDLUlEXHJcbiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMXHJcbiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlZcclxuKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHXHJcbiogQ29weXJpZ2h0IDIwMTYgQXBpemVlXHJcbiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU5cclxuKlxyXG4qIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4qIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4qXHJcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuKlxyXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4qIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4qKi9cclxuXHJcbmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuaW1wb3J0IERhdGFPYmplY3QgZnJvbSAnLi9EYXRhT2JqZWN0JztcclxuXHJcbmxldCBGaWx0ZXJUeXBlID0ge0FOWTogJ2FueScsIFNUQVJUOiAnc3RhcnQnLCBFWEFDVDogJ2V4YWN0J307XHJcblxyXG4vKipcclxuICogVGhlIGNsYXNzIHJldHVybmVkIGZyb20gdGhlIFN5bmNoZXIgc3Vic2NyaWJlIGNhbGwuXHJcbiAqIFRvIGJlIHVzZWQgYXMgYW4gb2JzZXJ2YXRpb24gcG9pbnQgZnJvbSBhIERhdGFPYmplY3RSZXBvcnRlciBjaGFuZ2UuXHJcbiAqL1xyXG5jbGFzcyBEYXRhT2JqZWN0T2JzZXJ2ZXIgZXh0ZW5kcyBEYXRhT2JqZWN0IC8qIGltcGxlbWVudHMgU3luY1N0YXR1cyAqLyB7XHJcbiAgLyogcHJpdmF0ZVxyXG4gIF9jaGFuZ2VMaXN0ZW5lcjogTXNnTGlzdGVuZXJcclxuXHJcbiAgLS0tLWV2ZW50IGhhbmRsZXJzLS0tLVxyXG4gIF9maWx0ZXJzOiB7PGZpbHRlcj46IHt0eXBlOiA8c3RhcnQsIGV4YWN0PiwgY2FsbGJhY2s6IDxmdW5jdGlvbj59IH1cclxuICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAaWdub3JlXHJcbiAgICogU2hvdWxkIG5vdCBiZSB1c2VkIGRpcmVjdGx5IGJ5IEh5cGVydGllcy4gSXQncyBjYWxsZWQgYnkgdGhlIFN5bmNoZXIuc3Vic2NyaWJlIG1ldGhvZFxyXG4gICAqL1xyXG5cclxuICAvL1RPRE86IEZvciBGdXJ0aGVyIFN0dWR5XHJcbiAgY29uc3RydWN0b3IoaW5wdXQpIHtcclxuICAgIC8vdG9kbzogY2hlY2sgd2h5XHJcbiAgICAvL2lucHV0LmluaXRpYWxEYXRhID0gaW5wdXQuaW5pdGlhbERhdGEuZGF0YTtcclxuXHJcbiAgICBzdXBlcihpbnB1dCk7XHJcblxyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fdmVyc2lvbiA9IGlucHV0LnZlcnNpb247XHJcbiAgICBfdGhpcy5fZmlsdGVycyA9IHt9O1xyXG5cclxuICAgIF90aGlzLl9zeW5jT2JqLm9ic2VydmUoKGV2ZW50KSA9PiB7XHJcbiAgICAgIF90aGlzLl9vbkZpbHRlcihldmVudCk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgX3RoaXMuX2FsbG9jYXRlTGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTeW5jIERhdGEgT2JqZWN0IE9ic2VydmVyIHdpdGggbGFzdCB2ZXJzaW9uIG9mIERhdGEgT2JqZWN0IFJlcG9ydGVyLiBVc2VmdWwgZm9yIFJlc3VtZXNcclxuICAgKi9cclxuICBzeW5jKCkge1xyXG5cclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcbiAgICBjb25zb2xlLmluZm8oJ1tEYXRhT2JqZWN0T2JzZXJ2ZXJfc3luY10gc3luY2hyb25pc2luZyAnKTtcclxuXHJcbiAgICBfdGhpcy5fc3luY2hlci5yZWFkKF90aGlzLl9tZXRhZGF0YS51cmwpLnRoZW4oKHZhbHVlKT0+e1xyXG4gICAgICBjb25zb2xlLmluZm8oJ1tEYXRhT2JqZWN0T2JzZXJ2ZXJfc3luY10gdmFsdWUgdG8gc3luYzogJywgdmFsdWUpO1xyXG5cclxuICAgICAgT2JqZWN0LmFzc2lnbihfdGhpcy5kYXRhLCBkZWVwQ2xvbmUodmFsdWUuZGF0YSkpO1xyXG5cclxuICAgICAgX3RoaXMuX3ZlcnNpb24gPSB2YWx1ZS52ZXJzaW9uO1xyXG5cclxuICAgICAgX3RoaXMuX21ldGFkYXRhLmxhc3RNb2RpZmllZCA9IHZhbHVlLmxhc3RNb2RpZmllZDtcclxuXHJcbiAgICAgIC8qaWYgKHZhbHVlLnZlcnNpb24gIT0gX3RoaXMuX3ZlcnNpb24pIHtcclxuICAgICAgICBjb25zb2xlLmluZm8oJ1tEYXRhT2JqZWN0T2JzZXJ2ZXJfc3luY10gdXBkYXRpbmcgZXhpc3RpbmcgZGF0YTogJywgX3RoaXMuZGF0YSk7XHJcblxyXG4gICAgICAgIE9iamVjdC5hc3NpZ24oX3RoaXMuZGF0YSB8fCB7fSwgZGVlcENsb25lKHZhbHVlLmRhdGEpKTtcclxuXHJcbiAgICAgICAgX3RoaXMuX21ldGFkYXRhID0gZGVlcENsb25lKHZhbHVlKTtcclxuXHJcbiAgICAgICAgZGVsZXRlIF90aGlzLl9tZXRhZGF0YS5kYXRhO1xyXG5cclxuICAgICAgICBfdGhpcy5fdmVyc2lvbiA9IHZhbHVlLnZlcnNpb247XHJcblxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUuaW5mbygnW0RhdGFPYmplY3RPYnNlcnZlcl9zeW5jXSBleGlzdGluZyBkYXRhIGlzIHVwZGF0ZWQ6ICcsIHZhbHVlKTtcclxuICAgICAgfSovXHJcblxyXG4gICAgfSkuY2F0Y2goKHJlYXNvbikgPT4ge1xyXG4gICAgICBjb25zb2xlLmluZm8oJ1tEYXRhT2JqZWN0T2JzZXJ2ZXJfc3luY10gc3luYyBmYWlsZWQ6ICcsIHJlYXNvbik7XHJcbiAgICB9KTtcclxuXHJcbiAgfVxyXG5cclxuICBfYWxsb2NhdGVMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5fYWxsb2NhdGVMaXN0ZW5lcnMoKTtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgX3RoaXMuX2NoYW5nZUxpc3RlbmVyID0gX3RoaXMuX2J1cy5hZGRMaXN0ZW5lcihfdGhpcy5fdXJsICsgJy9jaGFuZ2VzJywgKG1zZykgPT4ge1xyXG4gICAgICBpZiAobXNnLnR5cGUgPT09ICd1cGRhdGUnKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0RhdGFPYmplY3RPYnNlcnZlci0nICsgX3RoaXMuX3VybCArICctUkNWOiAnLCBtc2cpO1xyXG4gICAgICAgIF90aGlzLl9jaGFuZ2VPYmplY3QoX3RoaXMuX3N5bmNPYmosIG1zZyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX3JlbGVhc2VMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5fcmVsZWFzZUxpc3RlbmVycygpO1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fY2hhbmdlTGlzdGVuZXIucmVtb3ZlKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWxlYXNlIGFuZCBkZWxldGUgb2JqZWN0IGRhdGFcclxuICAgKi9cclxuICBkZWxldGUoKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIF90aGlzLnVuc3Vic2NyaWJlKCk7XHJcbiAgICBfdGhpcy5fcmVsZWFzZUxpc3RlbmVycygpO1xyXG4gICAgZGVsZXRlIF90aGlzLl9zeW5jaGVyLl9vYnNlcnZlcnNbX3RoaXMuX3VybF07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWxlYXNlIGFuZCBkZWxldGUgb2JqZWN0IGRhdGFcclxuICAgKi9cclxuICB1bnN1YnNjcmliZSgpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgLy9GTE9XLU9VVDogdGhpcyBtZXNzYWdlIHdpbGwgYmUgc2VudCB0byB0aGUgcnVudGltZSBpbnN0YW5jZSBvZiBTeW5jaGVyTWFuYWdlciAtPiBfb25Mb2NhbFVuU3Vic2NyaWJlXHJcbiAgICBsZXQgdW5TdWJzY3JpYmVNc2cgPSB7XHJcbiAgICAgIHR5cGU6ICd1bnN1YnNjcmliZScsIGZyb206IF90aGlzLl9vd25lciwgdG86IF90aGlzLl9zeW5jaGVyLl9zdWJVUkwsXHJcbiAgICAgIGJvZHk6IHsgcmVzb3VyY2U6IF90aGlzLl91cmwgfVxyXG4gICAgfTtcclxuXHJcbiAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHVuU3Vic2NyaWJlTXNnLCAocmVwbHkpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coJ0RhdGFPYmplY3RPYnNlcnZlci1VTlNVQlNDUklCRTogJywgcmVwbHkpO1xyXG4gICAgICBpZiAocmVwbHkuYm9keS5jb2RlID09PSAyMDApIHtcclxuICAgICAgICBfdGhpcy5fcmVsZWFzZUxpc3RlbmVycygpO1xyXG4gICAgICAgIGRlbGV0ZSBfdGhpcy5fc3luY2hlci5fb2JzZXJ2ZXJzW190aGlzLl91cmxdO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlZ2lzdGVyIHRoZSBjaGFuZ2UgbGlzdGVuZXJzIHNlbnQgYnkgdGhlIHJlcG9ydGVyXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGZpbHRlciAtIEZpbHRlciB0aGF0IGlkZW50aWZpZXMgdGhlIGZpZWxkIChzZXBhcmF0ZWQgZG90IHBhdGgpLiBBY2NlcHRzICogYXQgdGhlIGVuZCBmb3IgYSBtb3JlIHVucmVzdHJpY3RlZCBmaWx0ZXJpbmcuXHJcbiAgICogQHBhcmFtIHtmdW5jdGlvbihldmVudDogTXNnRXZlbnQpfSBjYWxsYmFja1xyXG4gICAqL1xyXG4gIG9uQ2hhbmdlKGZpbHRlciwgY2FsbGJhY2spIHtcclxuICAgIGxldCBrZXkgPSBmaWx0ZXI7XHJcbiAgICBsZXQgZmlsdGVyT2JqID0ge1xyXG4gICAgICB0eXBlOiBGaWx0ZXJUeXBlLkVYQUNULFxyXG4gICAgICBjYWxsYmFjazogY2FsbGJhY2tcclxuICAgIH07XHJcblxyXG4gICAgbGV0IGlkeCA9IGZpbHRlci5pbmRleE9mKCcqJyk7XHJcbiAgICBpZiAoaWR4ID09PSBmaWx0ZXIubGVuZ3RoIC0gMSkge1xyXG4gICAgICBpZiAoaWR4ID09PSAwKSB7XHJcbiAgICAgICAgZmlsdGVyT2JqLnR5cGUgPSBGaWx0ZXJUeXBlLkFOWTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBmaWx0ZXJPYmoudHlwZSA9IEZpbHRlclR5cGUuU1RBUlQ7XHJcbiAgICAgICAga2V5ID0gZmlsdGVyLnN1YnN0cigwLCBmaWx0ZXIubGVuZ3RoIC0gMSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9maWx0ZXJzW2tleV0gPSBmaWx0ZXJPYmo7XHJcbiAgfVxyXG5cclxuICBfb25GaWx0ZXIoZXZlbnQpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgT2JqZWN0LmtleXMoX3RoaXMuX2ZpbHRlcnMpLmZvckVhY2goKGtleSkgPT4ge1xyXG4gICAgICBsZXQgZmlsdGVyID0gX3RoaXMuX2ZpbHRlcnNba2V5XTtcclxuICAgICAgaWYgKGZpbHRlci50eXBlID09PSBGaWx0ZXJUeXBlLkFOWSkge1xyXG4gICAgICAgIC8vbWF0Y2ggYW55dGhpbmdcclxuICAgICAgICBmaWx0ZXIuY2FsbGJhY2soZXZlbnQpO1xyXG4gICAgICB9IGVsc2UgaWYgKGZpbHRlci50eXBlID09PSBGaWx0ZXJUeXBlLlNUQVJUKSB7XHJcbiAgICAgICAgLy9pZiBzdGFydHMgd2l0aCBmaWx0ZXIuLi5cclxuICAgICAgICBpZiAoZXZlbnQuZmllbGQuaW5kZXhPZihrZXkpID09PSAwKSB7XHJcbiAgICAgICAgICBmaWx0ZXIuY2FsbGJhY2soZXZlbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIGlmIChmaWx0ZXIudHlwZSA9PT0gRmlsdGVyVHlwZS5FWEFDVCkge1xyXG4gICAgICAgIC8vZXhhY3QgbWF0Y2hcclxuICAgICAgICBpZiAoZXZlbnQuZmllbGQgPT09IGtleSkge1xyXG4gICAgICAgICAgZmlsdGVyLmNhbGxiYWNrKGV2ZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgb25EaXNjb25uZWN0ZWQoY2FsbGJhY2spIHtcclxuXHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG5cclxuICAgICAgdGhpcy5fc3Vic2NyaWJlUmVnaXN0cmF0aW9uKClcclxuICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX29uRGlzY29ubmVjdGVkID0gY2FsbGJhY2s7XHJcbiAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gcmVqZWN0KGVycikpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfc3Vic2NyaWJlUmVnaXN0cmF0aW9uKCkge1xyXG5cclxuICAgIGNvbnN0IG1zZyA9IHtcclxuICAgICAgdHlwZTogJ3N1YnNjcmliZScsXHJcbiAgICAgIGZyb206IHRoaXMuX293bmVyLFxyXG4gICAgICB0bzogdGhpcy5fc3luY2hlci5fcnVudGltZVVybCArICcvc3Vic2NyaXB0aW9ucycsXHJcbiAgICAgIGJvZHk6IHtcclxuICAgICAgICByZXNvdXJjZXM6IFt0aGlzLl91cmwgKyAnL3JlZ2lzdHJhdGlvbiddXHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuXHJcbiAgICAgIHRoaXMuX2J1cy5wb3N0TWVzc2FnZShtc2csIChyZXBseSkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBbRGF0YU9iamVjdE9ic2VydmVyLl9zdWJzY3JpYmVSZWdpc3RyYXRpb25dICR7dGhpcy5fdXJsfSByY3ZlZCByZXBseSBgLCByZXBseSk7XHJcblxyXG4gICAgICAgIGlmIChyZXBseS5ib2R5LmNvZGUgPT09IDIwMCkge1xyXG4gICAgICAgICAgdGhpcy5fZ2VuZXJhdGVMaXN0ZW5lcih0aGlzLl91cmwgKyAnL3JlZ2lzdHJhdGlvbicpO1xyXG4gICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzdWJzY3JpYmluZyByZWdpc3RyYXRpb24gc3RhdHVzIGZvciAnLCB0aGlzLl91cmwpO1xyXG4gICAgICAgICAgcmVqZWN0KCdFcnJvciBzdWJzY3JpYmluZyByZWdpc3RyYXRpb24gc3RhdHVzIGZvciAnICsgdGhpcy5fdXJsKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfZ2VuZXJhdGVMaXN0ZW5lcihub3RpZmljYXRpb25VUkwpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgX3RoaXMuX2J1cy5hZGRMaXN0ZW5lcihub3RpZmljYXRpb25VUkwsIChtc2cpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coYFtEYXRhT2JqZWN0T2JzZXJ2ZXIucmVnaXN0cmF0aW9uTm90aWZpY2F0aW9uXSAke190aGlzLl91cmx9OiBgLCBtc2cpO1xyXG4gICAgICBpZiAobXNnLmJvZHkudmFsdWUgJiYgbXNnLmJvZHkudmFsdWUgPT09ICdkaXNjb25uZWN0ZWQnICYmIF90aGlzLl9vbkRpc2Nvbm5lY3RlZCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBbRGF0YU9iamVjdE9ic2VydmVyXSAke190aGlzLl91cmx9OiB3YXMgZGlzY29ubmVjdGVkIGAsIG1zZyk7XHJcbiAgICAgICAgX3RoaXMuX29uRGlzY29ubmVjdGVkKCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlcXVlc3RzIHRoZSByZXBvcnRlciB0byBleGVjdXRlIGEgbWV0aG9kIG9uIHRoZSBkYXRhIG9iamVjdFxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXRob2QgLSBOYW1lIG9mIHRoZSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZC5cclxuICAgKiBAcGFyYW0ge2FycmF5fSBwYXJhbXMgLSBhcnJheSBvZiBwYXJhbWV0ZXJzIGZvciB0aGUgcmVxdWVzdGVkIGZ1bmN0aW9uXHJcbiAgICogQHJldHVybiB7cHJvbWlzZX1cclxuICAgKi9cclxuXHJcbiAgZXhlY3V0ZShtZXRob2QsIHBhcmFtcykge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG5cclxuICAgICAgY29uc3QgbXNnID0ge1xyXG4gICAgICAgIHR5cGU6ICdleGVjdXRlJyxcclxuICAgICAgICBmcm9tOiB0aGlzLl9vd25lcixcclxuICAgICAgICB0bzogX3RoaXMuX3VybCxcclxuICAgICAgICBib2R5OiB7XHJcbiAgICAgICAgICBtZXRob2Q6IG1ldGhvZCxcclxuICAgICAgICAgIHBhcmFtczogcGFyYW1zXHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShtc2csIChyZXBseSkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBbRGF0YU9iamVjdE9ic2VydmVyLmV4ZWN1dGVdICR7X3RoaXMuX3VybH0gcmN2ZWQgcmVwbHkgYCwgcmVwbHkpO1xyXG5cclxuICAgICAgICBpZiAocmVwbHkuYm9keS5jb2RlID09PSAyMDApIHtcclxuICAgICAgICAgIHJlc29sdmUoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY29uc29sZS53YXJuaW5nKGBbRGF0YU9iamVjdE9ic2VydmVyLmV4ZWN1dGVdIGV4ZWN1dGlvbiBvZiBtZXRob2QgJHttZXRob2R9IHdhcyByZWplY3QgYnkgcmVwb3J0ZXJgKTtcclxuICAgICAgICAgIHJlamVjdChgW0RhdGFPYmplY3RPYnNlcnZlci5leGVjdXRlXSBleGVjdXRpb24gb2YgbWV0aG9kICR7bWV0aG9kfSB3YXMgcmVqZWN0IGJ5IHJlcG9ydGVyYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRGF0YU9iamVjdE9ic2VydmVyO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvc3luY2hlci9EYXRhT2JqZWN0T2JzZXJ2ZXIuanMiLCIvKipcclxuKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRFxyXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxyXG4qIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WXHJcbiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xyXG4qIENvcHlyaWdodCAyMDE2IEFwaXplZVxyXG4qIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElOXHJcbipcclxuKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4qIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuKlxyXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbipcclxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4qIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuKiovXHJcblxyXG5pbXBvcnQgRGF0YU9iamVjdCBmcm9tICcuL0RhdGFPYmplY3QnO1xyXG5cclxuaW1wb3J0IHsgZGVlcENsb25lLCBkaXZpZGVVUkwgfSBmcm9tICcuLi91dGlscy91dGlscy5qcyc7XHJcblxyXG4vKipcclxuICogVGhlIGNsYXNzIHJldHVybmVkIGZyb20gdGhlIFN5bmNoZXIgY3JlYXRlIGNhbGwuXHJcbiAqIFRvIGJlIHVzZWQgYXMgYSByZXBvcnRlciBwb2ludCwgY2hhbmdlcyB3aWxsIGJlIHN1Ym1pdGVkIHRvIERhdGFPYmplY3RPYnNlcnZlciBpbnN0YW5jZXMuXHJcbiAqL1xyXG5jbGFzcyBEYXRhT2JqZWN0UmVwb3J0ZXIgZXh0ZW5kcyBEYXRhT2JqZWN0IC8qIGltcGxlbWVudHMgU3luY1N0YXR1cyAqLyB7XHJcbiAgLyogcHJpdmF0ZVxyXG4gIF9zdWJzY3JpcHRpb25zOiA8aHlwZXJ0eVVybDogeyBzdGF0dXM6IHN0cmluZyB9IH0+XHJcblxyXG4gIC0tLS1ldmVudCBoYW5kbGVycy0tLS1cclxuICBfb25TdWJzY3JpcHRpb25IYW5kbGVyOiAoZXZlbnQpID0+IHZvaWRcclxuICBfb25SZXNwb25zZUhhbmRsZXI6IChldmVudCkgPT4gdm9pZFxyXG4gIF9vblJlYWRIYW5kbGVyOiAoZXZlbnQpID0+IHZvaWRcclxuICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAaWdub3JlXHJcbiAgICogU2hvdWxkIG5vdCBiZSB1c2VkIGRpcmVjdGx5IGJ5IEh5cGVydGllcy4gSXQncyBjYWxsZWQgYnkgdGhlIFN5bmNoZXIuY3JlYXRlIG1ldGhvZFxyXG4gICAqL1xyXG5cclxuICAgLy9jb25zdHJ1Y3RvcihzeW5jaGVyLCB1cmwsIGNyZWF0ZWQsIHJlcG9ydGVyLCBydW50aW1lLCBzY2hlbWEsIG5hbWUsIGluaXRpYWxTdGF0dXMsIGluaXRpYWxEYXRhLCBjaGlsZHJlbnMsIG11dHVhbCA9IHRydWUsIHJlc3VtZWQgPSBmYWxzZSwgZGVzY3JpcHRpb24sIHRhZ3MsIHJlc291cmNlcywgb2JzZXJ2ZXJTdG9yYWdlLCBwdWJsaWNPYnNlcnZhdGlvbikge1xyXG4gIGNvbnN0cnVjdG9yKGlucHV0KSB7XHJcblxyXG4gICAgc3VwZXIoaW5wdXQpO1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fc3Vic2NyaXB0aW9ucyA9IHt9O1xyXG5cclxuICAgIF90aGlzLl9zeW5jT2JqLm9ic2VydmUoKGV2ZW50KSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdbU3luY2hlci5EYXRhT2JqZWN0UmVwb3J0ZXJdICcgKyBfdGhpcy51cmwgKyAnIHB1Ymxpc2ggY2hhbmdlOiAnLCBldmVudCk7XHJcbiAgICAgIF90aGlzLl9vbkNoYW5nZShldmVudCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBfdGhpcy5fYWxsb2NhdGVMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICBfdGhpcy5faW52aXRhdGlvbnMgPSBbXTtcclxuICB9XHJcblxyXG4gIF9hbGxvY2F0ZUxpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLl9hbGxvY2F0ZUxpc3RlbmVycygpO1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fb2JqZWN0TGlzdGVuZXIgPSBfdGhpcy5fYnVzLmFkZExpc3RlbmVyKF90aGlzLl91cmwsIChtc2cpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coJ1tTeW5jaGVyLkRhdGFPYmplY3RSZXBvcnRlcl0gbGlzdGVuZXIgJyArIF90aGlzLl91cmwgKyAnIFJlY2VpdmVkOiAnLCBtc2cpO1xyXG4gICAgICBzd2l0Y2ggKG1zZy50eXBlKSB7XHJcbiAgICAgICAgY2FzZSAncmVzcG9uc2UnOiBfdGhpcy5fb25SZXNwb25zZShtc2cpOyBicmVhaztcclxuICAgICAgICBjYXNlICdyZWFkJzogX3RoaXMuX29uUmVhZChtc2cpOyBicmVhaztcclxuICAgICAgICBjYXNlICdleGVjdXRlJzogX3RoaXMuX29uRXhlY3V0ZShtc2cpOyBicmVhaztcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfcmVsZWFzZUxpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLl9yZWxlYXNlTGlzdGVuZXJzKCk7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIF90aGlzLl9vYmplY3RMaXN0ZW5lci5yZW1vdmUoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNlbmQgaW52aXRhdGlvbnMgKGNyZWF0ZSBtZXNzYWdlcykgdG8gaHlwZXJ0aWVzLCBvYnNlcnZlcnMgbGlzdC5cclxuICAgKiBAcGFyYW0gIHtIeXBlcnR5VVJMW119IG9ic2VydmVycyBMaXN0IG9mIEh5cGVydHkgVVJMJ3NcclxuICAgKi9cclxuICBpbnZpdGVPYnNlcnZlcnMob2JzZXJ2ZXJzKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuXHJcbiAgICAvL0ZMT1ctT1VUOiB0aGlzIG1lc3NhZ2Ugd2lsbCBiZSBzZW50IHRvIHRoZSBydW50aW1lIGluc3RhbmNlIG9mIFN5bmNoZXJNYW5hZ2VyIC0+IF9vbkNyZWF0ZVxyXG4gICAgLy8gVE9ETzogcmVtb3ZlIHZhbHVlIGFuZCBhZGQgcmVzb3VyY2VzPyBzaG91bGQgc2ltaWxhciB0byAxc3QgY3JlYXRlXHJcblxyXG4gICAgbGV0IHRvSW52aXRlID0gW107XHJcblxyXG4gICAgb2JzZXJ2ZXJzLmZvckVhY2goKG9ic2VydmVyKT0+IHtcclxuICAgICAgaWYgKCFfdGhpcy5faW52aXRhdGlvbnNbb2JzZXJ2ZXJdKSB7XHJcbiAgICAgICAgdG9JbnZpdGUucHVzaChvYnNlcnZlcik7XHJcbiAgICAgICAgX3RoaXMuX2ludml0YXRpb25zW29ic2VydmVyXSA9IG9ic2VydmVyO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAodG9JbnZpdGUubGVuZ3RoID4gMCkge1xyXG4gICAgICBjb25zb2xlLmxvZygnW1N5bmNoZXIuRGF0YU9iamVjdFJlcG9ydGVyXSBJbnZpdGVPYnNlcnZlcnMgJywgdG9JbnZpdGUsIF90aGlzLl9tZXRhZGF0YSk7XHJcblxyXG4gICAgICBsZXQgaW52aXRlTXNnID0ge1xyXG4gICAgICAgIHR5cGU6ICdjcmVhdGUnLCBmcm9tOiBfdGhpcy5fc3luY2hlci5fb3duZXIsIHRvOiBfdGhpcy5fc3luY2hlci5fc3ViVVJMLFxyXG4gICAgICAgIGJvZHk6IHsgcmVzdW1lOiBmYWxzZSwgcmVzb3VyY2U6IF90aGlzLl91cmwsIHNjaGVtYTogX3RoaXMuX3NjaGVtYSwgdmFsdWU6IF90aGlzLl9tZXRhZGF0YSwgYXV0aG9yaXNlOiB0b0ludml0ZSB9XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKGludml0ZU1zZyk7XHJcblxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUmVsZWFzZSBhbmQgZGVsZXRlIG9iamVjdCBkYXRhXHJcbiAgICovXHJcbiAgZGVsZXRlKCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICAvL0ZMT1ctT1VUOiB0aGlzIG1lc3NhZ2Ugd2lsbCBiZSBzZW50IHRvIHRoZSBydW50aW1lIGluc3RhbmNlIG9mIFN5bmNoZXJNYW5hZ2VyIC0+IF9vbkRlbGV0ZVxyXG4gICAgbGV0IGRlbGV0ZU1zZyA9IHtcclxuICAgICAgdHlwZTogJ2RlbGV0ZScsIGZyb206IF90aGlzLl9vd25lciwgdG86IF90aGlzLl9zeW5jaGVyLl9zdWJVUkwsXHJcbiAgICAgIGJvZHk6IHsgcmVzb3VyY2U6IF90aGlzLl91cmwgfVxyXG4gICAgfTtcclxuXHJcbiAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKGRlbGV0ZU1zZywgKHJlcGx5KSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdEYXRhT2JqZWN0UmVwb3J0ZXItREVMRVRFOiAnLCByZXBseSk7XHJcbiAgICAgIGlmIChyZXBseS5ib2R5LmNvZGUgPT09IDIwMCkge1xyXG4gICAgICAgIF90aGlzLl9yZWxlYXNlTGlzdGVuZXJzKCk7XHJcbiAgICAgICAgZGVsZXRlIF90aGlzLl9zeW5jaGVyLl9yZXBvcnRlcnNbX3RoaXMuX3VybF07XHJcblxyXG4gICAgICAgIC8vX3RoaXMuX3N5bmNPYmoudW5vYnNlcnZlKCk7XHJcbiAgICAgICAgX3RoaXMuX3N5bmNPYmogPSB7fTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdWJzY3JpcHRpb25zIHJlcXVlc3RlZCBhbmQgYWNjZXB0ZWQgdG8gdGhpcyByZXBvcnRlclxyXG4gICAqIEB0eXBlIHtPYmplY3Q8SHlwZXJ0eVVSTCwgU3luY1N1YnNjcmlwdGlvbj59XHJcbiAgICovXHJcbiAgZ2V0IHN1YnNjcmlwdGlvbnMoKSB7IHJldHVybiB0aGlzLl9zdWJzY3JpcHRpb25zOyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldHVwIHRoZSBjYWxsYmFjayB0byBwcm9jZXNzIHN1YnNjcmliZSBhbmQgdW5zdWJzY3JpYmUgbm90aWZpY2F0aW9uc1xyXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2sgZnVuY3Rpb24gdG8gcmVjZWl2ZSBldmVudHNcclxuICAgKi9cclxuICBvblN1YnNjcmlwdGlvbihjYWxsYmFjaykge1xyXG4gICAgdGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyID0gY2FsbGJhY2s7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTZXR1cCB0aGUgY2FsbGJhY2sgdG8gcHJvY2VzcyByZXNwb25zZSBub3RpZmljYXRpb25zIG9mIHRoZSBjcmVhdGUnc1xyXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2sgZnVuY3Rpb24gdG8gcmVjZWl2ZSBldmVudHNcclxuICAgKi9cclxuICBvblJlc3BvbnNlKGNhbGxiYWNrKSB7XHJcbiAgICB0aGlzLl9vblJlc3BvbnNlSGFuZGxlciA9IGNhbGxiYWNrO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0dXAgdGhlIGNhbGxiYWNrIHRvIHByb2Nlc3MgcmVhZCBub3RpZmljYXRpb25zXHJcbiAgICogQHBhcmFtIHtmdW5jdGlvbihldmVudDogTXNnRXZlbnQpfSBjYWxsYmFja1xyXG4gICAqL1xyXG5cclxuICBvblJlYWQoY2FsbGJhY2spIHtcclxuICAgIHRoaXMuX29uUmVhZEhhbmRsZXIgPSBjYWxsYmFjaztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldHVwIHRoZSBjYWxsYmFjayB0byBwcm9jZXNzIGV4ZWN1dGUgbm90aWZpY2F0aW9uc1xyXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2tcclxuICAgKi9cclxuXHJcbiAgb25FeGVjdXRlKGNhbGxiYWNrKSB7XHJcbiAgICB0aGlzLl9vbkV4ZWN1dGVIYW5kbGVyID0gY2FsbGJhY2s7XHJcbiAgfVxyXG5cclxuICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBwYXJlbnQgU3luY2hlciAtPiBfb25Gb3J3YXJkXHJcbiAgX29uRm9yd2FyZChtc2cpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ0RhdGFPYmplY3RSZXBvcnRlci1SQ1Y6ICcsIG1zZyk7XHJcbiAgICBzd2l0Y2ggKG1zZy5ib2R5LnR5cGUpIHtcclxuICAgICAgY2FzZSAnc3Vic2NyaWJlJzogX3RoaXMuX29uU3Vic2NyaWJlKG1zZyk7IGJyZWFrO1xyXG4gICAgICBjYXNlICd1bnN1YnNjcmliZSc6IF90aGlzLl9vblVuU3Vic2NyaWJlKG1zZyk7IGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9GTE9XLUlOOiBtZXNzYWdlIHJlY2VpdmVkIGZyb20gdGhpcyAtPiBfb25Gb3J3YXJkOiBlbWl0dGVkIGJ5IGEgcmVtb3RlIFN5bmNoZXIgLT4gc3Vic2NyaWJlXHJcbiAgX29uU3Vic2NyaWJlKG1zZykge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuICAgIGxldCBoeXBlcnR5VXJsID0gbXNnLmJvZHkuZnJvbTtcclxuICAgIGxldCBkaXZpZGVkVVJMID0gZGl2aWRlVVJMKGh5cGVydHlVcmwpO1xyXG4gICAgbGV0IGRvbWFpbiA9IGRpdmlkZWRVUkwuZG9tYWluO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdFJlcG9ydGVyLl9vblN1YnNjcmliZV0nLCBtc2csIGRvbWFpbiwgZGl2aWRlZFVSTCk7XHJcblxyXG4gICAgbGV0IGV2ZW50ID0ge1xyXG4gICAgICB0eXBlOiBtc2cuYm9keS50eXBlLFxyXG4gICAgICB1cmw6IGh5cGVydHlVcmwsXHJcblxyXG4gICAgICBkb21haW46IGRvbWFpbixcclxuXHJcbiAgICAgIGlkZW50aXR5OiBtc2cuYm9keS5pZGVudGl0eSxcclxuXHJcbiAgICAgIGFjY2VwdDogKCkgPT4ge1xyXG4gICAgICAgIC8vY3JlYXRlIG5ldyBzdWJzY3JpcHRpb25cclxuICAgICAgICBsZXQgc3ViID0geyB1cmw6IGh5cGVydHlVcmwsIHN0YXR1czogJ2xpdmUnIH07XHJcbiAgICAgICAgX3RoaXMuX3N1YnNjcmlwdGlvbnNbaHlwZXJ0eVVybF0gPSBzdWI7XHJcbiAgICAgICAgaWYgKF90aGlzLm1ldGFkYXRhLnN1YnNjcmlwdGlvbnMpIHsgX3RoaXMubWV0YWRhdGEuc3Vic2NyaXB0aW9ucy5wdXNoKHN1Yi51cmwpOyB9XHJcblxyXG4gICAgICAgIGxldCBtc2dWYWx1ZSA9IF90aGlzLl9tZXRhZGF0YTtcclxuICAgICAgICBtc2dWYWx1ZS5kYXRhID0gZGVlcENsb25lKF90aGlzLmRhdGEpO1xyXG4gICAgICAgIG1zZ1ZhbHVlLnZlcnNpb24gPSBfdGhpcy5fdmVyc2lvbjtcclxuXHJcbiAgICAgICAgLy9wcm9jZXNzIGFuZCBzZW5kIGNoaWxkcmVucyBkYXRhXHJcbiAgICAgICAgLy8gbGV0IGNoaWxkcmVuVmFsdWVzID0ge307XHJcbiAgICAgICAgLy9cclxuICAgICAgICAvLyBpZiAoX3RoaXMuX2NoaWxkcmVuT2JqZWN0cykge1xyXG4gICAgICAgIC8vICAgT2JqZWN0LmtleXMoX3RoaXMuX2NoaWxkcmVuT2JqZWN0cykuZm9yRWFjaCgoY2hpbGRyZW5JZCkgPT4ge1xyXG4gICAgICAgIC8vICAgICBsZXQgY2hpbGRyZW5EYXRhID0gX3RoaXMuX2NoaWxkcmVuT2JqZWN0c1tjaGlsZHJlbklkXTtcclxuICAgICAgICAvLyAgICAgY2hpbGRyZW5WYWx1ZXNbY2hpbGRyZW5JZF0gPSBkZWVwQ2xvbmUoY2hpbGRyZW5EYXRhKTtcclxuICAgICAgICAvLyAgIH0pO1xyXG4gICAgICAgIC8vICAgbXNnVmFsdWUuY2hpbGRyZW5PYmplY3RzID0gY2hpbGRyZW5WYWx1ZXM7XHJcbiAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICBsZXQgc2VuZE1zZyA9IHtcclxuICAgICAgICAgIGlkOiBtc2cuaWQsIHR5cGU6ICdyZXNwb25zZScsIGZyb206IG1zZy50bywgdG86IG1zZy5mcm9tLFxyXG4gICAgICAgICAgYm9keTogeyBjb2RlOiAyMDAsIHNjaGVtYTogX3RoaXMuX3NjaGVtYSwgdmFsdWU6IG1zZ1ZhbHVlIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICAvL1RPRE86IEZvciBGdXJ0aGVyIFN0dWR5XHJcbiAgICAgICAgaWYgKG1zZy5ib2R5Lmhhc093blByb3BlcnR5KCdtdXR1YWxBdXRoZW50aWNhdGlvbicpICYmICFtc2cuYm9keS5tdXR1YWxBdXRoZW50aWNhdGlvbikge1xyXG4gICAgICAgICAgc2VuZE1zZy5ib2R5Lm11dHVhbEF1dGhlbnRpY2F0aW9uID0gdGhpcy5fbXV0dWFsQXV0aGVudGljYXRpb247XHJcbiAgICAgICAgICB0aGlzLl9tdXR1YWxBdXRoZW50aWNhdGlvbiA9IG1zZy5ib2R5Lm11dHVhbEF1dGhlbnRpY2F0aW9uO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy9zZW5kIG9rIHJlc3BvbnNlIG1lc3NhZ2VcclxuICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHNlbmRNc2cpO1xyXG5cclxuICAgICAgICByZXR1cm4gc3ViO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgcmVqZWN0OiAocmVhc29uKSA9PiB7XHJcbiAgICAgICAgLy9zZW5kIHJlamVjdCByZXNwb25zZSBtZXNzYWdlXHJcbiAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh7XHJcbiAgICAgICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcclxuICAgICAgICAgIGJvZHk6IHsgY29kZTogNDAzLCBkZXNjOiByZWFzb24gfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChfdGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdTVUJTQ1JJUFRJT04tRVZFTlQ6ICcsIGV2ZW50KTtcclxuICAgICAgX3RoaXMuX29uU3Vic2NyaXB0aW9uSGFuZGxlcihldmVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSB0aGlzIC0+IF9vbkZvcndhcmQ6IGVtaXR0ZWQgYnkgYSByZW1vdGUgRGF0YU9iamVjdE9ic2VydmVyIC0+IHVuc3Vic2NyaWJlXHJcbiAgX29uVW5TdWJzY3JpYmUobXNnKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG4gICAgbGV0IGh5cGVydHlVcmwgPSBtc2cuYm9keS5mcm9tO1xyXG4gICAgbGV0IGRpdmlkZWRVUkwgPSBkaXZpZGVVUkwoaHlwZXJ0eVVybCk7XHJcbiAgICBsZXQgZG9tYWluID0gZGl2aWRlZFVSTC5kb21haW47XHJcblxyXG4gICAgY29uc29sZS5sb2coJ1tEYXRhT2JqZWN0UmVwb3J0ZXIuX29uVW5TdWJzY3JpYmVdJywgbXNnLCBkb21haW4sIGRpdmlkZWRVUkwpO1xyXG5cclxuICAgIC8vbGV0IHN1YiA9IF90aGlzLl9zdWJzY3JpcHRpb25zW2h5cGVydHlVcmxdO1xyXG4gICAgZGVsZXRlIF90aGlzLl9zdWJzY3JpcHRpb25zW2h5cGVydHlVcmxdO1xyXG4gICAgZGVsZXRlIF90aGlzLl9pbnZpdGF0aW9uc1toeXBlcnR5VXJsXTtcclxuXHJcbiAgICBsZXQgZXZlbnQgPSB7XHJcbiAgICAgIHR5cGU6IG1zZy5ib2R5LnR5cGUsXHJcbiAgICAgIHVybDogaHlwZXJ0eVVybCxcclxuICAgICAgZG9tYWluOiBkb21haW4sXHJcbiAgICAgIGlkZW50aXR5OiBtc2cuYm9keS5pZGVudGl0eVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBUT0RPOiBjaGVjayBpZiB0aGUgX29uU3Vic2NyaXB0aW9uSGFuZGxlciBpdCBpcyB0aGUgc2FtZSBvZiB0aGUgc3Vic2NyaXB0aW9ucz8/P1xyXG4gICAgaWYgKF90aGlzLl9vblN1YnNjcmlwdGlvbkhhbmRsZXIpIHtcclxuICAgICAgY29uc29sZS5sb2coJ1VOLVNVQlNDUklQVElPTi1FVkVOVDogJywgZXZlbnQpO1xyXG4gICAgICBfdGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyKGV2ZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vRkxPVy1JTjogbWVzc2FnZSByZWNlaXZlZCBmcm9tIFJlcG9ydGVyVVJMIGFkZHJlc3M6IGVtaXRlZCBieSBhIHJlbW90ZSBTeW5jaGVyIC0+IF9vblJlbW90ZUNyZWF0ZSAtPiBldmVudC5hY2tcclxuICBfb25SZXNwb25zZShtc2cpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgbGV0IGV2ZW50ID0ge1xyXG4gICAgICB0eXBlOiBtc2cudHlwZSxcclxuICAgICAgdXJsOiBtc2cuZnJvbSxcclxuICAgICAgY29kZTogbXNnLmJvZHkuY29kZVxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAoX3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdSRVNQT05TRS1FVkVOVDogJywgZXZlbnQpO1xyXG4gICAgICBfdGhpcy5fb25SZXNwb25zZUhhbmRsZXIoZXZlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9GTE9XLUlOOiBtZXNzYWdlIHJlY2VpdmVkIGZyb20gUmVwb3J0ZXJVUkwgYWRkcmVzczogZW1pdGVkIGJ5IGEgcmVtb3RlIFN5bmNoZXIgLT4gcmVhZFxyXG4gIF9vblJlYWQobXNnKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG4gICAgbGV0IG9iamVjdFZhbHVlID0gZGVlcENsb25lKF90aGlzLm1ldGFkYXRhKTtcclxuICAgIG9iamVjdFZhbHVlLmRhdGEgPSBkZWVwQ2xvbmUoX3RoaXMuZGF0YSk7XHJcbiAgICBvYmplY3RWYWx1ZS52ZXJzaW9uID0gX3RoaXMuX3ZlcnNpb247XHJcblxyXG4gICAgbGV0IHJlc3BvbnNlID0ge1xyXG4gICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcclxuICAgICAgYm9keTogeyBjb2RlOiAyMDAsIHZhbHVlOiBvYmplY3RWYWx1ZSB9XHJcbiAgICB9O1xyXG5cclxuICAgIGxldCBldmVudCA9IHtcclxuICAgICAgdHlwZTogbXNnLnR5cGUsXHJcbiAgICAgIHVybDogbXNnLmZyb20sXHJcblxyXG4gICAgICBhY2NlcHQ6ICgpID0+IHtcclxuICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHJlc3BvbnNlKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIHJlamVjdDogKHJlYXNvbikgPT4ge1xyXG4gICAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2Uoe1xyXG4gICAgICAgICAgaWQ6IG1zZy5pZCwgdHlwZTogJ3Jlc3BvbnNlJywgZnJvbTogbXNnLnRvLCB0bzogbXNnLmZyb20sXHJcbiAgICAgICAgICBib2R5OiB7IGNvZGU6IDQwMSwgZGVzYzogcmVhc29uIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBpZiB0aGUgcmVxdWVzdGVyIGlzIGFuIGF1dGhvcmlzZWQgb2JzZXJ2ZXIsIHRoZSBkYXRhIG9iamVjdCBpcyByZXNwb25kZWQgb3RoZXJ3aXNlIGFuIGV2ZW50IGlzIHRyaWdnZXJlZFxyXG4gICAgbGV0IHN1YnNjcmlwdGlvbnMgPSBbXTtcclxuXHJcbiAgICBpZiAoX3RoaXMubWV0YWRhdGEuc3Vic2NyaXB0aW9ucykge1xyXG4gICAgICBzdWJzY3JpcHRpb25zID0gX3RoaXMubWV0YWRhdGEuc3Vic2NyaXB0aW9ucztcclxuICAgIH0gZWxzZSBpZiAoX3RoaXMuX3N1YnNjcmlwdGlvbnMpIHtcclxuICAgICAgc3Vic2NyaXB0aW9ucyA9IE9iamVjdC5rZXlzKF90aGlzLl9zdWJzY3JpcHRpb25zKS5tYXAoZnVuY3Rpb24oa2V5KSB7IHJldHVybiBfdGhpcy5fc3Vic2NyaXB0aW9uc1trZXldLnVybDsgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHN1YnNjcmlwdGlvbnMuaW5kZXhPZihtc2cuZnJvbSkgIT0gLTEpIHtcclxuICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyZXNwb25zZSk7XHJcbiAgICB9IGVsc2UgaWYgKF90aGlzLl9vblJlYWRIYW5kbGVyKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdSRUFELUVWRU5UOiAnLCBldmVudCk7XHJcbiAgICAgIF90aGlzLl9vblJlYWRIYW5kbGVyKGV2ZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIEV4ZWN1dGUgcmVxdWVzdCByZWNlaXZlZFxyXG4gIF9vbkV4ZWN1dGUobXNnKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIGlmICghbXNnLmJvZHkubWV0aG9kKSB0aHJvdyAnW0RhdGFPYmplY3RSZXBvcnRlci5fb25FeGVjdXRlXSBtZXRob2QgbWlzc2luZyAnLCBtc2c7XHJcblxyXG4gICAgbGV0IHJlc3BvbnNlID0ge1xyXG4gICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcclxuICAgICAgYm9keTogeyBjb2RlOiAyMDAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBsZXQgZXZlbnQgPSB7XHJcbiAgICAgIHR5cGU6IG1zZy50eXBlLFxyXG4gICAgICB1cmw6IG1zZy5mcm9tLFxyXG4gICAgICBtZXRob2Q6IG1zZy5ib2R5Lm1ldGhvZCxcclxuICAgICAgcGFyYW1zOiBtc2cuYm9keS5wYXJhbXMsXHJcblxyXG4gICAgICBhY2NlcHQ6ICgpID0+IHtcclxuICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHJlc3BvbnNlKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIHJlamVjdDogKHJlYXNvbikgPT4ge1xyXG4gICAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2Uoe1xyXG4gICAgICAgICAgaWQ6IG1zZy5pZCwgdHlwZTogJ3Jlc3BvbnNlJywgZnJvbTogbXNnLnRvLCB0bzogbXNnLmZyb20sXHJcbiAgICAgICAgICBib2R5OiB7IGNvZGU6IDQwMSwgZGVzYzogcmVhc29uIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAoX3RoaXMuX29uRXhlY3V0ZUhhbmRsZXIpIHtcclxuICAgICAgY29uc29sZS5sb2coJ1tEYXRhT2JqZWN0UmVwb3J0ZXJdIEVYRUNVVEUtRVZFTlQ6ICcsIGV2ZW50KTtcclxuICAgICAgX3RoaXMuX29uRXhlY3V0ZUhhbmRsZXIoZXZlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IERhdGFPYmplY3RSZXBvcnRlcjtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3N5bmNoZXIvRGF0YU9iamVjdFJlcG9ydGVyLmpzIiwiLyoqXHJcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcclxuKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0xcclxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxyXG4qIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxyXG4qIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUdcclxuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcclxuKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxyXG4qXHJcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbipcclxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4qXHJcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4qIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbioqL1xyXG5cclxuaW1wb3J0IFN5bmNPYmplY3QsIHtDaGFuZ2VUeXBlLCBPYmplY3RUeXBlfSBmcm9tICcuL1Byb3h5T2JqZWN0JztcclxuaW1wb3J0IERhdGFPYmplY3RDaGlsZCBmcm9tICcuL0RhdGFPYmplY3RDaGlsZCc7XHJcbmltcG9ydCB7ZGVlcENsb25lfSBmcm9tICcuLi91dGlscy91dGlscy5qcyc7XHJcblxyXG4vKipcclxuICogTWFpbiBleHRlbnNpb24gY2xhc3MgZm9yIG9ic2VydmVycyBhbmQgcmVwb3J0ZXJzLCB3aXRoIGNvbW1vbiBwcm9wZXJ0aWVzIGFuZCBtZXRob2RzLlxyXG4gKiBDaGlsZHJlbiBtYW5hZ2VtZW50IGlzIGNvbW1vbiBmb3Igb2JzZXJ2ZXJzIGFuZCByZXBvcnRlcnMuXHJcbiAqL1xyXG5jbGFzcyBEYXRhT2JqZWN0IHtcclxuICAvKiBwcml2YXRlXHJcbiAgX3ZlcnNpb246IG51bWJlclxyXG5cclxuICBfb3duZXI6IEh5cGVydHlVUkxcclxuICBfdXJsOiBPYmplY3RVUkxcclxuICBfc2NoZW1hOiBTY2hlbWFcclxuICBfYnVzOiBNaW5pQnVzXHJcbiAgX3N0YXR1czogb24gfCBwYXVzZWRcclxuICBfc3luY09iajogU3luY0RhdGFcclxuXHJcbiAgX2NoaWxkcmVuOiB7IGlkOiBEYXRhT2JqZWN0Q2hpbGQgfVxyXG4gIF9jaGlsZHJlbkxpc3RlbmVyczogW01zZ0xpc3RlbmVyXVxyXG5cclxuICAtLS0tZXZlbnQgaGFuZGxlcnMtLS0tXHJcbiAgX29uQWRkQ2hpbGRIYW5kbGVyOiAoZXZlbnQpID0+IHZvaWRcclxuICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAaWdub3JlXHJcbiAgICogU2hvdWxkIG5vdCBiZSB1c2VkIGRpcmVjdGx5IGJ5IEh5cGVydGllcy4gSXQncyBjYWxsZWQgYnkgdGhlIFN5bmNoZXIgY3JlYXRlIG9yIHN1YnNjcmliZSBtZXRob2Qnc1xyXG4gICAqL1xyXG4gIC8vY29uc3RydWN0b3Ioc3luY2hlciwgdXJsLCBjcmVhdGVkLCByZXBvcnRlciwgcnVudGltZSwgc2NoZW1hLCBuYW1lLCBpbml0aWFsU3RhdHVzLCBpbml0aWFsRGF0YSwgY2hpbGRyZW5zLCBtdXR1YWwgPSB0cnVlLCByZXN1bWVkID0gZmFsc2UsIGRlc2NyaXB0aW9uLCB0YWdzLCByZXNvdXJjZXMsIG9ic2VydmVyU3RvcmFnZSwgcHVibGljT2JzZXJ2YXRpb24pIHtcclxuICBjb25zdHJ1Y3RvcihpbnB1dCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBmdW5jdGlvbiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IocGFyKSB7XHJcbiAgICAgIHRocm93ICdbRGF0YU9iamVjdF0gJyArIHBhciArICcgbWFuZGF0b3J5IHBhcmFtZXRlciBpcyBtaXNzaW5nJztcclxuICAgIH1cclxuXHJcbiAgICBpbnB1dC5zeW5jaGVyID8gX3RoaXMuX3N5bmNoZXIgPSBpbnB1dC5zeW5jaGVyIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCdzeW5jaGVyJyk7XHJcbiAgICBpbnB1dC51cmwgPyAgX3RoaXMuX3VybCA9IGlucHV0LnVybCA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcigndXJsJyk7XHJcbiAgICBpbnB1dC5jcmVhdGVkID8gX3RoaXMuX2NyZWF0ZWQgPSBpbnB1dC5jcmVhdGVkIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCdjcmVhdGVkJyk7XHJcbiAgICBpbnB1dC5yZXBvcnRlciA/IF90aGlzLl9yZXBvcnRlciA9IGlucHV0LnJlcG9ydGVyIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCdyZXBvcnRlcicpO1xyXG4gICAgaW5wdXQucnVudGltZSA/IF90aGlzLl9ydW50aW1lID0gaW5wdXQucnVudGltZSA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcigncnVudGltZScpO1xyXG4gICAgaW5wdXQuc2NoZW1hID8gX3RoaXMuX3NjaGVtYSA9IGlucHV0LnNjaGVtYSA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcignc2NoZW1hJyk7XHJcbiAgICBpbnB1dC5uYW1lID8gX3RoaXMuX25hbWUgPSBpbnB1dC5uYW1lIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCduYW1lJyk7XHJcblxyXG5cclxuICAgIF90aGlzLl9zdGF0dXMgPSBpbnB1dC5zdGF0dXM7XHJcblxyXG4gICAgaWYgKGlucHV0LmRhdGEpIHtcclxuICAgICAgX3RoaXMuX3N5bmNPYmogPSBuZXcgU3luY09iamVjdChpbnB1dC5kYXRhKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIF90aGlzLl9zeW5jT2JqID0gbmV3IFN5bmNPYmplY3Qoe30pO1xyXG4gICAgfVxyXG4gICAgX3RoaXMuX2NoaWxkcmVucyA9IGlucHV0LmNoaWxkcmVucztcclxuXHJcbiAgICAvL1RPRE86IEZvciBGdXJ0aGVyIFN0dWR5XHJcbiAgICBfdGhpcy5fbXV0dWFsQXV0aGVudGljYXRpb24gPSBpbnB1dC5tdXR1YWw7XHJcblxyXG4gICAgX3RoaXMuX3ZlcnNpb24gPSAwO1xyXG4gICAgX3RoaXMuX2NoaWxkSWQgPSAwO1xyXG4gICAgX3RoaXMuX2NoaWxkcmVuTGlzdGVuZXJzID0gW107XHJcblxyXG4gICAgX3RoaXMuX3Jlc3VtZWQgPSBpbnB1dC5yZXN1bWU7XHJcblxyXG4gICAgaWYgKGlucHV0LnJlc3VtZSkgeyBfdGhpcy5fdmVyc2lvbiA9IGlucHV0LnZlcnNpb247IH1cclxuXHJcbiAgICBfdGhpcy5fb3duZXIgPSBpbnB1dC5zeW5jaGVyLl9vd25lcjtcclxuICAgIF90aGlzLl9idXMgPSBpbnB1dC5zeW5jaGVyLl9idXM7XHJcblxyXG4gICAgaWYgKGlucHV0LmRlc2NyaXB0aW9uKSBfdGhpcy5fZGVzY3JpcHRpb24gPSBpbnB1dC5kZXNjcmlwdGlvbjtcclxuICAgIGlmIChpbnB1dC50YWdzKSBfdGhpcy5fdGFncyA9IGlucHV0LnRhZ3M7XHJcbiAgICBpZiAoaW5wdXQucmVzb3VyY2VzKSBfdGhpcy5fcmVzb3VyY2VzID0gaW5wdXQucmVzb3VyY2VzO1xyXG4gICAgaWYgKGlucHV0Lm9ic2VydmVyU3RvcmFnZSkgX3RoaXMuX29ic2VydmVyU3RvcmFnZSA9IGlucHV0Lm9ic2VydmVyU3RvcmFnZTtcclxuICAgIGlmIChpbnB1dC5wdWJsaWNPYnNlcnZhdGlvbikgX3RoaXMuX3B1YmxpY09ic2VydmF0aW9uID0gaW5wdXQucHVibGljT2JzZXJ2YXRpb247XHJcblxyXG4gICAgX3RoaXMuX21ldGFkYXRhID0gT2JqZWN0LmFzc2lnbihpbnB1dCk7XHJcbiAgICBfdGhpcy5fbWV0YWRhdGEubGFzdE1vZGlmaWVkID0gX3RoaXMuX21ldGFkYXRhLmNyZWF0ZWQ7XHJcblxyXG4gICAgZGVsZXRlIF90aGlzLl9tZXRhZGF0YS5kYXRhO1xyXG4gICAgZGVsZXRlIF90aGlzLl9tZXRhZGF0YS5zeW5jaGVyO1xyXG4gICAgZGVsZXRlIF90aGlzLl9tZXRhZGF0YS5hdXRob3Jpc2U7XHJcblxyXG4gIH1cclxuXHJcbiAgX2dldExhc3RDaGlsZElkKCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBsZXQgY2hpbGRJZEludCA9IDA7XHJcbiAgICBsZXQgY2hpbGRJZFN0cmluZyA9IF90aGlzLl9vd25lciArICcjJyArIGNoaWxkSWRJbnQ7XHJcblxyXG5cclxuICAgIE9iamVjdC5rZXlzKF90aGlzLl9jaGlsZHJlbnMpLmZpbHRlcigoa2V5KSA9PiB7XHJcbiAgICAgIGlmIChfdGhpcy5fY2hpbGRyZW5zW2tleV0uY2hpbGRJZCA+IGNoaWxkSWRTdHJpbmcpIHtcclxuICAgICAgICBjaGlsZElkU3RyaW5nID0gX3RoaXMuX2NoaWxkcmVuc1trZXldLmNoaWxkSWQ7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBjaGlsZElkSW50ID0gTnVtYmVyKGNoaWxkSWRTdHJpbmcuc3BsaXQoJyMnKVsxXSk7XHJcbiAgfVxyXG5cclxuICBfYWxsb2NhdGVMaXN0ZW5lcnMoKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIGxldCBjaGlsZEJhc2VVUkwgPSBfdGhpcy5fdXJsICsgJy9jaGlsZHJlbi8nO1xyXG4gICAgY29uc29sZS5sb2coJ1tEYXRhIE9iamVjdCAtIEFsbG9jYXRlTGlzdGVuZXJzXSAtICcsIF90aGlzLl9jaGlsZHJlbnMpO1xyXG4gICAgaWYgKF90aGlzLl9jaGlsZHJlbnMpIHtcclxuICAgICAgX3RoaXMuX2NoaWxkcmVucy5mb3JFYWNoKChjaGlsZCkgPT4ge1xyXG4gICAgICAgIGxldCBjaGlsZFVSTCA9IGNoaWxkQmFzZVVSTCArIGNoaWxkO1xyXG4gICAgICAgIGxldCBsaXN0ZW5lciA9IF90aGlzLl9idXMuYWRkTGlzdGVuZXIoY2hpbGRVUkwsIChtc2cpID0+IHtcclxuICAgICAgICAgIC8vaWdub3JlIG1zZyBzZW50IGJ5IGhpbXNlbGZcclxuICAgICAgICAgIGlmIChtc2cuZnJvbSAhPT0gdGhpcy5fb3duZXIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGFPYmplY3QtQ2hpbGRyZW4tUkNWOiAnLCBtc2cpO1xyXG4gICAgICAgICAgICBzd2l0Y2ggKG1zZy50eXBlKSB7XHJcbiAgICAgICAgICAgICAgY2FzZSAnY3JlYXRlJzogX3RoaXMuX29uQ2hpbGRDcmVhdGUobXNnKTsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgY2FzZSAnZGVsZXRlJzogY29uc29sZS5sb2cobXNnKTsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgZGVmYXVsdDogX3RoaXMuX2NoYW5nZUNoaWxkcmVuKG1zZyk7IGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIF90aGlzLl9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfcmVsZWFzZUxpc3RlbmVycygpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgX3RoaXMuX2NoaWxkcmVuTGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XHJcbiAgICAgIGxpc3RlbmVyLnJlbW92ZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKF90aGlzLl9jaGlsZHJlbk9iamVjdHMpIHtcclxuICAgICAgT2JqZWN0LmtleXMoX3RoaXMuX2NoaWxkcmVuT2JqZWN0cykuZm9yRWFjaCgoa2V5KSA9PiB7XHJcbiAgICAgICAgX3RoaXMuX2NoaWxkcmVuT2JqZWN0c1trZXldLl9yZWxlYXNlTGlzdGVuZXJzKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICpcclxuICAgKi9cclxuICByZXN1bWVDaGlsZHJlbnMoY2hpbGRyZW5zKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIGxldCBjaGlsZElkU3RyaW5nID0gdGhpcy5fb3duZXIgKyAnIycgKyB0aGlzLl9jaGlsZElkO1xyXG5cclxuICAgIGlmIChjaGlsZHJlbnMgJiYgIV90aGlzLl9jaGlsZHJlbk9iamVjdHMpIHtcclxuICAgICAgX3RoaXMuX2NoaWxkcmVuT2JqZWN0cyA9IHt9O1xyXG4gICAgfVxyXG5cclxuICAgIC8vc2V0dXAgY2hpbGRyZW5zIGRhdGEgZnJvbSBzdWJzY3JpcHRpb25cclxuICAgIE9iamVjdC5rZXlzKGNoaWxkcmVucykuZm9yRWFjaCgoY2hpbGRyZW5SZXNvdXJjZSkgPT4ge1xyXG4gICAgICBsZXQgY2hpbGRyZW4gPSBjaGlsZHJlbnNbY2hpbGRyZW5SZXNvdXJjZV07XHJcblxyXG4gICAgICBPYmplY3Qua2V5cyhjaGlsZHJlbikuZm9yRWFjaCgoY2hpbGRJZCkgPT4ge1xyXG4gICAgICAgIGxldCBjaGlsZElucHV0ID0gY2hpbGRyZW5bY2hpbGRJZF0udmFsdWU7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1tEYXRhT2JqZWN0LnJlc3VtZUNoaWxkcmVuc10gbmV3IERhdGFPYmplY3RDaGlsZDogJywgY2hpbGRyZW5SZXNvdXJjZSwgY2hpbGRyZW4sIGNoaWxkSW5wdXQpO1xyXG4gICAgICAgIGNoaWxkSW5wdXQucGFyZW50T2JqZWN0ID0gX3RoaXM7XHJcbiAgICAgICAgY2hpbGRJbnB1dC5wYXJlbnQgPSBfdGhpcy5fdXJsO1xyXG4gICAgICAgIF90aGlzLl9jaGlsZHJlbk9iamVjdHNbY2hpbGRJZF0gPSBuZXcgRGF0YU9iamVjdENoaWxkKGNoaWxkSW5wdXQpO1xyXG4gICAgICAgIF90aGlzLl9jaGlsZHJlbk9iamVjdHNbY2hpbGRJZF0uaWRlbnRpdHkgPSBjaGlsZHJlbltjaGlsZElkXS5pZGVudGl0eTtcclxuXHJcbiAgICAgICAgaWYgKGNoaWxkSWQgPiBjaGlsZElkU3RyaW5nKSB7XHJcbiAgICAgICAgICBjaGlsZElkU3RyaW5nID0gY2hpbGRJZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdFJlcG9ydGVyLnJlc3VtZUNoaWxkcmVuc10gLSByZXN1bWVkOiAnLCB0aGlzLl9jaGlsZHJlbk9iamVjdHNbY2hpbGRJZF0pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2NoaWxkSWQgPSBOdW1iZXIoY2hpbGRJZFN0cmluZy5zcGxpdCgnIycpWzFdKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEFsbCBNZXRhZGF0YSBhYm91dCB0aGUgRGF0YSBPYmplY3RcclxuICAgKiBAdHlwZSB7T2JqZWN0fSAtXHJcbiAgICovXHJcblxyXG4gIGdldCBtZXRhZGF0YSgpIHsgcmV0dXJuIHRoaXMuX21ldGFkYXRhOyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE9iamVjdCBVUkwgb2YgcmVwb3J0ZXIgb3Igb2JzZXJ2ZXJcclxuICAgKiBAdHlwZSB7T2JqZWN0VVJMfVxyXG4gICAqL1xyXG4gIGdldCB1cmwoKSB7IHJldHVybiB0aGlzLl91cmw7IH1cclxuXHJcbiAgLyoqXHJcbiAgICogT2JqZWN0IHNjaGVtYSBVUkwgKHRoaXMgZmllbGQgaXMgbm90IHlldCBzdGFibGUsIGFuZCBpcyBzdWJzamVjdCB0byBjaGFuZ2UpXHJcbiAgICogQHR5cGUge1NjaGVtYVVSTH1cclxuICAgKi9cclxuICBnZXQgc2NoZW1hKCkgeyByZXR1cm4gdGhpcy5fc2NoZW1hOyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0YXR1cyBvZiB0aGUgcmVwb3J0ZXIgb3Igb2JzZXJ2ZXIgY29ubmVjdGlvbiAodGhpcyBmaWVsZCBpcyBub3QgeWV0IHN0YWJsZSwgYW5kIGlzIHN1YnNqZWN0IHRvIGNoYW5nZSlcclxuICAgKiBAdHlwZSB7U3RhdHVzfSAtIEVudW0gb2Y6IG9uIHwgcGF1c2VkXHJcbiAgICovXHJcbiAgZ2V0IHN0YXR1cygpIHsgcmV0dXJuIHRoaXMuX3N0YXR1czsgfVxyXG5cclxuICAvKipcclxuICAgKiBEYXRhIHN0cnVjdHVyZSB0byBiZSBzeW5jaHJvbml6ZWQuXHJcbiAgICogQHR5cGUge0pTT059IC0gSlNPTiBzdHJ1Y3R1cmUgdGhhdCBzaG91bGQgZm9sbG93IHRoZSBkZWZpbmVkIHNjaGVtYSwgaWYgYW55LlxyXG4gICAqL1xyXG4gIGdldCBkYXRhKCkgeyByZXR1cm4gdGhpcy5fc3luY09iai5kYXRhOyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEFsbCBjcmVhdGVkIGNoaWxkcmVuJ3Mgc2luY2UgdGhlIHN1YnNjcmlwdGlvbiwgZG9lc24ndCBjb250YWluIGFsbCBjaGlsZHJlbidzIHNpbmNlIHJlcG9ydGVyIGNyZWF0aW9uLlxyXG4gICAqIEB0eXBlIHtPYmplY3Q8Q2hpbGRJZCwgRGF0YU9iamVjdENoaWxkPn1cclxuICAgKi9cclxuICBnZXQgY2hpbGRyZW5zKCkgeyByZXR1cm4gdGhpcy5fY2hpbGRyZW5PYmplY3RzOyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBpZ25vcmVcclxuICAgKi9cclxuICBwYXVzZSgpIHtcclxuICAgIC8vVE9ETzogdGhpcyBmZWF0dXJlIG5lZWRzIG1vcmUgYW5hbGlzZVxyXG4gICAgdGhyb3cgJ05vdCBpbXBsZW1lbnRlZCc7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAaWdub3JlXHJcbiAgICovXHJcbiAgcmVzdW1lKCkge1xyXG4gICAgLy9UT0RPOiB0aGlzIGZlYXR1cmUgbmVlZHMgbW9yZSBhbmFsaXNlXHJcbiAgICB0aHJvdyAnTm90IGltcGxlbWVudGVkJztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBpZ25vcmVcclxuICAgKi9cclxuICBzdG9wKCkge1xyXG4gICAgLy9UT0RPOiBzaG91bGQgcmVtb3ZlIHRoZSBzdWJzY3JpcHRpb24gYW5kIHNlbmQgbWVzc2FnZSB1bnN1YnNjcmliZT9cclxuICAgIHRocm93ICdOb3QgaW1wbGVtZW50ZWQnO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGFuZCBhZGQgYSBEYXRhT2JqZWN0Q2hpbGQgdG8gYSBjaGlsZHJlbiBjb2xsZWN0aW9uLlxyXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBjaGlsZHJlbiAtIENoaWxkcmVuIG5hbWUgd2hlcmUgdGhlIGNoaWxkIGlzIGFkZGVkLlxyXG4gICAqIEBwYXJhbSB7SlNPTn0gaW5pdGlhbERhdGEgLSBJbml0aWFsIGRhdGEgb2YgdGhlIGNoaWxkXHJcbiAgICogQHBhcmFtICB7TWVzc2FnZUJvZHlJZGVudGl0eX0gaWRlbnRpdHkgLSAob3B0aW9uYWwpIGlkZW50aXR5IGRhdGEgdG8gYmUgYWRkZWQgdG8gaWRlbnRpdHkgdGhlIHVzZXIgcmVwb3J0ZXIuIFRvIGJlIHVzZWQgZm9yIGxlZ2FjeSBpZGVudGl0aWVzLlxyXG4gICAqIEBwYXJhbSAge1N5bmNDaGlsZE1ldGFkYXRhfSBpbnB1dCAtIChvcHRpb25hbCkgQWxsIGFkZGl0aW9uYWwgbWV0YWRhdGEgYWJvdXQgdGhlIERhdGFPYmplY3RDaGlsZC5cclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPERhdGFPYmplY3RDaGlsZD59IC0gUmV0dXJuIFByb21pc2UgdG8gYSBuZXcgRGF0YU9iamVjdENoaWxkLlxyXG4gICAqL1xyXG5cclxuICBhZGRDaGlsZChjaGlsZHJlbiwgaW5pdGlhbERhdGEsIGlkZW50aXR5LCBpbnB1dCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICAvL3JldHVybnMgcHJvbWlzZSwgaW4gdGhlIGZ1dHVyZSwgdGhlIEFQSSBtYXkgY2hhbmdlIHRvIGFzeW5jaHJvbm91cyBjYWxsXHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcclxuXHJcbiAgICAgIGxldCBjaGlsZElucHV0ICA9IE9iamVjdC5hc3NpZ24oe30sIGlucHV0KTtcclxuXHJcbiAgICAgIC8vY3JlYXRlIG5ldyBjaGlsZCB1bmlxdWUgSUQsIGJhc2VkIG9uIGh5cGVydHlVUkxcclxuICAgICAgX3RoaXMuX2NoaWxkSWQrKztcclxuICAgICAgY2hpbGRJbnB1dC51cmwgPSBfdGhpcy5fb3duZXIgKyAnIycgKyBfdGhpcy5fY2hpbGRJZDtcclxuICAgICAgbGV0IG1zZ0NoaWxkUGF0aCA9IF90aGlzLl91cmwgKyAnL2NoaWxkcmVuLycgKyBjaGlsZHJlbjtcclxuXHJcbiAgICAgIGNoaWxkSW5wdXQucGFyZW50T2JqZWN0ID0gX3RoaXM7XHJcbiAgICAgIGNoaWxkSW5wdXQuZGF0YSA9IGluaXRpYWxEYXRhO1xyXG4gICAgICBjaGlsZElucHV0LnJlcG9ydGVyID0gX3RoaXMuX293bmVyO1xyXG4gICAgICBjaGlsZElucHV0LmNyZWF0ZWQgPSAobmV3IERhdGUpLnRvSVNPU3RyaW5nKCk7XHJcbiAgICAgIGNoaWxkSW5wdXQucnVudGltZSA9IF90aGlzLl9ydW50aW1lO1xyXG4gICAgICBjaGlsZElucHV0LnNjaGVtYSA9IF90aGlzLl9zY2hlbWE7XHJcbiAgICAgIGNoaWxkSW5wdXQucGFyZW50ID0gX3RoaXMudXJsO1xyXG5cclxuICAgICAgbGV0IG5ld0NoaWxkID0gbmV3IERhdGFPYmplY3RDaGlsZChjaGlsZElucHV0KTtcclxuXHJcbiAgICAgIGxldCBib2R5VmFsdWUgPSBuZXdDaGlsZC5tZXRhZGF0YTtcclxuICAgICAgYm9keVZhbHVlLmRhdGEgPSBpbml0aWFsRGF0YTtcclxuXHJcbiAgICAgIC8vRkxPVy1PVVQ6IHRoaXMgbWVzc2FnZSB3aWxsIGJlIHNlbnQgZGlyZWN0bHkgdG8gYSByZXNvdXJjZSBjaGlsZCBhZGRyZXNzOiBNZXNzYWdlQnVzXHJcbiAgICAgIGxldCByZXF1ZXN0TXNnID0ge1xyXG4gICAgICAgIHR5cGU6ICdjcmVhdGUnLCBmcm9tOiBfdGhpcy5fb3duZXIsIHRvOiBtc2dDaGlsZFBhdGgsXHJcbiAgICAgICAgYm9keTogeyByZXNvdXJjZTogY2hpbGRJbnB1dC51cmwsIHZhbHVlOiBib2R5VmFsdWUgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgaWYgKGlkZW50aXR5KSAgICAgIHtcclxuICAgICAgICBuZXdDaGlsZC5pZGVudGl0eSA9IGlkZW50aXR5O1xyXG4gICAgICAgIHJlcXVlc3RNc2cuYm9keS5pZGVudGl0eSA9IGlkZW50aXR5O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvL1RPRE86IEZvciBGdXJ0aGVyIFN0dWR5XHJcbiAgICAgIGlmICghX3RoaXMuX211dHVhbEF1dGhlbnRpY2F0aW9uKSByZXF1ZXN0TXNnLmJvZHkubXV0dWFsQXV0aGVudGljYXRpb24gPSBfdGhpcy5fbXV0dWFsQXV0aGVudGljYXRpb247XHJcblxyXG4gICAgICBsZXQgbXNnSWQgPSBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHJlcXVlc3RNc2cpO1xyXG5cclxuICAgICAgY29uc29sZS5sb2coJ1tEYXRhT2JqZWN0LmFkZENoaWxkXSBhZGRlZCAnLCBuZXdDaGlsZCwgbXNnSWQsIGJvZHlWYWx1ZSk7XHJcblxyXG4gICAgICBuZXdDaGlsZC5vbkNoYW5nZSgoZXZlbnQpID0+IHtcclxuICAgICAgICBfdGhpcy5fb25DaGFuZ2UoZXZlbnQsIHsgcGF0aDogbXNnQ2hpbGRQYXRoLCBjaGlsZElkOiBjaGlsZElucHV0LnVybCB9KTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoIV90aGlzLl9jaGlsZHJlbk9iamVjdHMpIHsgX3RoaXMuX2NoaWxkcmVuT2JqZWN0cyA9IHt9OyB9XHJcblxyXG4gICAgICBfdGhpcy5fY2hpbGRyZW5PYmplY3RzW2NoaWxkSW5wdXQudXJsXSA9IG5ld0NoaWxkO1xyXG5cclxuICAgICAgcmVzb2x2ZShuZXdDaGlsZCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldHVwIHRoZSBjYWxsYmFjayB0byBwcm9jZXNzIGNyZWF0ZSBhbmQgZGVsZXRlIG9mIGNoaWxkcmVucy5cclxuICAgKiBAcGFyYW0ge2Z1bmN0aW9uKGV2ZW50OiBNc2dFdmVudCl9IGNhbGxiYWNrXHJcbiAgICovXHJcbiAgb25BZGRDaGlsZChjYWxsYmFjaykge1xyXG4gICAgdGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXIgPSBjYWxsYmFjaztcclxuICB9XHJcblxyXG4gIC8vRkxPVy1JTjogbWVzc2FnZSByZWNlaXZlZCBmcm9tIGEgcmVtb3RlIERhdGFPYmplY3QgLT4gYWRkQ2hpbGRcclxuICBfb25DaGlsZENyZWF0ZShtc2cpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcbiAgICBsZXQgY2hpbGRJbnB1dCA9IGRlZXBDbG9uZShtc2cuYm9keS52YWx1ZSk7XHJcbiAgICBjaGlsZElucHV0LnBhcmVudE9iamVjdCA9IF90aGlzO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdC5fb25DaGlsZENyZWF0ZV0gcmVjZWl2ZWRCeSAnICsgX3RoaXMuX293bmVyICsgJyA6ICcsIG1zZyk7XHJcbiAgICBsZXQgbmV3Q2hpbGQgPSBuZXcgRGF0YU9iamVjdENoaWxkKGNoaWxkSW5wdXQpO1xyXG4gICAgbmV3Q2hpbGQuaWRlbnRpdHkgPSBtc2cuYm9keS5pZGVudGl0eTtcclxuXHJcbiAgICBpZiAoIV90aGlzLl9jaGlsZHJlbk9iamVjdHMpIHsgX3RoaXMuX2NoaWxkcmVuT2JqZWN0cyA9IHt9OyB9XHJcblxyXG4gICAgX3RoaXMuX2NoaWxkcmVuT2JqZWN0c1tjaGlsZElucHV0LnVybF0gPSBuZXdDaGlsZDtcclxuXHJcbiAgICAvL3RvZG86IHJlbW92ZSByZXNwb25zZSBiZWxvd1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIC8vRkxPVy1PVVQ6IHdpbGwgZmxvdyB0byBEYXRhT2JqZWN0Q2hpbGQgLT4gX29uUmVzcG9uc2VcclxuICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh7XHJcbiAgICAgICAgaWQ6IG1zZy5pZCwgdHlwZTogJ3Jlc3BvbnNlJywgZnJvbTogbXNnLnRvLCB0bzogbXNnLmZyb20sXHJcbiAgICAgICAgYm9keTogeyBjb2RlOiAyMDAsIHNvdXJjZTogX3RoaXMuX293bmVyIH1cclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBsZXQgZXZlbnQgPSB7XHJcbiAgICAgIHR5cGU6IG1zZy50eXBlLFxyXG4gICAgICBmcm9tOiBtc2cuZnJvbSxcclxuICAgICAgdXJsOiBtc2cudG8sXHJcbiAgICAgIHZhbHVlOiBtc2cuYm9keS52YWx1ZS5kYXRhLFxyXG4gICAgICBjaGlsZElkOiBjaGlsZElucHV0LnVybCxcclxuICAgICAgaWRlbnRpdHk6IG1zZy5ib2R5LmlkZW50aXR5XHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChfdGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXIpIHtcclxuICAgICAgY29uc29sZS5sb2coJ0FERC1DSElMRFJFTi1FVkVOVDogJywgZXZlbnQpO1xyXG4gICAgICBfdGhpcy5fb25BZGRDaGlsZHJlbkhhbmRsZXIoZXZlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9zZW5kIGRlbHRhIG1lc3NhZ2VzIHRvIHN1YnNjcmlwdGlvbnNcclxuICBfb25DaGFuZ2UoZXZlbnQsIGNoaWxkSW5mbykge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fbWV0YWRhdGEubGFzdE1vZGlmaWVkID0gKG5ldyBEYXRlKS50b0lTT1N0cmluZygpO1xyXG5cclxuICAgIF90aGlzLl92ZXJzaW9uKys7XHJcblxyXG4gICAgaWYgKF90aGlzLl9zdGF0dXMgPT09ICdsaXZlJykge1xyXG4gICAgICAvL0ZMT1ctT1VUOiB0aGlzIG1lc3NhZ2Ugd2lsbCBiZSBzZW50IGRpcmVjdGx5IHRvIGEgcmVzb3VyY2UgY2hhbmdlcyBhZGRyZXNzOiBNZXNzYWdlQnVzXHJcbiAgICAgIGxldCBjaGFuZ2VNc2cgPSB7XHJcbiAgICAgICAgdHlwZTogJ3VwZGF0ZScsIGZyb206IF90aGlzLl91cmwsIHRvOiBfdGhpcy5fdXJsICsgJy9jaGFuZ2VzJyxcclxuICAgICAgICBib2R5OiB7IHZlcnNpb246IF90aGlzLl92ZXJzaW9uLCBzb3VyY2U6IF90aGlzLl9vd25lciwgYXR0cmlidXRlOiBldmVudC5maWVsZCwgbGFzdE1vZGlmaWVkOiBfdGhpcy5fbWV0YWRhdGEubGFzdE1vZGlmaWVkIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdCAtIF9vbkNoYW5nZV0gLSAnLCBldmVudCwgY2hpbGRJbmZvLCBjaGFuZ2VNc2cpO1xyXG5cclxuICAgICAgaWYgKGV2ZW50Lm9UeXBlID09PSBPYmplY3RUeXBlLk9CSkVDVCkge1xyXG4gICAgICAgIGlmIChldmVudC5jVHlwZSAhPT0gQ2hhbmdlVHlwZS5SRU1PVkUpIHtcclxuICAgICAgICAgIGNoYW5nZU1zZy5ib2R5LnZhbHVlID0gZXZlbnQuZGF0YTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY2hhbmdlTXNnLmJvZHkuYXR0cmlidXRlVHlwZSA9IGV2ZW50Lm9UeXBlO1xyXG4gICAgICAgIGNoYW5nZU1zZy5ib2R5LnZhbHVlID0gZXZlbnQuZGF0YTtcclxuICAgICAgICBpZiAoZXZlbnQuY1R5cGUgIT09IENoYW5nZVR5cGUuVVBEQVRFKSB7XHJcbiAgICAgICAgICBjaGFuZ2VNc2cuYm9keS5vcGVyYXRpb24gPSBldmVudC5jVHlwZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vY2hpbGRJbmZvIG11c3QgaGF2ZSAocGF0aCwgY2hpbGRJZClcclxuICAgICAgaWYgKGNoaWxkSW5mbykge1xyXG4gICAgICAgIGNoYW5nZU1zZy50byA9IGNoaWxkSW5mby5wYXRoO1xyXG4gICAgICAgIGNoYW5nZU1zZy5ib2R5LnJlc291cmNlID0gY2hpbGRJbmZvLmNoaWxkSWQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vVE9ETzogRm9yIEZ1cnRoZXIgU3R1ZHlcclxuICAgICAgaWYgKCFfdGhpcy5fbXV0dWFsQXV0aGVudGljYXRpb24pIGNoYW5nZU1zZy5ib2R5Lm11dHVhbEF1dGhlbnRpY2F0aW9uID0gX3RoaXMuX211dHVhbEF1dGhlbnRpY2F0aW9uO1xyXG5cclxuICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShjaGFuZ2VNc2cpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9GTE9XLUlOOiBkZWx0YSBtZXNzYWdlIHJlY2VpdmVkIGZyb20gYSByZW1vdGUgRGF0YU9iamVjdFJlcG9ydGVyIG9yIERhdGFPYmplY3RDaGlsZCB3aGVuIGNoYW5naW5nIGRhdGFcclxuICBfY2hhbmdlT2JqZWN0KHN5bmNPYmosIG1zZykge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICAvL1RPRE86IHVwZGF0ZSB2ZXJzaW9uID9cclxuICAgIC8vaG93IHRvIGhhbmRsZSBhbiBpbmNvcnJlY3QgdmVyc2lvbiA/IEV4YW1wbGU6IHJlY2VpdmUgYSB2ZXJzaW9uIDMgd2hlbiB0aGUgb2JzZXJ2ZXIgaXMgaW4gdmVyc2lvbiAxLCB3aGVyZSBpcyB0aGUgdmVyc2lvbiAyID9cclxuICAgIC8vd2lsbCB3ZSBuZWVkIHRvIGNvbmZpcm0gdGhlIHJlY2VwdGlvbiA/XHJcbiAgICBpZiAoX3RoaXMuX3ZlcnNpb24gKyAxIDw9IG1zZy5ib2R5LnZlcnNpb24pIHtcclxuICAgICAgX3RoaXMuX3ZlcnNpb24gPSBtc2cuYm9keS52ZXJzaW9uO1xyXG4gICAgICBsZXQgcGF0aCA9IG1zZy5ib2R5LmF0dHJpYnV0ZTtcclxuICAgICAgbGV0IHZhbHVlID0gZGVlcENsb25lKG1zZy5ib2R5LnZhbHVlKTtcclxuICAgICAgbGV0IGZpbmRSZXN1bHQgPSBzeW5jT2JqLmZpbmRCZWZvcmUocGF0aCk7XHJcblxyXG4gICAgICBpZiAobXNnLmJvZHkubGFzdE1vZGlmaWVkKSB7XHJcbiAgICAgICAgX3RoaXMuX21ldGFkYXRhLmxhc3RNb2RpZmllZCA9IG1zZy5ib2R5Lmxhc3RNb2RpZmllZDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBfdGhpcy5fbWV0YWRhdGEubGFzdE1vZGlmaWVkID0gKG5ldyBEYXRlKS50b0lTT1N0cmluZygpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAobXNnLmJvZHkuYXR0cmlidXRlVHlwZSA9PT0gT2JqZWN0VHlwZS5BUlJBWSkge1xyXG4gICAgICAgIGlmIChtc2cuYm9keS5vcGVyYXRpb24gPT09IENoYW5nZVR5cGUuQUREKSB7XHJcbiAgICAgICAgICBsZXQgYXJyID0gZmluZFJlc3VsdC5vYmo7XHJcbiAgICAgICAgICBsZXQgaW5kZXggPSBmaW5kUmVzdWx0Lmxhc3Q7XHJcbiAgICAgICAgICBBcnJheS5wcm90b3R5cGUuc3BsaWNlLmFwcGx5KGFyciwgW2luZGV4LCAwXS5jb25jYXQodmFsdWUpKTtcclxuICAgICAgICB9IGVsc2UgaWYgKG1zZy5ib2R5Lm9wZXJhdGlvbiA9PT0gQ2hhbmdlVHlwZS5SRU1PVkUpIHtcclxuICAgICAgICAgIGxldCBhcnIgPSBmaW5kUmVzdWx0Lm9iajtcclxuICAgICAgICAgIGxldCBpbmRleCA9IGZpbmRSZXN1bHQubGFzdDtcclxuICAgICAgICAgIGFyci5zcGxpY2UoaW5kZXgsIHZhbHVlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgZmluZFJlc3VsdC5vYmpbZmluZFJlc3VsdC5sYXN0XSA9IHZhbHVlOyAvLyBVUERBVEVcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYgKG1zZy5ib2R5LnZhbHVlKSB7XHJcbiAgICAgICAgICBmaW5kUmVzdWx0Lm9ialtmaW5kUmVzdWx0Lmxhc3RdID0gdmFsdWU7IC8vIFVQREFURSBvciBBRERcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgZGVsZXRlIGZpbmRSZXN1bHQub2JqW2ZpbmRSZXN1bHQubGFzdF07IC8vIFJFTU9WRVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy9UT0RPOiBob3cgdG8gaGFuZGxlIHVuc3luY2hyb25pemVkIHZlcnNpb25zP1xyXG4gICAgICBjb25zb2xlLmxvZygnVU5TWU5DSFJPTklaRUQgVkVSU0lPTjogKGRhdGEgPT4gJyArIF90aGlzLl92ZXJzaW9uICsgJywgbXNnID0+ICcgKyBtc2cuYm9keS52ZXJzaW9uICsgJyknKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vRkxPVy1JTjogbWVzc2FnZSByZWNlaXZlZCBmcm9tIGEgcmVtb3RlIERhdGFPYmplY3RDaGlsZCB3aGVuIGNoYW5naW5nIGRhdGFcclxuICBfY2hhbmdlQ2hpbGRyZW4obXNnKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG4gICAgY29uc29sZS5sb2coJ0NoYW5nZSBjaGlsZHJlbjogJywgX3RoaXMuX293bmVyLCBtc2cpO1xyXG5cclxuICAgIGxldCBjaGlsZElkID0gbXNnLmJvZHkucmVzb3VyY2U7XHJcbiAgICBsZXQgY2hpbGRyZW4gPSBfdGhpcy5fY2hpbGRyZW5PYmplY3RzW2NoaWxkSWRdO1xyXG5cclxuICAgIGlmIChjaGlsZHJlbikge1xyXG4gICAgICBfdGhpcy5fY2hhbmdlT2JqZWN0KGNoaWxkcmVuLl9zeW5jT2JqLCBtc2cpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5sb2coJ05vIGNoaWxkcmVuIGZvdW5kIGZvcjogJywgY2hpbGRJZCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRGF0YU9iamVjdDtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3N5bmNoZXIvRGF0YU9iamVjdC5qcyIsImltcG9ydCAncHJveHktb2JzZXJ2ZSc7XHJcbmltcG9ydCB7cGFyc2VBdHRyaWJ1dGVzfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5jb25zdCBvYmplY3RUeXBlID0ge0FSUkFZOiAnW29iamVjdCBBcnJheV0nLCBPQkpFQ1Q6ICdbb2JqZWN0IE9iamVjdF0nIH07XHJcblxyXG4vKipcclxuICogQGFjY2VzcyBwcml2YXRlXHJcbiAqIE1haW4gY2xhc3MgdGhhdCBtYWludGFpbnMgYSBKU09OIG9iamVjdCwgYW5kIG9ic2VydmVzIGNoYW5nZXMgaW4gdGhpcyBvYmplY3QsIHJlY3Vyc2l2ZWx5LlxyXG4gKiBJbnRlcm5hbCBvYmplY3RzIGFuZCBhcnJheXMgYXJlIGFsc28gb2JzZXJ2ZWQuXHJcbiAqL1xyXG5jbGFzcyBTeW5jT2JqZWN0IHtcclxuXHJcbiAgY29uc3RydWN0b3IoaW5pdGlhbERhdGEpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgX3RoaXMuX29ic2VydmVycyA9IFtdO1xyXG4gICAgX3RoaXMuX2ZpbHRlcnMgPSB7fTtcclxuXHJcbiAgICB0aGlzLl9kYXRhID0gaW5pdGlhbERhdGEgfHwge307XHJcblxyXG4gICAgdGhpcy5faW50ZXJuYWxPYnNlcnZlKHRoaXMuX2RhdGEpO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGRhdGEoKSB7IHJldHVybiB0aGlzLl9kYXRhOyB9XHJcblxyXG4gIG9ic2VydmUoY2FsbGJhY2spIHtcclxuICAgIHRoaXMuX29ic2VydmVycy5wdXNoKGNhbGxiYWNrKTtcclxuICB9XHJcblxyXG4gIGZpbmQocGF0aCkge1xyXG4gICAgbGV0IGxpc3QgPSBwYXJzZUF0dHJpYnV0ZXMocGF0aCk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX2ZpbmRXaXRoU3BsaXQobGlzdCk7XHJcbiAgfVxyXG5cclxuICBmaW5kQmVmb3JlKHBhdGgpIHtcclxuICAgIGxldCByZXN1bHQgPSB7fTtcclxuICAgIGxldCBsaXN0ID0gcGFyc2VBdHRyaWJ1dGVzKHBhdGgpO1xyXG4gICAgcmVzdWx0Lmxhc3QgPSBsaXN0LnBvcCgpO1xyXG4gICAgcmVzdWx0Lm9iaiA9IHRoaXMuX2ZpbmRXaXRoU3BsaXQobGlzdCk7XHJcblxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcblxyXG4gIF9maW5kV2l0aFNwbGl0KGxpc3QpIHtcclxuICAgIGxldCBvYmogPSB0aGlzLl9kYXRhO1xyXG4gICAgbGlzdC5mb3JFYWNoKCh2YWx1ZSkgPT4ge1xyXG4gICAgICBvYmogPSBvYmpbdmFsdWVdO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIG9iajtcclxuICB9XHJcblxyXG4gIF9pbnRlcm5hbE9ic2VydmUob2JqZWN0KSB7XHJcblxyXG4gICAgbGV0IGhhbmRsZXIgPSAoY2hhbmdlc2V0KSA9PiB7XHJcblxyXG4gICAgICBjaGFuZ2VzZXQuZXZlcnkoKGNoYW5nZSkgPT4ge1xyXG4gICAgICAgIHRoaXMuX29uQ2hhbmdlcyhjaGFuZ2UpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuX2RhdGEgPSBPYmplY3QuZGVlcE9ic2VydmUob2JqZWN0LCBoYW5kbGVyKTtcclxuXHJcbiAgfVxyXG5cclxuICBfZmlyZUV2ZW50KGV2ZW50KSB7XHJcbiAgICB0aGlzLl9vYnNlcnZlcnMuZm9yRWFjaCgoY2FsbGJhY2spID0+IHtcclxuICAgICAgY2FsbGJhY2soZXZlbnQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfb25DaGFuZ2VzKGNoYW5nZSkge1xyXG5cclxuICAgIGxldCBvYmogPSBjaGFuZ2Uub2JqZWN0O1xyXG4gICAgbGV0IG9ialR5cGU7XHJcblxyXG4gICAgaWYgKG9iai5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0KSB7XHJcbiAgICAgIG9ialR5cGUgPSBPYmplY3RUeXBlLk9CSkVDVDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAob2JqLmNvbnN0cnVjdG9yID09PSBBcnJheSkge1xyXG4gICAgICBvYmpUeXBlID0gT2JqZWN0VHlwZS5BUlJBWTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgZmllbGRTdHJpbmcgPSBjaGFuZ2Uua2V5cGF0aDtcclxuXHJcbiAgICAvLyBjb25zb2xlLmxvZygnRmllbGQ6JywgZmllbGRTdHJpbmcpO1xyXG4gICAgLy8gY29uc29sZS5sb2coJ3R5cGU6JywgY2hhbmdlLnR5cGUpO1xyXG5cclxuICAgIC8vbGV0IG9sZFZhbHVlID0gY2hhbmdlLm9sZFZhbHVlO1xyXG4gICAgbGV0IG5ld1ZhbHVlID0gb2JqW2NoYW5nZS5uYW1lXTtcclxuXHJcbiAgICAvLyBjb25zb2xlLmluZm8oY2hhbmdlLnR5cGUgKyAnIHwgRmllbGQ6ICcgKyBmaWVsZFN0cmluZyArICcgfCBOZXcgVmFsdWU6JywgSlNPTi5zdHJpbmdpZnkobmV3VmFsdWUpLCBmaWVsZFN0cmluZy5pbmNsdWRlcygnbGVuZ3RoJykpO1xyXG5cclxuICAgIGlmIChjaGFuZ2UudHlwZSA9PT0gJ3VwZGF0ZScgJiYgIWZpZWxkU3RyaW5nLmluY2x1ZGVzKCcubGVuZ3RoJykpIHtcclxuICAgICAgdGhpcy5fZmlyZUV2ZW50KHtcclxuICAgICAgICBjVHlwZTogQ2hhbmdlVHlwZS5VUERBVEUsXHJcbiAgICAgICAgb1R5cGU6IG9ialR5cGUsXHJcbiAgICAgICAgZmllbGQ6IGZpZWxkU3RyaW5nLFxyXG4gICAgICAgIGRhdGE6IG5ld1ZhbHVlXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChjaGFuZ2UudHlwZSA9PT0gJ2FkZCcpIHtcclxuICAgICAgdGhpcy5fZmlyZUV2ZW50KHtcclxuICAgICAgICBjVHlwZTogQ2hhbmdlVHlwZS5BREQsXHJcbiAgICAgICAgb1R5cGU6IG9ialR5cGUsXHJcbiAgICAgICAgZmllbGQ6IGZpZWxkU3RyaW5nLFxyXG4gICAgICAgIGRhdGE6IG5ld1ZhbHVlXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChjaGFuZ2UudHlwZSA9PT0gJ2RlbGV0ZScpIHtcclxuICAgICAgdGhpcy5fZmlyZUV2ZW50KHtcclxuICAgICAgICBjVHlwZTogQ2hhbmdlVHlwZS5SRU1PVkUsXHJcbiAgICAgICAgb1R5cGU6IG9ialR5cGUsXHJcbiAgICAgICAgZmllbGQ6IGZpZWxkU3RyaW5nXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBsZXQgQ2hhbmdlVHlwZSA9IHtVUERBVEU6ICd1cGRhdGUnLCBBREQ6ICdhZGQnLCBSRU1PVkU6ICdyZW1vdmUnfTtcclxuZXhwb3J0IGxldCBPYmplY3RUeXBlID0ge09CSkVDVDogJ29iamVjdCcsIEFSUkFZOiAnYXJyYXknfTtcclxuZXhwb3J0IGRlZmF1bHQgU3luY09iamVjdDtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3N5bmNoZXIvUHJveHlPYmplY3QuanMiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9nZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mXCIpO1xuXG52YXIgX2dldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldFByb3RvdHlwZU9mKTtcblxudmFyIF9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yXCIpO1xuXG52YXIgX2dldE93blByb3BlcnR5RGVzY3JpcHRvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlO1xuICB2YXIgZGVzYyA9ICgwLCBfZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yMi5kZWZhdWx0KShvYmplY3QsIHByb3BlcnR5KTtcblxuICBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIHBhcmVudCA9ICgwLCBfZ2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKG9iamVjdCk7XG5cbiAgICBpZiAocGFyZW50ID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHtcbiAgICByZXR1cm4gZGVzYy52YWx1ZTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7XG5cbiAgICBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTtcbiAgfVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldC5qc1xuLy8gbW9kdWxlIGlkID0gMTI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qKlxyXG4qIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQVxyXG4qIENvcHlyaWdodCAyMDE2IElORVNDLUlEXHJcbiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMXHJcbiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlZcclxuKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHXHJcbiogQ29weXJpZ2h0IDIwMTYgQXBpemVlXHJcbiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU5cclxuKlxyXG4qIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4qIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4qXHJcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuKlxyXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4qIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4qKi9cclxuaW1wb3J0IHsgZGVlcENsb25lLCBkaXZpZGVVUkwgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5pbXBvcnQgRGF0YU9iamVjdFJlcG9ydGVyIGZyb20gJy4vRGF0YU9iamVjdFJlcG9ydGVyJztcclxuaW1wb3J0IERhdGFPYmplY3RPYnNlcnZlciBmcm9tICcuL0RhdGFPYmplY3RPYnNlcnZlcic7XHJcbmltcG9ydCBEYXRhUHJvdmlzaW9uYWwgZnJvbSAnLi9EYXRhUHJvdmlzaW9uYWwnO1xyXG5cclxuLyoqXHJcbiogVGhlIG1haW4gY2xhc3MgZm9yIHRoZSBzeW5jaGVyIHBhY2thZ2UuXHJcbiogVGhlIFN5bmNoZXIgaXMgYSBzaW5nbGV0b24gY2xhc3MgcGVyIEh5cGVydHkvVVJMIGFuZCBpdCBpcyB0aGUgb3duZXIgb2YgYWxsIGNyZWF0ZWQgRGF0YSBTeW5jIE9iamVjdHMgYWNjb3JkaW5nIHRvIHRoZSBSZXBvcnRlciAtIE9ic2VydmVyIHBhdHRlcm4uXHJcbiogTWFpbiBmdW5jdGlvbmFsaXR5IGlzIHRvIGNyZWF0ZSByZXBvcnRlcnMgYW5kIHRvIHN1YnNjcmliZSB0byBleGlzdGluZyBvbmVzLlxyXG4qL1xyXG5jbGFzcyBTeW5jaGVyIHtcclxuICAvKiBwcml2YXRlXHJcbiAgX293bmVyOiBVUkxcclxuICBfYnVzOiBNaW5pQnVzXHJcblxyXG4gIF9zdWJVUkw6IFVSTFxyXG5cclxuICBfcmVwb3J0ZXJzOiA8dXJsOiBEYXRhT2JqZWN0UmVwb3J0ZXI+XHJcbiAgX29ic2VydmVyczogPHVybDogRGF0YU9iamVjdE9ic2VydmVyPlxyXG4gIF9wcm92aXNpb25hbHM6IDx1cmw6IERhdGFQcm92aXNpb25hbD5cclxuXHJcbiAgLS0tLWV2ZW50IGhhbmRsZXJzLS0tLVxyXG4gIF9vbk5vdGlmaWNhdGlvbkhhbmRsZXI6IChldmVudCkgPT4gdm9pZFxyXG4gIF9vblJlc3VtZTogKGV2ZW50KSA9PiB2b2lkXHJcbiAgKi9cclxuXHJcbiAgLyoqXHJcbiAgKiBDb25zdHJ1Y3RvciB0aGF0IHNob3VsZCBiZSB1c2VkIGJ5IHRoZSBIeXBlcnR5IG93bmVyXHJcbiAgKiBAcGFyYW0ge0h5cGVydHlVUkx9IG93bmVyIC0gSHlwZXJ0eSBVUkwgb3duZXIuIEFuIFVSTCBhbGxvY2F0ZWQgYnkgdGhlIHJ1bnRpbWUgdGhhdCB1bmlxdWVseSBpZGVudGlmaWVzIHRoZSBIeXBlcnR5LlxyXG4gICogQHBhcmFtIHtNaW5pQnVzfSBidXMgLSBBbiBpbnN0YW5jZSBvZiB0aGUgTWluaUJ1cyBwcm92aWRlZCBpbiB0aGUgc2FuZGJveC4gV2hlbiBhbiBvYmplY3QgKFJlcG9ydGVyIG9yIE9ic2VydmVkKSBpcyBjcmVhdGVkLCB0aGUgU3luY2hlck1hbmFnZXIgd2lsbCBhZGQgYSBsaXN0ZW5lciBpbiB0aGUgTWluaUJ1cyB0byByZWNlaXZlL3NlbmQgTWVzc2FnZXMgb2YgdGhhdCBvYmplY3QuXHJcbiAgKiBAcGFyYW0ge0pTT059IGNvbmZpZyAtIENvbmZpZ3VyYXRpb24gZGF0YS4gVGhlIG9ubHkgcmVxdWlyZWQgZmllbGQgZm9yIG5vdyBpcyB0aGUgcnVudGltZVVSTC5cclxuICAqL1xyXG4gIGNvbnN0cnVjdG9yKG93bmVyLCBidXMsIGNvbmZpZykge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBfdGhpcy5fb3duZXIgPSBvd25lcjtcclxuICAgIF90aGlzLl9idXMgPSBidXM7XHJcblxyXG4gICAgX3RoaXMuX3N1YlVSTCA9IGNvbmZpZy5ydW50aW1lVVJMICsgJy9zbSc7XHJcbiAgICBfdGhpcy5fcnVudGltZVVybCA9IGNvbmZpZy5ydW50aW1lVVJMO1xyXG5cclxuICAgIF90aGlzLl9yZXBvcnRlcnMgPSB7fTtcclxuICAgIF90aGlzLl9vYnNlcnZlcnMgPSB7fTtcclxuICAgIF90aGlzLl9wcm92aXNpb25hbHMgPSB7fTtcclxuXHJcbiAgICBidXMuYWRkTGlzdGVuZXIob3duZXIsIChtc2cpID0+IHtcclxuICAgICAgLy9pZ25vcmUgbXNnIHNlbnQgYnkgaGltc2VsZlxyXG4gICAgICBpZiAobXNnLmZyb20gIT09IG93bmVyKSB7XHJcbiAgICAgICAgY29uc29sZS5pbmZvKCdbU3luY2hlcl0gU3luY2hlci1SQ1Y6ICcsIG1zZywgX3RoaXMpO1xyXG4gICAgICAgIHN3aXRjaCAobXNnLnR5cGUpIHtcclxuICAgICAgICAgIGNhc2UgJ2ZvcndhcmQnOiBfdGhpcy5fb25Gb3J3YXJkKG1zZyk7IGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAnY3JlYXRlJzogX3RoaXMuX29uUmVtb3RlQ3JlYXRlKG1zZyk7IGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAnZGVsZXRlJzogX3RoaXMuX29uUmVtb3RlRGVsZXRlKG1zZyk7IGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAnZXhlY3V0ZSc6IF90aGlzLl9vbkV4ZWN1dGUobXNnKTsgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICogVGhlIG93bmVyIG9mIHRoZSBTeW5jaGVyIGFuZCBhbGwgY3JlYXRlZCByZXBvcnRlcnMuXHJcbiAgKiBAdHlwZSB7SHlwZXJ0eVVSTH1cclxuICAqL1xyXG4gIGdldCBvd25lcigpIHsgcmV0dXJuIHRoaXMuX293bmVyOyB9XHJcblxyXG4gIC8qKlxyXG4gICogQWxsIG93bmVkIHJlcG9ydGVycywgdGhlIG9uZXMgdGhhdCB3ZXJlIGNyZWF0ZWQgYnkgYSBjcmVhdGVcclxuICAqIEB0eXBlIHtPYmplY3Q8VVJMLCBEYXRhT2JqZWN0UmVwb3J0ZXI+fVxyXG4gICovXHJcbiAgZ2V0IHJlcG9ydGVycygpIHsgcmV0dXJuIHRoaXMuX3JlcG9ydGVyczsgfVxyXG5cclxuICAvKipcclxuICAqIEFsbCBvd25lZCBvYnNlcnZlcnMsIHRoZSBvbmVzIHRoYXQgd2VyZSBjcmVhdGVkIGJ5IGEgbG9jYWwgc3Vic2NyaXB0aW9uXHJcbiAgKiBAdHlwZSB7T2JqZWN0PFVSTCwgRGF0YU9iamVjdE9ic2VydmVyPn1cclxuICAqL1xyXG4gIGdldCBvYnNlcnZlcnMoKSB7IHJldHVybiB0aGlzLl9vYnNlcnZlcnM7IH1cclxuXHJcbiAgLyoqXHJcbiAgKiBSZXF1ZXN0IGEgRGF0YU9iamVjdFJlcG9ydGVyIGNyZWF0aW9uLiBUaGUgVVJMIHdpbGwgYmUgYmUgcmVxdWVzdGVkIGJ5IHRoZSBhbGxvY2F0aW9uIG1lY2hhbmlzbS5cclxuICAqIEBwYXJhbSAge1NjaGVtYVVSTH0gc2NoZW1hIC0gSHlwZXJ0eSBDYXRhbG9ndWUgVVJMIGFkZHJlc3MgdGhhdCBjYW4gYmUgdXNlZCB0byByZXRyaWV2ZSB0aGUgSlNPTi1TY2hlbWEgZGVzY3JpYmluZyB0aGUgRGF0YSBPYmplY3Qgc2NoZW1hXHJcbiAgKiBAcGFyYW0gIHtIeXBlcnR5VVJMW119IG9ic2VydmVycyAtIExpc3Qgb2YgaHlwZXJ0aWVzIHRoYXQgYXJlIHByZS1hdXRob3JpemVkIGZvciBzdWJzY3JpcHRpb25cclxuICAqIEBwYXJhbSAge0pTT059IGluaXRpYWxEYXRhIC0gSW5pdGlhbCBkYXRhIG9mIHRoZSByZXBvcnRlclxyXG4gICogQHBhcmFtICB7Ym9vbGVhbn0gc3RvcmUgLSAoT3B0aW9uYWwpIGlmIHRydWUsIG9iamVjdCB3aWxsIGJlIHN0b3JlZCBieSB0aGUgcnVudGltZVxyXG4gICogQHBhcmFtICB7Ym9vbGVhbn0gcDJwIC0gKE9wdGlvbmFsKSBpZiB0cnVlLCBkYXRhIHN5bmNocm9uaXNhdGlvbiBzdHJlYW0gd2lsbCB1c2UgcDJwIGNvbm5lY3Rpb24gYXMgbXVjaCBhcyBwb3NzaWJsZVxyXG4gICogQHBhcmFtICB7c3RyaW5nfSBuYW1lIC0gKE9wdGlvbmFsKSB0aGUgbmFtZSBvZiB0aGUgZGF0YW9iamVjdFxyXG4gICogQHBhcmFtICB7TWVzc2FnZUJvZHlJZGVudGl0eX0gaWRlbnRpdHkgLSAob3B0aW9uYWwpIGlkZW50aXR5IGRhdGEgdG8gYmUgYWRkZWQgdG8gaWRlbnRpdHkgdGhlIHVzZXIgcmVwb3J0ZXIuIFRvIGJlIHVzZWQgZm9yIGxlZ2FjeSBpZGVudGl0aWVzLlxyXG4gICogQHBhcmFtICB7U3luY01ldGFkYXRhfSBpbnB1dCAtIChvcHRpb25hbCkgYWxsIG1ldGFkYXRhIHJlcXVpcmVkIHRvIHN1bmMgdGhlIERhdGEgT2JqZWN0LlxyXG4gICogQHJldHVybiB7UHJvbWlzZTxEYXRhT2JqZWN0UmVwb3J0ZXI+fSBSZXR1cm4gUHJvbWlzZSB0byBhIG5ldyBSZXBvcnRlci4gVGhlIHJlcG9ydGVyIGNhbiBiZSBhY2NlcHRlZCBvciByZWplY3RlZCBieSB0aGUgUEVQXHJcbiAgKi9cclxuICBjcmVhdGUoc2NoZW1hLCBvYnNlcnZlcnMsIGluaXRpYWxEYXRhLCBzdG9yZSA9IGZhbHNlLCBwMnAgPSBmYWxzZSwgbmFtZSA9ICdubyBuYW1lJywgaWRlbnRpdHksIGlucHV0KSB7XHJcblxyXG4gICAgaWYgKCFzY2hlbWEpIHRocm93IEVycm9yKCdbU3luY2hlciAtIENyZWF0ZV0gLSBZb3UgbmVlZCBzcGVjaWZ5IHRoZSBkYXRhIG9iamVjdCBzY2hlbWEnKTtcclxuICAgIGlmICghb2JzZXJ2ZXJzKSB0aHJvdyBFcnJvcignW1N5bmNoZXIgLSBDcmVhdGVdIC1UaGUgb2JzZXJ2ZXJzIHNob3VsZCBiZSBkZWZpbmVkJyk7XHJcblxyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuICAgIGxldCBjcmVhdGVJbnB1dCAgPSBPYmplY3QuYXNzaWduKHt9LCBpbnB1dCk7XHJcblxyXG4gICAgY3JlYXRlSW5wdXQucDJwID0gcDJwO1xyXG4gICAgY3JlYXRlSW5wdXQuc3RvcmUgPSBzdG9yZTtcclxuICAgIGNyZWF0ZUlucHV0LnNjaGVtYSA9IHNjaGVtYTtcclxuICAgIGNyZWF0ZUlucHV0LmF1dGhvcmlzZSA9IG9ic2VydmVycztcclxuICAgIChpbml0aWFsRGF0YSkgPyBjcmVhdGVJbnB1dC5kYXRhID0gZGVlcENsb25lKGluaXRpYWxEYXRhKSA6IGNyZWF0ZUlucHV0LmRhdGEgPSB7fTtcclxuICAgIGNyZWF0ZUlucHV0Lm5hbWUgPSBuYW1lLmxlbmd0aCA9PT0gMCA/ICdubyBuYW1lJyA6IG5hbWU7XHJcbiAgICBjcmVhdGVJbnB1dC5yZXBvcnRlciA9IF90aGlzLl9vd25lcjtcclxuICAgIGNyZWF0ZUlucHV0LnJlc3VtZSA9IGZhbHNlO1xyXG4gICAgaWYgKGlucHV0KSB7XHJcbiAgICAgIGNyZWF0ZUlucHV0Lm11dHVhbCA9IGlucHV0Lm11dHVhbCA/IGlucHV0Lm11dHVhbCA6IHRydWU7XHJcbiAgICAgIGNyZWF0ZUlucHV0Lm5hbWUgPSBpbnB1dC5uYW1lID8gaW5wdXQubmFtZSA6IGNyZWF0ZUlucHV0Lm5hbWU7XHJcbiAgICB9IGVsc2UgeyBjcmVhdGVJbnB1dC5tdXR1YWwgPSB0cnVlOyB9XHJcblxyXG4gICAgaWYgKGlkZW50aXR5KSAgICAgIHsgY3JlYXRlSW5wdXQuaWRlbnRpdHkgPSBpZGVudGl0eTsgfVxyXG5cclxuICAgIC8vT2JqZWN0LmFzc2lnbihjcmVhdGVJbnB1dCwge3Jlc3VtZTogZmFsc2V9KTtcclxuXHJcbiAgICBjb25zb2xlLmxvZygnW3N5bmNoZXIgLSBjcmVhdGVdIC0gY3JlYXRlIFJlcG9ydGVyIC0gY3JlYXRlSW5wdXQ6ICcsIGNyZWF0ZUlucHV0KTtcclxuXHJcbiAgICByZXR1cm4gX3RoaXMuX2NyZWF0ZShjcmVhdGVJbnB1dCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIFJlcXVlc3QgYSBEYXRhT2JqZWN0UmVwb3J0ZXIgY3JlYXRpb24uIFRoZSBVUkwgd2lsbCBiZSBiZSByZXF1ZXN0ZWQgYnkgdGhlIGFsbG9jYXRpb24gbWVjaGFuaXNtLlxyXG4gICogQHBhcmFtICB7T2JqZWN0fSBjcml0ZXJpYSAtIChvcHRpb25hbCkgaWRlbnRpdHkgZGF0YSB0byBiZSBhZGRlZCB0byBpZGVudGl0eSB0aGUgdXNlciByZXBvcnRlci4gVG8gYmUgdXNlZCBmb3IgbGVnYWN5IGlkZW50aXRpZXMuXHJcbiAgKiBAcmV0dXJuIHtQcm9taXNlPERhdGFPYmplY3RSZXBvcnRlcj5bXX0gUmV0dXJuIGEgcHJvbWlzZSB3aXRoIGEgbGlzdCBvZiBEYXRhT2JqZWN0UmVwb3J0ZXIgdG8gYmUgcmVzdW1lZDtcclxuICAqL1xyXG4gIHJlc3VtZVJlcG9ydGVycyhjcml0ZXJpYSkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuICAgIGNvbnNvbGUubG9nKCdbc3luY2hlciAtIGNyZWF0ZV0gLSByZXN1bWUgUmVwb3J0ZXIgLSBjcml0ZXJpYTogJywgY3JpdGVyaWEpO1xyXG5cclxuICAgIE9iamVjdC5hc3NpZ24oY3JpdGVyaWEsIHtyZXN1bWU6IHRydWV9KTtcclxuXHJcbiAgICByZXR1cm4gX3RoaXMuX3Jlc3VtZUNyZWF0ZShjcml0ZXJpYSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIFJlcXVlc3QgYSBzdWJzY3JpcHRpb24gdG8gYW4gZXhpc3RlbnQgcmVwb3J0ZXIgb2JqZWN0LlxyXG4gICogQHBhcmFtIHtTY2hlbWFVUkx9IHNjaGVtYSAtIEh5cGVydHkgQ2F0YWxvZ3VlIFVSTCBhZGRyZXNzIHRoYXQgY2FuIGJlIHVzZWQgdG8gcmV0cmlldmUgdGhlIEpTT04tU2NoZW1hIGRlc2NyaWJpbmcgdGhlIERhdGEgT2JqZWN0IHNjaGVtYVxyXG4gICogQHBhcmFtIHtPYmplY3RVUkx9IG9ialVSTCAtIEFkZHJlc3Mgb2YgdGhlIGV4aXN0ZW50IHJlcG9ydGVyIG9iamVjdCB0byBiZSBvYnNlcnZlZFxyXG4gICogQHBhcmFtIHtCb29sZWFufSBbc3RvcmU9ZmFsc2VdIC0gU2F2ZSB0aGUgc3Vic2NyaXB0aW9uIG9uIHRoZSBTeW5jaGVyIE1hbmFnZXIgZm9yIGZ1cnRoZXIgcmVzdW1lIChEZWZhdWx0IGlzIGZhbHNlKVxyXG4gICogQHBhcmFtIHtCb29sZWFufSBbcDJwPWZhbHNlXSAtIEluZm8gYWJvdXQgaWYgc2hvdWxkIHVzZSBwMnAgY29ubmVjdGlvbiAoRGVmYXVsdCBpcyBmYWxzZSlcclxuICAqIEBwYXJhbSB7Qm9vbGVhbn0gW211dHVhbD10cnVlXSAtIEluZm8gYWJvdXQgaWYgbWVzc2FnZXMgb2YgdGhpcyBvYmplY3Qgc2hvdWxkIGJlIGVuY3J5cHRlZCAoRGVmYXVsdCBpcyB0cnVlKVxyXG4gICogQHBhcmFtICB7TWVzc2FnZUJvZHlJZGVudGl0eX0gaWRlbnRpdHkgLSAob3B0aW9uYWwpIGlkZW50aXR5IGRhdGEgdG8gYmUgYWRkZWQgdG8gaWRlbnRpdHkgdGhlIHVzZXIgcmVwb3J0ZXIuIFRvIGJlIHVzZWQgZm9yIGxlZ2FjeSBpZGVudGl0aWVzLlxyXG4gICogQHJldHVybiB7UHJvbWlzZTxEYXRhT2JqZWN0T2JzZXJ2ZXI+fSBSZXR1cm4gUHJvbWlzZSB0byBhIG5ldyBvYnNlcnZlci4gSXQncyBhc3NvY2lhdGVkIHdpdGggdGhlIHJlcG9ydGVyLlxyXG4gICovXHJcbiAgc3Vic2NyaWJlKHNjaGVtYSwgb2JqVVJMLCBzdG9yZSA9IGZhbHNlLCBwMnAgPSBmYWxzZSwgbXV0dWFsID0gdHJ1ZSwgaWRlbnRpdHkpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcbiAgICBsZXQgY3JpdGVyaWEgPSB7fTtcclxuXHJcbiAgICBjcml0ZXJpYS5wMnAgPSBwMnA7XHJcbiAgICBjcml0ZXJpYS5zdG9yZSA9IHN0b3JlO1xyXG4gICAgY3JpdGVyaWEuc2NoZW1hID0gc2NoZW1hO1xyXG5cclxuICAgIGNyaXRlcmlhLnJlc291cmNlID0gb2JqVVJMO1xyXG4gICAgaWYgKGlkZW50aXR5KSAgICAgIHsgY3JpdGVyaWEuaWRlbnRpdHkgPSBpZGVudGl0eTsgfVxyXG5cclxuICAgIC8vVE9ETzogRm9yIEZ1cnRoZXIgU3R1ZHlcclxuICAgIGNyaXRlcmlhLm11dHVhbCA9IG11dHVhbDtcclxuXHJcbiAgICBjb25zb2xlLmxvZygnW3N5bmNoZXIgLSBzdWJzY3JpYmVdIC0gc3Vic2NyaWJlIGNyaXRlcmlhOiAnLCBjcml0ZXJpYSk7XHJcblxyXG4gICAgT2JqZWN0LmFzc2lnbihjcml0ZXJpYSwge3Jlc3VtZTogZmFsc2V9KTtcclxuXHJcbiAgICByZXR1cm4gX3RoaXMuX3N1YnNjcmliZShjcml0ZXJpYSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIFJlcXVlc3QgYSBzdWJzY3JpcHRpb24gdG8gYW4gZXhpc3RlbnQgcmVwb3J0ZXIgb2JqZWN0LlxyXG4gICogQHBhcmFtIHtjcml0ZXJpYX0gY3JpdGVyaWEgLSBJbmZvcm1hdGlvbiB0byBkaXNjb3ZlcnkgdGhlIG9ic2VydmVyIG9iamVjdFxyXG4gICogQHJldHVybiB7UHJvbWlzZTxEYXRhT2JqZWN0T2JzZXJ2ZXI+fSBSZXR1cm4gUHJvbWlzZSB0byBhIG5ldyBvYnNlcnZlci4gSXQncyBhc3NvY2lhdGVkIHdpdGggdGhlIHJlcG9ydGVyLlxyXG4gICovXHJcbiAgcmVzdW1lT2JzZXJ2ZXJzKGNyaXRlcmlhKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG4gICAgbGV0IF9jcml0ZXJpYSA9IGNyaXRlcmlhIHx8IHt9O1xyXG5cclxuICAgIE9iamVjdC5hc3NpZ24oX2NyaXRlcmlhLCB7cmVzdW1lOiB0cnVlfSk7XHJcblxyXG4gICAgcmV0dXJuIF90aGlzLl9yZXN1bWVTdWJzY3JpYmUoX2NyaXRlcmlhKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICogUmVxdWVzdCBhIHJlYWQgYWN0aW9uIG9uIHRoZSByZXBvcnRlciBvYmplY3RcclxuICAqIEBwYXJhbSB7T2JqZWN0VVJMfSBvYmpVUkwgLSBVUkwgb2YgdGhlIHJlcG9ydGVyIG9iamVjdCB0byBiZSByZWFkXHJcbiAgKiBAcmV0dXJuIHtQcm9taXNlPE9iamVjdD59IFJldHVybiBQcm9taXNlIHRvIGxhc3QgYXZhaWxhYmxlIGRhdGEgb2YgdGhlIHJlcG9ydGVyXHJcbiAgKi9cclxuICByZWFkKG9ialVSTCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICAvL0ZMT1ctT1VUOiB0aGlzIG1lc3NhZ2Ugd2lsbCBiZSBzZW50IGRpcmVjdGx5IHRvIHJlcG9ydGVyIG9iamVjdCAobWF5YmUgdGhlcmUgaXMgbm8gbGlzdGVuZXIgYXZhaWxhYmxlLCBzbyBpdCB3aWxsIGJlIHJlc29sdmVkIHdpdGggTWVzc2FnZUJ1cyAtPiByZXNvbHZlKVxyXG4gICAgLy93aWxsIHJlYWNoIHRoZSByZW1vdGUgb2JqZWN0IGluIERhdGFPYmplY3RSZXBvcnRlciAtPiBfb25SZWFkXHJcbiAgICBsZXQgcmVhZE1zZyA9IHtcclxuICAgICAgdHlwZTogJ3JlYWQnLCBmcm9tOiBfdGhpcy5fb3duZXIsIHRvOiBvYmpVUkxcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyZWFkTXNnLCAocmVwbHkpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygncmVhZC1yZXNwb25zZTogJywgcmVwbHkpO1xyXG4gICAgICAgIGlmIChyZXBseS5ib2R5LmNvZGUgPT09IDIwMCkge1xyXG4gICAgICAgICAgcmVzb2x2ZShyZXBseS5ib2R5LnZhbHVlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmVqZWN0KHJlcGx5LmJvZHkuZGVzYyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgKiBTZXR1cCB0aGUgY2FsbGJhY2sgdG8gcHJvY2VzcyBjcmVhdGUgYW5kIGRlbGV0ZSBldmVudHMgb2YgcmVtb3ZlIFJlcG9ydGVyIG9iamVjdHMuXHJcbiAgKiBUaGlzIGlzIHJlbGVhdGVkIHRvIHRoZSBtZXNzYWdlbnMgc2VudCBieSBjcmVhdGUgdG8gdGhlIG9ic2VydmVycyBIeXBlcnR5IGFycmF5LlxyXG4gICogQHBhcmFtIHtmdW5jdGlvbihldmVudDogTXNnRXZlbnQpfSBjYWxsYmFja1xyXG4gICovXHJcbiAgb25Ob3RpZmljYXRpb24oY2FsbGJhY2spIHtcclxuICAgIHRoaXMuX29uTm90aWZpY2F0aW9uSGFuZGxlciA9IGNhbGxiYWNrO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgKiBTZXR1cCB0aGUgY2FsbGJhY2sgdG8gcHJvY2VzcyBjbG9zZSBldmVudHMgZnJvbSB0aGUgcnVudGltZS5cclxuICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2tcclxuICAqL1xyXG4gIG9uQ2xvc2UoY2FsbGJhY2spIHtcclxuICAgIHRoaXMuX29uQ2xvc2UgPSBjYWxsYmFjaztcclxuICB9XHJcblxyXG4gIF9jcmVhdGUoaW5wdXQpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuXHJcbiAgICAgIGxldCByZXBvcnRlcklucHV0ICA9IE9iamVjdC5hc3NpZ24oe30sIGlucHV0KTtcclxuXHJcbiAgICAgIGxldCByZXN1bWUgPSBpbnB1dC5yZXN1bWU7XHJcblxyXG4gICAgICByZXBvcnRlcklucHV0LmNyZWF0ZWQgPSAobmV3IERhdGUpLnRvSVNPU3RyaW5nKCk7XHJcbiAgICAgIHJlcG9ydGVySW5wdXQucnVudGltZSA9IF90aGlzLl9ydW50aW1lVXJsO1xyXG5cclxuICAgICAgbGV0IHJlcXVlc3RWYWx1ZSA9IGRlZXBDbG9uZShyZXBvcnRlcklucHV0KTtcclxuXHJcbiAgICAgIGRlbGV0ZSByZXF1ZXN0VmFsdWUucDJwO1xyXG4gICAgICBkZWxldGUgcmVxdWVzdFZhbHVlLnN0b3JlO1xyXG4gICAgICBkZWxldGUgcmVxdWVzdFZhbHVlLm9ic2VydmVycztcclxuICAgICAgZGVsZXRlIHJlcXVlc3RWYWx1ZS5pZGVudGl0eTtcclxuXHJcbiAgICAgIC8vRkxPVy1PVVQ6IHRoaXMgbWVzc2FnZSB3aWxsIGJlIHNlbnQgdG8gdGhlIHJ1bnRpbWUgaW5zdGFuY2Ugb2YgU3luY2hlck1hbmFnZXIgLT4gX29uQ3JlYXRlXHJcbiAgICAgIGxldCByZXF1ZXN0TXNnID0ge1xyXG4gICAgICAgIHR5cGU6ICdjcmVhdGUnLCBmcm9tOiBfdGhpcy5fb3duZXIsIHRvOiBfdGhpcy5fc3ViVVJMLFxyXG4gICAgICAgIGJvZHk6IHsgcmVzdW1lOiByZXN1bWUsIHZhbHVlOiByZXF1ZXN0VmFsdWUgIH1cclxuICAgICAgfTtcclxuXHJcblxyXG4gICAgICByZXF1ZXN0TXNnLmJvZHkuc2NoZW1hID0gcmVwb3J0ZXJJbnB1dC5zY2hlbWE7XHJcblxyXG4gICAgICBpZiAocmVwb3J0ZXJJbnB1dC5wMnApIHJlcXVlc3RNc2cuYm9keS5wMnAgPSByZXBvcnRlcklucHV0LnAycDtcclxuICAgICAgaWYgKHJlcG9ydGVySW5wdXQuc3RvcmUpIHJlcXVlc3RNc2cuYm9keS5zdG9yZSA9IHJlcG9ydGVySW5wdXQuc3RvcmU7XHJcbiAgICAgIGlmIChyZXBvcnRlcklucHV0LmlkZW50aXR5KSByZXF1ZXN0TXNnLmJvZHkuaWRlbnRpdHkgPSByZXBvcnRlcklucHV0LmlkZW50aXR5O1xyXG5cclxuICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyLl9jcmVhdGVdOiAnLCByZXBvcnRlcklucHV0LCByZXF1ZXN0TXNnKTtcclxuXHJcbiAgICAgIC8vcmVxdWVzdCBjcmVhdGUgdG8gdGhlIGFsbG9jYXRpb24gc3lzdGVtLiBDYW4gYmUgcmVqZWN0ZWQgYnkgdGhlIFBvbGljeUVuZ2luZS5cclxuICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyZXF1ZXN0TXNnLCAocmVwbHkpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXIgLSBjcmVhdGVdIC0gY3JlYXRlLXJlc3BvbnNlOiAnLCByZXBseSk7XHJcbiAgICAgICAgaWYgKHJlcGx5LmJvZHkuY29kZSA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAvL3JlcG9ydGVyIGNyZWF0aW9uIGFjY2VwdGVkXHJcbiAgICAgICAgICByZXBvcnRlcklucHV0LnVybCA9IHJlcGx5LmJvZHkucmVzb3VyY2U7XHJcblxyXG4gICAgICAgICAgcmVwb3J0ZXJJbnB1dC5zdGF0dXMgPSAnbGl2ZSc7Ly8gcGNoOiBkbyB3ZSBuZWQgdGhpcz9cclxuICAgICAgICAgIHJlcG9ydGVySW5wdXQuc3luY2hlciA9IF90aGlzO1xyXG4gICAgICAgICAgcmVwb3J0ZXJJbnB1dC5jaGlsZHJlbnMgPSByZXBseS5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzO1xyXG5cclxuICAgICAgICAgIGxldCBuZXdPYmogPSBfdGhpcy5fcmVwb3J0ZXJzW3JlcG9ydGVySW5wdXQudXJsXTtcclxuICAgICAgICAgIGlmICghbmV3T2JqKSB7XHJcbiAgICAgICAgICAgIG5ld09iaiA9IG5ldyBEYXRhT2JqZWN0UmVwb3J0ZXIocmVwb3J0ZXJJbnB1dCk7XHJcbiAgICAgICAgICAgIF90aGlzLl9yZXBvcnRlcnNbcmVwb3J0ZXJJbnB1dC51cmxdID0gbmV3T2JqO1xyXG4gICAgICAgICAgICBuZXdPYmouaW52aXRlT2JzZXJ2ZXJzKGlucHV0LmF1dGhvcmlzZSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgcmVzb2x2ZShuZXdPYmopO1xyXG5cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgLy9yZXBvcnRlciBjcmVhdGlvbiByZWplY3RlZFxyXG4gICAgICAgICAgcmVqZWN0KHJlcGx5LmJvZHkuZGVzYyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICB9XHJcblxyXG4gIF9yZXN1bWVDcmVhdGUoY3JpdGVyaWEpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgbGV0IHJlc3VtZSA9IGNyaXRlcmlhLnJlc3VtZTtcclxuXHJcbiAgICAgIC8vRkxPVy1PVVQ6IHRoaXMgbWVzc2FnZSB3aWxsIGJlIHNlbnQgdG8gdGhlIHJ1bnRpbWUgaW5zdGFuY2Ugb2YgU3luY2hlck1hbmFnZXIgLT4gX29uQ3JlYXRlXHJcbiAgICAgIGxldCByZXF1ZXN0TXNnID0ge1xyXG4gICAgICAgIHR5cGU6ICdjcmVhdGUnLCBmcm9tOiBfdGhpcy5fb3duZXIsIHRvOiBfdGhpcy5fc3ViVVJMLFxyXG4gICAgICAgIGJvZHk6IHsgcmVzdW1lOiByZXN1bWUgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyIC0gY3JlYXRlXTogJywgY3JpdGVyaWEsIHJlcXVlc3RNc2cpO1xyXG5cclxuICAgICAgaWYgKGNyaXRlcmlhKSB7XHJcbiAgICAgICAgcmVxdWVzdE1zZy5ib2R5LnZhbHVlID0gY3JpdGVyaWE7XHJcbiAgICAgICAgcmVxdWVzdE1zZy5ib2R5LnZhbHVlLnJlcG9ydGVyID0gX3RoaXMuX293bmVyO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoY3JpdGVyaWEucDJwKSByZXF1ZXN0TXNnLmJvZHkucDJwID0gY3JpdGVyaWEucDJwO1xyXG4gICAgICBpZiAoY3JpdGVyaWEuc3RvcmUpIHJlcXVlc3RNc2cuYm9keS5zdG9yZSA9IGNyaXRlcmlhLnN0b3JlO1xyXG4gICAgICBpZiAoY3JpdGVyaWEub2JzZXJ2ZXJzKSByZXF1ZXN0TXNnLmJvZHkuYXV0aG9yaXNlID0gY3JpdGVyaWEub2JzZXJ2ZXJzO1xyXG4gICAgICBpZiAoY3JpdGVyaWEuaWRlbnRpdHkpIHJlcXVlc3RNc2cuYm9keS5pZGVudGl0eSA9IGNyaXRlcmlhLmlkZW50aXR5O1xyXG5cclxuICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyLl9yZXN1bWVDcmVhdGVdIC0gcmVzdW1lIG1lc3NhZ2U6ICcsIHJlcXVlc3RNc2cpO1xyXG5cclxuICAgICAgLy9yZXF1ZXN0IGNyZWF0ZSB0byB0aGUgYWxsb2NhdGlvbiBzeXN0ZW0uIENhbiBiZSByZWplY3RlZCBieSB0aGUgUG9saWN5RW5naW5lLlxyXG4gICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHJlcXVlc3RNc2csIChyZXBseSkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdbc3luY2hlci5fcmVzdW1lQ3JlYXRlXSAtIGNyZWF0ZS1yZXN1bWVkLXJlc3BvbnNlOiAnLCByZXBseSk7XHJcbiAgICAgICAgaWYgKHJlcGx5LmJvZHkuY29kZSA9PT0gMjAwKSB7XHJcblxyXG4gICAgICAgICAgbGV0IGxpc3RPZlJlcG9ydGVycyA9IHJlcGx5LmJvZHkudmFsdWU7XHJcblxyXG4gICAgICAgICAgZm9yIChsZXQgaW5kZXggaW4gbGlzdE9mUmVwb3J0ZXJzKSB7XHJcblxyXG4gICAgICAgICAgICBsZXQgZGF0YU9iamVjdCA9IGxpc3RPZlJlcG9ydGVyc1tpbmRleF07XHJcblxyXG4gICAgICAgICAgICAvL3JlcG9ydGVyIGNyZWF0aW9uIGFjY2VwdGVkXHJcblxyXG4gICAgICAgICAgICBkYXRhT2JqZWN0LmRhdGEgPSBkZWVwQ2xvbmUoZGF0YU9iamVjdC5kYXRhKSB8fCB7fTtcclxuXHJcbiAgICAgICAgICAgIGlmIChkYXRhT2JqZWN0LmNoaWxkcmVuT2JqZWN0cykgeyBkYXRhT2JqZWN0LmNoaWxkcmVuT2JqZWN0cyA9IGRlZXBDbG9uZShkYXRhT2JqZWN0LmNoaWxkcmVuT2JqZWN0cyk7IH1cclxuXHJcbiAgICAgICAgICAgIGRhdGFPYmplY3QubXV0dWFsID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGRhdGFPYmplY3QucmVzdW1lID0gdHJ1ZTtcclxuICAgICAgICAgICAgZGF0YU9iamVjdC5zdGF0dXMgPSAnbGl2ZSc7Ly8gcGNoOiBkbyB3ZSBuZWQgdGhpcz9cclxuICAgICAgICAgICAgZGF0YU9iamVjdC5zeW5jaGVyID0gX3RoaXM7XHJcblxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXIuX3Jlc3VtZUNyZWF0ZV0gLSBjcmVhdGUtcmVzdW1lZC1kYXRhT2JqZWN0UmVwb3J0ZXInLCBkYXRhT2JqZWN0KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBuZXdPYmogPSBuZXcgRGF0YU9iamVjdFJlcG9ydGVyKGRhdGFPYmplY3QpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGRhdGFPYmplY3QuY2hpbGRyZW5PYmplY3RzKSB7IG5ld09iai5yZXN1bWVDaGlsZHJlbnMoZGF0YU9iamVjdC5jaGlsZHJlbk9iamVjdHMpOyB9XHJcbiAgICAgICAgICAgIF90aGlzLl9yZXBvcnRlcnNbZGF0YU9iamVjdC51cmxdID0gbmV3T2JqO1xyXG5cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICByZXNvbHZlKF90aGlzLl9yZXBvcnRlcnMpO1xyXG4gICAgICAgICAgaWYgKHRoaXMuX29uUmVwb3J0ZXJzUmVzdW1lKSB0aGlzLl9vblJlcG9ydGVyc1Jlc3VtZSh0aGlzLl9yZXBvcnRlcnMpO1xyXG5cclxuICAgICAgICB9IGVsc2UgaWYgKHJlcGx5LmJvZHkuY29kZSA9PT0gNDA0KSB7XHJcbiAgICAgICAgICByZXNvbHZlKHt9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgLy9yZXBvcnRlciBjcmVhdGlvbiByZWplY3RlZFxyXG4gICAgICAgICAgcmVqZWN0KHJlcGx5LmJvZHkuZGVzYyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX3N1YnNjcmliZShpbnB1dCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG5cclxuICAgICAgLy9GTE9XLU9VVDogdGhpcyBtZXNzYWdlIHdpbGwgYmUgc2VudCB0byB0aGUgcnVudGltZSBpbnN0YW5jZSBvZiBTeW5jaGVyTWFuYWdlciAtPiBfb25Mb2NhbFN1YnNjcmliZVxyXG4gICAgICBsZXQgc3Vic2NyaWJlTXNnID0ge1xyXG4gICAgICAgIHR5cGU6ICdzdWJzY3JpYmUnLCBmcm9tOiBfdGhpcy5fb3duZXIsIHRvOiBfdGhpcy5fc3ViVVJMLFxyXG4gICAgICAgIGJvZHk6IHt9XHJcbiAgICAgIH07XHJcblxyXG4gICAgICAvLyBIeXBlcnR5IHJlcXVlc3QgdG8gYmUgYW4gT2JzZXJ2ZXJcclxuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9zcGVjcy9ibG9iL21hc3Rlci9tZXNzYWdlcy9kYXRhLXN5bmMtbWVzc2FnZXMubWQjaHlwZXJ0eS1yZXF1ZXN0LXRvLWJlLWFuLW9ic2VydmVyXHJcblxyXG4gICAgICAvLyBSZXN1bWUgU3Vic2NyaXB0aW9ucyBmb3IgdGhlIHNhbWUgSHlwZXJ0eSBVUkxcclxuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9zcGVjcy9ibG9iL21hc3Rlci9tZXNzYWdlcy9kYXRhLXN5bmMtbWVzc2FnZXMubWQjcmVzdW1lLXN1YnNjcmlwdGlvbnMtZm9yLXRoZS1zYW1lLWh5cGVydHktdXJsXHJcblxyXG4gICAgICAvLyBSZXN1bWUgU3Vic2NyaXB0aW9ucyBmb3IgYSBjZXJ0YWluIHVzZXIgYW5kIGRhdGEgc2NoZW1hIGluZGVwZW5kZW50bHkgb2YgdGhlIEh5cGVydHkgVVJMLlxyXG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L3NwZWNzL2Jsb2IvbWFzdGVyL21lc3NhZ2VzL2RhdGEtc3luYy1tZXNzYWdlcy5tZCNyZXN1bWUtc3Vic2NyaXB0aW9ucy1mb3ItYS1jZXJ0YWluLXVzZXItYW5kLWRhdGEtc2NoZW1hLWluZGVwZW5kZW50bHktb2YtdGhlLWh5cGVydHktdXJsXHJcbiAgICAgIGlmIChpbnB1dCkge1xyXG4gICAgICAgIGlmIChpbnB1dC5oYXNPd25Qcm9wZXJ0eSgncDJwJykpIHN1YnNjcmliZU1zZy5ib2R5LnAycCA9IGlucHV0LnAycDtcclxuICAgICAgICBpZiAoaW5wdXQuaGFzT3duUHJvcGVydHkoJ3N0b3JlJykpIHN1YnNjcmliZU1zZy5ib2R5LnN0b3JlID0gaW5wdXQuc3RvcmU7XHJcbiAgICAgICAgaWYgKGlucHV0Lmhhc093blByb3BlcnR5KCdzY2hlbWEnKSkgc3Vic2NyaWJlTXNnLmJvZHkuc2NoZW1hID0gaW5wdXQuc2NoZW1hO1xyXG4gICAgICAgIGlmIChpbnB1dC5oYXNPd25Qcm9wZXJ0eSgnaWRlbnRpdHknKSkgc3Vic2NyaWJlTXNnLmJvZHkuaWRlbnRpdHkgPSBpbnB1dC5pZGVudGl0eTtcclxuICAgICAgICBpZiAoaW5wdXQuaGFzT3duUHJvcGVydHkoJ3Jlc291cmNlJykpIHN1YnNjcmliZU1zZy5ib2R5LnJlc291cmNlID0gaW5wdXQucmVzb3VyY2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHN1YnNjcmliZU1zZy5ib2R5LnJlc3VtZSA9IGlucHV0LnJlc3VtZTtcclxuXHJcbiAgICAgIC8vVE9ETzogRm9yIEZ1cnRoZXIgU3R1ZHlcclxuICAgICAgaWYgKGlucHV0Lmhhc093blByb3BlcnR5KCdtdXR1YWwnKSkgc3Vic2NyaWJlTXNnLmJvZHkubXV0dWFsQXV0aGVudGljYXRpb24gPSBpbnB1dC5tdXR1YWw7XHJcblxyXG4gICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXJfc3Vic2NyaWJlXSAtIHN1YnNjcmliZSBtZXNzYWdlOiAnLCBpbnB1dCwgc3Vic2NyaWJlTXNnKTtcclxuXHJcbiAgICAgIC8vcmVxdWVzdCBzdWJzY3JpcHRpb25cclxuICAgICAgLy9Qcm92aXNpb25hbCBkYXRhIGlzIGFwcGxpZWQgdG8gdGhlIERhdGFPYmplY3RPYnNlcnZlciBhZnRlciBjb25maXJtYXRpb24uIE9yIGRpc2NhcmRlZCBpZiB0aGVyZSBpcyBubyBjb25maXJtYXRpb24uXHJcbiAgICAgIC8vZm9yIG1vcmUgaW5mbyBzZWUgdGhlIERhdGFQcm92aXNpb25hbCBjbGFzcyBkb2N1bWVudGF0aW9uLlxyXG4gICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHN1YnNjcmliZU1zZywgKHJlcGx5KSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyXSAtIHN1YnNjcmliZS1yZXNwb25zZTogJywgcmVwbHkpO1xyXG5cclxuICAgICAgICBsZXQgb2JqVVJMID0gcmVwbHkuYm9keS5yZXNvdXJjZTtcclxuXHJcbiAgICAgICAgbGV0IG5ld1Byb3Zpc2lvbmFsID0gX3RoaXMuX3Byb3Zpc2lvbmFsc1tvYmpVUkxdO1xyXG4gICAgICAgIGRlbGV0ZSBfdGhpcy5fcHJvdmlzaW9uYWxzW29ialVSTF07XHJcbiAgICAgICAgaWYgKG5ld1Byb3Zpc2lvbmFsKSBuZXdQcm92aXNpb25hbC5fcmVsZWFzZUxpc3RlbmVycygpO1xyXG5cclxuICAgICAgICBpZiAocmVwbHkuYm9keS5jb2RlIDwgMjAwKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXJdIC0gbmV3IERhdGFQcm92aXNpb25hbDogJywgcmVwbHkuYm9keS5jaGlsZHJlblJlc291cmNlcywgb2JqVVJMKTtcclxuICAgICAgICAgIG5ld1Byb3Zpc2lvbmFsID0gbmV3IERhdGFQcm92aXNpb25hbChfdGhpcy5fb3duZXIsIG9ialVSTCwgX3RoaXMuX2J1cywgcmVwbHkuYm9keS5jaGlsZHJlblJlc291cmNlcyk7XHJcbiAgICAgICAgICBfdGhpcy5fcHJvdmlzaW9uYWxzW29ialVSTF0gPSBuZXdQcm92aXNpb25hbDtcclxuICAgICAgICB9IGVsc2UgaWYgKHJlcGx5LmJvZHkuY29kZSA9PT0gMjAwKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXJdIC0gbmV3IERhdGEgT2JqZWN0IE9ic2VydmVyOiAnLCByZXBseSwgX3RoaXMuX3Byb3Zpc2lvbmFscyk7XHJcblxyXG4gICAgICAgICAgbGV0IG9ic2VydmVySW5wdXQgPSByZXBseS5ib2R5LnZhbHVlO1xyXG5cclxuICAgICAgICAgIG9ic2VydmVySW5wdXQuc3luY2hlciA9IF90aGlzO1xyXG4gICAgICAgICAgb2JzZXJ2ZXJJbnB1dC5wMnAgPSBpbnB1dC5wMnA7XHJcbiAgICAgICAgICBvYnNlcnZlcklucHV0LnN0b3JlID0gaW5wdXQuc3RvcmU7XHJcbiAgICAgICAgICBvYnNlcnZlcklucHV0LmlkZW50aXR5ID0gaW5wdXQuaWRlbnRpdHk7XHJcbiAgICAgICAgICBvYnNlcnZlcklucHV0LnJlc3VtZSA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgIC8vIHRvZG86IEZvciBGdXJ0aGVyIFN0dWR5XHJcbiAgICAgICAgICBvYnNlcnZlcklucHV0Lm11dHVhbCA9IGlucHV0Lm11dHVhbDtcclxuXHJcbiAgICAgICAgICAvL29ic2VydmVySW5wdXQuY2hpbGRyZW4gPSBuZXdQcm92aXNpb25hbC5jaGlsZHJlbjtcclxuXHJcbiAgICAgICAgICAvL1RPRE86IG11dHVhbEF1dGhlbnRpY2F0aW9uIEZvciBGdXJ0aGVyIFN0dWR5XHJcbiAgICAgICAgICBsZXQgbmV3T2JqID0gX3RoaXMuX29ic2VydmVyc1tvYmpVUkxdO1xyXG4gICAgICAgICAgaWYgKCFuZXdPYmopIHtcclxuICAgICAgICAgICAgbmV3T2JqID0gbmV3IERhdGFPYmplY3RPYnNlcnZlcihvYnNlcnZlcklucHV0KTtcclxuICAgICAgICAgICAgX3RoaXMuX29ic2VydmVyc1tvYmpVUkxdID0gbmV3T2JqO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbmV3T2JqLnN5bmMoKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXJdIC0gbmV3IERhdGEgT2JqZWN0IE9ic2VydmVyIGFscmVhZHkgZXhpc3Q6ICcsIG5ld09iaik7XHJcblxyXG4gICAgICAgICAgcmVzb2x2ZShuZXdPYmopO1xyXG5cclxuICAgICAgICAgIGlmIChuZXdQcm92aXNpb25hbCkgeyBuZXdQcm92aXNpb25hbC5hcHBseShuZXdPYmopOyB9XHJcblxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZWplY3QocmVwbHkuYm9keS5kZXNjKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfcmVzdW1lU3Vic2NyaWJlKGNyaXRlcmlhKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcblxyXG4gICAgICAvL0ZMT1ctT1VUOiB0aGlzIG1lc3NhZ2Ugd2lsbCBiZSBzZW50IHRvIHRoZSBydW50aW1lIGluc3RhbmNlIG9mIFN5bmNoZXJNYW5hZ2VyIC0+IF9vbkxvY2FsU3Vic2NyaWJlXHJcbiAgICAgIGxldCBzdWJzY3JpYmVNc2cgPSB7XHJcbiAgICAgICAgdHlwZTogJ3N1YnNjcmliZScsIGZyb206IF90aGlzLl9vd25lciwgdG86IF90aGlzLl9zdWJVUkwsXHJcbiAgICAgICAgYm9keToge31cclxuICAgICAgfTtcclxuXHJcbiAgICAgIC8vIEh5cGVydHkgcmVxdWVzdCB0byBiZSBhbiBPYnNlcnZlclxyXG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L3NwZWNzL2Jsb2IvbWFzdGVyL21lc3NhZ2VzL2RhdGEtc3luYy1tZXNzYWdlcy5tZCNoeXBlcnR5LXJlcXVlc3QtdG8tYmUtYW4tb2JzZXJ2ZXJcclxuXHJcbiAgICAgIC8vIFJlc3VtZSBTdWJzY3JpcHRpb25zIGZvciB0aGUgc2FtZSBIeXBlcnR5IFVSTFxyXG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L3NwZWNzL2Jsb2IvbWFzdGVyL21lc3NhZ2VzL2RhdGEtc3luYy1tZXNzYWdlcy5tZCNyZXN1bWUtc3Vic2NyaXB0aW9ucy1mb3ItdGhlLXNhbWUtaHlwZXJ0eS11cmxcclxuXHJcbiAgICAgIC8vIFJlc3VtZSBTdWJzY3JpcHRpb25zIGZvciBhIGNlcnRhaW4gdXNlciBhbmQgZGF0YSBzY2hlbWEgaW5kZXBlbmRlbnRseSBvZiB0aGUgSHlwZXJ0eSBVUkwuXHJcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3Qvc3BlY3MvYmxvYi9tYXN0ZXIvbWVzc2FnZXMvZGF0YS1zeW5jLW1lc3NhZ2VzLm1kI3Jlc3VtZS1zdWJzY3JpcHRpb25zLWZvci1hLWNlcnRhaW4tdXNlci1hbmQtZGF0YS1zY2hlbWEtaW5kZXBlbmRlbnRseS1vZi10aGUtaHlwZXJ0eS11cmxcclxuICAgICAgaWYgKGNyaXRlcmlhKSB7XHJcbiAgICAgICAgaWYgKGNyaXRlcmlhLmhhc093blByb3BlcnR5KCdwMnAnKSkgc3Vic2NyaWJlTXNnLmJvZHkucDJwID0gY3JpdGVyaWEucDJwO1xyXG4gICAgICAgIGlmIChjcml0ZXJpYS5oYXNPd25Qcm9wZXJ0eSgnc3RvcmUnKSkgc3Vic2NyaWJlTXNnLmJvZHkuc3RvcmUgPSBjcml0ZXJpYS5zdG9yZTtcclxuICAgICAgICBpZiAoY3JpdGVyaWEuaGFzT3duUHJvcGVydHkoJ3NjaGVtYScpKSBzdWJzY3JpYmVNc2cuYm9keS5zY2hlbWEgPSBjcml0ZXJpYS5zY2hlbWE7XHJcbiAgICAgICAgaWYgKGNyaXRlcmlhLmhhc093blByb3BlcnR5KCdpZGVudGl0eScpKSBzdWJzY3JpYmVNc2cuYm9keS5pZGVudGl0eSA9IGNyaXRlcmlhLmlkZW50aXR5O1xyXG4gICAgICAgIGlmIChjcml0ZXJpYS5oYXNPd25Qcm9wZXJ0eSgncmVzb3VyY2UnKSkgc3Vic2NyaWJlTXNnLmJvZHkucmVzb3VyY2UgPSBjcml0ZXJpYS51cmw7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHN1YnNjcmliZU1zZy5ib2R5LnJlc3VtZSA9IGNyaXRlcmlhLnJlc3VtZTtcclxuXHJcbiAgICAgIC8vVE9ETzogRm9yIEZ1cnRoZXIgU3R1ZHlcclxuICAgICAgbGV0IG11dHVhbEF1dGhlbnRpY2F0aW9uID0gY3JpdGVyaWEubXV0dWFsO1xyXG4gICAgICBpZiAoY3JpdGVyaWEuaGFzT3duUHJvcGVydHkoJ211dHVhbCcpKSBzdWJzY3JpYmVNc2cuYm9keS5tdXR1YWxBdXRoZW50aWNhdGlvbiA9IG11dHVhbEF1dGhlbnRpY2F0aW9uO1xyXG5cclxuICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyXSAtIHN1YnNjcmliZSBtZXNzYWdlOiAnLCBjcml0ZXJpYSwgc3Vic2NyaWJlTXNnKTtcclxuXHJcbiAgICAgIC8vcmVxdWVzdCBzdWJzY3JpcHRpb25cclxuICAgICAgLy9Qcm92aXNpb25hbCBkYXRhIGlzIGFwcGxpZWQgdG8gdGhlIERhdGFPYmplY3RPYnNlcnZlciBhZnRlciBjb25maXJtYXRpb24uIE9yIGRpc2NhcmRlZCBpZiB0aGVyZSBpcyBubyBjb25maXJtYXRpb24uXHJcbiAgICAgIC8vZm9yIG1vcmUgaW5mbyBzZWUgdGhlIERhdGFQcm92aXNpb25hbCBjbGFzcyBkb2N1bWVudGF0aW9uLlxyXG4gICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHN1YnNjcmliZU1zZywgKHJlcGx5KSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyXSAtIHN1YnNjcmliZS1yZXN1bWVkLXJlc3BvbnNlOiAnLCByZXBseSk7XHJcblxyXG4gICAgICAgIGxldCBvYmpVUkwgPSByZXBseS5ib2R5LnJlc291cmNlO1xyXG5cclxuICAgICAgICBsZXQgbmV3UHJvdmlzaW9uYWwgPSBfdGhpcy5fcHJvdmlzaW9uYWxzW29ialVSTF07XHJcbiAgICAgICAgZGVsZXRlIF90aGlzLl9wcm92aXNpb25hbHNbb2JqVVJMXTtcclxuICAgICAgICBpZiAobmV3UHJvdmlzaW9uYWwpIG5ld1Byb3Zpc2lvbmFsLl9yZWxlYXNlTGlzdGVuZXJzKCk7XHJcblxyXG4gICAgICAgIGlmIChyZXBseS5ib2R5LmNvZGUgPCAyMDApIHsgLy8gdG9kbzogY2hlY2sgaWYgdGhpcyBpcyBuZWVkZWQgZm9yIHRoZSByZXN1bWVcclxuXHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXJdIC0gcmVzdW1lIG5ldyBEYXRhUHJvdmlzaW9uYWw6ICcsIHJlcGx5LCBvYmpVUkwpO1xyXG4gICAgICAgICAgbmV3UHJvdmlzaW9uYWwgPSBuZXcgRGF0YVByb3Zpc2lvbmFsKF90aGlzLl9vd25lciwgb2JqVVJMLCBfdGhpcy5fYnVzLCByZXBseS5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKTtcclxuICAgICAgICAgIF90aGlzLl9wcm92aXNpb25hbHNbb2JqVVJMXSA9IG5ld1Byb3Zpc2lvbmFsO1xyXG5cclxuICAgICAgICB9IGVsc2UgaWYgKHJlcGx5LmJvZHkuY29kZSA9PT0gMjAwKSB7XHJcblxyXG4gICAgICAgICAgbGV0IGxpc3RPZk9ic2VydmVycyA9IHJlcGx5LmJvZHkudmFsdWU7XHJcblxyXG4gICAgICAgICAgZm9yIChsZXQgaW5kZXggaW4gbGlzdE9mT2JzZXJ2ZXJzKSB7XHJcblxyXG4gICAgICAgICAgICBsZXQgZGF0YU9iamVjdCA9IGxpc3RPZk9ic2VydmVyc1tpbmRleF07XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbc3luY2hlcl0gLSBSZXN1bWUgT2JqZWN0IE9ic2VydmVyOiAnLCByZXBseSwgZGF0YU9iamVjdCwgX3RoaXMuX3Byb3Zpc2lvbmFscyk7XHJcblxyXG4gICAgICAgICAgICBpZiAoZGF0YU9iamVjdC5jaGlsZHJlbk9iamVjdHMpIHsgZGF0YU9iamVjdC5jaGlsZHJlbk9iamVjdHMgPSBkZWVwQ2xvbmUoZGF0YU9iamVjdC5jaGlsZHJlbk9iamVjdHMpOyB9XHJcblxyXG4gICAgICAgICAgICBkYXRhT2JqZWN0LmRhdGEgPSBkZWVwQ2xvbmUoZGF0YU9iamVjdC5kYXRhKSB8fCB7fTtcclxuICAgICAgICAgICAgZGF0YU9iamVjdC5yZXN1bWUgPSB0cnVlO1xyXG4gICAgICAgICAgICBkYXRhT2JqZWN0LnN5bmNoZXIgPSBfdGhpcztcclxuXHJcbiAgICAgICAgICAgIC8vVE9ETzogbXV0dWFsQXV0aGVudGljYXRpb24gRm9yIEZ1cnRoZXIgU3R1ZHlcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyLl9yZXN1bWVTdWJzY3JpYmVdIC0gY3JlYXRlIG5ldyBkYXRhT2JqZWN0OiAnLCBkYXRhT2JqZWN0KTtcclxuICAgICAgICAgICAgbGV0IG5ld09iaiA9IG5ldyBEYXRhT2JqZWN0T2JzZXJ2ZXIoZGF0YU9iamVjdCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoZGF0YU9iamVjdC5jaGlsZHJlbk9iamVjdHMpIHsgbmV3T2JqLnJlc3VtZUNoaWxkcmVucyhkYXRhT2JqZWN0LmNoaWxkcmVuT2JqZWN0cyk7IH1cclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyLl9yZXN1bWVTdWJzY3JpYmVdIC0gbmV3IGRhdGFPYmplY3QnLCBuZXdPYmopO1xyXG4gICAgICAgICAgICBfdGhpcy5fb2JzZXJ2ZXJzW25ld09iai51cmxdID0gbmV3T2JqO1xyXG5cclxuICAgICAgICAgICAgaWYgKF90aGlzLl9wcm92aXNpb25hbHNbbmV3T2JqLnVybF0pIHtcclxuICAgICAgICAgICAgICBfdGhpcy5fcHJvdmlzaW9uYWxzW25ld09iai51cmxdLmFwcGx5KG5ld09iaik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vbGV0cyBzeW5jIHdpdGggUmVwb3J0ZXJcclxuICAgICAgICAgICAgLy8gaXQgd2FzIGNvbW1lbnRlZCB0byBsZXQgaHlwZXJ0aWVzIGRlY2lkZSB3aGVuIHRvIHN5bmNcclxuICAgICAgICAgICAgLy9uZXdPYmouc3luYygpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHJlc29sdmUoX3RoaXMuX29ic2VydmVycyk7XHJcblxyXG4gICAgICAgICAgaWYgKHRoaXMuX29uT2JzZXJ2ZXJzUmVzdW1lKSB0aGlzLl9vbk9ic2VydmVyc1Jlc3VtZShfdGhpcy5fb2JzZXJ2ZXJzKTtcclxuXHJcbiAgICAgICAgfSBlbHNlIGlmIChyZXBseS5ib2R5LmNvZGUgPT09IDQwNCkge1xyXG4gICAgICAgICAgcmVzb2x2ZSh7fSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlamVjdChyZXBseS5ib2R5LmRlc2MpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbiAgfVxyXG5cclxuICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBhIGxvY2FsIHJ1bnRpbWUgUmVwb3J0ZXJPYmplY3QgLT4gX29uUmVtb3RlU3Vic2NyaWJlXHJcbiAgX29uRm9yd2FyZChtc2cpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgbGV0IHJlcG9ydGVyID0gX3RoaXMuX3JlcG9ydGVyc1ttc2cuYm9keS50b107XHJcbiAgICByZXBvcnRlci5fb25Gb3J3YXJkKG1zZyk7XHJcbiAgfVxyXG5cclxuICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBhIHJlbW90ZSBTeW5jaGVyIC0+IGNyZWF0ZSAodGhpcyBpcyBhY3R1YWxseSBhbiBpbnZpdGF0aW9uIHRvIHN1YnNjcmliZSlcclxuICBfb25SZW1vdGVDcmVhdGUobXNnKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG4gICAgbGV0IHJlc291cmNlID0gbXNnLmZyb20uc2xpY2UoMCwgLTEzKTsgLy9yZW1vdmUgXCIvc3Vic2NyaXB0aW9uXCIgZnJvbSB0aGUgVVJMXHJcbiAgICBsZXQgZGl2aWRlZFVSTCA9IGRpdmlkZVVSTChyZXNvdXJjZSk7XHJcbiAgICBsZXQgZG9tYWluID0gZGl2aWRlZFVSTC5kb21haW47XHJcblxyXG4gICAgbGV0IGV2ZW50ID0ge1xyXG4gICAgICB0eXBlOiBtc2cudHlwZSxcclxuICAgICAgZnJvbTogbXNnLmJvZHkuc291cmNlLFxyXG4gICAgICB1cmw6IHJlc291cmNlLFxyXG4gICAgICBkb21haW46IGRvbWFpbixcclxuICAgICAgc2NoZW1hOiBtc2cuYm9keS5zY2hlbWEsXHJcbiAgICAgIHZhbHVlOiBtc2cuYm9keS52YWx1ZSxcclxuICAgICAgaWRlbnRpdHk6IG1zZy5ib2R5LmlkZW50aXR5LFxyXG5cclxuICAgICAgYWNrOiAodHlwZSkgPT4ge1xyXG4gICAgICAgIGxldCBsVHlwZSA9IDIwMDtcclxuICAgICAgICBpZiAodHlwZSkge1xyXG4gICAgICAgICAgbFR5cGUgPSB0eXBlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAvL3NlbmQgYWNrIHJlc3BvbnNlIG1lc3NhZ2VcclxuICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHtcclxuICAgICAgICAgIGlkOiBtc2cuaWQsIHR5cGU6ICdyZXNwb25zZScsIGZyb206IG1zZy50bywgdG86IG1zZy5mcm9tLFxyXG4gICAgICAgICAgYm9keTogeyBjb2RlOiBsVHlwZSB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgaWYgKF90aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXIpIHtcclxuICAgICAgY29uc29sZS5pbmZvKCdbU3luY2hlcl0gTk9USUZJQ0FUSU9OLUVWRU5UOiAnLCBldmVudCk7XHJcbiAgICAgIF90aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXIoZXZlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9GTE9XLUlOOiBtZXNzYWdlIHJlY2VpdmVkIGZyb20gYSByZW1vdGUgRGF0YU9iamVjdFJlcG9ydGVyIC0+IGRlbGV0ZVxyXG4gIF9vblJlbW90ZURlbGV0ZShtc2cpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAvL3JlbW92ZSBcIi9zdWJzY3JpcHRpb25cIiBmcm9tIHRoZSBVUkxcclxuICAgIGxldCByZXNvdXJjZSA9IG1zZy5ib2R5LnJlc291cmNlO1xyXG5cclxuICAgIGxldCBvYmplY3QgPSBfdGhpcy5fb2JzZXJ2ZXJzW3Jlc291cmNlXTtcclxuXHJcbiAgICBsZXQgdW5zdWJzY3JpYmUgPSB7XHJcbiAgICAgIGZyb206IF90aGlzLm93bmVyLFxyXG4gICAgICB0bzogX3RoaXMuX3N1YlVSTCxcclxuICAgICAgaWQ6IG1zZy5pZCxcclxuICAgICAgdHlwZTogJ3Vuc3Vic2NyaWJlJyxcclxuICAgICAgYm9keTogeyByZXNvdXJjZTogbXNnLmJvZHkucmVzb3VyY2UgfVxyXG4gICAgfTtcclxuXHJcbiAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHVuc3Vic2NyaWJlKTtcclxuXHJcbiAgICBkZWxldGUgX3RoaXMuX29ic2VydmVyc1tyZXNvdXJjZV07XHJcblxyXG4gICAgaWYgKG9iamVjdCkge1xyXG4gICAgICBsZXQgZXZlbnQgPSB7XHJcbiAgICAgICAgdHlwZTogbXNnLnR5cGUsXHJcbiAgICAgICAgdXJsOiByZXNvdXJjZSxcclxuICAgICAgICBpZGVudGl0eTogbXNnLmJvZHkuaWRlbnRpdHksXHJcblxyXG4gICAgICAgIGFjazogKHR5cGUpID0+IHtcclxuICAgICAgICAgIGxldCBsVHlwZSA9IDIwMDtcclxuICAgICAgICAgIGlmICh0eXBlKSB7XHJcbiAgICAgICAgICAgIGxUeXBlID0gdHlwZTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgIC8vVE9ETzogYW55IG90aGVyIGRpZmZlcmVudCBvcHRpb25zIGZvciB0aGUgcmVsZWFzZSBwcm9jZXNzLCBsaWtlIGFjY2VwdCBidXQgbm9yIHJlbGVhc2UgbG9jYWw/XHJcbiAgICAgICAgICBpZiAobFR5cGUgPT09IDIwMCkge1xyXG4gICAgICAgICAgICBvYmplY3QuZGVsZXRlKCk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLy9zZW5kIGFjayByZXNwb25zZSBtZXNzYWdlXHJcbiAgICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHtcclxuICAgICAgICAgICAgaWQ6IG1zZy5pZCwgdHlwZTogJ3Jlc3BvbnNlJywgZnJvbTogbXNnLnRvLCB0bzogbXNnLmZyb20sXHJcbiAgICAgICAgICAgIGJvZHk6IHsgY29kZTogbFR5cGUsIHNvdXJjZTogX3RoaXMuX293bmVyIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIGlmIChfdGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ05PVElGSUNBVElPTi1FVkVOVDogJywgZXZlbnQpO1xyXG4gICAgICAgIF90aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXIoZXZlbnQpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHtcclxuICAgICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcclxuICAgICAgICBib2R5OiB7IGNvZGU6IDQwNCwgc291cmNlOiBfdGhpcy5fb3duZXIgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIGNsb3NlIGV2ZW50IHJlY2VpdmVkIGZyb20gcnVudGltZSByZWdpc3RyeVxyXG4gIF9vbkV4ZWN1dGUobXNnKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIGxldCByZXBseSA9IHtcclxuICAgICAgaWQ6IG1zZy5pZCwgdHlwZTogJ3Jlc3BvbnNlJywgZnJvbTogbXNnLnRvLCB0bzogbXNnLmZyb20sXHJcbiAgICAgIGJvZHk6IHsgY29kZTogMjAwIH1cclxuICAgIH07XHJcblxyXG4gICAgaWYgKChtc2cuZnJvbSA9PT0gX3RoaXMuX3J1bnRpbWVVcmwgKyAnL3JlZ2lzdHJ5LycgfHwgbXNnLmZyb20gPT09IF90aGlzLl9ydW50aW1lVXJsICsgJy9yZWdpc3RyeScpICYmIG1zZy5ib2R5ICYmIG1zZy5ib2R5Lm1ldGhvZCAmJiBtc2cuYm9keS5tZXRob2QgPT09ICdjbG9zZScgJiYgX3RoaXMuX29uQ2xvc2UpIHtcclxuICAgICAgbGV0IGV2ZW50ID0ge1xyXG4gICAgICAgIHR5cGU6ICdjbG9zZScsXHJcblxyXG4gICAgICAgIGFjazogKHR5cGUpID0+IHtcclxuICAgICAgICAgIGlmICh0eXBlKSB7XHJcbiAgICAgICAgICAgIHJlcGx5LmJvZHkuY29kZSA9IHR5cGU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAvL3NlbmQgYWNrIHJlc3BvbnNlIG1lc3NhZ2VcclxuICAgICAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2UocmVwbHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIGNvbnNvbGUuaW5mbygnW1N5bmNoZXJdIENsb3NlLUVWRU5UOiAnLCBldmVudCk7XHJcbiAgICAgIF90aGlzLl9vbkNsb3NlKGV2ZW50KTtcclxuXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHJlcGx5KTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIENhbGxiYWNrIHN5c3RlbSB0byB0cmlnZ2VyIHRoZSByZXN1bWVkIHJlcG9ydGVyc1xyXG4gICogQHBhcmFtICB7RnVuY3Rpb259IGNhbGxiYWNrIC0gZnVuY3Rpb24gY2FsbGJhY2sgd2hpY2ggd2lsbCBiZSBpbnZva2VkXHJcbiAgKiBAcmV0dXJuIHtPYmplY3Q8VVJMLCBEYXRhT2JqZWN0UmVwb3J0ZXI+fSBSZXR1cm4gb25lIG9iamVjdCB3aXRoIGFsbCByZXN1bWVkIHJlcG9ydGVycztcclxuICAqL1xyXG4gIG9uUmVwb3J0ZXJzUmVzdW1lKGNhbGxiYWNrKSB7XHJcbiAgICB0aGlzLl9vblJlcG9ydGVyc1Jlc3VtZSA9IGNhbGxiYWNrO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgKiBDYWxsYmFjayBzeXN0ZW0gdG8gdHJpZ2dlciB0aGUgcmVzdW1lZCBvYnNlcnZlcnNcclxuICAqIEBwYXJhbSAge0Z1bmN0aW9ufSBjYWxsYmFjayAtIGZ1bmN0aW9uIGNhbGxiYWNrIHdoaWNoIHdpbGwgYmUgaW52b2tlZFxyXG4gICogQHJldHVybiB7T2JqZWN0PFVSTCwgRGF0YU9iamVjdE9ic2VydmVyPn0gUmV0dXJuIG9uZSBvYmplY3Qgd2l0aCBhbGwgcmVzdW1lZCBvYnNlcnZlcnM7XHJcbiAgKi9cclxuICBvbk9ic2VydmVyc1Jlc3VtZShjYWxsYmFjaykge1xyXG4gICAgdGhpcy5fb25PYnNlcnZlcnNSZXN1bWUgPSBjYWxsYmFjaztcclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTeW5jaGVyO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvc3luY2hlci9TeW5jaGVyLmpzIiwiaW1wb3J0IFN5bmNoZXIgZnJvbSAnLi9zeW5jaGVyL1N5bmNoZXInO1xyXG5pbXBvcnQgRGF0YU9iamVjdFJlcG9ydGVyIGZyb20gJy4vc3luY2hlci9EYXRhT2JqZWN0UmVwb3J0ZXInO1xyXG5pbXBvcnQgRGF0YU9iamVjdE9ic2VydmVyIGZyb20gJy4vc3luY2hlci9EYXRhT2JqZWN0T2JzZXJ2ZXInO1xyXG5cclxuZXhwb3J0IHtTeW5jaGVyLCBEYXRhT2JqZWN0UmVwb3J0ZXIsIERhdGFPYmplY3RPYnNlcnZlcn07XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9TeW5jaGVyLmpzIiwiLyoqXHJcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcclxuKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0xcclxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxyXG4qIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxyXG4qIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUdcclxuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcclxuKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxyXG4qXHJcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbipcclxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4qXHJcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4qIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbioqL1xyXG5cclxuaW1wb3J0IFN5bmNPYmplY3QgZnJvbSAnLi9Qcm94eU9iamVjdCc7XHJcblxyXG4vL2ltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzLmpzJztcclxuXHJcbi8qKlxyXG4gKiBUaGUgY2xhc3MgcmV0dXJuZWQgZnJvbSB0aGUgRGF0YU9iamVjdCBhZGRDaGlsZHJlbiBjYWxsIG9yIGZyb20gb25BZGRDaGlsZHJlbiBpZiByZW1vdGVseSBjcmVhdGVkLlxyXG4gKi9cclxuY2xhc3MgRGF0YU9iamVjdENoaWxkIC8qIGltcGxlbWVudHMgU3luY1N0YXR1cyAqLyB7XHJcbiAgLyogcHJpdmF0ZVxyXG5cclxuICAtLS0tZXZlbnQgaGFuZGxlcnMtLS0tXHJcbiAgX29uUmVzcG9uc2VIYW5kbGVyOiAoZXZlbnQpID0+IHZvaWRcclxuICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAaWdub3JlXHJcbiAgICogU2hvdWxkIG5vdCBiZSB1c2VkIGRpcmVjdGx5IGJ5IEh5cGVydGllcy4gSXQncyBjYWxsZWQgYnkgdGhlIERhdGFPYmplY3QuYWRkQ2hpbGRyZW5cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihpbnB1dCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcbiAgICBmdW5jdGlvbiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IocGFyKSB7XHJcbiAgICAgIHRocm93ICdbRGF0YU9iamVjdENoaWxkXSAnICsgcGFyICsgJyBtYW5kYXRvcnkgcGFyYW1ldGVyIGlzIG1pc3NpbmcnO1xyXG4gICAgfVxyXG5cclxuICAgIGlucHV0LnBhcmVudCA/ICBfdGhpcy5fcGFyZW50ID0gaW5wdXQucGFyZW50IDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCdwYXJlbnQnKTtcclxuICAgIGlucHV0LnVybCA/ICBfdGhpcy5fdXJsID0gaW5wdXQudXJsIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCd1cmwnKTtcclxuICAgIGlucHV0LmNyZWF0ZWQgPyBfdGhpcy5fY3JlYXRlZCA9IGlucHV0LmNyZWF0ZWQgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ2NyZWF0ZWQnKTtcclxuICAgIGlucHV0LnJlcG9ydGVyID8gX3RoaXMuX3JlcG9ydGVyID0gaW5wdXQucmVwb3J0ZXIgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3JlcG9ydGVyJyk7XHJcbiAgICBpbnB1dC5ydW50aW1lID8gX3RoaXMuX3J1bnRpbWUgPSBpbnB1dC5ydW50aW1lIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCdydW50aW1lJyk7XHJcbiAgICBpbnB1dC5zY2hlbWEgPyBfdGhpcy5fc2NoZW1hID0gaW5wdXQuc2NoZW1hIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCdzY2hlbWEnKTtcclxuICAgIGlucHV0LnBhcmVudE9iamVjdCA/IF90aGlzLl9wYXJlbnRPYmplY3QgPSBpbnB1dC5wYXJlbnRPYmplY3QgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3BhcmVudE9iamVjdCcpO1xyXG5cclxuICAgIGlmIChpbnB1dC5uYW1lKSBfdGhpcy5fbmFtZSA9IGlucHV0Lm5hbWU7XHJcbiAgICBpZiAoaW5wdXQuZGVzY3JpcHRpb24pIF90aGlzLl9kZXNjcmlwdGlvbiA9IGlucHV0LmRlc2NyaXB0aW9uO1xyXG4gICAgaWYgKGlucHV0LnRhZ3MpIF90aGlzLl90YWdzID0gaW5wdXQudGFncztcclxuICAgIGlmIChpbnB1dC5yZXNvdXJjZXMpIF90aGlzLl9yZXNvdXJjZXMgPSBpbnB1dC5yZXNvdXJjZXM7XHJcbiAgICBpZiAoaW5wdXQub2JzZXJ2ZXJTdG9yYWdlKSBfdGhpcy5fb2JzZXJ2ZXJTdG9yYWdlID0gaW5wdXQub2JzZXJ2ZXJTdG9yYWdlO1xyXG4gICAgaWYgKGlucHV0LnB1YmxpY09ic2VydmF0aW9uKSBfdGhpcy5fcHVibGljT2JzZXJ2YXRpb24gPSBpbnB1dC5wdWJsaWNPYnNlcnZhdGlvbjtcclxuXHJcbiAgICBpZiAoaW5wdXQuZGF0YSkge1xyXG4gICAgICBfdGhpcy5fc3luY09iaiA9IG5ldyBTeW5jT2JqZWN0KGlucHV0LmRhdGEpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgX3RoaXMuX3N5bmNPYmogPSBuZXcgU3luY09iamVjdCh7fSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ1tEYXRhT2JqZWN0Q2hpbGQgLSAgQ29uc3RydWN0b3JdIC0gJywgX3RoaXMuX3N5bmNPYmopO1xyXG5cclxuICAgIF90aGlzLl9idXMgPSBfdGhpcy5fcGFyZW50T2JqZWN0Ll9idXM7XHJcbiAgICBfdGhpcy5fb3duZXIgPSBfdGhpcy5fcGFyZW50T2JqZWN0Ll9vd25lcjtcclxuXHJcbiAgICBfdGhpcy5fYWxsb2NhdGVMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICBfdGhpcy5fbWV0YWRhdGEgPSBpbnB1dDtcclxuXHJcbiAgICAvLyBkZWxldGUgX3RoaXMuX21ldGFkYXRhLmRhdGE7XHJcbiAgICBkZWxldGUgX3RoaXMuX21ldGFkYXRhLnBhcmVudE9iamVjdDtcclxuXHJcbiAgfVxyXG5cclxuICBfYWxsb2NhdGVMaXN0ZW5lcnMoKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIC8vdGhpcyBpcyBvbmx5IG5lZWRlZCBmb3IgY2hpbGRyZW4gcmVwb3J0ZXJzXHJcbiAgICBpZiAoX3RoaXMuX3JlcG9ydGVyID09PSBfdGhpcy5fb3duZXIpIHtcclxuICAgICAgX3RoaXMuX2xpc3RlbmVyID0gX3RoaXMuX2J1cy5hZGRMaXN0ZW5lcihfdGhpcy5fcmVwb3J0ZXIsIChtc2cpID0+IHtcclxuICAgICAgICBpZiAobXNnLnR5cGUgPT09ICdyZXNwb25zZScgJiYgbXNnLmlkID09PSBfdGhpcy5fbXNnSWQpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdEYXRhT2JqZWN0Q2hpbGQub25SZXNwb25zZTonLCBtc2cpO1xyXG4gICAgICAgICAgX3RoaXMuX29uUmVzcG9uc2UobXNnKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3JlbGVhc2VMaXN0ZW5lcnMoKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIGlmIChfdGhpcy5fbGlzdGVuZXIpIHtcclxuICAgICAgX3RoaXMuX2xpc3RlbmVyLnJlbW92ZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUmVsZWFzZSBhbmQgZGVsZXRlIG9iamVjdCBkYXRhXHJcbiAgICovXHJcbiAgZGVsZXRlKCkge1xyXG4gICAgbGV0IF90aGlzID0gdGhpcztcclxuXHJcblxyXG4gICAgX3RoaXMuX3JlbGVhc2VMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICAvL1RPRE86IHNlbmQgZGVsZXRlIG1lc3NhZ2UgP1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQWxsIE1ldGFkYXRhIGFib3V0IHRoZSBDaGlsZCBEYXRhIE9iamVjdFxyXG4gICAqIEB0eXBlIHtPYmplY3R9IC1cclxuICAgKi9cclxuICBnZXQgbWV0YWRhdGEoKSB7IHJldHVybiB0aGlzLl9tZXRhZGF0YTsgfVxyXG5cclxuICAvKipcclxuICAgKiBDaGlsZHJlbiBJRCBnZW5lcmF0ZWQgb24gYWRkQ2hpbGRyZW4uIFVuaXF1ZSBpZGVudGlmaWVyXHJcbiAgICogQHR5cGUge1VSTH0gLSBVUkwgb2YgdGhlIGZvcm1hdCA8SHlwZXJ0eVVSTD4jPG51bWVyaWMtc2VxdWVuY2U+XHJcbiAgICovXHJcbiAgZ2V0IGNoaWxkSWQoKSB7IHJldHVybiB0aGlzLl9jaGlsZElkOyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIERhdGEgU3RydWN0dXJlIHRvIGJlIHN5bmNocm9uaXplZC5cclxuICAgKiBAdHlwZSB7SlNPTn0gLSBKU09OIHN0cnVjdHVyZSB0aGF0IHNob3VsZCBmb2xsb3cgdGhlIGRlZmluZWQgc2NoZW1hLCBpZiBhbnkuXHJcbiAgICovXHJcbiAgZ2V0IGRhdGEoKSB7IHJldHVybiB0aGlzLl9zeW5jT2JqLmRhdGE7IH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0IGZvciB0aGlzIGRhdGFPYmplY3RDaGlsZCBhbiBpZGVudGl0eVxyXG4gICAqIEBtZXRob2QgaWRlbnRpdHlcclxuICAgKiBAcGFyYW0gIHtJZGVudGl0eX0gaWRlbnRpdHkgaWRlbnRpdHkgZnJvbSB3aG8gY3JlYXRlZCB0aGUgbWVzc2FnZVxyXG4gICAqL1xyXG4gIHNldCBpZGVudGl0eShpZGVudGl0eSkgeyB0aGlzLl9pZGVudGl0eSA9IGlkZW50aXR5OyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCBmb3IgdGhpcyBkYXRhT2JqZWN0Q2hpbGQgYW4gaWRlbnRpdHlcclxuICAgKiBAbWV0aG9kIGlkZW50aXR5XHJcbiAgICogQHJldHVybiB7SWRlbnRpdHl9IGlkZW50aXR5IGZyb20gd2hvIGNyZWF0ZWQgdGhlIG1lc3NhZ2VcclxuICAgKi9cclxuICBnZXQgaWRlbnRpdHkoKSB7IHJldHVybiB0aGlzLl9pZGVudGl0eTsgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWdpc3RlciB0aGUgY2hhbmdlIGxpc3RlbmVycyBzZW50IGJ5IHRoZSByZXBvcnRlciBjaGlsZFxyXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2tcclxuICAgKi9cclxuICBvbkNoYW5nZShjYWxsYmFjaykge1xyXG4gICAgdGhpcy5fc3luY09iai5vYnNlcnZlKChldmVudCkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZygnW0RhdGFPYmplY3RDaGlsZCAtIG9ic2VydmVyXSAtICcsIGV2ZW50KTtcclxuICAgICAgY2FsbGJhY2soZXZlbnQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTZXR1cCB0aGUgY2FsbGJhY2sgdG8gcHJvY2VzcyByZXNwb25zZSBub3RpZmljYXRpb25zIG9mIHRoZSBjcmVhdGVzXHJcbiAgICogQHBhcmFtIHtmdW5jdGlvbihldmVudDogTXNnRXZlbnQpfSBjYWxsYmFja1xyXG4gICAqL1xyXG4gIG9uUmVzcG9uc2UoY2FsbGJhY2spIHtcclxuICAgIHRoaXMuX29uUmVzcG9uc2VIYW5kbGVyID0gY2FsbGJhY2s7XHJcbiAgfVxyXG5cclxuICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBhIHJlbW90ZSBEYXRhT2JqZWN0IC0+IF9vbkNoaWxkQ3JlYXRlXHJcbiAgX29uUmVzcG9uc2UobXNnKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIGxldCBldmVudCA9IHtcclxuICAgICAgdHlwZTogbXNnLnR5cGUsXHJcbiAgICAgIHVybDogbXNnLmJvZHkuc291cmNlLFxyXG4gICAgICBjb2RlOiBtc2cuYm9keS5jb2RlXHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChfdGhpcy5fb25SZXNwb25zZUhhbmRsZXIpIHtcclxuICAgICAgX3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyKGV2ZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBEYXRhT2JqZWN0Q2hpbGQ7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9zeW5jaGVyL0RhdGFPYmplY3RDaGlsZC5qcyIsIi8qKlxyXG4qIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQVxyXG4qIENvcHlyaWdodCAyMDE2IElORVNDLUlEXHJcbiogQ29weXJpZ2h0IDIwMTYgUVVPQklTIE5FVFdPUktTIFNMXHJcbiogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlZcclxuKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBEZXV0c2NoZSBUZWxla29tIEFHXHJcbiogQ29weXJpZ2h0IDIwMTYgQXBpemVlXHJcbiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU5cclxuKlxyXG4qIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4qIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4qXHJcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuKlxyXG4qIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4qIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4qKi9cclxuXHJcbi8qKlxyXG4gKiBAYWNjZXNzIHByaXZhdGVcclxuICogVGhpcyBjbGFzcyBpcyByZXNwb25zaWJsZSBmb3IgY29sbGVjdGluZyBkZWx0YSBjaGFuZ2VzIGluIHJlbW90ZSBvYmplY3RzLCBiZWZvcmUgdGhlIHJlc3BvbnNlIG9mIHN1YnNjcmlwdGlvbiByZWFjaCB0aGUgb2JzZXJ2ZXIuXHJcbiAqIEl0J3MgdXNlZCBpbiBTeW5jaGVyIC0+IHN1YnNjcmliZS4gVGhlIGZsb3cgaXMgZGVmaW5lZCBhczpcclxuICogMS4gKG9ic2VydmVyKSAtLXN1YnNjcmliZS0tPiAocmVwb3J0ZXIpXHJcbiAqIDIuIChvYnNlcnZlcikgPC0tZGVsdGEgdXBkYXRlcy0tIChyZXBvcnRlcilcclxuICogMy4gKG9ic2VydmVyKSA8LS1zdWJzY3JpYmUgcmVzcG9uc2UtLSAocmVwb3J0ZXIpXHJcbiAqIFRoaXMgbWVhbnMgdGhhdCB0aGVyZSBjb3VsZCBiZSBkZWx0YSB1cGRhdGVzIHRyYW5zZmVycmVkIGJlZm9yZSB0aGUgc3Vic2NyaXB0aW9uIGNvbmZpcm1hdGlvbi5cclxuICogU2luY2UgdGhlcmUgaXMgbm8gRGF0YU9iamVjdE9ic2VydmVyIGJlZm9yZSB0aGUgdWJzY3JpcHRpb24gY29uZmlybWF0aW9uLCB0aGVyZSBzaG91bGQgYmUgc29tZSBvdGhlciBvYmplY3QgY29sbGVjdGluZyB0aGUgdXBkYXRlcy5cclxuICogUHJvdmlzaW9uYWwgZGF0YSBpcyBhcHBsaWVkIHRvIHRoZSBEYXRhT2JqZWN0T2JzZXJ2ZXIgYWZ0ZXIgY29uZmlybWF0aW9uLiBPciBkaXNjYXJkZWQgaWYgdGhlcmUgaXMgbm8gY29uZmlybWF0aW9uLlxyXG4gKi9cclxuY2xhc3MgRGF0YVByb3Zpc2lvbmFsIHtcclxuICAvKiBwcml2YXRlXHJcbiAgX2NoaWxkcmVuTGlzdGVuZXJzOiBbTXNnTGlzdGVuZXJdXHJcbiAgX2xpc3RlbmVyOiBNc2dMaXN0ZW5lclxyXG5cclxuICBfY2hhbmdlczogW11cclxuICAqL1xyXG5cclxuICBjb25zdHJ1Y3Rvcihvd25lciwgdXJsLCBidXMsIGNoaWxkcmVuKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIF90aGlzLl9vd25lciA9IG93bmVyO1xyXG4gICAgX3RoaXMuX3VybCA9IHVybDtcclxuICAgIF90aGlzLl9idXMgPSBidXM7XHJcbiAgICBfdGhpcy5fY2hpbGRyZW4gPSBjaGlsZHJlbjtcclxuXHJcbiAgICBfdGhpcy5fY2hhbmdlcyA9IFtdO1xyXG4gICAgX3RoaXMuX2FsbG9jYXRlTGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICBfYWxsb2NhdGVMaXN0ZW5lcnMoKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG5cclxuICAgIF90aGlzLl9saXN0ZW5lciA9IF90aGlzLl9idXMuYWRkTGlzdGVuZXIoX3RoaXMuX3VybCwgKG1zZykgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZygnRGF0YVByb3Zpc2lvbmFsLScgKyBfdGhpcy5fdXJsICsgJy1SQ1Y6ICcsIG1zZyk7XHJcbiAgICAgIF90aGlzLl9jaGFuZ2VzLnB1c2gobXNnKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qXHJcbiAgICBfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMgPSBbXTtcclxuICAgIGlmIChfdGhpcy5fY2hpbGRyZW4pIHtcclxuICAgICAgbGV0IGNoaWxkQmFzZVVSTCA9IHVybCArICcvY2hpbGRyZW4vJztcclxuICAgICAgX3RoaXMuX2NoaWxkcmVuLmZvckVhY2goKGNoaWxkKSA9PiB7XHJcbiAgICAgICAgbGV0IGNoaWxkVVJMID0gY2hpbGRCYXNlVVJMICsgY2hpbGQ7XHJcbiAgICAgICAgbGV0IGxpc3RlbmVyID0gX3RoaXMuX2J1cy5hZGRMaXN0ZW5lcihjaGlsZFVSTCwgKG1zZykgPT4ge1xyXG4gICAgICAgICAgLy9pZ25vcmUgbXNnIHNlbnQgYnkgaGltc2VsZlxyXG4gICAgICAgICAgaWYgKG1zZy5mcm9tICE9PSBvd25lcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhtc2cpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XHJcbiAgICAgIH0pO1xyXG4gICAgfSovXHJcbiAgfVxyXG5cclxuICBfcmVsZWFzZUxpc3RlbmVycygpIHtcclxuICAgIGxldCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgX3RoaXMuX2xpc3RlbmVyLnJlbW92ZSgpO1xyXG5cclxuICAgIC8qX3RoaXMuX2NoaWxkcmVuTGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XHJcbiAgICAgIGxpc3RlbmVyLnJlbW92ZSgpO1xyXG4gICAgfSk7Ki9cclxuICB9XHJcblxyXG4gIGdldCBjaGlsZHJlbigpIHsgcmV0dXJuIHRoaXMuX2NoaWxkcmVuOyB9XHJcblxyXG4gIGFwcGx5KG9ic2VydmVyKSB7XHJcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xyXG4gICAgX3RoaXMuX2NoYW5nZXMuZm9yRWFjaCgoY2hhbmdlKSA9PiB7XHJcbiAgICAgIG9ic2VydmVyLl9jaGFuZ2VPYmplY3Qob2JzZXJ2ZXIuX3N5bmNPYmosIGNoYW5nZSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IERhdGFQcm92aXNpb25hbDtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3N5bmNoZXIvRGF0YVByb3Zpc2lvbmFsLmpzIiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JcIiksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDE1NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3QuYXNzaWduO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2Fzc2lnbi5qc1xuLy8gbW9kdWxlIGlkID0gMTU5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciAkT2JqZWN0ID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpe1xuICByZXR1cm4gJE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qc1xuLy8gbW9kdWxlIGlkID0gMTYxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0Jztcbi8vIDE5LjEuMi4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UsIC4uLilcbnZhciBnZXRLZXlzICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJylcbiAgLCBnT1BTICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJylcbiAgLCBwSUUgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKVxuICAsIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgLCBJT2JqZWN0ICA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKVxuICAsICRhc3NpZ24gID0gT2JqZWN0LmFzc2lnbjtcblxuLy8gc2hvdWxkIHdvcmsgd2l0aCBzeW1ib2xzIGFuZCBzaG91bGQgaGF2ZSBkZXRlcm1pbmlzdGljIHByb3BlcnR5IG9yZGVyIChWOCBidWcpXG5tb2R1bGUuZXhwb3J0cyA9ICEkYXNzaWduIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgdmFyIEEgPSB7fVxuICAgICwgQiA9IHt9XG4gICAgLCBTID0gU3ltYm9sKClcbiAgICAsIEsgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3QnO1xuICBBW1NdID0gNztcbiAgSy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbihrKXsgQltrXSA9IGs7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbU10gIT0gNyB8fCBPYmplY3Qua2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT0gSztcbn0pID8gZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc291cmNlKXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICB2YXIgVCAgICAgPSB0b09iamVjdCh0YXJnZXQpXG4gICAgLCBhTGVuICA9IGFyZ3VtZW50cy5sZW5ndGhcbiAgICAsIGluZGV4ID0gMVxuICAgICwgZ2V0U3ltYm9scyA9IGdPUFMuZlxuICAgICwgaXNFbnVtICAgICA9IHBJRS5mO1xuICB3aGlsZShhTGVuID4gaW5kZXgpe1xuICAgIHZhciBTICAgICAgPSBJT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSlcbiAgICAgICwga2V5cyAgID0gZ2V0U3ltYm9scyA/IGdldEtleXMoUykuY29uY2F0KGdldFN5bWJvbHMoUykpIDogZ2V0S2V5cyhTKVxuICAgICAgLCBsZW5ndGggPSBrZXlzLmxlbmd0aFxuICAgICAgLCBqICAgICAgPSAwXG4gICAgICAsIGtleTtcbiAgICB3aGlsZShsZW5ndGggPiBqKWlmKGlzRW51bS5jYWxsKFMsIGtleSA9IGtleXNbaisrXSkpVFtrZXldID0gU1trZXldO1xuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtYXNzaWduLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLy8gMTkuMS4zLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GLCAnT2JqZWN0Jywge2Fzc2lnbjogcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpfSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLy8gMTkuMS4yLjYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKVxudmFyIHRvSU9iamVjdCAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JylcbiAgLCAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKS5mO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2dldE93blByb3BlcnR5RGVzY3JpcHRvcicsIGZ1bmN0aW9uKCl7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSl7XG4gICAgcmV0dXJuICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodG9JT2JqZWN0KGl0KSwga2V5KTtcbiAgfTtcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qc1xuLy8gbW9kdWxlIGlkID0gMTY3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

// version: 0.7.1
// date: Sat Jul 22 2017 20:17:49 GMT+0100 (GMT Daylight Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("IdentityFactory", [], factory);
	else if(typeof exports === 'object')
		exports["IdentityFactory"] = factory();
	else
		root[""] = root[""] || {}, root[""]["IdentityFactory"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 137);
/******/ })
/************************************************************************/
/******/ ({

/***/ 120:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* The UserProfile according to User Identity Data Model
*/

var UserProfile = function UserProfile(username, userURL, avatar, cn, locale) {
  (0, _classCallCheck3.default)(this, UserProfile);


  if (username) {
    this.username = username;
  }
  if (avatar) {
    this.avatar = avatar;
  }
  if (cn) {
    this.cn = cn;
  }
  if (locale) {
    this.locale = locale;
  }
  if (userURL) {
    this.userURL = userURL;
  }
};

exports.default = UserProfile;
module.exports = exports["default"];

/***/ }),

/***/ 129:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(8);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _UserProfile = __webpack_require__(120);

var _UserProfile2 = _interopRequireDefault(_UserProfile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MessageBodyIdentity = function MessageBodyIdentity(username, userURL, avatar, cn, locale, idp, assertion) {
    (0, _classCallCheck3.default)(this, MessageBodyIdentity);


    if (!idp) throw new Error('IDP should be a parameter');
    if (!username) throw new Error('username should be a parameter');

    this.idp = idp;

    if (assertion) {
        this.assertion = assertion;
    }
    this.userProfile = new _UserProfile2.default(username, userURL, avatar, cn, locale);
}; /**
   * The Identity info to be added to Message.Body.Identity
   */

exports.default = MessageBodyIdentity;
module.exports = exports['default'];

/***/ }),

/***/ 137:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserProfile = undefined;

var _UserProfile = __webpack_require__(120);

var _UserProfile2 = _interopRequireDefault(_UserProfile);

var _MessageBodyIdentity = __webpack_require__(129);

var _MessageBodyIdentity2 = _interopRequireDefault(_MessageBodyIdentity);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.UserProfile = _UserProfile2.default;
exports.default = _MessageBodyIdentity2.default;

/***/ }),

/***/ 8:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ })

/******/ });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uPzVjYTYqKioqKioqKioiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIGMyNGI3MGExODNiN2I3MzQzNWUwP2MwOWQqKioqKioqKioiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lkZW50aXR5L1VzZXJQcm9maWxlLmpzIiwid2VicGFjazovLy8uL3NyYy9pZGVudGl0eS9NZXNzYWdlQm9keUlkZW50aXR5LmpzIiwid2VicGFjazovLy8uL3NyYy9JZGVudGl0eUZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanM/MjFhZioqKioqKioqKiJdLCJuYW1lcyI6WyJVc2VyUHJvZmlsZSIsInVzZXJuYW1lIiwidXNlclVSTCIsImF2YXRhciIsImNuIiwibG9jYWxlIiwiTWVzc2FnZUJvZHlJZGVudGl0eSIsImlkcCIsImFzc2VydGlvbiIsIkVycm9yIiwidXNlclByb2ZpbGUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IsQ0FBQztBQUNELE87QUNWQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsbURBQTJDLGNBQWM7O0FBRXpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUNBQTJCLDBCQUEwQixFQUFFO0FBQ3ZELHlDQUFpQyxlQUFlO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhEQUFzRCwrREFBK0Q7O0FBRXJIO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDaEVBOzs7O0lBS01BLFcsR0FFSixxQkFBWUMsUUFBWixFQUFzQkMsT0FBdEIsRUFBK0JDLE1BQS9CLEVBQXVDQyxFQUF2QyxFQUEyQ0MsTUFBM0MsRUFBbUQ7QUFBQTs7O0FBRWpELE1BQUlKLFFBQUosRUFBYztBQUFFLFNBQUtBLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQTJCO0FBQzNDLE1BQUlFLE1BQUosRUFBWTtBQUFFLFNBQUtBLE1BQUwsR0FBY0EsTUFBZDtBQUF1QjtBQUNyQyxNQUFJQyxFQUFKLEVBQVE7QUFBRSxTQUFLQSxFQUFMLEdBQVVBLEVBQVY7QUFBZTtBQUN6QixNQUFJQyxNQUFKLEVBQVk7QUFBRSxTQUFLQSxNQUFMLEdBQWNBLE1BQWQ7QUFBdUI7QUFDckMsTUFBSUgsT0FBSixFQUFhO0FBQUUsU0FBS0EsT0FBTCxHQUFlQSxPQUFmO0FBQXlCO0FBRXpDLEM7O2tCQUdZRixXOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDZGY7Ozs7OztJQUVNTSxtQixHQUVKLDZCQUFZTCxRQUFaLEVBQXNCQyxPQUF0QixFQUErQkMsTUFBL0IsRUFBdUNDLEVBQXZDLEVBQTJDQyxNQUEzQyxFQUFtREUsR0FBbkQsRUFBd0RDLFNBQXhELEVBQW1FO0FBQUE7OztBQUVqRSxRQUFJLENBQUNELEdBQUwsRUFBVSxNQUFNLElBQUlFLEtBQUosQ0FBVSwyQkFBVixDQUFOO0FBQ1YsUUFBSSxDQUFDUixRQUFMLEVBQWUsTUFBTSxJQUFJUSxLQUFKLENBQVUsZ0NBQVYsQ0FBTjs7QUFFZixTQUFLRixHQUFMLEdBQVdBLEdBQVg7O0FBRUEsUUFBSUMsU0FBSixFQUFvQjtBQUFFLGFBQUtBLFNBQUwsR0FBaUJBLFNBQWpCO0FBQTZCO0FBQ25ELFNBQUtFLFdBQUwsR0FBbUIsMEJBQWdCVCxRQUFoQixFQUEwQkMsT0FBMUIsRUFBbUNDLE1BQW5DLEVBQTJDQyxFQUEzQyxFQUErQ0MsTUFBL0MsQ0FBbkI7QUFFRCxDLEVBbEJIOzs7O2tCQXVCZUMsbUI7Ozs7Ozs7Ozs7Ozs7Ozs7QUN2QmY7Ozs7QUFDQTs7Ozs7O1FBRVNOLFc7Ozs7Ozs7OztBQ0hUOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRSIsImZpbGUiOiJJZGVudGl0eUZhY3RvcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShcIklkZW50aXR5RmFjdG9yeVwiLCBbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJJZGVudGl0eUZhY3RvcnlcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wiXCJdID0gcm9vdFtcIlwiXSB8fCB7fSwgcm9vdFtcIlwiXVtcIklkZW50aXR5RmFjdG9yeVwiXSA9IGZhY3RvcnkoKTtcbn0pKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuIFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBpZGVudGl0eSBmdW5jdGlvbiBmb3IgY2FsbGluZyBoYXJtb255IGltcG9ydHMgd2l0aCB0aGUgY29ycmVjdCBjb250ZXh0XG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmkgPSBmdW5jdGlvbih2YWx1ZSkgeyByZXR1cm4gdmFsdWU7IH07XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwge1xuIFx0XHRcdFx0Y29uZmlndXJhYmxlOiBmYWxzZSxcbiBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4gXHRcdFx0XHRnZXQ6IGdldHRlclxuIFx0XHRcdH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEzNyk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay9ib290c3RyYXAgYzI0YjcwYTE4M2I3YjczNDM1ZTAiLCIvKipcclxuKiBUaGUgVXNlclByb2ZpbGUgYWNjb3JkaW5nIHRvIFVzZXIgSWRlbnRpdHkgRGF0YSBNb2RlbFxyXG4qL1xyXG5cclxuXHJcbmNsYXNzIFVzZXJQcm9maWxlIHtcclxuXHJcbiAgY29uc3RydWN0b3IodXNlcm5hbWUsIHVzZXJVUkwsIGF2YXRhciwgY24sIGxvY2FsZSkge1xyXG5cclxuICAgIGlmICh1c2VybmFtZSkgeyB0aGlzLnVzZXJuYW1lID0gdXNlcm5hbWU7IH1cclxuICAgIGlmIChhdmF0YXIpIHsgdGhpcy5hdmF0YXIgPSBhdmF0YXI7IH1cclxuICAgIGlmIChjbikgeyB0aGlzLmNuID0gY247IH1cclxuICAgIGlmIChsb2NhbGUpIHsgdGhpcy5sb2NhbGUgPSBsb2NhbGU7IH1cclxuICAgIGlmICh1c2VyVVJMKSB7IHRoaXMudXNlclVSTCA9IHVzZXJVUkw7IH1cclxuXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBVc2VyUHJvZmlsZTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2lkZW50aXR5L1VzZXJQcm9maWxlLmpzIiwiLyoqXHJcbiogVGhlIElkZW50aXR5IGluZm8gdG8gYmUgYWRkZWQgdG8gTWVzc2FnZS5Cb2R5LklkZW50aXR5XHJcbiovXHJcblxyXG5pbXBvcnQgVXNlclByb2ZpbGUgZnJvbSAnLi9Vc2VyUHJvZmlsZSc7XHJcblxyXG5jbGFzcyBNZXNzYWdlQm9keUlkZW50aXR5IHtcclxuXHJcbiAgY29uc3RydWN0b3IodXNlcm5hbWUsIHVzZXJVUkwsIGF2YXRhciwgY24sIGxvY2FsZSwgaWRwLCBhc3NlcnRpb24pIHtcclxuXHJcbiAgICBpZiAoIWlkcCkgdGhyb3cgbmV3IEVycm9yKCdJRFAgc2hvdWxkIGJlIGEgcGFyYW1ldGVyJyk7XHJcbiAgICBpZiAoIXVzZXJuYW1lKSB0aHJvdyBuZXcgRXJyb3IoJ3VzZXJuYW1lIHNob3VsZCBiZSBhIHBhcmFtZXRlcicpO1xyXG5cclxuICAgIHRoaXMuaWRwID0gaWRwO1xyXG5cclxuICAgIGlmIChhc3NlcnRpb24pICAgICAgeyB0aGlzLmFzc2VydGlvbiA9IGFzc2VydGlvbjsgfVxyXG4gICAgdGhpcy51c2VyUHJvZmlsZSA9IG5ldyBVc2VyUHJvZmlsZSh1c2VybmFtZSwgdXNlclVSTCwgYXZhdGFyLCBjbiwgbG9jYWxlKTtcclxuXHJcbiAgfVxyXG5cclxufVxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE1lc3NhZ2VCb2R5SWRlbnRpdHk7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9pZGVudGl0eS9NZXNzYWdlQm9keUlkZW50aXR5LmpzIiwiaW1wb3J0IFVzZXJQcm9maWxlIGZyb20gJy4vaWRlbnRpdHkvVXNlclByb2ZpbGUnO1xyXG5pbXBvcnQgTWVzc2FnZUJvZHlJZGVudGl0eSBmcm9tICcuL2lkZW50aXR5L01lc3NhZ2VCb2R5SWRlbnRpdHknO1xyXG5cclxuZXhwb3J0IHsgVXNlclByb2ZpbGUgfTtcclxuZXhwb3J0IGRlZmF1bHQgTWVzc2FnZUJvZHlJZGVudGl0eTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL0lkZW50aXR5RmFjdG9yeS5qcyIsIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrLmpzXG4vLyBtb2R1bGUgaWQgPSA4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA0IDUgNiA3IDggOSAxMCJdLCJzb3VyY2VSb290IjoiIn0=

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCAyZDAxZGJmYjgyNWNkNDdjY2ZmMiIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9fZXhlYy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9fdmFsaWRhdGUuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL2J1ZmZlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW5oZXJpdHMvaW5oZXJpdHNfYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fZHVwbGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLXV0aWwtaXMvbGliL3V0aWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MtbmV4dGljay1hcmdzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHJlYW0taHR0cC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2FmZS1idWZmZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3VybC91cmwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ydG0uc3RhcnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0cmVhbS1odHRwL2xpYi9jYXBhYmlsaXR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUtYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ldmVudHMvZXZlbnRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtLWJyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fd3JpdGFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25vZGUtbGlicy1icm93c2VyL25vZGVfbW9kdWxlcy9zdHJpbmdfZGVjb2Rlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL2h0dHBzLWJyb3dzZXJpZnkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvYXV0aC50ZXN0LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2JvdHMuaW5mby5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5hcmNoaXZlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLmNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5oaXN0b3J5LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLmluZm8uanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhbm5lbHMuaW52aXRlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLmpvaW4uanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhbm5lbHMua2ljay5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5sZWF2ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5saXN0LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLm1hcmsuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhbm5lbHMucmVuYW1lLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLnJlcGxpZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhbm5lbHMuc2V0UHVycG9zZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5zZXRUb3BpYy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy51bmFyY2hpdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhdC5kZWxldGUuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhdC5tZU1lc3NhZ2UuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhdC5wb3N0TWVzc2FnZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGF0LnVuZnVybC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGF0LnVwZGF0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9kbmQuZW5kRG5kLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2RuZC5lbmRTbm9vemUuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZG5kLmluZm8uanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZG5kLnNldFNub296ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9kbmQudGVhbUluZm8uanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZW1vamkubGlzdC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9maWxlcy5jb21tZW50cy5hZGQuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZmlsZXMuY29tbWVudHMuZGVsZXRlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ZpbGVzLmNvbW1lbnRzLmVkaXQuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZmlsZXMuZGVsZXRlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ZpbGVzLmluZm8uanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZmlsZXMubGlzdC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9maWxlcy5yZXZva2VQdWJsaWNVUkwuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZmlsZXMuc2hhcmVkUHVibGljVVJMLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ZpbGVzLnVwbG9hZC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMuYXJjaGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMuY2xvc2UuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLmNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMuY3JlYXRlQ2hpbGQuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLmhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLmluZm8uanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLmludml0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMua2ljay5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMubGVhdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLmxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLm1hcmsuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLm9wZW4uanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLnJlbmFtZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMuc2V0UHVycG9zZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMuc2V0VG9waWMuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLnVuYXJjaGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9pbS5jbG9zZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9pbS5oaXN0b3J5LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ltLmxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvaW0ubWFyay5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9pbS5vcGVuLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL21waW0uY2xvc2UuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvbXBpbS5oaXN0b3J5LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL21waW0ubGlzdC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9tcGltLm1hcmsuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvbXBpbS5vcGVuLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3BpbnMuYWRkLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3BpbnMubGlzdC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9waW5zLnJlbW92ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9yZWFjdGlvbnMuYWRkLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3JlYWN0aW9ucy5nZXQuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcmVhY3Rpb25zLmxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcmVhY3Rpb25zLnJlbW92ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9yZW1pbmRlcnMuYWRkLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3JlbWluZGVycy5jb21wbGV0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9yZW1pbmRlcnMuZGVsZXRlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3JlbWluZGVycy5pbmZvLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3JlbWluZGVycy5saXN0LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3J0bS5jb25uZWN0LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3NlYXJjaC5hbGwuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvc2VhcmNoLmZpbGVzLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3NlYXJjaC5tZXNzYWdlcy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9zdGFycy5hZGQuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvc3RhcnMubGlzdC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9zdGFycy5yZW1vdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdGVhbS5hY2Nlc3NMb2dzLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3RlYW0uYmlsbGFibGVJbmZvLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3RlYW0uaW5mby5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy90ZWFtLmludGVncmF0aW9uTG9ncy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy90ZWFtLnByb2ZpbGUuZ2V0LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJncm91cHMuY3JlYXRlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJncm91cHMuZGlzYWJsZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2VyZ3JvdXBzLmVuYWJsZS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2VyZ3JvdXBzLmxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcmdyb3Vwcy51cGRhdGUuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcmdyb3Vwcy51c2Vycy5saXN0LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJncm91cHMudXNlcnMudXBkYXRlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJzLmdldFByZXNlbmNlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJzLmlkZW50aXR5LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJzLmluZm8uanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcnMubGlzdC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5wcm9maWxlLmdldC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5wcm9maWxlLnNldC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5zZXRBY3RpdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcnMuc2V0UHJlc2VuY2UuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svU2xhY2tQcm90b1N0dWIucHMuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvYXBpLnRlc3QuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3RpbnktanNvbi1odHRwL2luZGV4LmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy90aW55LWpzb24taHR0cC9fcmVhZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHJlYW0taHR0cC9saWIvcmVxdWVzdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbGliL3Jlc3BvbnNlLmpzIiwid2VicGFjazovLy91dGlsIChpZ25vcmVkKSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL0J1ZmZlckxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL25vZGUtbGlicy1icm93c2VyL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zZXRpbW1lZGlhdGUvc2V0SW1tZWRpYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9nbG9iYWwvd2luZG93LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dGlsLWRlcHJlY2F0ZS9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RvLWFycmF5YnVmZmVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy94dGVuZC9pbW11dGFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2J1aWx0aW4tc3RhdHVzLWNvZGVzL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3B1bnljb2RlL3B1bnljb2RlLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3VybC91dGlsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZGVjb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZW5jb2RlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy90aW55LWpzb24taHR0cC9fd3JpdGUuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvYXBpLmpzb24iLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvYXBpLmNsaWVudC5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMucmVwbGllcy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9pbS5yZXBsaWVzLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL21waW0ucmVwbGllcy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5kZWxldGVQaG90by5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5zZXRQaG90by5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ib3RzLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2F1dGgucmV2b2tlLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYXQuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZG5kLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ZpbGVzLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2dyb3Vwcy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9pbS5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9tcGltLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL29hdXRoLmFjY2Vzcy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9yZWFjdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcmVtaW5kZXJzLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3BpbnMuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcnRtLmNsaWVudC1icm93c2VyLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3J0bS5ldmVudHMuanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvc2VhcmNoLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3N0YXJzLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3RlYW0uanMiLCJ3ZWJwYWNrOi8vLy4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcmdyb3Vwcy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5qcyIsIndlYnBhY2s6Ly8vLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2VydmljZS1mcmFtZXdvcmsvZGlzdC9TeW5jaGVyLmpzIiwid2VicGFjazovLy8uLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zZXJ2aWNlLWZyYW1ld29yay9kaXN0L0lkZW50aXR5RmFjdG9yeS5qcyJdLCJuYW1lcyI6WyJTbGFja1Byb3RvU3R1YiIsImNvbnN0cnVjdG9yIiwicnVudGltZVByb3RvU3R1YlVSTCIsImJ1cyIsImNvbmZpZyIsIkVycm9yIiwiY29uc29sZSIsImxvZyIsIl90aGlzIiwiX3N1YnNjcmliZWRMaXN0IiwiX3VzZXJzTGlzdCIsIl9ncm91cHNMaXN0IiwiX2NoYW5uZWxzTGlzdCIsIl9pbXNMaXN0IiwiX29ic2VydmVyIiwiX2NoYW5uZWxJRCIsIl9pZCIsIl9jb250aW51b3VzT3BlbiIsIl90b2tlbiIsIl9ydW50aW1lUHJvdG9TdHViVVJMIiwiX2J1cyIsIl9jb25maWciLCJfcnVudGltZVNlc3Npb25VUkwiLCJydW50aW1lVVJMIiwiX3JlT3BlbiIsIl9zbGFjayIsIl9zeW5jaGVyIiwib25Ob3RpZmljYXRpb24iLCJldmVudCIsImFkZExpc3RlbmVyIiwibXNnIiwiYm9keSIsImhhc093blByb3BlcnR5IiwiaWRlbnRpdHkiLCJhY2Nlc3NfdG9rZW4iLCJ0b2tlbiIsIl9vcGVuIiwiX2ZpbHRlciIsInNjaGVtYVVybCIsInNjaGVtYSIsInZhbHVlIiwibmFtZSIsInNjaGVtYVNwbGl0dGVkIiwic3BsaXQiLCJsZW5ndGgiLCJfZ2V0U2xhY2tJbmZvcm1hdGlvbiIsInRvIiwidGhlbiIsInVzZXJJbmZvIiwicHJvZmlsZSIsImltYWdlXzE5MiIsIl9zdWJzY3JpYmUiLCJmcm9tIiwicmVzdWx0IiwidXNlclByb2ZpbGUiLCJpZCIsIl9jcmVhdGVDaGFubmVsIiwicnVudGltZVNlc3Npb24iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIlVSTFVzZXJzTGlzdCIsIlVSTEdyb3Vwc0xpc3QiLCJVUkxDaGFubmVsc0xpc3QiLCJVUkxJbXNMaXN0IiwiVXNlcnNMaXN0UHJvbWlzZSIsIl9zZW5kSFRUUFJlcXVlc3QiLCJHcm91cHNMaXN0UHJvbWlzZSIsIkNoYW5uZWxzTGlzdFByb21pc2UiLCJJbXNMaXN0UHJvbWlzZSIsImFsbCIsIm1lbWJlcnMiLCJncm91cHMiLCJjaGFubmVscyIsImltcyIsInRvU3BsaXR0ZWQiLCJ1c2VyIiwiZmlsdGVyIiwiZXJyb3IiLCJlcnIiLCJ1c2VySUQiLCJjaGFubmVsRXhpc3RzIiwiY2hhbm5lbE1lbWJlcnMiLCJhbHJlYWR5T25DaGFubmVsIiwiZm9yRWFjaCIsInMiLCJfaW52aXRlIiwiX2NyZWF0ZSIsInZpYSIsImNhbGxiYWNrIiwiX3Nlc3Npb24iLCJydG0iLCJjbGllbnQiLCJsaXN0ZW4iLCJtZXNzYWdlIiwiY2hhbm5lbCIsIl9nZXRVc2VySW5mbyIsImFkZENoaWxkIiwidGV4dCIsInVzZXJzIiwiaW5mbyIsImRhdGEiLCJ1cmxEYXRhT2JqIiwib2JqIiwic3Vic2NyaWJlZCIsInN1YnNjcmlwdGlvbiIsIm9iamVjdERlc2NVUkwiLCJkYXRhT2JqZWN0VXJsIiwic3Vic3RyaW5nIiwibGFzdEluZGV4T2YiLCJzdWJzY3JpYmUiLCJvYnNlcnZlciIsInB1c2giLCJvbkFkZENoaWxkIiwiY2hpbGQiLCJfZGVsaXZlciIsIm9uQ2hhbmdlIiwiY2F0Y2giLCJpZFVzZXIiLCJpZENoYW5uZWwiLCJ0b0ludml0ZSIsImludml0ZSIsInVzZXJuYW1lIiwiYXNfdXNlciIsImNoYXQiLCJwb3N0TWVzc2FnZSIsImNoYW5uZWxOYW1lIiwidG9DcmVhdGUiLCJjcmVhdGUiLCJvayIsIm1ldGhvZCIsInVybCIsInhociIsIlhNTEh0dHBSZXF1ZXN0Iiwib3BlbiIsIlhEb21haW5SZXF1ZXN0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsInNlbmQiLCJhY3RpdmF0ZSIsImluc3RhbmNlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsTztBQ1ZBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7OztBQzdEQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxvR0FBb0csbUJBQW1CLEVBQUUsbUJBQW1CLDhIQUE4SDs7QUFFMVE7O0FBRUE7O0FBRUE7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLG9DOzs7Ozs7O0FDNUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7O0FBRUE7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0M7Ozs7OztBQ2pEQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1Qzs7Ozs7Ozs7QUNwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsbURBQW1EO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsVUFBVTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsWUFBWTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLHVDQUF1QyxTQUFTO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUJBQWlCO0FBQ2hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixTQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixTQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELEVBQUU7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGVBQWU7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQSxxQkFBcUIsZUFBZTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsWUFBWTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCLFNBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLG1CQUFtQixjQUFjO0FBQ2pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1REFBdUQsT0FBTztBQUM5RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdURBQXVELE9BQU87QUFDOUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCO0FBQ2xCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCLFFBQVE7QUFDN0I7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQixTQUFTO0FBQzVCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlCQUFpQjtBQUNoQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixZQUFZO0FBQzdCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsZ0JBQWdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdCQUFnQjtBQUNqQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUIsWUFBWTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUM1dkRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FDdEJBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQ0FBcUM7O0FBRXJDO0FBQ0E7QUFDQTs7QUFFQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFVBQVU7Ozs7Ozs7O0FDdkx0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxlQUFlLGlCQUFpQjtBQUNoQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsZ0NBQWdDLE9BQU87QUFDdkM7QUFDQTtBQUNBLEM7Ozs7OztBQzNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7Ozs7Ozs7OytDQzFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOzs7Ozs7OztBQzFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDOzs7Ozs7O0FDOUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUM3REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsS0FBSzs7QUFFckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQSwyQ0FBMkMsS0FBSztBQUNoRCwwQ0FBMEMsS0FBSztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQiw0QkFBNEI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIseUJBQXlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLE9BQU87QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsT0FBTztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxPQUFPO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaUJBQWlCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLFFBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFVBQVUsTUFBTTtBQUNoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQzN0QkE7O0FBRUE7QUFDQTs7Ozs7Ozs7QUNIQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0Esb0M7Ozs7OztBQzNCQSxpQkFBaUI7O0FBRWpCO0FBQ0E7QUFDQTs7Ozs7OztBQ0pBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7QUNwRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLDZFQUE2RTtBQUN4SjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0dBQWtHO0FBQ2xHLE9BQU87QUFDUDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSw0RkFBNEY7QUFDNUYsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0RBQWdEOztBQUVoRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEU7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0NBQXNDOztBQUV0QztBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLCtDQUErQzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9COztBQUVwQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixTQUFTO0FBQzVCO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRFQUE0RTs7QUFFNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLHlCQUF5QjtBQUMxQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQSxtREFBbUQsaUVBQWlFO0FBQ3BIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQ0FBZ0MsT0FBTztBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQ0FBZ0MsT0FBTztBQUN2QztBQUNBO0FBQ0E7QUFDQSxDOzs7Ozs7O0FDOStCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSCxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7Ozs7OztBQzdTQTs7Ozs7Ozs7QUNBQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFOzs7Ozs7O0FDdkVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlDQUFpQzs7QUFFakM7O0FBRUEsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsb0RBQW9EO0FBQ3BEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFOzs7Ozs7O0FDdnBCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUSxPQUFPO0FBQ2Y7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQzVOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFlBQVk7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLEVBQUU7QUFDUCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0EsQzs7Ozs7O0FDck5BOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FDYkE7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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bkI7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFFBQVEsV0FBVzs7QUFFbkI7QUFDQTtBQUNBLFFBQVEsVUFBVTs7QUFFbEI7QUFDQTs7Ozs7OztBQ25GQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osMkNBQTJDO0FBQzNDLElBQUk7QUFDSixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixHQUFHO0FBQ0g7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSCxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLG9DQUFvQzs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUNqVEE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsRUFBRTs7QUFFRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQSxFQUFFO0FBQ0Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsZUFBZSxJQUFJO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4Qzs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FDckxBLGU7Ozs7Ozs7QUNBQTs7QUFFQTs7QUFFQSxpREFBaUQsMENBQTBDLDBEQUEwRCxFQUFFOztBQUV2SjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUI7QUFDakIsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Q7QUFDeEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLENBQUMsRzs7Ozs7O0FDekVEOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQ3JEQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaUJBQWlCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwwQ0FBMEMsc0JBQXNCLEVBQUU7QUFDbEU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBOztBQUVBLEtBQUs7QUFDTDtBQUNBOztBQUVBLEtBQUs7QUFDTDtBQUNBOztBQUVBLEtBQUs7QUFDTDtBQUNBOztBQUVBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7Ozs7Ozs7O0FDekxEOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTs7QUFFQTs7Ozs7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ckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFBQTtBQUNILEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7O0FBRUEsQ0FBQzs7Ozs7Ozs7QUNwaEJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUNyQkE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFF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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDLGNBQWM7QUFDZCxpQkFBaUI7QUFDakI7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBOzs7QUFH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QTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLDBDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQSxlQUFlLE9BQU87QUFDdEIsZUFBZSwwQkFBMEI7QUFDekM7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztB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O0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsQ0FBQzs7QUFFRCx1Q0FBdUM7QUFDdkMsdUNBQXVDO0FBQ3ZDOztBQUVBLE9BQU87QUFDUDtBQUNBOztBQUVBOzs7QUFHQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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QywwQkFBMEIsRUFBRTtBQUMvRCx5Q0FBeUMsZUFBZTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELCtEQUErRDtBQUM3SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTs7QUFFQTtBQUNBOztBQUVBOzs7QUFHQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsT0FBTzs7QUFFUDtBQUNBOztBQUVBOzs7QUFHQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsT0FBTzs7QUFFUDtBQUNBOztBQUVBOzs7QUFHQTtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBOztBQUVBLE9BQU87O0FBRVA7QUFDQTs7QUFFQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPOztBQUVQLFVBQVU7QUFDVixDQUFDO0FBQ0QsMkNBQTJDLGNBQWMsdTNRIiwiZmlsZSI6IlNsYWNrUHJvdG9TdHViLnBzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoXCJhY3RpdmF0ZVwiLCBbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJhY3RpdmF0ZVwiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJhY3RpdmF0ZVwiXSA9IGZhY3RvcnkoKTtcbn0pKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuIFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxMjcpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svYm9vdHN0cmFwIDJkMDFkYmZiODI1Y2Q0N2NjZmYyIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGV4ZWM7XG5cbnZhciBfdGlueUpzb25IdHRwID0gcmVxdWlyZSgndGlueS1qc29uLWh0dHAnKTtcblxudmFyIF90aW55SnNvbkh0dHAyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdGlueUpzb25IdHRwKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gZXhlYyh1cmwsIGZvcm0sIGNhbGxiYWNrKSB7XG5cbiAgLy8gc3RyaW5naWZ5IGFueSBvYmplY3RzIHVuZGVyIGtleXMgc2luY2UgZm9ybSBpcyBwb3N0ZWQgYXMgYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXG4gIE9iamVjdC5rZXlzKGZvcm0pLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGlmIChfdHlwZW9mKGZvcm1ba2V5XSkgPT09ICdvYmplY3QnKSB7XG4gICAgICBmb3JtW2tleV0gPSBKU09OLnN0cmluZ2lmeShmb3JtW2tleV0pO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gYWx3YXlzIHBvc3RcbiAgX3RpbnlKc29uSHR0cDIuZGVmYXVsdC5wb3N0KHtcbiAgICB1cmw6ICdodHRwczovL3NsYWNrLmNvbS9hcGkvJyArIHVybCxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbiAgICB9LFxuICAgIGRhdGE6IGZvcm1cbiAgfSwgZnVuY3Rpb24gX3JlcyhlcnIsIHJlcykge1xuICAgIC8vIHZhciByYXRlTGltaXQgPSAnWW91IGFyZSBzZW5kaW5nIHRvbyBtYW55IHJlcXVlc3RzLiBQbGVhc2UgcmVsYXguJ1xuICAgIGlmIChlcnIpIHtcbiAgICAgIC8vIGlmIHJlcXVlc3QgZmFpbGVkIGJ1YmJsZSB0aGUgZXJyb3JcbiAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgfSBlbHNlIGlmIChyZXMuYm9keSAmJiByZXMuYm9keS5lcnJvcikge1xuICAgICAgY2FsbGJhY2soRXJyb3IocmVzLmJvZHkuZXJyb3IpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sobnVsbCwgcmVzLmJvZHkpO1xuICAgIH1cbiAgfSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL19leGVjLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZhbGlkYXRlO1xuXG52YXIgX2FwaSA9IHJlcXVpcmUoJy4vYXBpLmpzb24nKTtcblxudmFyIF9hcGkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXBpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gdmFsaWRhdGUobWV0aG9kLCBwYXJhbXMpIHtcbiAgLy8gZ2V0IGFsbCB0aGUgcmVxdXJpZWQgcGFyYW1zIGZvciB0aGlzIG1ldGhvZFxuICB2YXIgcmVxdWlyZWQgPSBfYXBpMi5kZWZhdWx0W21ldGhvZF0uZmlsdGVyKGZ1bmN0aW9uIChwYXJhbSkge1xuICAgIHJldHVybiBwYXJhbS5yZXF1aXJlZCA9PT0gJ1JlcXVpcmVkJztcbiAgfSk7XG4gIC8vIGNvbGxlY3QgYW55IG1pc3NpbmcgcGFyYW1zXG4gIHZhciBtaXNzaW5nID0gcmVxdWlyZWQuZmlsdGVyKGZ1bmN0aW9uIChwYXJhbSkge1xuICAgIHJldHVybiB0eXBlb2YgcGFyYW1zW3BhcmFtLm5hbWVdID09PSAndW5kZWZpbmVkJztcbiAgfSk7XG4gIC8vIG9wdGltaXNpdGNhbGx5IGFzc3VtZSB0aGUgYmVzdFxuICB2YXIgZXJyID0gZmFsc2U7XG4gIC8vIGJ1dCBoYXZlIGEgcGxhbiBmb3IgdGhlIHdvcnN0XG4gIGlmIChtaXNzaW5nLmxlbmd0aCkge1xuICAgIHZhciBidWxsZXRzID0gbWlzc2luZy5tYXAoZnVuY3Rpb24gKHBhcmFtKSB7XG4gICAgICByZXR1cm4gJy0gJyArIHBhcmFtLm5hbWUgKyAnIC4uLiAnICsgcGFyYW0uZGVzY3JpcHRpb247XG4gICAgfSk7XG4gICAgdmFyIG1zZyA9IG1ldGhvZCArICcgbWlzc2luZyBwYXJhbXM6XFxuJyArIGJ1bGxldHMuam9pbignXFxuJyk7XG4gICAgZXJyID0gRXJyb3IobXNnKTtcbiAgfVxuICByZXR1cm4gZXJyO1xufSAvL1xuLy8gdmFsaWRhdGUgcmV0dXJucyBhbiBlcnJvciBvYmplY3QgaWYgYW55IHJlcXVpcmVkIHBhcmFtcyBhcmUgbWlzc2luZ1xuLy9cbi8vIGV4YW1wbGUgdXNhZ2U6XG4vLyBcbi8vICAgLy8gdG9rZW4gYW5kIGlkIGFyZSByZXF1aXJlZCBwYXJhbXNcbi8vICAgZnVuY3Rpb24gYXBpQ2FsbChwYXJhbXMsIGNhbGxiYWNrKSB7IFxuLy8gICAgIGxldCBlcnIgPSB2YWxpZGF0ZSgnYXBpLnNpZ25hdHVyZScsIHBhcmFtcylcbi8vICAgICBpZiAoZXJyKSB7XG4vLyAgICAgICBjYWxsYmFjayhlcnIpXG4vLyAgICAgfVxuLy8gICAgIGVsc2Uge1xuLy8gICAgICAgLy8gZG8gYXBpIGNhbGxcbi8vICAgICB9XG4vLyAgIH1cbi8vXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL192YWxpZGF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyohXG4gKiBUaGUgYnVmZmVyIG1vZHVsZSBmcm9tIG5vZGUuanMsIGZvciB0aGUgYnJvd3Nlci5cbiAqXG4gKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8ZmVyb3NzQGZlcm9zcy5vcmc+IDxodHRwOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbnZhciBiYXNlNjQgPSByZXF1aXJlKCdiYXNlNjQtanMnKVxudmFyIGllZWU3NTQgPSByZXF1aXJlKCdpZWVlNzU0JylcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbmV4cG9ydHMuQnVmZmVyID0gQnVmZmVyXG5leHBvcnRzLlNsb3dCdWZmZXIgPSBTbG93QnVmZmVyXG5leHBvcnRzLklOU1BFQ1RfTUFYX0JZVEVTID0gNTBcblxuLyoqXG4gKiBJZiBgQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlRgOlxuICogICA9PT0gdHJ1ZSAgICBVc2UgVWludDhBcnJheSBpbXBsZW1lbnRhdGlvbiAoZmFzdGVzdClcbiAqICAgPT09IGZhbHNlICAgVXNlIE9iamVjdCBpbXBsZW1lbnRhdGlvbiAobW9zdCBjb21wYXRpYmxlLCBldmVuIElFNilcbiAqXG4gKiBCcm93c2VycyB0aGF0IHN1cHBvcnQgdHlwZWQgYXJyYXlzIGFyZSBJRSAxMCssIEZpcmVmb3ggNCssIENocm9tZSA3KywgU2FmYXJpIDUuMSssXG4gKiBPcGVyYSAxMS42KywgaU9TIDQuMisuXG4gKlxuICogRHVlIHRvIHZhcmlvdXMgYnJvd3NlciBidWdzLCBzb21ldGltZXMgdGhlIE9iamVjdCBpbXBsZW1lbnRhdGlvbiB3aWxsIGJlIHVzZWQgZXZlblxuICogd2hlbiB0aGUgYnJvd3NlciBzdXBwb3J0cyB0eXBlZCBhcnJheXMuXG4gKlxuICogTm90ZTpcbiAqXG4gKiAgIC0gRmlyZWZveCA0LTI5IGxhY2tzIHN1cHBvcnQgZm9yIGFkZGluZyBuZXcgcHJvcGVydGllcyB0byBgVWludDhBcnJheWAgaW5zdGFuY2VzLFxuICogICAgIFNlZTogaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njk1NDM4LlxuICpcbiAqICAgLSBDaHJvbWUgOS0xMCBpcyBtaXNzaW5nIHRoZSBgVHlwZWRBcnJheS5wcm90b3R5cGUuc3ViYXJyYXlgIGZ1bmN0aW9uLlxuICpcbiAqICAgLSBJRTEwIGhhcyBhIGJyb2tlbiBgVHlwZWRBcnJheS5wcm90b3R5cGUuc3ViYXJyYXlgIGZ1bmN0aW9uIHdoaWNoIHJldHVybnMgYXJyYXlzIG9mXG4gKiAgICAgaW5jb3JyZWN0IGxlbmd0aCBpbiBzb21lIHNpdHVhdGlvbnMuXG5cbiAqIFdlIGRldGVjdCB0aGVzZSBidWdneSBicm93c2VycyBhbmQgc2V0IGBCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVGAgdG8gYGZhbHNlYCBzbyB0aGV5XG4gKiBnZXQgdGhlIE9iamVjdCBpbXBsZW1lbnRhdGlvbiwgd2hpY2ggaXMgc2xvd2VyIGJ1dCBiZWhhdmVzIGNvcnJlY3RseS5cbiAqL1xuQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQgPSBnbG9iYWwuVFlQRURfQVJSQVlfU1VQUE9SVCAhPT0gdW5kZWZpbmVkXG4gID8gZ2xvYmFsLlRZUEVEX0FSUkFZX1NVUFBPUlRcbiAgOiB0eXBlZEFycmF5U3VwcG9ydCgpXG5cbi8qXG4gKiBFeHBvcnQga01heExlbmd0aCBhZnRlciB0eXBlZCBhcnJheSBzdXBwb3J0IGlzIGRldGVybWluZWQuXG4gKi9cbmV4cG9ydHMua01heExlbmd0aCA9IGtNYXhMZW5ndGgoKVxuXG5mdW5jdGlvbiB0eXBlZEFycmF5U3VwcG9ydCAoKSB7XG4gIHRyeSB7XG4gICAgdmFyIGFyciA9IG5ldyBVaW50OEFycmF5KDEpXG4gICAgYXJyLl9fcHJvdG9fXyA9IHtfX3Byb3RvX186IFVpbnQ4QXJyYXkucHJvdG90eXBlLCBmb286IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDQyIH19XG4gICAgcmV0dXJuIGFyci5mb28oKSA9PT0gNDIgJiYgLy8gdHlwZWQgYXJyYXkgaW5zdGFuY2VzIGNhbiBiZSBhdWdtZW50ZWRcbiAgICAgICAgdHlwZW9mIGFyci5zdWJhcnJheSA9PT0gJ2Z1bmN0aW9uJyAmJiAvLyBjaHJvbWUgOS0xMCBsYWNrIGBzdWJhcnJheWBcbiAgICAgICAgYXJyLnN1YmFycmF5KDEsIDEpLmJ5dGVMZW5ndGggPT09IDAgLy8gaWUxMCBoYXMgYnJva2VuIGBzdWJhcnJheWBcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbmZ1bmN0aW9uIGtNYXhMZW5ndGggKCkge1xuICByZXR1cm4gQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlRcbiAgICA/IDB4N2ZmZmZmZmZcbiAgICA6IDB4M2ZmZmZmZmZcbn1cblxuZnVuY3Rpb24gY3JlYXRlQnVmZmVyICh0aGF0LCBsZW5ndGgpIHtcbiAgaWYgKGtNYXhMZW5ndGgoKSA8IGxlbmd0aCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbnZhbGlkIHR5cGVkIGFycmF5IGxlbmd0aCcpXG4gIH1cbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgLy8gUmV0dXJuIGFuIGF1Z21lbnRlZCBgVWludDhBcnJheWAgaW5zdGFuY2UsIGZvciBiZXN0IHBlcmZvcm1hbmNlXG4gICAgdGhhdCA9IG5ldyBVaW50OEFycmF5KGxlbmd0aClcbiAgICB0aGF0Ll9fcHJvdG9fXyA9IEJ1ZmZlci5wcm90b3R5cGVcbiAgfSBlbHNlIHtcbiAgICAvLyBGYWxsYmFjazogUmV0dXJuIGFuIG9iamVjdCBpbnN0YW5jZSBvZiB0aGUgQnVmZmVyIGNsYXNzXG4gICAgaWYgKHRoYXQgPT09IG51bGwpIHtcbiAgICAgIHRoYXQgPSBuZXcgQnVmZmVyKGxlbmd0aClcbiAgICB9XG4gICAgdGhhdC5sZW5ndGggPSBsZW5ndGhcbiAgfVxuXG4gIHJldHVybiB0aGF0XG59XG5cbi8qKlxuICogVGhlIEJ1ZmZlciBjb25zdHJ1Y3RvciByZXR1cm5zIGluc3RhbmNlcyBvZiBgVWludDhBcnJheWAgdGhhdCBoYXZlIHRoZWlyXG4gKiBwcm90b3R5cGUgY2hhbmdlZCB0byBgQnVmZmVyLnByb3RvdHlwZWAuIEZ1cnRoZXJtb3JlLCBgQnVmZmVyYCBpcyBhIHN1YmNsYXNzIG9mXG4gKiBgVWludDhBcnJheWAsIHNvIHRoZSByZXR1cm5lZCBpbnN0YW5jZXMgd2lsbCBoYXZlIGFsbCB0aGUgbm9kZSBgQnVmZmVyYCBtZXRob2RzXG4gKiBhbmQgdGhlIGBVaW50OEFycmF5YCBtZXRob2RzLiBTcXVhcmUgYnJhY2tldCBub3RhdGlvbiB3b3JrcyBhcyBleHBlY3RlZCAtLSBpdFxuICogcmV0dXJucyBhIHNpbmdsZSBvY3RldC5cbiAqXG4gKiBUaGUgYFVpbnQ4QXJyYXlgIHByb3RvdHlwZSByZW1haW5zIHVubW9kaWZpZWQuXG4gKi9cblxuZnVuY3Rpb24gQnVmZmVyIChhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICBpZiAoIUJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUICYmICEodGhpcyBpbnN0YW5jZW9mIEJ1ZmZlcikpIHtcbiAgICByZXR1cm4gbmV3IEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbiAgfVxuXG4gIC8vIENvbW1vbiBjYXNlLlxuICBpZiAodHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcbiAgICBpZiAodHlwZW9mIGVuY29kaW5nT3JPZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdJZiBlbmNvZGluZyBpcyBzcGVjaWZpZWQgdGhlbiB0aGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZydcbiAgICAgIClcbiAgICB9XG4gICAgcmV0dXJuIGFsbG9jVW5zYWZlKHRoaXMsIGFyZylcbiAgfVxuICByZXR1cm4gZnJvbSh0aGlzLCBhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuQnVmZmVyLnBvb2xTaXplID0gODE5MiAvLyBub3QgdXNlZCBieSB0aGlzIGltcGxlbWVudGF0aW9uXG5cbi8vIFRPRE86IExlZ2FjeSwgbm90IG5lZWRlZCBhbnltb3JlLiBSZW1vdmUgaW4gbmV4dCBtYWpvciB2ZXJzaW9uLlxuQnVmZmVyLl9hdWdtZW50ID0gZnVuY3Rpb24gKGFycikge1xuICBhcnIuX19wcm90b19fID0gQnVmZmVyLnByb3RvdHlwZVxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIGZyb20gKHRoYXQsIHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcInZhbHVlXCIgYXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXInKVxuICB9XG5cbiAgaWYgKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsdWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgIHJldHVybiBmcm9tQXJyYXlCdWZmZXIodGhhdCwgdmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbiAgfVxuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZyb21TdHJpbmcodGhhdCwgdmFsdWUsIGVuY29kaW5nT3JPZmZzZXQpXG4gIH1cblxuICByZXR1cm4gZnJvbU9iamVjdCh0aGF0LCB2YWx1ZSlcbn1cblxuLyoqXG4gKiBGdW5jdGlvbmFsbHkgZXF1aXZhbGVudCB0byBCdWZmZXIoYXJnLCBlbmNvZGluZykgYnV0IHRocm93cyBhIFR5cGVFcnJvclxuICogaWYgdmFsdWUgaXMgYSBudW1iZXIuXG4gKiBCdWZmZXIuZnJvbShzdHJbLCBlbmNvZGluZ10pXG4gKiBCdWZmZXIuZnJvbShhcnJheSlcbiAqIEJ1ZmZlci5mcm9tKGJ1ZmZlcilcbiAqIEJ1ZmZlci5mcm9tKGFycmF5QnVmZmVyWywgYnl0ZU9mZnNldFssIGxlbmd0aF1dKVxuICoqL1xuQnVmZmVyLmZyb20gPSBmdW5jdGlvbiAodmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gZnJvbShudWxsLCB2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG5pZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgQnVmZmVyLnByb3RvdHlwZS5fX3Byb3RvX18gPSBVaW50OEFycmF5LnByb3RvdHlwZVxuICBCdWZmZXIuX19wcm90b19fID0gVWludDhBcnJheVxuICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnNwZWNpZXMgJiZcbiAgICAgIEJ1ZmZlcltTeW1ib2wuc3BlY2llc10gPT09IEJ1ZmZlcikge1xuICAgIC8vIEZpeCBzdWJhcnJheSgpIGluIEVTMjAxNi4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL2J1ZmZlci9wdWxsLzk3XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJ1ZmZlciwgU3ltYm9sLnNwZWNpZXMsIHtcbiAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSlcbiAgfVxufVxuXG5mdW5jdGlvbiBhc3NlcnRTaXplIChzaXplKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfSBlbHNlIGlmIChzaXplIDwgMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBuZWdhdGl2ZScpXG4gIH1cbn1cblxuZnVuY3Rpb24gYWxsb2MgKHRoYXQsIHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gIGFzc2VydFNpemUoc2l6ZSlcbiAgaWYgKHNpemUgPD0gMCkge1xuICAgIHJldHVybiBjcmVhdGVCdWZmZXIodGhhdCwgc2l6ZSlcbiAgfVxuICBpZiAoZmlsbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gT25seSBwYXkgYXR0ZW50aW9uIHRvIGVuY29kaW5nIGlmIGl0J3MgYSBzdHJpbmcuIFRoaXNcbiAgICAvLyBwcmV2ZW50cyBhY2NpZGVudGFsbHkgc2VuZGluZyBpbiBhIG51bWJlciB0aGF0IHdvdWxkXG4gICAgLy8gYmUgaW50ZXJwcmV0dGVkIGFzIGEgc3RhcnQgb2Zmc2V0LlxuICAgIHJldHVybiB0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnXG4gICAgICA/IGNyZWF0ZUJ1ZmZlcih0aGF0LCBzaXplKS5maWxsKGZpbGwsIGVuY29kaW5nKVxuICAgICAgOiBjcmVhdGVCdWZmZXIodGhhdCwgc2l6ZSkuZmlsbChmaWxsKVxuICB9XG4gIHJldHVybiBjcmVhdGVCdWZmZXIodGhhdCwgc2l6ZSlcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IGZpbGxlZCBCdWZmZXIgaW5zdGFuY2UuXG4gKiBhbGxvYyhzaXplWywgZmlsbFssIGVuY29kaW5nXV0pXG4gKiovXG5CdWZmZXIuYWxsb2MgPSBmdW5jdGlvbiAoc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIGFsbG9jKG51bGwsIHNpemUsIGZpbGwsIGVuY29kaW5nKVxufVxuXG5mdW5jdGlvbiBhbGxvY1Vuc2FmZSAodGhhdCwgc2l6ZSkge1xuICBhc3NlcnRTaXplKHNpemUpXG4gIHRoYXQgPSBjcmVhdGVCdWZmZXIodGhhdCwgc2l6ZSA8IDAgPyAwIDogY2hlY2tlZChzaXplKSB8IDApXG4gIGlmICghQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNpemU7ICsraSkge1xuICAgICAgdGhhdFtpXSA9IDBcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRoYXRcbn1cblxuLyoqXG4gKiBFcXVpdmFsZW50IHRvIEJ1ZmZlcihudW0pLCBieSBkZWZhdWx0IGNyZWF0ZXMgYSBub24temVyby1maWxsZWQgQnVmZmVyIGluc3RhbmNlLlxuICogKi9cbkJ1ZmZlci5hbGxvY1Vuc2FmZSA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIHJldHVybiBhbGxvY1Vuc2FmZShudWxsLCBzaXplKVxufVxuLyoqXG4gKiBFcXVpdmFsZW50IHRvIFNsb3dCdWZmZXIobnVtKSwgYnkgZGVmYXVsdCBjcmVhdGVzIGEgbm9uLXplcm8tZmlsbGVkIEJ1ZmZlciBpbnN0YW5jZS5cbiAqL1xuQnVmZmVyLmFsbG9jVW5zYWZlU2xvdyA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIHJldHVybiBhbGxvY1Vuc2FmZShudWxsLCBzaXplKVxufVxuXG5mdW5jdGlvbiBmcm9tU3RyaW5nICh0aGF0LCBzdHJpbmcsIGVuY29kaW5nKSB7XG4gIGlmICh0eXBlb2YgZW5jb2RpbmcgIT09ICdzdHJpbmcnIHx8IGVuY29kaW5nID09PSAnJykge1xuICAgIGVuY29kaW5nID0gJ3V0ZjgnXG4gIH1cblxuICBpZiAoIUJ1ZmZlci5pc0VuY29kaW5nKGVuY29kaW5nKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wiZW5jb2RpbmdcIiBtdXN0IGJlIGEgdmFsaWQgc3RyaW5nIGVuY29kaW5nJylcbiAgfVxuXG4gIHZhciBsZW5ndGggPSBieXRlTGVuZ3RoKHN0cmluZywgZW5jb2RpbmcpIHwgMFxuICB0aGF0ID0gY3JlYXRlQnVmZmVyKHRoYXQsIGxlbmd0aClcblxuICB2YXIgYWN0dWFsID0gdGhhdC53cml0ZShzdHJpbmcsIGVuY29kaW5nKVxuXG4gIGlmIChhY3R1YWwgIT09IGxlbmd0aCkge1xuICAgIC8vIFdyaXRpbmcgYSBoZXggc3RyaW5nLCBmb3IgZXhhbXBsZSwgdGhhdCBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMgd2lsbFxuICAgIC8vIGNhdXNlIGV2ZXJ5dGhpbmcgYWZ0ZXIgdGhlIGZpcnN0IGludmFsaWQgY2hhcmFjdGVyIHRvIGJlIGlnbm9yZWQuIChlLmcuXG4gICAgLy8gJ2FieHhjZCcgd2lsbCBiZSB0cmVhdGVkIGFzICdhYicpXG4gICAgdGhhdCA9IHRoYXQuc2xpY2UoMCwgYWN0dWFsKVxuICB9XG5cbiAgcmV0dXJuIHRoYXRcbn1cblxuZnVuY3Rpb24gZnJvbUFycmF5TGlrZSAodGhhdCwgYXJyYXkpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCA8IDAgPyAwIDogY2hlY2tlZChhcnJheS5sZW5ndGgpIHwgMFxuICB0aGF0ID0gY3JlYXRlQnVmZmVyKHRoYXQsIGxlbmd0aClcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgIHRoYXRbaV0gPSBhcnJheVtpXSAmIDI1NVxuICB9XG4gIHJldHVybiB0aGF0XG59XG5cbmZ1bmN0aW9uIGZyb21BcnJheUJ1ZmZlciAodGhhdCwgYXJyYXksIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICBhcnJheS5ieXRlTGVuZ3RoIC8vIHRoaXMgdGhyb3dzIGlmIGBhcnJheWAgaXMgbm90IGEgdmFsaWQgQXJyYXlCdWZmZXJcblxuICBpZiAoYnl0ZU9mZnNldCA8IDAgfHwgYXJyYXkuYnl0ZUxlbmd0aCA8IGJ5dGVPZmZzZXQpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignXFwnb2Zmc2V0XFwnIGlzIG91dCBvZiBib3VuZHMnKVxuICB9XG5cbiAgaWYgKGFycmF5LmJ5dGVMZW5ndGggPCBieXRlT2Zmc2V0ICsgKGxlbmd0aCB8fCAwKSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdcXCdsZW5ndGhcXCcgaXMgb3V0IG9mIGJvdW5kcycpXG4gIH1cblxuICBpZiAoYnl0ZU9mZnNldCA9PT0gdW5kZWZpbmVkICYmIGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgYXJyYXkgPSBuZXcgVWludDhBcnJheShhcnJheSlcbiAgfSBlbHNlIGlmIChsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgIGFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXksIGJ5dGVPZmZzZXQpXG4gIH0gZWxzZSB7XG4gICAgYXJyYXkgPSBuZXcgVWludDhBcnJheShhcnJheSwgYnl0ZU9mZnNldCwgbGVuZ3RoKVxuICB9XG5cbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgLy8gUmV0dXJuIGFuIGF1Z21lbnRlZCBgVWludDhBcnJheWAgaW5zdGFuY2UsIGZvciBiZXN0IHBlcmZvcm1hbmNlXG4gICAgdGhhdCA9IGFycmF5XG4gICAgdGhhdC5fX3Byb3RvX18gPSBCdWZmZXIucHJvdG90eXBlXG4gIH0gZWxzZSB7XG4gICAgLy8gRmFsbGJhY2s6IFJldHVybiBhbiBvYmplY3QgaW5zdGFuY2Ugb2YgdGhlIEJ1ZmZlciBjbGFzc1xuICAgIHRoYXQgPSBmcm9tQXJyYXlMaWtlKHRoYXQsIGFycmF5KVxuICB9XG4gIHJldHVybiB0aGF0XG59XG5cbmZ1bmN0aW9uIGZyb21PYmplY3QgKHRoYXQsIG9iaikge1xuICBpZiAoQnVmZmVyLmlzQnVmZmVyKG9iaikpIHtcbiAgICB2YXIgbGVuID0gY2hlY2tlZChvYmoubGVuZ3RoKSB8IDBcbiAgICB0aGF0ID0gY3JlYXRlQnVmZmVyKHRoYXQsIGxlbilcblxuICAgIGlmICh0aGF0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHRoYXRcbiAgICB9XG5cbiAgICBvYmouY29weSh0aGF0LCAwLCAwLCBsZW4pXG4gICAgcmV0dXJuIHRoYXRcbiAgfVxuXG4gIGlmIChvYmopIHtcbiAgICBpZiAoKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgb2JqLmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB8fCAnbGVuZ3RoJyBpbiBvYmopIHtcbiAgICAgIGlmICh0eXBlb2Ygb2JqLmxlbmd0aCAhPT0gJ251bWJlcicgfHwgaXNuYW4ob2JqLmxlbmd0aCkpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUJ1ZmZlcih0aGF0LCAwKVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZyb21BcnJheUxpa2UodGhhdCwgb2JqKVxuICAgIH1cblxuICAgIGlmIChvYmoudHlwZSA9PT0gJ0J1ZmZlcicgJiYgaXNBcnJheShvYmouZGF0YSkpIHtcbiAgICAgIHJldHVybiBmcm9tQXJyYXlMaWtlKHRoYXQsIG9iai5kYXRhKVxuICAgIH1cbiAgfVxuXG4gIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmcsIEJ1ZmZlciwgQXJyYXlCdWZmZXIsIEFycmF5LCBvciBhcnJheS1saWtlIG9iamVjdC4nKVxufVxuXG5mdW5jdGlvbiBjaGVja2VkIChsZW5ndGgpIHtcbiAgLy8gTm90ZTogY2Fubm90IHVzZSBgbGVuZ3RoIDwga01heExlbmd0aCgpYCBoZXJlIGJlY2F1c2UgdGhhdCBmYWlscyB3aGVuXG4gIC8vIGxlbmd0aCBpcyBOYU4gKHdoaWNoIGlzIG90aGVyd2lzZSBjb2VyY2VkIHRvIHplcm8uKVxuICBpZiAobGVuZ3RoID49IGtNYXhMZW5ndGgoKSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICdzaXplOiAweCcgKyBrTWF4TGVuZ3RoKCkudG9TdHJpbmcoMTYpICsgJyBieXRlcycpXG4gIH1cbiAgcmV0dXJuIGxlbmd0aCB8IDBcbn1cblxuZnVuY3Rpb24gU2xvd0J1ZmZlciAobGVuZ3RoKSB7XG4gIGlmICgrbGVuZ3RoICE9IGxlbmd0aCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGVxZXFlcVxuICAgIGxlbmd0aCA9IDBcbiAgfVxuICByZXR1cm4gQnVmZmVyLmFsbG9jKCtsZW5ndGgpXG59XG5cbkJ1ZmZlci5pc0J1ZmZlciA9IGZ1bmN0aW9uIGlzQnVmZmVyIChiKSB7XG4gIHJldHVybiAhIShiICE9IG51bGwgJiYgYi5faXNCdWZmZXIpXG59XG5cbkJ1ZmZlci5jb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZSAoYSwgYikge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihhKSB8fCAhQnVmZmVyLmlzQnVmZmVyKGIpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnRzIG11c3QgYmUgQnVmZmVycycpXG4gIH1cblxuICBpZiAoYSA9PT0gYikgcmV0dXJuIDBcblxuICB2YXIgeCA9IGEubGVuZ3RoXG4gIHZhciB5ID0gYi5sZW5ndGhcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gTWF0aC5taW4oeCwgeSk7IGkgPCBsZW47ICsraSkge1xuICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICB4ID0gYVtpXVxuICAgICAgeSA9IGJbaV1cbiAgICAgIGJyZWFrXG4gICAgfVxuICB9XG5cbiAgaWYgKHggPCB5KSByZXR1cm4gLTFcbiAgaWYgKHkgPCB4KSByZXR1cm4gMVxuICByZXR1cm4gMFxufVxuXG5CdWZmZXIuaXNFbmNvZGluZyA9IGZ1bmN0aW9uIGlzRW5jb2RpbmcgKGVuY29kaW5nKSB7XG4gIHN3aXRjaCAoU3RyaW5nKGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgY2FzZSAnaGV4JzpcbiAgICBjYXNlICd1dGY4JzpcbiAgICBjYXNlICd1dGYtOCc6XG4gICAgY2FzZSAnYXNjaWknOlxuICAgIGNhc2UgJ2xhdGluMSc6XG4gICAgY2FzZSAnYmluYXJ5JzpcbiAgICBjYXNlICdiYXNlNjQnOlxuICAgIGNhc2UgJ3VjczInOlxuICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICBjYXNlICd1dGYxNmxlJzpcbiAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5CdWZmZXIuY29uY2F0ID0gZnVuY3Rpb24gY29uY2F0IChsaXN0LCBsZW5ndGgpIHtcbiAgaWYgKCFpc0FycmF5KGxpc3QpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0XCIgYXJndW1lbnQgbXVzdCBiZSBhbiBBcnJheSBvZiBCdWZmZXJzJylcbiAgfVxuXG4gIGlmIChsaXN0Lmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBCdWZmZXIuYWxsb2MoMClcbiAgfVxuXG4gIHZhciBpXG4gIGlmIChsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgIGxlbmd0aCA9IDBcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7ICsraSkge1xuICAgICAgbGVuZ3RoICs9IGxpc3RbaV0ubGVuZ3RoXG4gICAgfVxuICB9XG5cbiAgdmFyIGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpXG4gIHZhciBwb3MgPSAwXG4gIGZvciAoaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgKytpKSB7XG4gICAgdmFyIGJ1ZiA9IGxpc3RbaV1cbiAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihidWYpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKVxuICAgIH1cbiAgICBidWYuY29weShidWZmZXIsIHBvcylcbiAgICBwb3MgKz0gYnVmLmxlbmd0aFxuICB9XG4gIHJldHVybiBidWZmZXJcbn1cblxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoc3RyaW5nLCBlbmNvZGluZykge1xuICBpZiAoQnVmZmVyLmlzQnVmZmVyKHN0cmluZykpIHtcbiAgICByZXR1cm4gc3RyaW5nLmxlbmd0aFxuICB9XG4gIGlmICh0eXBlb2YgQXJyYXlCdWZmZXIgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBBcnJheUJ1ZmZlci5pc1ZpZXcgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgIChBcnJheUJ1ZmZlci5pc1ZpZXcoc3RyaW5nKSB8fCBzdHJpbmcgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikpIHtcbiAgICByZXR1cm4gc3RyaW5nLmJ5dGVMZW5ndGhcbiAgfVxuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICBzdHJpbmcgPSAnJyArIHN0cmluZ1xuICB9XG5cbiAgdmFyIGxlbiA9IHN0cmluZy5sZW5ndGhcbiAgaWYgKGxlbiA9PT0gMCkgcmV0dXJuIDBcblxuICAvLyBVc2UgYSBmb3IgbG9vcCB0byBhdm9pZCByZWN1cnNpb25cbiAgdmFyIGxvd2VyZWRDYXNlID0gZmFsc2VcbiAgZm9yICg7Oykge1xuICAgIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgIGNhc2UgJ2xhdGluMSc6XG4gICAgICBjYXNlICdiaW5hcnknOlxuICAgICAgICByZXR1cm4gbGVuXG4gICAgICBjYXNlICd1dGY4JzpcbiAgICAgIGNhc2UgJ3V0Zi04JzpcbiAgICAgIGNhc2UgdW5kZWZpbmVkOlxuICAgICAgICByZXR1cm4gdXRmOFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGhcbiAgICAgIGNhc2UgJ3VjczInOlxuICAgICAgY2FzZSAndWNzLTInOlxuICAgICAgY2FzZSAndXRmMTZsZSc6XG4gICAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICAgIHJldHVybiBsZW4gKiAyXG4gICAgICBjYXNlICdoZXgnOlxuICAgICAgICByZXR1cm4gbGVuID4+PiAxXG4gICAgICBjYXNlICdiYXNlNjQnOlxuICAgICAgICByZXR1cm4gYmFzZTY0VG9CeXRlcyhzdHJpbmcpLmxlbmd0aFxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKGxvd2VyZWRDYXNlKSByZXR1cm4gdXRmOFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGggLy8gYXNzdW1lIHV0ZjhcbiAgICAgICAgZW5jb2RpbmcgPSAoJycgKyBlbmNvZGluZykudG9Mb3dlckNhc2UoKVxuICAgICAgICBsb3dlcmVkQ2FzZSA9IHRydWVcbiAgICB9XG4gIH1cbn1cbkJ1ZmZlci5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuXG5mdW5jdGlvbiBzbG93VG9TdHJpbmcgKGVuY29kaW5nLCBzdGFydCwgZW5kKSB7XG4gIHZhciBsb3dlcmVkQ2FzZSA9IGZhbHNlXG5cbiAgLy8gTm8gbmVlZCB0byB2ZXJpZnkgdGhhdCBcInRoaXMubGVuZ3RoIDw9IE1BWF9VSU5UMzJcIiBzaW5jZSBpdCdzIGEgcmVhZC1vbmx5XG4gIC8vIHByb3BlcnR5IG9mIGEgdHlwZWQgYXJyYXkuXG5cbiAgLy8gVGhpcyBiZWhhdmVzIG5laXRoZXIgbGlrZSBTdHJpbmcgbm9yIFVpbnQ4QXJyYXkgaW4gdGhhdCB3ZSBzZXQgc3RhcnQvZW5kXG4gIC8vIHRvIHRoZWlyIHVwcGVyL2xvd2VyIGJvdW5kcyBpZiB0aGUgdmFsdWUgcGFzc2VkIGlzIG91dCBvZiByYW5nZS5cbiAgLy8gdW5kZWZpbmVkIGlzIGhhbmRsZWQgc3BlY2lhbGx5IGFzIHBlciBFQ01BLTI2MiA2dGggRWRpdGlvbixcbiAgLy8gU2VjdGlvbiAxMy4zLjMuNyBSdW50aW1lIFNlbWFudGljczogS2V5ZWRCaW5kaW5nSW5pdGlhbGl6YXRpb24uXG4gIGlmIChzdGFydCA9PT0gdW5kZWZpbmVkIHx8IHN0YXJ0IDwgMCkge1xuICAgIHN0YXJ0ID0gMFxuICB9XG4gIC8vIFJldHVybiBlYXJseSBpZiBzdGFydCA+IHRoaXMubGVuZ3RoLiBEb25lIGhlcmUgdG8gcHJldmVudCBwb3RlbnRpYWwgdWludDMyXG4gIC8vIGNvZXJjaW9uIGZhaWwgYmVsb3cuXG4gIGlmIChzdGFydCA+IHRoaXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuICcnXG4gIH1cblxuICBpZiAoZW5kID09PSB1bmRlZmluZWQgfHwgZW5kID4gdGhpcy5sZW5ndGgpIHtcbiAgICBlbmQgPSB0aGlzLmxlbmd0aFxuICB9XG5cbiAgaWYgKGVuZCA8PSAwKSB7XG4gICAgcmV0dXJuICcnXG4gIH1cblxuICAvLyBGb3JjZSBjb2Vyc2lvbiB0byB1aW50MzIuIFRoaXMgd2lsbCBhbHNvIGNvZXJjZSBmYWxzZXkvTmFOIHZhbHVlcyB0byAwLlxuICBlbmQgPj4+PSAwXG4gIHN0YXJ0ID4+Pj0gMFxuXG4gIGlmIChlbmQgPD0gc3RhcnQpIHtcbiAgICByZXR1cm4gJydcbiAgfVxuXG4gIGlmICghZW5jb2RpbmcpIGVuY29kaW5nID0gJ3V0ZjgnXG5cbiAgd2hpbGUgKHRydWUpIHtcbiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7XG4gICAgICBjYXNlICdoZXgnOlxuICAgICAgICByZXR1cm4gaGV4U2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAndXRmOCc6XG4gICAgICBjYXNlICd1dGYtOCc6XG4gICAgICAgIHJldHVybiB1dGY4U2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAnYXNjaWknOlxuICAgICAgICByZXR1cm4gYXNjaWlTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuIGxhdGluMVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgICAgIHJldHVybiBiYXNlNjRTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICd1Y3MyJzpcbiAgICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgICAgY2FzZSAndXRmLTE2bGUnOlxuICAgICAgICByZXR1cm4gdXRmMTZsZVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmIChsb3dlcmVkQ2FzZSkgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKVxuICAgICAgICBlbmNvZGluZyA9IChlbmNvZGluZyArICcnKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgIGxvd2VyZWRDYXNlID0gdHJ1ZVxuICAgIH1cbiAgfVxufVxuXG4vLyBUaGUgcHJvcGVydHkgaXMgdXNlZCBieSBgQnVmZmVyLmlzQnVmZmVyYCBhbmQgYGlzLWJ1ZmZlcmAgKGluIFNhZmFyaSA1LTcpIHRvIGRldGVjdFxuLy8gQnVmZmVyIGluc3RhbmNlcy5cbkJ1ZmZlci5wcm90b3R5cGUuX2lzQnVmZmVyID0gdHJ1ZVxuXG5mdW5jdGlvbiBzd2FwIChiLCBuLCBtKSB7XG4gIHZhciBpID0gYltuXVxuICBiW25dID0gYlttXVxuICBiW21dID0gaVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnN3YXAxNiA9IGZ1bmN0aW9uIHN3YXAxNiAoKSB7XG4gIHZhciBsZW4gPSB0aGlzLmxlbmd0aFxuICBpZiAobGVuICUgMiAhPT0gMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMTYtYml0cycpXG4gIH1cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkgKz0gMikge1xuICAgIHN3YXAodGhpcywgaSwgaSArIDEpXG4gIH1cbiAgcmV0dXJuIHRoaXNcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5zd2FwMzIgPSBmdW5jdGlvbiBzd2FwMzIgKCkge1xuICB2YXIgbGVuID0gdGhpcy5sZW5ndGhcbiAgaWYgKGxlbiAlIDQgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDMyLWJpdHMnKVxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICBzd2FwKHRoaXMsIGksIGkgKyAzKVxuICAgIHN3YXAodGhpcywgaSArIDEsIGkgKyAyKVxuICB9XG4gIHJldHVybiB0aGlzXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuc3dhcDY0ID0gZnVuY3Rpb24gc3dhcDY0ICgpIHtcbiAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoXG4gIGlmIChsZW4gJSA4ICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzJylcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSA4KSB7XG4gICAgc3dhcCh0aGlzLCBpLCBpICsgNylcbiAgICBzd2FwKHRoaXMsIGkgKyAxLCBpICsgNilcbiAgICBzd2FwKHRoaXMsIGkgKyAyLCBpICsgNSlcbiAgICBzd2FwKHRoaXMsIGkgKyAzLCBpICsgNClcbiAgfVxuICByZXR1cm4gdGhpc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcgKCkge1xuICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGggfCAwXG4gIGlmIChsZW5ndGggPT09IDApIHJldHVybiAnJ1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHV0ZjhTbGljZSh0aGlzLCAwLCBsZW5ndGgpXG4gIHJldHVybiBzbG93VG9TdHJpbmcuYXBwbHkodGhpcywgYXJndW1lbnRzKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLmVxdWFscyA9IGZ1bmN0aW9uIGVxdWFscyAoYikge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihiKSkgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlcicpXG4gIGlmICh0aGlzID09PSBiKSByZXR1cm4gdHJ1ZVxuICByZXR1cm4gQnVmZmVyLmNvbXBhcmUodGhpcywgYikgPT09IDBcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5pbnNwZWN0ID0gZnVuY3Rpb24gaW5zcGVjdCAoKSB7XG4gIHZhciBzdHIgPSAnJ1xuICB2YXIgbWF4ID0gZXhwb3J0cy5JTlNQRUNUX01BWF9CWVRFU1xuICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgc3RyID0gdGhpcy50b1N0cmluZygnaGV4JywgMCwgbWF4KS5tYXRjaCgvLnsyfS9nKS5qb2luKCcgJylcbiAgICBpZiAodGhpcy5sZW5ndGggPiBtYXgpIHN0ciArPSAnIC4uLiAnXG4gIH1cbiAgcmV0dXJuICc8QnVmZmVyICcgKyBzdHIgKyAnPidcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5jb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZSAodGFyZ2V0LCBzdGFydCwgZW5kLCB0aGlzU3RhcnQsIHRoaXNFbmQpIHtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIodGFyZ2V0KSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXInKVxuICB9XG5cbiAgaWYgKHN0YXJ0ID09PSB1bmRlZmluZWQpIHtcbiAgICBzdGFydCA9IDBcbiAgfVxuICBpZiAoZW5kID09PSB1bmRlZmluZWQpIHtcbiAgICBlbmQgPSB0YXJnZXQgPyB0YXJnZXQubGVuZ3RoIDogMFxuICB9XG4gIGlmICh0aGlzU3RhcnQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRoaXNTdGFydCA9IDBcbiAgfVxuICBpZiAodGhpc0VuZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhpc0VuZCA9IHRoaXMubGVuZ3RoXG4gIH1cblxuICBpZiAoc3RhcnQgPCAwIHx8IGVuZCA+IHRhcmdldC5sZW5ndGggfHwgdGhpc1N0YXJ0IDwgMCB8fCB0aGlzRW5kID4gdGhpcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignb3V0IG9mIHJhbmdlIGluZGV4JylcbiAgfVxuXG4gIGlmICh0aGlzU3RhcnQgPj0gdGhpc0VuZCAmJiBzdGFydCA+PSBlbmQpIHtcbiAgICByZXR1cm4gMFxuICB9XG4gIGlmICh0aGlzU3RhcnQgPj0gdGhpc0VuZCkge1xuICAgIHJldHVybiAtMVxuICB9XG4gIGlmIChzdGFydCA+PSBlbmQpIHtcbiAgICByZXR1cm4gMVxuICB9XG5cbiAgc3RhcnQgPj4+PSAwXG4gIGVuZCA+Pj49IDBcbiAgdGhpc1N0YXJ0ID4+Pj0gMFxuICB0aGlzRW5kID4+Pj0gMFxuXG4gIGlmICh0aGlzID09PSB0YXJnZXQpIHJldHVybiAwXG5cbiAgdmFyIHggPSB0aGlzRW5kIC0gdGhpc1N0YXJ0XG4gIHZhciB5ID0gZW5kIC0gc3RhcnRcbiAgdmFyIGxlbiA9IE1hdGgubWluKHgsIHkpXG5cbiAgdmFyIHRoaXNDb3B5ID0gdGhpcy5zbGljZSh0aGlzU3RhcnQsIHRoaXNFbmQpXG4gIHZhciB0YXJnZXRDb3B5ID0gdGFyZ2V0LnNsaWNlKHN0YXJ0LCBlbmQpXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgIGlmICh0aGlzQ29weVtpXSAhPT0gdGFyZ2V0Q29weVtpXSkge1xuICAgICAgeCA9IHRoaXNDb3B5W2ldXG4gICAgICB5ID0gdGFyZ2V0Q29weVtpXVxuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cblxuICBpZiAoeCA8IHkpIHJldHVybiAtMVxuICBpZiAoeSA8IHgpIHJldHVybiAxXG4gIHJldHVybiAwXG59XG5cbi8vIEZpbmRzIGVpdGhlciB0aGUgZmlyc3QgaW5kZXggb2YgYHZhbGAgaW4gYGJ1ZmZlcmAgYXQgb2Zmc2V0ID49IGBieXRlT2Zmc2V0YCxcbi8vIE9SIHRoZSBsYXN0IGluZGV4IG9mIGB2YWxgIGluIGBidWZmZXJgIGF0IG9mZnNldCA8PSBgYnl0ZU9mZnNldGAuXG4vL1xuLy8gQXJndW1lbnRzOlxuLy8gLSBidWZmZXIgLSBhIEJ1ZmZlciB0byBzZWFyY2hcbi8vIC0gdmFsIC0gYSBzdHJpbmcsIEJ1ZmZlciwgb3IgbnVtYmVyXG4vLyAtIGJ5dGVPZmZzZXQgLSBhbiBpbmRleCBpbnRvIGBidWZmZXJgOyB3aWxsIGJlIGNsYW1wZWQgdG8gYW4gaW50MzJcbi8vIC0gZW5jb2RpbmcgLSBhbiBvcHRpb25hbCBlbmNvZGluZywgcmVsZXZhbnQgaXMgdmFsIGlzIGEgc3RyaW5nXG4vLyAtIGRpciAtIHRydWUgZm9yIGluZGV4T2YsIGZhbHNlIGZvciBsYXN0SW5kZXhPZlxuZnVuY3Rpb24gYmlkaXJlY3Rpb25hbEluZGV4T2YgKGJ1ZmZlciwgdmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgZGlyKSB7XG4gIC8vIEVtcHR5IGJ1ZmZlciBtZWFucyBubyBtYXRjaFxuICBpZiAoYnVmZmVyLmxlbmd0aCA9PT0gMCkgcmV0dXJuIC0xXG5cbiAgLy8gTm9ybWFsaXplIGJ5dGVPZmZzZXRcbiAgaWYgKHR5cGVvZiBieXRlT2Zmc2V0ID09PSAnc3RyaW5nJykge1xuICAgIGVuY29kaW5nID0gYnl0ZU9mZnNldFxuICAgIGJ5dGVPZmZzZXQgPSAwXG4gIH0gZWxzZSBpZiAoYnl0ZU9mZnNldCA+IDB4N2ZmZmZmZmYpIHtcbiAgICBieXRlT2Zmc2V0ID0gMHg3ZmZmZmZmZlxuICB9IGVsc2UgaWYgKGJ5dGVPZmZzZXQgPCAtMHg4MDAwMDAwMCkge1xuICAgIGJ5dGVPZmZzZXQgPSAtMHg4MDAwMDAwMFxuICB9XG4gIGJ5dGVPZmZzZXQgPSArYnl0ZU9mZnNldCAgLy8gQ29lcmNlIHRvIE51bWJlci5cbiAgaWYgKGlzTmFOKGJ5dGVPZmZzZXQpKSB7XG4gICAgLy8gYnl0ZU9mZnNldDogaXQgaXQncyB1bmRlZmluZWQsIG51bGwsIE5hTiwgXCJmb29cIiwgZXRjLCBzZWFyY2ggd2hvbGUgYnVmZmVyXG4gICAgYnl0ZU9mZnNldCA9IGRpciA/IDAgOiAoYnVmZmVyLmxlbmd0aCAtIDEpXG4gIH1cblxuICAvLyBOb3JtYWxpemUgYnl0ZU9mZnNldDogbmVnYXRpdmUgb2Zmc2V0cyBzdGFydCBmcm9tIHRoZSBlbmQgb2YgdGhlIGJ1ZmZlclxuICBpZiAoYnl0ZU9mZnNldCA8IDApIGJ5dGVPZmZzZXQgPSBidWZmZXIubGVuZ3RoICsgYnl0ZU9mZnNldFxuICBpZiAoYnl0ZU9mZnNldCA+PSBidWZmZXIubGVuZ3RoKSB7XG4gICAgaWYgKGRpcikgcmV0dXJuIC0xXG4gICAgZWxzZSBieXRlT2Zmc2V0ID0gYnVmZmVyLmxlbmd0aCAtIDFcbiAgfSBlbHNlIGlmIChieXRlT2Zmc2V0IDwgMCkge1xuICAgIGlmIChkaXIpIGJ5dGVPZmZzZXQgPSAwXG4gICAgZWxzZSByZXR1cm4gLTFcbiAgfVxuXG4gIC8vIE5vcm1hbGl6ZSB2YWxcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgdmFsID0gQnVmZmVyLmZyb20odmFsLCBlbmNvZGluZylcbiAgfVxuXG4gIC8vIEZpbmFsbHksIHNlYXJjaCBlaXRoZXIgaW5kZXhPZiAoaWYgZGlyIGlzIHRydWUpIG9yIGxhc3RJbmRleE9mXG4gIGlmIChCdWZmZXIuaXNCdWZmZXIodmFsKSkge1xuICAgIC8vIFNwZWNpYWwgY2FzZTogbG9va2luZyBmb3IgZW1wdHkgc3RyaW5nL2J1ZmZlciBhbHdheXMgZmFpbHNcbiAgICBpZiAodmFsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIC0xXG4gICAgfVxuICAgIHJldHVybiBhcnJheUluZGV4T2YoYnVmZmVyLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBkaXIpXG4gIH0gZWxzZSBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicpIHtcbiAgICB2YWwgPSB2YWwgJiAweEZGIC8vIFNlYXJjaCBmb3IgYSBieXRlIHZhbHVlIFswLTI1NV1cbiAgICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQgJiZcbiAgICAgICAgdHlwZW9mIFVpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2YgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGlmIChkaXIpIHtcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChidWZmZXIsIHZhbCwgYnl0ZU9mZnNldClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBVaW50OEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZi5jYWxsKGJ1ZmZlciwgdmFsLCBieXRlT2Zmc2V0KVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYXJyYXlJbmRleE9mKGJ1ZmZlciwgWyB2YWwgXSwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGRpcilcbiAgfVxuXG4gIHRocm93IG5ldyBUeXBlRXJyb3IoJ3ZhbCBtdXN0IGJlIHN0cmluZywgbnVtYmVyIG9yIEJ1ZmZlcicpXG59XG5cbmZ1bmN0aW9uIGFycmF5SW5kZXhPZiAoYXJyLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBkaXIpIHtcbiAgdmFyIGluZGV4U2l6ZSA9IDFcbiAgdmFyIGFyckxlbmd0aCA9IGFyci5sZW5ndGhcbiAgdmFyIHZhbExlbmd0aCA9IHZhbC5sZW5ndGhcblxuICBpZiAoZW5jb2RpbmcgIT09IHVuZGVmaW5lZCkge1xuICAgIGVuY29kaW5nID0gU3RyaW5nKGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpXG4gICAgaWYgKGVuY29kaW5nID09PSAndWNzMicgfHwgZW5jb2RpbmcgPT09ICd1Y3MtMicgfHxcbiAgICAgICAgZW5jb2RpbmcgPT09ICd1dGYxNmxlJyB8fCBlbmNvZGluZyA9PT0gJ3V0Zi0xNmxlJykge1xuICAgICAgaWYgKGFyci5sZW5ndGggPCAyIHx8IHZhbC5sZW5ndGggPCAyKSB7XG4gICAgICAgIHJldHVybiAtMVxuICAgICAgfVxuICAgICAgaW5kZXhTaXplID0gMlxuICAgICAgYXJyTGVuZ3RoIC89IDJcbiAgICAgIHZhbExlbmd0aCAvPSAyXG4gICAgICBieXRlT2Zmc2V0IC89IDJcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZWFkIChidWYsIGkpIHtcbiAgICBpZiAoaW5kZXhTaXplID09PSAxKSB7XG4gICAgICByZXR1cm4gYnVmW2ldXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBidWYucmVhZFVJbnQxNkJFKGkgKiBpbmRleFNpemUpXG4gICAgfVxuICB9XG5cbiAgdmFyIGlcbiAgaWYgKGRpcikge1xuICAgIHZhciBmb3VuZEluZGV4ID0gLTFcbiAgICBmb3IgKGkgPSBieXRlT2Zmc2V0OyBpIDwgYXJyTGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChyZWFkKGFyciwgaSkgPT09IHJlYWQodmFsLCBmb3VuZEluZGV4ID09PSAtMSA/IDAgOiBpIC0gZm91bmRJbmRleCkpIHtcbiAgICAgICAgaWYgKGZvdW5kSW5kZXggPT09IC0xKSBmb3VuZEluZGV4ID0gaVxuICAgICAgICBpZiAoaSAtIGZvdW5kSW5kZXggKyAxID09PSB2YWxMZW5ndGgpIHJldHVybiBmb3VuZEluZGV4ICogaW5kZXhTaXplXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoZm91bmRJbmRleCAhPT0gLTEpIGkgLT0gaSAtIGZvdW5kSW5kZXhcbiAgICAgICAgZm91bmRJbmRleCA9IC0xXG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChieXRlT2Zmc2V0ICsgdmFsTGVuZ3RoID4gYXJyTGVuZ3RoKSBieXRlT2Zmc2V0ID0gYXJyTGVuZ3RoIC0gdmFsTGVuZ3RoXG4gICAgZm9yIChpID0gYnl0ZU9mZnNldDsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHZhciBmb3VuZCA9IHRydWVcbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsTGVuZ3RoOyBqKyspIHtcbiAgICAgICAgaWYgKHJlYWQoYXJyLCBpICsgaikgIT09IHJlYWQodmFsLCBqKSkge1xuICAgICAgICAgIGZvdW5kID0gZmFsc2VcbiAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoZm91bmQpIHJldHVybiBpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIC0xXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuaW5jbHVkZXMgPSBmdW5jdGlvbiBpbmNsdWRlcyAodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykge1xuICByZXR1cm4gdGhpcy5pbmRleE9mKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpICE9PSAtMVxufVxuXG5CdWZmZXIucHJvdG90eXBlLmluZGV4T2YgPSBmdW5jdGlvbiBpbmRleE9mICh2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nKSB7XG4gIHJldHVybiBiaWRpcmVjdGlvbmFsSW5kZXhPZih0aGlzLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCB0cnVlKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLmxhc3RJbmRleE9mID0gZnVuY3Rpb24gbGFzdEluZGV4T2YgKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIGJpZGlyZWN0aW9uYWxJbmRleE9mKHRoaXMsIHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcsIGZhbHNlKVxufVxuXG5mdW5jdGlvbiBoZXhXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIG9mZnNldCA9IE51bWJlcihvZmZzZXQpIHx8IDBcbiAgdmFyIHJlbWFpbmluZyA9IGJ1Zi5sZW5ndGggLSBvZmZzZXRcbiAgaWYgKCFsZW5ndGgpIHtcbiAgICBsZW5ndGggPSByZW1haW5pbmdcbiAgfSBlbHNlIHtcbiAgICBsZW5ndGggPSBOdW1iZXIobGVuZ3RoKVxuICAgIGlmIChsZW5ndGggPiByZW1haW5pbmcpIHtcbiAgICAgIGxlbmd0aCA9IHJlbWFpbmluZ1xuICAgIH1cbiAgfVxuXG4gIC8vIG11c3QgYmUgYW4gZXZlbiBudW1iZXIgb2YgZGlnaXRzXG4gIHZhciBzdHJMZW4gPSBzdHJpbmcubGVuZ3RoXG4gIGlmIChzdHJMZW4gJSAyICE9PSAwKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIGhleCBzdHJpbmcnKVxuXG4gIGlmIChsZW5ndGggPiBzdHJMZW4gLyAyKSB7XG4gICAgbGVuZ3RoID0gc3RyTGVuIC8gMlxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICB2YXIgcGFyc2VkID0gcGFyc2VJbnQoc3RyaW5nLnN1YnN0cihpICogMiwgMiksIDE2KVxuICAgIGlmIChpc05hTihwYXJzZWQpKSByZXR1cm4gaVxuICAgIGJ1ZltvZmZzZXQgKyBpXSA9IHBhcnNlZFxuICB9XG4gIHJldHVybiBpXG59XG5cbmZ1bmN0aW9uIHV0ZjhXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBibGl0QnVmZmVyKHV0ZjhUb0J5dGVzKHN0cmluZywgYnVmLmxlbmd0aCAtIG9mZnNldCksIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbmZ1bmN0aW9uIGFzY2lpV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcihhc2NpaVRvQnl0ZXMoc3RyaW5nKSwgYnVmLCBvZmZzZXQsIGxlbmd0aClcbn1cblxuZnVuY3Rpb24gbGF0aW4xV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYXNjaWlXcml0ZShidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbmZ1bmN0aW9uIGJhc2U2NFdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGJsaXRCdWZmZXIoYmFzZTY0VG9CeXRlcyhzdHJpbmcpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5mdW5jdGlvbiB1Y3MyV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcih1dGYxNmxlVG9CeXRlcyhzdHJpbmcsIGJ1Zi5sZW5ndGggLSBvZmZzZXQpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gd3JpdGUgKHN0cmluZywgb2Zmc2V0LCBsZW5ndGgsIGVuY29kaW5nKSB7XG4gIC8vIEJ1ZmZlciN3cml0ZShzdHJpbmcpXG4gIGlmIChvZmZzZXQgPT09IHVuZGVmaW5lZCkge1xuICAgIGVuY29kaW5nID0gJ3V0ZjgnXG4gICAgbGVuZ3RoID0gdGhpcy5sZW5ndGhcbiAgICBvZmZzZXQgPSAwXG4gIC8vIEJ1ZmZlciN3cml0ZShzdHJpbmcsIGVuY29kaW5nKVxuICB9IGVsc2UgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5jb2RpbmcgPSBvZmZzZXRcbiAgICBsZW5ndGggPSB0aGlzLmxlbmd0aFxuICAgIG9mZnNldCA9IDBcbiAgLy8gQnVmZmVyI3dyaXRlKHN0cmluZywgb2Zmc2V0WywgbGVuZ3RoXVssIGVuY29kaW5nXSlcbiAgfSBlbHNlIGlmIChpc0Zpbml0ZShvZmZzZXQpKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICAgIGlmIChpc0Zpbml0ZShsZW5ndGgpKSB7XG4gICAgICBsZW5ndGggPSBsZW5ndGggfCAwXG4gICAgICBpZiAoZW5jb2RpbmcgPT09IHVuZGVmaW5lZCkgZW5jb2RpbmcgPSAndXRmOCdcbiAgICB9IGVsc2Uge1xuICAgICAgZW5jb2RpbmcgPSBsZW5ndGhcbiAgICAgIGxlbmd0aCA9IHVuZGVmaW5lZFxuICAgIH1cbiAgLy8gbGVnYWN5IHdyaXRlKHN0cmluZywgZW5jb2RpbmcsIG9mZnNldCwgbGVuZ3RoKSAtIHJlbW92ZSBpbiB2MC4xM1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICdCdWZmZXIud3JpdGUoc3RyaW5nLCBlbmNvZGluZywgb2Zmc2V0WywgbGVuZ3RoXSkgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZCdcbiAgICApXG4gIH1cblxuICB2YXIgcmVtYWluaW5nID0gdGhpcy5sZW5ndGggLSBvZmZzZXRcbiAgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkIHx8IGxlbmd0aCA+IHJlbWFpbmluZykgbGVuZ3RoID0gcmVtYWluaW5nXG5cbiAgaWYgKChzdHJpbmcubGVuZ3RoID4gMCAmJiAobGVuZ3RoIDwgMCB8fCBvZmZzZXQgPCAwKSkgfHwgb2Zmc2V0ID4gdGhpcy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQXR0ZW1wdCB0byB3cml0ZSBvdXRzaWRlIGJ1ZmZlciBib3VuZHMnKVxuICB9XG5cbiAgaWYgKCFlbmNvZGluZykgZW5jb2RpbmcgPSAndXRmOCdcblxuICB2YXIgbG93ZXJlZENhc2UgPSBmYWxzZVxuICBmb3IgKDs7KSB7XG4gICAgc3dpdGNoIChlbmNvZGluZykge1xuICAgICAgY2FzZSAnaGV4JzpcbiAgICAgICAgcmV0dXJuIGhleFdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGNhc2UgJ3V0ZjgnOlxuICAgICAgY2FzZSAndXRmLTgnOlxuICAgICAgICByZXR1cm4gdXRmOFdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgICAgcmV0dXJuIGFzY2lpV3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAnbGF0aW4xJzpcbiAgICAgIGNhc2UgJ2JpbmFyeSc6XG4gICAgICAgIHJldHVybiBsYXRpbjFXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBjYXNlICdiYXNlNjQnOlxuICAgICAgICAvLyBXYXJuaW5nOiBtYXhMZW5ndGggbm90IHRha2VuIGludG8gYWNjb3VudCBpbiBiYXNlNjRXcml0ZVxuICAgICAgICByZXR1cm4gYmFzZTY0V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAndWNzMic6XG4gICAgICBjYXNlICd1Y3MtMic6XG4gICAgICBjYXNlICd1dGYxNmxlJzpcbiAgICAgIGNhc2UgJ3V0Zi0xNmxlJzpcbiAgICAgICAgcmV0dXJuIHVjczJXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAobG93ZXJlZENhc2UpIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZylcbiAgICAgICAgZW5jb2RpbmcgPSAoJycgKyBlbmNvZGluZykudG9Mb3dlckNhc2UoKVxuICAgICAgICBsb3dlcmVkQ2FzZSA9IHRydWVcbiAgICB9XG4gIH1cbn1cblxuQnVmZmVyLnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiB0b0pTT04gKCkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6ICdCdWZmZXInLFxuICAgIGRhdGE6IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHRoaXMuX2FyciB8fCB0aGlzLCAwKVxuICB9XG59XG5cbmZ1bmN0aW9uIGJhc2U2NFNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgaWYgKHN0YXJ0ID09PSAwICYmIGVuZCA9PT0gYnVmLmxlbmd0aCkge1xuICAgIHJldHVybiBiYXNlNjQuZnJvbUJ5dGVBcnJheShidWYpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGJhc2U2NC5mcm9tQnl0ZUFycmF5KGJ1Zi5zbGljZShzdGFydCwgZW5kKSlcbiAgfVxufVxuXG5mdW5jdGlvbiB1dGY4U2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICBlbmQgPSBNYXRoLm1pbihidWYubGVuZ3RoLCBlbmQpXG4gIHZhciByZXMgPSBbXVxuXG4gIHZhciBpID0gc3RhcnRcbiAgd2hpbGUgKGkgPCBlbmQpIHtcbiAgICB2YXIgZmlyc3RCeXRlID0gYnVmW2ldXG4gICAgdmFyIGNvZGVQb2ludCA9IG51bGxcbiAgICB2YXIgYnl0ZXNQZXJTZXF1ZW5jZSA9IChmaXJzdEJ5dGUgPiAweEVGKSA/IDRcbiAgICAgIDogKGZpcnN0Qnl0ZSA+IDB4REYpID8gM1xuICAgICAgOiAoZmlyc3RCeXRlID4gMHhCRikgPyAyXG4gICAgICA6IDFcblxuICAgIGlmIChpICsgYnl0ZXNQZXJTZXF1ZW5jZSA8PSBlbmQpIHtcbiAgICAgIHZhciBzZWNvbmRCeXRlLCB0aGlyZEJ5dGUsIGZvdXJ0aEJ5dGUsIHRlbXBDb2RlUG9pbnRcblxuICAgICAgc3dpdGNoIChieXRlc1BlclNlcXVlbmNlKSB7XG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICBpZiAoZmlyc3RCeXRlIDwgMHg4MCkge1xuICAgICAgICAgICAgY29kZVBvaW50ID0gZmlyc3RCeXRlXG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW2kgKyAxXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4QzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4MUYpIDw8IDB4NiB8IChzZWNvbmRCeXRlICYgMHgzRilcbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHg3Rikge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW2kgKyAxXVxuICAgICAgICAgIHRoaXJkQnl0ZSA9IGJ1ZltpICsgMl1cbiAgICAgICAgICBpZiAoKHNlY29uZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCAmJiAodGhpcmRCeXRlICYgMHhDMCkgPT09IDB4ODApIHtcbiAgICAgICAgICAgIHRlbXBDb2RlUG9pbnQgPSAoZmlyc3RCeXRlICYgMHhGKSA8PCAweEMgfCAoc2Vjb25kQnl0ZSAmIDB4M0YpIDw8IDB4NiB8ICh0aGlyZEJ5dGUgJiAweDNGKVxuICAgICAgICAgICAgaWYgKHRlbXBDb2RlUG9pbnQgPiAweDdGRiAmJiAodGVtcENvZGVQb2ludCA8IDB4RDgwMCB8fCB0ZW1wQ29kZVBvaW50ID4gMHhERkZGKSkge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGNhc2UgNDpcbiAgICAgICAgICBzZWNvbmRCeXRlID0gYnVmW2kgKyAxXVxuICAgICAgICAgIHRoaXJkQnl0ZSA9IGJ1ZltpICsgMl1cbiAgICAgICAgICBmb3VydGhCeXRlID0gYnVmW2kgKyAzXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4QzApID09PSAweDgwICYmICh0aGlyZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCAmJiAoZm91cnRoQnl0ZSAmIDB4QzApID09PSAweDgwKSB7XG4gICAgICAgICAgICB0ZW1wQ29kZVBvaW50ID0gKGZpcnN0Qnl0ZSAmIDB4RikgPDwgMHgxMiB8IChzZWNvbmRCeXRlICYgMHgzRikgPDwgMHhDIHwgKHRoaXJkQnl0ZSAmIDB4M0YpIDw8IDB4NiB8IChmb3VydGhCeXRlICYgMHgzRilcbiAgICAgICAgICAgIGlmICh0ZW1wQ29kZVBvaW50ID4gMHhGRkZGICYmIHRlbXBDb2RlUG9pbnQgPCAweDExMDAwMCkge1xuICAgICAgICAgICAgICBjb2RlUG9pbnQgPSB0ZW1wQ29kZVBvaW50XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjb2RlUG9pbnQgPT09IG51bGwpIHtcbiAgICAgIC8vIHdlIGRpZCBub3QgZ2VuZXJhdGUgYSB2YWxpZCBjb2RlUG9pbnQgc28gaW5zZXJ0IGFcbiAgICAgIC8vIHJlcGxhY2VtZW50IGNoYXIgKFUrRkZGRCkgYW5kIGFkdmFuY2Ugb25seSAxIGJ5dGVcbiAgICAgIGNvZGVQb2ludCA9IDB4RkZGRFxuICAgICAgYnl0ZXNQZXJTZXF1ZW5jZSA9IDFcbiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA+IDB4RkZGRikge1xuICAgICAgLy8gZW5jb2RlIHRvIHV0ZjE2IChzdXJyb2dhdGUgcGFpciBkYW5jZSlcbiAgICAgIGNvZGVQb2ludCAtPSAweDEwMDAwXG4gICAgICByZXMucHVzaChjb2RlUG9pbnQgPj4+IDEwICYgMHgzRkYgfCAweEQ4MDApXG4gICAgICBjb2RlUG9pbnQgPSAweERDMDAgfCBjb2RlUG9pbnQgJiAweDNGRlxuICAgIH1cblxuICAgIHJlcy5wdXNoKGNvZGVQb2ludClcbiAgICBpICs9IGJ5dGVzUGVyU2VxdWVuY2VcbiAgfVxuXG4gIHJldHVybiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkocmVzKVxufVxuXG4vLyBCYXNlZCBvbiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yMjc0NzI3Mi82ODA3NDIsIHRoZSBicm93c2VyIHdpdGhcbi8vIHRoZSBsb3dlc3QgbGltaXQgaXMgQ2hyb21lLCB3aXRoIDB4MTAwMDAgYXJncy5cbi8vIFdlIGdvIDEgbWFnbml0dWRlIGxlc3MsIGZvciBzYWZldHlcbnZhciBNQVhfQVJHVU1FTlRTX0xFTkdUSCA9IDB4MTAwMFxuXG5mdW5jdGlvbiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkgKGNvZGVQb2ludHMpIHtcbiAgdmFyIGxlbiA9IGNvZGVQb2ludHMubGVuZ3RoXG4gIGlmIChsZW4gPD0gTUFYX0FSR1VNRU5UU19MRU5HVEgpIHtcbiAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsIGNvZGVQb2ludHMpIC8vIGF2b2lkIGV4dHJhIHNsaWNlKClcbiAgfVxuXG4gIC8vIERlY29kZSBpbiBjaHVua3MgdG8gYXZvaWQgXCJjYWxsIHN0YWNrIHNpemUgZXhjZWVkZWRcIi5cbiAgdmFyIHJlcyA9ICcnXG4gIHZhciBpID0gMFxuICB3aGlsZSAoaSA8IGxlbikge1xuICAgIHJlcyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFxuICAgICAgU3RyaW5nLFxuICAgICAgY29kZVBvaW50cy5zbGljZShpLCBpICs9IE1BWF9BUkdVTUVOVFNfTEVOR1RIKVxuICAgIClcbiAgfVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIGFzY2lpU2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICB2YXIgcmV0ID0gJydcbiAgZW5kID0gTWF0aC5taW4oYnVmLmxlbmd0aCwgZW5kKVxuXG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgKytpKSB7XG4gICAgcmV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldICYgMHg3RilcbiAgfVxuICByZXR1cm4gcmV0XG59XG5cbmZ1bmN0aW9uIGxhdGluMVNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHJldCA9ICcnXG4gIGVuZCA9IE1hdGgubWluKGJ1Zi5sZW5ndGgsIGVuZClcblxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgIHJldCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ1ZltpXSlcbiAgfVxuICByZXR1cm4gcmV0XG59XG5cbmZ1bmN0aW9uIGhleFNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGxlbiA9IGJ1Zi5sZW5ndGhcblxuICBpZiAoIXN0YXJ0IHx8IHN0YXJ0IDwgMCkgc3RhcnQgPSAwXG4gIGlmICghZW5kIHx8IGVuZCA8IDAgfHwgZW5kID4gbGVuKSBlbmQgPSBsZW5cblxuICB2YXIgb3V0ID0gJydcbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyArK2kpIHtcbiAgICBvdXQgKz0gdG9IZXgoYnVmW2ldKVxuICB9XG4gIHJldHVybiBvdXRcbn1cblxuZnVuY3Rpb24gdXRmMTZsZVNsaWNlIChidWYsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGJ5dGVzID0gYnVmLnNsaWNlKHN0YXJ0LCBlbmQpXG4gIHZhciByZXMgPSAnJ1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgcmVzICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZXNbaV0gKyBieXRlc1tpICsgMV0gKiAyNTYpXG4gIH1cbiAgcmV0dXJuIHJlc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnNsaWNlID0gZnVuY3Rpb24gc2xpY2UgKHN0YXJ0LCBlbmQpIHtcbiAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoXG4gIHN0YXJ0ID0gfn5zdGFydFxuICBlbmQgPSBlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IH5+ZW5kXG5cbiAgaWYgKHN0YXJ0IDwgMCkge1xuICAgIHN0YXJ0ICs9IGxlblxuICAgIGlmIChzdGFydCA8IDApIHN0YXJ0ID0gMFxuICB9IGVsc2UgaWYgKHN0YXJ0ID4gbGVuKSB7XG4gICAgc3RhcnQgPSBsZW5cbiAgfVxuXG4gIGlmIChlbmQgPCAwKSB7XG4gICAgZW5kICs9IGxlblxuICAgIGlmIChlbmQgPCAwKSBlbmQgPSAwXG4gIH0gZWxzZSBpZiAoZW5kID4gbGVuKSB7XG4gICAgZW5kID0gbGVuXG4gIH1cblxuICBpZiAoZW5kIDwgc3RhcnQpIGVuZCA9IHN0YXJ0XG5cbiAgdmFyIG5ld0J1ZlxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICBuZXdCdWYgPSB0aGlzLnN1YmFycmF5KHN0YXJ0LCBlbmQpXG4gICAgbmV3QnVmLl9fcHJvdG9fXyA9IEJ1ZmZlci5wcm90b3R5cGVcbiAgfSBlbHNlIHtcbiAgICB2YXIgc2xpY2VMZW4gPSBlbmQgLSBzdGFydFxuICAgIG5ld0J1ZiA9IG5ldyBCdWZmZXIoc2xpY2VMZW4sIHVuZGVmaW5lZClcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWNlTGVuOyArK2kpIHtcbiAgICAgIG5ld0J1ZltpXSA9IHRoaXNbaSArIHN0YXJ0XVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXdCdWZcbn1cblxuLypcbiAqIE5lZWQgdG8gbWFrZSBzdXJlIHRoYXQgYnVmZmVyIGlzbid0IHRyeWluZyB0byB3cml0ZSBvdXQgb2YgYm91bmRzLlxuICovXG5mdW5jdGlvbiBjaGVja09mZnNldCAob2Zmc2V0LCBleHQsIGxlbmd0aCkge1xuICBpZiAoKG9mZnNldCAlIDEpICE9PSAwIHx8IG9mZnNldCA8IDApIHRocm93IG5ldyBSYW5nZUVycm9yKCdvZmZzZXQgaXMgbm90IHVpbnQnKVxuICBpZiAob2Zmc2V0ICsgZXh0ID4gbGVuZ3RoKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVHJ5aW5nIHRvIGFjY2VzcyBiZXlvbmQgYnVmZmVyIGxlbmd0aCcpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnRMRSA9IGZ1bmN0aW9uIHJlYWRVSW50TEUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aClcblxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXRdXG4gIHZhciBtdWwgPSAxXG4gIHZhciBpID0gMFxuICB3aGlsZSAoKytpIDwgYnl0ZUxlbmd0aCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIGldICogbXVsXG4gIH1cblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnRCRSA9IGZ1bmN0aW9uIHJlYWRVSW50QkUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG4gIH1cblxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXQgKyAtLWJ5dGVMZW5ndGhdXG4gIHZhciBtdWwgPSAxXG4gIHdoaWxlIChieXRlTGVuZ3RoID4gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIC0tYnl0ZUxlbmd0aF0gKiBtdWxcbiAgfVxuXG4gIHJldHVybiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDggPSBmdW5jdGlvbiByZWFkVUludDggKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAxLCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIHRoaXNbb2Zmc2V0XVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MTZMRSA9IGZ1bmN0aW9uIHJlYWRVSW50MTZMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gdGhpc1tvZmZzZXRdIHwgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDE2QkUgPSBmdW5jdGlvbiByZWFkVUludDE2QkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuICh0aGlzW29mZnNldF0gPDwgOCkgfCB0aGlzW29mZnNldCArIDFdXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQzMkxFID0gZnVuY3Rpb24gcmVhZFVJbnQzMkxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICgodGhpc1tvZmZzZXRdKSB8XG4gICAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KSB8XG4gICAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCAxNikpICtcbiAgICAgICh0aGlzW29mZnNldCArIDNdICogMHgxMDAwMDAwKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MzJCRSA9IGZ1bmN0aW9uIHJlYWRVSW50MzJCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuXG4gIHJldHVybiAodGhpc1tvZmZzZXRdICogMHgxMDAwMDAwKSArXG4gICAgKCh0aGlzW29mZnNldCArIDFdIDw8IDE2KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMl0gPDwgOCkgfFxuICAgIHRoaXNbb2Zmc2V0ICsgM10pXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludExFID0gZnVuY3Rpb24gcmVhZEludExFIChvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG5cbiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0XVxuICB2YXIgbXVsID0gMVxuICB2YXIgaSA9IDBcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB2YWwgKz0gdGhpc1tvZmZzZXQgKyBpXSAqIG11bFxuICB9XG4gIG11bCAqPSAweDgwXG5cbiAgaWYgKHZhbCA+PSBtdWwpIHZhbCAtPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aClcblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludEJFID0gZnVuY3Rpb24gcmVhZEludEJFIChvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG5cbiAgdmFyIGkgPSBieXRlTGVuZ3RoXG4gIHZhciBtdWwgPSAxXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldCArIC0taV1cbiAgd2hpbGUgKGkgPiAwICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgLS1pXSAqIG11bFxuICB9XG4gIG11bCAqPSAweDgwXG5cbiAgaWYgKHZhbCA+PSBtdWwpIHZhbCAtPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aClcblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDggPSBmdW5jdGlvbiByZWFkSW50OCAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDEsIHRoaXMubGVuZ3RoKVxuICBpZiAoISh0aGlzW29mZnNldF0gJiAweDgwKSkgcmV0dXJuICh0aGlzW29mZnNldF0pXG4gIHJldHVybiAoKDB4ZmYgLSB0aGlzW29mZnNldF0gKyAxKSAqIC0xKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnQxNkxFID0gZnVuY3Rpb24gcmVhZEludDE2TEUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0XSB8ICh0aGlzW29mZnNldCArIDFdIDw8IDgpXG4gIHJldHVybiAodmFsICYgMHg4MDAwKSA/IHZhbCB8IDB4RkZGRjAwMDAgOiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MTZCRSA9IGZ1bmN0aW9uIHJlYWRJbnQxNkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMiwgdGhpcy5sZW5ndGgpXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldCArIDFdIHwgKHRoaXNbb2Zmc2V0XSA8PCA4KVxuICByZXR1cm4gKHZhbCAmIDB4ODAwMCkgPyB2YWwgfCAweEZGRkYwMDAwIDogdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDMyTEUgPSBmdW5jdGlvbiByZWFkSW50MzJMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuXG4gIHJldHVybiAodGhpc1tvZmZzZXRdKSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOCkgfFxuICAgICh0aGlzW29mZnNldCArIDJdIDw8IDE2KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgM10gPDwgMjQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDMyQkUgPSBmdW5jdGlvbiByZWFkSW50MzJCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuXG4gIHJldHVybiAodGhpc1tvZmZzZXRdIDw8IDI0KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgMTYpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCA4KSB8XG4gICAgKHRoaXNbb2Zmc2V0ICsgM10pXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEZsb2F0TEUgPSBmdW5jdGlvbiByZWFkRmxvYXRMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgdHJ1ZSwgMjMsIDQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEZsb2F0QkUgPSBmdW5jdGlvbiByZWFkRmxvYXRCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgZmFsc2UsIDIzLCA0KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWREb3VibGVMRSA9IGZ1bmN0aW9uIHJlYWREb3VibGVMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDgsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgdHJ1ZSwgNTIsIDgpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUJFID0gZnVuY3Rpb24gcmVhZERvdWJsZUJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgOCwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCBmYWxzZSwgNTIsIDgpXG59XG5cbmZ1bmN0aW9uIGNoZWNrSW50IChidWYsIHZhbHVlLCBvZmZzZXQsIGV4dCwgbWF4LCBtaW4pIHtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYnVmKSkgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJidWZmZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyIGluc3RhbmNlJylcbiAgaWYgKHZhbHVlID4gbWF4IHx8IHZhbHVlIDwgbWluKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJ2YWx1ZVwiIGFyZ3VtZW50IGlzIG91dCBvZiBib3VuZHMnKVxuICBpZiAob2Zmc2V0ICsgZXh0ID4gYnVmLmxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50TEUgPSBmdW5jdGlvbiB3cml0ZVVJbnRMRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIHZhciBtYXhCeXRlcyA9IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKSAtIDFcbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBtYXhCeXRlcywgMClcbiAgfVxuXG4gIHZhciBtdWwgPSAxXG4gIHZhciBpID0gMFxuICB0aGlzW29mZnNldF0gPSB2YWx1ZSAmIDB4RkZcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB0aGlzW29mZnNldCArIGldID0gKHZhbHVlIC8gbXVsKSAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQgKyBieXRlTGVuZ3RoXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50QkUgPSBmdW5jdGlvbiB3cml0ZVVJbnRCRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCB8IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIHZhciBtYXhCeXRlcyA9IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKSAtIDFcbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBtYXhCeXRlcywgMClcbiAgfVxuXG4gIHZhciBpID0gYnl0ZUxlbmd0aCAtIDFcbiAgdmFyIG11bCA9IDFcbiAgdGhpc1tvZmZzZXQgKyBpXSA9IHZhbHVlICYgMHhGRlxuICB3aGlsZSAoLS1pID49IDAgJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB0aGlzW29mZnNldCArIGldID0gKHZhbHVlIC8gbXVsKSAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBvZmZzZXQgKyBieXRlTGVuZ3RoXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50OCA9IGZ1bmN0aW9uIHdyaXRlVUludDggKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMSwgMHhmZiwgMClcbiAgaWYgKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgdmFsdWUgPSBNYXRoLmZsb29yKHZhbHVlKVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgMVxufVxuXG5mdW5jdGlvbiBvYmplY3RXcml0ZVVJbnQxNiAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4pIHtcbiAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAweGZmZmYgKyB2YWx1ZSArIDFcbiAgZm9yICh2YXIgaSA9IDAsIGogPSBNYXRoLm1pbihidWYubGVuZ3RoIC0gb2Zmc2V0LCAyKTsgaSA8IGo7ICsraSkge1xuICAgIGJ1ZltvZmZzZXQgKyBpXSA9ICh2YWx1ZSAmICgweGZmIDw8ICg4ICogKGxpdHRsZUVuZGlhbiA/IGkgOiAxIC0gaSkpKSkgPj4+XG4gICAgICAobGl0dGxlRW5kaWFuID8gaSA6IDEgLSBpKSAqIDhcbiAgfVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDE2TEUgPSBmdW5jdGlvbiB3cml0ZVVJbnQxNkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDIsIDB4ZmZmZiwgMClcbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICB9IGVsc2Uge1xuICAgIG9iamVjdFdyaXRlVUludDE2KHRoaXMsIHZhbHVlLCBvZmZzZXQsIHRydWUpXG4gIH1cbiAgcmV0dXJuIG9mZnNldCArIDJcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQxNkJFID0gZnVuY3Rpb24gd3JpdGVVSW50MTZCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweGZmZmYsIDApXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gOClcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlICYgMHhmZilcbiAgfSBlbHNlIHtcbiAgICBvYmplY3RXcml0ZVVJbnQxNih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5mdW5jdGlvbiBvYmplY3RXcml0ZVVJbnQzMiAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4pIHtcbiAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAweGZmZmZmZmZmICsgdmFsdWUgKyAxXG4gIGZvciAodmFyIGkgPSAwLCBqID0gTWF0aC5taW4oYnVmLmxlbmd0aCAtIG9mZnNldCwgNCk7IGkgPCBqOyArK2kpIHtcbiAgICBidWZbb2Zmc2V0ICsgaV0gPSAodmFsdWUgPj4+IChsaXR0bGVFbmRpYW4gPyBpIDogMyAtIGkpICogOCkgJiAweGZmXG4gIH1cbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFID0gZnVuY3Rpb24gd3JpdGVVSW50MzJMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweGZmZmZmZmZmLCAwKVxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlID4+PiAyNClcbiAgICB0aGlzW29mZnNldCArIDJdID0gKHZhbHVlID4+PiAxNilcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0V3JpdGVVSW50MzIodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludDMyQkUgPSBmdW5jdGlvbiB3cml0ZVVJbnQzMkJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDQsIDB4ZmZmZmZmZmYsIDApXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gMjQpXG4gICAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gICAgdGhpc1tvZmZzZXQgKyAyXSA9ICh2YWx1ZSA+Pj4gOClcbiAgICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlICYgMHhmZilcbiAgfSBlbHNlIHtcbiAgICBvYmplY3RXcml0ZVVJbnQzMih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50TEUgPSBmdW5jdGlvbiB3cml0ZUludExFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICB2YXIgbGltaXQgPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aCAtIDEpXG5cbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBsaW1pdCAtIDEsIC1saW1pdClcbiAgfVxuXG4gIHZhciBpID0gMFxuICB2YXIgbXVsID0gMVxuICB2YXIgc3ViID0gMFxuICB0aGlzW29mZnNldF0gPSB2YWx1ZSAmIDB4RkZcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICBpZiAodmFsdWUgPCAwICYmIHN1YiA9PT0gMCAmJiB0aGlzW29mZnNldCArIGkgLSAxXSAhPT0gMCkge1xuICAgICAgc3ViID0gMVxuICAgIH1cbiAgICB0aGlzW29mZnNldCArIGldID0gKCh2YWx1ZSAvIG11bCkgPj4gMCkgLSBzdWIgJiAweEZGXG4gIH1cblxuICByZXR1cm4gb2Zmc2V0ICsgYnl0ZUxlbmd0aFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50QkUgPSBmdW5jdGlvbiB3cml0ZUludEJFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgfCAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICB2YXIgbGltaXQgPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aCAtIDEpXG5cbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBsaW1pdCAtIDEsIC1saW1pdClcbiAgfVxuXG4gIHZhciBpID0gYnl0ZUxlbmd0aCAtIDFcbiAgdmFyIG11bCA9IDFcbiAgdmFyIHN1YiA9IDBcbiAgdGhpc1tvZmZzZXQgKyBpXSA9IHZhbHVlICYgMHhGRlxuICB3aGlsZSAoLS1pID49IDAgJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICBpZiAodmFsdWUgPCAwICYmIHN1YiA9PT0gMCAmJiB0aGlzW29mZnNldCArIGkgKyAxXSAhPT0gMCkge1xuICAgICAgc3ViID0gMVxuICAgIH1cbiAgICB0aGlzW29mZnNldCArIGldID0gKCh2YWx1ZSAvIG11bCkgPj4gMCkgLSBzdWIgJiAweEZGXG4gIH1cblxuICByZXR1cm4gb2Zmc2V0ICsgYnl0ZUxlbmd0aFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50OCA9IGZ1bmN0aW9uIHdyaXRlSW50OCAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAxLCAweDdmLCAtMHg4MClcbiAgaWYgKCFCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkgdmFsdWUgPSBNYXRoLmZsb29yKHZhbHVlKVxuICBpZiAodmFsdWUgPCAwKSB2YWx1ZSA9IDB4ZmYgKyB2YWx1ZSArIDFcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgcmV0dXJuIG9mZnNldCArIDFcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDE2TEUgPSBmdW5jdGlvbiB3cml0ZUludDE2TEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMiwgMHg3ZmZmLCAtMHg4MDAwKVxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDgpXG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0V3JpdGVVSW50MTYodGhpcywgdmFsdWUsIG9mZnNldCwgdHJ1ZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MTZCRSA9IGZ1bmN0aW9uIHdyaXRlSW50MTZCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweDdmZmYsIC0weDgwMDApXG4gIGlmIChCdWZmZXIuVFlQRURfQVJSQVlfU1VQUE9SVCkge1xuICAgIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gOClcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlICYgMHhmZilcbiAgfSBlbHNlIHtcbiAgICBvYmplY3RXcml0ZVVJbnQxNih0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBmYWxzZSlcbiAgfVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MzJMRSA9IGZ1bmN0aW9uIHdyaXRlSW50MzJMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0IHwgMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweDdmZmZmZmZmLCAtMHg4MDAwMDAwMClcbiAgaWYgKEJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICAgIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDE2KVxuICAgIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgPj4+IDI0KVxuICB9IGVsc2Uge1xuICAgIG9iamVjdFdyaXRlVUludDMyKHRoaXMsIHZhbHVlLCBvZmZzZXQsIHRydWUpXG4gIH1cbiAgcmV0dXJuIG9mZnNldCArIDRcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDMyQkUgPSBmdW5jdGlvbiB3cml0ZUludDMyQkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCB8IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgNCwgMHg3ZmZmZmZmZiwgLTB4ODAwMDAwMDApXG4gIGlmICh2YWx1ZSA8IDApIHZhbHVlID0gMHhmZmZmZmZmZiArIHZhbHVlICsgMVxuICBpZiAoQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQpIHtcbiAgICB0aGlzW29mZnNldF0gPSAodmFsdWUgPj4+IDI0KVxuICAgIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDE2KVxuICAgIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDgpXG4gICAgdGhpc1tvZmZzZXQgKyAzXSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0V3JpdGVVSW50MzIodGhpcywgdmFsdWUsIG9mZnNldCwgZmFsc2UpXG4gIH1cbiAgcmV0dXJuIG9mZnNldCArIDRcbn1cblxuZnVuY3Rpb24gY2hlY2tJRUVFNzU0IChidWYsIHZhbHVlLCBvZmZzZXQsIGV4dCwgbWF4LCBtaW4pIHtcbiAgaWYgKG9mZnNldCArIGV4dCA+IGJ1Zi5sZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbmRleCBvdXQgb2YgcmFuZ2UnKVxuICBpZiAob2Zmc2V0IDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG59XG5cbmZ1bmN0aW9uIHdyaXRlRmxvYXQgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgY2hlY2tJRUVFNzU0KGJ1ZiwgdmFsdWUsIG9mZnNldCwgNCwgMy40MDI4MjM0NjYzODUyODg2ZSszOCwgLTMuNDAyODIzNDY2Mzg1Mjg4NmUrMzgpXG4gIH1cbiAgaWVlZTc1NC53cml0ZShidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbiwgMjMsIDQpXG4gIHJldHVybiBvZmZzZXQgKyA0XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVGbG9hdExFID0gZnVuY3Rpb24gd3JpdGVGbG9hdExFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVGbG9hdCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCB0cnVlLCBub0Fzc2VydClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUZsb2F0QkUgPSBmdW5jdGlvbiB3cml0ZUZsb2F0QkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHJldHVybiB3cml0ZUZsb2F0KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGZhbHNlLCBub0Fzc2VydClcbn1cblxuZnVuY3Rpb24gd3JpdGVEb3VibGUgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCBub0Fzc2VydCkge1xuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgY2hlY2tJRUVFNzU0KGJ1ZiwgdmFsdWUsIG9mZnNldCwgOCwgMS43OTc2OTMxMzQ4NjIzMTU3RSszMDgsIC0xLjc5NzY5MzEzNDg2MjMxNTdFKzMwOClcbiAgfVxuICBpZWVlNzU0LndyaXRlKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCA1MiwgOClcbiAgcmV0dXJuIG9mZnNldCArIDhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZURvdWJsZUxFID0gZnVuY3Rpb24gd3JpdGVEb3VibGVMRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgcmV0dXJuIHdyaXRlRG91YmxlKHRoaXMsIHZhbHVlLCBvZmZzZXQsIHRydWUsIG5vQXNzZXJ0KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlRG91YmxlQkUgPSBmdW5jdGlvbiB3cml0ZURvdWJsZUJFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVEb3VibGUodGhpcywgdmFsdWUsIG9mZnNldCwgZmFsc2UsIG5vQXNzZXJ0KVxufVxuXG4vLyBjb3B5KHRhcmdldEJ1ZmZlciwgdGFyZ2V0U3RhcnQ9MCwgc291cmNlU3RhcnQ9MCwgc291cmNlRW5kPWJ1ZmZlci5sZW5ndGgpXG5CdWZmZXIucHJvdG90eXBlLmNvcHkgPSBmdW5jdGlvbiBjb3B5ICh0YXJnZXQsIHRhcmdldFN0YXJ0LCBzdGFydCwgZW5kKSB7XG4gIGlmICghc3RhcnQpIHN0YXJ0ID0gMFxuICBpZiAoIWVuZCAmJiBlbmQgIT09IDApIGVuZCA9IHRoaXMubGVuZ3RoXG4gIGlmICh0YXJnZXRTdGFydCA+PSB0YXJnZXQubGVuZ3RoKSB0YXJnZXRTdGFydCA9IHRhcmdldC5sZW5ndGhcbiAgaWYgKCF0YXJnZXRTdGFydCkgdGFyZ2V0U3RhcnQgPSAwXG4gIGlmIChlbmQgPiAwICYmIGVuZCA8IHN0YXJ0KSBlbmQgPSBzdGFydFxuXG4gIC8vIENvcHkgMCBieXRlczsgd2UncmUgZG9uZVxuICBpZiAoZW5kID09PSBzdGFydCkgcmV0dXJuIDBcbiAgaWYgKHRhcmdldC5sZW5ndGggPT09IDAgfHwgdGhpcy5sZW5ndGggPT09IDApIHJldHVybiAwXG5cbiAgLy8gRmF0YWwgZXJyb3IgY29uZGl0aW9uc1xuICBpZiAodGFyZ2V0U3RhcnQgPCAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ3RhcmdldFN0YXJ0IG91dCBvZiBib3VuZHMnKVxuICB9XG4gIGlmIChzdGFydCA8IDAgfHwgc3RhcnQgPj0gdGhpcy5sZW5ndGgpIHRocm93IG5ldyBSYW5nZUVycm9yKCdzb3VyY2VTdGFydCBvdXQgb2YgYm91bmRzJylcbiAgaWYgKGVuZCA8IDApIHRocm93IG5ldyBSYW5nZUVycm9yKCdzb3VyY2VFbmQgb3V0IG9mIGJvdW5kcycpXG5cbiAgLy8gQXJlIHdlIG9vYj9cbiAgaWYgKGVuZCA+IHRoaXMubGVuZ3RoKSBlbmQgPSB0aGlzLmxlbmd0aFxuICBpZiAodGFyZ2V0Lmxlbmd0aCAtIHRhcmdldFN0YXJ0IDwgZW5kIC0gc3RhcnQpIHtcbiAgICBlbmQgPSB0YXJnZXQubGVuZ3RoIC0gdGFyZ2V0U3RhcnQgKyBzdGFydFxuICB9XG5cbiAgdmFyIGxlbiA9IGVuZCAtIHN0YXJ0XG4gIHZhciBpXG5cbiAgaWYgKHRoaXMgPT09IHRhcmdldCAmJiBzdGFydCA8IHRhcmdldFN0YXJ0ICYmIHRhcmdldFN0YXJ0IDwgZW5kKSB7XG4gICAgLy8gZGVzY2VuZGluZyBjb3B5IGZyb20gZW5kXG4gICAgZm9yIChpID0gbGVuIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgIHRhcmdldFtpICsgdGFyZ2V0U3RhcnRdID0gdGhpc1tpICsgc3RhcnRdXG4gICAgfVxuICB9IGVsc2UgaWYgKGxlbiA8IDEwMDAgfHwgIUJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUKSB7XG4gICAgLy8gYXNjZW5kaW5nIGNvcHkgZnJvbSBzdGFydFxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgICAgdGFyZ2V0W2kgKyB0YXJnZXRTdGFydF0gPSB0aGlzW2kgKyBzdGFydF1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgVWludDhBcnJheS5wcm90b3R5cGUuc2V0LmNhbGwoXG4gICAgICB0YXJnZXQsXG4gICAgICB0aGlzLnN1YmFycmF5KHN0YXJ0LCBzdGFydCArIGxlbiksXG4gICAgICB0YXJnZXRTdGFydFxuICAgIClcbiAgfVxuXG4gIHJldHVybiBsZW5cbn1cblxuLy8gVXNhZ2U6XG4vLyAgICBidWZmZXIuZmlsbChudW1iZXJbLCBvZmZzZXRbLCBlbmRdXSlcbi8vICAgIGJ1ZmZlci5maWxsKGJ1ZmZlclssIG9mZnNldFssIGVuZF1dKVxuLy8gICAgYnVmZmVyLmZpbGwoc3RyaW5nWywgb2Zmc2V0WywgZW5kXV1bLCBlbmNvZGluZ10pXG5CdWZmZXIucHJvdG90eXBlLmZpbGwgPSBmdW5jdGlvbiBmaWxsICh2YWwsIHN0YXJ0LCBlbmQsIGVuY29kaW5nKSB7XG4gIC8vIEhhbmRsZSBzdHJpbmcgY2FzZXM6XG4gIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJykge1xuICAgIGlmICh0eXBlb2Ygc3RhcnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlbmNvZGluZyA9IHN0YXJ0XG4gICAgICBzdGFydCA9IDBcbiAgICAgIGVuZCA9IHRoaXMubGVuZ3RoXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZW5kID09PSAnc3RyaW5nJykge1xuICAgICAgZW5jb2RpbmcgPSBlbmRcbiAgICAgIGVuZCA9IHRoaXMubGVuZ3RoXG4gICAgfVxuICAgIGlmICh2YWwubGVuZ3RoID09PSAxKSB7XG4gICAgICB2YXIgY29kZSA9IHZhbC5jaGFyQ29kZUF0KDApXG4gICAgICBpZiAoY29kZSA8IDI1Nikge1xuICAgICAgICB2YWwgPSBjb2RlXG4gICAgICB9XG4gICAgfVxuICAgIGlmIChlbmNvZGluZyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBlbmNvZGluZyAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2VuY29kaW5nIG11c3QgYmUgYSBzdHJpbmcnKVxuICAgIH1cbiAgICBpZiAodHlwZW9mIGVuY29kaW5nID09PSAnc3RyaW5nJyAmJiAhQnVmZmVyLmlzRW5jb2RpbmcoZW5jb2RpbmcpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3duIGVuY29kaW5nOiAnICsgZW5jb2RpbmcpXG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgdmFsID0gdmFsICYgMjU1XG4gIH1cblxuICAvLyBJbnZhbGlkIHJhbmdlcyBhcmUgbm90IHNldCB0byBhIGRlZmF1bHQsIHNvIGNhbiByYW5nZSBjaGVjayBlYXJseS5cbiAgaWYgKHN0YXJ0IDwgMCB8fCB0aGlzLmxlbmd0aCA8IHN0YXJ0IHx8IHRoaXMubGVuZ3RoIDwgZW5kKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ091dCBvZiByYW5nZSBpbmRleCcpXG4gIH1cblxuICBpZiAoZW5kIDw9IHN0YXJ0KSB7XG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIHN0YXJ0ID0gc3RhcnQgPj4+IDBcbiAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyB0aGlzLmxlbmd0aCA6IGVuZCA+Pj4gMFxuXG4gIGlmICghdmFsKSB2YWwgPSAwXG5cbiAgdmFyIGlcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgZm9yIChpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgICAgdGhpc1tpXSA9IHZhbFxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgYnl0ZXMgPSBCdWZmZXIuaXNCdWZmZXIodmFsKVxuICAgICAgPyB2YWxcbiAgICAgIDogdXRmOFRvQnl0ZXMobmV3IEJ1ZmZlcih2YWwsIGVuY29kaW5nKS50b1N0cmluZygpKVxuICAgIHZhciBsZW4gPSBieXRlcy5sZW5ndGhcbiAgICBmb3IgKGkgPSAwOyBpIDwgZW5kIC0gc3RhcnQ7ICsraSkge1xuICAgICAgdGhpc1tpICsgc3RhcnRdID0gYnl0ZXNbaSAlIGxlbl1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpc1xufVxuXG4vLyBIRUxQRVIgRlVOQ1RJT05TXG4vLyA9PT09PT09PT09PT09PT09XG5cbnZhciBJTlZBTElEX0JBU0U2NF9SRSA9IC9bXitcXC8wLTlBLVphLXotX10vZ1xuXG5mdW5jdGlvbiBiYXNlNjRjbGVhbiAoc3RyKSB7XG4gIC8vIE5vZGUgc3RyaXBzIG91dCBpbnZhbGlkIGNoYXJhY3RlcnMgbGlrZSBcXG4gYW5kIFxcdCBmcm9tIHRoZSBzdHJpbmcsIGJhc2U2NC1qcyBkb2VzIG5vdFxuICBzdHIgPSBzdHJpbmd0cmltKHN0cikucmVwbGFjZShJTlZBTElEX0JBU0U2NF9SRSwgJycpXG4gIC8vIE5vZGUgY29udmVydHMgc3RyaW5ncyB3aXRoIGxlbmd0aCA8IDIgdG8gJydcbiAgaWYgKHN0ci5sZW5ndGggPCAyKSByZXR1cm4gJydcbiAgLy8gTm9kZSBhbGxvd3MgZm9yIG5vbi1wYWRkZWQgYmFzZTY0IHN0cmluZ3MgKG1pc3NpbmcgdHJhaWxpbmcgPT09KSwgYmFzZTY0LWpzIGRvZXMgbm90XG4gIHdoaWxlIChzdHIubGVuZ3RoICUgNCAhPT0gMCkge1xuICAgIHN0ciA9IHN0ciArICc9J1xuICB9XG4gIHJldHVybiBzdHJcbn1cblxuZnVuY3Rpb24gc3RyaW5ndHJpbSAoc3RyKSB7XG4gIGlmIChzdHIudHJpbSkgcmV0dXJuIHN0ci50cmltKClcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCAnJylcbn1cblxuZnVuY3Rpb24gdG9IZXggKG4pIHtcbiAgaWYgKG4gPCAxNikgcmV0dXJuICcwJyArIG4udG9TdHJpbmcoMTYpXG4gIHJldHVybiBuLnRvU3RyaW5nKDE2KVxufVxuXG5mdW5jdGlvbiB1dGY4VG9CeXRlcyAoc3RyaW5nLCB1bml0cykge1xuICB1bml0cyA9IHVuaXRzIHx8IEluZmluaXR5XG4gIHZhciBjb2RlUG9pbnRcbiAgdmFyIGxlbmd0aCA9IHN0cmluZy5sZW5ndGhcbiAgdmFyIGxlYWRTdXJyb2dhdGUgPSBudWxsXG4gIHZhciBieXRlcyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIGNvZGVQb2ludCA9IHN0cmluZy5jaGFyQ29kZUF0KGkpXG5cbiAgICAvLyBpcyBzdXJyb2dhdGUgY29tcG9uZW50XG4gICAgaWYgKGNvZGVQb2ludCA+IDB4RDdGRiAmJiBjb2RlUG9pbnQgPCAweEUwMDApIHtcbiAgICAgIC8vIGxhc3QgY2hhciB3YXMgYSBsZWFkXG4gICAgICBpZiAoIWxlYWRTdXJyb2dhdGUpIHtcbiAgICAgICAgLy8gbm8gbGVhZCB5ZXRcbiAgICAgICAgaWYgKGNvZGVQb2ludCA+IDB4REJGRikge1xuICAgICAgICAgIC8vIHVuZXhwZWN0ZWQgdHJhaWxcbiAgICAgICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRClcbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2UgaWYgKGkgKyAxID09PSBsZW5ndGgpIHtcbiAgICAgICAgICAvLyB1bnBhaXJlZCBsZWFkXG4gICAgICAgICAgaWYgKCh1bml0cyAtPSAzKSA+IC0xKSBieXRlcy5wdXNoKDB4RUYsIDB4QkYsIDB4QkQpXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHZhbGlkIGxlYWRcbiAgICAgICAgbGVhZFN1cnJvZ2F0ZSA9IGNvZGVQb2ludFxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIC8vIDIgbGVhZHMgaW4gYSByb3dcbiAgICAgIGlmIChjb2RlUG9pbnQgPCAweERDMDApIHtcbiAgICAgICAgaWYgKCh1bml0cyAtPSAzKSA+IC0xKSBieXRlcy5wdXNoKDB4RUYsIDB4QkYsIDB4QkQpXG4gICAgICAgIGxlYWRTdXJyb2dhdGUgPSBjb2RlUG9pbnRcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgLy8gdmFsaWQgc3Vycm9nYXRlIHBhaXJcbiAgICAgIGNvZGVQb2ludCA9IChsZWFkU3Vycm9nYXRlIC0gMHhEODAwIDw8IDEwIHwgY29kZVBvaW50IC0gMHhEQzAwKSArIDB4MTAwMDBcbiAgICB9IGVsc2UgaWYgKGxlYWRTdXJyb2dhdGUpIHtcbiAgICAgIC8vIHZhbGlkIGJtcCBjaGFyLCBidXQgbGFzdCBjaGFyIHdhcyBhIGxlYWRcbiAgICAgIGlmICgodW5pdHMgLT0gMykgPiAtMSkgYnl0ZXMucHVzaCgweEVGLCAweEJGLCAweEJEKVxuICAgIH1cblxuICAgIGxlYWRTdXJyb2dhdGUgPSBudWxsXG5cbiAgICAvLyBlbmNvZGUgdXRmOFxuICAgIGlmIChjb2RlUG9pbnQgPCAweDgwKSB7XG4gICAgICBpZiAoKHVuaXRzIC09IDEpIDwgMCkgYnJlYWtcbiAgICAgIGJ5dGVzLnB1c2goY29kZVBvaW50KVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50IDwgMHg4MDApIHtcbiAgICAgIGlmICgodW5pdHMgLT0gMikgPCAwKSBicmVha1xuICAgICAgYnl0ZXMucHVzaChcbiAgICAgICAgY29kZVBvaW50ID4+IDB4NiB8IDB4QzAsXG4gICAgICAgIGNvZGVQb2ludCAmIDB4M0YgfCAweDgwXG4gICAgICApXG4gICAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPCAweDEwMDAwKSB7XG4gICAgICBpZiAoKHVuaXRzIC09IDMpIDwgMCkgYnJlYWtcbiAgICAgIGJ5dGVzLnB1c2goXG4gICAgICAgIGNvZGVQb2ludCA+PiAweEMgfCAweEUwLFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHg2ICYgMHgzRiB8IDB4ODAsXG4gICAgICAgIGNvZGVQb2ludCAmIDB4M0YgfCAweDgwXG4gICAgICApXG4gICAgfSBlbHNlIGlmIChjb2RlUG9pbnQgPCAweDExMDAwMCkge1xuICAgICAgaWYgKCh1bml0cyAtPSA0KSA8IDApIGJyZWFrXG4gICAgICBieXRlcy5wdXNoKFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHgxMiB8IDB4RjAsXG4gICAgICAgIGNvZGVQb2ludCA+PiAweEMgJiAweDNGIHwgMHg4MCxcbiAgICAgICAgY29kZVBvaW50ID4+IDB4NiAmIDB4M0YgfCAweDgwLFxuICAgICAgICBjb2RlUG9pbnQgJiAweDNGIHwgMHg4MFxuICAgICAgKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY29kZSBwb2ludCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJ5dGVzXG59XG5cbmZ1bmN0aW9uIGFzY2lpVG9CeXRlcyAoc3RyKSB7XG4gIHZhciBieXRlQXJyYXkgPSBbXVxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIC8vIE5vZGUncyBjb2RlIHNlZW1zIHRvIGJlIGRvaW5nIHRoaXMgYW5kIG5vdCAmIDB4N0YuLlxuICAgIGJ5dGVBcnJheS5wdXNoKHN0ci5jaGFyQ29kZUF0KGkpICYgMHhGRilcbiAgfVxuICByZXR1cm4gYnl0ZUFycmF5XG59XG5cbmZ1bmN0aW9uIHV0ZjE2bGVUb0J5dGVzIChzdHIsIHVuaXRzKSB7XG4gIHZhciBjLCBoaSwgbG9cbiAgdmFyIGJ5dGVBcnJheSA9IFtdXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKCh1bml0cyAtPSAyKSA8IDApIGJyZWFrXG5cbiAgICBjID0gc3RyLmNoYXJDb2RlQXQoaSlcbiAgICBoaSA9IGMgPj4gOFxuICAgIGxvID0gYyAlIDI1NlxuICAgIGJ5dGVBcnJheS5wdXNoKGxvKVxuICAgIGJ5dGVBcnJheS5wdXNoKGhpKVxuICB9XG5cbiAgcmV0dXJuIGJ5dGVBcnJheVxufVxuXG5mdW5jdGlvbiBiYXNlNjRUb0J5dGVzIChzdHIpIHtcbiAgcmV0dXJuIGJhc2U2NC50b0J5dGVBcnJheShiYXNlNjRjbGVhbihzdHIpKVxufVxuXG5mdW5jdGlvbiBibGl0QnVmZmVyIChzcmMsIGRzdCwgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgIGlmICgoaSArIG9mZnNldCA+PSBkc3QubGVuZ3RoKSB8fCAoaSA+PSBzcmMubGVuZ3RoKSkgYnJlYWtcbiAgICBkc3RbaSArIG9mZnNldF0gPSBzcmNbaV1cbiAgfVxuICByZXR1cm4gaVxufVxuXG5mdW5jdGlvbiBpc25hbiAodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IHZhbCAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNlbGYtY29tcGFyZVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL2J1ZmZlci9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gYSBkdXBsZXggc3RyZWFtIGlzIGp1c3QgYSBzdHJlYW0gdGhhdCBpcyBib3RoIHJlYWRhYmxlIGFuZCB3cml0YWJsZS5cbi8vIFNpbmNlIEpTIGRvZXNuJ3QgaGF2ZSBtdWx0aXBsZSBwcm90b3R5cGFsIGluaGVyaXRhbmNlLCB0aGlzIGNsYXNzXG4vLyBwcm90b3R5cGFsbHkgaW5oZXJpdHMgZnJvbSBSZWFkYWJsZSwgYW5kIHRoZW4gcGFyYXNpdGljYWxseSBmcm9tXG4vLyBXcml0YWJsZS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcHJvY2Vzc05leHRUaWNrID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBrZXlzLnB1c2goa2V5KTtcbiAgfXJldHVybiBrZXlzO1xufTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IER1cGxleDtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7XG51dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG52YXIgUmVhZGFibGUgPSByZXF1aXJlKCcuL19zdHJlYW1fcmVhZGFibGUnKTtcbnZhciBXcml0YWJsZSA9IHJlcXVpcmUoJy4vX3N0cmVhbV93cml0YWJsZScpO1xuXG51dGlsLmluaGVyaXRzKER1cGxleCwgUmVhZGFibGUpO1xuXG52YXIga2V5cyA9IG9iamVjdEtleXMoV3JpdGFibGUucHJvdG90eXBlKTtcbmZvciAodmFyIHYgPSAwOyB2IDwga2V5cy5sZW5ndGg7IHYrKykge1xuICB2YXIgbWV0aG9kID0ga2V5c1t2XTtcbiAgaWYgKCFEdXBsZXgucHJvdG90eXBlW21ldGhvZF0pIER1cGxleC5wcm90b3R5cGVbbWV0aG9kXSA9IFdyaXRhYmxlLnByb3RvdHlwZVttZXRob2RdO1xufVxuXG5mdW5jdGlvbiBEdXBsZXgob3B0aW9ucykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgRHVwbGV4KSkgcmV0dXJuIG5ldyBEdXBsZXgob3B0aW9ucyk7XG5cbiAgUmVhZGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgV3JpdGFibGUuY2FsbCh0aGlzLCBvcHRpb25zKTtcblxuICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLnJlYWRhYmxlID09PSBmYWxzZSkgdGhpcy5yZWFkYWJsZSA9IGZhbHNlO1xuXG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMud3JpdGFibGUgPT09IGZhbHNlKSB0aGlzLndyaXRhYmxlID0gZmFsc2U7XG5cbiAgdGhpcy5hbGxvd0hhbGZPcGVuID0gdHJ1ZTtcbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5hbGxvd0hhbGZPcGVuID09PSBmYWxzZSkgdGhpcy5hbGxvd0hhbGZPcGVuID0gZmFsc2U7XG5cbiAgdGhpcy5vbmNlKCdlbmQnLCBvbmVuZCk7XG59XG5cbi8vIHRoZSBuby1oYWxmLW9wZW4gZW5mb3JjZXJcbmZ1bmN0aW9uIG9uZW5kKCkge1xuICAvLyBpZiB3ZSBhbGxvdyBoYWxmLW9wZW4gc3RhdGUsIG9yIGlmIHRoZSB3cml0YWJsZSBzaWRlIGVuZGVkLFxuICAvLyB0aGVuIHdlJ3JlIG9rLlxuICBpZiAodGhpcy5hbGxvd0hhbGZPcGVuIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kZWQpIHJldHVybjtcblxuICAvLyBubyBtb3JlIGRhdGEgY2FuIGJlIHdyaXR0ZW4uXG4gIC8vIEJ1dCBhbGxvdyBtb3JlIHdyaXRlcyB0byBoYXBwZW4gaW4gdGhpcyB0aWNrLlxuICBwcm9jZXNzTmV4dFRpY2sob25FbmROVCwgdGhpcyk7XG59XG5cbmZ1bmN0aW9uIG9uRW5kTlQoc2VsZikge1xuICBzZWxmLmVuZCgpO1xufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSwgJ2Rlc3Ryb3llZCcsIHtcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCB8fCB0aGlzLl93cml0YWJsZVN0YXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkICYmIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIC8vIHdlIGlnbm9yZSB0aGUgdmFsdWUgaWYgdGhlIHN0cmVhbVxuICAgIC8vIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcbiAgICBpZiAodGhpcy5fcmVhZGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuX3dyaXRhYmxlU3RhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIGJhY2t3YXJkIGNvbXBhdGliaWxpdHksIHRoZSB1c2VyIGlzIGV4cGxpY2l0bHlcbiAgICAvLyBtYW5hZ2luZyBkZXN0cm95ZWRcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHZhbHVlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gIH1cbn0pO1xuXG5EdXBsZXgucHJvdG90eXBlLl9kZXN0cm95ID0gZnVuY3Rpb24gKGVyciwgY2IpIHtcbiAgdGhpcy5wdXNoKG51bGwpO1xuICB0aGlzLmVuZCgpO1xuXG4gIHByb2Nlc3NOZXh0VGljayhjYiwgZXJyKTtcbn07XG5cbmZ1bmN0aW9uIGZvckVhY2goeHMsIGYpIHtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSB4cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBmKHhzW2ldLCBpKTtcbiAgfVxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9kdXBsZXguanNcbi8vIG1vZHVsZSBpZCA9IDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbi8vIE5PVEU6IFRoZXNlIHR5cGUgY2hlY2tpbmcgZnVuY3Rpb25zIGludGVudGlvbmFsbHkgZG9uJ3QgdXNlIGBpbnN0YW5jZW9mYFxuLy8gYmVjYXVzZSBpdCBpcyBmcmFnaWxlIGFuZCBjYW4gYmUgZWFzaWx5IGZha2VkIHdpdGggYE9iamVjdC5jcmVhdGUoKWAuXG5cbmZ1bmN0aW9uIGlzQXJyYXkoYXJnKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXJnKTtcbiAgfVxuICByZXR1cm4gb2JqZWN0VG9TdHJpbmcoYXJnKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn1cbmV4cG9ydHMuaXNBcnJheSA9IGlzQXJyYXk7XG5cbmZ1bmN0aW9uIGlzQm9vbGVhbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJztcbn1cbmV4cG9ydHMuaXNCb29sZWFuID0gaXNCb29sZWFuO1xuXG5mdW5jdGlvbiBpc051bGwoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IG51bGw7XG59XG5leHBvcnRzLmlzTnVsbCA9IGlzTnVsbDtcblxuZnVuY3Rpb24gaXNOdWxsT3JVbmRlZmluZWQoYXJnKSB7XG4gIHJldHVybiBhcmcgPT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNOdWxsT3JVbmRlZmluZWQgPSBpc051bGxPclVuZGVmaW5lZDtcblxuZnVuY3Rpb24gaXNOdW1iZXIoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnbnVtYmVyJztcbn1cbmV4cG9ydHMuaXNOdW1iZXIgPSBpc051bWJlcjtcblxuZnVuY3Rpb24gaXNTdHJpbmcoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnc3RyaW5nJztcbn1cbmV4cG9ydHMuaXNTdHJpbmcgPSBpc1N0cmluZztcblxuZnVuY3Rpb24gaXNTeW1ib2woYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnc3ltYm9sJztcbn1cbmV4cG9ydHMuaXNTeW1ib2wgPSBpc1N5bWJvbDtcblxuZnVuY3Rpb24gaXNVbmRlZmluZWQoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IHZvaWQgMDtcbn1cbmV4cG9ydHMuaXNVbmRlZmluZWQgPSBpc1VuZGVmaW5lZDtcblxuZnVuY3Rpb24gaXNSZWdFeHAocmUpIHtcbiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nKHJlKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7XG59XG5leHBvcnRzLmlzUmVnRXhwID0gaXNSZWdFeHA7XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xufVxuZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0O1xuXG5mdW5jdGlvbiBpc0RhdGUoZCkge1xuICByZXR1cm4gb2JqZWN0VG9TdHJpbmcoZCkgPT09ICdbb2JqZWN0IERhdGVdJztcbn1cbmV4cG9ydHMuaXNEYXRlID0gaXNEYXRlO1xuXG5mdW5jdGlvbiBpc0Vycm9yKGUpIHtcbiAgcmV0dXJuIChvYmplY3RUb1N0cmluZyhlKSA9PT0gJ1tvYmplY3QgRXJyb3JdJyB8fCBlIGluc3RhbmNlb2YgRXJyb3IpO1xufVxuZXhwb3J0cy5pc0Vycm9yID0gaXNFcnJvcjtcblxuZnVuY3Rpb24gaXNGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XG59XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuXG5mdW5jdGlvbiBpc1ByaW1pdGl2ZShhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gbnVsbCB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnbnVtYmVyJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnIHx8ICAvLyBFUzYgc3ltYm9sXG4gICAgICAgICB0eXBlb2YgYXJnID09PSAndW5kZWZpbmVkJztcbn1cbmV4cG9ydHMuaXNQcmltaXRpdmUgPSBpc1ByaW1pdGl2ZTtcblxuZXhwb3J0cy5pc0J1ZmZlciA9IEJ1ZmZlci5pc0J1ZmZlcjtcblxuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcobykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY29yZS11dGlsLWlzL2xpYi91dGlsLmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuaWYgKCFwcm9jZXNzLnZlcnNpb24gfHxcbiAgICBwcm9jZXNzLnZlcnNpb24uaW5kZXhPZigndjAuJykgPT09IDAgfHxcbiAgICBwcm9jZXNzLnZlcnNpb24uaW5kZXhPZigndjEuJykgPT09IDAgJiYgcHJvY2Vzcy52ZXJzaW9uLmluZGV4T2YoJ3YxLjguJykgIT09IDApIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBuZXh0VGljaztcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcHJvY2Vzcy5uZXh0VGljaztcbn1cblxuZnVuY3Rpb24gbmV4dFRpY2soZm4sIGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wiY2FsbGJhY2tcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgfVxuICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgdmFyIGFyZ3MsIGk7XG4gIHN3aXRjaCAobGVuKSB7XG4gIGNhc2UgMDpcbiAgY2FzZSAxOlxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZuKTtcbiAgY2FzZSAyOlxuICAgIHJldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uIGFmdGVyVGlja09uZSgpIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgYXJnMSk7XG4gICAgfSk7XG4gIGNhc2UgMzpcbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2tUd28oKSB7XG4gICAgICBmbi5jYWxsKG51bGwsIGFyZzEsIGFyZzIpO1xuICAgIH0pO1xuICBjYXNlIDQ6XG4gICAgcmV0dXJuIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gYWZ0ZXJUaWNrVGhyZWUoKSB7XG4gICAgICBmbi5jYWxsKG51bGwsIGFyZzEsIGFyZzIsIGFyZzMpO1xuICAgIH0pO1xuICBkZWZhdWx0OlxuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuIC0gMSk7XG4gICAgaSA9IDA7XG4gICAgd2hpbGUgKGkgPCBhcmdzLmxlbmd0aCkge1xuICAgICAgYXJnc1tpKytdID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiBhZnRlclRpY2soKSB7XG4gICAgICBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy1uZXh0aWNrLWFyZ3MvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwidmFyIENsaWVudFJlcXVlc3QgPSByZXF1aXJlKCcuL2xpYi9yZXF1ZXN0JylcbnZhciBleHRlbmQgPSByZXF1aXJlKCd4dGVuZCcpXG52YXIgc3RhdHVzQ29kZXMgPSByZXF1aXJlKCdidWlsdGluLXN0YXR1cy1jb2RlcycpXG52YXIgdXJsID0gcmVxdWlyZSgndXJsJylcblxudmFyIGh0dHAgPSBleHBvcnRzXG5cbmh0dHAucmVxdWVzdCA9IGZ1bmN0aW9uIChvcHRzLCBjYikge1xuXHRpZiAodHlwZW9mIG9wdHMgPT09ICdzdHJpbmcnKVxuXHRcdG9wdHMgPSB1cmwucGFyc2Uob3B0cylcblx0ZWxzZVxuXHRcdG9wdHMgPSBleHRlbmQob3B0cylcblxuXHQvLyBOb3JtYWxseSwgdGhlIHBhZ2UgaXMgbG9hZGVkIGZyb20gaHR0cCBvciBodHRwcywgc28gbm90IHNwZWNpZnlpbmcgYSBwcm90b2NvbFxuXHQvLyB3aWxsIHJlc3VsdCBpbiBhICh2YWxpZCkgcHJvdG9jb2wtcmVsYXRpdmUgdXJsLiBIb3dldmVyLCB0aGlzIHdvbid0IHdvcmsgaWZcblx0Ly8gdGhlIHByb3RvY29sIGlzIHNvbWV0aGluZyBlbHNlLCBsaWtlICdmaWxlOidcblx0dmFyIGRlZmF1bHRQcm90b2NvbCA9IGdsb2JhbC5sb2NhdGlvbi5wcm90b2NvbC5zZWFyY2goL15odHRwcz86JC8pID09PSAtMSA/ICdodHRwOicgOiAnJ1xuXG5cdHZhciBwcm90b2NvbCA9IG9wdHMucHJvdG9jb2wgfHwgZGVmYXVsdFByb3RvY29sXG5cdHZhciBob3N0ID0gb3B0cy5ob3N0bmFtZSB8fCBvcHRzLmhvc3Rcblx0dmFyIHBvcnQgPSBvcHRzLnBvcnRcblx0dmFyIHBhdGggPSBvcHRzLnBhdGggfHwgJy8nXG5cblx0Ly8gTmVjZXNzYXJ5IGZvciBJUHY2IGFkZHJlc3Nlc1xuXHRpZiAoaG9zdCAmJiBob3N0LmluZGV4T2YoJzonKSAhPT0gLTEpXG5cdFx0aG9zdCA9ICdbJyArIGhvc3QgKyAnXSdcblxuXHQvLyBUaGlzIG1heSBiZSBhIHJlbGF0aXZlIHVybC4gVGhlIGJyb3dzZXIgc2hvdWxkIGFsd2F5cyBiZSBhYmxlIHRvIGludGVycHJldCBpdCBjb3JyZWN0bHkuXG5cdG9wdHMudXJsID0gKGhvc3QgPyAocHJvdG9jb2wgKyAnLy8nICsgaG9zdCkgOiAnJykgKyAocG9ydCA/ICc6JyArIHBvcnQgOiAnJykgKyBwYXRoXG5cdG9wdHMubWV0aG9kID0gKG9wdHMubWV0aG9kIHx8ICdHRVQnKS50b1VwcGVyQ2FzZSgpXG5cdG9wdHMuaGVhZGVycyA9IG9wdHMuaGVhZGVycyB8fCB7fVxuXG5cdC8vIEFsc28gdmFsaWQgb3B0cy5hdXRoLCBvcHRzLm1vZGVcblxuXHR2YXIgcmVxID0gbmV3IENsaWVudFJlcXVlc3Qob3B0cylcblx0aWYgKGNiKVxuXHRcdHJlcS5vbigncmVzcG9uc2UnLCBjYilcblx0cmV0dXJuIHJlcVxufVxuXG5odHRwLmdldCA9IGZ1bmN0aW9uIGdldCAob3B0cywgY2IpIHtcblx0dmFyIHJlcSA9IGh0dHAucmVxdWVzdChvcHRzLCBjYilcblx0cmVxLmVuZCgpXG5cdHJldHVybiByZXFcbn1cblxuaHR0cC5BZ2VudCA9IGZ1bmN0aW9uICgpIHt9XG5odHRwLkFnZW50LmRlZmF1bHRNYXhTb2NrZXRzID0gNFxuXG5odHRwLlNUQVRVU19DT0RFUyA9IHN0YXR1c0NvZGVzXG5cbmh0dHAuTUVUSE9EUyA9IFtcblx0J0NIRUNLT1VUJyxcblx0J0NPTk5FQ1QnLFxuXHQnQ09QWScsXG5cdCdERUxFVEUnLFxuXHQnR0VUJyxcblx0J0hFQUQnLFxuXHQnTE9DSycsXG5cdCdNLVNFQVJDSCcsXG5cdCdNRVJHRScsXG5cdCdNS0FDVElWSVRZJyxcblx0J01LQ09MJyxcblx0J01PVkUnLFxuXHQnTk9USUZZJyxcblx0J09QVElPTlMnLFxuXHQnUEFUQ0gnLFxuXHQnUE9TVCcsXG5cdCdQUk9QRklORCcsXG5cdCdQUk9QUEFUQ0gnLFxuXHQnUFVSR0UnLFxuXHQnUFVUJyxcblx0J1JFUE9SVCcsXG5cdCdTRUFSQ0gnLFxuXHQnU1VCU0NSSUJFJyxcblx0J1RSQUNFJyxcblx0J1VOTE9DSycsXG5cdCdVTlNVQlNDUklCRSdcbl1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9zdHJlYW0taHR0cC9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKiBlc2xpbnQtZGlzYWJsZSBub2RlL25vLWRlcHJlY2F0ZWQtYXBpICovXG52YXIgYnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJylcbnZhciBCdWZmZXIgPSBidWZmZXIuQnVmZmVyXG5cbi8vIGFsdGVybmF0aXZlIHRvIHVzaW5nIE9iamVjdC5rZXlzIGZvciBvbGQgYnJvd3NlcnNcbmZ1bmN0aW9uIGNvcHlQcm9wcyAoc3JjLCBkc3QpIHtcbiAgZm9yICh2YXIga2V5IGluIHNyYykge1xuICAgIGRzdFtrZXldID0gc3JjW2tleV1cbiAgfVxufVxuaWYgKEJ1ZmZlci5mcm9tICYmIEJ1ZmZlci5hbGxvYyAmJiBCdWZmZXIuYWxsb2NVbnNhZmUgJiYgQnVmZmVyLmFsbG9jVW5zYWZlU2xvdykge1xuICBtb2R1bGUuZXhwb3J0cyA9IGJ1ZmZlclxufSBlbHNlIHtcbiAgLy8gQ29weSBwcm9wZXJ0aWVzIGZyb20gcmVxdWlyZSgnYnVmZmVyJylcbiAgY29weVByb3BzKGJ1ZmZlciwgZXhwb3J0cylcbiAgZXhwb3J0cy5CdWZmZXIgPSBTYWZlQnVmZmVyXG59XG5cbmZ1bmN0aW9uIFNhZmVCdWZmZXIgKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBCdWZmZXIoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cbi8vIENvcHkgc3RhdGljIG1ldGhvZHMgZnJvbSBCdWZmZXJcbmNvcHlQcm9wcyhCdWZmZXIsIFNhZmVCdWZmZXIpXG5cblNhZmVCdWZmZXIuZnJvbSA9IGZ1bmN0aW9uIChhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICBpZiAodHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IG5vdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIEJ1ZmZlcihhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuU2FmZUJ1ZmZlci5hbGxvYyA9IGZ1bmN0aW9uIChzaXplLCBmaWxsLCBlbmNvZGluZykge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgdmFyIGJ1ZiA9IEJ1ZmZlcihzaXplKVxuICBpZiAoZmlsbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGJ1Zi5maWxsKGZpbGwsIGVuY29kaW5nKVxuICAgIH0gZWxzZSB7XG4gICAgICBidWYuZmlsbChmaWxsKVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBidWYuZmlsbCgwKVxuICB9XG4gIHJldHVybiBidWZcbn1cblxuU2FmZUJ1ZmZlci5hbGxvY1Vuc2FmZSA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gQnVmZmVyKHNpemUpXG59XG5cblNhZmVCdWZmZXIuYWxsb2NVbnNhZmVTbG93ID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBidWZmZXIuU2xvd0J1ZmZlcihzaXplKVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvc2FmZS1idWZmZXIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBwdW55Y29kZSA9IHJlcXVpcmUoJ3B1bnljb2RlJyk7XG52YXIgdXRpbCA9IHJlcXVpcmUoJy4vdXRpbCcpO1xuXG5leHBvcnRzLnBhcnNlID0gdXJsUGFyc2U7XG5leHBvcnRzLnJlc29sdmUgPSB1cmxSZXNvbHZlO1xuZXhwb3J0cy5yZXNvbHZlT2JqZWN0ID0gdXJsUmVzb2x2ZU9iamVjdDtcbmV4cG9ydHMuZm9ybWF0ID0gdXJsRm9ybWF0O1xuXG5leHBvcnRzLlVybCA9IFVybDtcblxuZnVuY3Rpb24gVXJsKCkge1xuICB0aGlzLnByb3RvY29sID0gbnVsbDtcbiAgdGhpcy5zbGFzaGVzID0gbnVsbDtcbiAgdGhpcy5hdXRoID0gbnVsbDtcbiAgdGhpcy5ob3N0ID0gbnVsbDtcbiAgdGhpcy5wb3J0ID0gbnVsbDtcbiAgdGhpcy5ob3N0bmFtZSA9IG51bGw7XG4gIHRoaXMuaGFzaCA9IG51bGw7XG4gIHRoaXMuc2VhcmNoID0gbnVsbDtcbiAgdGhpcy5xdWVyeSA9IG51bGw7XG4gIHRoaXMucGF0aG5hbWUgPSBudWxsO1xuICB0aGlzLnBhdGggPSBudWxsO1xuICB0aGlzLmhyZWYgPSBudWxsO1xufVxuXG4vLyBSZWZlcmVuY2U6IFJGQyAzOTg2LCBSRkMgMTgwOCwgUkZDIDIzOTZcblxuLy8gZGVmaW5lIHRoZXNlIGhlcmUgc28gYXQgbGVhc3QgdGhleSBvbmx5IGhhdmUgdG8gYmVcbi8vIGNvbXBpbGVkIG9uY2Ugb24gdGhlIGZpcnN0IG1vZHVsZSBsb2FkLlxudmFyIHByb3RvY29sUGF0dGVybiA9IC9eKFthLXowLTkuKy1dKzopL2ksXG4gICAgcG9ydFBhdHRlcm4gPSAvOlswLTldKiQvLFxuXG4gICAgLy8gU3BlY2lhbCBjYXNlIGZvciBhIHNpbXBsZSBwYXRoIFVSTFxuICAgIHNpbXBsZVBhdGhQYXR0ZXJuID0gL14oXFwvXFwvPyg/IVxcLylbXlxcP1xcc10qKShcXD9bXlxcc10qKT8kLyxcblxuICAgIC8vIFJGQyAyMzk2OiBjaGFyYWN0ZXJzIHJlc2VydmVkIGZvciBkZWxpbWl0aW5nIFVSTHMuXG4gICAgLy8gV2UgYWN0dWFsbHkganVzdCBhdXRvLWVzY2FwZSB0aGVzZS5cbiAgICBkZWxpbXMgPSBbJzwnLCAnPicsICdcIicsICdgJywgJyAnLCAnXFxyJywgJ1xcbicsICdcXHQnXSxcblxuICAgIC8vIFJGQyAyMzk2OiBjaGFyYWN0ZXJzIG5vdCBhbGxvd2VkIGZvciB2YXJpb3VzIHJlYXNvbnMuXG4gICAgdW53aXNlID0gWyd7JywgJ30nLCAnfCcsICdcXFxcJywgJ14nLCAnYCddLmNvbmNhdChkZWxpbXMpLFxuXG4gICAgLy8gQWxsb3dlZCBieSBSRkNzLCBidXQgY2F1c2Ugb2YgWFNTIGF0dGFja3MuICBBbHdheXMgZXNjYXBlIHRoZXNlLlxuICAgIGF1dG9Fc2NhcGUgPSBbJ1xcJyddLmNvbmNhdCh1bndpc2UpLFxuICAgIC8vIENoYXJhY3RlcnMgdGhhdCBhcmUgbmV2ZXIgZXZlciBhbGxvd2VkIGluIGEgaG9zdG5hbWUuXG4gICAgLy8gTm90ZSB0aGF0IGFueSBpbnZhbGlkIGNoYXJzIGFyZSBhbHNvIGhhbmRsZWQsIGJ1dCB0aGVzZVxuICAgIC8vIGFyZSB0aGUgb25lcyB0aGF0IGFyZSAqZXhwZWN0ZWQqIHRvIGJlIHNlZW4sIHNvIHdlIGZhc3QtcGF0aFxuICAgIC8vIHRoZW0uXG4gICAgbm9uSG9zdENoYXJzID0gWyclJywgJy8nLCAnPycsICc7JywgJyMnXS5jb25jYXQoYXV0b0VzY2FwZSksXG4gICAgaG9zdEVuZGluZ0NoYXJzID0gWycvJywgJz8nLCAnIyddLFxuICAgIGhvc3RuYW1lTWF4TGVuID0gMjU1LFxuICAgIGhvc3RuYW1lUGFydFBhdHRlcm4gPSAvXlsrYS16MC05QS1aXy1dezAsNjN9JC8sXG4gICAgaG9zdG5hbWVQYXJ0U3RhcnQgPSAvXihbK2EtejAtOUEtWl8tXXswLDYzfSkoLiopJC8sXG4gICAgLy8gcHJvdG9jb2xzIHRoYXQgY2FuIGFsbG93IFwidW5zYWZlXCIgYW5kIFwidW53aXNlXCIgY2hhcnMuXG4gICAgdW5zYWZlUHJvdG9jb2wgPSB7XG4gICAgICAnamF2YXNjcmlwdCc6IHRydWUsXG4gICAgICAnamF2YXNjcmlwdDonOiB0cnVlXG4gICAgfSxcbiAgICAvLyBwcm90b2NvbHMgdGhhdCBuZXZlciBoYXZlIGEgaG9zdG5hbWUuXG4gICAgaG9zdGxlc3NQcm90b2NvbCA9IHtcbiAgICAgICdqYXZhc2NyaXB0JzogdHJ1ZSxcbiAgICAgICdqYXZhc2NyaXB0Oic6IHRydWVcbiAgICB9LFxuICAgIC8vIHByb3RvY29scyB0aGF0IGFsd2F5cyBjb250YWluIGEgLy8gYml0LlxuICAgIHNsYXNoZWRQcm90b2NvbCA9IHtcbiAgICAgICdodHRwJzogdHJ1ZSxcbiAgICAgICdodHRwcyc6IHRydWUsXG4gICAgICAnZnRwJzogdHJ1ZSxcbiAgICAgICdnb3BoZXInOiB0cnVlLFxuICAgICAgJ2ZpbGUnOiB0cnVlLFxuICAgICAgJ2h0dHA6JzogdHJ1ZSxcbiAgICAgICdodHRwczonOiB0cnVlLFxuICAgICAgJ2Z0cDonOiB0cnVlLFxuICAgICAgJ2dvcGhlcjonOiB0cnVlLFxuICAgICAgJ2ZpbGU6JzogdHJ1ZVxuICAgIH0sXG4gICAgcXVlcnlzdHJpbmcgPSByZXF1aXJlKCdxdWVyeXN0cmluZycpO1xuXG5mdW5jdGlvbiB1cmxQYXJzZSh1cmwsIHBhcnNlUXVlcnlTdHJpbmcsIHNsYXNoZXNEZW5vdGVIb3N0KSB7XG4gIGlmICh1cmwgJiYgdXRpbC5pc09iamVjdCh1cmwpICYmIHVybCBpbnN0YW5jZW9mIFVybCkgcmV0dXJuIHVybDtcblxuICB2YXIgdSA9IG5ldyBVcmw7XG4gIHUucGFyc2UodXJsLCBwYXJzZVF1ZXJ5U3RyaW5nLCBzbGFzaGVzRGVub3RlSG9zdCk7XG4gIHJldHVybiB1O1xufVxuXG5VcmwucHJvdG90eXBlLnBhcnNlID0gZnVuY3Rpb24odXJsLCBwYXJzZVF1ZXJ5U3RyaW5nLCBzbGFzaGVzRGVub3RlSG9zdCkge1xuICBpZiAoIXV0aWwuaXNTdHJpbmcodXJsKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQYXJhbWV0ZXIgJ3VybCcgbXVzdCBiZSBhIHN0cmluZywgbm90IFwiICsgdHlwZW9mIHVybCk7XG4gIH1cblxuICAvLyBDb3B5IGNocm9tZSwgSUUsIG9wZXJhIGJhY2tzbGFzaC1oYW5kbGluZyBiZWhhdmlvci5cbiAgLy8gQmFjayBzbGFzaGVzIGJlZm9yZSB0aGUgcXVlcnkgc3RyaW5nIGdldCBjb252ZXJ0ZWQgdG8gZm9yd2FyZCBzbGFzaGVzXG4gIC8vIFNlZTogaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTI1OTE2XG4gIHZhciBxdWVyeUluZGV4ID0gdXJsLmluZGV4T2YoJz8nKSxcbiAgICAgIHNwbGl0dGVyID1cbiAgICAgICAgICAocXVlcnlJbmRleCAhPT0gLTEgJiYgcXVlcnlJbmRleCA8IHVybC5pbmRleE9mKCcjJykpID8gJz8nIDogJyMnLFxuICAgICAgdVNwbGl0ID0gdXJsLnNwbGl0KHNwbGl0dGVyKSxcbiAgICAgIHNsYXNoUmVnZXggPSAvXFxcXC9nO1xuICB1U3BsaXRbMF0gPSB1U3BsaXRbMF0ucmVwbGFjZShzbGFzaFJlZ2V4LCAnLycpO1xuICB1cmwgPSB1U3BsaXQuam9pbihzcGxpdHRlcik7XG5cbiAgdmFyIHJlc3QgPSB1cmw7XG5cbiAgLy8gdHJpbSBiZWZvcmUgcHJvY2VlZGluZy5cbiAgLy8gVGhpcyBpcyB0byBzdXBwb3J0IHBhcnNlIHN0dWZmIGxpa2UgXCIgIGh0dHA6Ly9mb28uY29tICBcXG5cIlxuICByZXN0ID0gcmVzdC50cmltKCk7XG5cbiAgaWYgKCFzbGFzaGVzRGVub3RlSG9zdCAmJiB1cmwuc3BsaXQoJyMnKS5sZW5ndGggPT09IDEpIHtcbiAgICAvLyBUcnkgZmFzdCBwYXRoIHJlZ2V4cFxuICAgIHZhciBzaW1wbGVQYXRoID0gc2ltcGxlUGF0aFBhdHRlcm4uZXhlYyhyZXN0KTtcbiAgICBpZiAoc2ltcGxlUGF0aCkge1xuICAgICAgdGhpcy5wYXRoID0gcmVzdDtcbiAgICAgIHRoaXMuaHJlZiA9IHJlc3Q7XG4gICAgICB0aGlzLnBhdGhuYW1lID0gc2ltcGxlUGF0aFsxXTtcbiAgICAgIGlmIChzaW1wbGVQYXRoWzJdKSB7XG4gICAgICAgIHRoaXMuc2VhcmNoID0gc2ltcGxlUGF0aFsyXTtcbiAgICAgICAgaWYgKHBhcnNlUXVlcnlTdHJpbmcpIHtcbiAgICAgICAgICB0aGlzLnF1ZXJ5ID0gcXVlcnlzdHJpbmcucGFyc2UodGhpcy5zZWFyY2guc3Vic3RyKDEpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnF1ZXJ5ID0gdGhpcy5zZWFyY2guc3Vic3RyKDEpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHBhcnNlUXVlcnlTdHJpbmcpIHtcbiAgICAgICAgdGhpcy5zZWFyY2ggPSAnJztcbiAgICAgICAgdGhpcy5xdWVyeSA9IHt9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9XG5cbiAgdmFyIHByb3RvID0gcHJvdG9jb2xQYXR0ZXJuLmV4ZWMocmVzdCk7XG4gIGlmIChwcm90bykge1xuICAgIHByb3RvID0gcHJvdG9bMF07XG4gICAgdmFyIGxvd2VyUHJvdG8gPSBwcm90by50b0xvd2VyQ2FzZSgpO1xuICAgIHRoaXMucHJvdG9jb2wgPSBsb3dlclByb3RvO1xuICAgIHJlc3QgPSByZXN0LnN1YnN0cihwcm90by5sZW5ndGgpO1xuICB9XG5cbiAgLy8gZmlndXJlIG91dCBpZiBpdCdzIGdvdCBhIGhvc3RcbiAgLy8gdXNlckBzZXJ2ZXIgaXMgKmFsd2F5cyogaW50ZXJwcmV0ZWQgYXMgYSBob3N0bmFtZSwgYW5kIHVybFxuICAvLyByZXNvbHV0aW9uIHdpbGwgdHJlYXQgLy9mb28vYmFyIGFzIGhvc3Q9Zm9vLHBhdGg9YmFyIGJlY2F1c2UgdGhhdCdzXG4gIC8vIGhvdyB0aGUgYnJvd3NlciByZXNvbHZlcyByZWxhdGl2ZSBVUkxzLlxuICBpZiAoc2xhc2hlc0Rlbm90ZUhvc3QgfHwgcHJvdG8gfHwgcmVzdC5tYXRjaCgvXlxcL1xcL1teQFxcL10rQFteQFxcL10rLykpIHtcbiAgICB2YXIgc2xhc2hlcyA9IHJlc3Quc3Vic3RyKDAsIDIpID09PSAnLy8nO1xuICAgIGlmIChzbGFzaGVzICYmICEocHJvdG8gJiYgaG9zdGxlc3NQcm90b2NvbFtwcm90b10pKSB7XG4gICAgICByZXN0ID0gcmVzdC5zdWJzdHIoMik7XG4gICAgICB0aGlzLnNsYXNoZXMgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGlmICghaG9zdGxlc3NQcm90b2NvbFtwcm90b10gJiZcbiAgICAgIChzbGFzaGVzIHx8IChwcm90byAmJiAhc2xhc2hlZFByb3RvY29sW3Byb3RvXSkpKSB7XG5cbiAgICAvLyB0aGVyZSdzIGEgaG9zdG5hbWUuXG4gICAgLy8gdGhlIGZpcnN0IGluc3RhbmNlIG9mIC8sID8sIDssIG9yICMgZW5kcyB0aGUgaG9zdC5cbiAgICAvL1xuICAgIC8vIElmIHRoZXJlIGlzIGFuIEAgaW4gdGhlIGhvc3RuYW1lLCB0aGVuIG5vbi1ob3N0IGNoYXJzICphcmUqIGFsbG93ZWRcbiAgICAvLyB0byB0aGUgbGVmdCBvZiB0aGUgbGFzdCBAIHNpZ24sIHVubGVzcyBzb21lIGhvc3QtZW5kaW5nIGNoYXJhY3RlclxuICAgIC8vIGNvbWVzICpiZWZvcmUqIHRoZSBALXNpZ24uXG4gICAgLy8gVVJMcyBhcmUgb2Jub3hpb3VzLlxuICAgIC8vXG4gICAgLy8gZXg6XG4gICAgLy8gaHR0cDovL2FAYkBjLyA9PiB1c2VyOmFAYiBob3N0OmNcbiAgICAvLyBodHRwOi8vYUBiP0BjID0+IHVzZXI6YSBob3N0OmMgcGF0aDovP0BjXG5cbiAgICAvLyB2MC4xMiBUT0RPKGlzYWFjcyk6IFRoaXMgaXMgbm90IHF1aXRlIGhvdyBDaHJvbWUgZG9lcyB0aGluZ3MuXG4gICAgLy8gUmV2aWV3IG91ciB0ZXN0IGNhc2UgYWdhaW5zdCBicm93c2VycyBtb3JlIGNvbXByZWhlbnNpdmVseS5cblxuICAgIC8vIGZpbmQgdGhlIGZpcnN0IGluc3RhbmNlIG9mIGFueSBob3N0RW5kaW5nQ2hhcnNcbiAgICB2YXIgaG9zdEVuZCA9IC0xO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaG9zdEVuZGluZ0NoYXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaGVjID0gcmVzdC5pbmRleE9mKGhvc3RFbmRpbmdDaGFyc1tpXSk7XG4gICAgICBpZiAoaGVjICE9PSAtMSAmJiAoaG9zdEVuZCA9PT0gLTEgfHwgaGVjIDwgaG9zdEVuZCkpXG4gICAgICAgIGhvc3RFbmQgPSBoZWM7XG4gICAgfVxuXG4gICAgLy8gYXQgdGhpcyBwb2ludCwgZWl0aGVyIHdlIGhhdmUgYW4gZXhwbGljaXQgcG9pbnQgd2hlcmUgdGhlXG4gICAgLy8gYXV0aCBwb3J0aW9uIGNhbm5vdCBnbyBwYXN0LCBvciB0aGUgbGFzdCBAIGNoYXIgaXMgdGhlIGRlY2lkZXIuXG4gICAgdmFyIGF1dGgsIGF0U2lnbjtcbiAgICBpZiAoaG9zdEVuZCA9PT0gLTEpIHtcbiAgICAgIC8vIGF0U2lnbiBjYW4gYmUgYW55d2hlcmUuXG4gICAgICBhdFNpZ24gPSByZXN0Lmxhc3RJbmRleE9mKCdAJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGF0U2lnbiBtdXN0IGJlIGluIGF1dGggcG9ydGlvbi5cbiAgICAgIC8vIGh0dHA6Ly9hQGIvY0BkID0+IGhvc3Q6YiBhdXRoOmEgcGF0aDovY0BkXG4gICAgICBhdFNpZ24gPSByZXN0Lmxhc3RJbmRleE9mKCdAJywgaG9zdEVuZCk7XG4gICAgfVxuXG4gICAgLy8gTm93IHdlIGhhdmUgYSBwb3J0aW9uIHdoaWNoIGlzIGRlZmluaXRlbHkgdGhlIGF1dGguXG4gICAgLy8gUHVsbCB0aGF0IG9mZi5cbiAgICBpZiAoYXRTaWduICE9PSAtMSkge1xuICAgICAgYXV0aCA9IHJlc3Quc2xpY2UoMCwgYXRTaWduKTtcbiAgICAgIHJlc3QgPSByZXN0LnNsaWNlKGF0U2lnbiArIDEpO1xuICAgICAgdGhpcy5hdXRoID0gZGVjb2RlVVJJQ29tcG9uZW50KGF1dGgpO1xuICAgIH1cblxuICAgIC8vIHRoZSBob3N0IGlzIHRoZSByZW1haW5pbmcgdG8gdGhlIGxlZnQgb2YgdGhlIGZpcnN0IG5vbi1ob3N0IGNoYXJcbiAgICBob3N0RW5kID0gLTE7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBub25Ib3N0Q2hhcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBoZWMgPSByZXN0LmluZGV4T2Yobm9uSG9zdENoYXJzW2ldKTtcbiAgICAgIGlmIChoZWMgIT09IC0xICYmIChob3N0RW5kID09PSAtMSB8fCBoZWMgPCBob3N0RW5kKSlcbiAgICAgICAgaG9zdEVuZCA9IGhlYztcbiAgICB9XG4gICAgLy8gaWYgd2Ugc3RpbGwgaGF2ZSBub3QgaGl0IGl0LCB0aGVuIHRoZSBlbnRpcmUgdGhpbmcgaXMgYSBob3N0LlxuICAgIGlmIChob3N0RW5kID09PSAtMSlcbiAgICAgIGhvc3RFbmQgPSByZXN0Lmxlbmd0aDtcblxuICAgIHRoaXMuaG9zdCA9IHJlc3Quc2xpY2UoMCwgaG9zdEVuZCk7XG4gICAgcmVzdCA9IHJlc3Quc2xpY2UoaG9zdEVuZCk7XG5cbiAgICAvLyBwdWxsIG91dCBwb3J0LlxuICAgIHRoaXMucGFyc2VIb3N0KCk7XG5cbiAgICAvLyB3ZSd2ZSBpbmRpY2F0ZWQgdGhhdCB0aGVyZSBpcyBhIGhvc3RuYW1lLFxuICAgIC8vIHNvIGV2ZW4gaWYgaXQncyBlbXB0eSwgaXQgaGFzIHRvIGJlIHByZXNlbnQuXG4gICAgdGhpcy5ob3N0bmFtZSA9IHRoaXMuaG9zdG5hbWUgfHwgJyc7XG5cbiAgICAvLyBpZiBob3N0bmFtZSBiZWdpbnMgd2l0aCBbIGFuZCBlbmRzIHdpdGggXVxuICAgIC8vIGFzc3VtZSB0aGF0IGl0J3MgYW4gSVB2NiBhZGRyZXNzLlxuICAgIHZhciBpcHY2SG9zdG5hbWUgPSB0aGlzLmhvc3RuYW1lWzBdID09PSAnWycgJiZcbiAgICAgICAgdGhpcy5ob3N0bmFtZVt0aGlzLmhvc3RuYW1lLmxlbmd0aCAtIDFdID09PSAnXSc7XG5cbiAgICAvLyB2YWxpZGF0ZSBhIGxpdHRsZS5cbiAgICBpZiAoIWlwdjZIb3N0bmFtZSkge1xuICAgICAgdmFyIGhvc3RwYXJ0cyA9IHRoaXMuaG9zdG5hbWUuc3BsaXQoL1xcLi8pO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBob3N0cGFydHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIHZhciBwYXJ0ID0gaG9zdHBhcnRzW2ldO1xuICAgICAgICBpZiAoIXBhcnQpIGNvbnRpbnVlO1xuICAgICAgICBpZiAoIXBhcnQubWF0Y2goaG9zdG5hbWVQYXJ0UGF0dGVybikpIHtcbiAgICAgICAgICB2YXIgbmV3cGFydCA9ICcnO1xuICAgICAgICAgIGZvciAodmFyIGogPSAwLCBrID0gcGFydC5sZW5ndGg7IGogPCBrOyBqKyspIHtcbiAgICAgICAgICAgIGlmIChwYXJ0LmNoYXJDb2RlQXQoaikgPiAxMjcpIHtcbiAgICAgICAgICAgICAgLy8gd2UgcmVwbGFjZSBub24tQVNDSUkgY2hhciB3aXRoIGEgdGVtcG9yYXJ5IHBsYWNlaG9sZGVyXG4gICAgICAgICAgICAgIC8vIHdlIG5lZWQgdGhpcyB0byBtYWtlIHN1cmUgc2l6ZSBvZiBob3N0bmFtZSBpcyBub3RcbiAgICAgICAgICAgICAgLy8gYnJva2VuIGJ5IHJlcGxhY2luZyBub24tQVNDSUkgYnkgbm90aGluZ1xuICAgICAgICAgICAgICBuZXdwYXJ0ICs9ICd4JztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIG5ld3BhcnQgKz0gcGFydFtqXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gd2UgdGVzdCBhZ2FpbiB3aXRoIEFTQ0lJIGNoYXIgb25seVxuICAgICAgICAgIGlmICghbmV3cGFydC5tYXRjaChob3N0bmFtZVBhcnRQYXR0ZXJuKSkge1xuICAgICAgICAgICAgdmFyIHZhbGlkUGFydHMgPSBob3N0cGFydHMuc2xpY2UoMCwgaSk7XG4gICAgICAgICAgICB2YXIgbm90SG9zdCA9IGhvc3RwYXJ0cy5zbGljZShpICsgMSk7XG4gICAgICAgICAgICB2YXIgYml0ID0gcGFydC5tYXRjaChob3N0bmFtZVBhcnRTdGFydCk7XG4gICAgICAgICAgICBpZiAoYml0KSB7XG4gICAgICAgICAgICAgIHZhbGlkUGFydHMucHVzaChiaXRbMV0pO1xuICAgICAgICAgICAgICBub3RIb3N0LnVuc2hpZnQoYml0WzJdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChub3RIb3N0Lmxlbmd0aCkge1xuICAgICAgICAgICAgICByZXN0ID0gJy8nICsgbm90SG9zdC5qb2luKCcuJykgKyByZXN0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5ob3N0bmFtZSA9IHZhbGlkUGFydHMuam9pbignLicpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaG9zdG5hbWUubGVuZ3RoID4gaG9zdG5hbWVNYXhMZW4pIHtcbiAgICAgIHRoaXMuaG9zdG5hbWUgPSAnJztcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gaG9zdG5hbWVzIGFyZSBhbHdheXMgbG93ZXIgY2FzZS5cbiAgICAgIHRoaXMuaG9zdG5hbWUgPSB0aGlzLmhvc3RuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuXG4gICAgaWYgKCFpcHY2SG9zdG5hbWUpIHtcbiAgICAgIC8vIElETkEgU3VwcG9ydDogUmV0dXJucyBhIHB1bnljb2RlZCByZXByZXNlbnRhdGlvbiBvZiBcImRvbWFpblwiLlxuICAgICAgLy8gSXQgb25seSBjb252ZXJ0cyBwYXJ0cyBvZiB0aGUgZG9tYWluIG5hbWUgdGhhdFxuICAgICAgLy8gaGF2ZSBub24tQVNDSUkgY2hhcmFjdGVycywgaS5lLiBpdCBkb2Vzbid0IG1hdHRlciBpZlxuICAgICAgLy8geW91IGNhbGwgaXQgd2l0aCBhIGRvbWFpbiB0aGF0IGFscmVhZHkgaXMgQVNDSUktb25seS5cbiAgICAgIHRoaXMuaG9zdG5hbWUgPSBwdW55Y29kZS50b0FTQ0lJKHRoaXMuaG9zdG5hbWUpO1xuICAgIH1cblxuICAgIHZhciBwID0gdGhpcy5wb3J0ID8gJzonICsgdGhpcy5wb3J0IDogJyc7XG4gICAgdmFyIGggPSB0aGlzLmhvc3RuYW1lIHx8ICcnO1xuICAgIHRoaXMuaG9zdCA9IGggKyBwO1xuICAgIHRoaXMuaHJlZiArPSB0aGlzLmhvc3Q7XG5cbiAgICAvLyBzdHJpcCBbIGFuZCBdIGZyb20gdGhlIGhvc3RuYW1lXG4gICAgLy8gdGhlIGhvc3QgZmllbGQgc3RpbGwgcmV0YWlucyB0aGVtLCB0aG91Z2hcbiAgICBpZiAoaXB2Nkhvc3RuYW1lKSB7XG4gICAgICB0aGlzLmhvc3RuYW1lID0gdGhpcy5ob3N0bmFtZS5zdWJzdHIoMSwgdGhpcy5ob3N0bmFtZS5sZW5ndGggLSAyKTtcbiAgICAgIGlmIChyZXN0WzBdICE9PSAnLycpIHtcbiAgICAgICAgcmVzdCA9ICcvJyArIHJlc3Q7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gbm93IHJlc3QgaXMgc2V0IHRvIHRoZSBwb3N0LWhvc3Qgc3R1ZmYuXG4gIC8vIGNob3Agb2ZmIGFueSBkZWxpbSBjaGFycy5cbiAgaWYgKCF1bnNhZmVQcm90b2NvbFtsb3dlclByb3RvXSkge1xuXG4gICAgLy8gRmlyc3QsIG1ha2UgMTAwJSBzdXJlIHRoYXQgYW55IFwiYXV0b0VzY2FwZVwiIGNoYXJzIGdldFxuICAgIC8vIGVzY2FwZWQsIGV2ZW4gaWYgZW5jb2RlVVJJQ29tcG9uZW50IGRvZXNuJ3QgdGhpbmsgdGhleVxuICAgIC8vIG5lZWQgdG8gYmUuXG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBhdXRvRXNjYXBlLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgdmFyIGFlID0gYXV0b0VzY2FwZVtpXTtcbiAgICAgIGlmIChyZXN0LmluZGV4T2YoYWUpID09PSAtMSlcbiAgICAgICAgY29udGludWU7XG4gICAgICB2YXIgZXNjID0gZW5jb2RlVVJJQ29tcG9uZW50KGFlKTtcbiAgICAgIGlmIChlc2MgPT09IGFlKSB7XG4gICAgICAgIGVzYyA9IGVzY2FwZShhZSk7XG4gICAgICB9XG4gICAgICByZXN0ID0gcmVzdC5zcGxpdChhZSkuam9pbihlc2MpO1xuICAgIH1cbiAgfVxuXG5cbiAgLy8gY2hvcCBvZmYgZnJvbSB0aGUgdGFpbCBmaXJzdC5cbiAgdmFyIGhhc2ggPSByZXN0LmluZGV4T2YoJyMnKTtcbiAgaWYgKGhhc2ggIT09IC0xKSB7XG4gICAgLy8gZ290IGEgZnJhZ21lbnQgc3RyaW5nLlxuICAgIHRoaXMuaGFzaCA9IHJlc3Quc3Vic3RyKGhhc2gpO1xuICAgIHJlc3QgPSByZXN0LnNsaWNlKDAsIGhhc2gpO1xuICB9XG4gIHZhciBxbSA9IHJlc3QuaW5kZXhPZignPycpO1xuICBpZiAocW0gIT09IC0xKSB7XG4gICAgdGhpcy5zZWFyY2ggPSByZXN0LnN1YnN0cihxbSk7XG4gICAgdGhpcy5xdWVyeSA9IHJlc3Quc3Vic3RyKHFtICsgMSk7XG4gICAgaWYgKHBhcnNlUXVlcnlTdHJpbmcpIHtcbiAgICAgIHRoaXMucXVlcnkgPSBxdWVyeXN0cmluZy5wYXJzZSh0aGlzLnF1ZXJ5KTtcbiAgICB9XG4gICAgcmVzdCA9IHJlc3Quc2xpY2UoMCwgcW0pO1xuICB9IGVsc2UgaWYgKHBhcnNlUXVlcnlTdHJpbmcpIHtcbiAgICAvLyBubyBxdWVyeSBzdHJpbmcsIGJ1dCBwYXJzZVF1ZXJ5U3RyaW5nIHN0aWxsIHJlcXVlc3RlZFxuICAgIHRoaXMuc2VhcmNoID0gJyc7XG4gICAgdGhpcy5xdWVyeSA9IHt9O1xuICB9XG4gIGlmIChyZXN0KSB0aGlzLnBhdGhuYW1lID0gcmVzdDtcbiAgaWYgKHNsYXNoZWRQcm90b2NvbFtsb3dlclByb3RvXSAmJlxuICAgICAgdGhpcy5ob3N0bmFtZSAmJiAhdGhpcy5wYXRobmFtZSkge1xuICAgIHRoaXMucGF0aG5hbWUgPSAnLyc7XG4gIH1cblxuICAvL3RvIHN1cHBvcnQgaHR0cC5yZXF1ZXN0XG4gIGlmICh0aGlzLnBhdGhuYW1lIHx8IHRoaXMuc2VhcmNoKSB7XG4gICAgdmFyIHAgPSB0aGlzLnBhdGhuYW1lIHx8ICcnO1xuICAgIHZhciBzID0gdGhpcy5zZWFyY2ggfHwgJyc7XG4gICAgdGhpcy5wYXRoID0gcCArIHM7XG4gIH1cblxuICAvLyBmaW5hbGx5LCByZWNvbnN0cnVjdCB0aGUgaHJlZiBiYXNlZCBvbiB3aGF0IGhhcyBiZWVuIHZhbGlkYXRlZC5cbiAgdGhpcy5ocmVmID0gdGhpcy5mb3JtYXQoKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vLyBmb3JtYXQgYSBwYXJzZWQgb2JqZWN0IGludG8gYSB1cmwgc3RyaW5nXG5mdW5jdGlvbiB1cmxGb3JtYXQob2JqKSB7XG4gIC8vIGVuc3VyZSBpdCdzIGFuIG9iamVjdCwgYW5kIG5vdCBhIHN0cmluZyB1cmwuXG4gIC8vIElmIGl0J3MgYW4gb2JqLCB0aGlzIGlzIGEgbm8tb3AuXG4gIC8vIHRoaXMgd2F5LCB5b3UgY2FuIGNhbGwgdXJsX2Zvcm1hdCgpIG9uIHN0cmluZ3NcbiAgLy8gdG8gY2xlYW4gdXAgcG90ZW50aWFsbHkgd29ua3kgdXJscy5cbiAgaWYgKHV0aWwuaXNTdHJpbmcob2JqKSkgb2JqID0gdXJsUGFyc2Uob2JqKTtcbiAgaWYgKCEob2JqIGluc3RhbmNlb2YgVXJsKSkgcmV0dXJuIFVybC5wcm90b3R5cGUuZm9ybWF0LmNhbGwob2JqKTtcbiAgcmV0dXJuIG9iai5mb3JtYXQoKTtcbn1cblxuVXJsLnByb3RvdHlwZS5mb3JtYXQgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGF1dGggPSB0aGlzLmF1dGggfHwgJyc7XG4gIGlmIChhdXRoKSB7XG4gICAgYXV0aCA9IGVuY29kZVVSSUNvbXBvbmVudChhdXRoKTtcbiAgICBhdXRoID0gYXV0aC5yZXBsYWNlKC8lM0EvaSwgJzonKTtcbiAgICBhdXRoICs9ICdAJztcbiAgfVxuXG4gIHZhciBwcm90b2NvbCA9IHRoaXMucHJvdG9jb2wgfHwgJycsXG4gICAgICBwYXRobmFtZSA9IHRoaXMucGF0aG5hbWUgfHwgJycsXG4gICAgICBoYXNoID0gdGhpcy5oYXNoIHx8ICcnLFxuICAgICAgaG9zdCA9IGZhbHNlLFxuICAgICAgcXVlcnkgPSAnJztcblxuICBpZiAodGhpcy5ob3N0KSB7XG4gICAgaG9zdCA9IGF1dGggKyB0aGlzLmhvc3Q7XG4gIH0gZWxzZSBpZiAodGhpcy5ob3N0bmFtZSkge1xuICAgIGhvc3QgPSBhdXRoICsgKHRoaXMuaG9zdG5hbWUuaW5kZXhPZignOicpID09PSAtMSA/XG4gICAgICAgIHRoaXMuaG9zdG5hbWUgOlxuICAgICAgICAnWycgKyB0aGlzLmhvc3RuYW1lICsgJ10nKTtcbiAgICBpZiAodGhpcy5wb3J0KSB7XG4gICAgICBob3N0ICs9ICc6JyArIHRoaXMucG9ydDtcbiAgICB9XG4gIH1cblxuICBpZiAodGhpcy5xdWVyeSAmJlxuICAgICAgdXRpbC5pc09iamVjdCh0aGlzLnF1ZXJ5KSAmJlxuICAgICAgT2JqZWN0LmtleXModGhpcy5xdWVyeSkubGVuZ3RoKSB7XG4gICAgcXVlcnkgPSBxdWVyeXN0cmluZy5zdHJpbmdpZnkodGhpcy5xdWVyeSk7XG4gIH1cblxuICB2YXIgc2VhcmNoID0gdGhpcy5zZWFyY2ggfHwgKHF1ZXJ5ICYmICgnPycgKyBxdWVyeSkpIHx8ICcnO1xuXG4gIGlmIChwcm90b2NvbCAmJiBwcm90b2NvbC5zdWJzdHIoLTEpICE9PSAnOicpIHByb3RvY29sICs9ICc6JztcblxuICAvLyBvbmx5IHRoZSBzbGFzaGVkUHJvdG9jb2xzIGdldCB0aGUgLy8uICBOb3QgbWFpbHRvOiwgeG1wcDosIGV0Yy5cbiAgLy8gdW5sZXNzIHRoZXkgaGFkIHRoZW0gdG8gYmVnaW4gd2l0aC5cbiAgaWYgKHRoaXMuc2xhc2hlcyB8fFxuICAgICAgKCFwcm90b2NvbCB8fCBzbGFzaGVkUHJvdG9jb2xbcHJvdG9jb2xdKSAmJiBob3N0ICE9PSBmYWxzZSkge1xuICAgIGhvc3QgPSAnLy8nICsgKGhvc3QgfHwgJycpO1xuICAgIGlmIChwYXRobmFtZSAmJiBwYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykgcGF0aG5hbWUgPSAnLycgKyBwYXRobmFtZTtcbiAgfSBlbHNlIGlmICghaG9zdCkge1xuICAgIGhvc3QgPSAnJztcbiAgfVxuXG4gIGlmIChoYXNoICYmIGhhc2guY2hhckF0KDApICE9PSAnIycpIGhhc2ggPSAnIycgKyBoYXNoO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaC5jaGFyQXQoMCkgIT09ICc/Jykgc2VhcmNoID0gJz8nICsgc2VhcmNoO1xuXG4gIHBhdGhuYW1lID0gcGF0aG5hbWUucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbihtYXRjaCkge1xuICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQobWF0Y2gpO1xuICB9KTtcbiAgc2VhcmNoID0gc2VhcmNoLnJlcGxhY2UoJyMnLCAnJTIzJyk7XG5cbiAgcmV0dXJuIHByb3RvY29sICsgaG9zdCArIHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbn07XG5cbmZ1bmN0aW9uIHVybFJlc29sdmUoc291cmNlLCByZWxhdGl2ZSkge1xuICByZXR1cm4gdXJsUGFyc2Uoc291cmNlLCBmYWxzZSwgdHJ1ZSkucmVzb2x2ZShyZWxhdGl2ZSk7XG59XG5cblVybC5wcm90b3R5cGUucmVzb2x2ZSA9IGZ1bmN0aW9uKHJlbGF0aXZlKSB7XG4gIHJldHVybiB0aGlzLnJlc29sdmVPYmplY3QodXJsUGFyc2UocmVsYXRpdmUsIGZhbHNlLCB0cnVlKSkuZm9ybWF0KCk7XG59O1xuXG5mdW5jdGlvbiB1cmxSZXNvbHZlT2JqZWN0KHNvdXJjZSwgcmVsYXRpdmUpIHtcbiAgaWYgKCFzb3VyY2UpIHJldHVybiByZWxhdGl2ZTtcbiAgcmV0dXJuIHVybFBhcnNlKHNvdXJjZSwgZmFsc2UsIHRydWUpLnJlc29sdmVPYmplY3QocmVsYXRpdmUpO1xufVxuXG5VcmwucHJvdG90eXBlLnJlc29sdmVPYmplY3QgPSBmdW5jdGlvbihyZWxhdGl2ZSkge1xuICBpZiAodXRpbC5pc1N0cmluZyhyZWxhdGl2ZSkpIHtcbiAgICB2YXIgcmVsID0gbmV3IFVybCgpO1xuICAgIHJlbC5wYXJzZShyZWxhdGl2ZSwgZmFsc2UsIHRydWUpO1xuICAgIHJlbGF0aXZlID0gcmVsO1xuICB9XG5cbiAgdmFyIHJlc3VsdCA9IG5ldyBVcmwoKTtcbiAgdmFyIHRrZXlzID0gT2JqZWN0LmtleXModGhpcyk7XG4gIGZvciAodmFyIHRrID0gMDsgdGsgPCB0a2V5cy5sZW5ndGg7IHRrKyspIHtcbiAgICB2YXIgdGtleSA9IHRrZXlzW3RrXTtcbiAgICByZXN1bHRbdGtleV0gPSB0aGlzW3RrZXldO1xuICB9XG5cbiAgLy8gaGFzaCBpcyBhbHdheXMgb3ZlcnJpZGRlbiwgbm8gbWF0dGVyIHdoYXQuXG4gIC8vIGV2ZW4gaHJlZj1cIlwiIHdpbGwgcmVtb3ZlIGl0LlxuICByZXN1bHQuaGFzaCA9IHJlbGF0aXZlLmhhc2g7XG5cbiAgLy8gaWYgdGhlIHJlbGF0aXZlIHVybCBpcyBlbXB0eSwgdGhlbiB0aGVyZSdzIG5vdGhpbmcgbGVmdCB0byBkbyBoZXJlLlxuICBpZiAocmVsYXRpdmUuaHJlZiA9PT0gJycpIHtcbiAgICByZXN1bHQuaHJlZiA9IHJlc3VsdC5mb3JtYXQoKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLy8gaHJlZnMgbGlrZSAvL2Zvby9iYXIgYWx3YXlzIGN1dCB0byB0aGUgcHJvdG9jb2wuXG4gIGlmIChyZWxhdGl2ZS5zbGFzaGVzICYmICFyZWxhdGl2ZS5wcm90b2NvbCkge1xuICAgIC8vIHRha2UgZXZlcnl0aGluZyBleGNlcHQgdGhlIHByb3RvY29sIGZyb20gcmVsYXRpdmVcbiAgICB2YXIgcmtleXMgPSBPYmplY3Qua2V5cyhyZWxhdGl2ZSk7XG4gICAgZm9yICh2YXIgcmsgPSAwOyByayA8IHJrZXlzLmxlbmd0aDsgcmsrKykge1xuICAgICAgdmFyIHJrZXkgPSBya2V5c1tya107XG4gICAgICBpZiAocmtleSAhPT0gJ3Byb3RvY29sJylcbiAgICAgICAgcmVzdWx0W3JrZXldID0gcmVsYXRpdmVbcmtleV07XG4gICAgfVxuXG4gICAgLy91cmxQYXJzZSBhcHBlbmRzIHRyYWlsaW5nIC8gdG8gdXJscyBsaWtlIGh0dHA6Ly93d3cuZXhhbXBsZS5jb21cbiAgICBpZiAoc2xhc2hlZFByb3RvY29sW3Jlc3VsdC5wcm90b2NvbF0gJiZcbiAgICAgICAgcmVzdWx0Lmhvc3RuYW1lICYmICFyZXN1bHQucGF0aG5hbWUpIHtcbiAgICAgIHJlc3VsdC5wYXRoID0gcmVzdWx0LnBhdGhuYW1lID0gJy8nO1xuICAgIH1cblxuICAgIHJlc3VsdC5ocmVmID0gcmVzdWx0LmZvcm1hdCgpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBpZiAocmVsYXRpdmUucHJvdG9jb2wgJiYgcmVsYXRpdmUucHJvdG9jb2wgIT09IHJlc3VsdC5wcm90b2NvbCkge1xuICAgIC8vIGlmIGl0J3MgYSBrbm93biB1cmwgcHJvdG9jb2wsIHRoZW4gY2hhbmdpbmdcbiAgICAvLyB0aGUgcHJvdG9jb2wgZG9lcyB3ZWlyZCB0aGluZ3NcbiAgICAvLyBmaXJzdCwgaWYgaXQncyBub3QgZmlsZTosIHRoZW4gd2UgTVVTVCBoYXZlIGEgaG9zdCxcbiAgICAvLyBhbmQgaWYgdGhlcmUgd2FzIGEgcGF0aFxuICAgIC8vIHRvIGJlZ2luIHdpdGgsIHRoZW4gd2UgTVVTVCBoYXZlIGEgcGF0aC5cbiAgICAvLyBpZiBpdCBpcyBmaWxlOiwgdGhlbiB0aGUgaG9zdCBpcyBkcm9wcGVkLFxuICAgIC8vIGJlY2F1c2UgdGhhdCdzIGtub3duIHRvIGJlIGhvc3RsZXNzLlxuICAgIC8vIGFueXRoaW5nIGVsc2UgaXMgYXNzdW1lZCB0byBiZSBhYnNvbHV0ZS5cbiAgICBpZiAoIXNsYXNoZWRQcm90b2NvbFtyZWxhdGl2ZS5wcm90b2NvbF0pIHtcbiAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMocmVsYXRpdmUpO1xuICAgICAgZm9yICh2YXIgdiA9IDA7IHYgPCBrZXlzLmxlbmd0aDsgdisrKSB7XG4gICAgICAgIHZhciBrID0ga2V5c1t2XTtcbiAgICAgICAgcmVzdWx0W2tdID0gcmVsYXRpdmVba107XG4gICAgICB9XG4gICAgICByZXN1bHQuaHJlZiA9IHJlc3VsdC5mb3JtYXQoKTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgcmVzdWx0LnByb3RvY29sID0gcmVsYXRpdmUucHJvdG9jb2w7XG4gICAgaWYgKCFyZWxhdGl2ZS5ob3N0ICYmICFob3N0bGVzc1Byb3RvY29sW3JlbGF0aXZlLnByb3RvY29sXSkge1xuICAgICAgdmFyIHJlbFBhdGggPSAocmVsYXRpdmUucGF0aG5hbWUgfHwgJycpLnNwbGl0KCcvJyk7XG4gICAgICB3aGlsZSAocmVsUGF0aC5sZW5ndGggJiYgIShyZWxhdGl2ZS5ob3N0ID0gcmVsUGF0aC5zaGlmdCgpKSk7XG4gICAgICBpZiAoIXJlbGF0aXZlLmhvc3QpIHJlbGF0aXZlLmhvc3QgPSAnJztcbiAgICAgIGlmICghcmVsYXRpdmUuaG9zdG5hbWUpIHJlbGF0aXZlLmhvc3RuYW1lID0gJyc7XG4gICAgICBpZiAocmVsUGF0aFswXSAhPT0gJycpIHJlbFBhdGgudW5zaGlmdCgnJyk7XG4gICAgICBpZiAocmVsUGF0aC5sZW5ndGggPCAyKSByZWxQYXRoLnVuc2hpZnQoJycpO1xuICAgICAgcmVzdWx0LnBhdGhuYW1lID0gcmVsUGF0aC5qb2luKCcvJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdC5wYXRobmFtZSA9IHJlbGF0aXZlLnBhdGhuYW1lO1xuICAgIH1cbiAgICByZXN1bHQuc2VhcmNoID0gcmVsYXRpdmUuc2VhcmNoO1xuICAgIHJlc3VsdC5xdWVyeSA9IHJlbGF0aXZlLnF1ZXJ5O1xuICAgIHJlc3VsdC5ob3N0ID0gcmVsYXRpdmUuaG9zdCB8fCAnJztcbiAgICByZXN1bHQuYXV0aCA9IHJlbGF0aXZlLmF1dGg7XG4gICAgcmVzdWx0Lmhvc3RuYW1lID0gcmVsYXRpdmUuaG9zdG5hbWUgfHwgcmVsYXRpdmUuaG9zdDtcbiAgICByZXN1bHQucG9ydCA9IHJlbGF0aXZlLnBvcnQ7XG4gICAgLy8gdG8gc3VwcG9ydCBodHRwLnJlcXVlc3RcbiAgICBpZiAocmVzdWx0LnBhdGhuYW1lIHx8IHJlc3VsdC5zZWFyY2gpIHtcbiAgICAgIHZhciBwID0gcmVzdWx0LnBhdGhuYW1lIHx8ICcnO1xuICAgICAgdmFyIHMgPSByZXN1bHQuc2VhcmNoIHx8ICcnO1xuICAgICAgcmVzdWx0LnBhdGggPSBwICsgcztcbiAgICB9XG4gICAgcmVzdWx0LnNsYXNoZXMgPSByZXN1bHQuc2xhc2hlcyB8fCByZWxhdGl2ZS5zbGFzaGVzO1xuICAgIHJlc3VsdC5ocmVmID0gcmVzdWx0LmZvcm1hdCgpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICB2YXIgaXNTb3VyY2VBYnMgPSAocmVzdWx0LnBhdGhuYW1lICYmIHJlc3VsdC5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJyksXG4gICAgICBpc1JlbEFicyA9IChcbiAgICAgICAgICByZWxhdGl2ZS5ob3N0IHx8XG4gICAgICAgICAgcmVsYXRpdmUucGF0aG5hbWUgJiYgcmVsYXRpdmUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLydcbiAgICAgICksXG4gICAgICBtdXN0RW5kQWJzID0gKGlzUmVsQWJzIHx8IGlzU291cmNlQWJzIHx8XG4gICAgICAgICAgICAgICAgICAgIChyZXN1bHQuaG9zdCAmJiByZWxhdGl2ZS5wYXRobmFtZSkpLFxuICAgICAgcmVtb3ZlQWxsRG90cyA9IG11c3RFbmRBYnMsXG4gICAgICBzcmNQYXRoID0gcmVzdWx0LnBhdGhuYW1lICYmIHJlc3VsdC5wYXRobmFtZS5zcGxpdCgnLycpIHx8IFtdLFxuICAgICAgcmVsUGF0aCA9IHJlbGF0aXZlLnBhdGhuYW1lICYmIHJlbGF0aXZlLnBhdGhuYW1lLnNwbGl0KCcvJykgfHwgW10sXG4gICAgICBwc3ljaG90aWMgPSByZXN1bHQucHJvdG9jb2wgJiYgIXNsYXNoZWRQcm90b2NvbFtyZXN1bHQucHJvdG9jb2xdO1xuXG4gIC8vIGlmIHRoZSB1cmwgaXMgYSBub24tc2xhc2hlZCB1cmwsIHRoZW4gcmVsYXRpdmVcbiAgLy8gbGlua3MgbGlrZSAuLi8uLiBzaG91bGQgYmUgYWJsZVxuICAvLyB0byBjcmF3bCB1cCB0byB0aGUgaG9zdG5hbWUsIGFzIHdlbGwuICBUaGlzIGlzIHN0cmFuZ2UuXG4gIC8vIHJlc3VsdC5wcm90b2NvbCBoYXMgYWxyZWFkeSBiZWVuIHNldCBieSBub3cuXG4gIC8vIExhdGVyIG9uLCBwdXQgdGhlIGZpcnN0IHBhdGggcGFydCBpbnRvIHRoZSBob3N0IGZpZWxkLlxuICBpZiAocHN5Y2hvdGljKSB7XG4gICAgcmVzdWx0Lmhvc3RuYW1lID0gJyc7XG4gICAgcmVzdWx0LnBvcnQgPSBudWxsO1xuICAgIGlmIChyZXN1bHQuaG9zdCkge1xuICAgICAgaWYgKHNyY1BhdGhbMF0gPT09ICcnKSBzcmNQYXRoWzBdID0gcmVzdWx0Lmhvc3Q7XG4gICAgICBlbHNlIHNyY1BhdGgudW5zaGlmdChyZXN1bHQuaG9zdCk7XG4gICAgfVxuICAgIHJlc3VsdC5ob3N0ID0gJyc7XG4gICAgaWYgKHJlbGF0aXZlLnByb3RvY29sKSB7XG4gICAgICByZWxhdGl2ZS5ob3N0bmFtZSA9IG51bGw7XG4gICAgICByZWxhdGl2ZS5wb3J0ID0gbnVsbDtcbiAgICAgIGlmIChyZWxhdGl2ZS5ob3N0KSB7XG4gICAgICAgIGlmIChyZWxQYXRoWzBdID09PSAnJykgcmVsUGF0aFswXSA9IHJlbGF0aXZlLmhvc3Q7XG4gICAgICAgIGVsc2UgcmVsUGF0aC51bnNoaWZ0KHJlbGF0aXZlLmhvc3QpO1xuICAgICAgfVxuICAgICAgcmVsYXRpdmUuaG9zdCA9IG51bGw7XG4gICAgfVxuICAgIG11c3RFbmRBYnMgPSBtdXN0RW5kQWJzICYmIChyZWxQYXRoWzBdID09PSAnJyB8fCBzcmNQYXRoWzBdID09PSAnJyk7XG4gIH1cblxuICBpZiAoaXNSZWxBYnMpIHtcbiAgICAvLyBpdCdzIGFic29sdXRlLlxuICAgIHJlc3VsdC5ob3N0ID0gKHJlbGF0aXZlLmhvc3QgfHwgcmVsYXRpdmUuaG9zdCA9PT0gJycpID9cbiAgICAgICAgICAgICAgICAgIHJlbGF0aXZlLmhvc3QgOiByZXN1bHQuaG9zdDtcbiAgICByZXN1bHQuaG9zdG5hbWUgPSAocmVsYXRpdmUuaG9zdG5hbWUgfHwgcmVsYXRpdmUuaG9zdG5hbWUgPT09ICcnKSA/XG4gICAgICAgICAgICAgICAgICAgICAgcmVsYXRpdmUuaG9zdG5hbWUgOiByZXN1bHQuaG9zdG5hbWU7XG4gICAgcmVzdWx0LnNlYXJjaCA9IHJlbGF0aXZlLnNlYXJjaDtcbiAgICByZXN1bHQucXVlcnkgPSByZWxhdGl2ZS5xdWVyeTtcbiAgICBzcmNQYXRoID0gcmVsUGF0aDtcbiAgICAvLyBmYWxsIHRocm91Z2ggdG8gdGhlIGRvdC1oYW5kbGluZyBiZWxvdy5cbiAgfSBlbHNlIGlmIChyZWxQYXRoLmxlbmd0aCkge1xuICAgIC8vIGl0J3MgcmVsYXRpdmVcbiAgICAvLyB0aHJvdyBhd2F5IHRoZSBleGlzdGluZyBmaWxlLCBhbmQgdGFrZSB0aGUgbmV3IHBhdGggaW5zdGVhZC5cbiAgICBpZiAoIXNyY1BhdGgpIHNyY1BhdGggPSBbXTtcbiAgICBzcmNQYXRoLnBvcCgpO1xuICAgIHNyY1BhdGggPSBzcmNQYXRoLmNvbmNhdChyZWxQYXRoKTtcbiAgICByZXN1bHQuc2VhcmNoID0gcmVsYXRpdmUuc2VhcmNoO1xuICAgIHJlc3VsdC5xdWVyeSA9IHJlbGF0aXZlLnF1ZXJ5O1xuICB9IGVsc2UgaWYgKCF1dGlsLmlzTnVsbE9yVW5kZWZpbmVkKHJlbGF0aXZlLnNlYXJjaCkpIHtcbiAgICAvLyBqdXN0IHB1bGwgb3V0IHRoZSBzZWFyY2guXG4gICAgLy8gbGlrZSBocmVmPSc/Zm9vJy5cbiAgICAvLyBQdXQgdGhpcyBhZnRlciB0aGUgb3RoZXIgdHdvIGNhc2VzIGJlY2F1c2UgaXQgc2ltcGxpZmllcyB0aGUgYm9vbGVhbnNcbiAgICBpZiAocHN5Y2hvdGljKSB7XG4gICAgICByZXN1bHQuaG9zdG5hbWUgPSByZXN1bHQuaG9zdCA9IHNyY1BhdGguc2hpZnQoKTtcbiAgICAgIC8vb2NjYXRpb25hbHkgdGhlIGF1dGggY2FuIGdldCBzdHVjayBvbmx5IGluIGhvc3RcbiAgICAgIC8vdGhpcyBlc3BlY2lhbGx5IGhhcHBlbnMgaW4gY2FzZXMgbGlrZVxuICAgICAgLy91cmwucmVzb2x2ZU9iamVjdCgnbWFpbHRvOmxvY2FsMUBkb21haW4xJywgJ2xvY2FsMkBkb21haW4yJylcbiAgICAgIHZhciBhdXRoSW5Ib3N0ID0gcmVzdWx0Lmhvc3QgJiYgcmVzdWx0Lmhvc3QuaW5kZXhPZignQCcpID4gMCA/XG4gICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5ob3N0LnNwbGl0KCdAJykgOiBmYWxzZTtcbiAgICAgIGlmIChhdXRoSW5Ib3N0KSB7XG4gICAgICAgIHJlc3VsdC5hdXRoID0gYXV0aEluSG9zdC5zaGlmdCgpO1xuICAgICAgICByZXN1bHQuaG9zdCA9IHJlc3VsdC5ob3N0bmFtZSA9IGF1dGhJbkhvc3Quc2hpZnQoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmVzdWx0LnNlYXJjaCA9IHJlbGF0aXZlLnNlYXJjaDtcbiAgICByZXN1bHQucXVlcnkgPSByZWxhdGl2ZS5xdWVyeTtcbiAgICAvL3RvIHN1cHBvcnQgaHR0cC5yZXF1ZXN0XG4gICAgaWYgKCF1dGlsLmlzTnVsbChyZXN1bHQucGF0aG5hbWUpIHx8ICF1dGlsLmlzTnVsbChyZXN1bHQuc2VhcmNoKSkge1xuICAgICAgcmVzdWx0LnBhdGggPSAocmVzdWx0LnBhdGhuYW1lID8gcmVzdWx0LnBhdGhuYW1lIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgKHJlc3VsdC5zZWFyY2ggPyByZXN1bHQuc2VhcmNoIDogJycpO1xuICAgIH1cbiAgICByZXN1bHQuaHJlZiA9IHJlc3VsdC5mb3JtYXQoKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgaWYgKCFzcmNQYXRoLmxlbmd0aCkge1xuICAgIC8vIG5vIHBhdGggYXQgYWxsLiAgZWFzeS5cbiAgICAvLyB3ZSd2ZSBhbHJlYWR5IGhhbmRsZWQgdGhlIG90aGVyIHN0dWZmIGFib3ZlLlxuICAgIHJlc3VsdC5wYXRobmFtZSA9IG51bGw7XG4gICAgLy90byBzdXBwb3J0IGh0dHAucmVxdWVzdFxuICAgIGlmIChyZXN1bHQuc2VhcmNoKSB7XG4gICAgICByZXN1bHQucGF0aCA9ICcvJyArIHJlc3VsdC5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdC5wYXRoID0gbnVsbDtcbiAgICB9XG4gICAgcmVzdWx0LmhyZWYgPSByZXN1bHQuZm9ybWF0KCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8vIGlmIGEgdXJsIEVORHMgaW4gLiBvciAuLiwgdGhlbiBpdCBtdXN0IGdldCBhIHRyYWlsaW5nIHNsYXNoLlxuICAvLyBob3dldmVyLCBpZiBpdCBlbmRzIGluIGFueXRoaW5nIGVsc2Ugbm9uLXNsYXNoeSxcbiAgLy8gdGhlbiBpdCBtdXN0IE5PVCBnZXQgYSB0cmFpbGluZyBzbGFzaC5cbiAgdmFyIGxhc3QgPSBzcmNQYXRoLnNsaWNlKC0xKVswXTtcbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2ggPSAoXG4gICAgICAocmVzdWx0Lmhvc3QgfHwgcmVsYXRpdmUuaG9zdCB8fCBzcmNQYXRoLmxlbmd0aCA+IDEpICYmXG4gICAgICAobGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicpIHx8IGxhc3QgPT09ICcnKTtcblxuICAvLyBzdHJpcCBzaW5nbGUgZG90cywgcmVzb2x2ZSBkb3VibGUgZG90cyB0byBwYXJlbnQgZGlyXG4gIC8vIGlmIHRoZSBwYXRoIHRyaWVzIHRvIGdvIGFib3ZlIHRoZSByb290LCBgdXBgIGVuZHMgdXAgPiAwXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBzcmNQYXRoLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICBsYXN0ID0gc3JjUGF0aFtpXTtcbiAgICBpZiAobGFzdCA9PT0gJy4nKSB7XG4gICAgICBzcmNQYXRoLnNwbGljZShpLCAxKTtcbiAgICB9IGVsc2UgaWYgKGxhc3QgPT09ICcuLicpIHtcbiAgICAgIHNyY1BhdGguc3BsaWNlKGksIDEpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcmNQYXRoLnNwbGljZShpLCAxKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgLy8gaWYgdGhlIHBhdGggaXMgYWxsb3dlZCB0byBnbyBhYm92ZSB0aGUgcm9vdCwgcmVzdG9yZSBsZWFkaW5nIC4uc1xuICBpZiAoIW11c3RFbmRBYnMgJiYgIXJlbW92ZUFsbERvdHMpIHtcbiAgICBmb3IgKDsgdXAtLTsgdXApIHtcbiAgICAgIHNyY1BhdGgudW5zaGlmdCgnLi4nKTtcbiAgICB9XG4gIH1cblxuICBpZiAobXVzdEVuZEFicyAmJiBzcmNQYXRoWzBdICE9PSAnJyAmJlxuICAgICAgKCFzcmNQYXRoWzBdIHx8IHNyY1BhdGhbMF0uY2hhckF0KDApICE9PSAnLycpKSB7XG4gICAgc3JjUGF0aC51bnNoaWZ0KCcnKTtcbiAgfVxuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIChzcmNQYXRoLmpvaW4oJy8nKS5zdWJzdHIoLTEpICE9PSAnLycpKSB7XG4gICAgc3JjUGF0aC5wdXNoKCcnKTtcbiAgfVxuXG4gIHZhciBpc0Fic29sdXRlID0gc3JjUGF0aFswXSA9PT0gJycgfHxcbiAgICAgIChzcmNQYXRoWzBdICYmIHNyY1BhdGhbMF0uY2hhckF0KDApID09PSAnLycpO1xuXG4gIC8vIHB1dCB0aGUgaG9zdCBiYWNrXG4gIGlmIChwc3ljaG90aWMpIHtcbiAgICByZXN1bHQuaG9zdG5hbWUgPSByZXN1bHQuaG9zdCA9IGlzQWJzb2x1dGUgPyAnJyA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmNQYXRoLmxlbmd0aCA/IHNyY1BhdGguc2hpZnQoKSA6ICcnO1xuICAgIC8vb2NjYXRpb25hbHkgdGhlIGF1dGggY2FuIGdldCBzdHVjayBvbmx5IGluIGhvc3RcbiAgICAvL3RoaXMgZXNwZWNpYWxseSBoYXBwZW5zIGluIGNhc2VzIGxpa2VcbiAgICAvL3VybC5yZXNvbHZlT2JqZWN0KCdtYWlsdG86bG9jYWwxQGRvbWFpbjEnLCAnbG9jYWwyQGRvbWFpbjInKVxuICAgIHZhciBhdXRoSW5Ib3N0ID0gcmVzdWx0Lmhvc3QgJiYgcmVzdWx0Lmhvc3QuaW5kZXhPZignQCcpID4gMCA/XG4gICAgICAgICAgICAgICAgICAgICByZXN1bHQuaG9zdC5zcGxpdCgnQCcpIDogZmFsc2U7XG4gICAgaWYgKGF1dGhJbkhvc3QpIHtcbiAgICAgIHJlc3VsdC5hdXRoID0gYXV0aEluSG9zdC5zaGlmdCgpO1xuICAgICAgcmVzdWx0Lmhvc3QgPSByZXN1bHQuaG9zdG5hbWUgPSBhdXRoSW5Ib3N0LnNoaWZ0KCk7XG4gICAgfVxuICB9XG5cbiAgbXVzdEVuZEFicyA9IG11c3RFbmRBYnMgfHwgKHJlc3VsdC5ob3N0ICYmIHNyY1BhdGgubGVuZ3RoKTtcblxuICBpZiAobXVzdEVuZEFicyAmJiAhaXNBYnNvbHV0ZSkge1xuICAgIHNyY1BhdGgudW5zaGlmdCgnJyk7XG4gIH1cblxuICBpZiAoIXNyY1BhdGgubGVuZ3RoKSB7XG4gICAgcmVzdWx0LnBhdGhuYW1lID0gbnVsbDtcbiAgICByZXN1bHQucGF0aCA9IG51bGw7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0LnBhdGhuYW1lID0gc3JjUGF0aC5qb2luKCcvJyk7XG4gIH1cblxuICAvL3RvIHN1cHBvcnQgcmVxdWVzdC5odHRwXG4gIGlmICghdXRpbC5pc051bGwocmVzdWx0LnBhdGhuYW1lKSB8fCAhdXRpbC5pc051bGwocmVzdWx0LnNlYXJjaCkpIHtcbiAgICByZXN1bHQucGF0aCA9IChyZXN1bHQucGF0aG5hbWUgPyByZXN1bHQucGF0aG5hbWUgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHJlc3VsdC5zZWFyY2ggPyByZXN1bHQuc2VhcmNoIDogJycpO1xuICB9XG4gIHJlc3VsdC5hdXRoID0gcmVsYXRpdmUuYXV0aCB8fCByZXN1bHQuYXV0aDtcbiAgcmVzdWx0LnNsYXNoZXMgPSByZXN1bHQuc2xhc2hlcyB8fCByZWxhdGl2ZS5zbGFzaGVzO1xuICByZXN1bHQuaHJlZiA9IHJlc3VsdC5mb3JtYXQoKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cblVybC5wcm90b3R5cGUucGFyc2VIb3N0ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBob3N0ID0gdGhpcy5ob3N0O1xuICB2YXIgcG9ydCA9IHBvcnRQYXR0ZXJuLmV4ZWMoaG9zdCk7XG4gIGlmIChwb3J0KSB7XG4gICAgcG9ydCA9IHBvcnRbMF07XG4gICAgaWYgKHBvcnQgIT09ICc6Jykge1xuICAgICAgdGhpcy5wb3J0ID0gcG9ydC5zdWJzdHIoMSk7XG4gICAgfVxuICAgIGhvc3QgPSBob3N0LnN1YnN0cigwLCBob3N0Lmxlbmd0aCAtIHBvcnQubGVuZ3RoKTtcbiAgfVxuICBpZiAoaG9zdCkgdGhpcy5ob3N0bmFtZSA9IGhvc3Q7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdXJsL3VybC5qc1xuLy8gbW9kdWxlIGlkID0gMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMucGFyc2UgPSByZXF1aXJlKCcuL2RlY29kZScpO1xuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vZW5jb2RlJyk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJ0bXN0YXJ0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gcnRtc3RhcnQocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAncnRtLnN0YXJ0JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ydG0uc3RhcnQuanNcbi8vIG1vZHVsZSBpZCA9IDEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiZXhwb3J0cy5mZXRjaCA9IGlzRnVuY3Rpb24oZ2xvYmFsLmZldGNoKSAmJiBpc0Z1bmN0aW9uKGdsb2JhbC5SZWFkYWJsZVN0cmVhbSlcblxuZXhwb3J0cy5ibG9iQ29uc3RydWN0b3IgPSBmYWxzZVxudHJ5IHtcblx0bmV3IEJsb2IoW25ldyBBcnJheUJ1ZmZlcigxKV0pXG5cdGV4cG9ydHMuYmxvYkNvbnN0cnVjdG9yID0gdHJ1ZVxufSBjYXRjaCAoZSkge31cblxuLy8gVGhlIHhociByZXF1ZXN0IHRvIGV4YW1wbGUuY29tIG1heSB2aW9sYXRlIHNvbWUgcmVzdHJpY3RpdmUgQ1NQIGNvbmZpZ3VyYXRpb25zLFxuLy8gc28gaWYgd2UncmUgcnVubmluZyBpbiBhIGJyb3dzZXIgdGhhdCBzdXBwb3J0cyBgZmV0Y2hgLCBhdm9pZCBjYWxsaW5nIGdldFhIUigpXG4vLyBhbmQgYXNzdW1lIHN1cHBvcnQgZm9yIGNlcnRhaW4gZmVhdHVyZXMgYmVsb3cuXG52YXIgeGhyXG5mdW5jdGlvbiBnZXRYSFIgKCkge1xuXHQvLyBDYWNoZSB0aGUgeGhyIHZhbHVlXG5cdGlmICh4aHIgIT09IHVuZGVmaW5lZCkgcmV0dXJuIHhoclxuXG5cdGlmIChnbG9iYWwuWE1MSHR0cFJlcXVlc3QpIHtcblx0XHR4aHIgPSBuZXcgZ2xvYmFsLlhNTEh0dHBSZXF1ZXN0KClcblx0XHQvLyBJZiBYRG9tYWluUmVxdWVzdCBpcyBhdmFpbGFibGUgKGllIG9ubHksIHdoZXJlIHhociBtaWdodCBub3Qgd29ya1xuXHRcdC8vIGNyb3NzIGRvbWFpbiksIHVzZSB0aGUgcGFnZSBsb2NhdGlvbi4gT3RoZXJ3aXNlIHVzZSBleGFtcGxlLmNvbVxuXHRcdC8vIE5vdGU6IHRoaXMgZG9lc24ndCBhY3R1YWxseSBtYWtlIGFuIGh0dHAgcmVxdWVzdC5cblx0XHR0cnkge1xuXHRcdFx0eGhyLm9wZW4oJ0dFVCcsIGdsb2JhbC5YRG9tYWluUmVxdWVzdCA/ICcvJyA6ICdodHRwczovL2V4YW1wbGUuY29tJylcblx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdHhociA9IG51bGxcblx0XHR9XG5cdH0gZWxzZSB7XG5cdFx0Ly8gU2VydmljZSB3b3JrZXJzIGRvbid0IGhhdmUgWEhSXG5cdFx0eGhyID0gbnVsbFxuXHR9XG5cdHJldHVybiB4aHJcbn1cblxuZnVuY3Rpb24gY2hlY2tUeXBlU3VwcG9ydCAodHlwZSkge1xuXHR2YXIgeGhyID0gZ2V0WEhSKClcblx0aWYgKCF4aHIpIHJldHVybiBmYWxzZVxuXHR0cnkge1xuXHRcdHhoci5yZXNwb25zZVR5cGUgPSB0eXBlXG5cdFx0cmV0dXJuIHhoci5yZXNwb25zZVR5cGUgPT09IHR5cGVcblx0fSBjYXRjaCAoZSkge31cblx0cmV0dXJuIGZhbHNlXG59XG5cbi8vIEZvciBzb21lIHN0cmFuZ2UgcmVhc29uLCBTYWZhcmkgNy4wIHJlcG9ydHMgdHlwZW9mIGdsb2JhbC5BcnJheUJ1ZmZlciA9PT0gJ29iamVjdCcuXG4vLyBTYWZhcmkgNy4xIGFwcGVhcnMgdG8gaGF2ZSBmaXhlZCB0aGlzIGJ1Zy5cbnZhciBoYXZlQXJyYXlCdWZmZXIgPSB0eXBlb2YgZ2xvYmFsLkFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJ1xudmFyIGhhdmVTbGljZSA9IGhhdmVBcnJheUJ1ZmZlciAmJiBpc0Z1bmN0aW9uKGdsb2JhbC5BcnJheUJ1ZmZlci5wcm90b3R5cGUuc2xpY2UpXG5cbi8vIElmIGZldGNoIGlzIHN1cHBvcnRlZCwgdGhlbiBhcnJheWJ1ZmZlciB3aWxsIGJlIHN1cHBvcnRlZCB0b28uIFNraXAgY2FsbGluZ1xuLy8gY2hlY2tUeXBlU3VwcG9ydCgpLCBzaW5jZSB0aGF0IGNhbGxzIGdldFhIUigpLlxuZXhwb3J0cy5hcnJheWJ1ZmZlciA9IGV4cG9ydHMuZmV0Y2ggfHwgKGhhdmVBcnJheUJ1ZmZlciAmJiBjaGVja1R5cGVTdXBwb3J0KCdhcnJheWJ1ZmZlcicpKVxuXG4vLyBUaGVzZSBuZXh0IHR3byB0ZXN0cyB1bmF2b2lkYWJseSBzaG93IHdhcm5pbmdzIGluIENocm9tZS4gU2luY2UgZmV0Y2ggd2lsbCBhbHdheXNcbi8vIGJlIHVzZWQgaWYgaXQncyBhdmFpbGFibGUsIGp1c3QgcmV0dXJuIGZhbHNlIGZvciB0aGVzZSB0byBhdm9pZCB0aGUgd2FybmluZ3MuXG5leHBvcnRzLm1zc3RyZWFtID0gIWV4cG9ydHMuZmV0Y2ggJiYgaGF2ZVNsaWNlICYmIGNoZWNrVHlwZVN1cHBvcnQoJ21zLXN0cmVhbScpXG5leHBvcnRzLm1vemNodW5rZWRhcnJheWJ1ZmZlciA9ICFleHBvcnRzLmZldGNoICYmIGhhdmVBcnJheUJ1ZmZlciAmJlxuXHRjaGVja1R5cGVTdXBwb3J0KCdtb3otY2h1bmtlZC1hcnJheWJ1ZmZlcicpXG5cbi8vIElmIGZldGNoIGlzIHN1cHBvcnRlZCwgdGhlbiBvdmVycmlkZU1pbWVUeXBlIHdpbGwgYmUgc3VwcG9ydGVkIHRvby4gU2tpcCBjYWxsaW5nXG4vLyBnZXRYSFIoKS5cbmV4cG9ydHMub3ZlcnJpZGVNaW1lVHlwZSA9IGV4cG9ydHMuZmV0Y2ggfHwgKGdldFhIUigpID8gaXNGdW5jdGlvbihnZXRYSFIoKS5vdmVycmlkZU1pbWVUeXBlKSA6IGZhbHNlKVxuXG5leHBvcnRzLnZiQXJyYXkgPSBpc0Z1bmN0aW9uKGdsb2JhbC5WQkFycmF5KVxuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uICh2YWx1ZSkge1xuXHRyZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nXG59XG5cbnhociA9IG51bGwgLy8gSGVscCBnY1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbGliL2NhcGFiaWxpdHkuanNcbi8vIG1vZHVsZSBpZCA9IDE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fcmVhZGFibGUuanMnKTtcbmV4cG9ydHMuU3RyZWFtID0gZXhwb3J0cztcbmV4cG9ydHMuUmVhZGFibGUgPSBleHBvcnRzO1xuZXhwb3J0cy5Xcml0YWJsZSA9IHJlcXVpcmUoJy4vbGliL19zdHJlYW1fd3JpdGFibGUuanMnKTtcbmV4cG9ydHMuRHVwbGV4ID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV9kdXBsZXguanMnKTtcbmV4cG9ydHMuVHJhbnNmb3JtID0gcmVxdWlyZSgnLi9saWIvX3N0cmVhbV90cmFuc2Zvcm0uanMnKTtcbmV4cG9ydHMuUGFzc1Rocm91Z2ggPSByZXF1aXJlKCcuL2xpYi9fc3RyZWFtX3Bhc3N0aHJvdWdoLmpzJyk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUtYnJvd3Nlci5qc1xuLy8gbW9kdWxlIGlkID0gMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIHByb2Nlc3NOZXh0VGljayA9IHJlcXVpcmUoJ3Byb2Nlc3MtbmV4dGljay1hcmdzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxubW9kdWxlLmV4cG9ydHMgPSBSZWFkYWJsZTtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpO1xuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgRHVwbGV4O1xuLyo8L3JlcGxhY2VtZW50PiovXG5cblJlYWRhYmxlLlJlYWRhYmxlU3RhdGUgPSBSZWFkYWJsZVN0YXRlO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIEVFID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuXG52YXIgRUVsaXN0ZW5lckNvdW50ID0gZnVuY3Rpb24gKGVtaXR0ZXIsIHR5cGUpIHtcbiAgcmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJzKHR5cGUpLmxlbmd0aDtcbn07XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBTdHJlYW0gPSByZXF1aXJlKCcuL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLy8gVE9ETyhibWV1cmVyKTogQ2hhbmdlIHRoaXMgYmFjayB0byBjb25zdCBvbmNlIGhvbGUgY2hlY2tzIGFyZVxuLy8gcHJvcGVybHkgb3B0aW1pemVkIGF3YXkgZWFybHkgaW4gSWduaXRpb24rVHVyYm9GYW4uXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyO1xudmFyIE91clVpbnQ4QXJyYXkgPSBnbG9iYWwuVWludDhBcnJheSB8fCBmdW5jdGlvbiAoKSB7fTtcbmZ1bmN0aW9uIF91aW50OEFycmF5VG9CdWZmZXIoY2h1bmspIHtcbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGNodW5rKTtcbn1cbmZ1bmN0aW9uIF9pc1VpbnQ4QXJyYXkob2JqKSB7XG4gIHJldHVybiBCdWZmZXIuaXNCdWZmZXIob2JqKSB8fCBvYmogaW5zdGFuY2VvZiBPdXJVaW50OEFycmF5O1xufVxuLyo8L3JlcGxhY2VtZW50PiovXG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpO1xudXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBkZWJ1Z1V0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG52YXIgZGVidWcgPSB2b2lkIDA7XG5pZiAoZGVidWdVdGlsICYmIGRlYnVnVXRpbC5kZWJ1Z2xvZykge1xuICBkZWJ1ZyA9IGRlYnVnVXRpbC5kZWJ1Z2xvZygnc3RyZWFtJyk7XG59IGVsc2Uge1xuICBkZWJ1ZyA9IGZ1bmN0aW9uICgpIHt9O1xufVxuLyo8L3JlcGxhY2VtZW50PiovXG5cbnZhciBCdWZmZXJMaXN0ID0gcmVxdWlyZSgnLi9pbnRlcm5hbC9zdHJlYW1zL0J1ZmZlckxpc3QnKTtcbnZhciBkZXN0cm95SW1wbCA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95Jyk7XG52YXIgU3RyaW5nRGVjb2RlcjtcblxudXRpbC5pbmhlcml0cyhSZWFkYWJsZSwgU3RyZWFtKTtcblxudmFyIGtQcm94eUV2ZW50cyA9IFsnZXJyb3InLCAnY2xvc2UnLCAnZGVzdHJveScsICdwYXVzZScsICdyZXN1bWUnXTtcblxuZnVuY3Rpb24gcHJlcGVuZExpc3RlbmVyKGVtaXR0ZXIsIGV2ZW50LCBmbikge1xuICAvLyBTYWRseSB0aGlzIGlzIG5vdCBjYWNoZWFibGUgYXMgc29tZSBsaWJyYXJpZXMgYnVuZGxlIHRoZWlyIG93blxuICAvLyBldmVudCBlbWl0dGVyIGltcGxlbWVudGF0aW9uIHdpdGggdGhlbS5cbiAgaWYgKHR5cGVvZiBlbWl0dGVyLnByZXBlbmRMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBlbWl0dGVyLnByZXBlbmRMaXN0ZW5lcihldmVudCwgZm4pO1xuICB9IGVsc2Uge1xuICAgIC8vIFRoaXMgaXMgYSBoYWNrIHRvIG1ha2Ugc3VyZSB0aGF0IG91ciBlcnJvciBoYW5kbGVyIGlzIGF0dGFjaGVkIGJlZm9yZSBhbnlcbiAgICAvLyB1c2VybGFuZCBvbmVzLiAgTkVWRVIgRE8gVEhJUy4gVGhpcyBpcyBoZXJlIG9ubHkgYmVjYXVzZSB0aGlzIGNvZGUgbmVlZHNcbiAgICAvLyB0byBjb250aW51ZSB0byB3b3JrIHdpdGggb2xkZXIgdmVyc2lvbnMgb2YgTm9kZS5qcyB0aGF0IGRvIG5vdCBpbmNsdWRlXG4gICAgLy8gdGhlIHByZXBlbmRMaXN0ZW5lcigpIG1ldGhvZC4gVGhlIGdvYWwgaXMgdG8gZXZlbnR1YWxseSByZW1vdmUgdGhpcyBoYWNrLlxuICAgIGlmICghZW1pdHRlci5fZXZlbnRzIHx8ICFlbWl0dGVyLl9ldmVudHNbZXZlbnRdKSBlbWl0dGVyLm9uKGV2ZW50LCBmbik7ZWxzZSBpZiAoaXNBcnJheShlbWl0dGVyLl9ldmVudHNbZXZlbnRdKSkgZW1pdHRlci5fZXZlbnRzW2V2ZW50XS51bnNoaWZ0KGZuKTtlbHNlIGVtaXR0ZXIuX2V2ZW50c1tldmVudF0gPSBbZm4sIGVtaXR0ZXIuX2V2ZW50c1tldmVudF1dO1xuICB9XG59XG5cbmZ1bmN0aW9uIFJlYWRhYmxlU3RhdGUob3B0aW9ucywgc3RyZWFtKSB7XG4gIER1cGxleCA9IER1cGxleCB8fCByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgLy8gb2JqZWN0IHN0cmVhbSBmbGFnLiBVc2VkIHRvIG1ha2UgcmVhZChuKSBpZ25vcmUgbiBhbmQgdG9cbiAgLy8gbWFrZSBhbGwgdGhlIGJ1ZmZlciBtZXJnaW5nIGFuZCBsZW5ndGggY2hlY2tzIGdvIGF3YXlcbiAgdGhpcy5vYmplY3RNb2RlID0gISFvcHRpb25zLm9iamVjdE1vZGU7XG5cbiAgaWYgKHN0cmVhbSBpbnN0YW5jZW9mIER1cGxleCkgdGhpcy5vYmplY3RNb2RlID0gdGhpcy5vYmplY3RNb2RlIHx8ICEhb3B0aW9ucy5yZWFkYWJsZU9iamVjdE1vZGU7XG5cbiAgLy8gdGhlIHBvaW50IGF0IHdoaWNoIGl0IHN0b3BzIGNhbGxpbmcgX3JlYWQoKSB0byBmaWxsIHRoZSBidWZmZXJcbiAgLy8gTm90ZTogMCBpcyBhIHZhbGlkIHZhbHVlLCBtZWFucyBcImRvbid0IGNhbGwgX3JlYWQgcHJlZW1wdGl2ZWx5IGV2ZXJcIlxuICB2YXIgaHdtID0gb3B0aW9ucy5oaWdoV2F0ZXJNYXJrO1xuICB2YXIgZGVmYXVsdEh3bSA9IHRoaXMub2JqZWN0TW9kZSA/IDE2IDogMTYgKiAxMDI0O1xuICB0aGlzLmhpZ2hXYXRlck1hcmsgPSBod20gfHwgaHdtID09PSAwID8gaHdtIDogZGVmYXVsdEh3bTtcblxuICAvLyBjYXN0IHRvIGludHMuXG4gIHRoaXMuaGlnaFdhdGVyTWFyayA9IE1hdGguZmxvb3IodGhpcy5oaWdoV2F0ZXJNYXJrKTtcblxuICAvLyBBIGxpbmtlZCBsaXN0IGlzIHVzZWQgdG8gc3RvcmUgZGF0YSBjaHVua3MgaW5zdGVhZCBvZiBhbiBhcnJheSBiZWNhdXNlIHRoZVxuICAvLyBsaW5rZWQgbGlzdCBjYW4gcmVtb3ZlIGVsZW1lbnRzIGZyb20gdGhlIGJlZ2lubmluZyBmYXN0ZXIgdGhhblxuICAvLyBhcnJheS5zaGlmdCgpXG4gIHRoaXMuYnVmZmVyID0gbmV3IEJ1ZmZlckxpc3QoKTtcbiAgdGhpcy5sZW5ndGggPSAwO1xuICB0aGlzLnBpcGVzID0gbnVsbDtcbiAgdGhpcy5waXBlc0NvdW50ID0gMDtcbiAgdGhpcy5mbG93aW5nID0gbnVsbDtcbiAgdGhpcy5lbmRlZCA9IGZhbHNlO1xuICB0aGlzLmVuZEVtaXR0ZWQgPSBmYWxzZTtcbiAgdGhpcy5yZWFkaW5nID0gZmFsc2U7XG5cbiAgLy8gYSBmbGFnIHRvIGJlIGFibGUgdG8gdGVsbCBpZiB0aGUgZXZlbnQgJ3JlYWRhYmxlJy8nZGF0YScgaXMgZW1pdHRlZFxuICAvLyBpbW1lZGlhdGVseSwgb3Igb24gYSBsYXRlciB0aWNrLiAgV2Ugc2V0IHRoaXMgdG8gdHJ1ZSBhdCBmaXJzdCwgYmVjYXVzZVxuICAvLyBhbnkgYWN0aW9ucyB0aGF0IHNob3VsZG4ndCBoYXBwZW4gdW50aWwgXCJsYXRlclwiIHNob3VsZCBnZW5lcmFsbHkgYWxzb1xuICAvLyBub3QgaGFwcGVuIGJlZm9yZSB0aGUgZmlyc3QgcmVhZCBjYWxsLlxuICB0aGlzLnN5bmMgPSB0cnVlO1xuXG4gIC8vIHdoZW5ldmVyIHdlIHJldHVybiBudWxsLCB0aGVuIHdlIHNldCBhIGZsYWcgdG8gc2F5XG4gIC8vIHRoYXQgd2UncmUgYXdhaXRpbmcgYSAncmVhZGFibGUnIGV2ZW50IGVtaXNzaW9uLlxuICB0aGlzLm5lZWRSZWFkYWJsZSA9IGZhbHNlO1xuICB0aGlzLmVtaXR0ZWRSZWFkYWJsZSA9IGZhbHNlO1xuICB0aGlzLnJlYWRhYmxlTGlzdGVuaW5nID0gZmFsc2U7XG4gIHRoaXMucmVzdW1lU2NoZWR1bGVkID0gZmFsc2U7XG5cbiAgLy8gaGFzIGl0IGJlZW4gZGVzdHJveWVkXG4gIHRoaXMuZGVzdHJveWVkID0gZmFsc2U7XG5cbiAgLy8gQ3J5cHRvIGlzIGtpbmQgb2Ygb2xkIGFuZCBjcnVzdHkuICBIaXN0b3JpY2FsbHksIGl0cyBkZWZhdWx0IHN0cmluZ1xuICAvLyBlbmNvZGluZyBpcyAnYmluYXJ5JyBzbyB3ZSBoYXZlIHRvIG1ha2UgdGhpcyBjb25maWd1cmFibGUuXG4gIC8vIEV2ZXJ5dGhpbmcgZWxzZSBpbiB0aGUgdW5pdmVyc2UgdXNlcyAndXRmOCcsIHRob3VnaC5cbiAgdGhpcy5kZWZhdWx0RW5jb2RpbmcgPSBvcHRpb25zLmRlZmF1bHRFbmNvZGluZyB8fCAndXRmOCc7XG5cbiAgLy8gdGhlIG51bWJlciBvZiB3cml0ZXJzIHRoYXQgYXJlIGF3YWl0aW5nIGEgZHJhaW4gZXZlbnQgaW4gLnBpcGUoKXNcbiAgdGhpcy5hd2FpdERyYWluID0gMDtcblxuICAvLyBpZiB0cnVlLCBhIG1heWJlUmVhZE1vcmUgaGFzIGJlZW4gc2NoZWR1bGVkXG4gIHRoaXMucmVhZGluZ01vcmUgPSBmYWxzZTtcblxuICB0aGlzLmRlY29kZXIgPSBudWxsO1xuICB0aGlzLmVuY29kaW5nID0gbnVsbDtcbiAgaWYgKG9wdGlvbnMuZW5jb2RpbmcpIHtcbiAgICBpZiAoIVN0cmluZ0RlY29kZXIpIFN0cmluZ0RlY29kZXIgPSByZXF1aXJlKCdzdHJpbmdfZGVjb2Rlci8nKS5TdHJpbmdEZWNvZGVyO1xuICAgIHRoaXMuZGVjb2RlciA9IG5ldyBTdHJpbmdEZWNvZGVyKG9wdGlvbnMuZW5jb2RpbmcpO1xuICAgIHRoaXMuZW5jb2RpbmcgPSBvcHRpb25zLmVuY29kaW5nO1xuICB9XG59XG5cbmZ1bmN0aW9uIFJlYWRhYmxlKG9wdGlvbnMpIHtcbiAgRHVwbGV4ID0gRHVwbGV4IHx8IHJlcXVpcmUoJy4vX3N0cmVhbV9kdXBsZXgnKTtcblxuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUmVhZGFibGUpKSByZXR1cm4gbmV3IFJlYWRhYmxlKG9wdGlvbnMpO1xuXG4gIHRoaXMuX3JlYWRhYmxlU3RhdGUgPSBuZXcgUmVhZGFibGVTdGF0ZShvcHRpb25zLCB0aGlzKTtcblxuICAvLyBsZWdhY3lcbiAgdGhpcy5yZWFkYWJsZSA9IHRydWU7XG5cbiAgaWYgKG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMucmVhZCA9PT0gJ2Z1bmN0aW9uJykgdGhpcy5fcmVhZCA9IG9wdGlvbnMucmVhZDtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5kZXN0cm95ID09PSAnZnVuY3Rpb24nKSB0aGlzLl9kZXN0cm95ID0gb3B0aW9ucy5kZXN0cm95O1xuICB9XG5cbiAgU3RyZWFtLmNhbGwodGhpcyk7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWFkYWJsZS5wcm90b3R5cGUsICdkZXN0cm95ZWQnLCB7XG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIC8vIHdlIGlnbm9yZSB0aGUgdmFsdWUgaWYgdGhlIHN0cmVhbVxuICAgIC8vIGhhcyBub3QgYmVlbiBpbml0aWFsaXplZCB5ZXRcbiAgICBpZiAoIXRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB0aGUgdXNlciBpcyBleHBsaWNpdGx5XG4gICAgLy8gbWFuYWdpbmcgZGVzdHJveWVkXG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB2YWx1ZTtcbiAgfVxufSk7XG5cblJlYWRhYmxlLnByb3RvdHlwZS5kZXN0cm95ID0gZGVzdHJveUltcGwuZGVzdHJveTtcblJlYWRhYmxlLnByb3RvdHlwZS5fdW5kZXN0cm95ID0gZGVzdHJveUltcGwudW5kZXN0cm95O1xuUmVhZGFibGUucHJvdG90eXBlLl9kZXN0cm95ID0gZnVuY3Rpb24gKGVyciwgY2IpIHtcbiAgdGhpcy5wdXNoKG51bGwpO1xuICBjYihlcnIpO1xufTtcblxuLy8gTWFudWFsbHkgc2hvdmUgc29tZXRoaW5nIGludG8gdGhlIHJlYWQoKSBidWZmZXIuXG4vLyBUaGlzIHJldHVybnMgdHJ1ZSBpZiB0aGUgaGlnaFdhdGVyTWFyayBoYXMgbm90IGJlZW4gaGl0IHlldCxcbi8vIHNpbWlsYXIgdG8gaG93IFdyaXRhYmxlLndyaXRlKCkgcmV0dXJucyB0cnVlIGlmIHlvdSBzaG91bGRcbi8vIHdyaXRlKCkgc29tZSBtb3JlLlxuUmVhZGFibGUucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nKSB7XG4gIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7XG4gIHZhciBza2lwQ2h1bmtDaGVjaztcblxuICBpZiAoIXN0YXRlLm9iamVjdE1vZGUpIHtcbiAgICBpZiAodHlwZW9mIGNodW5rID09PSAnc3RyaW5nJykge1xuICAgICAgZW5jb2RpbmcgPSBlbmNvZGluZyB8fCBzdGF0ZS5kZWZhdWx0RW5jb2Rpbmc7XG4gICAgICBpZiAoZW5jb2RpbmcgIT09IHN0YXRlLmVuY29kaW5nKSB7XG4gICAgICAgIGNodW5rID0gQnVmZmVyLmZyb20oY2h1bmssIGVuY29kaW5nKTtcbiAgICAgICAgZW5jb2RpbmcgPSAnJztcbiAgICAgIH1cbiAgICAgIHNraXBDaHVua0NoZWNrID0gdHJ1ZTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgc2tpcENodW5rQ2hlY2sgPSB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIHJlYWRhYmxlQWRkQ2h1bmsodGhpcywgY2h1bmssIGVuY29kaW5nLCBmYWxzZSwgc2tpcENodW5rQ2hlY2spO1xufTtcblxuLy8gVW5zaGlmdCBzaG91bGQgKmFsd2F5cyogYmUgc29tZXRoaW5nIGRpcmVjdGx5IG91dCBvZiByZWFkKClcblJlYWRhYmxlLnByb3RvdHlwZS51bnNoaWZ0ID0gZnVuY3Rpb24gKGNodW5rKSB7XG4gIHJldHVybiByZWFkYWJsZUFkZENodW5rKHRoaXMsIGNodW5rLCBudWxsLCB0cnVlLCBmYWxzZSk7XG59O1xuXG5mdW5jdGlvbiByZWFkYWJsZUFkZENodW5rKHN0cmVhbSwgY2h1bmssIGVuY29kaW5nLCBhZGRUb0Zyb250LCBza2lwQ2h1bmtDaGVjaykge1xuICB2YXIgc3RhdGUgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7XG4gIGlmIChjaHVuayA9PT0gbnVsbCkge1xuICAgIHN0YXRlLnJlYWRpbmcgPSBmYWxzZTtcbiAgICBvbkVvZkNodW5rKHN0cmVhbSwgc3RhdGUpO1xuICB9IGVsc2Uge1xuICAgIHZhciBlcjtcbiAgICBpZiAoIXNraXBDaHVua0NoZWNrKSBlciA9IGNodW5rSW52YWxpZChzdGF0ZSwgY2h1bmspO1xuICAgIGlmIChlcikge1xuICAgICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpO1xuICAgIH0gZWxzZSBpZiAoc3RhdGUub2JqZWN0TW9kZSB8fCBjaHVuayAmJiBjaHVuay5sZW5ndGggPiAwKSB7XG4gICAgICBpZiAodHlwZW9mIGNodW5rICE9PSAnc3RyaW5nJyAmJiAhc3RhdGUub2JqZWN0TW9kZSAmJiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoY2h1bmspICE9PSBCdWZmZXIucHJvdG90eXBlKSB7XG4gICAgICAgIGNodW5rID0gX3VpbnQ4QXJyYXlUb0J1ZmZlcihjaHVuayk7XG4gICAgICB9XG5cbiAgICAgIGlmIChhZGRUb0Zyb250KSB7XG4gICAgICAgIGlmIChzdGF0ZS5lbmRFbWl0dGVkKSBzdHJlYW0uZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ3N0cmVhbS51bnNoaWZ0KCkgYWZ0ZXIgZW5kIGV2ZW50JykpO2Vsc2UgYWRkQ2h1bmsoc3RyZWFtLCBzdGF0ZSwgY2h1bmssIHRydWUpO1xuICAgICAgfSBlbHNlIGlmIChzdGF0ZS5lbmRlZCkge1xuICAgICAgICBzdHJlYW0uZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ3N0cmVhbS5wdXNoKCkgYWZ0ZXIgRU9GJykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RhdGUucmVhZGluZyA9IGZhbHNlO1xuICAgICAgICBpZiAoc3RhdGUuZGVjb2RlciAmJiAhZW5jb2RpbmcpIHtcbiAgICAgICAgICBjaHVuayA9IHN0YXRlLmRlY29kZXIud3JpdGUoY2h1bmspO1xuICAgICAgICAgIGlmIChzdGF0ZS5vYmplY3RNb2RlIHx8IGNodW5rLmxlbmd0aCAhPT0gMCkgYWRkQ2h1bmsoc3RyZWFtLCBzdGF0ZSwgY2h1bmssIGZhbHNlKTtlbHNlIG1heWJlUmVhZE1vcmUoc3RyZWFtLCBzdGF0ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWRkQ2h1bmsoc3RyZWFtLCBzdGF0ZSwgY2h1bmssIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoIWFkZFRvRnJvbnQpIHtcbiAgICAgIHN0YXRlLnJlYWRpbmcgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmVlZE1vcmVEYXRhKHN0YXRlKTtcbn1cblxuZnVuY3Rpb24gYWRkQ2h1bmsoc3RyZWFtLCBzdGF0ZSwgY2h1bmssIGFkZFRvRnJvbnQpIHtcbiAgaWYgKHN0YXRlLmZsb3dpbmcgJiYgc3RhdGUubGVuZ3RoID09PSAwICYmICFzdGF0ZS5zeW5jKSB7XG4gICAgc3RyZWFtLmVtaXQoJ2RhdGEnLCBjaHVuayk7XG4gICAgc3RyZWFtLnJlYWQoMCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gdXBkYXRlIHRoZSBidWZmZXIgaW5mby5cbiAgICBzdGF0ZS5sZW5ndGggKz0gc3RhdGUub2JqZWN0TW9kZSA/IDEgOiBjaHVuay5sZW5ndGg7XG4gICAgaWYgKGFkZFRvRnJvbnQpIHN0YXRlLmJ1ZmZlci51bnNoaWZ0KGNodW5rKTtlbHNlIHN0YXRlLmJ1ZmZlci5wdXNoKGNodW5rKTtcblxuICAgIGlmIChzdGF0ZS5uZWVkUmVhZGFibGUpIGVtaXRSZWFkYWJsZShzdHJlYW0pO1xuICB9XG4gIG1heWJlUmVhZE1vcmUoc3RyZWFtLCBzdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNodW5rSW52YWxpZChzdGF0ZSwgY2h1bmspIHtcbiAgdmFyIGVyO1xuICBpZiAoIV9pc1VpbnQ4QXJyYXkoY2h1bmspICYmIHR5cGVvZiBjaHVuayAhPT0gJ3N0cmluZycgJiYgY2h1bmsgIT09IHVuZGVmaW5lZCAmJiAhc3RhdGUub2JqZWN0TW9kZSkge1xuICAgIGVyID0gbmV3IFR5cGVFcnJvcignSW52YWxpZCBub24tc3RyaW5nL2J1ZmZlciBjaHVuaycpO1xuICB9XG4gIHJldHVybiBlcjtcbn1cblxuLy8gaWYgaXQncyBwYXN0IHRoZSBoaWdoIHdhdGVyIG1hcmssIHdlIGNhbiBwdXNoIGluIHNvbWUgbW9yZS5cbi8vIEFsc28sIGlmIHdlIGhhdmUgbm8gZGF0YSB5ZXQsIHdlIGNhbiBzdGFuZCBzb21lXG4vLyBtb3JlIGJ5dGVzLiAgVGhpcyBpcyB0byB3b3JrIGFyb3VuZCBjYXNlcyB3aGVyZSBod209MCxcbi8vIHN1Y2ggYXMgdGhlIHJlcGwuICBBbHNvLCBpZiB0aGUgcHVzaCgpIHRyaWdnZXJlZCBhXG4vLyByZWFkYWJsZSBldmVudCwgYW5kIHRoZSB1c2VyIGNhbGxlZCByZWFkKGxhcmdlTnVtYmVyKSBzdWNoIHRoYXRcbi8vIG5lZWRSZWFkYWJsZSB3YXMgc2V0LCB0aGVuIHdlIG91Z2h0IHRvIHB1c2ggbW9yZSwgc28gdGhhdCBhbm90aGVyXG4vLyAncmVhZGFibGUnIGV2ZW50IHdpbGwgYmUgdHJpZ2dlcmVkLlxuZnVuY3Rpb24gbmVlZE1vcmVEYXRhKHN0YXRlKSB7XG4gIHJldHVybiAhc3RhdGUuZW5kZWQgJiYgKHN0YXRlLm5lZWRSZWFkYWJsZSB8fCBzdGF0ZS5sZW5ndGggPCBzdGF0ZS5oaWdoV2F0ZXJNYXJrIHx8IHN0YXRlLmxlbmd0aCA9PT0gMCk7XG59XG5cblJlYWRhYmxlLnByb3RvdHlwZS5pc1BhdXNlZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyA9PT0gZmFsc2U7XG59O1xuXG4vLyBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS5cblJlYWRhYmxlLnByb3RvdHlwZS5zZXRFbmNvZGluZyA9IGZ1bmN0aW9uIChlbmMpIHtcbiAgaWYgKCFTdHJpbmdEZWNvZGVyKSBTdHJpbmdEZWNvZGVyID0gcmVxdWlyZSgnc3RyaW5nX2RlY29kZXIvJykuU3RyaW5nRGVjb2RlcjtcbiAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZWNvZGVyID0gbmV3IFN0cmluZ0RlY29kZXIoZW5jKTtcbiAgdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmNvZGluZyA9IGVuYztcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vLyBEb24ndCByYWlzZSB0aGUgaHdtID4gOE1CXG52YXIgTUFYX0hXTSA9IDB4ODAwMDAwO1xuZnVuY3Rpb24gY29tcHV0ZU5ld0hpZ2hXYXRlck1hcmsobikge1xuICBpZiAobiA+PSBNQVhfSFdNKSB7XG4gICAgbiA9IE1BWF9IV007XG4gIH0gZWxzZSB7XG4gICAgLy8gR2V0IHRoZSBuZXh0IGhpZ2hlc3QgcG93ZXIgb2YgMiB0byBwcmV2ZW50IGluY3JlYXNpbmcgaHdtIGV4Y2Vzc2l2ZWx5IGluXG4gICAgLy8gdGlueSBhbW91bnRzXG4gICAgbi0tO1xuICAgIG4gfD0gbiA+Pj4gMTtcbiAgICBuIHw9IG4gPj4+IDI7XG4gICAgbiB8PSBuID4+PiA0O1xuICAgIG4gfD0gbiA+Pj4gODtcbiAgICBuIHw9IG4gPj4+IDE2O1xuICAgIG4rKztcbiAgfVxuICByZXR1cm4gbjtcbn1cblxuLy8gVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBiZSBpbmxpbmFibGUsIHNvIHBsZWFzZSB0YWtlIGNhcmUgd2hlbiBtYWtpbmdcbi8vIGNoYW5nZXMgdG8gdGhlIGZ1bmN0aW9uIGJvZHkuXG5mdW5jdGlvbiBob3dNdWNoVG9SZWFkKG4sIHN0YXRlKSB7XG4gIGlmIChuIDw9IDAgfHwgc3RhdGUubGVuZ3RoID09PSAwICYmIHN0YXRlLmVuZGVkKSByZXR1cm4gMDtcbiAgaWYgKHN0YXRlLm9iamVjdE1vZGUpIHJldHVybiAxO1xuICBpZiAobiAhPT0gbikge1xuICAgIC8vIE9ubHkgZmxvdyBvbmUgYnVmZmVyIGF0IGEgdGltZVxuICAgIGlmIChzdGF0ZS5mbG93aW5nICYmIHN0YXRlLmxlbmd0aCkgcmV0dXJuIHN0YXRlLmJ1ZmZlci5oZWFkLmRhdGEubGVuZ3RoO2Vsc2UgcmV0dXJuIHN0YXRlLmxlbmd0aDtcbiAgfVxuICAvLyBJZiB3ZSdyZSBhc2tpbmcgZm9yIG1vcmUgdGhhbiB0aGUgY3VycmVudCBod20sIHRoZW4gcmFpc2UgdGhlIGh3bS5cbiAgaWYgKG4gPiBzdGF0ZS5oaWdoV2F0ZXJNYXJrKSBzdGF0ZS5oaWdoV2F0ZXJNYXJrID0gY29tcHV0ZU5ld0hpZ2hXYXRlck1hcmsobik7XG4gIGlmIChuIDw9IHN0YXRlLmxlbmd0aCkgcmV0dXJuIG47XG4gIC8vIERvbid0IGhhdmUgZW5vdWdoXG4gIGlmICghc3RhdGUuZW5kZWQpIHtcbiAgICBzdGF0ZS5uZWVkUmVhZGFibGUgPSB0cnVlO1xuICAgIHJldHVybiAwO1xuICB9XG4gIHJldHVybiBzdGF0ZS5sZW5ndGg7XG59XG5cbi8vIHlvdSBjYW4gb3ZlcnJpZGUgZWl0aGVyIHRoaXMgbWV0aG9kLCBvciB0aGUgYXN5bmMgX3JlYWQobikgYmVsb3cuXG5SZWFkYWJsZS5wcm90b3R5cGUucmVhZCA9IGZ1bmN0aW9uIChuKSB7XG4gIGRlYnVnKCdyZWFkJywgbik7XG4gIG4gPSBwYXJzZUludChuLCAxMCk7XG4gIHZhciBzdGF0ZSA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7XG4gIHZhciBuT3JpZyA9IG47XG5cbiAgaWYgKG4gIT09IDApIHN0YXRlLmVtaXR0ZWRSZWFkYWJsZSA9IGZhbHNlO1xuXG4gIC8vIGlmIHdlJ3JlIGRvaW5nIHJlYWQoMCkgdG8gdHJpZ2dlciBhIHJlYWRhYmxlIGV2ZW50LCBidXQgd2VcbiAgLy8gYWxyZWFkeSBoYXZlIGEgYnVuY2ggb2YgZGF0YSBpbiB0aGUgYnVmZmVyLCB0aGVuIGp1c3QgdHJpZ2dlclxuICAvLyB0aGUgJ3JlYWRhYmxlJyBldmVudCBhbmQgbW92ZSBvbi5cbiAgaWYgKG4gPT09IDAgJiYgc3RhdGUubmVlZFJlYWRhYmxlICYmIChzdGF0ZS5sZW5ndGggPj0gc3RhdGUuaGlnaFdhdGVyTWFyayB8fCBzdGF0ZS5lbmRlZCkpIHtcbiAgICBkZWJ1ZygncmVhZDogZW1pdFJlYWRhYmxlJywgc3RhdGUubGVuZ3RoLCBzdGF0ZS5lbmRlZCk7XG4gICAgaWYgKHN0YXRlLmxlbmd0aCA9PT0gMCAmJiBzdGF0ZS5lbmRlZCkgZW5kUmVhZGFibGUodGhpcyk7ZWxzZSBlbWl0UmVhZGFibGUodGhpcyk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBuID0gaG93TXVjaFRvUmVhZChuLCBzdGF0ZSk7XG5cbiAgLy8gaWYgd2UndmUgZW5kZWQsIGFuZCB3ZSdyZSBub3cgY2xlYXIsIHRoZW4gZmluaXNoIGl0IHVwLlxuICBpZiAobiA9PT0gMCAmJiBzdGF0ZS5lbmRlZCkge1xuICAgIGlmIChzdGF0ZS5sZW5ndGggPT09IDApIGVuZFJlYWRhYmxlKHRoaXMpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLy8gQWxsIHRoZSBhY3R1YWwgY2h1bmsgZ2VuZXJhdGlvbiBsb2dpYyBuZWVkcyB0byBiZVxuICAvLyAqYmVsb3cqIHRoZSBjYWxsIHRvIF9yZWFkLiAgVGhlIHJlYXNvbiBpcyB0aGF0IGluIGNlcnRhaW5cbiAgLy8gc3ludGhldGljIHN0cmVhbSBjYXNlcywgc3VjaCBhcyBwYXNzdGhyb3VnaCBzdHJlYW1zLCBfcmVhZFxuICAvLyBtYXkgYmUgYSBjb21wbGV0ZWx5IHN5bmNocm9ub3VzIG9wZXJhdGlvbiB3aGljaCBtYXkgY2hhbmdlXG4gIC8vIHRoZSBzdGF0ZSBvZiB0aGUgcmVhZCBidWZmZXIsIHByb3ZpZGluZyBlbm91Z2ggZGF0YSB3aGVuXG4gIC8vIGJlZm9yZSB0aGVyZSB3YXMgKm5vdCogZW5vdWdoLlxuICAvL1xuICAvLyBTbywgdGhlIHN0ZXBzIGFyZTpcbiAgLy8gMS4gRmlndXJlIG91dCB3aGF0IHRoZSBzdGF0ZSBvZiB0aGluZ3Mgd2lsbCBiZSBhZnRlciB3ZSBkb1xuICAvLyBhIHJlYWQgZnJvbSB0aGUgYnVmZmVyLlxuICAvL1xuICAvLyAyLiBJZiB0aGF0IHJlc3VsdGluZyBzdGF0ZSB3aWxsIHRyaWdnZXIgYSBfcmVhZCwgdGhlbiBjYWxsIF9yZWFkLlxuICAvLyBOb3RlIHRoYXQgdGhpcyBtYXkgYmUgYXN5bmNocm9ub3VzLCBvciBzeW5jaHJvbm91cy4gIFllcywgaXQgaXNcbiAgLy8gZGVlcGx5IHVnbHkgdG8gd3JpdGUgQVBJcyB0aGlzIHdheSwgYnV0IHRoYXQgc3RpbGwgZG9lc24ndCBtZWFuXG4gIC8vIHRoYXQgdGhlIFJlYWRhYmxlIGNsYXNzIHNob3VsZCBiZWhhdmUgaW1wcm9wZXJseSwgYXMgc3RyZWFtcyBhcmVcbiAgLy8gZGVzaWduZWQgdG8gYmUgc3luYy9hc3luYyBhZ25vc3RpYy5cbiAgLy8gVGFrZSBub3RlIGlmIHRoZSBfcmVhZCBjYWxsIGlzIHN5bmMgb3IgYXN5bmMgKGllLCBpZiB0aGUgcmVhZCBjYWxsXG4gIC8vIGhhcyByZXR1cm5lZCB5ZXQpLCBzbyB0aGF0IHdlIGtub3cgd2hldGhlciBvciBub3QgaXQncyBzYWZlIHRvIGVtaXRcbiAgLy8gJ3JlYWRhYmxlJyBldGMuXG4gIC8vXG4gIC8vIDMuIEFjdHVhbGx5IHB1bGwgdGhlIHJlcXVlc3RlZCBjaHVua3Mgb3V0IG9mIHRoZSBidWZmZXIgYW5kIHJldHVybi5cblxuICAvLyBpZiB3ZSBuZWVkIGEgcmVhZGFibGUgZXZlbnQsIHRoZW4gd2UgbmVlZCB0byBkbyBzb21lIHJlYWRpbmcuXG4gIHZhciBkb1JlYWQgPSBzdGF0ZS5uZWVkUmVhZGFibGU7XG4gIGRlYnVnKCduZWVkIHJlYWRhYmxlJywgZG9SZWFkKTtcblxuICAvLyBpZiB3ZSBjdXJyZW50bHkgaGF2ZSBsZXNzIHRoYW4gdGhlIGhpZ2hXYXRlck1hcmssIHRoZW4gYWxzbyByZWFkIHNvbWVcbiAgaWYgKHN0YXRlLmxlbmd0aCA9PT0gMCB8fCBzdGF0ZS5sZW5ndGggLSBuIDwgc3RhdGUuaGlnaFdhdGVyTWFyaykge1xuICAgIGRvUmVhZCA9IHRydWU7XG4gICAgZGVidWcoJ2xlbmd0aCBsZXNzIHRoYW4gd2F0ZXJtYXJrJywgZG9SZWFkKTtcbiAgfVxuXG4gIC8vIGhvd2V2ZXIsIGlmIHdlJ3ZlIGVuZGVkLCB0aGVuIHRoZXJlJ3Mgbm8gcG9pbnQsIGFuZCBpZiB3ZSdyZSBhbHJlYWR5XG4gIC8vIHJlYWRpbmcsIHRoZW4gaXQncyB1bm5lY2Vzc2FyeS5cbiAgaWYgKHN0YXRlLmVuZGVkIHx8IHN0YXRlLnJlYWRpbmcpIHtcbiAgICBkb1JlYWQgPSBmYWxzZTtcbiAgICBkZWJ1ZygncmVhZGluZyBvciBlbmRlZCcsIGRvUmVhZCk7XG4gIH0gZWxzZSBpZiAoZG9SZWFkKSB7XG4gICAgZGVidWcoJ2RvIHJlYWQnKTtcbiAgICBzdGF0ZS5yZWFkaW5nID0gdHJ1ZTtcbiAgICBzdGF0ZS5zeW5jID0gdHJ1ZTtcbiAgICAvLyBpZiB0aGUgbGVuZ3RoIGlzIGN1cnJlbnRseSB6ZXJvLCB0aGVuIHdlICpuZWVkKiBhIHJlYWRhYmxlIGV2ZW50LlxuICAgIGlmIChzdGF0ZS5sZW5ndGggPT09IDApIHN0YXRlLm5lZWRSZWFkYWJsZSA9IHRydWU7XG4gICAgLy8gY2FsbCBpbnRlcm5hbCByZWFkIG1ldGhvZFxuICAgIHRoaXMuX3JlYWQoc3RhdGUuaGlnaFdhdGVyTWFyayk7XG4gICAgc3RhdGUuc3luYyA9IGZhbHNlO1xuICAgIC8vIElmIF9yZWFkIHB1c2hlZCBkYXRhIHN5bmNocm9ub3VzbHksIHRoZW4gYHJlYWRpbmdgIHdpbGwgYmUgZmFsc2UsXG4gICAgLy8gYW5kIHdlIG5lZWQgdG8gcmUtZXZhbHVhdGUgaG93IG11Y2ggZGF0YSB3ZSBjYW4gcmV0dXJuIHRvIHRoZSB1c2VyLlxuICAgIGlmICghc3RhdGUucmVhZGluZykgbiA9IGhvd011Y2hUb1JlYWQobk9yaWcsIHN0YXRlKTtcbiAgfVxuXG4gIHZhciByZXQ7XG4gIGlmIChuID4gMCkgcmV0ID0gZnJvbUxpc3Qobiwgc3RhdGUpO2Vsc2UgcmV0ID0gbnVsbDtcblxuICBpZiAocmV0ID09PSBudWxsKSB7XG4gICAgc3RhdGUubmVlZFJlYWRhYmxlID0gdHJ1ZTtcbiAgICBuID0gMDtcbiAgfSBlbHNlIHtcbiAgICBzdGF0ZS5sZW5ndGggLT0gbjtcbiAgfVxuXG4gIGlmIChzdGF0ZS5sZW5ndGggPT09IDApIHtcbiAgICAvLyBJZiB3ZSBoYXZlIG5vdGhpbmcgaW4gdGhlIGJ1ZmZlciwgdGhlbiB3ZSB3YW50IHRvIGtub3dcbiAgICAvLyBhcyBzb29uIGFzIHdlICpkbyogZ2V0IHNvbWV0aGluZyBpbnRvIHRoZSBidWZmZXIuXG4gICAgaWYgKCFzdGF0ZS5lbmRlZCkgc3RhdGUubmVlZFJlYWRhYmxlID0gdHJ1ZTtcblxuICAgIC8vIElmIHdlIHRyaWVkIHRvIHJlYWQoKSBwYXN0IHRoZSBFT0YsIHRoZW4gZW1pdCBlbmQgb24gdGhlIG5leHQgdGljay5cbiAgICBpZiAobk9yaWcgIT09IG4gJiYgc3RhdGUuZW5kZWQpIGVuZFJlYWRhYmxlKHRoaXMpO1xuICB9XG5cbiAgaWYgKHJldCAhPT0gbnVsbCkgdGhpcy5lbWl0KCdkYXRhJywgcmV0KTtcblxuICByZXR1cm4gcmV0O1xufTtcblxuZnVuY3Rpb24gb25Fb2ZDaHVuayhzdHJlYW0sIHN0YXRlKSB7XG4gIGlmIChzdGF0ZS5lbmRlZCkgcmV0dXJuO1xuICBpZiAoc3RhdGUuZGVjb2Rlcikge1xuICAgIHZhciBjaHVuayA9IHN0YXRlLmRlY29kZXIuZW5kKCk7XG4gICAgaWYgKGNodW5rICYmIGNodW5rLmxlbmd0aCkge1xuICAgICAgc3RhdGUuYnVmZmVyLnB1c2goY2h1bmspO1xuICAgICAgc3RhdGUubGVuZ3RoICs9IHN0YXRlLm9iamVjdE1vZGUgPyAxIDogY2h1bmsubGVuZ3RoO1xuICAgIH1cbiAgfVxuICBzdGF0ZS5lbmRlZCA9IHRydWU7XG5cbiAgLy8gZW1pdCAncmVhZGFibGUnIG5vdyB0byBtYWtlIHN1cmUgaXQgZ2V0cyBwaWNrZWQgdXAuXG4gIGVtaXRSZWFkYWJsZShzdHJlYW0pO1xufVxuXG4vLyBEb24ndCBlbWl0IHJlYWRhYmxlIHJpZ2h0IGF3YXkgaW4gc3luYyBtb2RlLCBiZWNhdXNlIHRoaXMgY2FuIHRyaWdnZXJcbi8vIGFub3RoZXIgcmVhZCgpIGNhbGwgPT4gc3RhY2sgb3ZlcmZsb3cuICBUaGlzIHdheSwgaXQgbWlnaHQgdHJpZ2dlclxuLy8gYSBuZXh0VGljayByZWN1cnNpb24gd2FybmluZywgYnV0IHRoYXQncyBub3Qgc28gYmFkLlxuZnVuY3Rpb24gZW1pdFJlYWRhYmxlKHN0cmVhbSkge1xuICB2YXIgc3RhdGUgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7XG4gIHN0YXRlLm5lZWRSZWFkYWJsZSA9IGZhbHNlO1xuICBpZiAoIXN0YXRlLmVtaXR0ZWRSZWFkYWJsZSkge1xuICAgIGRlYnVnKCdlbWl0UmVhZGFibGUnLCBzdGF0ZS5mbG93aW5nKTtcbiAgICBzdGF0ZS5lbWl0dGVkUmVhZGFibGUgPSB0cnVlO1xuICAgIGlmIChzdGF0ZS5zeW5jKSBwcm9jZXNzTmV4dFRpY2soZW1pdFJlYWRhYmxlXywgc3RyZWFtKTtlbHNlIGVtaXRSZWFkYWJsZV8oc3RyZWFtKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlbWl0UmVhZGFibGVfKHN0cmVhbSkge1xuICBkZWJ1ZygnZW1pdCByZWFkYWJsZScpO1xuICBzdHJlYW0uZW1pdCgncmVhZGFibGUnKTtcbiAgZmxvdyhzdHJlYW0pO1xufVxuXG4vLyBhdCB0aGlzIHBvaW50LCB0aGUgdXNlciBoYXMgcHJlc3VtYWJseSBzZWVuIHRoZSAncmVhZGFibGUnIGV2ZW50LFxuLy8gYW5kIGNhbGxlZCByZWFkKCkgdG8gY29uc3VtZSBzb21lIGRhdGEuICB0aGF0IG1heSBoYXZlIHRyaWdnZXJlZFxuLy8gaW4gdHVybiBhbm90aGVyIF9yZWFkKG4pIGNhbGwsIGluIHdoaWNoIGNhc2UgcmVhZGluZyA9IHRydWUgaWZcbi8vIGl0J3MgaW4gcHJvZ3Jlc3MuXG4vLyBIb3dldmVyLCBpZiB3ZSdyZSBub3QgZW5kZWQsIG9yIHJlYWRpbmcsIGFuZCB0aGUgbGVuZ3RoIDwgaHdtLFxuLy8gdGhlbiBnbyBhaGVhZCBhbmQgdHJ5IHRvIHJlYWQgc29tZSBtb3JlIHByZWVtcHRpdmVseS5cbmZ1bmN0aW9uIG1heWJlUmVhZE1vcmUoc3RyZWFtLCBzdGF0ZSkge1xuICBpZiAoIXN0YXRlLnJlYWRpbmdNb3JlKSB7XG4gICAgc3RhdGUucmVhZGluZ01vcmUgPSB0cnVlO1xuICAgIHByb2Nlc3NOZXh0VGljayhtYXliZVJlYWRNb3JlXywgc3RyZWFtLCBzdGF0ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbWF5YmVSZWFkTW9yZV8oc3RyZWFtLCBzdGF0ZSkge1xuICB2YXIgbGVuID0gc3RhdGUubGVuZ3RoO1xuICB3aGlsZSAoIXN0YXRlLnJlYWRpbmcgJiYgIXN0YXRlLmZsb3dpbmcgJiYgIXN0YXRlLmVuZGVkICYmIHN0YXRlLmxlbmd0aCA8IHN0YXRlLmhpZ2hXYXRlck1hcmspIHtcbiAgICBkZWJ1ZygnbWF5YmVSZWFkTW9yZSByZWFkIDAnKTtcbiAgICBzdHJlYW0ucmVhZCgwKTtcbiAgICBpZiAobGVuID09PSBzdGF0ZS5sZW5ndGgpXG4gICAgICAvLyBkaWRuJ3QgZ2V0IGFueSBkYXRhLCBzdG9wIHNwaW5uaW5nLlxuICAgICAgYnJlYWs7ZWxzZSBsZW4gPSBzdGF0ZS5sZW5ndGg7XG4gIH1cbiAgc3RhdGUucmVhZGluZ01vcmUgPSBmYWxzZTtcbn1cblxuLy8gYWJzdHJhY3QgbWV0aG9kLiAgdG8gYmUgb3ZlcnJpZGRlbiBpbiBzcGVjaWZpYyBpbXBsZW1lbnRhdGlvbiBjbGFzc2VzLlxuLy8gY2FsbCBjYihlciwgZGF0YSkgd2hlcmUgZGF0YSBpcyA8PSBuIGluIGxlbmd0aC5cbi8vIGZvciB2aXJ0dWFsIChub24tc3RyaW5nLCBub24tYnVmZmVyKSBzdHJlYW1zLCBcImxlbmd0aFwiIGlzIHNvbWV3aGF0XG4vLyBhcmJpdHJhcnksIGFuZCBwZXJoYXBzIG5vdCB2ZXJ5IG1lYW5pbmdmdWwuXG5SZWFkYWJsZS5wcm90b3R5cGUuX3JlYWQgPSBmdW5jdGlvbiAobikge1xuICB0aGlzLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKCdfcmVhZCgpIGlzIG5vdCBpbXBsZW1lbnRlZCcpKTtcbn07XG5cblJlYWRhYmxlLnByb3RvdHlwZS5waXBlID0gZnVuY3Rpb24gKGRlc3QsIHBpcGVPcHRzKSB7XG4gIHZhciBzcmMgPSB0aGlzO1xuICB2YXIgc3RhdGUgPSB0aGlzLl9yZWFkYWJsZVN0YXRlO1xuXG4gIHN3aXRjaCAoc3RhdGUucGlwZXNDb3VudCkge1xuICAgIGNhc2UgMDpcbiAgICAgIHN0YXRlLnBpcGVzID0gZGVzdDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMTpcbiAgICAgIHN0YXRlLnBpcGVzID0gW3N0YXRlLnBpcGVzLCBkZXN0XTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBzdGF0ZS5waXBlcy5wdXNoKGRlc3QpO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgc3RhdGUucGlwZXNDb3VudCArPSAxO1xuICBkZWJ1ZygncGlwZSBjb3VudD0lZCBvcHRzPSVqJywgc3RhdGUucGlwZXNDb3VudCwgcGlwZU9wdHMpO1xuXG4gIHZhciBkb0VuZCA9ICghcGlwZU9wdHMgfHwgcGlwZU9wdHMuZW5kICE9PSBmYWxzZSkgJiYgZGVzdCAhPT0gcHJvY2Vzcy5zdGRvdXQgJiYgZGVzdCAhPT0gcHJvY2Vzcy5zdGRlcnI7XG5cbiAgdmFyIGVuZEZuID0gZG9FbmQgPyBvbmVuZCA6IHVucGlwZTtcbiAgaWYgKHN0YXRlLmVuZEVtaXR0ZWQpIHByb2Nlc3NOZXh0VGljayhlbmRGbik7ZWxzZSBzcmMub25jZSgnZW5kJywgZW5kRm4pO1xuXG4gIGRlc3Qub24oJ3VucGlwZScsIG9udW5waXBlKTtcbiAgZnVuY3Rpb24gb251bnBpcGUocmVhZGFibGUsIHVucGlwZUluZm8pIHtcbiAgICBkZWJ1Zygnb251bnBpcGUnKTtcbiAgICBpZiAocmVhZGFibGUgPT09IHNyYykge1xuICAgICAgaWYgKHVucGlwZUluZm8gJiYgdW5waXBlSW5mby5oYXNVbnBpcGVkID09PSBmYWxzZSkge1xuICAgICAgICB1bnBpcGVJbmZvLmhhc1VucGlwZWQgPSB0cnVlO1xuICAgICAgICBjbGVhbnVwKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gb25lbmQoKSB7XG4gICAgZGVidWcoJ29uZW5kJyk7XG4gICAgZGVzdC5lbmQoKTtcbiAgfVxuXG4gIC8vIHdoZW4gdGhlIGRlc3QgZHJhaW5zLCBpdCByZWR1Y2VzIHRoZSBhd2FpdERyYWluIGNvdW50ZXJcbiAgLy8gb24gdGhlIHNvdXJjZS4gIFRoaXMgd291bGQgYmUgbW9yZSBlbGVnYW50IHdpdGggYSAub25jZSgpXG4gIC8vIGhhbmRsZXIgaW4gZmxvdygpLCBidXQgYWRkaW5nIGFuZCByZW1vdmluZyByZXBlYXRlZGx5IGlzXG4gIC8vIHRvbyBzbG93LlxuICB2YXIgb25kcmFpbiA9IHBpcGVPbkRyYWluKHNyYyk7XG4gIGRlc3Qub24oJ2RyYWluJywgb25kcmFpbik7XG5cbiAgdmFyIGNsZWFuZWRVcCA9IGZhbHNlO1xuICBmdW5jdGlvbiBjbGVhbnVwKCkge1xuICAgIGRlYnVnKCdjbGVhbnVwJyk7XG4gICAgLy8gY2xlYW51cCBldmVudCBoYW5kbGVycyBvbmNlIHRoZSBwaXBlIGlzIGJyb2tlblxuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Nsb3NlJywgb25jbG9zZSk7XG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignZmluaXNoJywgb25maW5pc2gpO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2RyYWluJywgb25kcmFpbik7XG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBvbmVycm9yKTtcbiAgICBkZXN0LnJlbW92ZUxpc3RlbmVyKCd1bnBpcGUnLCBvbnVucGlwZSk7XG4gICAgc3JjLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCBvbmVuZCk7XG4gICAgc3JjLnJlbW92ZUxpc3RlbmVyKCdlbmQnLCB1bnBpcGUpO1xuICAgIHNyYy5yZW1vdmVMaXN0ZW5lcignZGF0YScsIG9uZGF0YSk7XG5cbiAgICBjbGVhbmVkVXAgPSB0cnVlO1xuXG4gICAgLy8gaWYgdGhlIHJlYWRlciBpcyB3YWl0aW5nIGZvciBhIGRyYWluIGV2ZW50IGZyb20gdGhpc1xuICAgIC8vIHNwZWNpZmljIHdyaXRlciwgdGhlbiBpdCB3b3VsZCBjYXVzZSBpdCB0byBuZXZlciBzdGFydFxuICAgIC8vIGZsb3dpbmcgYWdhaW4uXG4gICAgLy8gU28sIGlmIHRoaXMgaXMgYXdhaXRpbmcgYSBkcmFpbiwgdGhlbiB3ZSBqdXN0IGNhbGwgaXQgbm93LlxuICAgIC8vIElmIHdlIGRvbid0IGtub3csIHRoZW4gYXNzdW1lIHRoYXQgd2UgYXJlIHdhaXRpbmcgZm9yIG9uZS5cbiAgICBpZiAoc3RhdGUuYXdhaXREcmFpbiAmJiAoIWRlc3QuX3dyaXRhYmxlU3RhdGUgfHwgZGVzdC5fd3JpdGFibGVTdGF0ZS5uZWVkRHJhaW4pKSBvbmRyYWluKCk7XG4gIH1cblxuICAvLyBJZiB0aGUgdXNlciBwdXNoZXMgbW9yZSBkYXRhIHdoaWxlIHdlJ3JlIHdyaXRpbmcgdG8gZGVzdCB0aGVuIHdlJ2xsIGVuZCB1cFxuICAvLyBpbiBvbmRhdGEgYWdhaW4uIEhvd2V2ZXIsIHdlIG9ubHkgd2FudCB0byBpbmNyZWFzZSBhd2FpdERyYWluIG9uY2UgYmVjYXVzZVxuICAvLyBkZXN0IHdpbGwgb25seSBlbWl0IG9uZSAnZHJhaW4nIGV2ZW50IGZvciB0aGUgbXVsdGlwbGUgd3JpdGVzLlxuICAvLyA9PiBJbnRyb2R1Y2UgYSBndWFyZCBvbiBpbmNyZWFzaW5nIGF3YWl0RHJhaW4uXG4gIHZhciBpbmNyZWFzZWRBd2FpdERyYWluID0gZmFsc2U7XG4gIHNyYy5vbignZGF0YScsIG9uZGF0YSk7XG4gIGZ1bmN0aW9uIG9uZGF0YShjaHVuaykge1xuICAgIGRlYnVnKCdvbmRhdGEnKTtcbiAgICBpbmNyZWFzZWRBd2FpdERyYWluID0gZmFsc2U7XG4gICAgdmFyIHJldCA9IGRlc3Qud3JpdGUoY2h1bmspO1xuICAgIGlmIChmYWxzZSA9PT0gcmV0ICYmICFpbmNyZWFzZWRBd2FpdERyYWluKSB7XG4gICAgICAvLyBJZiB0aGUgdXNlciB1bnBpcGVkIGR1cmluZyBgZGVzdC53cml0ZSgpYCwgaXQgaXMgcG9zc2libGVcbiAgICAgIC8vIHRvIGdldCBzdHVjayBpbiBhIHBlcm1hbmVudGx5IHBhdXNlZCBzdGF0ZSBpZiB0aGF0IHdyaXRlXG4gICAgICAvLyBhbHNvIHJldHVybmVkIGZhbHNlLlxuICAgICAgLy8gPT4gQ2hlY2sgd2hldGhlciBgZGVzdGAgaXMgc3RpbGwgYSBwaXBpbmcgZGVzdGluYXRpb24uXG4gICAgICBpZiAoKHN0YXRlLnBpcGVzQ291bnQgPT09IDEgJiYgc3RhdGUucGlwZXMgPT09IGRlc3QgfHwgc3RhdGUucGlwZXNDb3VudCA+IDEgJiYgaW5kZXhPZihzdGF0ZS5waXBlcywgZGVzdCkgIT09IC0xKSAmJiAhY2xlYW5lZFVwKSB7XG4gICAgICAgIGRlYnVnKCdmYWxzZSB3cml0ZSByZXNwb25zZSwgcGF1c2UnLCBzcmMuX3JlYWRhYmxlU3RhdGUuYXdhaXREcmFpbik7XG4gICAgICAgIHNyYy5fcmVhZGFibGVTdGF0ZS5hd2FpdERyYWluKys7XG4gICAgICAgIGluY3JlYXNlZEF3YWl0RHJhaW4gPSB0cnVlO1xuICAgICAgfVxuICAgICAgc3JjLnBhdXNlKCk7XG4gICAgfVxuICB9XG5cbiAgLy8gaWYgdGhlIGRlc3QgaGFzIGFuIGVycm9yLCB0aGVuIHN0b3AgcGlwaW5nIGludG8gaXQuXG4gIC8vIGhvd2V2ZXIsIGRvbid0IHN1cHByZXNzIHRoZSB0aHJvd2luZyBiZWhhdmlvciBmb3IgdGhpcy5cbiAgZnVuY3Rpb24gb25lcnJvcihlcikge1xuICAgIGRlYnVnKCdvbmVycm9yJywgZXIpO1xuICAgIHVucGlwZSgpO1xuICAgIGRlc3QucmVtb3ZlTGlzdGVuZXIoJ2Vycm9yJywgb25lcnJvcik7XG4gICAgaWYgKEVFbGlzdGVuZXJDb3VudChkZXN0LCAnZXJyb3InKSA9PT0gMCkgZGVzdC5lbWl0KCdlcnJvcicsIGVyKTtcbiAgfVxuXG4gIC8vIE1ha2Ugc3VyZSBvdXIgZXJyb3IgaGFuZGxlciBpcyBhdHRhY2hlZCBiZWZvcmUgdXNlcmxhbmQgb25lcy5cbiAgcHJlcGVuZExpc3RlbmVyKGRlc3QsICdlcnJvcicsIG9uZXJyb3IpO1xuXG4gIC8vIEJvdGggY2xvc2UgYW5kIGZpbmlzaCBzaG91bGQgdHJpZ2dlciB1bnBpcGUsIGJ1dCBvbmx5IG9uY2UuXG4gIGZ1bmN0aW9uIG9uY2xvc2UoKSB7XG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignZmluaXNoJywgb25maW5pc2gpO1xuICAgIHVucGlwZSgpO1xuICB9XG4gIGRlc3Qub25jZSgnY2xvc2UnLCBvbmNsb3NlKTtcbiAgZnVuY3Rpb24gb25maW5pc2goKSB7XG4gICAgZGVidWcoJ29uZmluaXNoJyk7XG4gICAgZGVzdC5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbmNsb3NlKTtcbiAgICB1bnBpcGUoKTtcbiAgfVxuICBkZXN0Lm9uY2UoJ2ZpbmlzaCcsIG9uZmluaXNoKTtcblxuICBmdW5jdGlvbiB1bnBpcGUoKSB7XG4gICAgZGVidWcoJ3VucGlwZScpO1xuICAgIHNyYy51bnBpcGUoZGVzdCk7XG4gIH1cblxuICAvLyB0ZWxsIHRoZSBkZXN0IHRoYXQgaXQncyBiZWluZyBwaXBlZCB0b1xuICBkZXN0LmVtaXQoJ3BpcGUnLCBzcmMpO1xuXG4gIC8vIHN0YXJ0IHRoZSBmbG93IGlmIGl0IGhhc24ndCBiZWVuIHN0YXJ0ZWQgYWxyZWFkeS5cbiAgaWYgKCFzdGF0ZS5mbG93aW5nKSB7XG4gICAgZGVidWcoJ3BpcGUgcmVzdW1lJyk7XG4gICAgc3JjLnJlc3VtZSgpO1xuICB9XG5cbiAgcmV0dXJuIGRlc3Q7XG59O1xuXG5mdW5jdGlvbiBwaXBlT25EcmFpbihzcmMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc3RhdGUgPSBzcmMuX3JlYWRhYmxlU3RhdGU7XG4gICAgZGVidWcoJ3BpcGVPbkRyYWluJywgc3RhdGUuYXdhaXREcmFpbik7XG4gICAgaWYgKHN0YXRlLmF3YWl0RHJhaW4pIHN0YXRlLmF3YWl0RHJhaW4tLTtcbiAgICBpZiAoc3RhdGUuYXdhaXREcmFpbiA9PT0gMCAmJiBFRWxpc3RlbmVyQ291bnQoc3JjLCAnZGF0YScpKSB7XG4gICAgICBzdGF0ZS5mbG93aW5nID0gdHJ1ZTtcbiAgICAgIGZsb3coc3JjKTtcbiAgICB9XG4gIH07XG59XG5cblJlYWRhYmxlLnByb3RvdHlwZS51bnBpcGUgPSBmdW5jdGlvbiAoZGVzdCkge1xuICB2YXIgc3RhdGUgPSB0aGlzLl9yZWFkYWJsZVN0YXRlO1xuICB2YXIgdW5waXBlSW5mbyA9IHsgaGFzVW5waXBlZDogZmFsc2UgfTtcblxuICAvLyBpZiB3ZSdyZSBub3QgcGlwaW5nIGFueXdoZXJlLCB0aGVuIGRvIG5vdGhpbmcuXG4gIGlmIChzdGF0ZS5waXBlc0NvdW50ID09PSAwKSByZXR1cm4gdGhpcztcblxuICAvLyBqdXN0IG9uZSBkZXN0aW5hdGlvbi4gIG1vc3QgY29tbW9uIGNhc2UuXG4gIGlmIChzdGF0ZS5waXBlc0NvdW50ID09PSAxKSB7XG4gICAgLy8gcGFzc2VkIGluIG9uZSwgYnV0IGl0J3Mgbm90IHRoZSByaWdodCBvbmUuXG4gICAgaWYgKGRlc3QgJiYgZGVzdCAhPT0gc3RhdGUucGlwZXMpIHJldHVybiB0aGlzO1xuXG4gICAgaWYgKCFkZXN0KSBkZXN0ID0gc3RhdGUucGlwZXM7XG5cbiAgICAvLyBnb3QgYSBtYXRjaC5cbiAgICBzdGF0ZS5waXBlcyA9IG51bGw7XG4gICAgc3RhdGUucGlwZXNDb3VudCA9IDA7XG4gICAgc3RhdGUuZmxvd2luZyA9IGZhbHNlO1xuICAgIGlmIChkZXN0KSBkZXN0LmVtaXQoJ3VucGlwZScsIHRoaXMsIHVucGlwZUluZm8pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gc2xvdyBjYXNlLiBtdWx0aXBsZSBwaXBlIGRlc3RpbmF0aW9ucy5cblxuICBpZiAoIWRlc3QpIHtcbiAgICAvLyByZW1vdmUgYWxsLlxuICAgIHZhciBkZXN0cyA9IHN0YXRlLnBpcGVzO1xuICAgIHZhciBsZW4gPSBzdGF0ZS5waXBlc0NvdW50O1xuICAgIHN0YXRlLnBpcGVzID0gbnVsbDtcbiAgICBzdGF0ZS5waXBlc0NvdW50ID0gMDtcbiAgICBzdGF0ZS5mbG93aW5nID0gZmFsc2U7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBkZXN0c1tpXS5lbWl0KCd1bnBpcGUnLCB0aGlzLCB1bnBpcGVJbmZvKTtcbiAgICB9cmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyB0cnkgdG8gZmluZCB0aGUgcmlnaHQgb25lLlxuICB2YXIgaW5kZXggPSBpbmRleE9mKHN0YXRlLnBpcGVzLCBkZXN0KTtcbiAgaWYgKGluZGV4ID09PSAtMSkgcmV0dXJuIHRoaXM7XG5cbiAgc3RhdGUucGlwZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgc3RhdGUucGlwZXNDb3VudCAtPSAxO1xuICBpZiAoc3RhdGUucGlwZXNDb3VudCA9PT0gMSkgc3RhdGUucGlwZXMgPSBzdGF0ZS5waXBlc1swXTtcblxuICBkZXN0LmVtaXQoJ3VucGlwZScsIHRoaXMsIHVucGlwZUluZm8pO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLy8gc2V0IHVwIGRhdGEgZXZlbnRzIGlmIHRoZXkgYXJlIGFza2VkIGZvclxuLy8gRW5zdXJlIHJlYWRhYmxlIGxpc3RlbmVycyBldmVudHVhbGx5IGdldCBzb21ldGhpbmdcblJlYWRhYmxlLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uIChldiwgZm4pIHtcbiAgdmFyIHJlcyA9IFN0cmVhbS5wcm90b3R5cGUub24uY2FsbCh0aGlzLCBldiwgZm4pO1xuXG4gIGlmIChldiA9PT0gJ2RhdGEnKSB7XG4gICAgLy8gU3RhcnQgZmxvd2luZyBvbiBuZXh0IHRpY2sgaWYgc3RyZWFtIGlzbid0IGV4cGxpY2l0bHkgcGF1c2VkXG4gICAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyAhPT0gZmFsc2UpIHRoaXMucmVzdW1lKCk7XG4gIH0gZWxzZSBpZiAoZXYgPT09ICdyZWFkYWJsZScpIHtcbiAgICB2YXIgc3RhdGUgPSB0aGlzLl9yZWFkYWJsZVN0YXRlO1xuICAgIGlmICghc3RhdGUuZW5kRW1pdHRlZCAmJiAhc3RhdGUucmVhZGFibGVMaXN0ZW5pbmcpIHtcbiAgICAgIHN0YXRlLnJlYWRhYmxlTGlzdGVuaW5nID0gc3RhdGUubmVlZFJlYWRhYmxlID0gdHJ1ZTtcbiAgICAgIHN0YXRlLmVtaXR0ZWRSZWFkYWJsZSA9IGZhbHNlO1xuICAgICAgaWYgKCFzdGF0ZS5yZWFkaW5nKSB7XG4gICAgICAgIHByb2Nlc3NOZXh0VGljayhuUmVhZGluZ05leHRUaWNrLCB0aGlzKTtcbiAgICAgIH0gZWxzZSBpZiAoc3RhdGUubGVuZ3RoKSB7XG4gICAgICAgIGVtaXRSZWFkYWJsZSh0aGlzKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzO1xufTtcblJlYWRhYmxlLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IFJlYWRhYmxlLnByb3RvdHlwZS5vbjtcblxuZnVuY3Rpb24gblJlYWRpbmdOZXh0VGljayhzZWxmKSB7XG4gIGRlYnVnKCdyZWFkYWJsZSBuZXh0dGljayByZWFkIDAnKTtcbiAgc2VsZi5yZWFkKDApO1xufVxuXG4vLyBwYXVzZSgpIGFuZCByZXN1bWUoKSBhcmUgcmVtbmFudHMgb2YgdGhlIGxlZ2FjeSByZWFkYWJsZSBzdHJlYW0gQVBJXG4vLyBJZiB0aGUgdXNlciB1c2VzIHRoZW0sIHRoZW4gc3dpdGNoIGludG8gb2xkIG1vZGUuXG5SZWFkYWJsZS5wcm90b3R5cGUucmVzdW1lID0gZnVuY3Rpb24gKCkge1xuICB2YXIgc3RhdGUgPSB0aGlzLl9yZWFkYWJsZVN0YXRlO1xuICBpZiAoIXN0YXRlLmZsb3dpbmcpIHtcbiAgICBkZWJ1ZygncmVzdW1lJyk7XG4gICAgc3RhdGUuZmxvd2luZyA9IHRydWU7XG4gICAgcmVzdW1lKHRoaXMsIHN0YXRlKTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG5cbmZ1bmN0aW9uIHJlc3VtZShzdHJlYW0sIHN0YXRlKSB7XG4gIGlmICghc3RhdGUucmVzdW1lU2NoZWR1bGVkKSB7XG4gICAgc3RhdGUucmVzdW1lU2NoZWR1bGVkID0gdHJ1ZTtcbiAgICBwcm9jZXNzTmV4dFRpY2socmVzdW1lXywgc3RyZWFtLCBzdGF0ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzdW1lXyhzdHJlYW0sIHN0YXRlKSB7XG4gIGlmICghc3RhdGUucmVhZGluZykge1xuICAgIGRlYnVnKCdyZXN1bWUgcmVhZCAwJyk7XG4gICAgc3RyZWFtLnJlYWQoMCk7XG4gIH1cblxuICBzdGF0ZS5yZXN1bWVTY2hlZHVsZWQgPSBmYWxzZTtcbiAgc3RhdGUuYXdhaXREcmFpbiA9IDA7XG4gIHN0cmVhbS5lbWl0KCdyZXN1bWUnKTtcbiAgZmxvdyhzdHJlYW0pO1xuICBpZiAoc3RhdGUuZmxvd2luZyAmJiAhc3RhdGUucmVhZGluZykgc3RyZWFtLnJlYWQoMCk7XG59XG5cblJlYWRhYmxlLnByb3RvdHlwZS5wYXVzZSA9IGZ1bmN0aW9uICgpIHtcbiAgZGVidWcoJ2NhbGwgcGF1c2UgZmxvd2luZz0laicsIHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyk7XG4gIGlmIChmYWxzZSAhPT0gdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nKSB7XG4gICAgZGVidWcoJ3BhdXNlJyk7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nID0gZmFsc2U7XG4gICAgdGhpcy5lbWl0KCdwYXVzZScpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufTtcblxuZnVuY3Rpb24gZmxvdyhzdHJlYW0pIHtcbiAgdmFyIHN0YXRlID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlO1xuICBkZWJ1ZygnZmxvdycsIHN0YXRlLmZsb3dpbmcpO1xuICB3aGlsZSAoc3RhdGUuZmxvd2luZyAmJiBzdHJlYW0ucmVhZCgpICE9PSBudWxsKSB7fVxufVxuXG4vLyB3cmFwIGFuIG9sZC1zdHlsZSBzdHJlYW0gYXMgdGhlIGFzeW5jIGRhdGEgc291cmNlLlxuLy8gVGhpcyBpcyAqbm90KiBwYXJ0IG9mIHRoZSByZWFkYWJsZSBzdHJlYW0gaW50ZXJmYWNlLlxuLy8gSXQgaXMgYW4gdWdseSB1bmZvcnR1bmF0ZSBtZXNzIG9mIGhpc3RvcnkuXG5SZWFkYWJsZS5wcm90b3R5cGUud3JhcCA9IGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgdmFyIHN0YXRlID0gdGhpcy5fcmVhZGFibGVTdGF0ZTtcbiAgdmFyIHBhdXNlZCA9IGZhbHNlO1xuXG4gIHZhciBzZWxmID0gdGhpcztcbiAgc3RyZWFtLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgZGVidWcoJ3dyYXBwZWQgZW5kJyk7XG4gICAgaWYgKHN0YXRlLmRlY29kZXIgJiYgIXN0YXRlLmVuZGVkKSB7XG4gICAgICB2YXIgY2h1bmsgPSBzdGF0ZS5kZWNvZGVyLmVuZCgpO1xuICAgICAgaWYgKGNodW5rICYmIGNodW5rLmxlbmd0aCkgc2VsZi5wdXNoKGNodW5rKTtcbiAgICB9XG5cbiAgICBzZWxmLnB1c2gobnVsbCk7XG4gIH0pO1xuXG4gIHN0cmVhbS5vbignZGF0YScsIGZ1bmN0aW9uIChjaHVuaykge1xuICAgIGRlYnVnKCd3cmFwcGVkIGRhdGEnKTtcbiAgICBpZiAoc3RhdGUuZGVjb2RlcikgY2h1bmsgPSBzdGF0ZS5kZWNvZGVyLndyaXRlKGNodW5rKTtcblxuICAgIC8vIGRvbid0IHNraXAgb3ZlciBmYWxzeSB2YWx1ZXMgaW4gb2JqZWN0TW9kZVxuICAgIGlmIChzdGF0ZS5vYmplY3RNb2RlICYmIChjaHVuayA9PT0gbnVsbCB8fCBjaHVuayA9PT0gdW5kZWZpbmVkKSkgcmV0dXJuO2Vsc2UgaWYgKCFzdGF0ZS5vYmplY3RNb2RlICYmICghY2h1bmsgfHwgIWNodW5rLmxlbmd0aCkpIHJldHVybjtcblxuICAgIHZhciByZXQgPSBzZWxmLnB1c2goY2h1bmspO1xuICAgIGlmICghcmV0KSB7XG4gICAgICBwYXVzZWQgPSB0cnVlO1xuICAgICAgc3RyZWFtLnBhdXNlKCk7XG4gICAgfVxuICB9KTtcblxuICAvLyBwcm94eSBhbGwgdGhlIG90aGVyIG1ldGhvZHMuXG4gIC8vIGltcG9ydGFudCB3aGVuIHdyYXBwaW5nIGZpbHRlcnMgYW5kIGR1cGxleGVzLlxuICBmb3IgKHZhciBpIGluIHN0cmVhbSkge1xuICAgIGlmICh0aGlzW2ldID09PSB1bmRlZmluZWQgJiYgdHlwZW9mIHN0cmVhbVtpXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhpc1tpXSA9IGZ1bmN0aW9uIChtZXRob2QpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gc3RyZWFtW21ldGhvZF0uYXBwbHkoc3RyZWFtLCBhcmd1bWVudHMpO1xuICAgICAgICB9O1xuICAgICAgfShpKTtcbiAgICB9XG4gIH1cblxuICAvLyBwcm94eSBjZXJ0YWluIGltcG9ydGFudCBldmVudHMuXG4gIGZvciAodmFyIG4gPSAwOyBuIDwga1Byb3h5RXZlbnRzLmxlbmd0aDsgbisrKSB7XG4gICAgc3RyZWFtLm9uKGtQcm94eUV2ZW50c1tuXSwgc2VsZi5lbWl0LmJpbmQoc2VsZiwga1Byb3h5RXZlbnRzW25dKSk7XG4gIH1cblxuICAvLyB3aGVuIHdlIHRyeSB0byBjb25zdW1lIHNvbWUgbW9yZSBieXRlcywgc2ltcGx5IHVucGF1c2UgdGhlXG4gIC8vIHVuZGVybHlpbmcgc3RyZWFtLlxuICBzZWxmLl9yZWFkID0gZnVuY3Rpb24gKG4pIHtcbiAgICBkZWJ1Zygnd3JhcHBlZCBfcmVhZCcsIG4pO1xuICAgIGlmIChwYXVzZWQpIHtcbiAgICAgIHBhdXNlZCA9IGZhbHNlO1xuICAgICAgc3RyZWFtLnJlc3VtZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gc2VsZjtcbn07XG5cbi8vIGV4cG9zZWQgZm9yIHRlc3RpbmcgcHVycG9zZXMgb25seS5cblJlYWRhYmxlLl9mcm9tTGlzdCA9IGZyb21MaXN0O1xuXG4vLyBQbHVjayBvZmYgbiBieXRlcyBmcm9tIGFuIGFycmF5IG9mIGJ1ZmZlcnMuXG4vLyBMZW5ndGggaXMgdGhlIGNvbWJpbmVkIGxlbmd0aHMgb2YgYWxsIHRoZSBidWZmZXJzIGluIHRoZSBsaXN0LlxuLy8gVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBiZSBpbmxpbmFibGUsIHNvIHBsZWFzZSB0YWtlIGNhcmUgd2hlbiBtYWtpbmdcbi8vIGNoYW5nZXMgdG8gdGhlIGZ1bmN0aW9uIGJvZHkuXG5mdW5jdGlvbiBmcm9tTGlzdChuLCBzdGF0ZSkge1xuICAvLyBub3RoaW5nIGJ1ZmZlcmVkXG4gIGlmIChzdGF0ZS5sZW5ndGggPT09IDApIHJldHVybiBudWxsO1xuXG4gIHZhciByZXQ7XG4gIGlmIChzdGF0ZS5vYmplY3RNb2RlKSByZXQgPSBzdGF0ZS5idWZmZXIuc2hpZnQoKTtlbHNlIGlmICghbiB8fCBuID49IHN0YXRlLmxlbmd0aCkge1xuICAgIC8vIHJlYWQgaXQgYWxsLCB0cnVuY2F0ZSB0aGUgbGlzdFxuICAgIGlmIChzdGF0ZS5kZWNvZGVyKSByZXQgPSBzdGF0ZS5idWZmZXIuam9pbignJyk7ZWxzZSBpZiAoc3RhdGUuYnVmZmVyLmxlbmd0aCA9PT0gMSkgcmV0ID0gc3RhdGUuYnVmZmVyLmhlYWQuZGF0YTtlbHNlIHJldCA9IHN0YXRlLmJ1ZmZlci5jb25jYXQoc3RhdGUubGVuZ3RoKTtcbiAgICBzdGF0ZS5idWZmZXIuY2xlYXIoKTtcbiAgfSBlbHNlIHtcbiAgICAvLyByZWFkIHBhcnQgb2YgbGlzdFxuICAgIHJldCA9IGZyb21MaXN0UGFydGlhbChuLCBzdGF0ZS5idWZmZXIsIHN0YXRlLmRlY29kZXIpO1xuICB9XG5cbiAgcmV0dXJuIHJldDtcbn1cblxuLy8gRXh0cmFjdHMgb25seSBlbm91Z2ggYnVmZmVyZWQgZGF0YSB0byBzYXRpc2Z5IHRoZSBhbW91bnQgcmVxdWVzdGVkLlxuLy8gVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBiZSBpbmxpbmFibGUsIHNvIHBsZWFzZSB0YWtlIGNhcmUgd2hlbiBtYWtpbmdcbi8vIGNoYW5nZXMgdG8gdGhlIGZ1bmN0aW9uIGJvZHkuXG5mdW5jdGlvbiBmcm9tTGlzdFBhcnRpYWwobiwgbGlzdCwgaGFzU3RyaW5ncykge1xuICB2YXIgcmV0O1xuICBpZiAobiA8IGxpc3QuaGVhZC5kYXRhLmxlbmd0aCkge1xuICAgIC8vIHNsaWNlIGlzIHRoZSBzYW1lIGZvciBidWZmZXJzIGFuZCBzdHJpbmdzXG4gICAgcmV0ID0gbGlzdC5oZWFkLmRhdGEuc2xpY2UoMCwgbik7XG4gICAgbGlzdC5oZWFkLmRhdGEgPSBsaXN0LmhlYWQuZGF0YS5zbGljZShuKTtcbiAgfSBlbHNlIGlmIChuID09PSBsaXN0LmhlYWQuZGF0YS5sZW5ndGgpIHtcbiAgICAvLyBmaXJzdCBjaHVuayBpcyBhIHBlcmZlY3QgbWF0Y2hcbiAgICByZXQgPSBsaXN0LnNoaWZ0KCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gcmVzdWx0IHNwYW5zIG1vcmUgdGhhbiBvbmUgYnVmZmVyXG4gICAgcmV0ID0gaGFzU3RyaW5ncyA/IGNvcHlGcm9tQnVmZmVyU3RyaW5nKG4sIGxpc3QpIDogY29weUZyb21CdWZmZXIobiwgbGlzdCk7XG4gIH1cbiAgcmV0dXJuIHJldDtcbn1cblxuLy8gQ29waWVzIGEgc3BlY2lmaWVkIGFtb3VudCBvZiBjaGFyYWN0ZXJzIGZyb20gdGhlIGxpc3Qgb2YgYnVmZmVyZWQgZGF0YVxuLy8gY2h1bmtzLlxuLy8gVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBiZSBpbmxpbmFibGUsIHNvIHBsZWFzZSB0YWtlIGNhcmUgd2hlbiBtYWtpbmdcbi8vIGNoYW5nZXMgdG8gdGhlIGZ1bmN0aW9uIGJvZHkuXG5mdW5jdGlvbiBjb3B5RnJvbUJ1ZmZlclN0cmluZyhuLCBsaXN0KSB7XG4gIHZhciBwID0gbGlzdC5oZWFkO1xuICB2YXIgYyA9IDE7XG4gIHZhciByZXQgPSBwLmRhdGE7XG4gIG4gLT0gcmV0Lmxlbmd0aDtcbiAgd2hpbGUgKHAgPSBwLm5leHQpIHtcbiAgICB2YXIgc3RyID0gcC5kYXRhO1xuICAgIHZhciBuYiA9IG4gPiBzdHIubGVuZ3RoID8gc3RyLmxlbmd0aCA6IG47XG4gICAgaWYgKG5iID09PSBzdHIubGVuZ3RoKSByZXQgKz0gc3RyO2Vsc2UgcmV0ICs9IHN0ci5zbGljZSgwLCBuKTtcbiAgICBuIC09IG5iO1xuICAgIGlmIChuID09PSAwKSB7XG4gICAgICBpZiAobmIgPT09IHN0ci5sZW5ndGgpIHtcbiAgICAgICAgKytjO1xuICAgICAgICBpZiAocC5uZXh0KSBsaXN0LmhlYWQgPSBwLm5leHQ7ZWxzZSBsaXN0LmhlYWQgPSBsaXN0LnRhaWwgPSBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGlzdC5oZWFkID0gcDtcbiAgICAgICAgcC5kYXRhID0gc3RyLnNsaWNlKG5iKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICArK2M7XG4gIH1cbiAgbGlzdC5sZW5ndGggLT0gYztcbiAgcmV0dXJuIHJldDtcbn1cblxuLy8gQ29waWVzIGEgc3BlY2lmaWVkIGFtb3VudCBvZiBieXRlcyBmcm9tIHRoZSBsaXN0IG9mIGJ1ZmZlcmVkIGRhdGEgY2h1bmtzLlxuLy8gVGhpcyBmdW5jdGlvbiBpcyBkZXNpZ25lZCB0byBiZSBpbmxpbmFibGUsIHNvIHBsZWFzZSB0YWtlIGNhcmUgd2hlbiBtYWtpbmdcbi8vIGNoYW5nZXMgdG8gdGhlIGZ1bmN0aW9uIGJvZHkuXG5mdW5jdGlvbiBjb3B5RnJvbUJ1ZmZlcihuLCBsaXN0KSB7XG4gIHZhciByZXQgPSBCdWZmZXIuYWxsb2NVbnNhZmUobik7XG4gIHZhciBwID0gbGlzdC5oZWFkO1xuICB2YXIgYyA9IDE7XG4gIHAuZGF0YS5jb3B5KHJldCk7XG4gIG4gLT0gcC5kYXRhLmxlbmd0aDtcbiAgd2hpbGUgKHAgPSBwLm5leHQpIHtcbiAgICB2YXIgYnVmID0gcC5kYXRhO1xuICAgIHZhciBuYiA9IG4gPiBidWYubGVuZ3RoID8gYnVmLmxlbmd0aCA6IG47XG4gICAgYnVmLmNvcHkocmV0LCByZXQubGVuZ3RoIC0gbiwgMCwgbmIpO1xuICAgIG4gLT0gbmI7XG4gICAgaWYgKG4gPT09IDApIHtcbiAgICAgIGlmIChuYiA9PT0gYnVmLmxlbmd0aCkge1xuICAgICAgICArK2M7XG4gICAgICAgIGlmIChwLm5leHQpIGxpc3QuaGVhZCA9IHAubmV4dDtlbHNlIGxpc3QuaGVhZCA9IGxpc3QudGFpbCA9IG51bGw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsaXN0LmhlYWQgPSBwO1xuICAgICAgICBwLmRhdGEgPSBidWYuc2xpY2UobmIpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgfVxuICAgICsrYztcbiAgfVxuICBsaXN0Lmxlbmd0aCAtPSBjO1xuICByZXR1cm4gcmV0O1xufVxuXG5mdW5jdGlvbiBlbmRSZWFkYWJsZShzdHJlYW0pIHtcbiAgdmFyIHN0YXRlID0gc3RyZWFtLl9yZWFkYWJsZVN0YXRlO1xuXG4gIC8vIElmIHdlIGdldCBoZXJlIGJlZm9yZSBjb25zdW1pbmcgYWxsIHRoZSBieXRlcywgdGhlbiB0aGF0IGlzIGFcbiAgLy8gYnVnIGluIG5vZGUuICBTaG91bGQgbmV2ZXIgaGFwcGVuLlxuICBpZiAoc3RhdGUubGVuZ3RoID4gMCkgdGhyb3cgbmV3IEVycm9yKCdcImVuZFJlYWRhYmxlKClcIiBjYWxsZWQgb24gbm9uLWVtcHR5IHN0cmVhbScpO1xuXG4gIGlmICghc3RhdGUuZW5kRW1pdHRlZCkge1xuICAgIHN0YXRlLmVuZGVkID0gdHJ1ZTtcbiAgICBwcm9jZXNzTmV4dFRpY2soZW5kUmVhZGFibGVOVCwgc3RhdGUsIHN0cmVhbSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW5kUmVhZGFibGVOVChzdGF0ZSwgc3RyZWFtKSB7XG4gIC8vIENoZWNrIHRoYXQgd2UgZGlkbid0IGdldCBvbmUgbGFzdCB1bnNoaWZ0LlxuICBpZiAoIXN0YXRlLmVuZEVtaXR0ZWQgJiYgc3RhdGUubGVuZ3RoID09PSAwKSB7XG4gICAgc3RhdGUuZW5kRW1pdHRlZCA9IHRydWU7XG4gICAgc3RyZWFtLnJlYWRhYmxlID0gZmFsc2U7XG4gICAgc3RyZWFtLmVtaXQoJ2VuZCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGZvckVhY2goeHMsIGYpIHtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSB4cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBmKHhzW2ldLCBpKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbmRleE9mKHhzLCB4KSB7XG4gIGZvciAodmFyIGkgPSAwLCBsID0geHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgaWYgKHhzW2ldID09PSB4KSByZXR1cm4gaTtcbiAgfVxuICByZXR1cm4gLTE7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzXG4vLyBtb2R1bGUgaWQgPSAxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkge1xuICB0aGlzLl9ldmVudHMgPSB0aGlzLl9ldmVudHMgfHwge307XG4gIHRoaXMuX21heExpc3RlbmVycyA9IHRoaXMuX21heExpc3RlbmVycyB8fCB1bmRlZmluZWQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50RW1pdHRlcjtcblxuLy8gQmFja3dhcmRzLWNvbXBhdCB3aXRoIG5vZGUgMC4xMC54XG5FdmVudEVtaXR0ZXIuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9ldmVudHMgPSB1bmRlZmluZWQ7XG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnMgPSB1bmRlZmluZWQ7XG5cbi8vIEJ5IGRlZmF1bHQgRXZlbnRFbWl0dGVycyB3aWxsIHByaW50IGEgd2FybmluZyBpZiBtb3JlIHRoYW4gMTAgbGlzdGVuZXJzIGFyZVxuLy8gYWRkZWQgdG8gaXQuIFRoaXMgaXMgYSB1c2VmdWwgZGVmYXVsdCB3aGljaCBoZWxwcyBmaW5kaW5nIG1lbW9yeSBsZWFrcy5cbkV2ZW50RW1pdHRlci5kZWZhdWx0TWF4TGlzdGVuZXJzID0gMTA7XG5cbi8vIE9idmlvdXNseSBub3QgYWxsIEVtaXR0ZXJzIHNob3VsZCBiZSBsaW1pdGVkIHRvIDEwLiBUaGlzIGZ1bmN0aW9uIGFsbG93c1xuLy8gdGhhdCB0byBiZSBpbmNyZWFzZWQuIFNldCB0byB6ZXJvIGZvciB1bmxpbWl0ZWQuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnNldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uKG4pIHtcbiAgaWYgKCFpc051bWJlcihuKSB8fCBuIDwgMCB8fCBpc05hTihuKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ24gbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpO1xuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSBuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIGVyLCBoYW5kbGVyLCBsZW4sIGFyZ3MsIGksIGxpc3RlbmVycztcblxuICBpZiAoIXRoaXMuX2V2ZW50cylcbiAgICB0aGlzLl9ldmVudHMgPSB7fTtcblxuICAvLyBJZiB0aGVyZSBpcyBubyAnZXJyb3InIGV2ZW50IGxpc3RlbmVyIHRoZW4gdGhyb3cuXG4gIGlmICh0eXBlID09PSAnZXJyb3InKSB7XG4gICAgaWYgKCF0aGlzLl9ldmVudHMuZXJyb3IgfHxcbiAgICAgICAgKGlzT2JqZWN0KHRoaXMuX2V2ZW50cy5lcnJvcikgJiYgIXRoaXMuX2V2ZW50cy5lcnJvci5sZW5ndGgpKSB7XG4gICAgICBlciA9IGFyZ3VtZW50c1sxXTtcbiAgICAgIGlmIChlciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHRocm93IGVyOyAvLyBVbmhhbmRsZWQgJ2Vycm9yJyBldmVudFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQXQgbGVhc3QgZ2l2ZSBzb21lIGtpbmQgb2YgY29udGV4dCB0byB0aGUgdXNlclxuICAgICAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdVbmNhdWdodCwgdW5zcGVjaWZpZWQgXCJlcnJvclwiIGV2ZW50LiAoJyArIGVyICsgJyknKTtcbiAgICAgICAgZXJyLmNvbnRleHQgPSBlcjtcbiAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGhhbmRsZXIgPSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgaWYgKGlzVW5kZWZpbmVkKGhhbmRsZXIpKVxuICAgIHJldHVybiBmYWxzZTtcblxuICBpZiAoaXNGdW5jdGlvbihoYW5kbGVyKSkge1xuICAgIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgLy8gZmFzdCBjYXNlc1xuICAgICAgY2FzZSAxOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAyOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcywgYXJndW1lbnRzWzFdKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDM6XG4gICAgICAgIGhhbmRsZXIuY2FsbCh0aGlzLCBhcmd1bWVudHNbMV0sIGFyZ3VtZW50c1syXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgLy8gc2xvd2VyXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICAgICAgaGFuZGxlci5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoaXNPYmplY3QoaGFuZGxlcikpIHtcbiAgICBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICBsaXN0ZW5lcnMgPSBoYW5kbGVyLnNsaWNlKCk7XG4gICAgbGVuID0gbGlzdGVuZXJzLmxlbmd0aDtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspXG4gICAgICBsaXN0ZW5lcnNbaV0uYXBwbHkodGhpcywgYXJncyk7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuYWRkTGlzdGVuZXIgPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICB2YXIgbTtcblxuICBpZiAoIWlzRnVuY3Rpb24obGlzdGVuZXIpKVxuICAgIHRocm93IFR5cGVFcnJvcignbGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHMpXG4gICAgdGhpcy5fZXZlbnRzID0ge307XG5cbiAgLy8gVG8gYXZvaWQgcmVjdXJzaW9uIGluIHRoZSBjYXNlIHRoYXQgdHlwZSA9PT0gXCJuZXdMaXN0ZW5lclwiISBCZWZvcmVcbiAgLy8gYWRkaW5nIGl0IHRvIHRoZSBsaXN0ZW5lcnMsIGZpcnN0IGVtaXQgXCJuZXdMaXN0ZW5lclwiLlxuICBpZiAodGhpcy5fZXZlbnRzLm5ld0xpc3RlbmVyKVxuICAgIHRoaXMuZW1pdCgnbmV3TGlzdGVuZXInLCB0eXBlLFxuICAgICAgICAgICAgICBpc0Z1bmN0aW9uKGxpc3RlbmVyLmxpc3RlbmVyKSA/XG4gICAgICAgICAgICAgIGxpc3RlbmVyLmxpc3RlbmVyIDogbGlzdGVuZXIpO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzW3R5cGVdKVxuICAgIC8vIE9wdGltaXplIHRoZSBjYXNlIG9mIG9uZSBsaXN0ZW5lci4gRG9uJ3QgbmVlZCB0aGUgZXh0cmEgYXJyYXkgb2JqZWN0LlxuICAgIHRoaXMuX2V2ZW50c1t0eXBlXSA9IGxpc3RlbmVyO1xuICBlbHNlIGlmIChpc09iamVjdCh0aGlzLl9ldmVudHNbdHlwZV0pKVxuICAgIC8vIElmIHdlJ3ZlIGFscmVhZHkgZ290IGFuIGFycmF5LCBqdXN0IGFwcGVuZC5cbiAgICB0aGlzLl9ldmVudHNbdHlwZV0ucHVzaChsaXN0ZW5lcik7XG4gIGVsc2VcbiAgICAvLyBBZGRpbmcgdGhlIHNlY29uZCBlbGVtZW50LCBuZWVkIHRvIGNoYW5nZSB0byBhcnJheS5cbiAgICB0aGlzLl9ldmVudHNbdHlwZV0gPSBbdGhpcy5fZXZlbnRzW3R5cGVdLCBsaXN0ZW5lcl07XG5cbiAgLy8gQ2hlY2sgZm9yIGxpc3RlbmVyIGxlYWtcbiAgaWYgKGlzT2JqZWN0KHRoaXMuX2V2ZW50c1t0eXBlXSkgJiYgIXRoaXMuX2V2ZW50c1t0eXBlXS53YXJuZWQpIHtcbiAgICBpZiAoIWlzVW5kZWZpbmVkKHRoaXMuX21heExpc3RlbmVycykpIHtcbiAgICAgIG0gPSB0aGlzLl9tYXhMaXN0ZW5lcnM7XG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSBFdmVudEVtaXR0ZXIuZGVmYXVsdE1heExpc3RlbmVycztcbiAgICB9XG5cbiAgICBpZiAobSAmJiBtID4gMCAmJiB0aGlzLl9ldmVudHNbdHlwZV0ubGVuZ3RoID4gbSkge1xuICAgICAgdGhpcy5fZXZlbnRzW3R5cGVdLndhcm5lZCA9IHRydWU7XG4gICAgICBjb25zb2xlLmVycm9yKCcobm9kZSkgd2FybmluZzogcG9zc2libGUgRXZlbnRFbWl0dGVyIG1lbW9yeSAnICtcbiAgICAgICAgICAgICAgICAgICAgJ2xlYWsgZGV0ZWN0ZWQuICVkIGxpc3RlbmVycyBhZGRlZC4gJyArXG4gICAgICAgICAgICAgICAgICAgICdVc2UgZW1pdHRlci5zZXRNYXhMaXN0ZW5lcnMoKSB0byBpbmNyZWFzZSBsaW1pdC4nLFxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9ldmVudHNbdHlwZV0ubGVuZ3RoKTtcbiAgICAgIGlmICh0eXBlb2YgY29uc29sZS50cmFjZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAvLyBub3Qgc3VwcG9ydGVkIGluIElFIDEwXG4gICAgICAgIGNvbnNvbGUudHJhY2UoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub24gPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uY2UgPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICBpZiAoIWlzRnVuY3Rpb24obGlzdGVuZXIpKVxuICAgIHRocm93IFR5cGVFcnJvcignbGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG5cbiAgdmFyIGZpcmVkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gZygpIHtcbiAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGcpO1xuXG4gICAgaWYgKCFmaXJlZCkge1xuICAgICAgZmlyZWQgPSB0cnVlO1xuICAgICAgbGlzdGVuZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG4gIH1cblxuICBnLmxpc3RlbmVyID0gbGlzdGVuZXI7XG4gIHRoaXMub24odHlwZSwgZyk7XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vLyBlbWl0cyBhICdyZW1vdmVMaXN0ZW5lcicgZXZlbnQgaWZmIHRoZSBsaXN0ZW5lciB3YXMgcmVtb3ZlZFxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7XG4gIHZhciBsaXN0LCBwb3NpdGlvbiwgbGVuZ3RoLCBpO1xuXG4gIGlmICghaXNGdW5jdGlvbihsaXN0ZW5lcikpXG4gICAgdGhyb3cgVHlwZUVycm9yKCdsaXN0ZW5lciBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcblxuICBpZiAoIXRoaXMuX2V2ZW50cyB8fCAhdGhpcy5fZXZlbnRzW3R5cGVdKVxuICAgIHJldHVybiB0aGlzO1xuXG4gIGxpc3QgPSB0aGlzLl9ldmVudHNbdHlwZV07XG4gIGxlbmd0aCA9IGxpc3QubGVuZ3RoO1xuICBwb3NpdGlvbiA9IC0xO1xuXG4gIGlmIChsaXN0ID09PSBsaXN0ZW5lciB8fFxuICAgICAgKGlzRnVuY3Rpb24obGlzdC5saXN0ZW5lcikgJiYgbGlzdC5saXN0ZW5lciA9PT0gbGlzdGVuZXIpKSB7XG4gICAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTtcbiAgICBpZiAodGhpcy5fZXZlbnRzLnJlbW92ZUxpc3RlbmVyKVxuICAgICAgdGhpcy5lbWl0KCdyZW1vdmVMaXN0ZW5lcicsIHR5cGUsIGxpc3RlbmVyKTtcblxuICB9IGVsc2UgaWYgKGlzT2JqZWN0KGxpc3QpKSB7XG4gICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gPiAwOykge1xuICAgICAgaWYgKGxpc3RbaV0gPT09IGxpc3RlbmVyIHx8XG4gICAgICAgICAgKGxpc3RbaV0ubGlzdGVuZXIgJiYgbGlzdFtpXS5saXN0ZW5lciA9PT0gbGlzdGVuZXIpKSB7XG4gICAgICAgIHBvc2l0aW9uID0gaTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHBvc2l0aW9uIDwgMClcbiAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgaWYgKGxpc3QubGVuZ3RoID09PSAxKSB7XG4gICAgICBsaXN0Lmxlbmd0aCA9IDA7XG4gICAgICBkZWxldGUgdGhpcy5fZXZlbnRzW3R5cGVdO1xuICAgIH0gZWxzZSB7XG4gICAgICBsaXN0LnNwbGljZShwb3NpdGlvbiwgMSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lcilcbiAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBsaXN0ZW5lcik7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzID0gZnVuY3Rpb24odHlwZSkge1xuICB2YXIga2V5LCBsaXN0ZW5lcnM7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHMpXG4gICAgcmV0dXJuIHRoaXM7XG5cbiAgLy8gbm90IGxpc3RlbmluZyBmb3IgcmVtb3ZlTGlzdGVuZXIsIG5vIG5lZWQgdG8gZW1pdFxuICBpZiAoIXRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lcikge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKVxuICAgICAgdGhpcy5fZXZlbnRzID0ge307XG4gICAgZWxzZSBpZiAodGhpcy5fZXZlbnRzW3R5cGVdKVxuICAgICAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIGVtaXQgcmVtb3ZlTGlzdGVuZXIgZm9yIGFsbCBsaXN0ZW5lcnMgb24gYWxsIGV2ZW50c1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgIGZvciAoa2V5IGluIHRoaXMuX2V2ZW50cykge1xuICAgICAgaWYgKGtleSA9PT0gJ3JlbW92ZUxpc3RlbmVyJykgY29udGludWU7XG4gICAgICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhrZXkpO1xuICAgIH1cbiAgICB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygncmVtb3ZlTGlzdGVuZXInKTtcbiAgICB0aGlzLl9ldmVudHMgPSB7fTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50c1t0eXBlXTtcblxuICBpZiAoaXNGdW5jdGlvbihsaXN0ZW5lcnMpKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcnMpO1xuICB9IGVsc2UgaWYgKGxpc3RlbmVycykge1xuICAgIC8vIExJRk8gb3JkZXJcbiAgICB3aGlsZSAobGlzdGVuZXJzLmxlbmd0aClcbiAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzW2xpc3RlbmVycy5sZW5ndGggLSAxXSk7XG4gIH1cbiAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTtcblxuICByZXR1cm4gdGhpcztcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJzID0gZnVuY3Rpb24odHlwZSkge1xuICB2YXIgcmV0O1xuICBpZiAoIXRoaXMuX2V2ZW50cyB8fCAhdGhpcy5fZXZlbnRzW3R5cGVdKVxuICAgIHJldCA9IFtdO1xuICBlbHNlIGlmIChpc0Z1bmN0aW9uKHRoaXMuX2V2ZW50c1t0eXBlXSkpXG4gICAgcmV0ID0gW3RoaXMuX2V2ZW50c1t0eXBlXV07XG4gIGVsc2VcbiAgICByZXQgPSB0aGlzLl9ldmVudHNbdHlwZV0uc2xpY2UoKTtcbiAgcmV0dXJuIHJldDtcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJDb3VudCA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgaWYgKHRoaXMuX2V2ZW50cykge1xuICAgIHZhciBldmxpc3RlbmVyID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuXG4gICAgaWYgKGlzRnVuY3Rpb24oZXZsaXN0ZW5lcikpXG4gICAgICByZXR1cm4gMTtcbiAgICBlbHNlIGlmIChldmxpc3RlbmVyKVxuICAgICAgcmV0dXJuIGV2bGlzdGVuZXIubGVuZ3RoO1xuICB9XG4gIHJldHVybiAwO1xufTtcblxuRXZlbnRFbWl0dGVyLmxpc3RlbmVyQ291bnQgPSBmdW5jdGlvbihlbWl0dGVyLCB0eXBlKSB7XG4gIHJldHVybiBlbWl0dGVyLmxpc3RlbmVyQ291bnQodHlwZSk7XG59O1xuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gaXNOdW1iZXIoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnbnVtYmVyJztcbn1cblxuZnVuY3Rpb24gaXNPYmplY3QoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG59XG5cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09PSB2b2lkIDA7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9ldmVudHMvZXZlbnRzLmpzXG4vLyBtb2R1bGUgaWQgPSAxOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdHJlYW0tYnJvd3Nlci5qc1xuLy8gbW9kdWxlIGlkID0gMTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG52YXIgcHJvY2Vzc05leHRUaWNrID0gcmVxdWlyZSgncHJvY2Vzcy1uZXh0aWNrLWFyZ3MnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vLyB1bmRvY3VtZW50ZWQgY2IoKSBBUEksIG5lZWRlZCBmb3IgY29yZSwgbm90IGZvciBwdWJsaWMgQVBJXG5mdW5jdGlvbiBkZXN0cm95KGVyciwgY2IpIHtcbiAgdmFyIF90aGlzID0gdGhpcztcblxuICB2YXIgcmVhZGFibGVEZXN0cm95ZWQgPSB0aGlzLl9yZWFkYWJsZVN0YXRlICYmIHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkO1xuICB2YXIgd3JpdGFibGVEZXN0cm95ZWQgPSB0aGlzLl93cml0YWJsZVN0YXRlICYmIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO1xuXG4gIGlmIChyZWFkYWJsZURlc3Ryb3llZCB8fCB3cml0YWJsZURlc3Ryb3llZCkge1xuICAgIGlmIChjYikge1xuICAgICAgY2IoZXJyKTtcbiAgICB9IGVsc2UgaWYgKGVyciAmJiAoIXRoaXMuX3dyaXRhYmxlU3RhdGUgfHwgIXRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKSkge1xuICAgICAgcHJvY2Vzc05leHRUaWNrKGVtaXRFcnJvck5ULCB0aGlzLCBlcnIpO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyB3ZSBzZXQgZGVzdHJveWVkIHRvIHRydWUgYmVmb3JlIGZpcmluZyBlcnJvciBjYWxsYmFja3MgaW4gb3JkZXJcbiAgLy8gdG8gbWFrZSBpdCByZS1lbnRyYW5jZSBzYWZlIGluIGNhc2UgZGVzdHJveSgpIGlzIGNhbGxlZCB3aXRoaW4gY2FsbGJhY2tzXG5cbiAgaWYgKHRoaXMuX3JlYWRhYmxlU3RhdGUpIHtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCA9IHRydWU7XG4gIH1cblxuICAvLyBpZiB0aGlzIGlzIGEgZHVwbGV4IHN0cmVhbSBtYXJrIHRoZSB3cml0YWJsZSBwYXJ0IGFzIGRlc3Ryb3llZCBhcyB3ZWxsXG4gIGlmICh0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQgPSB0cnVlO1xuICB9XG5cbiAgdGhpcy5fZGVzdHJveShlcnIgfHwgbnVsbCwgZnVuY3Rpb24gKGVycikge1xuICAgIGlmICghY2IgJiYgZXJyKSB7XG4gICAgICBwcm9jZXNzTmV4dFRpY2soZW1pdEVycm9yTlQsIF90aGlzLCBlcnIpO1xuICAgICAgaWYgKF90aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgICAgIF90aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCA9IHRydWU7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjYikge1xuICAgICAgY2IoZXJyKTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiB1bmRlc3Ryb3koKSB7XG4gIGlmICh0aGlzLl9yZWFkYWJsZVN0YXRlKSB7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLnJlYWRpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRFbWl0dGVkID0gZmFsc2U7XG4gIH1cblxuICBpZiAodGhpcy5fd3JpdGFibGVTdGF0ZSkge1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nID0gZmFsc2U7XG4gICAgdGhpcy5fd3JpdGFibGVTdGF0ZS5maW5pc2hlZCA9IGZhbHNlO1xuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW1pdEVycm9yTlQoc2VsZiwgZXJyKSB7XG4gIHNlbGYuZW1pdCgnZXJyb3InLCBlcnIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZGVzdHJveTogZGVzdHJveSxcbiAgdW5kZXN0cm95OiB1bmRlc3Ryb3lcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3kuanNcbi8vIG1vZHVsZSBpZCA9IDIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyBBIGJpdCBzaW1wbGVyIHRoYW4gcmVhZGFibGUgc3RyZWFtcy5cbi8vIEltcGxlbWVudCBhbiBhc3luYyAuX3dyaXRlKGNodW5rLCBlbmNvZGluZywgY2IpLCBhbmQgaXQnbGwgaGFuZGxlIGFsbFxuLy8gdGhlIGRyYWluIGV2ZW50IGVtaXNzaW9uIGFuZCBidWZmZXJpbmcuXG5cbid1c2Ugc3RyaWN0JztcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cblxudmFyIHByb2Nlc3NOZXh0VGljayA9IHJlcXVpcmUoJ3Byb2Nlc3MtbmV4dGljay1hcmdzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxubW9kdWxlLmV4cG9ydHMgPSBXcml0YWJsZTtcblxuLyogPHJlcGxhY2VtZW50PiAqL1xuZnVuY3Rpb24gV3JpdGVSZXEoY2h1bmssIGVuY29kaW5nLCBjYikge1xuICB0aGlzLmNodW5rID0gY2h1bms7XG4gIHRoaXMuZW5jb2RpbmcgPSBlbmNvZGluZztcbiAgdGhpcy5jYWxsYmFjayA9IGNiO1xuICB0aGlzLm5leHQgPSBudWxsO1xufVxuXG4vLyBJdCBzZWVtcyBhIGxpbmtlZCBsaXN0IGJ1dCBpdCBpcyBub3Rcbi8vIHRoZXJlIHdpbGwgYmUgb25seSAyIG9mIHRoZXNlIGZvciBlYWNoIHN0cmVhbVxuZnVuY3Rpb24gQ29ya2VkUmVxdWVzdChzdGF0ZSkge1xuICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gIHRoaXMubmV4dCA9IG51bGw7XG4gIHRoaXMuZW50cnkgPSBudWxsO1xuICB0aGlzLmZpbmlzaCA9IGZ1bmN0aW9uICgpIHtcbiAgICBvbkNvcmtlZEZpbmlzaChfdGhpcywgc3RhdGUpO1xuICB9O1xufVxuLyogPC9yZXBsYWNlbWVudD4gKi9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBhc3luY1dyaXRlID0gIXByb2Nlc3MuYnJvd3NlciAmJiBbJ3YwLjEwJywgJ3YwLjkuJ10uaW5kZXhPZihwcm9jZXNzLnZlcnNpb24uc2xpY2UoMCwgNSkpID4gLTEgPyBzZXRJbW1lZGlhdGUgOiBwcm9jZXNzTmV4dFRpY2s7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBEdXBsZXg7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuV3JpdGFibGUuV3JpdGFibGVTdGF0ZSA9IFdyaXRhYmxlU3RhdGU7XG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpO1xudXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciBpbnRlcm5hbFV0aWwgPSB7XG4gIGRlcHJlY2F0ZTogcmVxdWlyZSgndXRpbC1kZXByZWNhdGUnKVxufTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIFN0cmVhbSA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvc3RyZWFtcy9zdHJlYW0nKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG4vKjxyZXBsYWNlbWVudD4qL1xudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyO1xudmFyIE91clVpbnQ4QXJyYXkgPSBnbG9iYWwuVWludDhBcnJheSB8fCBmdW5jdGlvbiAoKSB7fTtcbmZ1bmN0aW9uIF91aW50OEFycmF5VG9CdWZmZXIoY2h1bmspIHtcbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGNodW5rKTtcbn1cbmZ1bmN0aW9uIF9pc1VpbnQ4QXJyYXkob2JqKSB7XG4gIHJldHVybiBCdWZmZXIuaXNCdWZmZXIob2JqKSB8fCBvYmogaW5zdGFuY2VvZiBPdXJVaW50OEFycmF5O1xufVxuLyo8L3JlcGxhY2VtZW50PiovXG5cbnZhciBkZXN0cm95SW1wbCA9IHJlcXVpcmUoJy4vaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95Jyk7XG5cbnV0aWwuaW5oZXJpdHMoV3JpdGFibGUsIFN0cmVhbSk7XG5cbmZ1bmN0aW9uIG5vcCgpIHt9XG5cbmZ1bmN0aW9uIFdyaXRhYmxlU3RhdGUob3B0aW9ucywgc3RyZWFtKSB7XG4gIER1cGxleCA9IER1cGxleCB8fCByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgLy8gb2JqZWN0IHN0cmVhbSBmbGFnIHRvIGluZGljYXRlIHdoZXRoZXIgb3Igbm90IHRoaXMgc3RyZWFtXG4gIC8vIGNvbnRhaW5zIGJ1ZmZlcnMgb3Igb2JqZWN0cy5cbiAgdGhpcy5vYmplY3RNb2RlID0gISFvcHRpb25zLm9iamVjdE1vZGU7XG5cbiAgaWYgKHN0cmVhbSBpbnN0YW5jZW9mIER1cGxleCkgdGhpcy5vYmplY3RNb2RlID0gdGhpcy5vYmplY3RNb2RlIHx8ICEhb3B0aW9ucy53cml0YWJsZU9iamVjdE1vZGU7XG5cbiAgLy8gdGhlIHBvaW50IGF0IHdoaWNoIHdyaXRlKCkgc3RhcnRzIHJldHVybmluZyBmYWxzZVxuICAvLyBOb3RlOiAwIGlzIGEgdmFsaWQgdmFsdWUsIG1lYW5zIHRoYXQgd2UgYWx3YXlzIHJldHVybiBmYWxzZSBpZlxuICAvLyB0aGUgZW50aXJlIGJ1ZmZlciBpcyBub3QgZmx1c2hlZCBpbW1lZGlhdGVseSBvbiB3cml0ZSgpXG4gIHZhciBod20gPSBvcHRpb25zLmhpZ2hXYXRlck1hcms7XG4gIHZhciBkZWZhdWx0SHdtID0gdGhpcy5vYmplY3RNb2RlID8gMTYgOiAxNiAqIDEwMjQ7XG4gIHRoaXMuaGlnaFdhdGVyTWFyayA9IGh3bSB8fCBod20gPT09IDAgPyBod20gOiBkZWZhdWx0SHdtO1xuXG4gIC8vIGNhc3QgdG8gaW50cy5cbiAgdGhpcy5oaWdoV2F0ZXJNYXJrID0gTWF0aC5mbG9vcih0aGlzLmhpZ2hXYXRlck1hcmspO1xuXG4gIC8vIGlmIF9maW5hbCBoYXMgYmVlbiBjYWxsZWRcbiAgdGhpcy5maW5hbENhbGxlZCA9IGZhbHNlO1xuXG4gIC8vIGRyYWluIGV2ZW50IGZsYWcuXG4gIHRoaXMubmVlZERyYWluID0gZmFsc2U7XG4gIC8vIGF0IHRoZSBzdGFydCBvZiBjYWxsaW5nIGVuZCgpXG4gIHRoaXMuZW5kaW5nID0gZmFsc2U7XG4gIC8vIHdoZW4gZW5kKCkgaGFzIGJlZW4gY2FsbGVkLCBhbmQgcmV0dXJuZWRcbiAgdGhpcy5lbmRlZCA9IGZhbHNlO1xuICAvLyB3aGVuICdmaW5pc2gnIGlzIGVtaXR0ZWRcbiAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuXG4gIC8vIGhhcyBpdCBiZWVuIGRlc3Ryb3llZFxuICB0aGlzLmRlc3Ryb3llZCA9IGZhbHNlO1xuXG4gIC8vIHNob3VsZCB3ZSBkZWNvZGUgc3RyaW5ncyBpbnRvIGJ1ZmZlcnMgYmVmb3JlIHBhc3NpbmcgdG8gX3dyaXRlP1xuICAvLyB0aGlzIGlzIGhlcmUgc28gdGhhdCBzb21lIG5vZGUtY29yZSBzdHJlYW1zIGNhbiBvcHRpbWl6ZSBzdHJpbmdcbiAgLy8gaGFuZGxpbmcgYXQgYSBsb3dlciBsZXZlbC5cbiAgdmFyIG5vRGVjb2RlID0gb3B0aW9ucy5kZWNvZGVTdHJpbmdzID09PSBmYWxzZTtcbiAgdGhpcy5kZWNvZGVTdHJpbmdzID0gIW5vRGVjb2RlO1xuXG4gIC8vIENyeXB0byBpcyBraW5kIG9mIG9sZCBhbmQgY3J1c3R5LiAgSGlzdG9yaWNhbGx5LCBpdHMgZGVmYXVsdCBzdHJpbmdcbiAgLy8gZW5jb2RpbmcgaXMgJ2JpbmFyeScgc28gd2UgaGF2ZSB0byBtYWtlIHRoaXMgY29uZmlndXJhYmxlLlxuICAvLyBFdmVyeXRoaW5nIGVsc2UgaW4gdGhlIHVuaXZlcnNlIHVzZXMgJ3V0ZjgnLCB0aG91Z2guXG4gIHRoaXMuZGVmYXVsdEVuY29kaW5nID0gb3B0aW9ucy5kZWZhdWx0RW5jb2RpbmcgfHwgJ3V0ZjgnO1xuXG4gIC8vIG5vdCBhbiBhY3R1YWwgYnVmZmVyIHdlIGtlZXAgdHJhY2sgb2YsIGJ1dCBhIG1lYXN1cmVtZW50XG4gIC8vIG9mIGhvdyBtdWNoIHdlJ3JlIHdhaXRpbmcgdG8gZ2V0IHB1c2hlZCB0byBzb21lIHVuZGVybHlpbmdcbiAgLy8gc29ja2V0IG9yIGZpbGUuXG4gIHRoaXMubGVuZ3RoID0gMDtcblxuICAvLyBhIGZsYWcgdG8gc2VlIHdoZW4gd2UncmUgaW4gdGhlIG1pZGRsZSBvZiBhIHdyaXRlLlxuICB0aGlzLndyaXRpbmcgPSBmYWxzZTtcblxuICAvLyB3aGVuIHRydWUgYWxsIHdyaXRlcyB3aWxsIGJlIGJ1ZmZlcmVkIHVudGlsIC51bmNvcmsoKSBjYWxsXG4gIHRoaXMuY29ya2VkID0gMDtcblxuICAvLyBhIGZsYWcgdG8gYmUgYWJsZSB0byB0ZWxsIGlmIHRoZSBvbndyaXRlIGNiIGlzIGNhbGxlZCBpbW1lZGlhdGVseSxcbiAgLy8gb3Igb24gYSBsYXRlciB0aWNrLiAgV2Ugc2V0IHRoaXMgdG8gdHJ1ZSBhdCBmaXJzdCwgYmVjYXVzZSBhbnlcbiAgLy8gYWN0aW9ucyB0aGF0IHNob3VsZG4ndCBoYXBwZW4gdW50aWwgXCJsYXRlclwiIHNob3VsZCBnZW5lcmFsbHkgYWxzb1xuICAvLyBub3QgaGFwcGVuIGJlZm9yZSB0aGUgZmlyc3Qgd3JpdGUgY2FsbC5cbiAgdGhpcy5zeW5jID0gdHJ1ZTtcblxuICAvLyBhIGZsYWcgdG8ga25vdyBpZiB3ZSdyZSBwcm9jZXNzaW5nIHByZXZpb3VzbHkgYnVmZmVyZWQgaXRlbXMsIHdoaWNoXG4gIC8vIG1heSBjYWxsIHRoZSBfd3JpdGUoKSBjYWxsYmFjayBpbiB0aGUgc2FtZSB0aWNrLCBzbyB0aGF0IHdlIGRvbid0XG4gIC8vIGVuZCB1cCBpbiBhbiBvdmVybGFwcGVkIG9ud3JpdGUgc2l0dWF0aW9uLlxuICB0aGlzLmJ1ZmZlclByb2Nlc3NpbmcgPSBmYWxzZTtcblxuICAvLyB0aGUgY2FsbGJhY2sgdGhhdCdzIHBhc3NlZCB0byBfd3JpdGUoY2h1bmssY2IpXG4gIHRoaXMub253cml0ZSA9IGZ1bmN0aW9uIChlcikge1xuICAgIG9ud3JpdGUoc3RyZWFtLCBlcik7XG4gIH07XG5cbiAgLy8gdGhlIGNhbGxiYWNrIHRoYXQgdGhlIHVzZXIgc3VwcGxpZXMgdG8gd3JpdGUoY2h1bmssZW5jb2RpbmcsY2IpXG4gIHRoaXMud3JpdGVjYiA9IG51bGw7XG5cbiAgLy8gdGhlIGFtb3VudCB0aGF0IGlzIGJlaW5nIHdyaXR0ZW4gd2hlbiBfd3JpdGUgaXMgY2FsbGVkLlxuICB0aGlzLndyaXRlbGVuID0gMDtcblxuICB0aGlzLmJ1ZmZlcmVkUmVxdWVzdCA9IG51bGw7XG4gIHRoaXMubGFzdEJ1ZmZlcmVkUmVxdWVzdCA9IG51bGw7XG5cbiAgLy8gbnVtYmVyIG9mIHBlbmRpbmcgdXNlci1zdXBwbGllZCB3cml0ZSBjYWxsYmFja3NcbiAgLy8gdGhpcyBtdXN0IGJlIDAgYmVmb3JlICdmaW5pc2gnIGNhbiBiZSBlbWl0dGVkXG4gIHRoaXMucGVuZGluZ2NiID0gMDtcblxuICAvLyBlbWl0IHByZWZpbmlzaCBpZiB0aGUgb25seSB0aGluZyB3ZSdyZSB3YWl0aW5nIGZvciBpcyBfd3JpdGUgY2JzXG4gIC8vIFRoaXMgaXMgcmVsZXZhbnQgZm9yIHN5bmNocm9ub3VzIFRyYW5zZm9ybSBzdHJlYW1zXG4gIHRoaXMucHJlZmluaXNoZWQgPSBmYWxzZTtcblxuICAvLyBUcnVlIGlmIHRoZSBlcnJvciB3YXMgYWxyZWFkeSBlbWl0dGVkIGFuZCBzaG91bGQgbm90IGJlIHRocm93biBhZ2FpblxuICB0aGlzLmVycm9yRW1pdHRlZCA9IGZhbHNlO1xuXG4gIC8vIGNvdW50IGJ1ZmZlcmVkIHJlcXVlc3RzXG4gIHRoaXMuYnVmZmVyZWRSZXF1ZXN0Q291bnQgPSAwO1xuXG4gIC8vIGFsbG9jYXRlIHRoZSBmaXJzdCBDb3JrZWRSZXF1ZXN0LCB0aGVyZSBpcyBhbHdheXNcbiAgLy8gb25lIGFsbG9jYXRlZCBhbmQgZnJlZSB0byB1c2UsIGFuZCB3ZSBtYWludGFpbiBhdCBtb3N0IHR3b1xuICB0aGlzLmNvcmtlZFJlcXVlc3RzRnJlZSA9IG5ldyBDb3JrZWRSZXF1ZXN0KHRoaXMpO1xufVxuXG5Xcml0YWJsZVN0YXRlLnByb3RvdHlwZS5nZXRCdWZmZXIgPSBmdW5jdGlvbiBnZXRCdWZmZXIoKSB7XG4gIHZhciBjdXJyZW50ID0gdGhpcy5idWZmZXJlZFJlcXVlc3Q7XG4gIHZhciBvdXQgPSBbXTtcbiAgd2hpbGUgKGN1cnJlbnQpIHtcbiAgICBvdXQucHVzaChjdXJyZW50KTtcbiAgICBjdXJyZW50ID0gY3VycmVudC5uZXh0O1xuICB9XG4gIHJldHVybiBvdXQ7XG59O1xuXG4oZnVuY3Rpb24gKCkge1xuICB0cnkge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZVN0YXRlLnByb3RvdHlwZSwgJ2J1ZmZlcicsIHtcbiAgICAgIGdldDogaW50ZXJuYWxVdGlsLmRlcHJlY2F0ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldEJ1ZmZlcigpO1xuICAgICAgfSwgJ193cml0YWJsZVN0YXRlLmJ1ZmZlciBpcyBkZXByZWNhdGVkLiBVc2UgX3dyaXRhYmxlU3RhdGUuZ2V0QnVmZmVyICcgKyAnaW5zdGVhZC4nLCAnREVQMDAwMycpXG4gICAgfSk7XG4gIH0gY2F0Y2ggKF8pIHt9XG59KSgpO1xuXG4vLyBUZXN0IF93cml0YWJsZVN0YXRlIGZvciBpbmhlcml0YW5jZSB0byBhY2NvdW50IGZvciBEdXBsZXggc3RyZWFtcyxcbi8vIHdob3NlIHByb3RvdHlwZSBjaGFpbiBvbmx5IHBvaW50cyB0byBSZWFkYWJsZS5cbnZhciByZWFsSGFzSW5zdGFuY2U7XG5pZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuaGFzSW5zdGFuY2UgJiYgdHlwZW9mIEZ1bmN0aW9uLnByb3RvdHlwZVtTeW1ib2wuaGFzSW5zdGFuY2VdID09PSAnZnVuY3Rpb24nKSB7XG4gIHJlYWxIYXNJbnN0YW5jZSA9IEZ1bmN0aW9uLnByb3RvdHlwZVtTeW1ib2wuaGFzSW5zdGFuY2VdO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUsIFN5bWJvbC5oYXNJbnN0YW5jZSwge1xuICAgIHZhbHVlOiBmdW5jdGlvbiAob2JqZWN0KSB7XG4gICAgICBpZiAocmVhbEhhc0luc3RhbmNlLmNhbGwodGhpcywgb2JqZWN0KSkgcmV0dXJuIHRydWU7XG5cbiAgICAgIHJldHVybiBvYmplY3QgJiYgb2JqZWN0Ll93cml0YWJsZVN0YXRlIGluc3RhbmNlb2YgV3JpdGFibGVTdGF0ZTtcbiAgICB9XG4gIH0pO1xufSBlbHNlIHtcbiAgcmVhbEhhc0luc3RhbmNlID0gZnVuY3Rpb24gKG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QgaW5zdGFuY2VvZiB0aGlzO1xuICB9O1xufVxuXG5mdW5jdGlvbiBXcml0YWJsZShvcHRpb25zKSB7XG4gIER1cGxleCA9IER1cGxleCB8fCByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbiAgLy8gV3JpdGFibGUgY3RvciBpcyBhcHBsaWVkIHRvIER1cGxleGVzLCB0b28uXG4gIC8vIGByZWFsSGFzSW5zdGFuY2VgIGlzIG5lY2Vzc2FyeSBiZWNhdXNlIHVzaW5nIHBsYWluIGBpbnN0YW5jZW9mYFxuICAvLyB3b3VsZCByZXR1cm4gZmFsc2UsIGFzIG5vIGBfd3JpdGFibGVTdGF0ZWAgcHJvcGVydHkgaXMgYXR0YWNoZWQuXG5cbiAgLy8gVHJ5aW5nIHRvIHVzZSB0aGUgY3VzdG9tIGBpbnN0YW5jZW9mYCBmb3IgV3JpdGFibGUgaGVyZSB3aWxsIGFsc28gYnJlYWsgdGhlXG4gIC8vIE5vZGUuanMgTGF6eVRyYW5zZm9ybSBpbXBsZW1lbnRhdGlvbiwgd2hpY2ggaGFzIGEgbm9uLXRyaXZpYWwgZ2V0dGVyIGZvclxuICAvLyBgX3dyaXRhYmxlU3RhdGVgIHRoYXQgd291bGQgbGVhZCB0byBpbmZpbml0ZSByZWN1cnNpb24uXG4gIGlmICghcmVhbEhhc0luc3RhbmNlLmNhbGwoV3JpdGFibGUsIHRoaXMpICYmICEodGhpcyBpbnN0YW5jZW9mIER1cGxleCkpIHtcbiAgICByZXR1cm4gbmV3IFdyaXRhYmxlKG9wdGlvbnMpO1xuICB9XG5cbiAgdGhpcy5fd3JpdGFibGVTdGF0ZSA9IG5ldyBXcml0YWJsZVN0YXRlKG9wdGlvbnMsIHRoaXMpO1xuXG4gIC8vIGxlZ2FjeS5cbiAgdGhpcy53cml0YWJsZSA9IHRydWU7XG5cbiAgaWYgKG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMud3JpdGUgPT09ICdmdW5jdGlvbicpIHRoaXMuX3dyaXRlID0gb3B0aW9ucy53cml0ZTtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy53cml0ZXYgPT09ICdmdW5jdGlvbicpIHRoaXMuX3dyaXRldiA9IG9wdGlvbnMud3JpdGV2O1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmRlc3Ryb3kgPT09ICdmdW5jdGlvbicpIHRoaXMuX2Rlc3Ryb3kgPSBvcHRpb25zLmRlc3Ryb3k7XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuZmluYWwgPT09ICdmdW5jdGlvbicpIHRoaXMuX2ZpbmFsID0gb3B0aW9ucy5maW5hbDtcbiAgfVxuXG4gIFN0cmVhbS5jYWxsKHRoaXMpO1xufVxuXG4vLyBPdGhlcndpc2UgcGVvcGxlIGNhbiBwaXBlIFdyaXRhYmxlIHN0cmVhbXMsIHdoaWNoIGlzIGp1c3Qgd3JvbmcuXG5Xcml0YWJsZS5wcm90b3R5cGUucGlwZSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignQ2Fubm90IHBpcGUsIG5vdCByZWFkYWJsZScpKTtcbn07XG5cbmZ1bmN0aW9uIHdyaXRlQWZ0ZXJFbmQoc3RyZWFtLCBjYikge1xuICB2YXIgZXIgPSBuZXcgRXJyb3IoJ3dyaXRlIGFmdGVyIGVuZCcpO1xuICAvLyBUT0RPOiBkZWZlciBlcnJvciBldmVudHMgY29uc2lzdGVudGx5IGV2ZXJ5d2hlcmUsIG5vdCBqdXN0IHRoZSBjYlxuICBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcik7XG4gIHByb2Nlc3NOZXh0VGljayhjYiwgZXIpO1xufVxuXG4vLyBDaGVja3MgdGhhdCBhIHVzZXItc3VwcGxpZWQgY2h1bmsgaXMgdmFsaWQsIGVzcGVjaWFsbHkgZm9yIHRoZSBwYXJ0aWN1bGFyXG4vLyBtb2RlIHRoZSBzdHJlYW0gaXMgaW4uIEN1cnJlbnRseSB0aGlzIG1lYW5zIHRoYXQgYG51bGxgIGlzIG5ldmVyIGFjY2VwdGVkXG4vLyBhbmQgdW5kZWZpbmVkL25vbi1zdHJpbmcgdmFsdWVzIGFyZSBvbmx5IGFsbG93ZWQgaW4gb2JqZWN0IG1vZGUuXG5mdW5jdGlvbiB2YWxpZENodW5rKHN0cmVhbSwgc3RhdGUsIGNodW5rLCBjYikge1xuICB2YXIgdmFsaWQgPSB0cnVlO1xuICB2YXIgZXIgPSBmYWxzZTtcblxuICBpZiAoY2h1bmsgPT09IG51bGwpIHtcbiAgICBlciA9IG5ldyBUeXBlRXJyb3IoJ01heSBub3Qgd3JpdGUgbnVsbCB2YWx1ZXMgdG8gc3RyZWFtJyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGNodW5rICE9PSAnc3RyaW5nJyAmJiBjaHVuayAhPT0gdW5kZWZpbmVkICYmICFzdGF0ZS5vYmplY3RNb2RlKSB7XG4gICAgZXIgPSBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIG5vbi1zdHJpbmcvYnVmZmVyIGNodW5rJyk7XG4gIH1cbiAgaWYgKGVyKSB7XG4gICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXIpO1xuICAgIHByb2Nlc3NOZXh0VGljayhjYiwgZXIpO1xuICAgIHZhbGlkID0gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHZhbGlkO1xufVxuXG5Xcml0YWJsZS5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikge1xuICB2YXIgc3RhdGUgPSB0aGlzLl93cml0YWJsZVN0YXRlO1xuICB2YXIgcmV0ID0gZmFsc2U7XG4gIHZhciBpc0J1ZiA9IF9pc1VpbnQ4QXJyYXkoY2h1bmspICYmICFzdGF0ZS5vYmplY3RNb2RlO1xuXG4gIGlmIChpc0J1ZiAmJiAhQnVmZmVyLmlzQnVmZmVyKGNodW5rKSkge1xuICAgIGNodW5rID0gX3VpbnQ4QXJyYXlUb0J1ZmZlcihjaHVuayk7XG4gIH1cblxuICBpZiAodHlwZW9mIGVuY29kaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY2IgPSBlbmNvZGluZztcbiAgICBlbmNvZGluZyA9IG51bGw7XG4gIH1cblxuICBpZiAoaXNCdWYpIGVuY29kaW5nID0gJ2J1ZmZlcic7ZWxzZSBpZiAoIWVuY29kaW5nKSBlbmNvZGluZyA9IHN0YXRlLmRlZmF1bHRFbmNvZGluZztcblxuICBpZiAodHlwZW9mIGNiICE9PSAnZnVuY3Rpb24nKSBjYiA9IG5vcDtcblxuICBpZiAoc3RhdGUuZW5kZWQpIHdyaXRlQWZ0ZXJFbmQodGhpcywgY2IpO2Vsc2UgaWYgKGlzQnVmIHx8IHZhbGlkQ2h1bmsodGhpcywgc3RhdGUsIGNodW5rLCBjYikpIHtcbiAgICBzdGF0ZS5wZW5kaW5nY2IrKztcbiAgICByZXQgPSB3cml0ZU9yQnVmZmVyKHRoaXMsIHN0YXRlLCBpc0J1ZiwgY2h1bmssIGVuY29kaW5nLCBjYik7XG4gIH1cblxuICByZXR1cm4gcmV0O1xufTtcblxuV3JpdGFibGUucHJvdG90eXBlLmNvcmsgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBzdGF0ZSA9IHRoaXMuX3dyaXRhYmxlU3RhdGU7XG5cbiAgc3RhdGUuY29ya2VkKys7XG59O1xuXG5Xcml0YWJsZS5wcm90b3R5cGUudW5jb3JrID0gZnVuY3Rpb24gKCkge1xuICB2YXIgc3RhdGUgPSB0aGlzLl93cml0YWJsZVN0YXRlO1xuXG4gIGlmIChzdGF0ZS5jb3JrZWQpIHtcbiAgICBzdGF0ZS5jb3JrZWQtLTtcblxuICAgIGlmICghc3RhdGUud3JpdGluZyAmJiAhc3RhdGUuY29ya2VkICYmICFzdGF0ZS5maW5pc2hlZCAmJiAhc3RhdGUuYnVmZmVyUHJvY2Vzc2luZyAmJiBzdGF0ZS5idWZmZXJlZFJlcXVlc3QpIGNsZWFyQnVmZmVyKHRoaXMsIHN0YXRlKTtcbiAgfVxufTtcblxuV3JpdGFibGUucHJvdG90eXBlLnNldERlZmF1bHRFbmNvZGluZyA9IGZ1bmN0aW9uIHNldERlZmF1bHRFbmNvZGluZyhlbmNvZGluZykge1xuICAvLyBub2RlOjpQYXJzZUVuY29kaW5nKCkgcmVxdWlyZXMgbG93ZXIgY2FzZS5cbiAgaWYgKHR5cGVvZiBlbmNvZGluZyA9PT0gJ3N0cmluZycpIGVuY29kaW5nID0gZW5jb2RpbmcudG9Mb3dlckNhc2UoKTtcbiAgaWYgKCEoWydoZXgnLCAndXRmOCcsICd1dGYtOCcsICdhc2NpaScsICdiaW5hcnknLCAnYmFzZTY0JywgJ3VjczInLCAndWNzLTInLCAndXRmMTZsZScsICd1dGYtMTZsZScsICdyYXcnXS5pbmRleE9mKChlbmNvZGluZyArICcnKS50b0xvd2VyQ2FzZSgpKSA+IC0xKSkgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKTtcbiAgdGhpcy5fd3JpdGFibGVTdGF0ZS5kZWZhdWx0RW5jb2RpbmcgPSBlbmNvZGluZztcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5mdW5jdGlvbiBkZWNvZGVDaHVuayhzdGF0ZSwgY2h1bmssIGVuY29kaW5nKSB7XG4gIGlmICghc3RhdGUub2JqZWN0TW9kZSAmJiBzdGF0ZS5kZWNvZGVTdHJpbmdzICE9PSBmYWxzZSAmJiB0eXBlb2YgY2h1bmsgPT09ICdzdHJpbmcnKSB7XG4gICAgY2h1bmsgPSBCdWZmZXIuZnJvbShjaHVuaywgZW5jb2RpbmcpO1xuICB9XG4gIHJldHVybiBjaHVuaztcbn1cblxuLy8gaWYgd2UncmUgYWxyZWFkeSB3cml0aW5nIHNvbWV0aGluZywgdGhlbiBqdXN0IHB1dCB0aGlzXG4vLyBpbiB0aGUgcXVldWUsIGFuZCB3YWl0IG91ciB0dXJuLiAgT3RoZXJ3aXNlLCBjYWxsIF93cml0ZVxuLy8gSWYgd2UgcmV0dXJuIGZhbHNlLCB0aGVuIHdlIG5lZWQgYSBkcmFpbiBldmVudCwgc28gc2V0IHRoYXQgZmxhZy5cbmZ1bmN0aW9uIHdyaXRlT3JCdWZmZXIoc3RyZWFtLCBzdGF0ZSwgaXNCdWYsIGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgaWYgKCFpc0J1Zikge1xuICAgIHZhciBuZXdDaHVuayA9IGRlY29kZUNodW5rKHN0YXRlLCBjaHVuaywgZW5jb2RpbmcpO1xuICAgIGlmIChjaHVuayAhPT0gbmV3Q2h1bmspIHtcbiAgICAgIGlzQnVmID0gdHJ1ZTtcbiAgICAgIGVuY29kaW5nID0gJ2J1ZmZlcic7XG4gICAgICBjaHVuayA9IG5ld0NodW5rO1xuICAgIH1cbiAgfVxuICB2YXIgbGVuID0gc3RhdGUub2JqZWN0TW9kZSA/IDEgOiBjaHVuay5sZW5ndGg7XG5cbiAgc3RhdGUubGVuZ3RoICs9IGxlbjtcblxuICB2YXIgcmV0ID0gc3RhdGUubGVuZ3RoIDwgc3RhdGUuaGlnaFdhdGVyTWFyaztcbiAgLy8gd2UgbXVzdCBlbnN1cmUgdGhhdCBwcmV2aW91cyBuZWVkRHJhaW4gd2lsbCBub3QgYmUgcmVzZXQgdG8gZmFsc2UuXG4gIGlmICghcmV0KSBzdGF0ZS5uZWVkRHJhaW4gPSB0cnVlO1xuXG4gIGlmIChzdGF0ZS53cml0aW5nIHx8IHN0YXRlLmNvcmtlZCkge1xuICAgIHZhciBsYXN0ID0gc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtcbiAgICBzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0ID0ge1xuICAgICAgY2h1bms6IGNodW5rLFxuICAgICAgZW5jb2Rpbmc6IGVuY29kaW5nLFxuICAgICAgaXNCdWY6IGlzQnVmLFxuICAgICAgY2FsbGJhY2s6IGNiLFxuICAgICAgbmV4dDogbnVsbFxuICAgIH07XG4gICAgaWYgKGxhc3QpIHtcbiAgICAgIGxhc3QubmV4dCA9IHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3Q7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCA9IHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3Q7XG4gICAgfVxuICAgIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdENvdW50ICs9IDE7XG4gIH0gZWxzZSB7XG4gICAgZG9Xcml0ZShzdHJlYW0sIHN0YXRlLCBmYWxzZSwgbGVuLCBjaHVuaywgZW5jb2RpbmcsIGNiKTtcbiAgfVxuXG4gIHJldHVybiByZXQ7XG59XG5cbmZ1bmN0aW9uIGRvV3JpdGUoc3RyZWFtLCBzdGF0ZSwgd3JpdGV2LCBsZW4sIGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgc3RhdGUud3JpdGVsZW4gPSBsZW47XG4gIHN0YXRlLndyaXRlY2IgPSBjYjtcbiAgc3RhdGUud3JpdGluZyA9IHRydWU7XG4gIHN0YXRlLnN5bmMgPSB0cnVlO1xuICBpZiAod3JpdGV2KSBzdHJlYW0uX3dyaXRldihjaHVuaywgc3RhdGUub253cml0ZSk7ZWxzZSBzdHJlYW0uX3dyaXRlKGNodW5rLCBlbmNvZGluZywgc3RhdGUub253cml0ZSk7XG4gIHN0YXRlLnN5bmMgPSBmYWxzZTtcbn1cblxuZnVuY3Rpb24gb253cml0ZUVycm9yKHN0cmVhbSwgc3RhdGUsIHN5bmMsIGVyLCBjYikge1xuICAtLXN0YXRlLnBlbmRpbmdjYjtcblxuICBpZiAoc3luYykge1xuICAgIC8vIGRlZmVyIHRoZSBjYWxsYmFjayBpZiB3ZSBhcmUgYmVpbmcgY2FsbGVkIHN5bmNocm9ub3VzbHlcbiAgICAvLyB0byBhdm9pZCBwaWxpbmcgdXAgdGhpbmdzIG9uIHRoZSBzdGFja1xuICAgIHByb2Nlc3NOZXh0VGljayhjYiwgZXIpO1xuICAgIC8vIHRoaXMgY2FuIGVtaXQgZmluaXNoLCBhbmQgaXQgd2lsbCBhbHdheXMgaGFwcGVuXG4gICAgLy8gYWZ0ZXIgZXJyb3JcbiAgICBwcm9jZXNzTmV4dFRpY2soZmluaXNoTWF5YmUsIHN0cmVhbSwgc3RhdGUpO1xuICAgIHN0cmVhbS5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQgPSB0cnVlO1xuICAgIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTtcbiAgfSBlbHNlIHtcbiAgICAvLyB0aGUgY2FsbGVyIGV4cGVjdCB0aGlzIHRvIGhhcHBlbiBiZWZvcmUgaWZcbiAgICAvLyBpdCBpcyBhc3luY1xuICAgIGNiKGVyKTtcbiAgICBzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkID0gdHJ1ZTtcbiAgICBzdHJlYW0uZW1pdCgnZXJyb3InLCBlcik7XG4gICAgLy8gdGhpcyBjYW4gZW1pdCBmaW5pc2gsIGJ1dCBmaW5pc2ggbXVzdFxuICAgIC8vIGFsd2F5cyBmb2xsb3cgZXJyb3JcbiAgICBmaW5pc2hNYXliZShzdHJlYW0sIHN0YXRlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBvbndyaXRlU3RhdGVVcGRhdGUoc3RhdGUpIHtcbiAgc3RhdGUud3JpdGluZyA9IGZhbHNlO1xuICBzdGF0ZS53cml0ZWNiID0gbnVsbDtcbiAgc3RhdGUubGVuZ3RoIC09IHN0YXRlLndyaXRlbGVuO1xuICBzdGF0ZS53cml0ZWxlbiA9IDA7XG59XG5cbmZ1bmN0aW9uIG9ud3JpdGUoc3RyZWFtLCBlcikge1xuICB2YXIgc3RhdGUgPSBzdHJlYW0uX3dyaXRhYmxlU3RhdGU7XG4gIHZhciBzeW5jID0gc3RhdGUuc3luYztcbiAgdmFyIGNiID0gc3RhdGUud3JpdGVjYjtcblxuICBvbndyaXRlU3RhdGVVcGRhdGUoc3RhdGUpO1xuXG4gIGlmIChlcikgb253cml0ZUVycm9yKHN0cmVhbSwgc3RhdGUsIHN5bmMsIGVyLCBjYik7ZWxzZSB7XG4gICAgLy8gQ2hlY2sgaWYgd2UncmUgYWN0dWFsbHkgcmVhZHkgdG8gZmluaXNoLCBidXQgZG9uJ3QgZW1pdCB5ZXRcbiAgICB2YXIgZmluaXNoZWQgPSBuZWVkRmluaXNoKHN0YXRlKTtcblxuICAgIGlmICghZmluaXNoZWQgJiYgIXN0YXRlLmNvcmtlZCAmJiAhc3RhdGUuYnVmZmVyUHJvY2Vzc2luZyAmJiBzdGF0ZS5idWZmZXJlZFJlcXVlc3QpIHtcbiAgICAgIGNsZWFyQnVmZmVyKHN0cmVhbSwgc3RhdGUpO1xuICAgIH1cblxuICAgIGlmIChzeW5jKSB7XG4gICAgICAvKjxyZXBsYWNlbWVudD4qL1xuICAgICAgYXN5bmNXcml0ZShhZnRlcldyaXRlLCBzdHJlYW0sIHN0YXRlLCBmaW5pc2hlZCwgY2IpO1xuICAgICAgLyo8L3JlcGxhY2VtZW50PiovXG4gICAgfSBlbHNlIHtcbiAgICAgIGFmdGVyV3JpdGUoc3RyZWFtLCBzdGF0ZSwgZmluaXNoZWQsIGNiKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYWZ0ZXJXcml0ZShzdHJlYW0sIHN0YXRlLCBmaW5pc2hlZCwgY2IpIHtcbiAgaWYgKCFmaW5pc2hlZCkgb253cml0ZURyYWluKHN0cmVhbSwgc3RhdGUpO1xuICBzdGF0ZS5wZW5kaW5nY2ItLTtcbiAgY2IoKTtcbiAgZmluaXNoTWF5YmUoc3RyZWFtLCBzdGF0ZSk7XG59XG5cbi8vIE11c3QgZm9yY2UgY2FsbGJhY2sgdG8gYmUgY2FsbGVkIG9uIG5leHRUaWNrLCBzbyB0aGF0IHdlIGRvbid0XG4vLyBlbWl0ICdkcmFpbicgYmVmb3JlIHRoZSB3cml0ZSgpIGNvbnN1bWVyIGdldHMgdGhlICdmYWxzZScgcmV0dXJuXG4vLyB2YWx1ZSwgYW5kIGhhcyBhIGNoYW5jZSB0byBhdHRhY2ggYSAnZHJhaW4nIGxpc3RlbmVyLlxuZnVuY3Rpb24gb253cml0ZURyYWluKHN0cmVhbSwgc3RhdGUpIHtcbiAgaWYgKHN0YXRlLmxlbmd0aCA9PT0gMCAmJiBzdGF0ZS5uZWVkRHJhaW4pIHtcbiAgICBzdGF0ZS5uZWVkRHJhaW4gPSBmYWxzZTtcbiAgICBzdHJlYW0uZW1pdCgnZHJhaW4nKTtcbiAgfVxufVxuXG4vLyBpZiB0aGVyZSdzIHNvbWV0aGluZyBpbiB0aGUgYnVmZmVyIHdhaXRpbmcsIHRoZW4gcHJvY2VzcyBpdFxuZnVuY3Rpb24gY2xlYXJCdWZmZXIoc3RyZWFtLCBzdGF0ZSkge1xuICBzdGF0ZS5idWZmZXJQcm9jZXNzaW5nID0gdHJ1ZTtcbiAgdmFyIGVudHJ5ID0gc3RhdGUuYnVmZmVyZWRSZXF1ZXN0O1xuXG4gIGlmIChzdHJlYW0uX3dyaXRldiAmJiBlbnRyeSAmJiBlbnRyeS5uZXh0KSB7XG4gICAgLy8gRmFzdCBjYXNlLCB3cml0ZSBldmVyeXRoaW5nIHVzaW5nIF93cml0ZXYoKVxuICAgIHZhciBsID0gc3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQ7XG4gICAgdmFyIGJ1ZmZlciA9IG5ldyBBcnJheShsKTtcbiAgICB2YXIgaG9sZGVyID0gc3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlO1xuICAgIGhvbGRlci5lbnRyeSA9IGVudHJ5O1xuXG4gICAgdmFyIGNvdW50ID0gMDtcbiAgICB2YXIgYWxsQnVmZmVycyA9IHRydWU7XG4gICAgd2hpbGUgKGVudHJ5KSB7XG4gICAgICBidWZmZXJbY291bnRdID0gZW50cnk7XG4gICAgICBpZiAoIWVudHJ5LmlzQnVmKSBhbGxCdWZmZXJzID0gZmFsc2U7XG4gICAgICBlbnRyeSA9IGVudHJ5Lm5leHQ7XG4gICAgICBjb3VudCArPSAxO1xuICAgIH1cbiAgICBidWZmZXIuYWxsQnVmZmVycyA9IGFsbEJ1ZmZlcnM7XG5cbiAgICBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIHRydWUsIHN0YXRlLmxlbmd0aCwgYnVmZmVyLCAnJywgaG9sZGVyLmZpbmlzaCk7XG5cbiAgICAvLyBkb1dyaXRlIGlzIGFsbW9zdCBhbHdheXMgYXN5bmMsIGRlZmVyIHRoZXNlIHRvIHNhdmUgYSBiaXQgb2YgdGltZVxuICAgIC8vIGFzIHRoZSBob3QgcGF0aCBlbmRzIHdpdGggZG9Xcml0ZVxuICAgIHN0YXRlLnBlbmRpbmdjYisrO1xuICAgIHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3QgPSBudWxsO1xuICAgIGlmIChob2xkZXIubmV4dCkge1xuICAgICAgc3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlID0gaG9sZGVyLm5leHQ7XG4gICAgICBob2xkZXIubmV4dCA9IG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZSA9IG5ldyBDb3JrZWRSZXF1ZXN0KHN0YXRlKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gU2xvdyBjYXNlLCB3cml0ZSBjaHVua3Mgb25lLWJ5LW9uZVxuICAgIHdoaWxlIChlbnRyeSkge1xuICAgICAgdmFyIGNodW5rID0gZW50cnkuY2h1bms7XG4gICAgICB2YXIgZW5jb2RpbmcgPSBlbnRyeS5lbmNvZGluZztcbiAgICAgIHZhciBjYiA9IGVudHJ5LmNhbGxiYWNrO1xuICAgICAgdmFyIGxlbiA9IHN0YXRlLm9iamVjdE1vZGUgPyAxIDogY2h1bmsubGVuZ3RoO1xuXG4gICAgICBkb1dyaXRlKHN0cmVhbSwgc3RhdGUsIGZhbHNlLCBsZW4sIGNodW5rLCBlbmNvZGluZywgY2IpO1xuICAgICAgZW50cnkgPSBlbnRyeS5uZXh0O1xuICAgICAgLy8gaWYgd2UgZGlkbid0IGNhbGwgdGhlIG9ud3JpdGUgaW1tZWRpYXRlbHksIHRoZW5cbiAgICAgIC8vIGl0IG1lYW5zIHRoYXQgd2UgbmVlZCB0byB3YWl0IHVudGlsIGl0IGRvZXMuXG4gICAgICAvLyBhbHNvLCB0aGF0IG1lYW5zIHRoYXQgdGhlIGNodW5rIGFuZCBjYiBhcmUgY3VycmVudGx5XG4gICAgICAvLyBiZWluZyBwcm9jZXNzZWQsIHNvIG1vdmUgdGhlIGJ1ZmZlciBjb3VudGVyIHBhc3QgdGhlbS5cbiAgICAgIGlmIChzdGF0ZS53cml0aW5nKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChlbnRyeSA9PT0gbnVsbCkgc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdCA9IG51bGw7XG4gIH1cblxuICBzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudCA9IDA7XG4gIHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdCA9IGVudHJ5O1xuICBzdGF0ZS5idWZmZXJQcm9jZXNzaW5nID0gZmFsc2U7XG59XG5cbldyaXRhYmxlLnByb3RvdHlwZS5fd3JpdGUgPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nLCBjYikge1xuICBjYihuZXcgRXJyb3IoJ193cml0ZSgpIGlzIG5vdCBpbXBsZW1lbnRlZCcpKTtcbn07XG5cbldyaXRhYmxlLnByb3RvdHlwZS5fd3JpdGV2ID0gbnVsbDtcblxuV3JpdGFibGUucHJvdG90eXBlLmVuZCA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIHZhciBzdGF0ZSA9IHRoaXMuX3dyaXRhYmxlU3RhdGU7XG5cbiAgaWYgKHR5cGVvZiBjaHVuayA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gY2h1bms7XG4gICAgY2h1bmsgPSBudWxsO1xuICAgIGVuY29kaW5nID0gbnVsbDtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYiA9IGVuY29kaW5nO1xuICAgIGVuY29kaW5nID0gbnVsbDtcbiAgfVxuXG4gIGlmIChjaHVuayAhPT0gbnVsbCAmJiBjaHVuayAhPT0gdW5kZWZpbmVkKSB0aGlzLndyaXRlKGNodW5rLCBlbmNvZGluZyk7XG5cbiAgLy8gLmVuZCgpIGZ1bGx5IHVuY29ya3NcbiAgaWYgKHN0YXRlLmNvcmtlZCkge1xuICAgIHN0YXRlLmNvcmtlZCA9IDE7XG4gICAgdGhpcy51bmNvcmsoKTtcbiAgfVxuXG4gIC8vIGlnbm9yZSB1bm5lY2Vzc2FyeSBlbmQoKSBjYWxscy5cbiAgaWYgKCFzdGF0ZS5lbmRpbmcgJiYgIXN0YXRlLmZpbmlzaGVkKSBlbmRXcml0YWJsZSh0aGlzLCBzdGF0ZSwgY2IpO1xufTtcblxuZnVuY3Rpb24gbmVlZEZpbmlzaChzdGF0ZSkge1xuICByZXR1cm4gc3RhdGUuZW5kaW5nICYmIHN0YXRlLmxlbmd0aCA9PT0gMCAmJiBzdGF0ZS5idWZmZXJlZFJlcXVlc3QgPT09IG51bGwgJiYgIXN0YXRlLmZpbmlzaGVkICYmICFzdGF0ZS53cml0aW5nO1xufVxuZnVuY3Rpb24gY2FsbEZpbmFsKHN0cmVhbSwgc3RhdGUpIHtcbiAgc3RyZWFtLl9maW5hbChmdW5jdGlvbiAoZXJyKSB7XG4gICAgc3RhdGUucGVuZGluZ2NiLS07XG4gICAgaWYgKGVycikge1xuICAgICAgc3RyZWFtLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICB9XG4gICAgc3RhdGUucHJlZmluaXNoZWQgPSB0cnVlO1xuICAgIHN0cmVhbS5lbWl0KCdwcmVmaW5pc2gnKTtcbiAgICBmaW5pc2hNYXliZShzdHJlYW0sIHN0YXRlKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBwcmVmaW5pc2goc3RyZWFtLCBzdGF0ZSkge1xuICBpZiAoIXN0YXRlLnByZWZpbmlzaGVkICYmICFzdGF0ZS5maW5hbENhbGxlZCkge1xuICAgIGlmICh0eXBlb2Ygc3RyZWFtLl9maW5hbCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgc3RhdGUucGVuZGluZ2NiKys7XG4gICAgICBzdGF0ZS5maW5hbENhbGxlZCA9IHRydWU7XG4gICAgICBwcm9jZXNzTmV4dFRpY2soY2FsbEZpbmFsLCBzdHJlYW0sIHN0YXRlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdGUucHJlZmluaXNoZWQgPSB0cnVlO1xuICAgICAgc3RyZWFtLmVtaXQoJ3ByZWZpbmlzaCcpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBmaW5pc2hNYXliZShzdHJlYW0sIHN0YXRlKSB7XG4gIHZhciBuZWVkID0gbmVlZEZpbmlzaChzdGF0ZSk7XG4gIGlmIChuZWVkKSB7XG4gICAgcHJlZmluaXNoKHN0cmVhbSwgc3RhdGUpO1xuICAgIGlmIChzdGF0ZS5wZW5kaW5nY2IgPT09IDApIHtcbiAgICAgIHN0YXRlLmZpbmlzaGVkID0gdHJ1ZTtcbiAgICAgIHN0cmVhbS5lbWl0KCdmaW5pc2gnKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG5lZWQ7XG59XG5cbmZ1bmN0aW9uIGVuZFdyaXRhYmxlKHN0cmVhbSwgc3RhdGUsIGNiKSB7XG4gIHN0YXRlLmVuZGluZyA9IHRydWU7XG4gIGZpbmlzaE1heWJlKHN0cmVhbSwgc3RhdGUpO1xuICBpZiAoY2IpIHtcbiAgICBpZiAoc3RhdGUuZmluaXNoZWQpIHByb2Nlc3NOZXh0VGljayhjYik7ZWxzZSBzdHJlYW0ub25jZSgnZmluaXNoJywgY2IpO1xuICB9XG4gIHN0YXRlLmVuZGVkID0gdHJ1ZTtcbiAgc3RyZWFtLndyaXRhYmxlID0gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIG9uQ29ya2VkRmluaXNoKGNvcmtSZXEsIHN0YXRlLCBlcnIpIHtcbiAgdmFyIGVudHJ5ID0gY29ya1JlcS5lbnRyeTtcbiAgY29ya1JlcS5lbnRyeSA9IG51bGw7XG4gIHdoaWxlIChlbnRyeSkge1xuICAgIHZhciBjYiA9IGVudHJ5LmNhbGxiYWNrO1xuICAgIHN0YXRlLnBlbmRpbmdjYi0tO1xuICAgIGNiKGVycik7XG4gICAgZW50cnkgPSBlbnRyeS5uZXh0O1xuICB9XG4gIGlmIChzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUpIHtcbiAgICBzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUubmV4dCA9IGNvcmtSZXE7XG4gIH0gZWxzZSB7XG4gICAgc3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlID0gY29ya1JlcTtcbiAgfVxufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUucHJvdG90eXBlLCAnZGVzdHJveWVkJywge1xuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5fd3JpdGFibGVTdGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAvLyB3ZSBpZ25vcmUgdGhlIHZhbHVlIGlmIHRoZSBzdHJlYW1cbiAgICAvLyBoYXMgbm90IGJlZW4gaW5pdGlhbGl6ZWQgeWV0XG4gICAgaWYgKCF0aGlzLl93cml0YWJsZVN0YXRlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gYmFja3dhcmQgY29tcGF0aWJpbGl0eSwgdGhlIHVzZXIgaXMgZXhwbGljaXRseVxuICAgIC8vIG1hbmFnaW5nIGRlc3Ryb3llZFxuICAgIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkID0gdmFsdWU7XG4gIH1cbn0pO1xuXG5Xcml0YWJsZS5wcm90b3R5cGUuZGVzdHJveSA9IGRlc3Ryb3lJbXBsLmRlc3Ryb3k7XG5Xcml0YWJsZS5wcm90b3R5cGUuX3VuZGVzdHJveSA9IGRlc3Ryb3lJbXBsLnVuZGVzdHJveTtcbldyaXRhYmxlLnByb3RvdHlwZS5fZGVzdHJveSA9IGZ1bmN0aW9uIChlcnIsIGNiKSB7XG4gIHRoaXMuZW5kKCk7XG4gIGNiKGVycik7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV93cml0YWJsZS5qc1xuLy8gbW9kdWxlIGlkID0gMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdidWZmZXInKS5CdWZmZXI7XG5cbnZhciBpc0J1ZmZlckVuY29kaW5nID0gQnVmZmVyLmlzRW5jb2RpbmdcbiAgfHwgZnVuY3Rpb24oZW5jb2RpbmcpIHtcbiAgICAgICBzd2l0Y2ggKGVuY29kaW5nICYmIGVuY29kaW5nLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgIGNhc2UgJ2hleCc6IGNhc2UgJ3V0ZjgnOiBjYXNlICd1dGYtOCc6IGNhc2UgJ2FzY2lpJzogY2FzZSAnYmluYXJ5JzogY2FzZSAnYmFzZTY0JzogY2FzZSAndWNzMic6IGNhc2UgJ3Vjcy0yJzogY2FzZSAndXRmMTZsZSc6IGNhc2UgJ3V0Zi0xNmxlJzogY2FzZSAncmF3JzogcmV0dXJuIHRydWU7XG4gICAgICAgICBkZWZhdWx0OiByZXR1cm4gZmFsc2U7XG4gICAgICAgfVxuICAgICB9XG5cblxuZnVuY3Rpb24gYXNzZXJ0RW5jb2RpbmcoZW5jb2RpbmcpIHtcbiAgaWYgKGVuY29kaW5nICYmICFpc0J1ZmZlckVuY29kaW5nKGVuY29kaW5nKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKTtcbiAgfVxufVxuXG4vLyBTdHJpbmdEZWNvZGVyIHByb3ZpZGVzIGFuIGludGVyZmFjZSBmb3IgZWZmaWNpZW50bHkgc3BsaXR0aW5nIGEgc2VyaWVzIG9mXG4vLyBidWZmZXJzIGludG8gYSBzZXJpZXMgb2YgSlMgc3RyaW5ncyB3aXRob3V0IGJyZWFraW5nIGFwYXJ0IG11bHRpLWJ5dGVcbi8vIGNoYXJhY3RlcnMuIENFU1UtOCBpcyBoYW5kbGVkIGFzIHBhcnQgb2YgdGhlIFVURi04IGVuY29kaW5nLlxuLy9cbi8vIEBUT0RPIEhhbmRsaW5nIGFsbCBlbmNvZGluZ3MgaW5zaWRlIGEgc2luZ2xlIG9iamVjdCBtYWtlcyBpdCB2ZXJ5IGRpZmZpY3VsdFxuLy8gdG8gcmVhc29uIGFib3V0IHRoaXMgY29kZSwgc28gaXQgc2hvdWxkIGJlIHNwbGl0IHVwIGluIHRoZSBmdXR1cmUuXG4vLyBAVE9ETyBUaGVyZSBzaG91bGQgYmUgYSB1dGY4LXN0cmljdCBlbmNvZGluZyB0aGF0IHJlamVjdHMgaW52YWxpZCBVVEYtOCBjb2RlXG4vLyBwb2ludHMgYXMgdXNlZCBieSBDRVNVLTguXG52YXIgU3RyaW5nRGVjb2RlciA9IGV4cG9ydHMuU3RyaW5nRGVjb2RlciA9IGZ1bmN0aW9uKGVuY29kaW5nKSB7XG4gIHRoaXMuZW5jb2RpbmcgPSAoZW5jb2RpbmcgfHwgJ3V0ZjgnKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1stX10vLCAnJyk7XG4gIGFzc2VydEVuY29kaW5nKGVuY29kaW5nKTtcbiAgc3dpdGNoICh0aGlzLmVuY29kaW5nKSB7XG4gICAgY2FzZSAndXRmOCc6XG4gICAgICAvLyBDRVNVLTggcmVwcmVzZW50cyBlYWNoIG9mIFN1cnJvZ2F0ZSBQYWlyIGJ5IDMtYnl0ZXNcbiAgICAgIHRoaXMuc3Vycm9nYXRlU2l6ZSA9IDM7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd1Y3MyJzpcbiAgICBjYXNlICd1dGYxNmxlJzpcbiAgICAgIC8vIFVURi0xNiByZXByZXNlbnRzIGVhY2ggb2YgU3Vycm9nYXRlIFBhaXIgYnkgMi1ieXRlc1xuICAgICAgdGhpcy5zdXJyb2dhdGVTaXplID0gMjtcbiAgICAgIHRoaXMuZGV0ZWN0SW5jb21wbGV0ZUNoYXIgPSB1dGYxNkRldGVjdEluY29tcGxldGVDaGFyO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgIC8vIEJhc2UtNjQgc3RvcmVzIDMgYnl0ZXMgaW4gNCBjaGFycywgYW5kIHBhZHMgdGhlIHJlbWFpbmRlci5cbiAgICAgIHRoaXMuc3Vycm9nYXRlU2l6ZSA9IDM7XG4gICAgICB0aGlzLmRldGVjdEluY29tcGxldGVDaGFyID0gYmFzZTY0RGV0ZWN0SW5jb21wbGV0ZUNoYXI7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgdGhpcy53cml0ZSA9IHBhc3NUaHJvdWdoV3JpdGU7XG4gICAgICByZXR1cm47XG4gIH1cblxuICAvLyBFbm91Z2ggc3BhY2UgdG8gc3RvcmUgYWxsIGJ5dGVzIG9mIGEgc2luZ2xlIGNoYXJhY3Rlci4gVVRGLTggbmVlZHMgNFxuICAvLyBieXRlcywgYnV0IENFU1UtOCBtYXkgcmVxdWlyZSB1cCB0byA2ICgzIGJ5dGVzIHBlciBzdXJyb2dhdGUpLlxuICB0aGlzLmNoYXJCdWZmZXIgPSBuZXcgQnVmZmVyKDYpO1xuICAvLyBOdW1iZXIgb2YgYnl0ZXMgcmVjZWl2ZWQgZm9yIHRoZSBjdXJyZW50IGluY29tcGxldGUgbXVsdGktYnl0ZSBjaGFyYWN0ZXIuXG4gIHRoaXMuY2hhclJlY2VpdmVkID0gMDtcbiAgLy8gTnVtYmVyIG9mIGJ5dGVzIGV4cGVjdGVkIGZvciB0aGUgY3VycmVudCBpbmNvbXBsZXRlIG11bHRpLWJ5dGUgY2hhcmFjdGVyLlxuICB0aGlzLmNoYXJMZW5ndGggPSAwO1xufTtcblxuXG4vLyB3cml0ZSBkZWNvZGVzIHRoZSBnaXZlbiBidWZmZXIgYW5kIHJldHVybnMgaXQgYXMgSlMgc3RyaW5nIHRoYXQgaXNcbi8vIGd1YXJhbnRlZWQgdG8gbm90IGNvbnRhaW4gYW55IHBhcnRpYWwgbXVsdGktYnl0ZSBjaGFyYWN0ZXJzLiBBbnkgcGFydGlhbFxuLy8gY2hhcmFjdGVyIGZvdW5kIGF0IHRoZSBlbmQgb2YgdGhlIGJ1ZmZlciBpcyBidWZmZXJlZCB1cCwgYW5kIHdpbGwgYmVcbi8vIHJldHVybmVkIHdoZW4gY2FsbGluZyB3cml0ZSBhZ2FpbiB3aXRoIHRoZSByZW1haW5pbmcgYnl0ZXMuXG4vL1xuLy8gTm90ZTogQ29udmVydGluZyBhIEJ1ZmZlciBjb250YWluaW5nIGFuIG9ycGhhbiBzdXJyb2dhdGUgdG8gYSBTdHJpbmdcbi8vIGN1cnJlbnRseSB3b3JrcywgYnV0IGNvbnZlcnRpbmcgYSBTdHJpbmcgdG8gYSBCdWZmZXIgKHZpYSBgbmV3IEJ1ZmZlcmAsIG9yXG4vLyBCdWZmZXIjd3JpdGUpIHdpbGwgcmVwbGFjZSBpbmNvbXBsZXRlIHN1cnJvZ2F0ZXMgd2l0aCB0aGUgdW5pY29kZVxuLy8gcmVwbGFjZW1lbnQgY2hhcmFjdGVyLiBTZWUgaHR0cHM6Ly9jb2RlcmV2aWV3LmNocm9taXVtLm9yZy8xMjExNzMwMDkvIC5cblN0cmluZ0RlY29kZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gIHZhciBjaGFyU3RyID0gJyc7XG4gIC8vIGlmIG91ciBsYXN0IHdyaXRlIGVuZGVkIHdpdGggYW4gaW5jb21wbGV0ZSBtdWx0aWJ5dGUgY2hhcmFjdGVyXG4gIHdoaWxlICh0aGlzLmNoYXJMZW5ndGgpIHtcbiAgICAvLyBkZXRlcm1pbmUgaG93IG1hbnkgcmVtYWluaW5nIGJ5dGVzIHRoaXMgYnVmZmVyIGhhcyB0byBvZmZlciBmb3IgdGhpcyBjaGFyXG4gICAgdmFyIGF2YWlsYWJsZSA9IChidWZmZXIubGVuZ3RoID49IHRoaXMuY2hhckxlbmd0aCAtIHRoaXMuY2hhclJlY2VpdmVkKSA/XG4gICAgICAgIHRoaXMuY2hhckxlbmd0aCAtIHRoaXMuY2hhclJlY2VpdmVkIDpcbiAgICAgICAgYnVmZmVyLmxlbmd0aDtcblxuICAgIC8vIGFkZCB0aGUgbmV3IGJ5dGVzIHRvIHRoZSBjaGFyIGJ1ZmZlclxuICAgIGJ1ZmZlci5jb3B5KHRoaXMuY2hhckJ1ZmZlciwgdGhpcy5jaGFyUmVjZWl2ZWQsIDAsIGF2YWlsYWJsZSk7XG4gICAgdGhpcy5jaGFyUmVjZWl2ZWQgKz0gYXZhaWxhYmxlO1xuXG4gICAgaWYgKHRoaXMuY2hhclJlY2VpdmVkIDwgdGhpcy5jaGFyTGVuZ3RoKSB7XG4gICAgICAvLyBzdGlsbCBub3QgZW5vdWdoIGNoYXJzIGluIHRoaXMgYnVmZmVyPyB3YWl0IGZvciBtb3JlIC4uLlxuICAgICAgcmV0dXJuICcnO1xuICAgIH1cblxuICAgIC8vIHJlbW92ZSBieXRlcyBiZWxvbmdpbmcgdG8gdGhlIGN1cnJlbnQgY2hhcmFjdGVyIGZyb20gdGhlIGJ1ZmZlclxuICAgIGJ1ZmZlciA9IGJ1ZmZlci5zbGljZShhdmFpbGFibGUsIGJ1ZmZlci5sZW5ndGgpO1xuXG4gICAgLy8gZ2V0IHRoZSBjaGFyYWN0ZXIgdGhhdCB3YXMgc3BsaXRcbiAgICBjaGFyU3RyID0gdGhpcy5jaGFyQnVmZmVyLnNsaWNlKDAsIHRoaXMuY2hhckxlbmd0aCkudG9TdHJpbmcodGhpcy5lbmNvZGluZyk7XG5cbiAgICAvLyBDRVNVLTg6IGxlYWQgc3Vycm9nYXRlIChEODAwLURCRkYpIGlzIGFsc28gdGhlIGluY29tcGxldGUgY2hhcmFjdGVyXG4gICAgdmFyIGNoYXJDb2RlID0gY2hhclN0ci5jaGFyQ29kZUF0KGNoYXJTdHIubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGNoYXJDb2RlID49IDB4RDgwMCAmJiBjaGFyQ29kZSA8PSAweERCRkYpIHtcbiAgICAgIHRoaXMuY2hhckxlbmd0aCArPSB0aGlzLnN1cnJvZ2F0ZVNpemU7XG4gICAgICBjaGFyU3RyID0gJyc7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgdGhpcy5jaGFyUmVjZWl2ZWQgPSB0aGlzLmNoYXJMZW5ndGggPSAwO1xuXG4gICAgLy8gaWYgdGhlcmUgYXJlIG5vIG1vcmUgYnl0ZXMgaW4gdGhpcyBidWZmZXIsIGp1c3QgZW1pdCBvdXIgY2hhclxuICAgIGlmIChidWZmZXIubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gY2hhclN0cjtcbiAgICB9XG4gICAgYnJlYWs7XG4gIH1cblxuICAvLyBkZXRlcm1pbmUgYW5kIHNldCBjaGFyTGVuZ3RoIC8gY2hhclJlY2VpdmVkXG4gIHRoaXMuZGV0ZWN0SW5jb21wbGV0ZUNoYXIoYnVmZmVyKTtcblxuICB2YXIgZW5kID0gYnVmZmVyLmxlbmd0aDtcbiAgaWYgKHRoaXMuY2hhckxlbmd0aCkge1xuICAgIC8vIGJ1ZmZlciB0aGUgaW5jb21wbGV0ZSBjaGFyYWN0ZXIgYnl0ZXMgd2UgZ290XG4gICAgYnVmZmVyLmNvcHkodGhpcy5jaGFyQnVmZmVyLCAwLCBidWZmZXIubGVuZ3RoIC0gdGhpcy5jaGFyUmVjZWl2ZWQsIGVuZCk7XG4gICAgZW5kIC09IHRoaXMuY2hhclJlY2VpdmVkO1xuICB9XG5cbiAgY2hhclN0ciArPSBidWZmZXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywgMCwgZW5kKTtcblxuICB2YXIgZW5kID0gY2hhclN0ci5sZW5ndGggLSAxO1xuICB2YXIgY2hhckNvZGUgPSBjaGFyU3RyLmNoYXJDb2RlQXQoZW5kKTtcbiAgLy8gQ0VTVS04OiBsZWFkIHN1cnJvZ2F0ZSAoRDgwMC1EQkZGKSBpcyBhbHNvIHRoZSBpbmNvbXBsZXRlIGNoYXJhY3RlclxuICBpZiAoY2hhckNvZGUgPj0gMHhEODAwICYmIGNoYXJDb2RlIDw9IDB4REJGRikge1xuICAgIHZhciBzaXplID0gdGhpcy5zdXJyb2dhdGVTaXplO1xuICAgIHRoaXMuY2hhckxlbmd0aCArPSBzaXplO1xuICAgIHRoaXMuY2hhclJlY2VpdmVkICs9IHNpemU7XG4gICAgdGhpcy5jaGFyQnVmZmVyLmNvcHkodGhpcy5jaGFyQnVmZmVyLCBzaXplLCAwLCBzaXplKTtcbiAgICBidWZmZXIuY29weSh0aGlzLmNoYXJCdWZmZXIsIDAsIDAsIHNpemUpO1xuICAgIHJldHVybiBjaGFyU3RyLnN1YnN0cmluZygwLCBlbmQpO1xuICB9XG5cbiAgLy8gb3IganVzdCBlbWl0IHRoZSBjaGFyU3RyXG4gIHJldHVybiBjaGFyU3RyO1xufTtcblxuLy8gZGV0ZWN0SW5jb21wbGV0ZUNoYXIgZGV0ZXJtaW5lcyBpZiB0aGVyZSBpcyBhbiBpbmNvbXBsZXRlIFVURi04IGNoYXJhY3RlciBhdFxuLy8gdGhlIGVuZCBvZiB0aGUgZ2l2ZW4gYnVmZmVyLiBJZiBzbywgaXQgc2V0cyB0aGlzLmNoYXJMZW5ndGggdG8gdGhlIGJ5dGVcbi8vIGxlbmd0aCB0aGF0IGNoYXJhY3RlciwgYW5kIHNldHMgdGhpcy5jaGFyUmVjZWl2ZWQgdG8gdGhlIG51bWJlciBvZiBieXRlc1xuLy8gdGhhdCBhcmUgYXZhaWxhYmxlIGZvciB0aGlzIGNoYXJhY3Rlci5cblN0cmluZ0RlY29kZXIucHJvdG90eXBlLmRldGVjdEluY29tcGxldGVDaGFyID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gIC8vIGRldGVybWluZSBob3cgbWFueSBieXRlcyB3ZSBoYXZlIHRvIGNoZWNrIGF0IHRoZSBlbmQgb2YgdGhpcyBidWZmZXJcbiAgdmFyIGkgPSAoYnVmZmVyLmxlbmd0aCA+PSAzKSA/IDMgOiBidWZmZXIubGVuZ3RoO1xuXG4gIC8vIEZpZ3VyZSBvdXQgaWYgb25lIG9mIHRoZSBsYXN0IGkgYnl0ZXMgb2Ygb3VyIGJ1ZmZlciBhbm5vdW5jZXMgYW5cbiAgLy8gaW5jb21wbGV0ZSBjaGFyLlxuICBmb3IgKDsgaSA+IDA7IGktLSkge1xuICAgIHZhciBjID0gYnVmZmVyW2J1ZmZlci5sZW5ndGggLSBpXTtcblxuICAgIC8vIFNlZSBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1VURi04I0Rlc2NyaXB0aW9uXG5cbiAgICAvLyAxMTBYWFhYWFxuICAgIGlmIChpID09IDEgJiYgYyA+PiA1ID09IDB4MDYpIHtcbiAgICAgIHRoaXMuY2hhckxlbmd0aCA9IDI7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICAvLyAxMTEwWFhYWFxuICAgIGlmIChpIDw9IDIgJiYgYyA+PiA0ID09IDB4MEUpIHtcbiAgICAgIHRoaXMuY2hhckxlbmd0aCA9IDM7XG4gICAgICBicmVhaztcbiAgICB9XG5cbiAgICAvLyAxMTExMFhYWFxuICAgIGlmIChpIDw9IDMgJiYgYyA+PiAzID09IDB4MUUpIHtcbiAgICAgIHRoaXMuY2hhckxlbmd0aCA9IDQ7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgdGhpcy5jaGFyUmVjZWl2ZWQgPSBpO1xufTtcblxuU3RyaW5nRGVjb2Rlci5wcm90b3R5cGUuZW5kID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gIHZhciByZXMgPSAnJztcbiAgaWYgKGJ1ZmZlciAmJiBidWZmZXIubGVuZ3RoKVxuICAgIHJlcyA9IHRoaXMud3JpdGUoYnVmZmVyKTtcblxuICBpZiAodGhpcy5jaGFyUmVjZWl2ZWQpIHtcbiAgICB2YXIgY3IgPSB0aGlzLmNoYXJSZWNlaXZlZDtcbiAgICB2YXIgYnVmID0gdGhpcy5jaGFyQnVmZmVyO1xuICAgIHZhciBlbmMgPSB0aGlzLmVuY29kaW5nO1xuICAgIHJlcyArPSBidWYuc2xpY2UoMCwgY3IpLnRvU3RyaW5nKGVuYyk7XG4gIH1cblxuICByZXR1cm4gcmVzO1xufTtcblxuZnVuY3Rpb24gcGFzc1Rocm91Z2hXcml0ZShidWZmZXIpIHtcbiAgcmV0dXJuIGJ1ZmZlci50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbn1cblxuZnVuY3Rpb24gdXRmMTZEZXRlY3RJbmNvbXBsZXRlQ2hhcihidWZmZXIpIHtcbiAgdGhpcy5jaGFyUmVjZWl2ZWQgPSBidWZmZXIubGVuZ3RoICUgMjtcbiAgdGhpcy5jaGFyTGVuZ3RoID0gdGhpcy5jaGFyUmVjZWl2ZWQgPyAyIDogMDtcbn1cblxuZnVuY3Rpb24gYmFzZTY0RGV0ZWN0SW5jb21wbGV0ZUNoYXIoYnVmZmVyKSB7XG4gIHRoaXMuY2hhclJlY2VpdmVkID0gYnVmZmVyLmxlbmd0aCAlIDM7XG4gIHRoaXMuY2hhckxlbmd0aCA9IHRoaXMuY2hhclJlY2VpdmVkID8gMyA6IDA7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9ub2RlLWxpYnMtYnJvd3Nlci9ub2RlX21vZHVsZXMvc3RyaW5nX2RlY29kZXIvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyBhIHRyYW5zZm9ybSBzdHJlYW0gaXMgYSByZWFkYWJsZS93cml0YWJsZSBzdHJlYW0gd2hlcmUgeW91IGRvXG4vLyBzb21ldGhpbmcgd2l0aCB0aGUgZGF0YS4gIFNvbWV0aW1lcyBpdCdzIGNhbGxlZCBhIFwiZmlsdGVyXCIsXG4vLyBidXQgdGhhdCdzIG5vdCBhIGdyZWF0IG5hbWUgZm9yIGl0LCBzaW5jZSB0aGF0IGltcGxpZXMgYSB0aGluZyB3aGVyZVxuLy8gc29tZSBiaXRzIHBhc3MgdGhyb3VnaCwgYW5kIG90aGVycyBhcmUgc2ltcGx5IGlnbm9yZWQuICAoVGhhdCB3b3VsZFxuLy8gYmUgYSB2YWxpZCBleGFtcGxlIG9mIGEgdHJhbnNmb3JtLCBvZiBjb3Vyc2UuKVxuLy9cbi8vIFdoaWxlIHRoZSBvdXRwdXQgaXMgY2F1c2FsbHkgcmVsYXRlZCB0byB0aGUgaW5wdXQsIGl0J3Mgbm90IGFcbi8vIG5lY2Vzc2FyaWx5IHN5bW1ldHJpYyBvciBzeW5jaHJvbm91cyB0cmFuc2Zvcm1hdGlvbi4gIEZvciBleGFtcGxlLFxuLy8gYSB6bGliIHN0cmVhbSBtaWdodCB0YWtlIG11bHRpcGxlIHBsYWluLXRleHQgd3JpdGVzKCksIGFuZCB0aGVuXG4vLyBlbWl0IGEgc2luZ2xlIGNvbXByZXNzZWQgY2h1bmsgc29tZSB0aW1lIGluIHRoZSBmdXR1cmUuXG4vL1xuLy8gSGVyZSdzIGhvdyB0aGlzIHdvcmtzOlxuLy9cbi8vIFRoZSBUcmFuc2Zvcm0gc3RyZWFtIGhhcyBhbGwgdGhlIGFzcGVjdHMgb2YgdGhlIHJlYWRhYmxlIGFuZCB3cml0YWJsZVxuLy8gc3RyZWFtIGNsYXNzZXMuICBXaGVuIHlvdSB3cml0ZShjaHVuayksIHRoYXQgY2FsbHMgX3dyaXRlKGNodW5rLGNiKVxuLy8gaW50ZXJuYWxseSwgYW5kIHJldHVybnMgZmFsc2UgaWYgdGhlcmUncyBhIGxvdCBvZiBwZW5kaW5nIHdyaXRlc1xuLy8gYnVmZmVyZWQgdXAuICBXaGVuIHlvdSBjYWxsIHJlYWQoKSwgdGhhdCBjYWxscyBfcmVhZChuKSB1bnRpbFxuLy8gdGhlcmUncyBlbm91Z2ggcGVuZGluZyByZWFkYWJsZSBkYXRhIGJ1ZmZlcmVkIHVwLlxuLy9cbi8vIEluIGEgdHJhbnNmb3JtIHN0cmVhbSwgdGhlIHdyaXR0ZW4gZGF0YSBpcyBwbGFjZWQgaW4gYSBidWZmZXIuICBXaGVuXG4vLyBfcmVhZChuKSBpcyBjYWxsZWQsIGl0IHRyYW5zZm9ybXMgdGhlIHF1ZXVlZCB1cCBkYXRhLCBjYWxsaW5nIHRoZVxuLy8gYnVmZmVyZWQgX3dyaXRlIGNiJ3MgYXMgaXQgY29uc3VtZXMgY2h1bmtzLiAgSWYgY29uc3VtaW5nIGEgc2luZ2xlXG4vLyB3cml0dGVuIGNodW5rIHdvdWxkIHJlc3VsdCBpbiBtdWx0aXBsZSBvdXRwdXQgY2h1bmtzLCB0aGVuIHRoZSBmaXJzdFxuLy8gb3V0cHV0dGVkIGJpdCBjYWxscyB0aGUgcmVhZGNiLCBhbmQgc3Vic2VxdWVudCBjaHVua3MganVzdCBnbyBpbnRvXG4vLyB0aGUgcmVhZCBidWZmZXIsIGFuZCB3aWxsIGNhdXNlIGl0IHRvIGVtaXQgJ3JlYWRhYmxlJyBpZiBuZWNlc3NhcnkuXG4vL1xuLy8gVGhpcyB3YXksIGJhY2stcHJlc3N1cmUgaXMgYWN0dWFsbHkgZGV0ZXJtaW5lZCBieSB0aGUgcmVhZGluZyBzaWRlLFxuLy8gc2luY2UgX3JlYWQgaGFzIHRvIGJlIGNhbGxlZCB0byBzdGFydCBwcm9jZXNzaW5nIGEgbmV3IGNodW5rLiAgSG93ZXZlcixcbi8vIGEgcGF0aG9sb2dpY2FsIGluZmxhdGUgdHlwZSBvZiB0cmFuc2Zvcm0gY2FuIGNhdXNlIGV4Y2Vzc2l2ZSBidWZmZXJpbmdcbi8vIGhlcmUuICBGb3IgZXhhbXBsZSwgaW1hZ2luZSBhIHN0cmVhbSB3aGVyZSBldmVyeSBieXRlIG9mIGlucHV0IGlzXG4vLyBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyIGZyb20gMC0yNTUsIGFuZCB0aGVuIHJlc3VsdHMgaW4gdGhhdCBtYW55XG4vLyBieXRlcyBvZiBvdXRwdXQuICBXcml0aW5nIHRoZSA0IGJ5dGVzIHtmZixmZixmZixmZn0gd291bGQgcmVzdWx0IGluXG4vLyAxa2Igb2YgZGF0YSBiZWluZyBvdXRwdXQuICBJbiB0aGlzIGNhc2UsIHlvdSBjb3VsZCB3cml0ZSBhIHZlcnkgc21hbGxcbi8vIGFtb3VudCBvZiBpbnB1dCwgYW5kIGVuZCB1cCB3aXRoIGEgdmVyeSBsYXJnZSBhbW91bnQgb2Ygb3V0cHV0LiAgSW5cbi8vIHN1Y2ggYSBwYXRob2xvZ2ljYWwgaW5mbGF0aW5nIG1lY2hhbmlzbSwgdGhlcmUnZCBiZSBubyB3YXkgdG8gdGVsbFxuLy8gdGhlIHN5c3RlbSB0byBzdG9wIGRvaW5nIHRoZSB0cmFuc2Zvcm0uICBBIHNpbmdsZSA0TUIgd3JpdGUgY291bGRcbi8vIGNhdXNlIHRoZSBzeXN0ZW0gdG8gcnVuIG91dCBvZiBtZW1vcnkuXG4vL1xuLy8gSG93ZXZlciwgZXZlbiBpbiBzdWNoIGEgcGF0aG9sb2dpY2FsIGNhc2UsIG9ubHkgYSBzaW5nbGUgd3JpdHRlbiBjaHVua1xuLy8gd291bGQgYmUgY29uc3VtZWQsIGFuZCB0aGVuIHRoZSByZXN0IHdvdWxkIHdhaXQgKHVuLXRyYW5zZm9ybWVkKSB1bnRpbFxuLy8gdGhlIHJlc3VsdHMgb2YgdGhlIHByZXZpb3VzIHRyYW5zZm9ybWVkIGNodW5rIHdlcmUgY29uc3VtZWQuXG5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBUcmFuc2Zvcm07XG5cbnZhciBEdXBsZXggPSByZXF1aXJlKCcuL19zdHJlYW1fZHVwbGV4Jyk7XG5cbi8qPHJlcGxhY2VtZW50PiovXG52YXIgdXRpbCA9IHJlcXVpcmUoJ2NvcmUtdXRpbC1pcycpO1xudXRpbC5pbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJyk7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxudXRpbC5pbmhlcml0cyhUcmFuc2Zvcm0sIER1cGxleCk7XG5cbmZ1bmN0aW9uIFRyYW5zZm9ybVN0YXRlKHN0cmVhbSkge1xuICB0aGlzLmFmdGVyVHJhbnNmb3JtID0gZnVuY3Rpb24gKGVyLCBkYXRhKSB7XG4gICAgcmV0dXJuIGFmdGVyVHJhbnNmb3JtKHN0cmVhbSwgZXIsIGRhdGEpO1xuICB9O1xuXG4gIHRoaXMubmVlZFRyYW5zZm9ybSA9IGZhbHNlO1xuICB0aGlzLnRyYW5zZm9ybWluZyA9IGZhbHNlO1xuICB0aGlzLndyaXRlY2IgPSBudWxsO1xuICB0aGlzLndyaXRlY2h1bmsgPSBudWxsO1xuICB0aGlzLndyaXRlZW5jb2RpbmcgPSBudWxsO1xufVxuXG5mdW5jdGlvbiBhZnRlclRyYW5zZm9ybShzdHJlYW0sIGVyLCBkYXRhKSB7XG4gIHZhciB0cyA9IHN0cmVhbS5fdHJhbnNmb3JtU3RhdGU7XG4gIHRzLnRyYW5zZm9ybWluZyA9IGZhbHNlO1xuXG4gIHZhciBjYiA9IHRzLndyaXRlY2I7XG5cbiAgaWYgKCFjYikge1xuICAgIHJldHVybiBzdHJlYW0uZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ3dyaXRlIGNhbGxiYWNrIGNhbGxlZCBtdWx0aXBsZSB0aW1lcycpKTtcbiAgfVxuXG4gIHRzLndyaXRlY2h1bmsgPSBudWxsO1xuICB0cy53cml0ZWNiID0gbnVsbDtcblxuICBpZiAoZGF0YSAhPT0gbnVsbCAmJiBkYXRhICE9PSB1bmRlZmluZWQpIHN0cmVhbS5wdXNoKGRhdGEpO1xuXG4gIGNiKGVyKTtcblxuICB2YXIgcnMgPSBzdHJlYW0uX3JlYWRhYmxlU3RhdGU7XG4gIHJzLnJlYWRpbmcgPSBmYWxzZTtcbiAgaWYgKHJzLm5lZWRSZWFkYWJsZSB8fCBycy5sZW5ndGggPCBycy5oaWdoV2F0ZXJNYXJrKSB7XG4gICAgc3RyZWFtLl9yZWFkKHJzLmhpZ2hXYXRlck1hcmspO1xuICB9XG59XG5cbmZ1bmN0aW9uIFRyYW5zZm9ybShvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBUcmFuc2Zvcm0pKSByZXR1cm4gbmV3IFRyYW5zZm9ybShvcHRpb25zKTtcblxuICBEdXBsZXguY2FsbCh0aGlzLCBvcHRpb25zKTtcblxuICB0aGlzLl90cmFuc2Zvcm1TdGF0ZSA9IG5ldyBUcmFuc2Zvcm1TdGF0ZSh0aGlzKTtcblxuICB2YXIgc3RyZWFtID0gdGhpcztcblxuICAvLyBzdGFydCBvdXQgYXNraW5nIGZvciBhIHJlYWRhYmxlIGV2ZW50IG9uY2UgZGF0YSBpcyB0cmFuc2Zvcm1lZC5cbiAgdGhpcy5fcmVhZGFibGVTdGF0ZS5uZWVkUmVhZGFibGUgPSB0cnVlO1xuXG4gIC8vIHdlIGhhdmUgaW1wbGVtZW50ZWQgdGhlIF9yZWFkIG1ldGhvZCwgYW5kIGRvbmUgdGhlIG90aGVyIHRoaW5nc1xuICAvLyB0aGF0IFJlYWRhYmxlIHdhbnRzIGJlZm9yZSB0aGUgZmlyc3QgX3JlYWQgY2FsbCwgc28gdW5zZXQgdGhlXG4gIC8vIHN5bmMgZ3VhcmQgZmxhZy5cbiAgdGhpcy5fcmVhZGFibGVTdGF0ZS5zeW5jID0gZmFsc2U7XG5cbiAgaWYgKG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMudHJhbnNmb3JtID09PSAnZnVuY3Rpb24nKSB0aGlzLl90cmFuc2Zvcm0gPSBvcHRpb25zLnRyYW5zZm9ybTtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5mbHVzaCA9PT0gJ2Z1bmN0aW9uJykgdGhpcy5fZmx1c2ggPSBvcHRpb25zLmZsdXNoO1xuICB9XG5cbiAgLy8gV2hlbiB0aGUgd3JpdGFibGUgc2lkZSBmaW5pc2hlcywgdGhlbiBmbHVzaCBvdXQgYW55dGhpbmcgcmVtYWluaW5nLlxuICB0aGlzLm9uY2UoJ3ByZWZpbmlzaCcsIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuX2ZsdXNoID09PSAnZnVuY3Rpb24nKSB0aGlzLl9mbHVzaChmdW5jdGlvbiAoZXIsIGRhdGEpIHtcbiAgICAgIGRvbmUoc3RyZWFtLCBlciwgZGF0YSk7XG4gICAgfSk7ZWxzZSBkb25lKHN0cmVhbSk7XG4gIH0pO1xufVxuXG5UcmFuc2Zvcm0ucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiAoY2h1bmssIGVuY29kaW5nKSB7XG4gIHRoaXMuX3RyYW5zZm9ybVN0YXRlLm5lZWRUcmFuc2Zvcm0gPSBmYWxzZTtcbiAgcmV0dXJuIER1cGxleC5wcm90b3R5cGUucHVzaC5jYWxsKHRoaXMsIGNodW5rLCBlbmNvZGluZyk7XG59O1xuXG4vLyBUaGlzIGlzIHRoZSBwYXJ0IHdoZXJlIHlvdSBkbyBzdHVmZiFcbi8vIG92ZXJyaWRlIHRoaXMgZnVuY3Rpb24gaW4gaW1wbGVtZW50YXRpb24gY2xhc3Nlcy5cbi8vICdjaHVuaycgaXMgYW4gaW5wdXQgY2h1bmsuXG4vL1xuLy8gQ2FsbCBgcHVzaChuZXdDaHVuaylgIHRvIHBhc3MgYWxvbmcgdHJhbnNmb3JtZWQgb3V0cHV0XG4vLyB0byB0aGUgcmVhZGFibGUgc2lkZS4gIFlvdSBtYXkgY2FsbCAncHVzaCcgemVybyBvciBtb3JlIHRpbWVzLlxuLy9cbi8vIENhbGwgYGNiKGVycilgIHdoZW4geW91IGFyZSBkb25lIHdpdGggdGhpcyBjaHVuay4gIElmIHlvdSBwYXNzXG4vLyBhbiBlcnJvciwgdGhlbiB0aGF0J2xsIHB1dCB0aGUgaHVydCBvbiB0aGUgd2hvbGUgb3BlcmF0aW9uLiAgSWYgeW91XG4vLyBuZXZlciBjYWxsIGNiKCksIHRoZW4geW91J2xsIG5ldmVyIGdldCBhbm90aGVyIGNodW5rLlxuVHJhbnNmb3JtLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdfdHJhbnNmb3JtKCkgaXMgbm90IGltcGxlbWVudGVkJyk7XG59O1xuXG5UcmFuc2Zvcm0ucHJvdG90eXBlLl93cml0ZSA9IGZ1bmN0aW9uIChjaHVuaywgZW5jb2RpbmcsIGNiKSB7XG4gIHZhciB0cyA9IHRoaXMuX3RyYW5zZm9ybVN0YXRlO1xuICB0cy53cml0ZWNiID0gY2I7XG4gIHRzLndyaXRlY2h1bmsgPSBjaHVuaztcbiAgdHMud3JpdGVlbmNvZGluZyA9IGVuY29kaW5nO1xuICBpZiAoIXRzLnRyYW5zZm9ybWluZykge1xuICAgIHZhciBycyA9IHRoaXMuX3JlYWRhYmxlU3RhdGU7XG4gICAgaWYgKHRzLm5lZWRUcmFuc2Zvcm0gfHwgcnMubmVlZFJlYWRhYmxlIHx8IHJzLmxlbmd0aCA8IHJzLmhpZ2hXYXRlck1hcmspIHRoaXMuX3JlYWQocnMuaGlnaFdhdGVyTWFyayk7XG4gIH1cbn07XG5cbi8vIERvZXNuJ3QgbWF0dGVyIHdoYXQgdGhlIGFyZ3MgYXJlIGhlcmUuXG4vLyBfdHJhbnNmb3JtIGRvZXMgYWxsIHRoZSB3b3JrLlxuLy8gVGhhdCB3ZSBnb3QgaGVyZSBtZWFucyB0aGF0IHRoZSByZWFkYWJsZSBzaWRlIHdhbnRzIG1vcmUgZGF0YS5cblRyYW5zZm9ybS5wcm90b3R5cGUuX3JlYWQgPSBmdW5jdGlvbiAobikge1xuICB2YXIgdHMgPSB0aGlzLl90cmFuc2Zvcm1TdGF0ZTtcblxuICBpZiAodHMud3JpdGVjaHVuayAhPT0gbnVsbCAmJiB0cy53cml0ZWNiICYmICF0cy50cmFuc2Zvcm1pbmcpIHtcbiAgICB0cy50cmFuc2Zvcm1pbmcgPSB0cnVlO1xuICAgIHRoaXMuX3RyYW5zZm9ybSh0cy53cml0ZWNodW5rLCB0cy53cml0ZWVuY29kaW5nLCB0cy5hZnRlclRyYW5zZm9ybSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gbWFyayB0aGF0IHdlIG5lZWQgYSB0cmFuc2Zvcm0sIHNvIHRoYXQgYW55IGRhdGEgdGhhdCBjb21lcyBpblxuICAgIC8vIHdpbGwgZ2V0IHByb2Nlc3NlZCwgbm93IHRoYXQgd2UndmUgYXNrZWQgZm9yIGl0LlxuICAgIHRzLm5lZWRUcmFuc2Zvcm0gPSB0cnVlO1xuICB9XG59O1xuXG5UcmFuc2Zvcm0ucHJvdG90eXBlLl9kZXN0cm95ID0gZnVuY3Rpb24gKGVyciwgY2IpIHtcbiAgdmFyIF90aGlzID0gdGhpcztcblxuICBEdXBsZXgucHJvdG90eXBlLl9kZXN0cm95LmNhbGwodGhpcywgZXJyLCBmdW5jdGlvbiAoZXJyMikge1xuICAgIGNiKGVycjIpO1xuICAgIF90aGlzLmVtaXQoJ2Nsb3NlJyk7XG4gIH0pO1xufTtcblxuZnVuY3Rpb24gZG9uZShzdHJlYW0sIGVyLCBkYXRhKSB7XG4gIGlmIChlcikgcmV0dXJuIHN0cmVhbS5lbWl0KCdlcnJvcicsIGVyKTtcblxuICBpZiAoZGF0YSAhPT0gbnVsbCAmJiBkYXRhICE9PSB1bmRlZmluZWQpIHN0cmVhbS5wdXNoKGRhdGEpO1xuXG4gIC8vIGlmIHRoZXJlJ3Mgbm90aGluZyBpbiB0aGUgd3JpdGUgYnVmZmVyLCB0aGVuIHRoYXQgbWVhbnNcbiAgLy8gdGhhdCBub3RoaW5nIG1vcmUgd2lsbCBldmVyIGJlIHByb3ZpZGVkXG4gIHZhciB3cyA9IHN0cmVhbS5fd3JpdGFibGVTdGF0ZTtcbiAgdmFyIHRzID0gc3RyZWFtLl90cmFuc2Zvcm1TdGF0ZTtcblxuICBpZiAod3MubGVuZ3RoKSB0aHJvdyBuZXcgRXJyb3IoJ0NhbGxpbmcgdHJhbnNmb3JtIGRvbmUgd2hlbiB3cy5sZW5ndGggIT0gMCcpO1xuXG4gIGlmICh0cy50cmFuc2Zvcm1pbmcpIHRocm93IG5ldyBFcnJvcignQ2FsbGluZyB0cmFuc2Zvcm0gZG9uZSB3aGVuIHN0aWxsIHRyYW5zZm9ybWluZycpO1xuXG4gIHJldHVybiBzdHJlYW0ucHVzaChudWxsKTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fdHJhbnNmb3JtLmpzXG4vLyBtb2R1bGUgaWQgPSAyM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJ2YXIgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKTtcblxudmFyIGh0dHBzID0gbW9kdWxlLmV4cG9ydHM7XG5cbmZvciAodmFyIGtleSBpbiBodHRwKSB7XG4gICAgaWYgKGh0dHAuaGFzT3duUHJvcGVydHkoa2V5KSkgaHR0cHNba2V5XSA9IGh0dHBba2V5XTtcbn07XG5cbmh0dHBzLnJlcXVlc3QgPSBmdW5jdGlvbiAocGFyYW1zLCBjYikge1xuICAgIGlmICghcGFyYW1zKSBwYXJhbXMgPSB7fTtcbiAgICBwYXJhbXMuc2NoZW1lID0gJ2h0dHBzJztcbiAgICBwYXJhbXMucHJvdG9jb2wgPSAnaHR0cHM6JztcbiAgICByZXR1cm4gaHR0cC5yZXF1ZXN0LmNhbGwodGhpcywgcGFyYW1zLCBjYik7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9ub2RlLWxpYnMtYnJvd3Nlci9ub2RlX21vZHVsZXMvaHR0cHMtYnJvd3NlcmlmeS9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYXV0aHRlc3Q7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBhdXRodGVzdChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdhdXRoLnRlc3QnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2F1dGgudGVzdC5qc1xuLy8gbW9kdWxlIGlkID0gMjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYm90c2luZm87XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBib3RzaW5mbyhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdib3RzLmluZm8nO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2JvdHMuaW5mby5qc1xuLy8gbW9kdWxlIGlkID0gMjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hhbm5lbHNhcmNoaXZlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gY2hhbm5lbHNhcmNoaXZlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2NoYW5uZWxzLmFyY2hpdmUnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLmFyY2hpdmUuanNcbi8vIG1vZHVsZSBpZCA9IDI3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoYW5uZWxzY3JlYXRlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gY2hhbm5lbHNjcmVhdGUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnY2hhbm5lbHMuY3JlYXRlJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDI4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoYW5uZWxzaGlzdG9yeTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGNoYW5uZWxzaGlzdG9yeShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdjaGFubmVscy5oaXN0b3J5JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5oaXN0b3J5LmpzXG4vLyBtb2R1bGUgaWQgPSAyOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjaGFubmVsc2luZm87XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBjaGFubmVsc2luZm8ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnY2hhbm5lbHMuaW5mbyc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhbm5lbHMuaW5mby5qc1xuLy8gbW9kdWxlIGlkID0gMzBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hhbm5lbHNpbnZpdGU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBjaGFubmVsc2ludml0ZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdjaGFubmVscy5pbnZpdGUnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLmludml0ZS5qc1xuLy8gbW9kdWxlIGlkID0gMzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hhbm5lbHNqb2luO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gY2hhbm5lbHNqb2luKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2NoYW5uZWxzLmpvaW4nO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLmpvaW4uanNcbi8vIG1vZHVsZSBpZCA9IDMyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoYW5uZWxza2ljaztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGNoYW5uZWxza2ljayhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdjaGFubmVscy5raWNrJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5raWNrLmpzXG4vLyBtb2R1bGUgaWQgPSAzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjaGFubmVsc2xlYXZlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gY2hhbm5lbHNsZWF2ZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdjaGFubmVscy5sZWF2ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhbm5lbHMubGVhdmUuanNcbi8vIG1vZHVsZSBpZCA9IDM0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoYW5uZWxzbGlzdDtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGNoYW5uZWxzbGlzdChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdjaGFubmVscy5saXN0JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5saXN0LmpzXG4vLyBtb2R1bGUgaWQgPSAzNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjaGFubmVsc21hcms7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBjaGFubmVsc21hcmsocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnY2hhbm5lbHMubWFyayc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhbm5lbHMubWFyay5qc1xuLy8gbW9kdWxlIGlkID0gMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hhbm5lbHNyZW5hbWU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBjaGFubmVsc3JlbmFtZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdjaGFubmVscy5yZW5hbWUnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLnJlbmFtZS5qc1xuLy8gbW9kdWxlIGlkID0gMzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hhbm5lbHNyZXBsaWVzO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gY2hhbm5lbHNyZXBsaWVzKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2NoYW5uZWxzLnJlcGxpZXMnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYW5uZWxzLnJlcGxpZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoYW5uZWxzc2V0UHVycG9zZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGNoYW5uZWxzc2V0UHVycG9zZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdjaGFubmVscy5zZXRQdXJwb3NlJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy5zZXRQdXJwb3NlLmpzXG4vLyBtb2R1bGUgaWQgPSAzOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjaGFubmVsc3NldFRvcGljO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gY2hhbm5lbHNzZXRUb3BpYyhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdjaGFubmVscy5zZXRUb3BpYyc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhbm5lbHMuc2V0VG9waWMuanNcbi8vIG1vZHVsZSBpZCA9IDQwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoYW5uZWxzdW5hcmNoaXZlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gY2hhbm5lbHN1bmFyY2hpdmUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnY2hhbm5lbHMudW5hcmNoaXZlJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGFubmVscy51bmFyY2hpdmUuanNcbi8vIG1vZHVsZSBpZCA9IDQxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoYXRkZWxldGU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBjaGF0ZGVsZXRlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2NoYXQuZGVsZXRlJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9jaGF0LmRlbGV0ZS5qc1xuLy8gbW9kdWxlIGlkID0gNDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hhdG1lTWVzc2FnZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGNoYXRtZU1lc3NhZ2UocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnY2hhdC5tZU1lc3NhZ2UnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYXQubWVNZXNzYWdlLmpzXG4vLyBtb2R1bGUgaWQgPSA0M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjaGF0cG9zdE1lc3NhZ2U7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBjaGF0cG9zdE1lc3NhZ2UocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnY2hhdC5wb3N0TWVzc2FnZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhdC5wb3N0TWVzc2FnZS5qc1xuLy8gbW9kdWxlIGlkID0gNDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hhdHVuZnVybDtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGNoYXR1bmZ1cmwocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnY2hhdC51bmZ1cmwnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYXQudW5mdXJsLmpzXG4vLyBtb2R1bGUgaWQgPSA0NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjaGF0dXBkYXRlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gY2hhdHVwZGF0ZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdjaGF0LnVwZGF0ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhdC51cGRhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDQ2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGRuZGVuZERuZDtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGRuZGVuZERuZChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdkbmQuZW5kRG5kJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9kbmQuZW5kRG5kLmpzXG4vLyBtb2R1bGUgaWQgPSA0N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBkbmRlbmRTbm9vemU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBkbmRlbmRTbm9vemUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZG5kLmVuZFNub296ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZG5kLmVuZFNub296ZS5qc1xuLy8gbW9kdWxlIGlkID0gNDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZG5kaW5mbztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGRuZGluZm8ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZG5kLmluZm8nO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2RuZC5pbmZvLmpzXG4vLyBtb2R1bGUgaWQgPSA0OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBkbmRzZXRTbm9vemU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBkbmRzZXRTbm9vemUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZG5kLnNldFNub296ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZG5kLnNldFNub296ZS5qc1xuLy8gbW9kdWxlIGlkID0gNTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZG5kdGVhbUluZm87XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBkbmR0ZWFtSW5mbyhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdkbmQudGVhbUluZm8nO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2RuZC50ZWFtSW5mby5qc1xuLy8gbW9kdWxlIGlkID0gNTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZW1vamlsaXN0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gZW1vamlsaXN0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2Vtb2ppLmxpc3QnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2Vtb2ppLmxpc3QuanNcbi8vIG1vZHVsZSBpZCA9IDUyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZpbGVzY29tbWVudHNhZGQ7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBmaWxlc2NvbW1lbnRzYWRkKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2ZpbGVzLmNvbW1lbnRzLmFkZCc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZmlsZXMuY29tbWVudHMuYWRkLmpzXG4vLyBtb2R1bGUgaWQgPSA1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmaWxlc2NvbW1lbnRzZGVsZXRlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gZmlsZXNjb21tZW50c2RlbGV0ZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdmaWxlcy5jb21tZW50cy5kZWxldGUnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ZpbGVzLmNvbW1lbnRzLmRlbGV0ZS5qc1xuLy8gbW9kdWxlIGlkID0gNTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmlsZXNjb21tZW50c2VkaXQ7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBmaWxlc2NvbW1lbnRzZWRpdChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdmaWxlcy5jb21tZW50cy5lZGl0JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9maWxlcy5jb21tZW50cy5lZGl0LmpzXG4vLyBtb2R1bGUgaWQgPSA1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmaWxlc2RlbGV0ZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGZpbGVzZGVsZXRlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2ZpbGVzLmRlbGV0ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZmlsZXMuZGVsZXRlLmpzXG4vLyBtb2R1bGUgaWQgPSA1NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmaWxlc2luZm87XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBmaWxlc2luZm8ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZmlsZXMuaW5mbyc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZmlsZXMuaW5mby5qc1xuLy8gbW9kdWxlIGlkID0gNTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmlsZXNsaXN0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gZmlsZXNsaXN0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2ZpbGVzLmxpc3QnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ZpbGVzLmxpc3QuanNcbi8vIG1vZHVsZSBpZCA9IDU4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZpbGVzcmV2b2tlUHVibGljVVJMO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gZmlsZXNyZXZva2VQdWJsaWNVUkwocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZmlsZXMucmV2b2tlUHVibGljVVJMJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9maWxlcy5yZXZva2VQdWJsaWNVUkwuanNcbi8vIG1vZHVsZSBpZCA9IDU5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZpbGVzc2hhcmVkUHVibGljVVJMO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gZmlsZXNzaGFyZWRQdWJsaWNVUkwocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZmlsZXMuc2hhcmVkUHVibGljVVJMJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9maWxlcy5zaGFyZWRQdWJsaWNVUkwuanNcbi8vIG1vZHVsZSBpZCA9IDYwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZpbGVzdXBsb2FkO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gZmlsZXN1cGxvYWQocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZmlsZXMudXBsb2FkJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9maWxlcy51cGxvYWQuanNcbi8vIG1vZHVsZSBpZCA9IDYxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyb3Vwc2FyY2hpdmU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBncm91cHNhcmNoaXZlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2dyb3Vwcy5hcmNoaXZlJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMuYXJjaGl2ZS5qc1xuLy8gbW9kdWxlIGlkID0gNjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JvdXBzY2xvc2U7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBncm91cHNjbG9zZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdncm91cHMuY2xvc2UnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2dyb3Vwcy5jbG9zZS5qc1xuLy8gbW9kdWxlIGlkID0gNjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JvdXBzY3JlYXRlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gZ3JvdXBzY3JlYXRlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2dyb3Vwcy5jcmVhdGUnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2dyb3Vwcy5jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDY0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyb3Vwc2NyZWF0ZUNoaWxkO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gZ3JvdXBzY3JlYXRlQ2hpbGQocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZ3JvdXBzLmNyZWF0ZUNoaWxkJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMuY3JlYXRlQ2hpbGQuanNcbi8vIG1vZHVsZSBpZCA9IDY1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyb3Vwc2hpc3Rvcnk7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBncm91cHNoaXN0b3J5KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2dyb3Vwcy5oaXN0b3J5JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMuaGlzdG9yeS5qc1xuLy8gbW9kdWxlIGlkID0gNjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JvdXBzaW5mbztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGdyb3Vwc2luZm8ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZ3JvdXBzLmluZm8nO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2dyb3Vwcy5pbmZvLmpzXG4vLyBtb2R1bGUgaWQgPSA2N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBncm91cHNpbnZpdGU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBncm91cHNpbnZpdGUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZ3JvdXBzLmludml0ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLmludml0ZS5qc1xuLy8gbW9kdWxlIGlkID0gNjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JvdXBza2ljaztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGdyb3Vwc2tpY2socGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZ3JvdXBzLmtpY2snO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2dyb3Vwcy5raWNrLmpzXG4vLyBtb2R1bGUgaWQgPSA2OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBncm91cHNsZWF2ZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGdyb3Vwc2xlYXZlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2dyb3Vwcy5sZWF2ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLmxlYXZlLmpzXG4vLyBtb2R1bGUgaWQgPSA3MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBncm91cHNsaXN0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gZ3JvdXBzbGlzdChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdncm91cHMubGlzdCc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLmxpc3QuanNcbi8vIG1vZHVsZSBpZCA9IDcxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyb3Vwc21hcms7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBncm91cHNtYXJrKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2dyb3Vwcy5tYXJrJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ncm91cHMubWFyay5qc1xuLy8gbW9kdWxlIGlkID0gNzJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JvdXBzb3BlbjtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGdyb3Vwc29wZW4ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZ3JvdXBzLm9wZW4nO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2dyb3Vwcy5vcGVuLmpzXG4vLyBtb2R1bGUgaWQgPSA3M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBncm91cHNyZW5hbWU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBncm91cHNyZW5hbWUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZ3JvdXBzLnJlbmFtZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLnJlbmFtZS5qc1xuLy8gbW9kdWxlIGlkID0gNzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JvdXBzc2V0UHVycG9zZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGdyb3Vwc3NldFB1cnBvc2UocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZ3JvdXBzLnNldFB1cnBvc2UnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2dyb3Vwcy5zZXRQdXJwb3NlLmpzXG4vLyBtb2R1bGUgaWQgPSA3NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBncm91cHNzZXRUb3BpYztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGdyb3Vwc3NldFRvcGljKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2dyb3Vwcy5zZXRUb3BpYyc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLnNldFRvcGljLmpzXG4vLyBtb2R1bGUgaWQgPSA3NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBncm91cHN1bmFyY2hpdmU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBncm91cHN1bmFyY2hpdmUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZ3JvdXBzLnVuYXJjaGl2ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLnVuYXJjaGl2ZS5qc1xuLy8gbW9kdWxlIGlkID0gNzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaW1jbG9zZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGltY2xvc2UocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnaW0uY2xvc2UnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ltLmNsb3NlLmpzXG4vLyBtb2R1bGUgaWQgPSA3OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpbWhpc3Rvcnk7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBpbWhpc3RvcnkocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnaW0uaGlzdG9yeSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvaW0uaGlzdG9yeS5qc1xuLy8gbW9kdWxlIGlkID0gNzlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaW1saXN0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gaW1saXN0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2ltLmxpc3QnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ltLmxpc3QuanNcbi8vIG1vZHVsZSBpZCA9IDgwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGltbWFyaztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGltbWFyayhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdpbS5tYXJrJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9pbS5tYXJrLmpzXG4vLyBtb2R1bGUgaWQgPSA4MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpbW9wZW47XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBpbW9wZW4ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnaW0ub3Blbic7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvaW0ub3Blbi5qc1xuLy8gbW9kdWxlIGlkID0gODJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gbXBpbWNsb3NlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gbXBpbWNsb3NlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ21waW0uY2xvc2UnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL21waW0uY2xvc2UuanNcbi8vIG1vZHVsZSBpZCA9IDgzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IG1waW1oaXN0b3J5O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gbXBpbWhpc3RvcnkocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnbXBpbS5oaXN0b3J5JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9tcGltLmhpc3RvcnkuanNcbi8vIG1vZHVsZSBpZCA9IDg0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IG1waW1saXN0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gbXBpbWxpc3QocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnbXBpbS5saXN0JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9tcGltLmxpc3QuanNcbi8vIG1vZHVsZSBpZCA9IDg1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IG1waW1tYXJrO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gbXBpbW1hcmsocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnbXBpbS5tYXJrJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9tcGltLm1hcmsuanNcbi8vIG1vZHVsZSBpZCA9IDg2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IG1waW1vcGVuO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gbXBpbW9wZW4ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnbXBpbS5vcGVuJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9tcGltLm9wZW4uanNcbi8vIG1vZHVsZSBpZCA9IDg3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBpbnNhZGQ7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBwaW5zYWRkKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3BpbnMuYWRkJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9waW5zLmFkZC5qc1xuLy8gbW9kdWxlIGlkID0gODhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcGluc2xpc3Q7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBwaW5zbGlzdChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdwaW5zLmxpc3QnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3BpbnMubGlzdC5qc1xuLy8gbW9kdWxlIGlkID0gODlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcGluc3JlbW92ZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHBpbnNyZW1vdmUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAncGlucy5yZW1vdmUnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3BpbnMucmVtb3ZlLmpzXG4vLyBtb2R1bGUgaWQgPSA5MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSByZWFjdGlvbnNhZGQ7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiByZWFjdGlvbnNhZGQocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAncmVhY3Rpb25zLmFkZCc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcmVhY3Rpb25zLmFkZC5qc1xuLy8gbW9kdWxlIGlkID0gOTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcmVhY3Rpb25zZ2V0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gcmVhY3Rpb25zZ2V0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3JlYWN0aW9ucy5nZXQnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3JlYWN0aW9ucy5nZXQuanNcbi8vIG1vZHVsZSBpZCA9IDkyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJlYWN0aW9uc2xpc3Q7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiByZWFjdGlvbnNsaXN0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3JlYWN0aW9ucy5saXN0JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9yZWFjdGlvbnMubGlzdC5qc1xuLy8gbW9kdWxlIGlkID0gOTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcmVhY3Rpb25zcmVtb3ZlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gcmVhY3Rpb25zcmVtb3ZlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3JlYWN0aW9ucy5yZW1vdmUnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3JlYWN0aW9ucy5yZW1vdmUuanNcbi8vIG1vZHVsZSBpZCA9IDk0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJlbWluZGVyc2FkZDtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHJlbWluZGVyc2FkZChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdyZW1pbmRlcnMuYWRkJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9yZW1pbmRlcnMuYWRkLmpzXG4vLyBtb2R1bGUgaWQgPSA5NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSByZW1pbmRlcnNjb21wbGV0ZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHJlbWluZGVyc2NvbXBsZXRlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3JlbWluZGVycy5jb21wbGV0ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcmVtaW5kZXJzLmNvbXBsZXRlLmpzXG4vLyBtb2R1bGUgaWQgPSA5NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSByZW1pbmRlcnNkZWxldGU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiByZW1pbmRlcnNkZWxldGUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAncmVtaW5kZXJzLmRlbGV0ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcmVtaW5kZXJzLmRlbGV0ZS5qc1xuLy8gbW9kdWxlIGlkID0gOTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcmVtaW5kZXJzaW5mbztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHJlbWluZGVyc2luZm8ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAncmVtaW5kZXJzLmluZm8nO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3JlbWluZGVycy5pbmZvLmpzXG4vLyBtb2R1bGUgaWQgPSA5OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSByZW1pbmRlcnNsaXN0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gcmVtaW5kZXJzbGlzdChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdyZW1pbmRlcnMubGlzdCc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcmVtaW5kZXJzLmxpc3QuanNcbi8vIG1vZHVsZSBpZCA9IDk5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJ0bWNvbm5lY3Q7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBydG1jb25uZWN0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3J0bS5jb25uZWN0JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ydG0uY29ubmVjdC5qc1xuLy8gbW9kdWxlIGlkID0gMTAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNlYXJjaGFsbDtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHNlYXJjaGFsbChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdzZWFyY2guYWxsJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9zZWFyY2guYWxsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gc2VhcmNoZmlsZXM7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBzZWFyY2hmaWxlcyhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdzZWFyY2guZmlsZXMnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3NlYXJjaC5maWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMTAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNlYXJjaG1lc3NhZ2VzO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gc2VhcmNobWVzc2FnZXMocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnc2VhcmNoLm1lc3NhZ2VzJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9zZWFyY2gubWVzc2FnZXMuanNcbi8vIG1vZHVsZSBpZCA9IDEwM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBzdGFyc2FkZDtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHN0YXJzYWRkKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3N0YXJzLmFkZCc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvc3RhcnMuYWRkLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gc3RhcnNsaXN0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gc3RhcnNsaXN0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3N0YXJzLmxpc3QnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3N0YXJzLmxpc3QuanNcbi8vIG1vZHVsZSBpZCA9IDEwNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBzdGFyc3JlbW92ZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHN0YXJzcmVtb3ZlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3N0YXJzLnJlbW92ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvc3RhcnMucmVtb3ZlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdGVhbWFjY2Vzc0xvZ3M7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiB0ZWFtYWNjZXNzTG9ncyhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICd0ZWFtLmFjY2Vzc0xvZ3MnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3RlYW0uYWNjZXNzTG9ncy5qc1xuLy8gbW9kdWxlIGlkID0gMTA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHRlYW1iaWxsYWJsZUluZm87XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiB0ZWFtYmlsbGFibGVJbmZvKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3RlYW0uYmlsbGFibGVJbmZvJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy90ZWFtLmJpbGxhYmxlSW5mby5qc1xuLy8gbW9kdWxlIGlkID0gMTA4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHRlYW1pbmZvO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gdGVhbWluZm8ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAndGVhbS5pbmZvJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy90ZWFtLmluZm8uanNcbi8vIG1vZHVsZSBpZCA9IDEwOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0ZWFtaW50ZWdyYXRpb25Mb2dzO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gdGVhbWludGVncmF0aW9uTG9ncyhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICd0ZWFtLmludGVncmF0aW9uTG9ncyc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdGVhbS5pbnRlZ3JhdGlvbkxvZ3MuanNcbi8vIG1vZHVsZSBpZCA9IDExMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0ZWFtcHJvZmlsZWdldDtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHRlYW1wcm9maWxlZ2V0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3RlYW0ucHJvZmlsZS5nZXQnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3RlYW0ucHJvZmlsZS5nZXQuanNcbi8vIG1vZHVsZSBpZCA9IDExMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VyZ3JvdXBzY3JlYXRlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gdXNlcmdyb3Vwc2NyZWF0ZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICd1c2VyZ3JvdXBzLmNyZWF0ZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcmdyb3Vwcy5jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDExMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VyZ3JvdXBzZGlzYWJsZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHVzZXJncm91cHNkaXNhYmxlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3VzZXJncm91cHMuZGlzYWJsZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcmdyb3Vwcy5kaXNhYmxlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlcmdyb3Vwc2VuYWJsZTtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHVzZXJncm91cHNlbmFibGUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAndXNlcmdyb3Vwcy5lbmFibGUnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJncm91cHMuZW5hYmxlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlcmdyb3Vwc2xpc3Q7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiB1c2VyZ3JvdXBzbGlzdChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICd1c2VyZ3JvdXBzLmxpc3QnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJncm91cHMubGlzdC5qc1xuLy8gbW9kdWxlIGlkID0gMTE1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZXJncm91cHN1cGRhdGU7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiB1c2VyZ3JvdXBzdXBkYXRlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3VzZXJncm91cHMudXBkYXRlJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2VyZ3JvdXBzLnVwZGF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gMTE2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZXJncm91cHN1c2Vyc2xpc3Q7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiB1c2VyZ3JvdXBzdXNlcnNsaXN0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3VzZXJncm91cHMudXNlcnMubGlzdCc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcmdyb3Vwcy51c2Vycy5saXN0LmpzXG4vLyBtb2R1bGUgaWQgPSAxMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlcmdyb3Vwc3VzZXJzdXBkYXRlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gdXNlcmdyb3Vwc3VzZXJzdXBkYXRlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3VzZXJncm91cHMudXNlcnMudXBkYXRlJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2VyZ3JvdXBzLnVzZXJzLnVwZGF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gMTE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZXJzZ2V0UHJlc2VuY2U7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiB1c2Vyc2dldFByZXNlbmNlKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3VzZXJzLmdldFByZXNlbmNlJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5nZXRQcmVzZW5jZS5qc1xuLy8gbW9kdWxlIGlkID0gMTE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZXJzaWRlbnRpdHk7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiB1c2Vyc2lkZW50aXR5KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3VzZXJzLmlkZW50aXR5JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5pZGVudGl0eS5qc1xuLy8gbW9kdWxlIGlkID0gMTIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZXJzaW5mbztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHVzZXJzaW5mbyhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICd1c2Vycy5pbmZvJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5pbmZvLmpzXG4vLyBtb2R1bGUgaWQgPSAxMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlcnNsaXN0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gdXNlcnNsaXN0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3VzZXJzLmxpc3QnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJzLmxpc3QuanNcbi8vIG1vZHVsZSBpZCA9IDEyMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2Vyc3Byb2ZpbGVnZXQ7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiB1c2Vyc3Byb2ZpbGVnZXQocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAndXNlcnMucHJvZmlsZS5nZXQnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJzLnByb2ZpbGUuZ2V0LmpzXG4vLyBtb2R1bGUgaWQgPSAxMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlcnNwcm9maWxlc2V0O1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gdXNlcnNwcm9maWxlc2V0KHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ3VzZXJzLnByb2ZpbGUuc2V0JztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5wcm9maWxlLnNldC5qc1xuLy8gbW9kdWxlIGlkID0gMTI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZXJzc2V0QWN0aXZlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gdXNlcnNzZXRBY3RpdmUocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAndXNlcnMuc2V0QWN0aXZlJztcbiAgdmFyIGVyciA9ICgwLCBfdmFsaWRhdGUyLmRlZmF1bHQpKG5zLCBwYXJhbXMpO1xuICBpZiAoZXJyKSB7XG4gICAgY2FsbGJhY2soZXJyKTtcbiAgfSBlbHNlIHtcbiAgICAoMCwgX2V4ZWMyLmRlZmF1bHQpKG5zLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5zZXRBY3RpdmUuanNcbi8vIG1vZHVsZSBpZCA9IDEyNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2Vyc3NldFByZXNlbmNlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gdXNlcnNzZXRQcmVzZW5jZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICd1c2Vycy5zZXRQcmVzZW5jZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcnMuc2V0UHJlc2VuY2UuanNcbi8vIG1vZHVsZSBpZCA9IDEyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJpbXBvcnQgc2xhY2sgZnJvbSAnc2xhY2snO1xuaW1wb3J0IHsgU3luY2hlciB9IGZyb20gJ3NlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvU3luY2hlcic7XG5pbXBvcnQgeyBNZXNzYWdlQm9keUlkZW50aXR5IH0gZnJvbSAnc2VydmljZS1mcmFtZXdvcmsvZGlzdC9JZGVudGl0eUZhY3RvcnknO1xuXG5jbGFzcyBTbGFja1Byb3RvU3R1YiB7XG5cbiAgY29uc3RydWN0b3IocnVudGltZVByb3RvU3R1YlVSTCwgYnVzLCBjb25maWcpIHtcbiAgICBpZiAoIXJ1bnRpbWVQcm90b1N0dWJVUkwpIHRocm93IG5ldyBFcnJvcignVGhlIHJ1bnRpbWVQcm90b1N0dWJVUkwgaXMgYSBuZWVkZWQgcGFyYW1ldGVyJyk7XG4gICAgaWYgKCFidXMpIHRocm93IG5ldyBFcnJvcignVGhlIGJ1cyBpcyBhIG5lZWRlZCBwYXJhbWV0ZXInKTtcbiAgICBpZiAoIWNvbmZpZykgdGhyb3cgbmV3IEVycm9yKCdUaGUgY29uZmlnIGlzIGEgbmVlZGVkIHBhcmFtZXRlcicpO1xuXG4gICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1Yl0gQ29uc3RydWN0b3IgTG9hZGVkJyk7XG5cbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xuXG4gICAgdGhpcy5fc3Vic2NyaWJlZExpc3QgPSBbXTtcbiAgICB0aGlzLl91c2Vyc0xpc3QgPSBbXTtcbiAgICB0aGlzLl9ncm91cHNMaXN0ID0gW107XG4gICAgdGhpcy5fY2hhbm5lbHNMaXN0ID0gW107XG4gICAgdGhpcy5faW1zTGlzdCA9IFtdO1xuICAgIHRoaXMuX29ic2VydmVyO1xuICAgIHRoaXMuX2NoYW5uZWxJRCA9ICcnO1xuICAgIHRoaXMuX2lkID0gMDtcbiAgICB0aGlzLl9jb250aW51b3VzT3BlbiA9IHRydWU7XG4gICAgdGhpcy5fdG9rZW4gPSAnJztcblxuICAgIHRoaXMuX3J1bnRpbWVQcm90b1N0dWJVUkwgPSBydW50aW1lUHJvdG9TdHViVVJMO1xuICAgIHRoaXMuX2J1cyA9IGJ1cztcbiAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XG5cbiAgICB0aGlzLl9ydW50aW1lU2Vzc2lvblVSTCA9IGNvbmZpZy5ydW50aW1lVVJMO1xuICAgIHRoaXMuX3JlT3BlbiA9IGZhbHNlO1xuICAgIHRoaXMuX3NsYWNrID0gc2xhY2s7XG4gICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1Yl0gaW5zdGF0aWF0ZSBzeW5jaGVyIHdpdGggcnVudGltZVVybCcsIHJ1bnRpbWVQcm90b1N0dWJVUkwpO1xuICAgIHRoaXMuX3N5bmNoZXIgPSBuZXcgU3luY2hlcihydW50aW1lUHJvdG9TdHViVVJMLCBidXMsIGNvbmZpZyk7XG5cbiAgICB0aGlzLl9zeW5jaGVyLm9uTm90aWZpY2F0aW9uKChldmVudCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1Yl0gT24gU3luY2hlciBOb3RpZmljYXRpb24nLCBldmVudCk7XG4gICAgfSk7XG5cbiAgICBidXMuYWRkTGlzdGVuZXIoJyonLCAobXNnKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnW1NsYWNrUHJvdG9zdHViXSBuZXcgbXNnJywgbXNnKTtcbiAgICAgIGlmIChtc2cuYm9keS5oYXNPd25Qcm9wZXJ0eSgnaWRlbnRpdHknKSAmJiBtc2cuYm9keS5pZGVudGl0eS5oYXNPd25Qcm9wZXJ0eSgnYWNjZXNzX3Rva2VuJykgJiYgbXNnLmJvZHkuaWRlbnRpdHkuYWNjZXNzX3Rva2VuKSB7XG5cbiAgICAgICAgbGV0IHRva2VuID0gbXNnLmJvZHkuaWRlbnRpdHkuYWNjZXNzX3Rva2VuO1xuICAgICAgICB0aGlzLl90b2tlbiA9IHRva2VuO1xuXG4gICAgICAgIF90aGlzLl9vcGVuKHRva2VuLCAoKT0+IHtcbiAgICAgICAgICBpZiAoX3RoaXMuX2ZpbHRlcihtc2cpKSB7XG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbU2xhY2tQcm90b3N0dWJdIEFmdGVyIEZpbHRlcicsIG1zZyk7XG4gICAgICAgICAgICBsZXQgc2NoZW1hVXJsID0gbXNnLmJvZHkuc2NoZW1hO1xuICAgICAgICAgICAgaWYgKHNjaGVtYVVybCAmJiBtc2cuYm9keS52YWx1ZS5uYW1lKSB7XG5cbiAgICAgICAgICAgICAgbGV0IHNjaGVtYVNwbGl0dGVkID0gIHNjaGVtYVVybC5zcGxpdCgnLycpO1xuXG4gICAgICAgICAgICAgIGlmIChzY2hlbWFTcGxpdHRlZFtzY2hlbWFTcGxpdHRlZC5sZW5ndGggLSAxXSA9PT0gJ0NvbW11bmljYXRpb24nKSB7XG5cbiAgICAgICAgICAgICAgICBfdGhpcy5fZ2V0U2xhY2tJbmZvcm1hdGlvbihtc2cudG8pLnRoZW4oKHVzZXJJbmZvKSA9PiB7XG5cbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTbGFjayBVc2VyIGluZm9ybWF0aW9uOiAnLCB1c2VySW5mbyk7XG5cbiAgICAgICAgICAgICAgICAgIC8vIHVzZXJuYW1lLCB1c2VyVVJMLCBhdmF0YXIsIGNuLCBsb2NhbGUsIGlkcCwgYXNzZXJ0aW9uXG4gICAgICAgICAgICAgICAgICBsZXQgaWRlbnRpdHkgPSBuZXcgTWVzc2FnZUJvZHlJZGVudGl0eShcbiAgICAgICAgICAgICAgICAgICAgdXNlckluZm8ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgJ3NsYWNrOi8vc2xhY2suY29tLycgKyB1c2VySW5mby5uYW1lICsgJ0BzbGFjay5jb20nLFxuICAgICAgICAgICAgICAgICAgICB1c2VySW5mby5wcm9maWxlLmltYWdlXzE5MixcbiAgICAgICAgICAgICAgICAgICAgdXNlckluZm8ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgJycsICdzbGFjay5jb20nKTtcblxuICAgICAgICAgICAgICAgICAgX3RoaXMuX3N1YnNjcmliZShzY2hlbWFVcmwsIG1zZy5mcm9tLCBpZGVudGl0eSkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbU2xhY2tQcm90b3N0dWJdIHN1YnNjcmliZSByZXN1bHQnLCByZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0KSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5fdG9rZW4gPSB0b2tlbjtcblxuICAgICAgICAgICAgICAgICAgICAgIGlmIChtc2cuYm9keS5pZGVudGl0eS51c2VyUHJvZmlsZS5pZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuX2lkID0gbXNnLmJvZHkuaWRlbnRpdHkudXNlclByb2ZpbGUuaWQ7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgX3RoaXMuX2NyZWF0ZUNoYW5uZWwobXNnLCB1c2VySW5mby5pZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIH0pO1xuXG4gIH1cblxuICBnZXQgY29uZmlnKCkgeyByZXR1cm4gdGhpcy5fY29uZmlnOyB9XG5cbiAgZ2V0IHJ1bnRpbWVTZXNzaW9uKCkgeyByZXR1cm4gdGhpcy5fcnVudGltZVNlc3Npb25VUkw7IH1cblxuICBfZ2V0U2xhY2tJbmZvcm1hdGlvbih0bykge1xuICAgIGxldCBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXG4gICAgICBsZXQgVVJMVXNlcnNMaXN0ID0gJ2h0dHBzOi8vc2xhY2suY29tL2FwaS91c2Vycy5saXN0P3Rva2VuPScgKyBfdGhpcy5fdG9rZW47XG4gICAgICBsZXQgVVJMR3JvdXBzTGlzdCA9ICdodHRwczovL3NsYWNrLmNvbS9hcGkvZ3JvdXBzLmxpc3Q/dG9rZW49JyArIF90aGlzLl90b2tlbjtcbiAgICAgIGxldCBVUkxDaGFubmVsc0xpc3QgPSAnaHR0cHM6Ly9zbGFjay5jb20vYXBpL2NoYW5uZWxzLmxpc3Q/dG9rZW49JyArIF90aGlzLl90b2tlbjtcbiAgICAgIGxldCBVUkxJbXNMaXN0ID0gJ2h0dHBzOi8vc2xhY2suY29tL2FwaS9pbS5saXN0P3Rva2VuPScgKyBfdGhpcy5fdG9rZW47XG5cbiAgICAgIGxldCBVc2Vyc0xpc3RQcm9taXNlID0gX3RoaXMuX3NlbmRIVFRQUmVxdWVzdCgnR0VUJywgVVJMVXNlcnNMaXN0KTtcbiAgICAgIGxldCBHcm91cHNMaXN0UHJvbWlzZSA9IF90aGlzLl9zZW5kSFRUUFJlcXVlc3QoJ0dFVCcsIFVSTEdyb3Vwc0xpc3QpO1xuICAgICAgbGV0IENoYW5uZWxzTGlzdFByb21pc2UgPSBfdGhpcy5fc2VuZEhUVFBSZXF1ZXN0KCdHRVQnLCBVUkxDaGFubmVsc0xpc3QpO1xuICAgICAgbGV0IEltc0xpc3RQcm9taXNlID0gX3RoaXMuX3NlbmRIVFRQUmVxdWVzdCgnR0VUJywgVVJMSW1zTGlzdCk7XG5cbiAgICAgIFByb21pc2UuYWxsKFtVc2Vyc0xpc3RQcm9taXNlLCBHcm91cHNMaXN0UHJvbWlzZSwgQ2hhbm5lbHNMaXN0UHJvbWlzZSwgSW1zTGlzdFByb21pc2VdKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICBfdGhpcy5fdXNlcnNMaXN0ID0gcmVzdWx0WzBdLm1lbWJlcnM7XG4gICAgICAgIF90aGlzLl9ncm91cHNMaXN0ID0gcmVzdWx0WzFdLmdyb3VwcztcbiAgICAgICAgX3RoaXMuX2NoYW5uZWxzTGlzdCA9IHJlc3VsdFsyXS5jaGFubmVscztcbiAgICAgICAgX3RoaXMuX2ltc0xpc3QgPSByZXN1bHRbM10uaW1zO1xuXG4gICAgICAgIC8vZ2V0IHVzZXJJRCB0byBpbnZpdGVcbiAgICAgICAgbGV0IHRvU3BsaXR0ZWQgPSB0by5zcGxpdCgnOi8vJylbMV07XG4gICAgICAgIGxldCB1c2VyID0gdG9TcGxpdHRlZC5zcGxpdCgnQCcpWzBdO1xuICAgICAgICBsZXQgdXNlckluZm8gPSBfdGhpcy5fdXNlcnNMaXN0LmZpbHRlcihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZS5uYW1lID09PSB1c2VyO1xuICAgICAgICB9KVswXTtcblxuICAgICAgICByZXNvbHZlKHVzZXJJbmZvKTtcblxuICAgICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnIoJ1tTbGFja1Byb3Rvc3R1Yl0gJywgZXJyb3IpO1xuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgfSk7XG5cbiAgICB9KTtcblxuICB9XG5cbiAgX2NyZWF0ZUNoYW5uZWwobXNnLCB1c2VySUQpIHtcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xuICAgIGxldCBjaGFubmVsRXhpc3RzID0gX3RoaXMuX2NoYW5uZWxzTGlzdC5maWx0ZXIoZnVuY3Rpb24odmFsdWUpIHsgcmV0dXJuIHZhbHVlLm5hbWUgPT09IG1zZy5ib2R5LnZhbHVlLm5hbWU7IH0pWzBdO1xuXG4gICAgLy8gaWYgY2hhbm5lbCBleGlzdCwgaW52aXRlIHVzZXIsIGVsc2UgY2hhbm5lbCBuZWVkIHRvIGJlIGNyZWF0ZWQgYW5kIHRoZW4gaW52aXRlIHVzZXJcbiAgICBpZiAoY2hhbm5lbEV4aXN0cykge1xuICAgICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1Yl0gY2hhbm5lbCBleGlzdCcsIGNoYW5uZWxFeGlzdHMpO1xuXG4gICAgICBsZXQgY2hhbm5lbE1lbWJlcnMgPSBfdGhpcy5fY2hhbm5lbHNMaXN0LmZpbHRlcihmdW5jdGlvbih2YWx1ZSkgeyByZXR1cm4gdmFsdWUubmFtZSA9PT0gbXNnLmJvZHkudmFsdWUubmFtZTsgfSlbMF0ubWVtYmVycztcbiAgICAgIGxldCBhbHJlYWR5T25DaGFubmVsID0gZmFsc2U7XG5cbiAgICAgIGNoYW5uZWxNZW1iZXJzLmZvckVhY2goZnVuY3Rpb24ocykge1xuICAgICAgICBpZiAocyA9PT0gdXNlcklEKSB7XG4gICAgICAgICAgYWxyZWFkeU9uQ2hhbm5lbCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1Yl0gY2hhbm5lbCBtZW1iZXJzJywgY2hhbm5lbE1lbWJlcnMsICcgICAtPicsIGFscmVhZHlPbkNoYW5uZWwpO1xuXG4gICAgICAvLyBpZiB1c2VyIGlzbnQgb24gQ2hhbm5lbCBpbnZpdGUsIGVsc2UganVzdCBzZXQgY2hhbm5lbElEXG4gICAgICBpZiAoIWFscmVhZHlPbkNoYW5uZWwpIHtcbiAgICAgICAgX3RoaXMuX2ludml0ZSh1c2VySUQsIGNoYW5uZWxFeGlzdHMuaWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuX2NoYW5uZWxJRCA9IGNoYW5uZWxFeGlzdHMuaWQ7XG4gICAgICB9XG5cbiAgICB9IGVsc2Uge1xuICAgICAgX3RoaXMuX2NyZWF0ZShtc2cuYm9keS52YWx1ZS5uYW1lLCB1c2VySUQpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICBfdGhpcy5faW52aXRlKHVzZXJJRCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIF9maWx0ZXIobXNnKSB7XG4gICAgaWYgKG1zZy5ib2R5ICYmIG1zZy5ib2R5LnZpYSA9PT0gdGhpcy5fcnVudGltZVByb3RvU3R1YlVSTCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgX29wZW4odG9rZW4sIGNhbGxiYWNrKSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcblxuICAgIGlmICghX3RoaXMuX3Nlc3Npb24pIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbU2xhY2tQcm90b3N0dWJdIG5ldyBTZXNzaW9uIGZvciB0b2tlbjonLCB0b2tlbik7XG4gICAgICBfdGhpcy5fc2Vzc2lvbiA9IF90aGlzLl9zbGFjay5ydG0uY2xpZW50KCk7XG5cbiAgICAgIF90aGlzLl9zZXNzaW9uLmxpc3Rlbih7dG9rZW59KTtcblxuICAgICAgX3RoaXMuX3Nlc3Npb24ubWVzc2FnZShtZXNzYWdlPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnW1NsYWNrUHJvdG9zdHViXSBuZXcgbWVzc2FnZSBvbiBzZXNzaW9uJywgbWVzc2FnZSk7XG4gICAgICAgIGlmIChtZXNzYWdlLmNoYW5uZWwpIHtcbiAgICAgICAgICBpZiAobWVzc2FnZS5jaGFubmVsID09PSBfdGhpcy5fY2hhbm5lbElEICYmIG1lc3NhZ2UudXNlciAhPT0gX3RoaXMuX2lkIHx8ICghbWVzc2FnZS5oYXNPd25Qcm9wZXJ0eSgnYm90X2lkJykgJiYgbWVzc2FnZS51c2VyID09PSBfdGhpcy5faWQgJiYgbWVzc2FnZS5jaGFubmVsID09PSBfdGhpcy5fY2hhbm5lbElEKSkge1xuXG4gICAgICAgICAgICBfdGhpcy5fZ2V0VXNlckluZm8obWVzc2FnZS51c2VyKS50aGVuKChpZGVudGl0eSkgPT4ge1xuICAgICAgICAgICAgICBfdGhpcy5fb2JzZXJ2ZXIuYWRkQ2hpbGQoJ2NoYXRtZXNzYWdlcycsIHsgbWVzc2FnZTogbWVzc2FnZS50ZXh0fSwgaWRlbnRpdHkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1Yl0gc2Vzc2lvbiBhbHJlYWR5IGV4aXN0Jyk7XG4gICAgfVxuICAgIGNhbGxiYWNrKCk7XG4gIH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4qIEl0IHJldHJpZXZlcyBpbmZvcm1hdGlvbiBmcm9tIGEgc2xhY2sgdXNlciBhbmQgY3JlYXRlcyBhIHJlVEhJTksgSWRlbnRpdHkgb2JqZWN0IHdpdGggaXRcbiogQHBhcmFtIHtzdHJpbmd9IHVzZXIgLSBzbGFjayB1c2VyIGlkXG4qIEByZXR1cm4ge1Byb21pc2U8T2JqZWN0Pn0gUmV0dXJucyBhIHByb21pc2Ugd2l0aCBhbiBJZGVudGl0eSBvYmplY3QgcmVzb2x2ZWRcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgX2dldFVzZXJJbmZvKHVzZXIpIHtcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHtcbiAgICAgIF90aGlzLl9zbGFjay51c2Vycy5pbmZvKHt0b2tlbjogX3RoaXMuX3Rva2VuLCB1c2VyOiB1c2VyfSwgKGVyciwgZGF0YSkgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnIoJ1tTbGFja1Byb3Rvc3R1Yl0gZXJyb3InLCBlcnIpO1xuICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1YiBnZXRVc2VySW5mb10gJywgZGF0YSk7XG4gICAgICAgICAgbGV0IGlkZW50aXR5ID0gbmV3IE1lc3NhZ2VCb2R5SWRlbnRpdHkoXG4gICAgICAgICAgICAgICAgICAgIGRhdGEudXNlci5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAnc2xhY2s6Ly9zbGFjay5jb20vJyArIGRhdGEudXNlci5uYW1lICsgJ0BzbGFjay5jb20nLFxuICAgICAgICAgICAgICAgICAgICBkYXRhLnVzZXIucHJvZmlsZS5pbWFnZV8xOTIsXG4gICAgICAgICAgICAgICAgICAgIGRhdGEudXNlci5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAnJywgJ3NsYWNrLmNvbScpO1xuXG4gICAgICAgICAgcmVzb2x2ZShpZGVudGl0eSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gIH1cblxuICBfc3Vic2NyaWJlKHNjaGVtYSwgdXJsRGF0YU9iaiwgaWRlbnRpdHkpIHtcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHtcblxuICAgICAgX3RoaXMuX3N1YnNjcmliZWRMaXN0LmZvckVhY2goZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgIGlmIChvYmoudXJsRGF0YU9iaiA9PT0gdXJsRGF0YU9iaiAmJiBvYmouc3Vic2NyaWJlZCkge1xuICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBsZXQgc3Vic2NyaXB0aW9uID0ge3VybERhdGFPYmo6IHVybERhdGFPYmosIHNjaGVtYTogc2NoZW1hLCBzdWJzY3JpYmVkOiB0cnVlfTtcblxuICAgICAgbGV0IG9iamVjdERlc2NVUkwgPSBzY2hlbWE7XG4gICAgICBsZXQgZGF0YU9iamVjdFVybCA9IHVybERhdGFPYmouc3Vic3RyaW5nKDAsIHVybERhdGFPYmoubGFzdEluZGV4T2YoJy8nKSk7XG5cbiAgICAgIGNvbnNvbGUubG9nKCdbU2xhY2tQcm90b3N0dWJdIG5ldyBzdWJzY3JpcHRpb24gZm9yIHNjaGVtYTonLCBvYmplY3REZXNjVVJMLCAnIGFuZCBkYXRhT2JqZWN0OicsIGRhdGFPYmplY3RVcmwpO1xuXG4gICAgICByZXR1cm4gX3RoaXMuX3N5bmNoZXIuc3Vic2NyaWJlKG9iamVjdERlc2NVUkwsIGRhdGFPYmplY3RVcmwsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGlkZW50aXR5KS50aGVuKChvYnNlcnZlcikgPT4ge1xuICAgICAgICBfdGhpcy5fb2JzZXJ2ZXIgPSBvYnNlcnZlcjtcbiAgICAgICAgX3RoaXMuX3N1YnNjcmliZWRMaXN0LnB1c2goc3Vic2NyaXB0aW9uKTtcbiAgICAgICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1Yl0gc3Vic2NyaWJlZCcsIGRhdGFPYmplY3RVcmwpO1xuICAgICAgICBjb25zb2xlLmxvZygnW1NsYWNrUHJvdG9zdHViXSBPYnNlcnZlcicsIG9ic2VydmVyKTtcbiAgICAgICAgb2JzZXJ2ZXIub25BZGRDaGlsZCgoY2hpbGQpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmluZm8oJ1tTbGFja1Byb3Rvc3R1Yl0gT2JzZXJ2ZXIgLSBBZGQgQ2hpbGQ6ICcsIGNoaWxkKTtcbiAgICAgICAgICBfdGhpcy5fZGVsaXZlcihjaGlsZCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIG9ic2VydmVyLm9uQ2hhbmdlKCcqJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1Yl0gT2JzZXJ2ZXIgLSBvbkNoYW5nZTogJywgZXZlbnQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmVzb2x2ZSh0cnVlKTtcblxuICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyKCdbU2xhY2tQcm90b3N0dWJdIFN1YnNjcmliZScsIGVycm9yKTtcbiAgICAgICAgcmVzb2x2ZShmYWxzZSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIF9pbnZpdGUoaWRVc2VyLCBpZENoYW5uZWwpIHtcbiAgICBsZXQgX3RoaXMgPSB0aGlzO1xuXG4gICAgaWYgKCFpZENoYW5uZWwpIHtcbiAgICAgIGlkQ2hhbm5lbCA9IF90aGlzLl9jaGFubmVsSUQ7XG4gICAgfVxuXG4gICAgbGV0IHRvSW52aXRlID0geyB0b2tlbjogX3RoaXMuX3Rva2VuLCBjaGFubmVsOiBpZENoYW5uZWwsIHVzZXI6IGlkVXNlciB9O1xuXG4gICAgX3RoaXMuX3NsYWNrLmNoYW5uZWxzLmludml0ZSh0b0ludml0ZSwgKGVyciwgZGF0YSkgPT4ge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBjb25zb2xlLmVycignW1NsYWNrUHJvdG9zdHViXSBlcnJvcicsIGVycik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfdGhpcy5fY2hhbm5lbElEID0gaWRDaGFubmVsO1xuICAgICAgICBjb25zb2xlLmxvZygnW1NsYWNrUHJvdG9zdHViXSB1c2VyIGludml0ZWQgd2l0aCBzdWNlc3MnLCBkYXRhKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIF9kZWxpdmVyKGNoaWxkKSB7XG4gICAgbGV0IF90aGlzID0gdGhpcztcblxuICAgIGlmIChfdGhpcy5fY2hhbm5lbElEICE9PSAnJyAmJiBjaGlsZC52YWx1ZS5tZXNzYWdlKSB7XG5cbiAgICAgIGlmIChjaGlsZC5oYXNPd25Qcm9wZXJ0eSgnaWRlbnRpdHknKSAmJiBjaGlsZC5pZGVudGl0eS5oYXNPd25Qcm9wZXJ0eSgndXNlclByb2ZpbGUnKVxuICAgICAgJiYgY2hpbGQuaWRlbnRpdHkudXNlclByb2ZpbGUuaGFzT3duUHJvcGVydHkoJ3VzZXJuYW1lJykgJiYgY2hpbGQuaWRlbnRpdHkudXNlclByb2ZpbGUudXNlcm5hbWUpIHtcblxuICAgICAgICBsZXQgdGV4dCA9ICcnICsgY2hpbGQuaWRlbnRpdHkudXNlclByb2ZpbGUudXNlcm5hbWUgKyAnOiAnICsgY2hpbGQudmFsdWUubWVzc2FnZTtcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSB7IGFzX3VzZXI6IHRydWUsIHRva2VuOiBfdGhpcy5fdG9rZW4sIGNoYW5uZWw6IF90aGlzLl9jaGFubmVsSUQsIHRleHQ6IHRleHR9O1xuICAgICAgICBjb25zb2xlLmxvZygnW1NsYWNrUHJvdG9zdHViXSAoUG9zdE1lc3NhZ2Ugc2xhY2sgYXBpKSB0b2tlbignLCBfdGhpcy5fdG9rZW4sICcpICBjaGFubmVsKCcsIF90aGlzLl9jaGFubmVsSUQsICcpIHRleHQoJywgIGNoaWxkLnZhbHVlLm1lc3NhZ2UsICcpJyk7XG5cbiAgICAgICAgX3RoaXMuX3NsYWNrLmNoYXQucG9zdE1lc3NhZ2UobWVzc2FnZSwgZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnIoJ1tTbGFja1Byb3Rvc3R1Yl0gZXJyb3InLCBlcnIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW1NsYWNrUHJvdG9zdHViXSBQb3N0TWVzc2FnZSB3aXRoIFN1Y2VzcycsIGRhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgX2NyZWF0ZShjaGFubmVsTmFtZSkge1xuICAgIGxldCBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSkge1xuICAgICAgbGV0IHRvQ3JlYXRlID0geyB0b2tlbjogX3RoaXMuX3Rva2VuLCBuYW1lOiBjaGFubmVsTmFtZSB9O1xuICAgICAgX3RoaXMuX3NsYWNrLmNoYW5uZWxzLmNyZWF0ZSh0b0NyZWF0ZSwgKGVyciwgZGF0YSkgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5lcnIoJ1tTbGFja1Byb3Rvc3R1Yl0gJywgZXJyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoZGF0YS5vaykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tTbGFja1Byb3Rvc3R1Yl0gQ2hhbm5lbCBDcmVhdGVkIHdpdGggU3VjZXNzICcsIGRhdGEpO1xuICAgICAgICAgICAgX3RoaXMuX2NoYW5uZWxJRCA9IGRhdGEuY2hhbm5lbC5pZDtcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIF9zZW5kSFRUUFJlcXVlc3QobWV0aG9kLCB1cmwpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICBsZXQgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICBpZiAoJ3dpdGhDcmVkZW50aWFscycgaW4geGhyKSB7XG4gICAgICAgIHhoci5vcGVuKG1ldGhvZCwgdXJsLCB0cnVlKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIFhEb21haW5SZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAvLyBPdGhlcndpc2UsIGNoZWNrIGlmIFhEb21haW5SZXF1ZXN0LlxuICAgICAgICAvLyBYRG9tYWluUmVxdWVzdCBvbmx5IGV4aXN0cyBpbiBJRSwgYW5kIGlzIElFJ3Mgd2F5IG9mIG1ha2luZyBDT1JTIHJlcXVlc3RzLlxuICAgICAgICB4aHIgPSBuZXcgWERvbWFpblJlcXVlc3QoKTtcbiAgICAgICAgeGhyLm9wZW4obWV0aG9kLCB1cmwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBDT1JTIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGJyb3dzZXIuXG4gICAgICAgIHhociA9IG51bGw7XG4gICAgICB9XG4gICAgICBpZiAoeGhyKSB7XG4gICAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQpIHtcbiAgICAgICAgICAgIGlmICh4aHIuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgICAgbGV0IGluZm8gPSBKU09OLnBhcnNlKHhoci5yZXNwb25zZVRleHQpO1xuICAgICAgICAgICAgICByZXNvbHZlKGluZm8pO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh4aHIuc3RhdHVzID09PSA0MDApIHtcbiAgICAgICAgICAgICAgcmVqZWN0KCdUaGVyZSB3YXMgYW4gZXJyb3IgcHJvY2Vzc2luZyB0aGUgdG9rZW4nKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHJlamVjdCgnc29tZXRoaW5nIGVsc2Ugb3RoZXIgdGhhbiAyMDAgd2FzIHJldHVybmVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB4aHIuc2VuZCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVqZWN0KCdDT1JTIG5vdCBzdXBwb3J0ZWQnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhY3RpdmF0ZSh1cmwsIGJ1cywgY29uZmlnKSB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogJ1NsYWNrUHJvdG9TdHViJyxcbiAgICBpbnN0YW5jZTogbmV3IFNsYWNrUHJvdG9TdHViKHVybCwgYnVzLCBjb25maWcpXG4gIH07XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9TbGFja1Byb3RvU3R1Yi5wcy5qcyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9hcGkgPSByZXF1aXJlKCcuL2FwaS50ZXN0Jyk7XG5cbnZhciBfYXBpMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2FwaSk7XG5cbnZhciBfYXBpMyA9IHJlcXVpcmUoJy4vYXBpLmNsaWVudCcpO1xuXG52YXIgX2FwaTQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hcGkzKTtcblxudmFyIF9ib3RzID0gcmVxdWlyZSgnLi9ib3RzJyk7XG5cbnZhciBfYm90czIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ib3RzKTtcblxudmFyIF9hdXRoID0gcmVxdWlyZSgnLi9hdXRoLnRlc3QnKTtcblxudmFyIF9hdXRoMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2F1dGgpO1xuXG52YXIgX2F1dGgzID0gcmVxdWlyZSgnLi9hdXRoLnJldm9rZScpO1xuXG52YXIgX2F1dGg0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXV0aDMpO1xuXG52YXIgX2NoYW5uZWxzID0gcmVxdWlyZSgnLi9jaGFubmVscycpO1xuXG52YXIgX2NoYW5uZWxzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NoYW5uZWxzKTtcblxudmFyIF9jaGF0ID0gcmVxdWlyZSgnLi9jaGF0Jyk7XG5cbnZhciBfY2hhdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGF0KTtcblxudmFyIF9kbmQgPSByZXF1aXJlKCcuL2RuZCcpO1xuXG52YXIgX2RuZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kbmQpO1xuXG52YXIgX2Vtb2ppID0gcmVxdWlyZSgnLi9lbW9qaS5saXN0Jyk7XG5cbnZhciBfZW1vamkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZW1vamkpO1xuXG52YXIgX2ZpbGVzID0gcmVxdWlyZSgnLi9maWxlcycpO1xuXG52YXIgX2ZpbGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ZpbGVzKTtcblxudmFyIF9ncm91cHMgPSByZXF1aXJlKCcuL2dyb3VwcycpO1xuXG52YXIgX2dyb3VwczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ncm91cHMpO1xuXG52YXIgX2ltID0gcmVxdWlyZSgnLi9pbScpO1xuXG52YXIgX2ltMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ltKTtcblxudmFyIF9tcGltID0gcmVxdWlyZSgnLi9tcGltJyk7XG5cbnZhciBfbXBpbTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9tcGltKTtcblxudmFyIF9vYXV0aCA9IHJlcXVpcmUoJy4vb2F1dGguYWNjZXNzJyk7XG5cbnZhciBfb2F1dGgyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfb2F1dGgpO1xuXG52YXIgX3JlYWN0aW9ucyA9IHJlcXVpcmUoJy4vcmVhY3Rpb25zJyk7XG5cbnZhciBfcmVhY3Rpb25zMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0aW9ucyk7XG5cbnZhciBfcmVtaW5kZXJzID0gcmVxdWlyZSgnLi9yZW1pbmRlcnMnKTtcblxudmFyIF9yZW1pbmRlcnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVtaW5kZXJzKTtcblxudmFyIF9waW5zID0gcmVxdWlyZSgnLi9waW5zJyk7XG5cbnZhciBfcGluczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9waW5zKTtcblxudmFyIF9ydG0gPSByZXF1aXJlKCcuL3J0bS5jbGllbnQnKTtcblxudmFyIF9ydG0yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcnRtKTtcblxudmFyIF9ydG0zID0gcmVxdWlyZSgnLi9ydG0uc3RhcnQnKTtcblxudmFyIF9ydG00ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcnRtMyk7XG5cbnZhciBfcnRtNSA9IHJlcXVpcmUoJy4vcnRtLmNvbm5lY3QnKTtcblxudmFyIF9ydG02ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcnRtNSk7XG5cbnZhciBfc2VhcmNoID0gcmVxdWlyZSgnLi9zZWFyY2gnKTtcblxudmFyIF9zZWFyY2gyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2VhcmNoKTtcblxudmFyIF9zdGFycyA9IHJlcXVpcmUoJy4vc3RhcnMnKTtcblxudmFyIF9zdGFyczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zdGFycyk7XG5cbnZhciBfdGVhbSA9IHJlcXVpcmUoJy4vdGVhbScpO1xuXG52YXIgX3RlYW0yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdGVhbSk7XG5cbnZhciBfdXNlcmdyb3VwcyA9IHJlcXVpcmUoJy4vdXNlcmdyb3VwcycpO1xuXG52YXIgX3VzZXJncm91cHMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdXNlcmdyb3Vwcyk7XG5cbnZhciBfdXNlcnMgPSByZXF1aXJlKCcuL3VzZXJzJyk7XG5cbnZhciBfdXNlcnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdXNlcnMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIGFwaTogeyB0ZXN0OiBfYXBpMi5kZWZhdWx0LCBjbGllbnQ6IF9hcGk0LmRlZmF1bHQgfSxcbiAgYXV0aDogeyB0ZXN0OiBfYXV0aDIuZGVmYXVsdCwgcmV2b2tlOiBfYXV0aDQuZGVmYXVsdCB9LFxuICBib3RzOiBfYm90czIuZGVmYXVsdCxcbiAgY2hhbm5lbHM6IF9jaGFubmVsczIuZGVmYXVsdCxcbiAgY2hhdDogX2NoYXQyLmRlZmF1bHQsXG4gIGRuZDogX2RuZDIuZGVmYXVsdCxcbiAgZW1vamk6IHsgbGlzdDogX2Vtb2ppMi5kZWZhdWx0IH0sXG4gIGZpbGVzOiBfZmlsZXMyLmRlZmF1bHQsXG4gIGdyb3VwczogX2dyb3VwczIuZGVmYXVsdCxcbiAgaW06IF9pbTIuZGVmYXVsdCxcbiAgbXBpbTogX21waW0yLmRlZmF1bHQsXG4gIG9hdXRoOiB7IGFjY2VzczogX29hdXRoMi5kZWZhdWx0IH0sXG4gIHJlYWN0aW9uczogX3JlYWN0aW9uczIuZGVmYXVsdCxcbiAgcmVtaW5kZXJzOiBfcmVtaW5kZXJzMi5kZWZhdWx0LFxuICBwaW5zOiBfcGluczIuZGVmYXVsdCxcbiAgcnRtOiB7IGNsaWVudDogX3J0bTIuZGVmYXVsdCwgc3RhcnQ6IF9ydG00LmRlZmF1bHQsIGNvbm5lY3Q6IF9ydG02LmRlZmF1bHQgfSxcbiAgc2VhcmNoOiBfc2VhcmNoMi5kZWZhdWx0LFxuICBzdGFyczogX3N0YXJzMi5kZWZhdWx0LFxuICB0ZWFtOiBfdGVhbTIuZGVmYXVsdCxcbiAgdXNlcmdyb3VwczogX3VzZXJncm91cHMyLmRlZmF1bHQsXG4gIHVzZXJzOiBfdXNlcnMyLmRlZmF1bHRcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxMjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYXBpdGVzdDtcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGFwaXRlc3QocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnYXBpLnRlc3QnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2FwaS50ZXN0LmpzXG4vLyBtb2R1bGUgaWQgPSAxMjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwidmFyIF9yZWFkID0gcmVxdWlyZSgnLi9fcmVhZCcpXG52YXIgX3dyaXRlID0gcmVxdWlyZSgnLi9fd3JpdGUnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0OiBfcmVhZCxcbiAgcG9zdDogX3dyaXRlLmJpbmQoe30sICdQT1NUJyksXG4gIHB1dDogX3dyaXRlLmJpbmQoe30sICdQVVQnKSxcbiAgZGVsOiBfd3JpdGUuYmluZCh7fSwgJ0RFTEVURScpLFxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvdGlueS1qc29uLWh0dHAvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDEzMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJ2YXIgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKVxudmFyIGh0dHBzID0gcmVxdWlyZSgnaHR0cHMnKVxudmFyIHVybCA9IHJlcXVpcmUoJ3VybCcpXG52YXIgcXMgPSByZXF1aXJlKCdxdWVyeXN0cmluZycpXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gX3JlYWQob3B0aW9ucywgY2FsbGJhY2spIHtcblxuICAvLyByZXF1aXJlIG9wdGlvbnMudXJsIG9yIGZhaWwgbm9pc2lseSBcbiAgaWYgKCFvcHRpb25zLnVybCkge1xuICAgIHRocm93IEVycm9yKCdvcHRpb25zLnVybCByZXF1aXJlZCcpXG4gIH1cblxuICAvLyBwYXJzZSBvdXQgdGhlIG9wdGlvbnMgZnJvbSBvcHRpb25zLnVybFxuICB2YXIgb3B0cyA9IHVybC5wYXJzZShvcHRpb25zLnVybClcblxuICAvLyBjaGVjayBmb3IgYWRkaXRpb25hbCBxdWVyeSBwYXJhbXNcbiAgaWYgKG9wdGlvbnMuZGF0YSkge1xuICAgIHZhciBpc1NlYXJjaCA9ICEhb3B0cy5zZWFyY2hcbiAgICBvcHRpb25zLnVybCArPSAoaXNTZWFyY2g/ICcmJyA6ICc/JykgKyBxcy5zdHJpbmdpZnkob3B0aW9ucy5kYXRhKVxuICAgIG9wdHMgPSB1cmwucGFyc2Uob3B0aW9ucy51cmwpXG4gIH1cblxuICB2YXIgbWV0aG9kID0gb3B0cy5wcm90b2NvbCA9PT0gJ2h0dHBzOic/IGh0dHBzLmdldCA6IGh0dHAuZ2V0XG5cbiAgb3B0cy5yZWplY3RVbmF1dGhvcml6ZWQgPSBmYWxzZVxuICBvcHRzLmhlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnMgfHwge31cbiAgb3B0cy5oZWFkZXJzWydVc2VyLUFnZW50J10gPSBvcHRzLmhlYWRlcnNbJ1VzZXItQWdlbnQnXSB8fCAndGlueS1odHRwJ1xuICBvcHRzLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gb3B0cy5oZWFkZXJzWydDb250ZW50LVR5cGUnXSB8fCAnYXBwbGljYXRpb24vanNvbidcbiAgXG4gIC8vIG1ha2UgYSByZXF1ZXN0XG4gIHZhciByZXEgPSBtZXRob2Qob3B0cywgZnVuY3Rpb24gX19yZXMocmVzKSB7XG4gICBcbiAgICB2YXIgcmF3ID0gW11cblxuICAgIHZhciBvayA9IHJlcy5zdGF0dXNDb2RlID49IDIwMCAmJiByZXMuc3RhdHVzQ29kZSA8IDMwMFxuICAgIGlmICghb2spIHtcbiAgICAgIGNhbGxiYWNrKEVycm9yKCdHRVQgZmFpbGVkIHdpdGg6ICcgKyByZXMuc3RhdHVzQ29kZSkpXG4gICAgICByZXMucmVzdW1lKClcbiAgICAgIHJldHVyblxuICAgIH1cbiBcbiAgICByZXMub24oJ2RhdGEnLCBmdW5jdGlvbiBfX2RhdGEoY2h1bmspIHtcbiAgICAgIHJhdy5wdXNoKGNodW5rKVxuICAgIH0pXG5cbiAgICByZXMub24oJ2VuZCcsIGZ1bmN0aW9uIF9fZW5kKCkge1xuICAgICAgdmFyIGVyciA9IG51bGxcbiAgICAgIHZhciByZXN1bHQgPSBudWxsXG4gICAgICB0cnkge1xuICAgICAgICB2YXIgaXNKU09OID0gcmVzLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddLnN0YXJ0c1dpdGgoJ2FwcGxpY2F0aW9uL2pzb24nKVxuICAgICAgICB2YXIgcmF3RGF0YSA9IEJ1ZmZlci5jb25jYXQocmF3KS50b1N0cmluZygpXG4gICAgICAgIHJlc3VsdCA9IGlzSlNPTj8gSlNPTi5wYXJzZShyYXdEYXRhKSA6IHJhd0RhdGFcbiAgICAgIH0gXG4gICAgICBjYXRjaCAoZSkge1xuICAgICAgICBlcnIgPSBlXG4gICAgICB9XG4gICAgICBjYWxsYmFjayhlcnIsIHtib2R5OnJlc3VsdCwgaGVhZGVyczpyZXMuaGVhZGVyc30pXG4gICAgfSlcbiAgfSlcbiAgXG4gIHJlcS5vbignZXJyb3InLCBjYWxsYmFjaylcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3RpbnktanNvbi1odHRwL19yZWFkLmpzXG4vLyBtb2R1bGUgaWQgPSAxMzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydHMuYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGhcbmV4cG9ydHMudG9CeXRlQXJyYXkgPSB0b0J5dGVBcnJheVxuZXhwb3J0cy5mcm9tQnl0ZUFycmF5ID0gZnJvbUJ5dGVBcnJheVxuXG52YXIgbG9va3VwID0gW11cbnZhciByZXZMb29rdXAgPSBbXVxudmFyIEFyciA9IHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyA/IFVpbnQ4QXJyYXkgOiBBcnJheVxuXG52YXIgY29kZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJ1xuZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvZGUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgbG9va3VwW2ldID0gY29kZVtpXVxuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGlcbn1cblxucmV2TG9va3VwWyctJy5jaGFyQ29kZUF0KDApXSA9IDYyXG5yZXZMb29rdXBbJ18nLmNoYXJDb2RlQXQoMCldID0gNjNcblxuZnVuY3Rpb24gcGxhY2VIb2xkZXJzQ291bnQgKGI2NCkge1xuICB2YXIgbGVuID0gYjY0Lmxlbmd0aFxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gdGhlIG51bWJlciBvZiBlcXVhbCBzaWducyAocGxhY2UgaG9sZGVycylcbiAgLy8gaWYgdGhlcmUgYXJlIHR3byBwbGFjZWhvbGRlcnMsIHRoYW4gdGhlIHR3byBjaGFyYWN0ZXJzIGJlZm9yZSBpdFxuICAvLyByZXByZXNlbnQgb25lIGJ5dGVcbiAgLy8gaWYgdGhlcmUgaXMgb25seSBvbmUsIHRoZW4gdGhlIHRocmVlIGNoYXJhY3RlcnMgYmVmb3JlIGl0IHJlcHJlc2VudCAyIGJ5dGVzXG4gIC8vIHRoaXMgaXMganVzdCBhIGNoZWFwIGhhY2sgdG8gbm90IGRvIGluZGV4T2YgdHdpY2VcbiAgcmV0dXJuIGI2NFtsZW4gLSAyXSA9PT0gJz0nID8gMiA6IGI2NFtsZW4gLSAxXSA9PT0gJz0nID8gMSA6IDBcbn1cblxuZnVuY3Rpb24gYnl0ZUxlbmd0aCAoYjY0KSB7XG4gIC8vIGJhc2U2NCBpcyA0LzMgKyB1cCB0byB0d28gY2hhcmFjdGVycyBvZiB0aGUgb3JpZ2luYWwgZGF0YVxuICByZXR1cm4gKGI2NC5sZW5ndGggKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNDb3VudChiNjQpXG59XG5cbmZ1bmN0aW9uIHRvQnl0ZUFycmF5IChiNjQpIHtcbiAgdmFyIGksIGwsIHRtcCwgcGxhY2VIb2xkZXJzLCBhcnJcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcbiAgcGxhY2VIb2xkZXJzID0gcGxhY2VIb2xkZXJzQ291bnQoYjY0KVxuXG4gIGFyciA9IG5ldyBBcnIoKGxlbiAqIDMgLyA0KSAtIHBsYWNlSG9sZGVycylcblxuICAvLyBpZiB0aGVyZSBhcmUgcGxhY2Vob2xkZXJzLCBvbmx5IGdldCB1cCB0byB0aGUgbGFzdCBjb21wbGV0ZSA0IGNoYXJzXG4gIGwgPSBwbGFjZUhvbGRlcnMgPiAwID8gbGVuIC0gNCA6IGxlblxuXG4gIHZhciBMID0gMFxuXG4gIGZvciAoaSA9IDA7IGkgPCBsOyBpICs9IDQpIHtcbiAgICB0bXAgPSAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxOCkgfCAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgMTIpIHwgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHwgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAzKV1cbiAgICBhcnJbTCsrXSA9ICh0bXAgPj4gMTYpICYgMHhGRlxuICAgIGFycltMKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbTCsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIGlmIChwbGFjZUhvbGRlcnMgPT09IDIpIHtcbiAgICB0bXAgPSAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAyKSB8IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltMKytdID0gdG1wICYgMHhGRlxuICB9IGVsc2UgaWYgKHBsYWNlSG9sZGVycyA9PT0gMSkge1xuICAgIHRtcCA9IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDEwKSB8IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCA0KSB8IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltMKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbTCsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArIGxvb2t1cFtudW0gPj4gMTIgJiAweDNGXSArIGxvb2t1cFtudW0gPj4gNiAmIDB4M0ZdICsgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9ICh1aW50OFtpXSA8PCAxNikgKyAodWludDhbaSArIDFdIDw8IDgpICsgKHVpbnQ4W2kgKyAyXSlcbiAgICBvdXRwdXQucHVzaCh0cmlwbGV0VG9CYXNlNjQodG1wKSlcbiAgfVxuICByZXR1cm4gb3V0cHV0LmpvaW4oJycpXG59XG5cbmZ1bmN0aW9uIGZyb21CeXRlQXJyYXkgKHVpbnQ4KSB7XG4gIHZhciB0bXBcbiAgdmFyIGxlbiA9IHVpbnQ4Lmxlbmd0aFxuICB2YXIgZXh0cmFCeXRlcyA9IGxlbiAlIDMgLy8gaWYgd2UgaGF2ZSAxIGJ5dGUgbGVmdCwgcGFkIDIgYnl0ZXNcbiAgdmFyIG91dHB1dCA9ICcnXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBvdXRwdXQgKz0gbG9va3VwW3RtcCA+PiAyXVxuICAgIG91dHB1dCArPSBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdXG4gICAgb3V0cHV0ICs9ICc9PSdcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XG4gICAgdG1wID0gKHVpbnQ4W2xlbiAtIDJdIDw8IDgpICsgKHVpbnQ4W2xlbiAtIDFdKVxuICAgIG91dHB1dCArPSBsb29rdXBbdG1wID4+IDEwXVxuICAgIG91dHB1dCArPSBsb29rdXBbKHRtcCA+PiA0KSAmIDB4M0ZdXG4gICAgb3V0cHV0ICs9IGxvb2t1cFsodG1wIDw8IDIpICYgMHgzRl1cbiAgICBvdXRwdXQgKz0gJz0nXG4gIH1cblxuICBwYXJ0cy5wdXNoKG91dHB1dClcblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTMyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsImV4cG9ydHMucmVhZCA9IGZ1bmN0aW9uIChidWZmZXIsIG9mZnNldCwgaXNMRSwgbUxlbiwgbkJ5dGVzKSB7XG4gIHZhciBlLCBtXG4gIHZhciBlTGVuID0gbkJ5dGVzICogOCAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgbkJpdHMgPSAtN1xuICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwXG4gIHZhciBkID0gaXNMRSA/IC0xIDogMVxuICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXVxuXG4gIGkgKz0gZFxuXG4gIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIHMgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IGVMZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IGUgKiAyNTYgKyBidWZmZXJbb2Zmc2V0ICsgaV0sIGkgKz0gZCwgbkJpdHMgLT0gOCkge31cblxuICBtID0gZSAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBlID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBtTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSBtICogMjU2ICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgaWYgKGUgPT09IDApIHtcbiAgICBlID0gMSAtIGVCaWFzXG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogKChzID8gLTEgOiAxKSAqIEluZmluaXR5KVxuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgTWF0aC5wb3coMiwgbUxlbilcbiAgICBlID0gZSAtIGVCaWFzXG4gIH1cbiAgcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBNYXRoLnBvdygyLCBlIC0gbUxlbilcbn1cblxuZXhwb3J0cy53cml0ZSA9IGZ1bmN0aW9uIChidWZmZXIsIHZhbHVlLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbSwgY1xuICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKVxuICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpXG4gIHZhciBkID0gaXNMRSA/IDEgOiAtMVxuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMFxuXG4gIHZhbHVlID0gTWF0aC5hYnModmFsdWUpXG5cbiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDBcbiAgICBlID0gZU1heFxuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKVxuICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLVxuICAgICAgYyAqPSAyXG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKVxuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrK1xuICAgICAgYyAvPSAyXG4gICAgfVxuXG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMFxuICAgICAgZSA9IGVNYXhcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKHZhbHVlICogYyAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSBlICsgZUJpYXNcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogTWF0aC5wb3coMiwgZUJpYXMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gMFxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IG0gJiAweGZmLCBpICs9IGQsIG0gLz0gMjU2LCBtTGVuIC09IDgpIHt9XG5cbiAgZSA9IChlIDw8IG1MZW4pIHwgbVxuICBlTGVuICs9IG1MZW5cbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBlICYgMHhmZiwgaSArPSBkLCBlIC89IDI1NiwgZUxlbiAtPSA4KSB7fVxuXG4gIGJ1ZmZlcltvZmZzZXQgKyBpIC0gZF0gfD0gcyAqIDEyOFxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTMzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInZhciBjYXBhYmlsaXR5ID0gcmVxdWlyZSgnLi9jYXBhYmlsaXR5JylcbnZhciBpbmhlcml0cyA9IHJlcXVpcmUoJ2luaGVyaXRzJylcbnZhciByZXNwb25zZSA9IHJlcXVpcmUoJy4vcmVzcG9uc2UnKVxudmFyIHN0cmVhbSA9IHJlcXVpcmUoJ3JlYWRhYmxlLXN0cmVhbScpXG52YXIgdG9BcnJheUJ1ZmZlciA9IHJlcXVpcmUoJ3RvLWFycmF5YnVmZmVyJylcblxudmFyIEluY29taW5nTWVzc2FnZSA9IHJlc3BvbnNlLkluY29taW5nTWVzc2FnZVxudmFyIHJTdGF0ZXMgPSByZXNwb25zZS5yZWFkeVN0YXRlc1xuXG5mdW5jdGlvbiBkZWNpZGVNb2RlIChwcmVmZXJCaW5hcnksIHVzZUZldGNoKSB7XG5cdGlmIChjYXBhYmlsaXR5LmZldGNoICYmIHVzZUZldGNoKSB7XG5cdFx0cmV0dXJuICdmZXRjaCdcblx0fSBlbHNlIGlmIChjYXBhYmlsaXR5Lm1vemNodW5rZWRhcnJheWJ1ZmZlcikge1xuXHRcdHJldHVybiAnbW96LWNodW5rZWQtYXJyYXlidWZmZXInXG5cdH0gZWxzZSBpZiAoY2FwYWJpbGl0eS5tc3N0cmVhbSkge1xuXHRcdHJldHVybiAnbXMtc3RyZWFtJ1xuXHR9IGVsc2UgaWYgKGNhcGFiaWxpdHkuYXJyYXlidWZmZXIgJiYgcHJlZmVyQmluYXJ5KSB7XG5cdFx0cmV0dXJuICdhcnJheWJ1ZmZlcidcblx0fSBlbHNlIGlmIChjYXBhYmlsaXR5LnZiQXJyYXkgJiYgcHJlZmVyQmluYXJ5KSB7XG5cdFx0cmV0dXJuICd0ZXh0OnZiYXJyYXknXG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuICd0ZXh0J1xuXHR9XG59XG5cbnZhciBDbGllbnRSZXF1ZXN0ID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3B0cykge1xuXHR2YXIgc2VsZiA9IHRoaXNcblx0c3RyZWFtLldyaXRhYmxlLmNhbGwoc2VsZilcblxuXHRzZWxmLl9vcHRzID0gb3B0c1xuXHRzZWxmLl9ib2R5ID0gW11cblx0c2VsZi5faGVhZGVycyA9IHt9XG5cdGlmIChvcHRzLmF1dGgpXG5cdFx0c2VsZi5zZXRIZWFkZXIoJ0F1dGhvcml6YXRpb24nLCAnQmFzaWMgJyArIG5ldyBCdWZmZXIob3B0cy5hdXRoKS50b1N0cmluZygnYmFzZTY0JykpXG5cdE9iamVjdC5rZXlzKG9wdHMuaGVhZGVycykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuXHRcdHNlbGYuc2V0SGVhZGVyKG5hbWUsIG9wdHMuaGVhZGVyc1tuYW1lXSlcblx0fSlcblxuXHR2YXIgcHJlZmVyQmluYXJ5XG5cdHZhciB1c2VGZXRjaCA9IHRydWVcblx0aWYgKG9wdHMubW9kZSA9PT0gJ2Rpc2FibGUtZmV0Y2gnIHx8ICd0aW1lb3V0JyBpbiBvcHRzKSB7XG5cdFx0Ly8gSWYgdGhlIHVzZSBvZiBYSFIgc2hvdWxkIGJlIHByZWZlcnJlZCBhbmQgaW5jbHVkZXMgcHJlc2VydmluZyB0aGUgJ2NvbnRlbnQtdHlwZScgaGVhZGVyLlxuXHRcdC8vIEZvcmNlIFhIUiB0byBiZSB1c2VkIHNpbmNlIHRoZSBGZXRjaCBBUEkgZG9lcyBub3QgeWV0IHN1cHBvcnQgdGltZW91dHMuXG5cdFx0dXNlRmV0Y2ggPSBmYWxzZVxuXHRcdHByZWZlckJpbmFyeSA9IHRydWVcblx0fSBlbHNlIGlmIChvcHRzLm1vZGUgPT09ICdwcmVmZXItc3RyZWFtaW5nJykge1xuXHRcdC8vIElmIHN0cmVhbWluZyBpcyBhIGhpZ2ggcHJpb3JpdHkgYnV0IGJpbmFyeSBjb21wYXRpYmlsaXR5IGFuZFxuXHRcdC8vIHRoZSBhY2N1cmFjeSBvZiB0aGUgJ2NvbnRlbnQtdHlwZScgaGVhZGVyIGFyZW4ndFxuXHRcdHByZWZlckJpbmFyeSA9IGZhbHNlXG5cdH0gZWxzZSBpZiAob3B0cy5tb2RlID09PSAnYWxsb3ctd3JvbmctY29udGVudC10eXBlJykge1xuXHRcdC8vIElmIHN0cmVhbWluZyBpcyBtb3JlIGltcG9ydGFudCB0aGFuIHByZXNlcnZpbmcgdGhlICdjb250ZW50LXR5cGUnIGhlYWRlclxuXHRcdHByZWZlckJpbmFyeSA9ICFjYXBhYmlsaXR5Lm92ZXJyaWRlTWltZVR5cGVcblx0fSBlbHNlIGlmICghb3B0cy5tb2RlIHx8IG9wdHMubW9kZSA9PT0gJ2RlZmF1bHQnIHx8IG9wdHMubW9kZSA9PT0gJ3ByZWZlci1mYXN0Jykge1xuXHRcdC8vIFVzZSBiaW5hcnkgaWYgdGV4dCBzdHJlYW1pbmcgbWF5IGNvcnJ1cHQgZGF0YSBvciB0aGUgY29udGVudC10eXBlIGhlYWRlciwgb3IgZm9yIHNwZWVkXG5cdFx0cHJlZmVyQmluYXJ5ID0gdHJ1ZVxuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcignSW52YWxpZCB2YWx1ZSBmb3Igb3B0cy5tb2RlJylcblx0fVxuXHRzZWxmLl9tb2RlID0gZGVjaWRlTW9kZShwcmVmZXJCaW5hcnksIHVzZUZldGNoKVxuXG5cdHNlbGYub24oJ2ZpbmlzaCcsIGZ1bmN0aW9uICgpIHtcblx0XHRzZWxmLl9vbkZpbmlzaCgpXG5cdH0pXG59XG5cbmluaGVyaXRzKENsaWVudFJlcXVlc3QsIHN0cmVhbS5Xcml0YWJsZSlcblxuQ2xpZW50UmVxdWVzdC5wcm90b3R5cGUuc2V0SGVhZGVyID0gZnVuY3Rpb24gKG5hbWUsIHZhbHVlKSB7XG5cdHZhciBzZWxmID0gdGhpc1xuXHR2YXIgbG93ZXJOYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpXG5cdC8vIFRoaXMgY2hlY2sgaXMgbm90IG5lY2Vzc2FyeSwgYnV0IGl0IHByZXZlbnRzIHdhcm5pbmdzIGZyb20gYnJvd3NlcnMgYWJvdXQgc2V0dGluZyB1bnNhZmVcblx0Ly8gaGVhZGVycy4gVG8gYmUgaG9uZXN0IEknbSBub3QgZW50aXJlbHkgc3VyZSBoaWRpbmcgdGhlc2Ugd2FybmluZ3MgaXMgYSBnb29kIHRoaW5nLCBidXRcblx0Ly8gaHR0cC1icm93c2VyaWZ5IGRpZCBpdCwgc28gSSB3aWxsIHRvby5cblx0aWYgKHVuc2FmZUhlYWRlcnMuaW5kZXhPZihsb3dlck5hbWUpICE9PSAtMSlcblx0XHRyZXR1cm5cblxuXHRzZWxmLl9oZWFkZXJzW2xvd2VyTmFtZV0gPSB7XG5cdFx0bmFtZTogbmFtZSxcblx0XHR2YWx1ZTogdmFsdWVcblx0fVxufVxuXG5DbGllbnRSZXF1ZXN0LnByb3RvdHlwZS5nZXRIZWFkZXIgPSBmdW5jdGlvbiAobmFtZSkge1xuXHR2YXIgaGVhZGVyID0gdGhpcy5faGVhZGVyc1tuYW1lLnRvTG93ZXJDYXNlKCldXG5cdGlmIChoZWFkZXIpXG5cdFx0cmV0dXJuIGhlYWRlci52YWx1ZVxuXHRyZXR1cm4gbnVsbFxufVxuXG5DbGllbnRSZXF1ZXN0LnByb3RvdHlwZS5yZW1vdmVIZWFkZXIgPSBmdW5jdGlvbiAobmFtZSkge1xuXHR2YXIgc2VsZiA9IHRoaXNcblx0ZGVsZXRlIHNlbGYuX2hlYWRlcnNbbmFtZS50b0xvd2VyQ2FzZSgpXVxufVxuXG5DbGllbnRSZXF1ZXN0LnByb3RvdHlwZS5fb25GaW5pc2ggPSBmdW5jdGlvbiAoKSB7XG5cdHZhciBzZWxmID0gdGhpc1xuXG5cdGlmIChzZWxmLl9kZXN0cm95ZWQpXG5cdFx0cmV0dXJuXG5cdHZhciBvcHRzID0gc2VsZi5fb3B0c1xuXG5cdHZhciBoZWFkZXJzT2JqID0gc2VsZi5faGVhZGVyc1xuXHR2YXIgYm9keSA9IG51bGxcblx0aWYgKG9wdHMubWV0aG9kICE9PSAnR0VUJyAmJiBvcHRzLm1ldGhvZCAhPT0gJ0hFQUQnKSB7XG5cdFx0aWYgKGNhcGFiaWxpdHkuYmxvYkNvbnN0cnVjdG9yKSB7XG5cdFx0XHRib2R5ID0gbmV3IGdsb2JhbC5CbG9iKHNlbGYuX2JvZHkubWFwKGZ1bmN0aW9uIChidWZmZXIpIHtcblx0XHRcdFx0cmV0dXJuIHRvQXJyYXlCdWZmZXIoYnVmZmVyKVxuXHRcdFx0fSksIHtcblx0XHRcdFx0dHlwZTogKGhlYWRlcnNPYmpbJ2NvbnRlbnQtdHlwZSddIHx8IHt9KS52YWx1ZSB8fCAnJ1xuXHRcdFx0fSlcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gZ2V0IHV0Zjggc3RyaW5nXG5cdFx0XHRib2R5ID0gQnVmZmVyLmNvbmNhdChzZWxmLl9ib2R5KS50b1N0cmluZygpXG5cdFx0fVxuXHR9XG5cblx0Ly8gY3JlYXRlIGZsYXR0ZW5lZCBsaXN0IG9mIGhlYWRlcnNcblx0dmFyIGhlYWRlcnNMaXN0ID0gW11cblx0T2JqZWN0LmtleXMoaGVhZGVyc09iaikuZm9yRWFjaChmdW5jdGlvbiAoa2V5TmFtZSkge1xuXHRcdHZhciBuYW1lID0gaGVhZGVyc09ialtrZXlOYW1lXS5uYW1lXG5cdFx0dmFyIHZhbHVlID0gaGVhZGVyc09ialtrZXlOYW1lXS52YWx1ZVxuXHRcdGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuXHRcdFx0dmFsdWUuZm9yRWFjaChmdW5jdGlvbiAodikge1xuXHRcdFx0XHRoZWFkZXJzTGlzdC5wdXNoKFtuYW1lLCB2XSlcblx0XHRcdH0pXG5cdFx0fSBlbHNlIHtcblx0XHRcdGhlYWRlcnNMaXN0LnB1c2goW25hbWUsIHZhbHVlXSlcblx0XHR9XG5cdH0pXG5cblx0aWYgKHNlbGYuX21vZGUgPT09ICdmZXRjaCcpIHtcblx0XHRnbG9iYWwuZmV0Y2goc2VsZi5fb3B0cy51cmwsIHtcblx0XHRcdG1ldGhvZDogc2VsZi5fb3B0cy5tZXRob2QsXG5cdFx0XHRoZWFkZXJzOiBoZWFkZXJzTGlzdCxcblx0XHRcdGJvZHk6IGJvZHkgfHwgdW5kZWZpbmVkLFxuXHRcdFx0bW9kZTogJ2NvcnMnLFxuXHRcdFx0Y3JlZGVudGlhbHM6IG9wdHMud2l0aENyZWRlbnRpYWxzID8gJ2luY2x1ZGUnIDogJ3NhbWUtb3JpZ2luJ1xuXHRcdH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cdFx0XHRzZWxmLl9mZXRjaFJlc3BvbnNlID0gcmVzcG9uc2Vcblx0XHRcdHNlbGYuX2Nvbm5lY3QoKVxuXHRcdH0sIGZ1bmN0aW9uIChyZWFzb24pIHtcblx0XHRcdHNlbGYuZW1pdCgnZXJyb3InLCByZWFzb24pXG5cdFx0fSlcblx0fSBlbHNlIHtcblx0XHR2YXIgeGhyID0gc2VsZi5feGhyID0gbmV3IGdsb2JhbC5YTUxIdHRwUmVxdWVzdCgpXG5cdFx0dHJ5IHtcblx0XHRcdHhoci5vcGVuKHNlbGYuX29wdHMubWV0aG9kLCBzZWxmLl9vcHRzLnVybCwgdHJ1ZSlcblx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRzZWxmLmVtaXQoJ2Vycm9yJywgZXJyKVxuXHRcdFx0fSlcblx0XHRcdHJldHVyblxuXHRcdH1cblxuXHRcdC8vIENhbid0IHNldCByZXNwb25zZVR5cGUgb24gcmVhbGx5IG9sZCBicm93c2Vyc1xuXHRcdGlmICgncmVzcG9uc2VUeXBlJyBpbiB4aHIpXG5cdFx0XHR4aHIucmVzcG9uc2VUeXBlID0gc2VsZi5fbW9kZS5zcGxpdCgnOicpWzBdXG5cblx0XHRpZiAoJ3dpdGhDcmVkZW50aWFscycgaW4geGhyKVxuXHRcdFx0eGhyLndpdGhDcmVkZW50aWFscyA9ICEhb3B0cy53aXRoQ3JlZGVudGlhbHNcblxuXHRcdGlmIChzZWxmLl9tb2RlID09PSAndGV4dCcgJiYgJ292ZXJyaWRlTWltZVR5cGUnIGluIHhocilcblx0XHRcdHhoci5vdmVycmlkZU1pbWVUeXBlKCd0ZXh0L3BsYWluOyBjaGFyc2V0PXgtdXNlci1kZWZpbmVkJylcblxuXHRcdGlmICgndGltZW91dCcgaW4gb3B0cykge1xuXHRcdFx0eGhyLnRpbWVvdXQgPSBvcHRzLnRpbWVvdXRcblx0XHRcdHhoci5vbnRpbWVvdXQgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHNlbGYuZW1pdCgndGltZW91dCcpXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aGVhZGVyc0xpc3QuZm9yRWFjaChmdW5jdGlvbiAoaGVhZGVyKSB7XG5cdFx0XHR4aHIuc2V0UmVxdWVzdEhlYWRlcihoZWFkZXJbMF0sIGhlYWRlclsxXSlcblx0XHR9KVxuXG5cdFx0c2VsZi5fcmVzcG9uc2UgPSBudWxsXG5cdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHN3aXRjaCAoeGhyLnJlYWR5U3RhdGUpIHtcblx0XHRcdFx0Y2FzZSByU3RhdGVzLkxPQURJTkc6XG5cdFx0XHRcdGNhc2UgclN0YXRlcy5ET05FOlxuXHRcdFx0XHRcdHNlbGYuX29uWEhSUHJvZ3Jlc3MoKVxuXHRcdFx0XHRcdGJyZWFrXG5cdFx0XHR9XG5cdFx0fVxuXHRcdC8vIE5lY2Vzc2FyeSBmb3Igc3RyZWFtaW5nIGluIEZpcmVmb3gsIHNpbmNlIHhoci5yZXNwb25zZSBpcyBPTkxZIGRlZmluZWRcblx0XHQvLyBpbiBvbnByb2dyZXNzLCBub3QgaW4gb25yZWFkeXN0YXRlY2hhbmdlIHdpdGggeGhyLnJlYWR5U3RhdGUgPSAzXG5cdFx0aWYgKHNlbGYuX21vZGUgPT09ICdtb3otY2h1bmtlZC1hcnJheWJ1ZmZlcicpIHtcblx0XHRcdHhoci5vbnByb2dyZXNzID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRzZWxmLl9vblhIUlByb2dyZXNzKClcblx0XHRcdH1cblx0XHR9XG5cblx0XHR4aHIub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdGlmIChzZWxmLl9kZXN0cm95ZWQpXG5cdFx0XHRcdHJldHVyblxuXHRcdFx0c2VsZi5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcignWEhSIGVycm9yJykpXG5cdFx0fVxuXG5cdFx0dHJ5IHtcblx0XHRcdHhoci5zZW5kKGJvZHkpXG5cdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0c2VsZi5lbWl0KCdlcnJvcicsIGVycilcblx0XHRcdH0pXG5cdFx0XHRyZXR1cm5cblx0XHR9XG5cdH1cbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgeGhyLnN0YXR1cyBpcyByZWFkYWJsZSBhbmQgbm9uLXplcm8sIGluZGljYXRpbmcgbm8gZXJyb3IuXG4gKiBFdmVuIHRob3VnaCB0aGUgc3BlYyBzYXlzIGl0IHNob3VsZCBiZSBhdmFpbGFibGUgaW4gcmVhZHlTdGF0ZSAzLFxuICogYWNjZXNzaW5nIGl0IHRocm93cyBhbiBleGNlcHRpb24gaW4gSUU4XG4gKi9cbmZ1bmN0aW9uIHN0YXR1c1ZhbGlkICh4aHIpIHtcblx0dHJ5IHtcblx0XHR2YXIgc3RhdHVzID0geGhyLnN0YXR1c1xuXHRcdHJldHVybiAoc3RhdHVzICE9PSBudWxsICYmIHN0YXR1cyAhPT0gMClcblx0fSBjYXRjaCAoZSkge1xuXHRcdHJldHVybiBmYWxzZVxuXHR9XG59XG5cbkNsaWVudFJlcXVlc3QucHJvdG90eXBlLl9vblhIUlByb2dyZXNzID0gZnVuY3Rpb24gKCkge1xuXHR2YXIgc2VsZiA9IHRoaXNcblxuXHRpZiAoIXN0YXR1c1ZhbGlkKHNlbGYuX3hocikgfHwgc2VsZi5fZGVzdHJveWVkKVxuXHRcdHJldHVyblxuXG5cdGlmICghc2VsZi5fcmVzcG9uc2UpXG5cdFx0c2VsZi5fY29ubmVjdCgpXG5cblx0c2VsZi5fcmVzcG9uc2UuX29uWEhSUHJvZ3Jlc3MoKVxufVxuXG5DbGllbnRSZXF1ZXN0LnByb3RvdHlwZS5fY29ubmVjdCA9IGZ1bmN0aW9uICgpIHtcblx0dmFyIHNlbGYgPSB0aGlzXG5cblx0aWYgKHNlbGYuX2Rlc3Ryb3llZClcblx0XHRyZXR1cm5cblxuXHRzZWxmLl9yZXNwb25zZSA9IG5ldyBJbmNvbWluZ01lc3NhZ2Uoc2VsZi5feGhyLCBzZWxmLl9mZXRjaFJlc3BvbnNlLCBzZWxmLl9tb2RlKVxuXHRzZWxmLl9yZXNwb25zZS5vbignZXJyb3InLCBmdW5jdGlvbihlcnIpIHtcblx0XHRzZWxmLmVtaXQoJ2Vycm9yJywgZXJyKVxuXHR9KVxuXG5cdHNlbGYuZW1pdCgncmVzcG9uc2UnLCBzZWxmLl9yZXNwb25zZSlcbn1cblxuQ2xpZW50UmVxdWVzdC5wcm90b3R5cGUuX3dyaXRlID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcblx0dmFyIHNlbGYgPSB0aGlzXG5cblx0c2VsZi5fYm9keS5wdXNoKGNodW5rKVxuXHRjYigpXG59XG5cbkNsaWVudFJlcXVlc3QucHJvdG90eXBlLmFib3J0ID0gQ2xpZW50UmVxdWVzdC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcblx0dmFyIHNlbGYgPSB0aGlzXG5cdHNlbGYuX2Rlc3Ryb3llZCA9IHRydWVcblx0aWYgKHNlbGYuX3Jlc3BvbnNlKVxuXHRcdHNlbGYuX3Jlc3BvbnNlLl9kZXN0cm95ZWQgPSB0cnVlXG5cdGlmIChzZWxmLl94aHIpXG5cdFx0c2VsZi5feGhyLmFib3J0KClcblx0Ly8gQ3VycmVudGx5LCB0aGVyZSBpc24ndCBhIHdheSB0byB0cnVseSBhYm9ydCBhIGZldGNoLlxuXHQvLyBJZiB5b3UgbGlrZSBiaWtlc2hlZGRpbmcsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2hhdHdnL2ZldGNoL2lzc3Vlcy8yN1xufVxuXG5DbGllbnRSZXF1ZXN0LnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbiAoZGF0YSwgZW5jb2RpbmcsIGNiKSB7XG5cdHZhciBzZWxmID0gdGhpc1xuXHRpZiAodHlwZW9mIGRhdGEgPT09ICdmdW5jdGlvbicpIHtcblx0XHRjYiA9IGRhdGFcblx0XHRkYXRhID0gdW5kZWZpbmVkXG5cdH1cblxuXHRzdHJlYW0uV3JpdGFibGUucHJvdG90eXBlLmVuZC5jYWxsKHNlbGYsIGRhdGEsIGVuY29kaW5nLCBjYilcbn1cblxuQ2xpZW50UmVxdWVzdC5wcm90b3R5cGUuZmx1c2hIZWFkZXJzID0gZnVuY3Rpb24gKCkge31cbkNsaWVudFJlcXVlc3QucHJvdG90eXBlLnNldFRpbWVvdXQgPSBmdW5jdGlvbiAoKSB7fVxuQ2xpZW50UmVxdWVzdC5wcm90b3R5cGUuc2V0Tm9EZWxheSA9IGZ1bmN0aW9uICgpIHt9XG5DbGllbnRSZXF1ZXN0LnByb3RvdHlwZS5zZXRTb2NrZXRLZWVwQWxpdmUgPSBmdW5jdGlvbiAoKSB7fVxuXG4vLyBUYWtlbiBmcm9tIGh0dHA6Ly93d3cudzMub3JnL1RSL1hNTEh0dHBSZXF1ZXN0LyN0aGUtc2V0cmVxdWVzdGhlYWRlciUyOCUyOS1tZXRob2RcbnZhciB1bnNhZmVIZWFkZXJzID0gW1xuXHQnYWNjZXB0LWNoYXJzZXQnLFxuXHQnYWNjZXB0LWVuY29kaW5nJyxcblx0J2FjY2Vzcy1jb250cm9sLXJlcXVlc3QtaGVhZGVycycsXG5cdCdhY2Nlc3MtY29udHJvbC1yZXF1ZXN0LW1ldGhvZCcsXG5cdCdjb25uZWN0aW9uJyxcblx0J2NvbnRlbnQtbGVuZ3RoJyxcblx0J2Nvb2tpZScsXG5cdCdjb29raWUyJyxcblx0J2RhdGUnLFxuXHQnZG50Jyxcblx0J2V4cGVjdCcsXG5cdCdob3N0Jyxcblx0J2tlZXAtYWxpdmUnLFxuXHQnb3JpZ2luJyxcblx0J3JlZmVyZXInLFxuXHQndGUnLFxuXHQndHJhaWxlcicsXG5cdCd0cmFuc2Zlci1lbmNvZGluZycsXG5cdCd1cGdyYWRlJyxcblx0J3VzZXItYWdlbnQnLFxuXHQndmlhJ1xuXVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvc3RyZWFtLWh0dHAvbGliL3JlcXVlc3QuanNcbi8vIG1vZHVsZSBpZCA9IDEzNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJ2YXIgY2FwYWJpbGl0eSA9IHJlcXVpcmUoJy4vY2FwYWJpbGl0eScpXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG52YXIgc3RyZWFtID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtJylcblxudmFyIHJTdGF0ZXMgPSBleHBvcnRzLnJlYWR5U3RhdGVzID0ge1xuXHRVTlNFTlQ6IDAsXG5cdE9QRU5FRDogMSxcblx0SEVBREVSU19SRUNFSVZFRDogMixcblx0TE9BRElORzogMyxcblx0RE9ORTogNFxufVxuXG52YXIgSW5jb21pbmdNZXNzYWdlID0gZXhwb3J0cy5JbmNvbWluZ01lc3NhZ2UgPSBmdW5jdGlvbiAoeGhyLCByZXNwb25zZSwgbW9kZSkge1xuXHR2YXIgc2VsZiA9IHRoaXNcblx0c3RyZWFtLlJlYWRhYmxlLmNhbGwoc2VsZilcblxuXHRzZWxmLl9tb2RlID0gbW9kZVxuXHRzZWxmLmhlYWRlcnMgPSB7fVxuXHRzZWxmLnJhd0hlYWRlcnMgPSBbXVxuXHRzZWxmLnRyYWlsZXJzID0ge31cblx0c2VsZi5yYXdUcmFpbGVycyA9IFtdXG5cblx0Ly8gRmFrZSB0aGUgJ2Nsb3NlJyBldmVudCwgYnV0IG9ubHkgb25jZSAnZW5kJyBmaXJlc1xuXHRzZWxmLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7XG5cdFx0Ly8gVGhlIG5leHRUaWNrIGlzIG5lY2Vzc2FyeSB0byBwcmV2ZW50IHRoZSAncmVxdWVzdCcgbW9kdWxlIGZyb20gY2F1c2luZyBhbiBpbmZpbml0ZSBsb29wXG5cdFx0cHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiAoKSB7XG5cdFx0XHRzZWxmLmVtaXQoJ2Nsb3NlJylcblx0XHR9KVxuXHR9KVxuXG5cdGlmIChtb2RlID09PSAnZmV0Y2gnKSB7XG5cdFx0c2VsZi5fZmV0Y2hSZXNwb25zZSA9IHJlc3BvbnNlXG5cblx0XHRzZWxmLnVybCA9IHJlc3BvbnNlLnVybFxuXHRcdHNlbGYuc3RhdHVzQ29kZSA9IHJlc3BvbnNlLnN0YXR1c1xuXHRcdHNlbGYuc3RhdHVzTWVzc2FnZSA9IHJlc3BvbnNlLnN0YXR1c1RleHRcblx0XHRcblx0XHRyZXNwb25zZS5oZWFkZXJzLmZvckVhY2goZnVuY3Rpb24oaGVhZGVyLCBrZXkpe1xuXHRcdFx0c2VsZi5oZWFkZXJzW2tleS50b0xvd2VyQ2FzZSgpXSA9IGhlYWRlclxuXHRcdFx0c2VsZi5yYXdIZWFkZXJzLnB1c2goa2V5LCBoZWFkZXIpXG5cdFx0fSlcblxuXG5cdFx0Ly8gVE9ETzogdGhpcyBkb2Vzbid0IHJlc3BlY3QgYmFja3ByZXNzdXJlLiBPbmNlIFdyaXRhYmxlU3RyZWFtIGlzIGF2YWlsYWJsZSwgdGhpcyBjYW4gYmUgZml4ZWRcblx0XHR2YXIgcmVhZGVyID0gcmVzcG9uc2UuYm9keS5nZXRSZWFkZXIoKVxuXHRcdGZ1bmN0aW9uIHJlYWQgKCkge1xuXHRcdFx0cmVhZGVyLnJlYWQoKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcblx0XHRcdFx0aWYgKHNlbGYuX2Rlc3Ryb3llZClcblx0XHRcdFx0XHRyZXR1cm5cblx0XHRcdFx0aWYgKHJlc3VsdC5kb25lKSB7XG5cdFx0XHRcdFx0c2VsZi5wdXNoKG51bGwpXG5cdFx0XHRcdFx0cmV0dXJuXG5cdFx0XHRcdH1cblx0XHRcdFx0c2VsZi5wdXNoKG5ldyBCdWZmZXIocmVzdWx0LnZhbHVlKSlcblx0XHRcdFx0cmVhZCgpXG5cdFx0XHR9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcblx0XHRcdFx0c2VsZi5lbWl0KCdlcnJvcicsIGVycilcblx0XHRcdH0pXG5cdFx0fVxuXHRcdHJlYWQoKVxuXG5cdH0gZWxzZSB7XG5cdFx0c2VsZi5feGhyID0geGhyXG5cdFx0c2VsZi5fcG9zID0gMFxuXG5cdFx0c2VsZi51cmwgPSB4aHIucmVzcG9uc2VVUkxcblx0XHRzZWxmLnN0YXR1c0NvZGUgPSB4aHIuc3RhdHVzXG5cdFx0c2VsZi5zdGF0dXNNZXNzYWdlID0geGhyLnN0YXR1c1RleHRcblx0XHR2YXIgaGVhZGVycyA9IHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKS5zcGxpdCgvXFxyP1xcbi8pXG5cdFx0aGVhZGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoZWFkZXIpIHtcblx0XHRcdHZhciBtYXRjaGVzID0gaGVhZGVyLm1hdGNoKC9eKFteOl0rKTpcXHMqKC4qKS8pXG5cdFx0XHRpZiAobWF0Y2hlcykge1xuXHRcdFx0XHR2YXIga2V5ID0gbWF0Y2hlc1sxXS50b0xvd2VyQ2FzZSgpXG5cdFx0XHRcdGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuXHRcdFx0XHRcdGlmIChzZWxmLmhlYWRlcnNba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0XHRzZWxmLmhlYWRlcnNba2V5XSA9IFtdXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHNlbGYuaGVhZGVyc1trZXldLnB1c2gobWF0Y2hlc1syXSlcblx0XHRcdFx0fSBlbHNlIGlmIChzZWxmLmhlYWRlcnNba2V5XSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0c2VsZi5oZWFkZXJzW2tleV0gKz0gJywgJyArIG1hdGNoZXNbMl1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzZWxmLmhlYWRlcnNba2V5XSA9IG1hdGNoZXNbMl1cblx0XHRcdFx0fVxuXHRcdFx0XHRzZWxmLnJhd0hlYWRlcnMucHVzaChtYXRjaGVzWzFdLCBtYXRjaGVzWzJdKVxuXHRcdFx0fVxuXHRcdH0pXG5cblx0XHRzZWxmLl9jaGFyc2V0ID0gJ3gtdXNlci1kZWZpbmVkJ1xuXHRcdGlmICghY2FwYWJpbGl0eS5vdmVycmlkZU1pbWVUeXBlKSB7XG5cdFx0XHR2YXIgbWltZVR5cGUgPSBzZWxmLnJhd0hlYWRlcnNbJ21pbWUtdHlwZSddXG5cdFx0XHRpZiAobWltZVR5cGUpIHtcblx0XHRcdFx0dmFyIGNoYXJzZXRNYXRjaCA9IG1pbWVUeXBlLm1hdGNoKC87XFxzKmNoYXJzZXQ9KFteO10pKDt8JCkvKVxuXHRcdFx0XHRpZiAoY2hhcnNldE1hdGNoKSB7XG5cdFx0XHRcdFx0c2VsZi5fY2hhcnNldCA9IGNoYXJzZXRNYXRjaFsxXS50b0xvd2VyQ2FzZSgpXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICghc2VsZi5fY2hhcnNldClcblx0XHRcdFx0c2VsZi5fY2hhcnNldCA9ICd1dGYtOCcgLy8gYmVzdCBndWVzc1xuXHRcdH1cblx0fVxufVxuXG5pbmhlcml0cyhJbmNvbWluZ01lc3NhZ2UsIHN0cmVhbS5SZWFkYWJsZSlcblxuSW5jb21pbmdNZXNzYWdlLnByb3RvdHlwZS5fcmVhZCA9IGZ1bmN0aW9uICgpIHt9XG5cbkluY29taW5nTWVzc2FnZS5wcm90b3R5cGUuX29uWEhSUHJvZ3Jlc3MgPSBmdW5jdGlvbiAoKSB7XG5cdHZhciBzZWxmID0gdGhpc1xuXG5cdHZhciB4aHIgPSBzZWxmLl94aHJcblxuXHR2YXIgcmVzcG9uc2UgPSBudWxsXG5cdHN3aXRjaCAoc2VsZi5fbW9kZSkge1xuXHRcdGNhc2UgJ3RleHQ6dmJhcnJheSc6IC8vIEZvciBJRTlcblx0XHRcdGlmICh4aHIucmVhZHlTdGF0ZSAhPT0gclN0YXRlcy5ET05FKVxuXHRcdFx0XHRicmVha1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Ly8gVGhpcyBmYWlscyBpbiBJRThcblx0XHRcdFx0cmVzcG9uc2UgPSBuZXcgZ2xvYmFsLlZCQXJyYXkoeGhyLnJlc3BvbnNlQm9keSkudG9BcnJheSgpXG5cdFx0XHR9IGNhdGNoIChlKSB7fVxuXHRcdFx0aWYgKHJlc3BvbnNlICE9PSBudWxsKSB7XG5cdFx0XHRcdHNlbGYucHVzaChuZXcgQnVmZmVyKHJlc3BvbnNlKSlcblx0XHRcdFx0YnJlYWtcblx0XHRcdH1cblx0XHRcdC8vIEZhbGxzIHRocm91Z2ggaW4gSUU4XHRcblx0XHRjYXNlICd0ZXh0Jzpcblx0XHRcdHRyeSB7IC8vIFRoaXMgd2lsbCBmYWlsIHdoZW4gcmVhZHlTdGF0ZSA9IDMgaW4gSUU5LiBTd2l0Y2ggbW9kZSBhbmQgd2FpdCBmb3IgcmVhZHlTdGF0ZSA9IDRcblx0XHRcdFx0cmVzcG9uc2UgPSB4aHIucmVzcG9uc2VUZXh0XG5cdFx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRcdHNlbGYuX21vZGUgPSAndGV4dDp2YmFycmF5J1xuXHRcdFx0XHRicmVha1xuXHRcdFx0fVxuXHRcdFx0aWYgKHJlc3BvbnNlLmxlbmd0aCA+IHNlbGYuX3Bvcykge1xuXHRcdFx0XHR2YXIgbmV3RGF0YSA9IHJlc3BvbnNlLnN1YnN0cihzZWxmLl9wb3MpXG5cdFx0XHRcdGlmIChzZWxmLl9jaGFyc2V0ID09PSAneC11c2VyLWRlZmluZWQnKSB7XG5cdFx0XHRcdFx0dmFyIGJ1ZmZlciA9IG5ldyBCdWZmZXIobmV3RGF0YS5sZW5ndGgpXG5cdFx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBuZXdEYXRhLmxlbmd0aDsgaSsrKVxuXHRcdFx0XHRcdFx0YnVmZmVyW2ldID0gbmV3RGF0YS5jaGFyQ29kZUF0KGkpICYgMHhmZlxuXG5cdFx0XHRcdFx0c2VsZi5wdXNoKGJ1ZmZlcilcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzZWxmLnB1c2gobmV3RGF0YSwgc2VsZi5fY2hhcnNldClcblx0XHRcdFx0fVxuXHRcdFx0XHRzZWxmLl9wb3MgPSByZXNwb25zZS5sZW5ndGhcblx0XHRcdH1cblx0XHRcdGJyZWFrXG5cdFx0Y2FzZSAnYXJyYXlidWZmZXInOlxuXHRcdFx0aWYgKHhoci5yZWFkeVN0YXRlICE9PSByU3RhdGVzLkRPTkUgfHwgIXhoci5yZXNwb25zZSlcblx0XHRcdFx0YnJlYWtcblx0XHRcdHJlc3BvbnNlID0geGhyLnJlc3BvbnNlXG5cdFx0XHRzZWxmLnB1c2gobmV3IEJ1ZmZlcihuZXcgVWludDhBcnJheShyZXNwb25zZSkpKVxuXHRcdFx0YnJlYWtcblx0XHRjYXNlICdtb3otY2h1bmtlZC1hcnJheWJ1ZmZlcic6IC8vIHRha2Ugd2hvbGVcblx0XHRcdHJlc3BvbnNlID0geGhyLnJlc3BvbnNlXG5cdFx0XHRpZiAoeGhyLnJlYWR5U3RhdGUgIT09IHJTdGF0ZXMuTE9BRElORyB8fCAhcmVzcG9uc2UpXG5cdFx0XHRcdGJyZWFrXG5cdFx0XHRzZWxmLnB1c2gobmV3IEJ1ZmZlcihuZXcgVWludDhBcnJheShyZXNwb25zZSkpKVxuXHRcdFx0YnJlYWtcblx0XHRjYXNlICdtcy1zdHJlYW0nOlxuXHRcdFx0cmVzcG9uc2UgPSB4aHIucmVzcG9uc2Vcblx0XHRcdGlmICh4aHIucmVhZHlTdGF0ZSAhPT0gclN0YXRlcy5MT0FESU5HKVxuXHRcdFx0XHRicmVha1xuXHRcdFx0dmFyIHJlYWRlciA9IG5ldyBnbG9iYWwuTVNTdHJlYW1SZWFkZXIoKVxuXHRcdFx0cmVhZGVyLm9ucHJvZ3Jlc3MgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdGlmIChyZWFkZXIucmVzdWx0LmJ5dGVMZW5ndGggPiBzZWxmLl9wb3MpIHtcblx0XHRcdFx0XHRzZWxmLnB1c2gobmV3IEJ1ZmZlcihuZXcgVWludDhBcnJheShyZWFkZXIucmVzdWx0LnNsaWNlKHNlbGYuX3BvcykpKSlcblx0XHRcdFx0XHRzZWxmLl9wb3MgPSByZWFkZXIucmVzdWx0LmJ5dGVMZW5ndGhcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0c2VsZi5wdXNoKG51bGwpXG5cdFx0XHR9XG5cdFx0XHQvLyByZWFkZXIub25lcnJvciA9ID8/PyAvLyBUT0RPOiB0aGlzXG5cdFx0XHRyZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIocmVzcG9uc2UpXG5cdFx0XHRicmVha1xuXHR9XG5cblx0Ly8gVGhlIG1zLXN0cmVhbSBjYXNlIGhhbmRsZXMgZW5kIHNlcGFyYXRlbHkgaW4gcmVhZGVyLm9ubG9hZCgpXG5cdGlmIChzZWxmLl94aHIucmVhZHlTdGF0ZSA9PT0gclN0YXRlcy5ET05FICYmIHNlbGYuX21vZGUgIT09ICdtcy1zdHJlYW0nKSB7XG5cdFx0c2VsZi5wdXNoKG51bGwpXG5cdH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3N0cmVhbS1odHRwL2xpYi9yZXNwb25zZS5qc1xuLy8gbW9kdWxlIGlkID0gMTM1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qIChpZ25vcmVkKSAqL1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIHV0aWwgKGlnbm9yZWQpXG4vLyBtb2R1bGUgaWQgPSAxMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKjxyZXBsYWNlbWVudD4qL1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG4vKjwvcmVwbGFjZW1lbnQ+Ki9cblxuZnVuY3Rpb24gY29weUJ1ZmZlcihzcmMsIHRhcmdldCwgb2Zmc2V0KSB7XG4gIHNyYy5jb3B5KHRhcmdldCwgb2Zmc2V0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEJ1ZmZlckxpc3QoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJ1ZmZlckxpc3QpO1xuXG4gICAgdGhpcy5oZWFkID0gbnVsbDtcbiAgICB0aGlzLnRhaWwgPSBudWxsO1xuICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgfVxuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiBwdXNoKHYpIHtcbiAgICB2YXIgZW50cnkgPSB7IGRhdGE6IHYsIG5leHQ6IG51bGwgfTtcbiAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB0aGlzLnRhaWwubmV4dCA9IGVudHJ5O2Vsc2UgdGhpcy5oZWFkID0gZW50cnk7XG4gICAgdGhpcy50YWlsID0gZW50cnk7XG4gICAgKyt0aGlzLmxlbmd0aDtcbiAgfTtcblxuICBCdWZmZXJMaXN0LnByb3RvdHlwZS51bnNoaWZ0ID0gZnVuY3Rpb24gdW5zaGlmdCh2KSB7XG4gICAgdmFyIGVudHJ5ID0geyBkYXRhOiB2LCBuZXh0OiB0aGlzLmhlYWQgfTtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHRoaXMudGFpbCA9IGVudHJ5O1xuICAgIHRoaXMuaGVhZCA9IGVudHJ5O1xuICAgICsrdGhpcy5sZW5ndGg7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuc2hpZnQgPSBmdW5jdGlvbiBzaGlmdCgpIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICB2YXIgcmV0ID0gdGhpcy5oZWFkLmRhdGE7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxKSB0aGlzLmhlYWQgPSB0aGlzLnRhaWwgPSBudWxsO2Vsc2UgdGhpcy5oZWFkID0gdGhpcy5oZWFkLm5leHQ7XG4gICAgLS10aGlzLmxlbmd0aDtcbiAgICByZXR1cm4gcmV0O1xuICB9O1xuXG4gIEJ1ZmZlckxpc3QucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgdGhpcy5oZWFkID0gdGhpcy50YWlsID0gbnVsbDtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuam9pbiA9IGZ1bmN0aW9uIGpvaW4ocykge1xuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkgcmV0dXJuICcnO1xuICAgIHZhciBwID0gdGhpcy5oZWFkO1xuICAgIHZhciByZXQgPSAnJyArIHAuZGF0YTtcbiAgICB3aGlsZSAocCA9IHAubmV4dCkge1xuICAgICAgcmV0ICs9IHMgKyBwLmRhdGE7XG4gICAgfXJldHVybiByZXQ7XG4gIH07XG5cbiAgQnVmZmVyTGlzdC5wcm90b3R5cGUuY29uY2F0ID0gZnVuY3Rpb24gY29uY2F0KG4pIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybiBCdWZmZXIuYWxsb2MoMCk7XG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAxKSByZXR1cm4gdGhpcy5oZWFkLmRhdGE7XG4gICAgdmFyIHJldCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShuID4+PiAwKTtcbiAgICB2YXIgcCA9IHRoaXMuaGVhZDtcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKHApIHtcbiAgICAgIGNvcHlCdWZmZXIocC5kYXRhLCByZXQsIGkpO1xuICAgICAgaSArPSBwLmRhdGEubGVuZ3RoO1xuICAgICAgcCA9IHAubmV4dDtcbiAgICB9XG4gICAgcmV0dXJuIHJldDtcbiAgfTtcblxuICByZXR1cm4gQnVmZmVyTGlzdDtcbn0oKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvQnVmZmVyTGlzdC5qc1xuLy8gbW9kdWxlIGlkID0gMTM3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInZhciBhcHBseSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseTtcblxuLy8gRE9NIEFQSXMsIGZvciBjb21wbGV0ZW5lc3NcblxuZXhwb3J0cy5zZXRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldFRpbWVvdXQsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCB3aW5kb3csIGFyZ3VtZW50cyksIGNsZWFySW50ZXJ2YWwpO1xufTtcbmV4cG9ydHMuY2xlYXJUaW1lb3V0ID1cbmV4cG9ydHMuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHtcbiAgaWYgKHRpbWVvdXQpIHtcbiAgICB0aW1lb3V0LmNsb3NlKCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIFRpbWVvdXQoaWQsIGNsZWFyRm4pIHtcbiAgdGhpcy5faWQgPSBpZDtcbiAgdGhpcy5fY2xlYXJGbiA9IGNsZWFyRm47XG59XG5UaW1lb3V0LnByb3RvdHlwZS51bnJlZiA9IFRpbWVvdXQucHJvdG90eXBlLnJlZiA9IGZ1bmN0aW9uKCkge307XG5UaW1lb3V0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9jbGVhckZuLmNhbGwod2luZG93LCB0aGlzLl9pZCk7XG59O1xuXG4vLyBEb2VzIG5vdCBzdGFydCB0aGUgdGltZSwganVzdCBzZXRzIHVwIHRoZSBtZW1iZXJzIG5lZWRlZC5cbmV4cG9ydHMuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSwgbXNlY3MpIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IG1zZWNzO1xufTtcblxuZXhwb3J0cy51bmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IC0xO1xufTtcblxuZXhwb3J0cy5fdW5yZWZBY3RpdmUgPSBleHBvcnRzLmFjdGl2ZSA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuXG4gIHZhciBtc2VjcyA9IGl0ZW0uX2lkbGVUaW1lb3V0O1xuICBpZiAobXNlY3MgPj0gMCkge1xuICAgIGl0ZW0uX2lkbGVUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIG9uVGltZW91dCgpIHtcbiAgICAgIGlmIChpdGVtLl9vblRpbWVvdXQpXG4gICAgICAgIGl0ZW0uX29uVGltZW91dCgpO1xuICAgIH0sIG1zZWNzKTtcbiAgfVxufTtcblxuLy8gc2V0aW1tZWRpYXRlIGF0dGFjaGVzIGl0c2VsZiB0byB0aGUgZ2xvYmFsIG9iamVjdFxucmVxdWlyZShcInNldGltbWVkaWF0ZVwiKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKFwiZ2xvYmFsXCIpO1xuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSBnbG9iYWwuc2V0SW1tZWRpYXRlO1xuZXhwb3J0cy5jbGVhckltbWVkaWF0ZSA9IGdsb2JhbC5jbGVhckltbWVkaWF0ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL25vZGUtbGlicy1icm93c2VyL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzXG4vLyBtb2R1bGUgaWQgPSAxMzhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiKGZ1bmN0aW9uIChnbG9iYWwsIHVuZGVmaW5lZCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgaWYgKGdsb2JhbC5zZXRJbW1lZGlhdGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBuZXh0SGFuZGxlID0gMTsgLy8gU3BlYyBzYXlzIGdyZWF0ZXIgdGhhbiB6ZXJvXG4gICAgdmFyIHRhc2tzQnlIYW5kbGUgPSB7fTtcbiAgICB2YXIgY3VycmVudGx5UnVubmluZ0FUYXNrID0gZmFsc2U7XG4gICAgdmFyIGRvYyA9IGdsb2JhbC5kb2N1bWVudDtcbiAgICB2YXIgcmVnaXN0ZXJJbW1lZGlhdGU7XG5cbiAgICBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoY2FsbGJhY2spIHtcbiAgICAgIC8vIENhbGxiYWNrIGNhbiBlaXRoZXIgYmUgYSBmdW5jdGlvbiBvciBhIHN0cmluZ1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNhbGxiYWNrID0gbmV3IEZ1bmN0aW9uKFwiXCIgKyBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgICAvLyBDb3B5IGZ1bmN0aW9uIGFyZ3VtZW50c1xuICAgICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpICsgMV07XG4gICAgICB9XG4gICAgICAvLyBTdG9yZSBhbmQgcmVnaXN0ZXIgdGhlIHRhc2tcbiAgICAgIHZhciB0YXNrID0geyBjYWxsYmFjazogY2FsbGJhY2ssIGFyZ3M6IGFyZ3MgfTtcbiAgICAgIHRhc2tzQnlIYW5kbGVbbmV4dEhhbmRsZV0gPSB0YXNrO1xuICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUobmV4dEhhbmRsZSk7XG4gICAgICByZXR1cm4gbmV4dEhhbmRsZSsrO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGhhbmRsZSkge1xuICAgICAgICBkZWxldGUgdGFza3NCeUhhbmRsZVtoYW5kbGVdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bih0YXNrKSB7XG4gICAgICAgIHZhciBjYWxsYmFjayA9IHRhc2suY2FsbGJhY2s7XG4gICAgICAgIHZhciBhcmdzID0gdGFzay5hcmdzO1xuICAgICAgICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bklmUHJlc2VudChoYW5kbGUpIHtcbiAgICAgICAgLy8gRnJvbSB0aGUgc3BlYzogXCJXYWl0IHVudGlsIGFueSBpbnZvY2F0aW9ucyBvZiB0aGlzIGFsZ29yaXRobSBzdGFydGVkIGJlZm9yZSB0aGlzIG9uZSBoYXZlIGNvbXBsZXRlZC5cIlxuICAgICAgICAvLyBTbyBpZiB3ZSdyZSBjdXJyZW50bHkgcnVubmluZyBhIHRhc2ssIHdlJ2xsIG5lZWQgdG8gZGVsYXkgdGhpcyBpbnZvY2F0aW9uLlxuICAgICAgICBpZiAoY3VycmVudGx5UnVubmluZ0FUYXNrKSB7XG4gICAgICAgICAgICAvLyBEZWxheSBieSBkb2luZyBhIHNldFRpbWVvdXQuIHNldEltbWVkaWF0ZSB3YXMgdHJpZWQgaW5zdGVhZCwgYnV0IGluIEZpcmVmb3ggNyBpdCBnZW5lcmF0ZWQgYVxuICAgICAgICAgICAgLy8gXCJ0b28gbXVjaCByZWN1cnNpb25cIiBlcnJvci5cbiAgICAgICAgICAgIHNldFRpbWVvdXQocnVuSWZQcmVzZW50LCAwLCBoYW5kbGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIHRhc2sgPSB0YXNrc0J5SGFuZGxlW2hhbmRsZV07XG4gICAgICAgICAgICBpZiAodGFzaykge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IHRydWU7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcnVuKHRhc2spO1xuICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW1tZWRpYXRlKGhhbmRsZSk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxOZXh0VGlja0ltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiAoKSB7IHJ1bklmUHJlc2VudChoYW5kbGUpOyB9KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYW5Vc2VQb3N0TWVzc2FnZSgpIHtcbiAgICAgICAgLy8gVGhlIHRlc3QgYWdhaW5zdCBgaW1wb3J0U2NyaXB0c2AgcHJldmVudHMgdGhpcyBpbXBsZW1lbnRhdGlvbiBmcm9tIGJlaW5nIGluc3RhbGxlZCBpbnNpZGUgYSB3ZWIgd29ya2VyLFxuICAgICAgICAvLyB3aGVyZSBgZ2xvYmFsLnBvc3RNZXNzYWdlYCBtZWFucyBzb21ldGhpbmcgY29tcGxldGVseSBkaWZmZXJlbnQgYW5kIGNhbid0IGJlIHVzZWQgZm9yIHRoaXMgcHVycG9zZS5cbiAgICAgICAgaWYgKGdsb2JhbC5wb3N0TWVzc2FnZSAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpIHtcbiAgICAgICAgICAgIHZhciBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzID0gdHJ1ZTtcbiAgICAgICAgICAgIHZhciBvbGRPbk1lc3NhZ2UgPSBnbG9iYWwub25tZXNzYWdlO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXMgPSBmYWxzZTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoXCJcIiwgXCIqXCIpO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IG9sZE9uTWVzc2FnZTtcbiAgICAgICAgICAgIHJldHVybiBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIC8vIEluc3RhbGxzIGFuIGV2ZW50IGhhbmRsZXIgb24gYGdsb2JhbGAgZm9yIHRoZSBgbWVzc2FnZWAgZXZlbnQ6IHNlZVxuICAgICAgICAvLyAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0RPTS93aW5kb3cucG9zdE1lc3NhZ2VcbiAgICAgICAgLy8gKiBodHRwOi8vd3d3LndoYXR3Zy5vcmcvc3BlY3Mvd2ViLWFwcHMvY3VycmVudC13b3JrL211bHRpcGFnZS9jb21tcy5odG1sI2Nyb3NzRG9jdW1lbnRNZXNzYWdlc1xuXG4gICAgICAgIHZhciBtZXNzYWdlUHJlZml4ID0gXCJzZXRJbW1lZGlhdGUkXCIgKyBNYXRoLnJhbmRvbSgpICsgXCIkXCI7XG4gICAgICAgIHZhciBvbkdsb2JhbE1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LnNvdXJjZSA9PT0gZ2xvYmFsICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIGV2ZW50LmRhdGEgPT09IFwic3RyaW5nXCIgJiZcbiAgICAgICAgICAgICAgICBldmVudC5kYXRhLmluZGV4T2YobWVzc2FnZVByZWZpeCkgPT09IDApIHtcbiAgICAgICAgICAgICAgICBydW5JZlByZXNlbnQoK2V2ZW50LmRhdGEuc2xpY2UobWVzc2FnZVByZWZpeC5sZW5ndGgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UsIGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdsb2JhbC5hdHRhY2hFdmVudChcIm9ubWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShtZXNzYWdlUHJlZml4ICsgaGFuZGxlLCBcIipcIik7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbE1lc3NhZ2VDaGFubmVsSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHZhciBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBoYW5kbGUgPSBldmVudC5kYXRhO1xuICAgICAgICAgICAgcnVuSWZQcmVzZW50KGhhbmRsZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGNoYW5uZWwucG9ydDIucG9zdE1lc3NhZ2UoaGFuZGxlKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICB2YXIgaHRtbCA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHJlZ2lzdGVySW1tZWRpYXRlID0gZnVuY3Rpb24oaGFuZGxlKSB7XG4gICAgICAgICAgICAvLyBDcmVhdGUgYSA8c2NyaXB0PiBlbGVtZW50OyBpdHMgcmVhZHlzdGF0ZWNoYW5nZSBldmVudCB3aWxsIGJlIGZpcmVkIGFzeW5jaHJvbm91c2x5IG9uY2UgaXQgaXMgaW5zZXJ0ZWRcbiAgICAgICAgICAgIC8vIGludG8gdGhlIGRvY3VtZW50LiBEbyBzbywgdGh1cyBxdWV1aW5nIHVwIHRoZSB0YXNrLiBSZW1lbWJlciB0byBjbGVhbiB1cCBvbmNlIGl0J3MgYmVlbiBjYWxsZWQuXG4gICAgICAgICAgICB2YXIgc2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJ1bklmUHJlc2VudChoYW5kbGUpO1xuICAgICAgICAgICAgICAgIHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgICAgICAgICBzY3JpcHQgPSBudWxsO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsU2V0VGltZW91dEltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgc2V0VGltZW91dChydW5JZlByZXNlbnQsIDAsIGhhbmRsZSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gSWYgc3VwcG9ydGVkLCB3ZSBzaG91bGQgYXR0YWNoIHRvIHRoZSBwcm90b3R5cGUgb2YgZ2xvYmFsLCBzaW5jZSB0aGF0IGlzIHdoZXJlIHNldFRpbWVvdXQgZXQgYWwuIGxpdmUuXG4gICAgdmFyIGF0dGFjaFRvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZihnbG9iYWwpO1xuICAgIGF0dGFjaFRvID0gYXR0YWNoVG8gJiYgYXR0YWNoVG8uc2V0VGltZW91dCA/IGF0dGFjaFRvIDogZ2xvYmFsO1xuXG4gICAgLy8gRG9uJ3QgZ2V0IGZvb2xlZCBieSBlLmcuIGJyb3dzZXJpZnkgZW52aXJvbm1lbnRzLlxuICAgIGlmICh7fS50b1N0cmluZy5jYWxsKGdsb2JhbC5wcm9jZXNzKSA9PT0gXCJbb2JqZWN0IHByb2Nlc3NdXCIpIHtcbiAgICAgICAgLy8gRm9yIE5vZGUuanMgYmVmb3JlIDAuOVxuICAgICAgICBpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbigpO1xuXG4gICAgfSBlbHNlIGlmIChjYW5Vc2VQb3N0TWVzc2FnZSgpKSB7XG4gICAgICAgIC8vIEZvciBub24tSUUxMCBtb2Rlcm4gYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSBpZiAoZ2xvYmFsLk1lc3NhZ2VDaGFubmVsKSB7XG4gICAgICAgIC8vIEZvciB3ZWIgd29ya2Vycywgd2hlcmUgc3VwcG9ydGVkXG4gICAgICAgIGluc3RhbGxNZXNzYWdlQ2hhbm5lbEltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2UgaWYgKGRvYyAmJiBcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiIGluIGRvYy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpKSB7XG4gICAgICAgIC8vIEZvciBJRSA24oCTOFxuICAgICAgICBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBGb3Igb2xkZXIgYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFNldFRpbWVvdXRJbXBsZW1lbnRhdGlvbigpO1xuICAgIH1cblxuICAgIGF0dGFjaFRvLnNldEltbWVkaWF0ZSA9IHNldEltbWVkaWF0ZTtcbiAgICBhdHRhY2hUby5jbGVhckltbWVkaWF0ZSA9IGNsZWFySW1tZWRpYXRlO1xufSh0eXBlb2Ygc2VsZiA9PT0gXCJ1bmRlZmluZWRcIiA/IHR5cGVvZiBnbG9iYWwgPT09IFwidW5kZWZpbmVkXCIgPyB0aGlzIDogZ2xvYmFsIDogc2VsZikpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvc2V0aW1tZWRpYXRlL3NldEltbWVkaWF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gMTM5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInZhciB3aW47XG5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgd2luID0gd2luZG93O1xufSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgd2luID0gZ2xvYmFsO1xufSBlbHNlIGlmICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIil7XG4gICAgd2luID0gc2VsZjtcbn0gZWxzZSB7XG4gICAgd2luID0ge307XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2luO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZ2xvYmFsL3dpbmRvdy5qc1xuLy8gbW9kdWxlIGlkID0gMTQwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIlxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlcHJlY2F0ZTtcblxuLyoqXG4gKiBNYXJrIHRoYXQgYSBtZXRob2Qgc2hvdWxkIG5vdCBiZSB1c2VkLlxuICogUmV0dXJucyBhIG1vZGlmaWVkIGZ1bmN0aW9uIHdoaWNoIHdhcm5zIG9uY2UgYnkgZGVmYXVsdC5cbiAqXG4gKiBJZiBgbG9jYWxTdG9yYWdlLm5vRGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gaXQgaXMgYSBuby1vcC5cbiAqXG4gKiBJZiBgbG9jYWxTdG9yYWdlLnRocm93RGVwcmVjYXRpb24gPSB0cnVlYCBpcyBzZXQsIHRoZW4gZGVwcmVjYXRlZCBmdW5jdGlvbnNcbiAqIHdpbGwgdGhyb3cgYW4gRXJyb3Igd2hlbiBpbnZva2VkLlxuICpcbiAqIElmIGBsb2NhbFN0b3JhZ2UudHJhY2VEZXByZWNhdGlvbiA9IHRydWVgIGlzIHNldCwgdGhlbiBkZXByZWNhdGVkIGZ1bmN0aW9uc1xuICogd2lsbCBpbnZva2UgYGNvbnNvbGUudHJhY2UoKWAgaW5zdGVhZCBvZiBgY29uc29sZS5lcnJvcigpYC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiAtIHRoZSBmdW5jdGlvbiB0byBkZXByZWNhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBtc2cgLSB0aGUgc3RyaW5nIHRvIHByaW50IHRvIHRoZSBjb25zb2xlIHdoZW4gYGZuYCBpcyBpbnZva2VkXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IGEgbmV3IFwiZGVwcmVjYXRlZFwiIHZlcnNpb24gb2YgYGZuYFxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBkZXByZWNhdGUgKGZuLCBtc2cpIHtcbiAgaWYgKGNvbmZpZygnbm9EZXByZWNhdGlvbicpKSB7XG4gICAgcmV0dXJuIGZuO1xuICB9XG5cbiAgdmFyIHdhcm5lZCA9IGZhbHNlO1xuICBmdW5jdGlvbiBkZXByZWNhdGVkKCkge1xuICAgIGlmICghd2FybmVkKSB7XG4gICAgICBpZiAoY29uZmlnKCd0aHJvd0RlcHJlY2F0aW9uJykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1zZyk7XG4gICAgICB9IGVsc2UgaWYgKGNvbmZpZygndHJhY2VEZXByZWNhdGlvbicpKSB7XG4gICAgICAgIGNvbnNvbGUudHJhY2UobXNnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUud2Fybihtc2cpO1xuICAgICAgfVxuICAgICAgd2FybmVkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICByZXR1cm4gZGVwcmVjYXRlZDtcbn1cblxuLyoqXG4gKiBDaGVja3MgYGxvY2FsU3RvcmFnZWAgZm9yIGJvb2xlYW4gdmFsdWVzIGZvciB0aGUgZ2l2ZW4gYG5hbWVgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGNvbmZpZyAobmFtZSkge1xuICAvLyBhY2Nlc3NpbmcgZ2xvYmFsLmxvY2FsU3RvcmFnZSBjYW4gdHJpZ2dlciBhIERPTUV4Y2VwdGlvbiBpbiBzYW5kYm94ZWQgaWZyYW1lc1xuICB0cnkge1xuICAgIGlmICghZ2xvYmFsLmxvY2FsU3RvcmFnZSkgcmV0dXJuIGZhbHNlO1xuICB9IGNhdGNoIChfKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciB2YWwgPSBnbG9iYWwubG9jYWxTdG9yYWdlW25hbWVdO1xuICBpZiAobnVsbCA9PSB2YWwpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIFN0cmluZyh2YWwpLnRvTG93ZXJDYXNlKCkgPT09ICd0cnVlJztcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3V0aWwtZGVwcmVjYXRlL2Jyb3dzZXIuanNcbi8vIG1vZHVsZSBpZCA9IDE0MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuLy8gYSBwYXNzdGhyb3VnaCBzdHJlYW0uXG4vLyBiYXNpY2FsbHkganVzdCB0aGUgbW9zdCBtaW5pbWFsIHNvcnQgb2YgVHJhbnNmb3JtIHN0cmVhbS5cbi8vIEV2ZXJ5IHdyaXR0ZW4gY2h1bmsgZ2V0cyBvdXRwdXQgYXMtaXMuXG5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBQYXNzVGhyb3VnaDtcblxudmFyIFRyYW5zZm9ybSA9IHJlcXVpcmUoJy4vX3N0cmVhbV90cmFuc2Zvcm0nKTtcblxuLyo8cmVwbGFjZW1lbnQ+Ki9cbnZhciB1dGlsID0gcmVxdWlyZSgnY29yZS11dGlsLWlzJyk7XG51dGlsLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcbi8qPC9yZXBsYWNlbWVudD4qL1xuXG51dGlsLmluaGVyaXRzKFBhc3NUaHJvdWdoLCBUcmFuc2Zvcm0pO1xuXG5mdW5jdGlvbiBQYXNzVGhyb3VnaChvcHRpb25zKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBQYXNzVGhyb3VnaCkpIHJldHVybiBuZXcgUGFzc1Rocm91Z2gob3B0aW9ucyk7XG5cbiAgVHJhbnNmb3JtLmNhbGwodGhpcywgb3B0aW9ucyk7XG59XG5cblBhc3NUaHJvdWdoLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24gKGNodW5rLCBlbmNvZGluZywgY2IpIHtcbiAgY2IobnVsbCwgY2h1bmspO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanNcbi8vIG1vZHVsZSBpZCA9IDE0MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJ2YXIgQnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJykuQnVmZmVyXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJ1Zikge1xuXHQvLyBJZiB0aGUgYnVmZmVyIGlzIGJhY2tlZCBieSBhIFVpbnQ4QXJyYXksIGEgZmFzdGVyIHZlcnNpb24gd2lsbCB3b3JrXG5cdGlmIChidWYgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG5cdFx0Ly8gSWYgdGhlIGJ1ZmZlciBpc24ndCBhIHN1YmFycmF5LCByZXR1cm4gdGhlIHVuZGVybHlpbmcgQXJyYXlCdWZmZXJcblx0XHRpZiAoYnVmLmJ5dGVPZmZzZXQgPT09IDAgJiYgYnVmLmJ5dGVMZW5ndGggPT09IGJ1Zi5idWZmZXIuYnl0ZUxlbmd0aCkge1xuXHRcdFx0cmV0dXJuIGJ1Zi5idWZmZXJcblx0XHR9IGVsc2UgaWYgKHR5cGVvZiBidWYuYnVmZmVyLnNsaWNlID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0XHQvLyBPdGhlcndpc2Ugd2UgbmVlZCB0byBnZXQgYSBwcm9wZXIgY29weVxuXHRcdFx0cmV0dXJuIGJ1Zi5idWZmZXIuc2xpY2UoYnVmLmJ5dGVPZmZzZXQsIGJ1Zi5ieXRlT2Zmc2V0ICsgYnVmLmJ5dGVMZW5ndGgpXG5cdFx0fVxuXHR9XG5cblx0aWYgKEJ1ZmZlci5pc0J1ZmZlcihidWYpKSB7XG5cdFx0Ly8gVGhpcyBpcyB0aGUgc2xvdyB2ZXJzaW9uIHRoYXQgd2lsbCB3b3JrIHdpdGggYW55IEJ1ZmZlclxuXHRcdC8vIGltcGxlbWVudGF0aW9uIChldmVuIGluIG9sZCBicm93c2Vycylcblx0XHR2YXIgYXJyYXlDb3B5ID0gbmV3IFVpbnQ4QXJyYXkoYnVmLmxlbmd0aClcblx0XHR2YXIgbGVuID0gYnVmLmxlbmd0aFxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRcdGFycmF5Q29weVtpXSA9IGJ1ZltpXVxuXHRcdH1cblx0XHRyZXR1cm4gYXJyYXlDb3B5LmJ1ZmZlclxuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlcicpXG5cdH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3RvLWFycmF5YnVmZmVyL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxNDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBleHRlbmRcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuZnVuY3Rpb24gZXh0ZW5kKCkge1xuICAgIHZhciB0YXJnZXQgPSB7fVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXVxuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3h0ZW5kL2ltbXV0YWJsZS5qc1xuLy8gbW9kdWxlIGlkID0gMTQ0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0ge1xuICBcIjEwMFwiOiBcIkNvbnRpbnVlXCIsXG4gIFwiMTAxXCI6IFwiU3dpdGNoaW5nIFByb3RvY29sc1wiLFxuICBcIjEwMlwiOiBcIlByb2Nlc3NpbmdcIixcbiAgXCIyMDBcIjogXCJPS1wiLFxuICBcIjIwMVwiOiBcIkNyZWF0ZWRcIixcbiAgXCIyMDJcIjogXCJBY2NlcHRlZFwiLFxuICBcIjIwM1wiOiBcIk5vbi1BdXRob3JpdGF0aXZlIEluZm9ybWF0aW9uXCIsXG4gIFwiMjA0XCI6IFwiTm8gQ29udGVudFwiLFxuICBcIjIwNVwiOiBcIlJlc2V0IENvbnRlbnRcIixcbiAgXCIyMDZcIjogXCJQYXJ0aWFsIENvbnRlbnRcIixcbiAgXCIyMDdcIjogXCJNdWx0aS1TdGF0dXNcIixcbiAgXCIyMDhcIjogXCJBbHJlYWR5IFJlcG9ydGVkXCIsXG4gIFwiMjI2XCI6IFwiSU0gVXNlZFwiLFxuICBcIjMwMFwiOiBcIk11bHRpcGxlIENob2ljZXNcIixcbiAgXCIzMDFcIjogXCJNb3ZlZCBQZXJtYW5lbnRseVwiLFxuICBcIjMwMlwiOiBcIkZvdW5kXCIsXG4gIFwiMzAzXCI6IFwiU2VlIE90aGVyXCIsXG4gIFwiMzA0XCI6IFwiTm90IE1vZGlmaWVkXCIsXG4gIFwiMzA1XCI6IFwiVXNlIFByb3h5XCIsXG4gIFwiMzA3XCI6IFwiVGVtcG9yYXJ5IFJlZGlyZWN0XCIsXG4gIFwiMzA4XCI6IFwiUGVybWFuZW50IFJlZGlyZWN0XCIsXG4gIFwiNDAwXCI6IFwiQmFkIFJlcXVlc3RcIixcbiAgXCI0MDFcIjogXCJVbmF1dGhvcml6ZWRcIixcbiAgXCI0MDJcIjogXCJQYXltZW50IFJlcXVpcmVkXCIsXG4gIFwiNDAzXCI6IFwiRm9yYmlkZGVuXCIsXG4gIFwiNDA0XCI6IFwiTm90IEZvdW5kXCIsXG4gIFwiNDA1XCI6IFwiTWV0aG9kIE5vdCBBbGxvd2VkXCIsXG4gIFwiNDA2XCI6IFwiTm90IEFjY2VwdGFibGVcIixcbiAgXCI0MDdcIjogXCJQcm94eSBBdXRoZW50aWNhdGlvbiBSZXF1aXJlZFwiLFxuICBcIjQwOFwiOiBcIlJlcXVlc3QgVGltZW91dFwiLFxuICBcIjQwOVwiOiBcIkNvbmZsaWN0XCIsXG4gIFwiNDEwXCI6IFwiR29uZVwiLFxuICBcIjQxMVwiOiBcIkxlbmd0aCBSZXF1aXJlZFwiLFxuICBcIjQxMlwiOiBcIlByZWNvbmRpdGlvbiBGYWlsZWRcIixcbiAgXCI0MTNcIjogXCJQYXlsb2FkIFRvbyBMYXJnZVwiLFxuICBcIjQxNFwiOiBcIlVSSSBUb28gTG9uZ1wiLFxuICBcIjQxNVwiOiBcIlVuc3VwcG9ydGVkIE1lZGlhIFR5cGVcIixcbiAgXCI0MTZcIjogXCJSYW5nZSBOb3QgU2F0aXNmaWFibGVcIixcbiAgXCI0MTdcIjogXCJFeHBlY3RhdGlvbiBGYWlsZWRcIixcbiAgXCI0MThcIjogXCJJJ20gYSB0ZWFwb3RcIixcbiAgXCI0MjFcIjogXCJNaXNkaXJlY3RlZCBSZXF1ZXN0XCIsXG4gIFwiNDIyXCI6IFwiVW5wcm9jZXNzYWJsZSBFbnRpdHlcIixcbiAgXCI0MjNcIjogXCJMb2NrZWRcIixcbiAgXCI0MjRcIjogXCJGYWlsZWQgRGVwZW5kZW5jeVwiLFxuICBcIjQyNVwiOiBcIlVub3JkZXJlZCBDb2xsZWN0aW9uXCIsXG4gIFwiNDI2XCI6IFwiVXBncmFkZSBSZXF1aXJlZFwiLFxuICBcIjQyOFwiOiBcIlByZWNvbmRpdGlvbiBSZXF1aXJlZFwiLFxuICBcIjQyOVwiOiBcIlRvbyBNYW55IFJlcXVlc3RzXCIsXG4gIFwiNDMxXCI6IFwiUmVxdWVzdCBIZWFkZXIgRmllbGRzIFRvbyBMYXJnZVwiLFxuICBcIjQ1MVwiOiBcIlVuYXZhaWxhYmxlIEZvciBMZWdhbCBSZWFzb25zXCIsXG4gIFwiNTAwXCI6IFwiSW50ZXJuYWwgU2VydmVyIEVycm9yXCIsXG4gIFwiNTAxXCI6IFwiTm90IEltcGxlbWVudGVkXCIsXG4gIFwiNTAyXCI6IFwiQmFkIEdhdGV3YXlcIixcbiAgXCI1MDNcIjogXCJTZXJ2aWNlIFVuYXZhaWxhYmxlXCIsXG4gIFwiNTA0XCI6IFwiR2F0ZXdheSBUaW1lb3V0XCIsXG4gIFwiNTA1XCI6IFwiSFRUUCBWZXJzaW9uIE5vdCBTdXBwb3J0ZWRcIixcbiAgXCI1MDZcIjogXCJWYXJpYW50IEFsc28gTmVnb3RpYXRlc1wiLFxuICBcIjUwN1wiOiBcIkluc3VmZmljaWVudCBTdG9yYWdlXCIsXG4gIFwiNTA4XCI6IFwiTG9vcCBEZXRlY3RlZFwiLFxuICBcIjUwOVwiOiBcIkJhbmR3aWR0aCBMaW1pdCBFeGNlZWRlZFwiLFxuICBcIjUxMFwiOiBcIk5vdCBFeHRlbmRlZFwiLFxuICBcIjUxMVwiOiBcIk5ldHdvcmsgQXV0aGVudGljYXRpb24gUmVxdWlyZWRcIlxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYnVpbHRpbi1zdGF0dXMtY29kZXMvYnJvd3Nlci5qc1xuLy8gbW9kdWxlIGlkID0gMTQ1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qISBodHRwczovL210aHMuYmUvcHVueWNvZGUgdjEuNC4xIGJ5IEBtYXRoaWFzICovXG47KGZ1bmN0aW9uKHJvb3QpIHtcblxuXHQvKiogRGV0ZWN0IGZyZWUgdmFyaWFibGVzICovXG5cdHZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiZcblx0XHQhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzO1xuXHR2YXIgZnJlZU1vZHVsZSA9IHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlICYmXG5cdFx0IW1vZHVsZS5ub2RlVHlwZSAmJiBtb2R1bGU7XG5cdHZhciBmcmVlR2xvYmFsID0gdHlwZW9mIGdsb2JhbCA9PSAnb2JqZWN0JyAmJiBnbG9iYWw7XG5cdGlmIChcblx0XHRmcmVlR2xvYmFsLmdsb2JhbCA9PT0gZnJlZUdsb2JhbCB8fFxuXHRcdGZyZWVHbG9iYWwud2luZG93ID09PSBmcmVlR2xvYmFsIHx8XG5cdFx0ZnJlZUdsb2JhbC5zZWxmID09PSBmcmVlR2xvYmFsXG5cdCkge1xuXHRcdHJvb3QgPSBmcmVlR2xvYmFsO1xuXHR9XG5cblx0LyoqXG5cdCAqIFRoZSBgcHVueWNvZGVgIG9iamVjdC5cblx0ICogQG5hbWUgcHVueWNvZGVcblx0ICogQHR5cGUgT2JqZWN0XG5cdCAqL1xuXHR2YXIgcHVueWNvZGUsXG5cblx0LyoqIEhpZ2hlc3QgcG9zaXRpdmUgc2lnbmVkIDMyLWJpdCBmbG9hdCB2YWx1ZSAqL1xuXHRtYXhJbnQgPSAyMTQ3NDgzNjQ3LCAvLyBha2EuIDB4N0ZGRkZGRkYgb3IgMl4zMS0xXG5cblx0LyoqIEJvb3RzdHJpbmcgcGFyYW1ldGVycyAqL1xuXHRiYXNlID0gMzYsXG5cdHRNaW4gPSAxLFxuXHR0TWF4ID0gMjYsXG5cdHNrZXcgPSAzOCxcblx0ZGFtcCA9IDcwMCxcblx0aW5pdGlhbEJpYXMgPSA3Mixcblx0aW5pdGlhbE4gPSAxMjgsIC8vIDB4ODBcblx0ZGVsaW1pdGVyID0gJy0nLCAvLyAnXFx4MkQnXG5cblx0LyoqIFJlZ3VsYXIgZXhwcmVzc2lvbnMgKi9cblx0cmVnZXhQdW55Y29kZSA9IC9eeG4tLS8sXG5cdHJlZ2V4Tm9uQVNDSUkgPSAvW15cXHgyMC1cXHg3RV0vLCAvLyB1bnByaW50YWJsZSBBU0NJSSBjaGFycyArIG5vbi1BU0NJSSBjaGFyc1xuXHRyZWdleFNlcGFyYXRvcnMgPSAvW1xceDJFXFx1MzAwMlxcdUZGMEVcXHVGRjYxXS9nLCAvLyBSRkMgMzQ5MCBzZXBhcmF0b3JzXG5cblx0LyoqIEVycm9yIG1lc3NhZ2VzICovXG5cdGVycm9ycyA9IHtcblx0XHQnb3ZlcmZsb3cnOiAnT3ZlcmZsb3c6IGlucHV0IG5lZWRzIHdpZGVyIGludGVnZXJzIHRvIHByb2Nlc3MnLFxuXHRcdCdub3QtYmFzaWMnOiAnSWxsZWdhbCBpbnB1dCA+PSAweDgwIChub3QgYSBiYXNpYyBjb2RlIHBvaW50KScsXG5cdFx0J2ludmFsaWQtaW5wdXQnOiAnSW52YWxpZCBpbnB1dCdcblx0fSxcblxuXHQvKiogQ29udmVuaWVuY2Ugc2hvcnRjdXRzICovXG5cdGJhc2VNaW51c1RNaW4gPSBiYXNlIC0gdE1pbixcblx0Zmxvb3IgPSBNYXRoLmZsb29yLFxuXHRzdHJpbmdGcm9tQ2hhckNvZGUgPSBTdHJpbmcuZnJvbUNoYXJDb2RlLFxuXG5cdC8qKiBUZW1wb3JhcnkgdmFyaWFibGUgKi9cblx0a2V5O1xuXG5cdC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5cdC8qKlxuXHQgKiBBIGdlbmVyaWMgZXJyb3IgdXRpbGl0eSBmdW5jdGlvbi5cblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgVGhlIGVycm9yIHR5cGUuXG5cdCAqIEByZXR1cm5zIHtFcnJvcn0gVGhyb3dzIGEgYFJhbmdlRXJyb3JgIHdpdGggdGhlIGFwcGxpY2FibGUgZXJyb3IgbWVzc2FnZS5cblx0ICovXG5cdGZ1bmN0aW9uIGVycm9yKHR5cGUpIHtcblx0XHR0aHJvdyBuZXcgUmFuZ2VFcnJvcihlcnJvcnNbdHlwZV0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIEEgZ2VuZXJpYyBgQXJyYXkjbWFwYCB1dGlsaXR5IGZ1bmN0aW9uLlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuXHQgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdGhhdCBnZXRzIGNhbGxlZCBmb3IgZXZlcnkgYXJyYXlcblx0ICogaXRlbS5cblx0ICogQHJldHVybnMge0FycmF5fSBBIG5ldyBhcnJheSBvZiB2YWx1ZXMgcmV0dXJuZWQgYnkgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uLlxuXHQgKi9cblx0ZnVuY3Rpb24gbWFwKGFycmF5LCBmbikge1xuXHRcdHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG5cdFx0dmFyIHJlc3VsdCA9IFtdO1xuXHRcdHdoaWxlIChsZW5ndGgtLSkge1xuXHRcdFx0cmVzdWx0W2xlbmd0aF0gPSBmbihhcnJheVtsZW5ndGhdKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fVxuXG5cdC8qKlxuXHQgKiBBIHNpbXBsZSBgQXJyYXkjbWFwYC1saWtlIHdyYXBwZXIgdG8gd29yayB3aXRoIGRvbWFpbiBuYW1lIHN0cmluZ3Mgb3IgZW1haWxcblx0ICogYWRkcmVzc2VzLlxuXHQgKiBAcHJpdmF0ZVxuXHQgKiBAcGFyYW0ge1N0cmluZ30gZG9tYWluIFRoZSBkb21haW4gbmFtZSBvciBlbWFpbCBhZGRyZXNzLlxuXHQgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdGhhdCBnZXRzIGNhbGxlZCBmb3IgZXZlcnlcblx0ICogY2hhcmFjdGVyLlxuXHQgKiBAcmV0dXJucyB7QXJyYXl9IEEgbmV3IHN0cmluZyBvZiBjaGFyYWN0ZXJzIHJldHVybmVkIGJ5IHRoZSBjYWxsYmFja1xuXHQgKiBmdW5jdGlvbi5cblx0ICovXG5cdGZ1bmN0aW9uIG1hcERvbWFpbihzdHJpbmcsIGZuKSB7XG5cdFx0dmFyIHBhcnRzID0gc3RyaW5nLnNwbGl0KCdAJyk7XG5cdFx0dmFyIHJlc3VsdCA9ICcnO1xuXHRcdGlmIChwYXJ0cy5sZW5ndGggPiAxKSB7XG5cdFx0XHQvLyBJbiBlbWFpbCBhZGRyZXNzZXMsIG9ubHkgdGhlIGRvbWFpbiBuYW1lIHNob3VsZCBiZSBwdW55Y29kZWQuIExlYXZlXG5cdFx0XHQvLyB0aGUgbG9jYWwgcGFydCAoaS5lLiBldmVyeXRoaW5nIHVwIHRvIGBAYCkgaW50YWN0LlxuXHRcdFx0cmVzdWx0ID0gcGFydHNbMF0gKyAnQCc7XG5cdFx0XHRzdHJpbmcgPSBwYXJ0c1sxXTtcblx0XHR9XG5cdFx0Ly8gQXZvaWQgYHNwbGl0KHJlZ2V4KWAgZm9yIElFOCBjb21wYXRpYmlsaXR5LiBTZWUgIzE3LlxuXHRcdHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHJlZ2V4U2VwYXJhdG9ycywgJ1xceDJFJyk7XG5cdFx0dmFyIGxhYmVscyA9IHN0cmluZy5zcGxpdCgnLicpO1xuXHRcdHZhciBlbmNvZGVkID0gbWFwKGxhYmVscywgZm4pLmpvaW4oJy4nKTtcblx0XHRyZXR1cm4gcmVzdWx0ICsgZW5jb2RlZDtcblx0fVxuXG5cdC8qKlxuXHQgKiBDcmVhdGVzIGFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIG51bWVyaWMgY29kZSBwb2ludHMgb2YgZWFjaCBVbmljb2RlXG5cdCAqIGNoYXJhY3RlciBpbiB0aGUgc3RyaW5nLiBXaGlsZSBKYXZhU2NyaXB0IHVzZXMgVUNTLTIgaW50ZXJuYWxseSxcblx0ICogdGhpcyBmdW5jdGlvbiB3aWxsIGNvbnZlcnQgYSBwYWlyIG9mIHN1cnJvZ2F0ZSBoYWx2ZXMgKGVhY2ggb2Ygd2hpY2hcblx0ICogVUNTLTIgZXhwb3NlcyBhcyBzZXBhcmF0ZSBjaGFyYWN0ZXJzKSBpbnRvIGEgc2luZ2xlIGNvZGUgcG9pbnQsXG5cdCAqIG1hdGNoaW5nIFVURi0xNi5cblx0ICogQHNlZSBgcHVueWNvZGUudWNzMi5lbmNvZGVgXG5cdCAqIEBzZWUgPGh0dHBzOi8vbWF0aGlhc2J5bmVucy5iZS9ub3Rlcy9qYXZhc2NyaXB0LWVuY29kaW5nPlxuXHQgKiBAbWVtYmVyT2YgcHVueWNvZGUudWNzMlxuXHQgKiBAbmFtZSBkZWNvZGVcblx0ICogQHBhcmFtIHtTdHJpbmd9IHN0cmluZyBUaGUgVW5pY29kZSBpbnB1dCBzdHJpbmcgKFVDUy0yKS5cblx0ICogQHJldHVybnMge0FycmF5fSBUaGUgbmV3IGFycmF5IG9mIGNvZGUgcG9pbnRzLlxuXHQgKi9cblx0ZnVuY3Rpb24gdWNzMmRlY29kZShzdHJpbmcpIHtcblx0XHR2YXIgb3V0cHV0ID0gW10sXG5cdFx0ICAgIGNvdW50ZXIgPSAwLFxuXHRcdCAgICBsZW5ndGggPSBzdHJpbmcubGVuZ3RoLFxuXHRcdCAgICB2YWx1ZSxcblx0XHQgICAgZXh0cmE7XG5cdFx0d2hpbGUgKGNvdW50ZXIgPCBsZW5ndGgpIHtcblx0XHRcdHZhbHVlID0gc3RyaW5nLmNoYXJDb2RlQXQoY291bnRlcisrKTtcblx0XHRcdGlmICh2YWx1ZSA+PSAweEQ4MDAgJiYgdmFsdWUgPD0gMHhEQkZGICYmIGNvdW50ZXIgPCBsZW5ndGgpIHtcblx0XHRcdFx0Ly8gaGlnaCBzdXJyb2dhdGUsIGFuZCB0aGVyZSBpcyBhIG5leHQgY2hhcmFjdGVyXG5cdFx0XHRcdGV4dHJhID0gc3RyaW5nLmNoYXJDb2RlQXQoY291bnRlcisrKTtcblx0XHRcdFx0aWYgKChleHRyYSAmIDB4RkMwMCkgPT0gMHhEQzAwKSB7IC8vIGxvdyBzdXJyb2dhdGVcblx0XHRcdFx0XHRvdXRwdXQucHVzaCgoKHZhbHVlICYgMHgzRkYpIDw8IDEwKSArIChleHRyYSAmIDB4M0ZGKSArIDB4MTAwMDApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdC8vIHVubWF0Y2hlZCBzdXJyb2dhdGU7IG9ubHkgYXBwZW5kIHRoaXMgY29kZSB1bml0LCBpbiBjYXNlIHRoZSBuZXh0XG5cdFx0XHRcdFx0Ly8gY29kZSB1bml0IGlzIHRoZSBoaWdoIHN1cnJvZ2F0ZSBvZiBhIHN1cnJvZ2F0ZSBwYWlyXG5cdFx0XHRcdFx0b3V0cHV0LnB1c2godmFsdWUpO1xuXHRcdFx0XHRcdGNvdW50ZXItLTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0b3V0cHV0LnB1c2godmFsdWUpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gb3V0cHV0O1xuXHR9XG5cblx0LyoqXG5cdCAqIENyZWF0ZXMgYSBzdHJpbmcgYmFzZWQgb24gYW4gYXJyYXkgb2YgbnVtZXJpYyBjb2RlIHBvaW50cy5cblx0ICogQHNlZSBgcHVueWNvZGUudWNzMi5kZWNvZGVgXG5cdCAqIEBtZW1iZXJPZiBwdW55Y29kZS51Y3MyXG5cdCAqIEBuYW1lIGVuY29kZVxuXHQgKiBAcGFyYW0ge0FycmF5fSBjb2RlUG9pbnRzIFRoZSBhcnJheSBvZiBudW1lcmljIGNvZGUgcG9pbnRzLlxuXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgbmV3IFVuaWNvZGUgc3RyaW5nIChVQ1MtMikuXG5cdCAqL1xuXHRmdW5jdGlvbiB1Y3MyZW5jb2RlKGFycmF5KSB7XG5cdFx0cmV0dXJuIG1hcChhcnJheSwgZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdHZhciBvdXRwdXQgPSAnJztcblx0XHRcdGlmICh2YWx1ZSA+IDB4RkZGRikge1xuXHRcdFx0XHR2YWx1ZSAtPSAweDEwMDAwO1xuXHRcdFx0XHRvdXRwdXQgKz0gc3RyaW5nRnJvbUNoYXJDb2RlKHZhbHVlID4+PiAxMCAmIDB4M0ZGIHwgMHhEODAwKTtcblx0XHRcdFx0dmFsdWUgPSAweERDMDAgfCB2YWx1ZSAmIDB4M0ZGO1xuXHRcdFx0fVxuXHRcdFx0b3V0cHV0ICs9IHN0cmluZ0Zyb21DaGFyQ29kZSh2YWx1ZSk7XG5cdFx0XHRyZXR1cm4gb3V0cHV0O1xuXHRcdH0pLmpvaW4oJycpO1xuXHR9XG5cblx0LyoqXG5cdCAqIENvbnZlcnRzIGEgYmFzaWMgY29kZSBwb2ludCBpbnRvIGEgZGlnaXQvaW50ZWdlci5cblx0ICogQHNlZSBgZGlnaXRUb0Jhc2ljKClgXG5cdCAqIEBwcml2YXRlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBjb2RlUG9pbnQgVGhlIGJhc2ljIG51bWVyaWMgY29kZSBwb2ludCB2YWx1ZS5cblx0ICogQHJldHVybnMge051bWJlcn0gVGhlIG51bWVyaWMgdmFsdWUgb2YgYSBiYXNpYyBjb2RlIHBvaW50IChmb3IgdXNlIGluXG5cdCAqIHJlcHJlc2VudGluZyBpbnRlZ2VycykgaW4gdGhlIHJhbmdlIGAwYCB0byBgYmFzZSAtIDFgLCBvciBgYmFzZWAgaWZcblx0ICogdGhlIGNvZGUgcG9pbnQgZG9lcyBub3QgcmVwcmVzZW50IGEgdmFsdWUuXG5cdCAqL1xuXHRmdW5jdGlvbiBiYXNpY1RvRGlnaXQoY29kZVBvaW50KSB7XG5cdFx0aWYgKGNvZGVQb2ludCAtIDQ4IDwgMTApIHtcblx0XHRcdHJldHVybiBjb2RlUG9pbnQgLSAyMjtcblx0XHR9XG5cdFx0aWYgKGNvZGVQb2ludCAtIDY1IDwgMjYpIHtcblx0XHRcdHJldHVybiBjb2RlUG9pbnQgLSA2NTtcblx0XHR9XG5cdFx0aWYgKGNvZGVQb2ludCAtIDk3IDwgMjYpIHtcblx0XHRcdHJldHVybiBjb2RlUG9pbnQgLSA5Nztcblx0XHR9XG5cdFx0cmV0dXJuIGJhc2U7XG5cdH1cblxuXHQvKipcblx0ICogQ29udmVydHMgYSBkaWdpdC9pbnRlZ2VyIGludG8gYSBiYXNpYyBjb2RlIHBvaW50LlxuXHQgKiBAc2VlIGBiYXNpY1RvRGlnaXQoKWBcblx0ICogQHByaXZhdGVcblx0ICogQHBhcmFtIHtOdW1iZXJ9IGRpZ2l0IFRoZSBudW1lcmljIHZhbHVlIG9mIGEgYmFzaWMgY29kZSBwb2ludC5cblx0ICogQHJldHVybnMge051bWJlcn0gVGhlIGJhc2ljIGNvZGUgcG9pbnQgd2hvc2UgdmFsdWUgKHdoZW4gdXNlZCBmb3Jcblx0ICogcmVwcmVzZW50aW5nIGludGVnZXJzKSBpcyBgZGlnaXRgLCB3aGljaCBuZWVkcyB0byBiZSBpbiB0aGUgcmFuZ2Vcblx0ICogYDBgIHRvIGBiYXNlIC0gMWAuIElmIGBmbGFnYCBpcyBub24temVybywgdGhlIHVwcGVyY2FzZSBmb3JtIGlzXG5cdCAqIHVzZWQ7IGVsc2UsIHRoZSBsb3dlcmNhc2UgZm9ybSBpcyB1c2VkLiBUaGUgYmVoYXZpb3IgaXMgdW5kZWZpbmVkXG5cdCAqIGlmIGBmbGFnYCBpcyBub24temVybyBhbmQgYGRpZ2l0YCBoYXMgbm8gdXBwZXJjYXNlIGZvcm0uXG5cdCAqL1xuXHRmdW5jdGlvbiBkaWdpdFRvQmFzaWMoZGlnaXQsIGZsYWcpIHtcblx0XHQvLyAgMC4uMjUgbWFwIHRvIEFTQ0lJIGEuLnogb3IgQS4uWlxuXHRcdC8vIDI2Li4zNSBtYXAgdG8gQVNDSUkgMC4uOVxuXHRcdHJldHVybiBkaWdpdCArIDIyICsgNzUgKiAoZGlnaXQgPCAyNikgLSAoKGZsYWcgIT0gMCkgPDwgNSk7XG5cdH1cblxuXHQvKipcblx0ICogQmlhcyBhZGFwdGF0aW9uIGZ1bmN0aW9uIGFzIHBlciBzZWN0aW9uIDMuNCBvZiBSRkMgMzQ5Mi5cblx0ICogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzM0OTIjc2VjdGlvbi0zLjRcblx0ICogQHByaXZhdGVcblx0ICovXG5cdGZ1bmN0aW9uIGFkYXB0KGRlbHRhLCBudW1Qb2ludHMsIGZpcnN0VGltZSkge1xuXHRcdHZhciBrID0gMDtcblx0XHRkZWx0YSA9IGZpcnN0VGltZSA/IGZsb29yKGRlbHRhIC8gZGFtcCkgOiBkZWx0YSA+PiAxO1xuXHRcdGRlbHRhICs9IGZsb29yKGRlbHRhIC8gbnVtUG9pbnRzKTtcblx0XHRmb3IgKC8qIG5vIGluaXRpYWxpemF0aW9uICovOyBkZWx0YSA+IGJhc2VNaW51c1RNaW4gKiB0TWF4ID4+IDE7IGsgKz0gYmFzZSkge1xuXHRcdFx0ZGVsdGEgPSBmbG9vcihkZWx0YSAvIGJhc2VNaW51c1RNaW4pO1xuXHRcdH1cblx0XHRyZXR1cm4gZmxvb3IoayArIChiYXNlTWludXNUTWluICsgMSkgKiBkZWx0YSAvIChkZWx0YSArIHNrZXcpKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDb252ZXJ0cyBhIFB1bnljb2RlIHN0cmluZyBvZiBBU0NJSS1vbmx5IHN5bWJvbHMgdG8gYSBzdHJpbmcgb2YgVW5pY29kZVxuXHQgKiBzeW1ib2xzLlxuXHQgKiBAbWVtYmVyT2YgcHVueWNvZGVcblx0ICogQHBhcmFtIHtTdHJpbmd9IGlucHV0IFRoZSBQdW55Y29kZSBzdHJpbmcgb2YgQVNDSUktb25seSBzeW1ib2xzLlxuXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgcmVzdWx0aW5nIHN0cmluZyBvZiBVbmljb2RlIHN5bWJvbHMuXG5cdCAqL1xuXHRmdW5jdGlvbiBkZWNvZGUoaW5wdXQpIHtcblx0XHQvLyBEb24ndCB1c2UgVUNTLTJcblx0XHR2YXIgb3V0cHV0ID0gW10sXG5cdFx0ICAgIGlucHV0TGVuZ3RoID0gaW5wdXQubGVuZ3RoLFxuXHRcdCAgICBvdXQsXG5cdFx0ICAgIGkgPSAwLFxuXHRcdCAgICBuID0gaW5pdGlhbE4sXG5cdFx0ICAgIGJpYXMgPSBpbml0aWFsQmlhcyxcblx0XHQgICAgYmFzaWMsXG5cdFx0ICAgIGosXG5cdFx0ICAgIGluZGV4LFxuXHRcdCAgICBvbGRpLFxuXHRcdCAgICB3LFxuXHRcdCAgICBrLFxuXHRcdCAgICBkaWdpdCxcblx0XHQgICAgdCxcblx0XHQgICAgLyoqIENhY2hlZCBjYWxjdWxhdGlvbiByZXN1bHRzICovXG5cdFx0ICAgIGJhc2VNaW51c1Q7XG5cblx0XHQvLyBIYW5kbGUgdGhlIGJhc2ljIGNvZGUgcG9pbnRzOiBsZXQgYGJhc2ljYCBiZSB0aGUgbnVtYmVyIG9mIGlucHV0IGNvZGVcblx0XHQvLyBwb2ludHMgYmVmb3JlIHRoZSBsYXN0IGRlbGltaXRlciwgb3IgYDBgIGlmIHRoZXJlIGlzIG5vbmUsIHRoZW4gY29weVxuXHRcdC8vIHRoZSBmaXJzdCBiYXNpYyBjb2RlIHBvaW50cyB0byB0aGUgb3V0cHV0LlxuXG5cdFx0YmFzaWMgPSBpbnB1dC5sYXN0SW5kZXhPZihkZWxpbWl0ZXIpO1xuXHRcdGlmIChiYXNpYyA8IDApIHtcblx0XHRcdGJhc2ljID0gMDtcblx0XHR9XG5cblx0XHRmb3IgKGogPSAwOyBqIDwgYmFzaWM7ICsraikge1xuXHRcdFx0Ly8gaWYgaXQncyBub3QgYSBiYXNpYyBjb2RlIHBvaW50XG5cdFx0XHRpZiAoaW5wdXQuY2hhckNvZGVBdChqKSA+PSAweDgwKSB7XG5cdFx0XHRcdGVycm9yKCdub3QtYmFzaWMnKTtcblx0XHRcdH1cblx0XHRcdG91dHB1dC5wdXNoKGlucHV0LmNoYXJDb2RlQXQoaikpO1xuXHRcdH1cblxuXHRcdC8vIE1haW4gZGVjb2RpbmcgbG9vcDogc3RhcnQganVzdCBhZnRlciB0aGUgbGFzdCBkZWxpbWl0ZXIgaWYgYW55IGJhc2ljIGNvZGVcblx0XHQvLyBwb2ludHMgd2VyZSBjb3BpZWQ7IHN0YXJ0IGF0IHRoZSBiZWdpbm5pbmcgb3RoZXJ3aXNlLlxuXG5cdFx0Zm9yIChpbmRleCA9IGJhc2ljID4gMCA/IGJhc2ljICsgMSA6IDA7IGluZGV4IDwgaW5wdXRMZW5ndGg7IC8qIG5vIGZpbmFsIGV4cHJlc3Npb24gKi8pIHtcblxuXHRcdFx0Ly8gYGluZGV4YCBpcyB0aGUgaW5kZXggb2YgdGhlIG5leHQgY2hhcmFjdGVyIHRvIGJlIGNvbnN1bWVkLlxuXHRcdFx0Ly8gRGVjb2RlIGEgZ2VuZXJhbGl6ZWQgdmFyaWFibGUtbGVuZ3RoIGludGVnZXIgaW50byBgZGVsdGFgLFxuXHRcdFx0Ly8gd2hpY2ggZ2V0cyBhZGRlZCB0byBgaWAuIFRoZSBvdmVyZmxvdyBjaGVja2luZyBpcyBlYXNpZXJcblx0XHRcdC8vIGlmIHdlIGluY3JlYXNlIGBpYCBhcyB3ZSBnbywgdGhlbiBzdWJ0cmFjdCBvZmYgaXRzIHN0YXJ0aW5nXG5cdFx0XHQvLyB2YWx1ZSBhdCB0aGUgZW5kIHRvIG9idGFpbiBgZGVsdGFgLlxuXHRcdFx0Zm9yIChvbGRpID0gaSwgdyA9IDEsIGsgPSBiYXNlOyAvKiBubyBjb25kaXRpb24gKi87IGsgKz0gYmFzZSkge1xuXG5cdFx0XHRcdGlmIChpbmRleCA+PSBpbnB1dExlbmd0aCkge1xuXHRcdFx0XHRcdGVycm9yKCdpbnZhbGlkLWlucHV0Jyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRkaWdpdCA9IGJhc2ljVG9EaWdpdChpbnB1dC5jaGFyQ29kZUF0KGluZGV4KyspKTtcblxuXHRcdFx0XHRpZiAoZGlnaXQgPj0gYmFzZSB8fCBkaWdpdCA+IGZsb29yKChtYXhJbnQgLSBpKSAvIHcpKSB7XG5cdFx0XHRcdFx0ZXJyb3IoJ292ZXJmbG93Jyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpICs9IGRpZ2l0ICogdztcblx0XHRcdFx0dCA9IGsgPD0gYmlhcyA/IHRNaW4gOiAoayA+PSBiaWFzICsgdE1heCA/IHRNYXggOiBrIC0gYmlhcyk7XG5cblx0XHRcdFx0aWYgKGRpZ2l0IDwgdCkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0YmFzZU1pbnVzVCA9IGJhc2UgLSB0O1xuXHRcdFx0XHRpZiAodyA+IGZsb29yKG1heEludCAvIGJhc2VNaW51c1QpKSB7XG5cdFx0XHRcdFx0ZXJyb3IoJ292ZXJmbG93Jyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR3ICo9IGJhc2VNaW51c1Q7XG5cblx0XHRcdH1cblxuXHRcdFx0b3V0ID0gb3V0cHV0Lmxlbmd0aCArIDE7XG5cdFx0XHRiaWFzID0gYWRhcHQoaSAtIG9sZGksIG91dCwgb2xkaSA9PSAwKTtcblxuXHRcdFx0Ly8gYGlgIHdhcyBzdXBwb3NlZCB0byB3cmFwIGFyb3VuZCBmcm9tIGBvdXRgIHRvIGAwYCxcblx0XHRcdC8vIGluY3JlbWVudGluZyBgbmAgZWFjaCB0aW1lLCBzbyB3ZSdsbCBmaXggdGhhdCBub3c6XG5cdFx0XHRpZiAoZmxvb3IoaSAvIG91dCkgPiBtYXhJbnQgLSBuKSB7XG5cdFx0XHRcdGVycm9yKCdvdmVyZmxvdycpO1xuXHRcdFx0fVxuXG5cdFx0XHRuICs9IGZsb29yKGkgLyBvdXQpO1xuXHRcdFx0aSAlPSBvdXQ7XG5cblx0XHRcdC8vIEluc2VydCBgbmAgYXQgcG9zaXRpb24gYGlgIG9mIHRoZSBvdXRwdXRcblx0XHRcdG91dHB1dC5zcGxpY2UoaSsrLCAwLCBuKTtcblxuXHRcdH1cblxuXHRcdHJldHVybiB1Y3MyZW5jb2RlKG91dHB1dCk7XG5cdH1cblxuXHQvKipcblx0ICogQ29udmVydHMgYSBzdHJpbmcgb2YgVW5pY29kZSBzeW1ib2xzIChlLmcuIGEgZG9tYWluIG5hbWUgbGFiZWwpIHRvIGFcblx0ICogUHVueWNvZGUgc3RyaW5nIG9mIEFTQ0lJLW9ubHkgc3ltYm9scy5cblx0ICogQG1lbWJlck9mIHB1bnljb2RlXG5cdCAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dCBUaGUgc3RyaW5nIG9mIFVuaWNvZGUgc3ltYm9scy5cblx0ICogQHJldHVybnMge1N0cmluZ30gVGhlIHJlc3VsdGluZyBQdW55Y29kZSBzdHJpbmcgb2YgQVNDSUktb25seSBzeW1ib2xzLlxuXHQgKi9cblx0ZnVuY3Rpb24gZW5jb2RlKGlucHV0KSB7XG5cdFx0dmFyIG4sXG5cdFx0ICAgIGRlbHRhLFxuXHRcdCAgICBoYW5kbGVkQ1BDb3VudCxcblx0XHQgICAgYmFzaWNMZW5ndGgsXG5cdFx0ICAgIGJpYXMsXG5cdFx0ICAgIGosXG5cdFx0ICAgIG0sXG5cdFx0ICAgIHEsXG5cdFx0ICAgIGssXG5cdFx0ICAgIHQsXG5cdFx0ICAgIGN1cnJlbnRWYWx1ZSxcblx0XHQgICAgb3V0cHV0ID0gW10sXG5cdFx0ICAgIC8qKiBgaW5wdXRMZW5ndGhgIHdpbGwgaG9sZCB0aGUgbnVtYmVyIG9mIGNvZGUgcG9pbnRzIGluIGBpbnB1dGAuICovXG5cdFx0ICAgIGlucHV0TGVuZ3RoLFxuXHRcdCAgICAvKiogQ2FjaGVkIGNhbGN1bGF0aW9uIHJlc3VsdHMgKi9cblx0XHQgICAgaGFuZGxlZENQQ291bnRQbHVzT25lLFxuXHRcdCAgICBiYXNlTWludXNULFxuXHRcdCAgICBxTWludXNUO1xuXG5cdFx0Ly8gQ29udmVydCB0aGUgaW5wdXQgaW4gVUNTLTIgdG8gVW5pY29kZVxuXHRcdGlucHV0ID0gdWNzMmRlY29kZShpbnB1dCk7XG5cblx0XHQvLyBDYWNoZSB0aGUgbGVuZ3RoXG5cdFx0aW5wdXRMZW5ndGggPSBpbnB1dC5sZW5ndGg7XG5cblx0XHQvLyBJbml0aWFsaXplIHRoZSBzdGF0ZVxuXHRcdG4gPSBpbml0aWFsTjtcblx0XHRkZWx0YSA9IDA7XG5cdFx0YmlhcyA9IGluaXRpYWxCaWFzO1xuXG5cdFx0Ly8gSGFuZGxlIHRoZSBiYXNpYyBjb2RlIHBvaW50c1xuXHRcdGZvciAoaiA9IDA7IGogPCBpbnB1dExlbmd0aDsgKytqKSB7XG5cdFx0XHRjdXJyZW50VmFsdWUgPSBpbnB1dFtqXTtcblx0XHRcdGlmIChjdXJyZW50VmFsdWUgPCAweDgwKSB7XG5cdFx0XHRcdG91dHB1dC5wdXNoKHN0cmluZ0Zyb21DaGFyQ29kZShjdXJyZW50VmFsdWUpKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRoYW5kbGVkQ1BDb3VudCA9IGJhc2ljTGVuZ3RoID0gb3V0cHV0Lmxlbmd0aDtcblxuXHRcdC8vIGBoYW5kbGVkQ1BDb3VudGAgaXMgdGhlIG51bWJlciBvZiBjb2RlIHBvaW50cyB0aGF0IGhhdmUgYmVlbiBoYW5kbGVkO1xuXHRcdC8vIGBiYXNpY0xlbmd0aGAgaXMgdGhlIG51bWJlciBvZiBiYXNpYyBjb2RlIHBvaW50cy5cblxuXHRcdC8vIEZpbmlzaCB0aGUgYmFzaWMgc3RyaW5nIC0gaWYgaXQgaXMgbm90IGVtcHR5IC0gd2l0aCBhIGRlbGltaXRlclxuXHRcdGlmIChiYXNpY0xlbmd0aCkge1xuXHRcdFx0b3V0cHV0LnB1c2goZGVsaW1pdGVyKTtcblx0XHR9XG5cblx0XHQvLyBNYWluIGVuY29kaW5nIGxvb3A6XG5cdFx0d2hpbGUgKGhhbmRsZWRDUENvdW50IDwgaW5wdXRMZW5ndGgpIHtcblxuXHRcdFx0Ly8gQWxsIG5vbi1iYXNpYyBjb2RlIHBvaW50cyA8IG4gaGF2ZSBiZWVuIGhhbmRsZWQgYWxyZWFkeS4gRmluZCB0aGUgbmV4dFxuXHRcdFx0Ly8gbGFyZ2VyIG9uZTpcblx0XHRcdGZvciAobSA9IG1heEludCwgaiA9IDA7IGogPCBpbnB1dExlbmd0aDsgKytqKSB7XG5cdFx0XHRcdGN1cnJlbnRWYWx1ZSA9IGlucHV0W2pdO1xuXHRcdFx0XHRpZiAoY3VycmVudFZhbHVlID49IG4gJiYgY3VycmVudFZhbHVlIDwgbSkge1xuXHRcdFx0XHRcdG0gPSBjdXJyZW50VmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gSW5jcmVhc2UgYGRlbHRhYCBlbm91Z2ggdG8gYWR2YW5jZSB0aGUgZGVjb2RlcidzIDxuLGk+IHN0YXRlIHRvIDxtLDA+LFxuXHRcdFx0Ly8gYnV0IGd1YXJkIGFnYWluc3Qgb3ZlcmZsb3dcblx0XHRcdGhhbmRsZWRDUENvdW50UGx1c09uZSA9IGhhbmRsZWRDUENvdW50ICsgMTtcblx0XHRcdGlmIChtIC0gbiA+IGZsb29yKChtYXhJbnQgLSBkZWx0YSkgLyBoYW5kbGVkQ1BDb3VudFBsdXNPbmUpKSB7XG5cdFx0XHRcdGVycm9yKCdvdmVyZmxvdycpO1xuXHRcdFx0fVxuXG5cdFx0XHRkZWx0YSArPSAobSAtIG4pICogaGFuZGxlZENQQ291bnRQbHVzT25lO1xuXHRcdFx0biA9IG07XG5cblx0XHRcdGZvciAoaiA9IDA7IGogPCBpbnB1dExlbmd0aDsgKytqKSB7XG5cdFx0XHRcdGN1cnJlbnRWYWx1ZSA9IGlucHV0W2pdO1xuXG5cdFx0XHRcdGlmIChjdXJyZW50VmFsdWUgPCBuICYmICsrZGVsdGEgPiBtYXhJbnQpIHtcblx0XHRcdFx0XHRlcnJvcignb3ZlcmZsb3cnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChjdXJyZW50VmFsdWUgPT0gbikge1xuXHRcdFx0XHRcdC8vIFJlcHJlc2VudCBkZWx0YSBhcyBhIGdlbmVyYWxpemVkIHZhcmlhYmxlLWxlbmd0aCBpbnRlZ2VyXG5cdFx0XHRcdFx0Zm9yIChxID0gZGVsdGEsIGsgPSBiYXNlOyAvKiBubyBjb25kaXRpb24gKi87IGsgKz0gYmFzZSkge1xuXHRcdFx0XHRcdFx0dCA9IGsgPD0gYmlhcyA/IHRNaW4gOiAoayA+PSBiaWFzICsgdE1heCA/IHRNYXggOiBrIC0gYmlhcyk7XG5cdFx0XHRcdFx0XHRpZiAocSA8IHQpIHtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRxTWludXNUID0gcSAtIHQ7XG5cdFx0XHRcdFx0XHRiYXNlTWludXNUID0gYmFzZSAtIHQ7XG5cdFx0XHRcdFx0XHRvdXRwdXQucHVzaChcblx0XHRcdFx0XHRcdFx0c3RyaW5nRnJvbUNoYXJDb2RlKGRpZ2l0VG9CYXNpYyh0ICsgcU1pbnVzVCAlIGJhc2VNaW51c1QsIDApKVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHEgPSBmbG9vcihxTWludXNUIC8gYmFzZU1pbnVzVCk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0b3V0cHV0LnB1c2goc3RyaW5nRnJvbUNoYXJDb2RlKGRpZ2l0VG9CYXNpYyhxLCAwKSkpO1xuXHRcdFx0XHRcdGJpYXMgPSBhZGFwdChkZWx0YSwgaGFuZGxlZENQQ291bnRQbHVzT25lLCBoYW5kbGVkQ1BDb3VudCA9PSBiYXNpY0xlbmd0aCk7XG5cdFx0XHRcdFx0ZGVsdGEgPSAwO1xuXHRcdFx0XHRcdCsraGFuZGxlZENQQ291bnQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0KytkZWx0YTtcblx0XHRcdCsrbjtcblxuXHRcdH1cblx0XHRyZXR1cm4gb3V0cHV0LmpvaW4oJycpO1xuXHR9XG5cblx0LyoqXG5cdCAqIENvbnZlcnRzIGEgUHVueWNvZGUgc3RyaW5nIHJlcHJlc2VudGluZyBhIGRvbWFpbiBuYW1lIG9yIGFuIGVtYWlsIGFkZHJlc3Ncblx0ICogdG8gVW5pY29kZS4gT25seSB0aGUgUHVueWNvZGVkIHBhcnRzIG9mIHRoZSBpbnB1dCB3aWxsIGJlIGNvbnZlcnRlZCwgaS5lLlxuXHQgKiBpdCBkb2Vzbid0IG1hdHRlciBpZiB5b3UgY2FsbCBpdCBvbiBhIHN0cmluZyB0aGF0IGhhcyBhbHJlYWR5IGJlZW5cblx0ICogY29udmVydGVkIHRvIFVuaWNvZGUuXG5cdCAqIEBtZW1iZXJPZiBwdW55Y29kZVxuXHQgKiBAcGFyYW0ge1N0cmluZ30gaW5wdXQgVGhlIFB1bnljb2RlZCBkb21haW4gbmFtZSBvciBlbWFpbCBhZGRyZXNzIHRvXG5cdCAqIGNvbnZlcnQgdG8gVW5pY29kZS5cblx0ICogQHJldHVybnMge1N0cmluZ30gVGhlIFVuaWNvZGUgcmVwcmVzZW50YXRpb24gb2YgdGhlIGdpdmVuIFB1bnljb2RlXG5cdCAqIHN0cmluZy5cblx0ICovXG5cdGZ1bmN0aW9uIHRvVW5pY29kZShpbnB1dCkge1xuXHRcdHJldHVybiBtYXBEb21haW4oaW5wdXQsIGZ1bmN0aW9uKHN0cmluZykge1xuXHRcdFx0cmV0dXJuIHJlZ2V4UHVueWNvZGUudGVzdChzdHJpbmcpXG5cdFx0XHRcdD8gZGVjb2RlKHN0cmluZy5zbGljZSg0KS50b0xvd2VyQ2FzZSgpKVxuXHRcdFx0XHQ6IHN0cmluZztcblx0XHR9KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDb252ZXJ0cyBhIFVuaWNvZGUgc3RyaW5nIHJlcHJlc2VudGluZyBhIGRvbWFpbiBuYW1lIG9yIGFuIGVtYWlsIGFkZHJlc3MgdG9cblx0ICogUHVueWNvZGUuIE9ubHkgdGhlIG5vbi1BU0NJSSBwYXJ0cyBvZiB0aGUgZG9tYWluIG5hbWUgd2lsbCBiZSBjb252ZXJ0ZWQsXG5cdCAqIGkuZS4gaXQgZG9lc24ndCBtYXR0ZXIgaWYgeW91IGNhbGwgaXQgd2l0aCBhIGRvbWFpbiB0aGF0J3MgYWxyZWFkeSBpblxuXHQgKiBBU0NJSS5cblx0ICogQG1lbWJlck9mIHB1bnljb2RlXG5cdCAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dCBUaGUgZG9tYWluIG5hbWUgb3IgZW1haWwgYWRkcmVzcyB0byBjb252ZXJ0LCBhcyBhXG5cdCAqIFVuaWNvZGUgc3RyaW5nLlxuXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgUHVueWNvZGUgcmVwcmVzZW50YXRpb24gb2YgdGhlIGdpdmVuIGRvbWFpbiBuYW1lIG9yXG5cdCAqIGVtYWlsIGFkZHJlc3MuXG5cdCAqL1xuXHRmdW5jdGlvbiB0b0FTQ0lJKGlucHV0KSB7XG5cdFx0cmV0dXJuIG1hcERvbWFpbihpbnB1dCwgZnVuY3Rpb24oc3RyaW5nKSB7XG5cdFx0XHRyZXR1cm4gcmVnZXhOb25BU0NJSS50ZXN0KHN0cmluZylcblx0XHRcdFx0PyAneG4tLScgKyBlbmNvZGUoc3RyaW5nKVxuXHRcdFx0XHQ6IHN0cmluZztcblx0XHR9KTtcblx0fVxuXG5cdC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5cdC8qKiBEZWZpbmUgdGhlIHB1YmxpYyBBUEkgKi9cblx0cHVueWNvZGUgPSB7XG5cdFx0LyoqXG5cdFx0ICogQSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBjdXJyZW50IFB1bnljb2RlLmpzIHZlcnNpb24gbnVtYmVyLlxuXHRcdCAqIEBtZW1iZXJPZiBwdW55Y29kZVxuXHRcdCAqIEB0eXBlIFN0cmluZ1xuXHRcdCAqL1xuXHRcdCd2ZXJzaW9uJzogJzEuNC4xJyxcblx0XHQvKipcblx0XHQgKiBBbiBvYmplY3Qgb2YgbWV0aG9kcyB0byBjb252ZXJ0IGZyb20gSmF2YVNjcmlwdCdzIGludGVybmFsIGNoYXJhY3RlclxuXHRcdCAqIHJlcHJlc2VudGF0aW9uIChVQ1MtMikgdG8gVW5pY29kZSBjb2RlIHBvaW50cywgYW5kIGJhY2suXG5cdFx0ICogQHNlZSA8aHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2phdmFzY3JpcHQtZW5jb2Rpbmc+XG5cdFx0ICogQG1lbWJlck9mIHB1bnljb2RlXG5cdFx0ICogQHR5cGUgT2JqZWN0XG5cdFx0ICovXG5cdFx0J3VjczInOiB7XG5cdFx0XHQnZGVjb2RlJzogdWNzMmRlY29kZSxcblx0XHRcdCdlbmNvZGUnOiB1Y3MyZW5jb2RlXG5cdFx0fSxcblx0XHQnZGVjb2RlJzogZGVjb2RlLFxuXHRcdCdlbmNvZGUnOiBlbmNvZGUsXG5cdFx0J3RvQVNDSUknOiB0b0FTQ0lJLFxuXHRcdCd0b1VuaWNvZGUnOiB0b1VuaWNvZGVcblx0fTtcblxuXHQvKiogRXhwb3NlIGBwdW55Y29kZWAgKi9cblx0Ly8gU29tZSBBTUQgYnVpbGQgb3B0aW1pemVycywgbGlrZSByLmpzLCBjaGVjayBmb3Igc3BlY2lmaWMgY29uZGl0aW9uIHBhdHRlcm5zXG5cdC8vIGxpa2UgdGhlIGZvbGxvd2luZzpcblx0aWYgKFxuXHRcdHR5cGVvZiBkZWZpbmUgPT0gJ2Z1bmN0aW9uJyAmJlxuXHRcdHR5cGVvZiBkZWZpbmUuYW1kID09ICdvYmplY3QnICYmXG5cdFx0ZGVmaW5lLmFtZFxuXHQpIHtcblx0XHRkZWZpbmUoJ3B1bnljb2RlJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gcHVueWNvZGU7XG5cdFx0fSk7XG5cdH0gZWxzZSBpZiAoZnJlZUV4cG9ydHMgJiYgZnJlZU1vZHVsZSkge1xuXHRcdGlmIChtb2R1bGUuZXhwb3J0cyA9PSBmcmVlRXhwb3J0cykge1xuXHRcdFx0Ly8gaW4gTm9kZS5qcywgaW8uanMsIG9yIFJpbmdvSlMgdjAuOC4wK1xuXHRcdFx0ZnJlZU1vZHVsZS5leHBvcnRzID0gcHVueWNvZGU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIGluIE5hcndoYWwgb3IgUmluZ29KUyB2MC43LjAtXG5cdFx0XHRmb3IgKGtleSBpbiBwdW55Y29kZSkge1xuXHRcdFx0XHRwdW55Y29kZS5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIChmcmVlRXhwb3J0c1trZXldID0gcHVueWNvZGVba2V5XSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdC8vIGluIFJoaW5vIG9yIGEgd2ViIGJyb3dzZXJcblx0XHRyb290LnB1bnljb2RlID0gcHVueWNvZGU7XG5cdH1cblxufSh0aGlzKSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9wdW55Y29kZS9wdW55Y29kZS5qc1xuLy8gbW9kdWxlIGlkID0gMTQ2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obW9kdWxlKSB7XHJcblx0aWYoIW1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcclxuXHRcdG1vZHVsZS5kZXByZWNhdGUgPSBmdW5jdGlvbigpIHt9O1xyXG5cdFx0bW9kdWxlLnBhdGhzID0gW107XHJcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcclxuXHRcdGlmKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcclxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XHJcblx0fVxyXG5cdHJldHVybiBtb2R1bGU7XHJcbn07XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL21vZHVsZS5qc1xuLy8gbW9kdWxlIGlkID0gMTQ3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzU3RyaW5nOiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gdHlwZW9mKGFyZykgPT09ICdzdHJpbmcnO1xuICB9LFxuICBpc09iamVjdDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHR5cGVvZihhcmcpID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG4gIH0sXG4gIGlzTnVsbDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIGFyZyA9PT0gbnVsbDtcbiAgfSxcbiAgaXNOdWxsT3JVbmRlZmluZWQ6IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBhcmcgPT0gbnVsbDtcbiAgfVxufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3VybC91dGlsLmpzXG4vLyBtb2R1bGUgaWQgPSAxNDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxuLy8gSWYgb2JqLmhhc093blByb3BlcnR5IGhhcyBiZWVuIG92ZXJyaWRkZW4sIHRoZW4gY2FsbGluZ1xuLy8gb2JqLmhhc093blByb3BlcnR5KHByb3ApIHdpbGwgYnJlYWsuXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9qb3llbnQvbm9kZS9pc3N1ZXMvMTcwN1xuZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihxcywgc2VwLCBlcSwgb3B0aW9ucykge1xuICBzZXAgPSBzZXAgfHwgJyYnO1xuICBlcSA9IGVxIHx8ICc9JztcbiAgdmFyIG9iaiA9IHt9O1xuXG4gIGlmICh0eXBlb2YgcXMgIT09ICdzdHJpbmcnIHx8IHFzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICB2YXIgcmVnZXhwID0gL1xcKy9nO1xuICBxcyA9IHFzLnNwbGl0KHNlcCk7XG5cbiAgdmFyIG1heEtleXMgPSAxMDAwO1xuICBpZiAob3B0aW9ucyAmJiB0eXBlb2Ygb3B0aW9ucy5tYXhLZXlzID09PSAnbnVtYmVyJykge1xuICAgIG1heEtleXMgPSBvcHRpb25zLm1heEtleXM7XG4gIH1cblxuICB2YXIgbGVuID0gcXMubGVuZ3RoO1xuICAvLyBtYXhLZXlzIDw9IDAgbWVhbnMgdGhhdCB3ZSBzaG91bGQgbm90IGxpbWl0IGtleXMgY291bnRcbiAgaWYgKG1heEtleXMgPiAwICYmIGxlbiA+IG1heEtleXMpIHtcbiAgICBsZW4gPSBtYXhLZXlzO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciB4ID0gcXNbaV0ucmVwbGFjZShyZWdleHAsICclMjAnKSxcbiAgICAgICAgaWR4ID0geC5pbmRleE9mKGVxKSxcbiAgICAgICAga3N0ciwgdnN0ciwgaywgdjtcblxuICAgIGlmIChpZHggPj0gMCkge1xuICAgICAga3N0ciA9IHguc3Vic3RyKDAsIGlkeCk7XG4gICAgICB2c3RyID0geC5zdWJzdHIoaWR4ICsgMSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGtzdHIgPSB4O1xuICAgICAgdnN0ciA9ICcnO1xuICAgIH1cblxuICAgIGsgPSBkZWNvZGVVUklDb21wb25lbnQoa3N0cik7XG4gICAgdiA9IGRlY29kZVVSSUNvbXBvbmVudCh2c3RyKTtcblxuICAgIGlmICghaGFzT3duUHJvcGVydHkob2JqLCBrKSkge1xuICAgICAgb2JqW2tdID0gdjtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkob2JqW2tdKSkge1xuICAgICAgb2JqW2tdLnB1c2godik7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9ialtrXSA9IFtvYmpba10sIHZdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59O1xuXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKHhzKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoeHMpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9kZWNvZGUuanNcbi8vIG1vZHVsZSBpZCA9IDE0OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgc3RyaW5naWZ5UHJpbWl0aXZlID0gZnVuY3Rpb24odikge1xuICBzd2l0Y2ggKHR5cGVvZiB2KSB7XG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIHJldHVybiB2O1xuXG4gICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICByZXR1cm4gdiA/ICd0cnVlJyA6ICdmYWxzZSc7XG5cbiAgICBjYXNlICdudW1iZXInOlxuICAgICAgcmV0dXJuIGlzRmluaXRlKHYpID8gdiA6ICcnO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAnJztcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmosIHNlcCwgZXEsIG5hbWUpIHtcbiAgc2VwID0gc2VwIHx8ICcmJztcbiAgZXEgPSBlcSB8fCAnPSc7XG4gIGlmIChvYmogPT09IG51bGwpIHtcbiAgICBvYmogPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gbWFwKG9iamVjdEtleXMob2JqKSwgZnVuY3Rpb24oaykge1xuICAgICAgdmFyIGtzID0gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShrKSkgKyBlcTtcbiAgICAgIGlmIChpc0FycmF5KG9ialtrXSkpIHtcbiAgICAgICAgcmV0dXJuIG1hcChvYmpba10sIGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgICByZXR1cm4ga3MgKyBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKHYpKTtcbiAgICAgICAgfSkuam9pbihzZXApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmpba10pKTtcbiAgICAgIH1cbiAgICB9KS5qb2luKHNlcCk7XG5cbiAgfVxuXG4gIGlmICghbmFtZSkgcmV0dXJuICcnO1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuYW1lKSkgKyBlcSArXG4gICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG9iaikpO1xufTtcblxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uICh4cykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbmZ1bmN0aW9uIG1hcCAoeHMsIGYpIHtcbiAgaWYgKHhzLm1hcCkgcmV0dXJuIHhzLm1hcChmKTtcbiAgdmFyIHJlcyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHhzLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzLnB1c2goZih4c1tpXSwgaSkpO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICB2YXIgcmVzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgcmVzLnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9lbmNvZGUuanNcbi8vIG1vZHVsZSBpZCA9IDE1MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJ2YXIgcXMgPSByZXF1aXJlKCdxdWVyeXN0cmluZycpXG52YXIgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKVxudmFyIGh0dHBzID0gcmVxdWlyZSgnaHR0cHMnKVxudmFyIHVybCA9IHJlcXVpcmUoJ3VybCcpXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gX3dyaXRlKGh0dHBNZXRob2QsIG9wdGlvbnMsIGNhbGxiYWNrKSB7XG5cbiAgLy8gcmVxdWlyZSBvcHRpb25zLnVybCBvciBmYWlsIG5vaXNpbHkgXG4gIGlmICghb3B0aW9ucy51cmwpIHtcbiAgICB0aHJvdyBFcnJvcignb3B0aW9ucy51cmwgcmVxdWlyZWQnKVxuICB9XG5cbiAgLy8gcGFyc2Ugb3V0IHRoZSBvcHRpb25zIGZyb20gb3B0aW9ucy51cmxcbiAgdmFyIG9wdHMgPSB1cmwucGFyc2Uob3B0aW9ucy51cmwpXG4gIHZhciBtZXRob2QgPSBvcHRzLnByb3RvY29sID09PSAnaHR0cHM6Jz8gaHR0cHMucmVxdWVzdCA6IGh0dHAucmVxdWVzdFxuICB2YXIgZGVmYXVsdENvbnRlbnRUeXBlID0gJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnXG5cbiAgLy8gcHV0IHRoZSBwYXJhbXMgb24gdGhlIHF1ZXJ5IGFzIHdlbGwgYXMgdGhlIGJvZHk/XG4gIGlmIChodHRwTWV0aG9kID09PSAnREVMRVRFJyAmJiBvcHRpb25zLmRhdGEpIHtcbiAgICB2YXIgaXNTZWFyY2ggPSAhIW9wdHMuc2VhcmNoXG4gICAgb3B0aW9ucy51cmwgKz0gKGlzU2VhcmNoPyAnJicgOiAnPycpICsgcXMuc3RyaW5naWZ5KG9wdGlvbnMuZGF0YSlcbiAgICBvcHRzID0gdXJsLnBhcnNlKG9wdGlvbnMudXJsKVxuICB9XG5cbiAgb3B0cy5tZXRob2QgPSBodHRwTWV0aG9kXG4gIG9wdHMucmVqZWN0VW5hdXRob3JpemVkID0gZmFsc2VcbiAgb3B0cy5oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzIHx8IHt9XG4gIG9wdHMuaGVhZGVyc1snVXNlci1BZ2VudCddID0gb3B0cy5oZWFkZXJzWydVc2VyLUFnZW50J10gfHwgJ3RpbnktaHR0cCdcbiAgb3B0cy5oZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IG9wdHMuaGVhZGVyc1snQ29udGVudC1UeXBlJ10gfHwgZGVmYXVsdENvbnRlbnRUeXBlXG4gIHZhciByZXFKU09OID0gb3B0cy5oZWFkZXJzWydDb250ZW50LVR5cGUnXS5zdGFydHNXaXRoKCdhcHBsaWNhdGlvbi9qc29uJylcbiAgdmFyIHBvc3REYXRhID0gcmVxSlNPTj8gSlNPTi5zdHJpbmdpZnkob3B0aW9ucy5kYXRhIHx8IHt9KSA6IHFzLnN0cmluZ2lmeShvcHRpb25zLmRhdGEgfHwge30pXG5cbiAgLy8gbWFrZSBhIFBPU1QgcmVxdWVzdFxuICB2YXIgcmVxID0gbWV0aG9kKG9wdHMsIGZ1bmN0aW9uKHJlcykge1xuICAgXG4gICAgdmFyIHJhdyA9IFtdIC8vIGtlZXAgb3VyIGJ1ZmZlcnMgaGVyZVxuICAgIHZhciBvayA9IHJlcy5zdGF0dXNDb2RlID49IDIwMCAmJiByZXMuc3RhdHVzQ29kZSA8IDMwMFxuXG4gICAgaWYgKCFvaykge1xuICAgICAgY2FsbGJhY2soRXJyb3IoaHR0cE1ldGhvZCArICcgZmFpbGVkIHdpdGg6ICcgKyByZXMuc3RhdHVzQ29kZSkpXG4gICAgICByZXMucmVzdW1lKClcbiAgICAgIHJldHVyblxuICAgIH1cbiBcbiAgICByZXMub24oJ2RhdGEnLCBmdW5jdGlvbiBfX2RhdGEoY2h1bmspIHsgXG4gICAgICByYXcucHVzaChjaHVuaykgXG4gICAgfSlcblxuICAgIHJlcy5vbignZW5kJywgZnVuY3Rpb24gX19lbmQoKSB7XG4gICAgICB2YXIgZXJyID0gbnVsbFxuICAgICAgdmFyIHJlc3VsdCA9IG51bGxcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBpc0pTT04gPSByZXMuaGVhZGVyc1snY29udGVudC10eXBlJ10uc3RhcnRzV2l0aCgnYXBwbGljYXRpb24vanNvbicpXG4gICAgICAgIHZhciByYXdEYXRhID0gQnVmZmVyLmNvbmNhdChyYXcpLnRvU3RyaW5nKClcbiAgICAgICAgcmVzdWx0ID0gaXNKU09OPyBKU09OLnBhcnNlKHJhd0RhdGEpIDogcmF3RGF0YVxuICAgICAgfSBcbiAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGVyciA9IGVcbiAgICAgIH1cbiAgICAgIGNhbGxiYWNrKGVyciwge2JvZHk6cmVzdWx0LCBoZWFkZXJzOnJlcy5oZWFkZXJzfSlcbiAgICB9KVxuICB9KVxuXG4gIHJlcS5vbignZXJyb3InLCBjYWxsYmFjaylcblxuICByZXEud3JpdGUocG9zdERhdGEpXG4gXG4gIHJlcS5lbmQoKVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvdGlueS1qc29uLWh0dHAvX3dyaXRlLmpzXG4vLyBtb2R1bGUgaWQgPSAxNTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJhcGkudGVzdFwiOlt7XCJuYW1lXCI6XCJlcnJvclwiLFwiZXhhbXBsZVwiOlwibXlfZXJyb3JcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkVycm9yIHJlc3BvbnNlIHRvIHJldHVyblxcblwifSx7XCJuYW1lXCI6XCJmb29cIixcImV4YW1wbGVcIjpcImJhclwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiZXhhbXBsZSBwcm9wZXJ0eSB0byByZXR1cm5cXG5cIn1dLFwiYXV0aC5yZXZva2VcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblwifSx7XCJuYW1lXCI6XCJ0ZXN0XCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJTZXR0aW5nIHRoaXMgcGFyYW1ldGVyIHRvIDEgdHJpZ2dlcnMgYSB0ZXN0aW5nIG1vZGUgd2hlcmUgdGhlIHNwZWNpZmllZCB0b2tlbiB3aWxsIG5vdCBhY3R1YWxseSBiZSByZXZva2VkLlxcblwifV0sXCJhdXRoLnRlc3RcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBpZGVudGlmeVxcblwifV0sXCJib3RzLmluZm9cIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiB1c2VyczpyZWFkXFxuXCJ9LHtcIm5hbWVcIjpcImJvdFwiLFwiZXhhbXBsZVwiOlwiQjEyMzQ1Njc4XCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJCb3QgdXNlciB0byBnZXQgaW5mbyBvblxcblwifV0sXCJjaGFubmVscy5hcmNoaXZlXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogY2hhbm5lbHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiQzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkNoYW5uZWwgdG8gYXJjaGl2ZVxcblwifV0sXCJjaGFubmVscy5jcmVhdGVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBjaGFubmVsczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJuYW1lXCIsXCJleGFtcGxlXCI6XCJteWNoYW5uZWxcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIk5hbWUgb2YgY2hhbm5lbCB0byBjcmVhdGVcXG5cIn0se1wibmFtZVwiOlwidmFsaWRhdGVcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIldoZXRoZXIgdG8gcmV0dXJuIGVycm9ycyBvbiBpbnZhbGlkIGNoYW5uZWwgbmFtZSBpbnN0ZWFkIG9mIG1vZGlmeWluZyBpdCB0byBtZWV0IHRoZSBzcGVjaWZpZWQgY3JpdGVyaWEuXFxuXCJ9XSxcImNoYW5uZWxzLmhpc3RvcnlcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBjaGFubmVsczpoaXN0b3J5XFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJDaGFubmVsIHRvIGZldGNoIGhpc3RvcnkgZm9yLlxcblwifSx7XCJuYW1lXCI6XCJsYXRlc3RcIixcImV4YW1wbGVcIjpcIjEyMzQ1Njc4OTAuMTIzNDU2XCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9bm93XCIsXCJkZXNjcmlwdGlvblwiOlwiRW5kIG9mIHRpbWUgcmFuZ2Ugb2YgbWVzc2FnZXMgdG8gaW5jbHVkZSBpbiByZXN1bHRzLlxcblwifSx7XCJuYW1lXCI6XCJvbGRlc3RcIixcImV4YW1wbGVcIjpcIjEyMzQ1Njc4OTAuMTIzNDU2XCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MFwiLFwiZGVzY3JpcHRpb25cIjpcIlN0YXJ0IG9mIHRpbWUgcmFuZ2Ugb2YgbWVzc2FnZXMgdG8gaW5jbHVkZSBpbiByZXN1bHRzLlxcblwifSx7XCJuYW1lXCI6XCJpbmNsdXNpdmVcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0wXCIsXCJkZXNjcmlwdGlvblwiOlwiSW5jbHVkZSBtZXNzYWdlcyB3aXRoIGxhdGVzdCBvciBvbGRlc3QgdGltZXN0YW1wIGluIHJlc3VsdHMuXFxuXCJ9LHtcIm5hbWVcIjpcImNvdW50XCIsXCJleGFtcGxlXCI6XCIxMDBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0xMDBcIixcImRlc2NyaXB0aW9uXCI6XCJOdW1iZXIgb2YgbWVzc2FnZXMgdG8gcmV0dXJuLCBiZXR3ZWVuIDEgYW5kIDEwMDAuXFxuXCJ9LHtcIm5hbWVcIjpcInVucmVhZHNcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0wXCIsXCJkZXNjcmlwdGlvblwiOlwiSW5jbHVkZSB1bnJlYWRfY291bnRfZGlzcGxheSBpbiB0aGUgb3V0cHV0P1xcblwifV0sXCJjaGFubmVscy5pbmZvXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogY2hhbm5lbHM6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB0byBnZXQgaW5mbyBvblxcblwifV0sXCJjaGFubmVscy5pbnZpdGVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBjaGFubmVsczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB0byBpbnZpdGUgdXNlciB0by5cXG5cIn0se1wibmFtZVwiOlwidXNlclwiLFwiZXhhbXBsZVwiOlwiVTEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlVzZXIgdG8gaW52aXRlIHRvIGNoYW5uZWwuXFxuXCJ9XSxcImNoYW5uZWxzLmpvaW5cIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBjaGFubmVsczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJuYW1lXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiTmFtZSBvZiBjaGFubmVsIHRvIGpvaW5cXG5cIn0se1wibmFtZVwiOlwidmFsaWRhdGVcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIldoZXRoZXIgdG8gcmV0dXJuIGVycm9ycyBvbiBpbnZhbGlkIGNoYW5uZWwgbmFtZSBpbnN0ZWFkIG9mIG1vZGlmeWluZyBpdCB0byBtZWV0IHRoZSBzcGVjaWZpZWQgY3JpdGVyaWEuXFxuXCJ9XSxcImNoYW5uZWxzLmtpY2tcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBjaGFubmVsczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB0byByZW1vdmUgdXNlciBmcm9tLlxcblwifSx7XCJuYW1lXCI6XCJ1c2VyXCIsXCJleGFtcGxlXCI6XCJVMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVXNlciB0byByZW1vdmUgZnJvbSBjaGFubmVsLlxcblwifV0sXCJjaGFubmVscy5sZWF2ZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGNoYW5uZWxzOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJDaGFubmVsIHRvIGxlYXZlXFxuXCJ9XSxcImNoYW5uZWxzLmxpc3RcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBjaGFubmVsczpyZWFkXFxuXCJ9LHtcIm5hbWVcIjpcImV4Y2x1ZGVfYXJjaGl2ZWRcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD1mYWxzZVwiLFwiZGVzY3JpcHRpb25cIjpcIkV4Y2x1ZGUgYXJjaGl2ZWQgY2hhbm5lbHMgZnJvbSB0aGUgbGlzdFxcblwifSx7XCJuYW1lXCI6XCJleGNsdWRlX21lbWJlcnNcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD1mYWxzZVwiLFwiZGVzY3JpcHRpb25cIjpcIkV4Y2x1ZGUgdGhlIG1lbWJlcnMgY29sbGVjdGlvbiBmcm9tIGVhY2ggY2hhbm5lbFxcblwifV0sXCJjaGFubmVscy5tYXJrXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogY2hhbm5lbHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiQzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkNoYW5uZWwgdG8gc2V0IHJlYWRpbmcgY3Vyc29yIGluLlxcblwifSx7XCJuYW1lXCI6XCJ0c1wiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlRpbWVzdGFtcCBvZiB0aGUgbW9zdCByZWNlbnRseSBzZWVuIG1lc3NhZ2UuXFxuXCJ9XSxcImNoYW5uZWxzLnJlbmFtZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGNoYW5uZWxzOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJDaGFubmVsIHRvIHJlbmFtZVxcblwifSx7XCJuYW1lXCI6XCJuYW1lXCIsXCJleGFtcGxlXCI6XCLCoFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiTmV3IG5hbWUgZm9yIGNoYW5uZWwuXFxuXCJ9LHtcIm5hbWVcIjpcInZhbGlkYXRlXCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJXaGV0aGVyIHRvIHJldHVybiBlcnJvcnMgb24gaW52YWxpZCBjaGFubmVsIG5hbWUgaW5zdGVhZCBvZiBtb2RpZnlpbmcgaXQgdG8gbWVldCB0aGUgc3BlY2lmaWVkIGNyaXRlcmlhLlxcblwifV0sXCJjaGFubmVscy5yZXBsaWVzXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogY2hhbm5lbHM6aGlzdG9yeVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB0byBmZXRjaCB0aHJlYWQgZnJvbVxcblwifSx7XCJuYW1lXCI6XCJ0aHJlYWRfdHNcIixcImV4YW1wbGVcIjpcIjEyMzQ1Njc4OTAuMTIzNDU2XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJVbmlxdWUgaWRlbnRpZmllciBvZiBhIHRocmVhZCdzIHBhcmVudCBtZXNzYWdlXFxuXCJ9XSxcImNoYW5uZWxzLnNldFB1cnBvc2VcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBjaGFubmVsczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB0byBzZXQgdGhlIHB1cnBvc2Ugb2ZcXG5cIn0se1wibmFtZVwiOlwicHVycG9zZVwiLFwiZXhhbXBsZVwiOlwiTXkgUHVycG9zZVwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGhlIG5ldyBwdXJwb3NlXFxuXCJ9XSxcImNoYW5uZWxzLnNldFRvcGljXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogY2hhbm5lbHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiQzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkNoYW5uZWwgdG8gc2V0IHRoZSB0b3BpYyBvZlxcblwifSx7XCJuYW1lXCI6XCJ0b3BpY1wiLFwiZXhhbXBsZVwiOlwiTXkgVG9waWNcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlRoZSBuZXcgdG9waWNcXG5cIn1dLFwiY2hhbm5lbHMudW5hcmNoaXZlXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogY2hhbm5lbHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiQzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkNoYW5uZWwgdG8gdW5hcmNoaXZlXFxuXCJ9XSxcImNoYXQuZGVsZXRlXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogY2hhdDp3cml0ZTpib3Qgb3IgY2hhdDp3cml0ZTp1c2VyXFxuXCJ9LHtcIm5hbWVcIjpcInRzXCIsXCJleGFtcGxlXCI6XCIxNDA1ODk0MzIyLjAwMjc2OFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGltZXN0YW1wIG9mIHRoZSBtZXNzYWdlIHRvIGJlIGRlbGV0ZWQuXFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJDaGFubmVsIGNvbnRhaW5pbmcgdGhlIG1lc3NhZ2UgdG8gYmUgZGVsZXRlZC5cXG5cIn0se1wibmFtZVwiOlwiYXNfdXNlclwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiUGFzcyB0cnVlIHRvIGRlbGV0ZSB0aGUgbWVzc2FnZSBhcyB0aGUgYXV0aGVkIHVzZXIuIEJvdCB1c2VycyBpbiB0aGlzIGNvbnRleHQgYXJlIGNvbnNpZGVyZWQgYXV0aGVkIHVzZXJzLlxcblwifV0sXCJjaGF0Lm1lTWVzc2FnZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGNoYXQ6d3JpdGU6dXNlclxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB0byBzZW5kIG1lc3NhZ2UgdG8uIENhbiBiZSBhIHB1YmxpYyBjaGFubmVsLCBwcml2YXRlIGdyb3VwIG9yIElNIGNoYW5uZWwuIENhbiBiZSBhbiBlbmNvZGVkIElELCBvciBhIG5hbWUuXFxuXCJ9LHtcIm5hbWVcIjpcInRleHRcIixcImV4YW1wbGVcIjpcIkhlbGxvIHdvcmxkXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJUZXh0IG9mIHRoZSBtZXNzYWdlIHRvIHNlbmQuXFxuXCJ9XSxcImNoYXQucG9zdE1lc3NhZ2VcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBjaGF0OndyaXRlOmJvdCBvciBjaGF0OndyaXRlOnVzZXJcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiQzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkNoYW5uZWwsIHByaXZhdGUgZ3JvdXAsIG9yIElNIGNoYW5uZWwgdG8gc2VuZCBtZXNzYWdlIHRvLiBDYW4gYmUgYW4gZW5jb2RlZCBJRCwgb3IgYSBuYW1lLiBTZWUgYmVsb3cgZm9yIG1vcmUgZGV0YWlscy5cXG5cIn0se1wibmFtZVwiOlwidGV4dFwiLFwiZXhhbXBsZVwiOlwiSGVsbG8gd29ybGRcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlRleHQgb2YgdGhlIG1lc3NhZ2UgdG8gc2VuZC4gU2VlIGJlbG93IGZvciBhbiBleHBsYW5hdGlvbiBvZiBmb3JtYXR0aW5nLiBUaGlzIGZpZWxkIGlzIHVzdWFsbHkgcmVxdWlyZWQsIHVubGVzcyB5b3UncmUgcHJvdmlkaW5nIG9ubHkgYXR0YWNobWVudHMgaW5zdGVhZC5cXG5cIn0se1wibmFtZVwiOlwicGFyc2VcIixcImV4YW1wbGVcIjpcImZ1bGxcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkNoYW5nZSBob3cgbWVzc2FnZXMgYXJlIHRyZWF0ZWQuIERlZmF1bHRzIHRvIG5vbmUuIFNlZSBiZWxvdy5cXG5cIn0se1wibmFtZVwiOlwibGlua19uYW1lc1wiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmluZCBhbmQgbGluayBjaGFubmVsIG5hbWVzIGFuZCB1c2VybmFtZXMuXFxuXCJ9LHtcIm5hbWVcIjpcImF0dGFjaG1lbnRzXCIsXCJleGFtcGxlXCI6XCJbe1xcXCJwcmV0ZXh0XFxcIjogXFxcInByZS1oZWxsb1xcXCIsIFxcXCJ0ZXh0XFxcIjogXFxcInRleHQtd29ybGRcXFwifV1cIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlN0cnVjdHVyZWQgbWVzc2FnZSBhdHRhY2htZW50cy5cXG5cIn0se1wibmFtZVwiOlwidW5mdXJsX2xpbmtzXCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJQYXNzIHRydWUgdG8gZW5hYmxlIHVuZnVybGluZyBvZiBwcmltYXJpbHkgdGV4dC1iYXNlZCBjb250ZW50LlxcblwifSx7XCJuYW1lXCI6XCJ1bmZ1cmxfbWVkaWFcIixcImV4YW1wbGVcIjpcImZhbHNlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJQYXNzIGZhbHNlIHRvIGRpc2FibGUgdW5mdXJsaW5nIG9mIG1lZGlhIGNvbnRlbnQuXFxuXCJ9LHtcIm5hbWVcIjpcInVzZXJuYW1lXCIsXCJleGFtcGxlXCI6XCJNeSBCb3RcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlNldCB5b3VyIGJvdCdzIHVzZXIgbmFtZS4gTXVzdCBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYXNfdXNlciBzZXQgdG8gZmFsc2UsIG90aGVyd2lzZSBpZ25vcmVkLiBTZWUgYXV0aG9yc2hpcCBiZWxvdy5cXG5cIn0se1wibmFtZVwiOlwiYXNfdXNlclwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiUGFzcyB0cnVlIHRvIHBvc3QgdGhlIG1lc3NhZ2UgYXMgdGhlIGF1dGhlZCB1c2VyLCBpbnN0ZWFkIG9mIGFzIGEgYm90LiBEZWZhdWx0cyB0byBmYWxzZS4gU2VlIGF1dGhvcnNoaXAgYmVsb3cuXFxuXCJ9LHtcIm5hbWVcIjpcImljb25fdXJsXCIsXCJleGFtcGxlXCI6XCJodHRwOi8vbG9yZW1waXhlbC5jb20vNDgvNDhcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlVSTCB0byBhbiBpbWFnZSB0byB1c2UgYXMgdGhlIGljb24gZm9yIHRoaXMgbWVzc2FnZS4gTXVzdCBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYXNfdXNlciBzZXQgdG8gZmFsc2UsIG90aGVyd2lzZSBpZ25vcmVkLiBTZWUgYXV0aG9yc2hpcCBiZWxvdy5cXG5cIn0se1wibmFtZVwiOlwiaWNvbl9lbW9qaVwiLFwiZXhhbXBsZVwiOlwiOmNoYXJ0X3dpdGhfdXB3YXJkc190cmVuZDpcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkVtb2ppIHRvIHVzZSBhcyB0aGUgaWNvbiBmb3IgdGhpcyBtZXNzYWdlLiBPdmVycmlkZXMgaWNvbl91cmwuIE11c3QgYmUgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGFzX3VzZXIgc2V0IHRvIGZhbHNlLCBvdGhlcndpc2UgaWdub3JlZC4gU2VlIGF1dGhvcnNoaXAgYmVsb3cuXFxuXCJ9LHtcIm5hbWVcIjpcInRocmVhZF90c1wiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlByb3ZpZGUgYW5vdGhlciBtZXNzYWdlJ3MgdHMgdmFsdWUgdG8gbWFrZSB0aGlzIG1lc3NhZ2UgYSByZXBseS4gQXZvaWQgdXNpbmcgYSByZXBseSdzIHRzIHZhbHVlOyB1c2UgaXRzIHBhcmVudCBpbnN0ZWFkLlxcblwifSx7XCJuYW1lXCI6XCJyZXBseV9icm9hZGNhc3RcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCB0aHJlYWRfdHMgYW5kIGluZGljYXRlcyB3aGV0aGVyIHJlcGx5IHNob3VsZCBiZSBtYWRlIHZpc2libGUgdG8gZXZlcnlvbmUgaW4gdGhlIGNoYW5uZWwgb3IgY29udmVyc2F0aW9uLiBEZWZhdWx0cyB0byBmYWxzZS5cXG5cIn1dLFwiY2hhdC51bmZ1cmxcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBsaW5rczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCBJRCBvZiB0aGUgbWVzc2FnZVxcblwifSx7XCJuYW1lXCI6XCJ0c1wiLFwiZXhhbXBsZVwiOlwiwqBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlRpbWVzdGFtcCBvZiB0aGUgbWVzc2FnZSB0byBhZGQgdW5mdXJsIGJlaGF2aW9yIHRvXFxuXCJ9LHtcIm5hbWVcIjpcInVuZnVybHNcIixcImV4YW1wbGVcIjpcIsKgXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJKU09OIG1hcHBpbmcgYSBzZXQgb2YgVVJMcyBmcm9tIHRoZSBtZXNzYWdlIHRvIHRoZWlyIHVuZnVybCBhdHRhY2htZW50c1xcblwifSx7XCJuYW1lXCI6XCJ1c2VyX2F1dGhfcmVxdWlyZWRcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0wXCIsXCJkZXNjcmlwdGlvblwiOlwiU2V0IHRvIHRydWUgb3IgMSB0byBpbmRpY2F0ZSB0aGUgdXNlciBtdXN0IGluc3RhbGwgeW91ciBTbGFjayBhcHAgdG8gdHJpZ2dlciB1bmZ1cmxzIGZvciB0aGlzIGRvbWFpblxcblwifV0sXCJjaGF0LnVwZGF0ZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGNoYXQ6d3JpdGU6Ym90IG9yIGNoYXQ6d3JpdGU6dXNlclxcblwifSx7XCJuYW1lXCI6XCJ0c1wiLFwiZXhhbXBsZVwiOlwiMTQwNTg5NDMyMi4wMDI3NjhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlRpbWVzdGFtcCBvZiB0aGUgbWVzc2FnZSB0byBiZSB1cGRhdGVkLlxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCBjb250YWluaW5nIHRoZSBtZXNzYWdlIHRvIGJlIHVwZGF0ZWQuXFxuXCJ9LHtcIm5hbWVcIjpcInRleHRcIixcImV4YW1wbGVcIjpcIkhlbGxvIHdvcmxkXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJOZXcgdGV4dCBmb3IgdGhlIG1lc3NhZ2UsIHVzaW5nIHRoZSBkZWZhdWx0IGZvcm1hdHRpbmcgcnVsZXMuXFxuXCJ9LHtcIm5hbWVcIjpcImF0dGFjaG1lbnRzXCIsXCJleGFtcGxlXCI6XCJbe1xcXCJwcmV0ZXh0XFxcIjogXFxcInByZS1oZWxsb1xcXCIsIFxcXCJ0ZXh0XFxcIjogXFxcInRleHQtd29ybGRcXFwifV1cIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlN0cnVjdHVyZWQgbWVzc2FnZSBhdHRhY2htZW50cy5cXG5cIn0se1wibmFtZVwiOlwicGFyc2VcIixcImV4YW1wbGVcIjpcIm5vbmVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkNoYW5nZSBob3cgbWVzc2FnZXMgYXJlIHRyZWF0ZWQuIERlZmF1bHRzIHRvIGNsaWVudCwgdW5saWtlIGNoYXQucG9zdE1lc3NhZ2UuIFNlZSBiZWxvdy5cXG5cIn0se1wibmFtZVwiOlwibGlua19uYW1lc1wiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmluZCBhbmQgbGluayBjaGFubmVsIG5hbWVzIGFuZCB1c2VybmFtZXMuIERlZmF1bHRzIHRvIG5vbmUuIFRoaXMgcGFyYW1ldGVyIHNob3VsZCBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggcGFyc2UuIFRvIHNldCBsaW5rX25hbWVzIHRvIDEsIHNwZWNpZnkgYSBwYXJzZSBtb2RlIG9mIGZ1bGwuXFxuXCJ9LHtcIm5hbWVcIjpcImFzX3VzZXJcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlBhc3MgdHJ1ZSB0byB1cGRhdGUgdGhlIG1lc3NhZ2UgYXMgdGhlIGF1dGhlZCB1c2VyLiBCb3QgdXNlcnMgaW4gdGhpcyBjb250ZXh0IGFyZSBjb25zaWRlcmVkIGF1dGhlZCB1c2Vycy5cXG5cIn1dLFwiZG5kLmVuZERuZFwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGRuZDp3cml0ZVxcblwifV0sXCJkbmQuZW5kU25vb3plXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZG5kOndyaXRlXFxuXCJ9XSxcImRuZC5pbmZvXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZG5kOnJlYWRcXG5cIn0se1wibmFtZVwiOlwidXNlclwiLFwiZXhhbXBsZVwiOlwiVTEyMzRcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlVzZXIgdG8gZmV0Y2ggc3RhdHVzIGZvciAoZGVmYXVsdHMgdG8gY3VycmVudCB1c2VyKVxcblwifV0sXCJkbmQuc2V0U25vb3plXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZG5kOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcIm51bV9taW51dGVzXCIsXCJleGFtcGxlXCI6XCI2MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiTnVtYmVyIG9mIG1pbnV0ZXMsIGZyb20gbm93LCB0byBzbm9vemUgdW50aWwuXFxuXCJ9XSxcImRuZC50ZWFtSW5mb1wiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGRuZDpyZWFkXFxuXCJ9LHtcIm5hbWVcIjpcInVzZXJzXCIsXCJleGFtcGxlXCI6XCJVMTIzNCxVNDU2N1wiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQ29tbWEtc2VwYXJhdGVkIGxpc3Qgb2YgdXNlcnMgdG8gZmV0Y2ggRG8gTm90IERpc3R1cmIgc3RhdHVzIGZvclxcblwifV0sXCJlbW9qaS5saXN0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZW1vamk6cmVhZFxcblwifV0sXCJmaWxlcy5jb21tZW50cy5hZGRcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBmaWxlczp3cml0ZTp1c2VyXFxuXCJ9LHtcIm5hbWVcIjpcImZpbGVcIixcImV4YW1wbGVcIjpcIkYxMjM0NDY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJGaWxlIHRvIGFkZCBhIGNvbW1lbnQgdG8uXFxuXCJ9LHtcIm5hbWVcIjpcImNvbW1lbnRcIixcImV4YW1wbGVcIjpcIkV2ZXJ5b25lIHNob3VsZCB0YWtlIGEgbW9tZW50IHRvIHJlYWQgdGhpcyBmaWxlLlwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGV4dCBvZiB0aGUgY29tbWVudCB0byBhZGQuXFxuXCJ9XSxcImZpbGVzLmNvbW1lbnRzLmRlbGV0ZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGZpbGVzOndyaXRlOnVzZXJcXG5cIn0se1wibmFtZVwiOlwiZmlsZVwiLFwiZXhhbXBsZVwiOlwiRjEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkZpbGUgdG8gZGVsZXRlIGEgY29tbWVudCBmcm9tLlxcblwifSx7XCJuYW1lXCI6XCJpZFwiLFwiZXhhbXBsZVwiOlwiRmMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJUaGUgY29tbWVudCB0byBkZWxldGUuXFxuXCJ9XSxcImZpbGVzLmNvbW1lbnRzLmVkaXRcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBmaWxlczp3cml0ZTp1c2VyXFxuXCJ9LHtcIm5hbWVcIjpcImZpbGVcIixcImV4YW1wbGVcIjpcIkYxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJGaWxlIGNvbnRhaW5pbmcgdGhlIGNvbW1lbnQgdG8gZWRpdC5cXG5cIn0se1wibmFtZVwiOlwiaWRcIixcImV4YW1wbGVcIjpcIkZjMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGhlIGNvbW1lbnQgdG8gZWRpdC5cXG5cIn0se1wibmFtZVwiOlwiY29tbWVudFwiLFwiZXhhbXBsZVwiOlwiRXZlcnlvbmUgc2hvdWxkIHRha2UgYSBtb21lbnQgdG8gcmVhZCB0aGlzIGZpbGUsIHNlcmlvdXNseS5cIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlRleHQgb2YgdGhlIGNvbW1lbnQgdG8gZWRpdC5cXG5cIn1dLFwiZmlsZXMuZGVsZXRlXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZmlsZXM6d3JpdGU6dXNlclxcblwifSx7XCJuYW1lXCI6XCJmaWxlXCIsXCJleGFtcGxlXCI6XCJGMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiSUQgb2YgZmlsZSB0byBkZWxldGUuXFxuXCJ9XSxcImZpbGVzLmluZm9cIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBmaWxlczpyZWFkXFxuXCJ9LHtcIm5hbWVcIjpcImZpbGVcIixcImV4YW1wbGVcIjpcIkYyMTQ3NDgzODYyXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJTcGVjaWZ5IGEgZmlsZSBieSBwcm92aWRpbmcgaXRzIElELlxcblwifSx7XCJuYW1lXCI6XCJjb3VudFwiLFwiZXhhbXBsZVwiOlwiMjBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0xMDBcIixcImRlc2NyaXB0aW9uXCI6XCJOdW1iZXIgb2YgaXRlbXMgdG8gcmV0dXJuIHBlciBwYWdlLlxcblwifSx7XCJuYW1lXCI6XCJwYWdlXCIsXCJleGFtcGxlXCI6XCIyXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MVwiLFwiZGVzY3JpcHRpb25cIjpcIlBhZ2UgbnVtYmVyIG9mIHJlc3VsdHMgdG8gcmV0dXJuLlxcblwifV0sXCJmaWxlcy5saXN0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZmlsZXM6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJ1c2VyXCIsXCJleGFtcGxlXCI6XCJVMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsdGVyIGZpbGVzIGNyZWF0ZWQgYnkgYSBzaW5nbGUgdXNlci5cXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiQzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkZpbHRlciBmaWxlcyBhcHBlYXJpbmcgaW4gYSBzcGVjaWZpYyBjaGFubmVsLCBpbmRpY2F0ZWQgYnkgaXRzIElELlxcblwifSx7XCJuYW1lXCI6XCJ0c19mcm9tXCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODlcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0wXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsdGVyIGZpbGVzIGNyZWF0ZWQgYWZ0ZXIgdGhpcyB0aW1lc3RhbXAgKGluY2x1c2l2ZSkuXFxuXCJ9LHtcIm5hbWVcIjpcInRzX3RvXCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODlcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD1ub3dcIixcImRlc2NyaXB0aW9uXCI6XCJGaWx0ZXIgZmlsZXMgY3JlYXRlZCBiZWZvcmUgdGhpcyB0aW1lc3RhbXAgKGluY2x1c2l2ZSkuXFxuXCJ9LHtcIm5hbWVcIjpcInR5cGVzXCIsXCJleGFtcGxlXCI6XCJpbWFnZXNcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD1hbGxcIixcImRlc2NyaXB0aW9uXCI6XCJGaWx0ZXIgZmlsZXMgYnkgdHlwZTpcXG5cXG5cXG5hbGwgLSBBbGwgZmlsZXNcXG5zcGFjZXMgLSBQb3N0c1xcbnNuaXBwZXRzIC0gU25pcHBldHNcXG5pbWFnZXMgLSBJbWFnZSBmaWxlc1xcbmdkb2NzIC0gR29vZ2xlIGRvY3NcXG56aXBzIC0gWmlwIGZpbGVzXFxucGRmcyAtIFBERiBmaWxlc1xcblxcblxcbllvdSBjYW4gcGFzcyBtdWx0aXBsZSB2YWx1ZXMgaW4gdGhlIHR5cGVzIGFyZ3VtZW50LCBsaWtlIHR5cGVzPXNwYWNlcyxzbmlwcGV0cy5UaGUgZGVmYXVsdCB2YWx1ZSBpcyBhbGwsIHdoaWNoIGRvZXMgbm90IGZpbHRlciB0aGUgbGlzdC5cXG5cIn0se1wibmFtZVwiOlwiY291bnRcIixcImV4YW1wbGVcIjpcIjIwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MTAwXCIsXCJkZXNjcmlwdGlvblwiOlwiTnVtYmVyIG9mIGl0ZW1zIHRvIHJldHVybiBwZXIgcGFnZS5cXG5cIn0se1wibmFtZVwiOlwicGFnZVwiLFwiZXhhbXBsZVwiOlwiMlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTFcIixcImRlc2NyaXB0aW9uXCI6XCJQYWdlIG51bWJlciBvZiByZXN1bHRzIHRvIHJldHVybi5cXG5cIn1dLFwiZmlsZXMucmV2b2tlUHVibGljVVJMXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZmlsZXM6d3JpdGU6dXNlclxcblwifSx7XCJuYW1lXCI6XCJmaWxlXCIsXCJleGFtcGxlXCI6XCJGMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSB0byByZXZva2VcXG5cIn1dLFwiZmlsZXMuc2hhcmVkUHVibGljVVJMXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZmlsZXM6d3JpdGU6dXNlclxcblwifSx7XCJuYW1lXCI6XCJmaWxlXCIsXCJleGFtcGxlXCI6XCJGMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSB0byBzaGFyZVxcblwifV0sXCJmaWxlcy51cGxvYWRcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBmaWxlczp3cml0ZTp1c2VyXFxuXCJ9LHtcIm5hbWVcIjpcImZpbGVcIixcImV4YW1wbGVcIjpcIi4uLlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSBjb250ZW50cyB2aWEgbXVsdGlwYXJ0L2Zvcm0tZGF0YS4gSWYgb21pdHRpbmcgdGhpcyBwYXJhbWV0ZXIsIHlvdSBtdXN0IHN1Ym1pdCBjb250ZW50LlxcblwifSx7XCJuYW1lXCI6XCJjb250ZW50XCIsXCJleGFtcGxlXCI6XCIuLi5cIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkZpbGUgY29udGVudHMgdmlhIGEgUE9TVCB2YXJpYWJsZS4gSWYgb21pdHRpbmcgdGhpcyBwYXJhbWV0ZXIsIHlvdSBtdXN0IHByb3ZpZGUgYSBmaWxlLlxcblwifSx7XCJuYW1lXCI6XCJmaWxldHlwZVwiLFwiZXhhbXBsZVwiOlwicGhwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJBIGZpbGUgdHlwZSBpZGVudGlmaWVyLlxcblwifSx7XCJuYW1lXCI6XCJmaWxlbmFtZVwiLFwiZXhhbXBsZVwiOlwiZm9vLnR4dFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZW5hbWUgb2YgZmlsZS5cXG5cIn0se1wibmFtZVwiOlwidGl0bGVcIixcImV4YW1wbGVcIjpcIk15IEZpbGVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlRpdGxlIG9mIGZpbGUuXFxuXCJ9LHtcIm5hbWVcIjpcImluaXRpYWxfY29tbWVudFwiLFwiZXhhbXBsZVwiOlwiQmVzdCFcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkluaXRpYWwgY29tbWVudCB0byBhZGQgdG8gZmlsZS5cXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbHNcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwLEMyMzQ1Njc4OTAxLEMzNDU2Nzg5MDEyXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJDb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiBjaGFubmVsIG5hbWVzIG9yIElEcyB3aGVyZSB0aGUgZmlsZSB3aWxsIGJlIHNoYXJlZC5cXG5cIn1dLFwiZ3JvdXBzLmFyY2hpdmVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBncm91cHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlByaXZhdGUgY2hhbm5lbCB0byBhcmNoaXZlXFxuXCJ9XSxcImdyb3Vwcy5jbG9zZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGdyb3Vwczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJHMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiUHJpdmF0ZSBjaGFubmVsIHRvIGNsb3NlLlxcblwifV0sXCJncm91cHMuY3JlYXRlXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZ3JvdXBzOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcIm5hbWVcIixcImV4YW1wbGVcIjpcIsKgXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJOYW1lIG9mIHByaXZhdGUgY2hhbm5lbCB0byBjcmVhdGVcXG5cIn0se1wibmFtZVwiOlwidmFsaWRhdGVcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIldoZXRoZXIgdG8gcmV0dXJuIGVycm9ycyBvbiBpbnZhbGlkIGNoYW5uZWwgbmFtZSBpbnN0ZWFkIG9mIG1vZGlmeWluZyBpdCB0byBtZWV0IHRoZSBzcGVjaWZpZWQgY3JpdGVyaWEuXFxuXCJ9XSxcImdyb3Vwcy5jcmVhdGVDaGlsZFwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGdyb3Vwczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJHMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiUHJpdmF0ZSBjaGFubmVsIHRvIGNsb25lIGFuZCBhcmNoaXZlLlxcblwifV0sXCJncm91cHMuaGlzdG9yeVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGdyb3VwczpoaXN0b3J5XFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkcxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJQcml2YXRlIGNoYW5uZWwgdG8gZmV0Y2ggaGlzdG9yeSBmb3IuXFxuXCJ9LHtcIm5hbWVcIjpcImxhdGVzdFwiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD1ub3dcIixcImRlc2NyaXB0aW9uXCI6XCJFbmQgb2YgdGltZSByYW5nZSBvZiBtZXNzYWdlcyB0byBpbmNsdWRlIGluIHJlc3VsdHMuXFxuXCJ9LHtcIm5hbWVcIjpcIm9sZGVzdFwiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0wXCIsXCJkZXNjcmlwdGlvblwiOlwiU3RhcnQgb2YgdGltZSByYW5nZSBvZiBtZXNzYWdlcyB0byBpbmNsdWRlIGluIHJlc3VsdHMuXFxuXCJ9LHtcIm5hbWVcIjpcImluY2x1c2l2ZVwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTBcIixcImRlc2NyaXB0aW9uXCI6XCJJbmNsdWRlIG1lc3NhZ2VzIHdpdGggbGF0ZXN0IG9yIG9sZGVzdCB0aW1lc3RhbXAgaW4gcmVzdWx0cy5cXG5cIn0se1wibmFtZVwiOlwiY291bnRcIixcImV4YW1wbGVcIjpcIjEwMFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTEwMFwiLFwiZGVzY3JpcHRpb25cIjpcIk51bWJlciBvZiBtZXNzYWdlcyB0byByZXR1cm4sIGJldHdlZW4gMSBhbmQgMTAwMC5cXG5cIn0se1wibmFtZVwiOlwidW5yZWFkc1wiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTBcIixcImRlc2NyaXB0aW9uXCI6XCJJbmNsdWRlIHVucmVhZF9jb3VudF9kaXNwbGF5IGluIHRoZSBvdXRwdXQ/XFxuXCJ9XSxcImdyb3Vwcy5pbmZvXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZ3JvdXBzOnJlYWRcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlByaXZhdGUgY2hhbm5lbCB0byBnZXQgaW5mbyBvblxcblwifV0sXCJncm91cHMuaW52aXRlXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZ3JvdXBzOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkcxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJQcml2YXRlIGNoYW5uZWwgdG8gaW52aXRlIHVzZXIgdG8uXFxuXCJ9LHtcIm5hbWVcIjpcInVzZXJcIixcImV4YW1wbGVcIjpcIlUxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJVc2VyIHRvIGludml0ZS5cXG5cIn1dLFwiZ3JvdXBzLmtpY2tcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBncm91cHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlByaXZhdGUgY2hhbm5lbCB0byByZW1vdmUgdXNlciBmcm9tLlxcblwifSx7XCJuYW1lXCI6XCJ1c2VyXCIsXCJleGFtcGxlXCI6XCJVMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVXNlciB0byByZW1vdmUgZnJvbSBwcml2YXRlIGNoYW5uZWwuXFxuXCJ9XSxcImdyb3Vwcy5sZWF2ZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGdyb3Vwczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJHMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiUHJpdmF0ZSBjaGFubmVsIHRvIGxlYXZlXFxuXCJ9XSxcImdyb3Vwcy5saXN0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZ3JvdXBzOnJlYWRcXG5cIn0se1wibmFtZVwiOlwiZXhjbHVkZV9hcmNoaXZlZFwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTBcIixcImRlc2NyaXB0aW9uXCI6XCJEb24ndCByZXR1cm4gYXJjaGl2ZWQgcHJpdmF0ZSBjaGFubmVscy5cXG5cIn1dLFwiZ3JvdXBzLm1hcmtcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBncm91cHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlByaXZhdGUgY2hhbm5lbCB0byBzZXQgcmVhZGluZyBjdXJzb3IgaW4uXFxuXCJ9LHtcIm5hbWVcIjpcInRzXCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODkwLjEyMzQ1NlwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGltZXN0YW1wIG9mIHRoZSBtb3N0IHJlY2VudGx5IHNlZW4gbWVzc2FnZS5cXG5cIn1dLFwiZ3JvdXBzLm9wZW5cIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBncm91cHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlByaXZhdGUgY2hhbm5lbCB0byBvcGVuLlxcblwifV0sXCJncm91cHMucmVuYW1lXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogZ3JvdXBzOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkcxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJQcml2YXRlIGNoYW5uZWwgdG8gcmVuYW1lXFxuXCJ9LHtcIm5hbWVcIjpcIm5hbWVcIixcImV4YW1wbGVcIjpcIsKgXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJOZXcgbmFtZSBmb3IgcHJpdmF0ZSBjaGFubmVsLlxcblwifSx7XCJuYW1lXCI6XCJ2YWxpZGF0ZVwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiV2hldGhlciB0byByZXR1cm4gZXJyb3JzIG9uIGludmFsaWQgY2hhbm5lbCBuYW1lIGluc3RlYWQgb2YgbW9kaWZ5aW5nIGl0IHRvIG1lZXQgdGhlIHNwZWNpZmllZCBjcml0ZXJpYS5cXG5cIn1dLFwiZ3JvdXBzLnJlcGxpZXNcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBncm91cHM6aGlzdG9yeVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiUHJpdmF0ZSBjaGFubmVsIHRvIGZldGNoIHRocmVhZCBmcm9tXFxuXCJ9LHtcIm5hbWVcIjpcInRocmVhZF90c1wiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlVuaXF1ZSBpZGVudGlmaWVyIG9mIGEgdGhyZWFkJ3MgcGFyZW50IG1lc3NhZ2VcXG5cIn1dLFwiZ3JvdXBzLnNldFB1cnBvc2VcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBncm91cHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlByaXZhdGUgY2hhbm5lbCB0byBzZXQgdGhlIHB1cnBvc2Ugb2ZcXG5cIn0se1wibmFtZVwiOlwicHVycG9zZVwiLFwiZXhhbXBsZVwiOlwiTXkgUHVycG9zZVwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGhlIG5ldyBwdXJwb3NlXFxuXCJ9XSxcImdyb3Vwcy5zZXRUb3BpY1wiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGdyb3Vwczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJHMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiUHJpdmF0ZSBjaGFubmVsIHRvIHNldCB0aGUgdG9waWMgb2ZcXG5cIn0se1wibmFtZVwiOlwidG9waWNcIixcImV4YW1wbGVcIjpcIk15IFRvcGljXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJUaGUgbmV3IHRvcGljXFxuXCJ9XSxcImdyb3Vwcy51bmFyY2hpdmVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBncm91cHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlByaXZhdGUgY2hhbm5lbCB0byB1bmFyY2hpdmVcXG5cIn1dLFwiaW0uY2xvc2VcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBpbTp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJEMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiRGlyZWN0IG1lc3NhZ2UgY2hhbm5lbCB0byBjbG9zZS5cXG5cIn1dLFwiaW0uaGlzdG9yeVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGltOmhpc3RvcnlcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRDEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkRpcmVjdCBtZXNzYWdlIGNoYW5uZWwgdG8gZmV0Y2ggaGlzdG9yeSBmb3IuXFxuXCJ9LHtcIm5hbWVcIjpcImxhdGVzdFwiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD1ub3dcIixcImRlc2NyaXB0aW9uXCI6XCJFbmQgb2YgdGltZSByYW5nZSBvZiBtZXNzYWdlcyB0byBpbmNsdWRlIGluIHJlc3VsdHMuXFxuXCJ9LHtcIm5hbWVcIjpcIm9sZGVzdFwiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0wXCIsXCJkZXNjcmlwdGlvblwiOlwiU3RhcnQgb2YgdGltZSByYW5nZSBvZiBtZXNzYWdlcyB0byBpbmNsdWRlIGluIHJlc3VsdHMuXFxuXCJ9LHtcIm5hbWVcIjpcImluY2x1c2l2ZVwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTBcIixcImRlc2NyaXB0aW9uXCI6XCJJbmNsdWRlIG1lc3NhZ2VzIHdpdGggbGF0ZXN0IG9yIG9sZGVzdCB0aW1lc3RhbXAgaW4gcmVzdWx0cy5cXG5cIn0se1wibmFtZVwiOlwiY291bnRcIixcImV4YW1wbGVcIjpcIjEwMFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTEwMFwiLFwiZGVzY3JpcHRpb25cIjpcIk51bWJlciBvZiBtZXNzYWdlcyB0byByZXR1cm4sIGJldHdlZW4gMSBhbmQgMTAwMC5cXG5cIn0se1wibmFtZVwiOlwidW5yZWFkc1wiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTBcIixcImRlc2NyaXB0aW9uXCI6XCJJbmNsdWRlIHVucmVhZF9jb3VudF9kaXNwbGF5IGluIHRoZSBvdXRwdXQ/XFxuXCJ9XSxcImltLmxpc3RcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBpbTpyZWFkXFxuXCJ9XSxcImltLm1hcmtcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBpbTp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJEMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiRGlyZWN0IG1lc3NhZ2UgY2hhbm5lbCB0byBzZXQgcmVhZGluZyBjdXJzb3IgaW4uXFxuXCJ9LHtcIm5hbWVcIjpcInRzXCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODkwLjEyMzQ1NlwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGltZXN0YW1wIG9mIHRoZSBtb3N0IHJlY2VudGx5IHNlZW4gbWVzc2FnZS5cXG5cIn1dLFwiaW0ub3BlblwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGltOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcInVzZXJcIixcImV4YW1wbGVcIjpcIlUxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJVc2VyIHRvIG9wZW4gYSBkaXJlY3QgbWVzc2FnZSBjaGFubmVsIHdpdGguXFxuXCJ9LHtcIm5hbWVcIjpcInJldHVybl9pbVwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQm9vbGVhbiwgaW5kaWNhdGVzIHlvdSB3YW50IHRoZSBmdWxsIElNIGNoYW5uZWwgZGVmaW5pdGlvbiBpbiB0aGUgcmVzcG9uc2UuXFxuXCJ9XSxcImltLnJlcGxpZXNcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBpbTpoaXN0b3J5XFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJEaXJlY3QgbWVzc2FnZSBjaGFubmVsIHRvIGZldGNoIHRocmVhZCBmcm9tXFxuXCJ9LHtcIm5hbWVcIjpcInRocmVhZF90c1wiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlVuaXF1ZSBpZGVudGlmaWVyIG9mIGEgdGhyZWFkJ3MgcGFyZW50IG1lc3NhZ2VcXG5cIn1dLFwibXBpbS5jbG9zZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IG1waW06d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIk1QSU0gdG8gY2xvc2UuXFxuXCJ9XSxcIm1waW0uaGlzdG9yeVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IG1waW06aGlzdG9yeVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJHMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiTXVsdGlwYXJ0eSBkaXJlY3QgbWVzc2FnZSB0byBmZXRjaCBoaXN0b3J5IGZvci5cXG5cIn0se1wibmFtZVwiOlwibGF0ZXN0XCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODkwLjEyMzQ1NlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PW5vd1wiLFwiZGVzY3JpcHRpb25cIjpcIkVuZCBvZiB0aW1lIHJhbmdlIG9mIG1lc3NhZ2VzIHRvIGluY2x1ZGUgaW4gcmVzdWx0cy5cXG5cIn0se1wibmFtZVwiOlwib2xkZXN0XCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODkwLjEyMzQ1NlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTBcIixcImRlc2NyaXB0aW9uXCI6XCJTdGFydCBvZiB0aW1lIHJhbmdlIG9mIG1lc3NhZ2VzIHRvIGluY2x1ZGUgaW4gcmVzdWx0cy5cXG5cIn0se1wibmFtZVwiOlwiaW5jbHVzaXZlXCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MFwiLFwiZGVzY3JpcHRpb25cIjpcIkluY2x1ZGUgbWVzc2FnZXMgd2l0aCBsYXRlc3Qgb3Igb2xkZXN0IHRpbWVzdGFtcCBpbiByZXN1bHRzLlxcblwifSx7XCJuYW1lXCI6XCJjb3VudFwiLFwiZXhhbXBsZVwiOlwiMTAwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MTAwXCIsXCJkZXNjcmlwdGlvblwiOlwiTnVtYmVyIG9mIG1lc3NhZ2VzIHRvIHJldHVybiwgYmV0d2VlbiAxIGFuZCAxMDAwLlxcblwifSx7XCJuYW1lXCI6XCJ1bnJlYWRzXCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MFwiLFwiZGVzY3JpcHRpb25cIjpcIkluY2x1ZGUgdW5yZWFkX2NvdW50X2Rpc3BsYXkgaW4gdGhlIG91dHB1dD9cXG5cIn1dLFwibXBpbS5saXN0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogbXBpbTpyZWFkXFxuXCJ9XSxcIm1waW0ubWFya1wiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IG1waW06d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbFwiLFwiZXhhbXBsZVwiOlwiRzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIm11bHRpcGFydHkgZGlyZWN0IG1lc3NhZ2UgY2hhbm5lbCB0byBzZXQgcmVhZGluZyBjdXJzb3IgaW4uXFxuXCJ9LHtcIm5hbWVcIjpcInRzXCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODkwLjEyMzQ1NlwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGltZXN0YW1wIG9mIHRoZSBtb3N0IHJlY2VudGx5IHNlZW4gbWVzc2FnZS5cXG5cIn1dLFwibXBpbS5vcGVuXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogbXBpbTp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJ1c2Vyc1wiLFwiZXhhbXBsZVwiOlwiVTEyMzQ1Njc4OTAsVTIzNDU2Nzg5MDEsVTM0NTY3ODkwMTJcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkNvbW1hIHNlcGFyYXRlZCBsaXN0cyBvZiB1c2Vycy4gIFRoZSBvcmRlcmluZyBvZiB0aGUgdXNlcnMgaXMgcHJlc2VydmVkIHdoZW5ldmVyIGEgTVBJTSBncm91cCBpcyByZXR1cm5lZC5cXG5cIn1dLFwibXBpbS5yZXBsaWVzXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogbXBpbTpoaXN0b3J5XFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJNdWx0aXBhcnR5IGRpcmVjdCBtZXNzYWdlIGNoYW5uZWwgdG8gZmV0Y2ggdGhyZWFkIGZyb20uXFxuXCJ9LHtcIm5hbWVcIjpcInRocmVhZF90c1wiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlVuaXF1ZSBpZGVudGlmaWVyIG9mIGEgdGhyZWFkJ3MgcGFyZW50IG1lc3NhZ2UuXFxuXCJ9XSxcIm9hdXRoLmFjY2Vzc1wiOlt7XCJuYW1lXCI6XCJjbGllbnRfaWRcIixcImV4YW1wbGVcIjpcIjRiMzllOS03NTJjNFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiSXNzdWVkIHdoZW4geW91IGNyZWF0ZWQgeW91ciBhcHBsaWNhdGlvbi5cXG5cIn0se1wibmFtZVwiOlwiY2xpZW50X3NlY3JldFwiLFwiZXhhbXBsZVwiOlwiMzNmZWEwMTEzZjViMVwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiSXNzdWVkIHdoZW4geW91IGNyZWF0ZWQgeW91ciBhcHBsaWNhdGlvbi5cXG5cIn0se1wibmFtZVwiOlwiY29kZVwiLFwiZXhhbXBsZVwiOlwiY2NkYWE3MmFkXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJUaGUgY29kZSBwYXJhbSByZXR1cm5lZCB2aWEgdGhlIE9BdXRoIGNhbGxiYWNrLlxcblwifSx7XCJuYW1lXCI6XCJyZWRpcmVjdF91cmlcIixcImV4YW1wbGVcIjpcImh0dHA6Ly9leGFtcGxlLmNvbVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiVGhpcyBtdXN0IG1hdGNoIHRoZSBvcmlnaW5hbGx5IHN1Ym1pdHRlZCBVUkkgKGlmIG9uZSB3YXMgc2VudCkuXFxuXCJ9XSxcInBpbnMuYWRkXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogcGluczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB0byBwaW4gdGhlIGl0ZW0gaW4uXFxuXCJ9LHtcIm5hbWVcIjpcImZpbGVcIixcImV4YW1wbGVcIjpcIkYxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJGaWxlIHRvIHBpbi5cXG5cIn0se1wibmFtZVwiOlwiZmlsZV9jb21tZW50XCIsXCJleGFtcGxlXCI6XCJGYzEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkZpbGUgY29tbWVudCB0byBwaW4uXFxuXCJ9LHtcIm5hbWVcIjpcInRpbWVzdGFtcFwiLFwiZXhhbXBsZVwiOlwiMTIzNDU2Nzg5MC4xMjM0NTZcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlRpbWVzdGFtcCBvZiB0aGUgbWVzc2FnZSB0byBwaW4uXFxuXCJ9XSxcInBpbnMubGlzdFwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHBpbnM6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB0byBnZXQgcGlubmVkIGl0ZW1zIGZvci5cXG5cIn1dLFwicGlucy5yZW1vdmVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBwaW5zOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJDaGFubmVsIHdoZXJlIHRoZSBpdGVtIGlzIHBpbm5lZCB0by5cXG5cIn0se1wibmFtZVwiOlwiZmlsZVwiLFwiZXhhbXBsZVwiOlwiRjEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkZpbGUgdG8gdW4tcGluLlxcblwifSx7XCJuYW1lXCI6XCJmaWxlX2NvbW1lbnRcIixcImV4YW1wbGVcIjpcIkZjMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSBjb21tZW50IHRvIHVuLXBpbi5cXG5cIn0se1wibmFtZVwiOlwidGltZXN0YW1wXCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODkwLjEyMzQ1NlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiVGltZXN0YW1wIG9mIHRoZSBtZXNzYWdlIHRvIHVuLXBpbi5cXG5cIn1dLFwicmVhY3Rpb25zLmFkZFwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHJlYWN0aW9uczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJuYW1lXCIsXCJleGFtcGxlXCI6XCJ0aHVtYnN1cFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiUmVhY3Rpb24gKGVtb2ppKSBuYW1lLlxcblwifSx7XCJuYW1lXCI6XCJmaWxlXCIsXCJleGFtcGxlXCI6XCJGMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSB0byBhZGQgcmVhY3Rpb24gdG8uXFxuXCJ9LHtcIm5hbWVcIjpcImZpbGVfY29tbWVudFwiLFwiZXhhbXBsZVwiOlwiRmMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJGaWxlIGNvbW1lbnQgdG8gYWRkIHJlYWN0aW9uIHRvLlxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB3aGVyZSB0aGUgbWVzc2FnZSB0byBhZGQgcmVhY3Rpb24gdG8gd2FzIHBvc3RlZC5cXG5cIn0se1wibmFtZVwiOlwidGltZXN0YW1wXCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODkwLjEyMzQ1NlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiVGltZXN0YW1wIG9mIHRoZSBtZXNzYWdlIHRvIGFkZCByZWFjdGlvbiB0by5cXG5cIn1dLFwicmVhY3Rpb25zLmdldFwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHJlYWN0aW9uczpyZWFkXFxuXCJ9LHtcIm5hbWVcIjpcImZpbGVcIixcImV4YW1wbGVcIjpcIkYxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJGaWxlIHRvIGdldCByZWFjdGlvbnMgZm9yLlxcblwifSx7XCJuYW1lXCI6XCJmaWxlX2NvbW1lbnRcIixcImV4YW1wbGVcIjpcIkZjMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSBjb21tZW50IHRvIGdldCByZWFjdGlvbnMgZm9yLlxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB3aGVyZSB0aGUgbWVzc2FnZSB0byBnZXQgcmVhY3Rpb25zIGZvciB3YXMgcG9zdGVkLlxcblwifSx7XCJuYW1lXCI6XCJ0aW1lc3RhbXBcIixcImV4YW1wbGVcIjpcIjEyMzQ1Njc4OTAuMTIzNDU2XCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJUaW1lc3RhbXAgb2YgdGhlIG1lc3NhZ2UgdG8gZ2V0IHJlYWN0aW9ucyBmb3IuXFxuXCJ9LHtcIm5hbWVcIjpcImZ1bGxcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIklmIHRydWUgYWx3YXlzIHJldHVybiB0aGUgY29tcGxldGUgcmVhY3Rpb24gbGlzdC5cXG5cIn1dLFwicmVhY3Rpb25zLmxpc3RcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiByZWFjdGlvbnM6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJ1c2VyXCIsXCJleGFtcGxlXCI6XCJVMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiU2hvdyByZWFjdGlvbnMgbWFkZSBieSB0aGlzIHVzZXIuIERlZmF1bHRzIHRvIHRoZSBhdXRoZWQgdXNlci5cXG5cIn0se1wibmFtZVwiOlwiZnVsbFwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiSWYgdHJ1ZSBhbHdheXMgcmV0dXJuIHRoZSBjb21wbGV0ZSByZWFjdGlvbiBsaXN0LlxcblwifSx7XCJuYW1lXCI6XCJjb3VudFwiLFwiZXhhbXBsZVwiOlwiMjBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0xMDBcIixcImRlc2NyaXB0aW9uXCI6XCJOdW1iZXIgb2YgaXRlbXMgdG8gcmV0dXJuIHBlciBwYWdlLlxcblwifSx7XCJuYW1lXCI6XCJwYWdlXCIsXCJleGFtcGxlXCI6XCIyXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MVwiLFwiZGVzY3JpcHRpb25cIjpcIlBhZ2UgbnVtYmVyIG9mIHJlc3VsdHMgdG8gcmV0dXJuLlxcblwifV0sXCJyZWFjdGlvbnMucmVtb3ZlXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogcmVhY3Rpb25zOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcIm5hbWVcIixcImV4YW1wbGVcIjpcInRodW1ic3VwXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJSZWFjdGlvbiAoZW1vamkpIG5hbWUuXFxuXCJ9LHtcIm5hbWVcIjpcImZpbGVcIixcImV4YW1wbGVcIjpcIkYxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJGaWxlIHRvIHJlbW92ZSByZWFjdGlvbiBmcm9tLlxcblwifSx7XCJuYW1lXCI6XCJmaWxlX2NvbW1lbnRcIixcImV4YW1wbGVcIjpcIkZjMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSBjb21tZW50IHRvIHJlbW92ZSByZWFjdGlvbiBmcm9tLlxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB3aGVyZSB0aGUgbWVzc2FnZSB0byByZW1vdmUgcmVhY3Rpb24gZnJvbSB3YXMgcG9zdGVkLlxcblwifSx7XCJuYW1lXCI6XCJ0aW1lc3RhbXBcIixcImV4YW1wbGVcIjpcIjEyMzQ1Njc4OTAuMTIzNDU2XCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJUaW1lc3RhbXAgb2YgdGhlIG1lc3NhZ2UgdG8gcmVtb3ZlIHJlYWN0aW9uIGZyb20uXFxuXCJ9XSxcInJlbWluZGVycy5hZGRcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiByZW1pbmRlcnM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwidGV4dFwiLFwiZXhhbXBsZVwiOlwiZWF0IGEgYmFuYW5hXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJUaGUgY29udGVudCBvZiB0aGUgcmVtaW5kZXJcXG5cIn0se1wibmFtZVwiOlwidGltZVwiLFwiZXhhbXBsZVwiOlwiMTYwMjI4ODAwMFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiV2hlbiB0aGlzIHJlbWluZGVyIHNob3VsZCBoYXBwZW46IHRoZSBVbml4IHRpbWVzdGFtcCAodXAgdG8gZml2ZSB5ZWFycyBmcm9tIG5vdyksIHRoZSBudW1iZXIgb2Ygc2Vjb25kcyB1bnRpbCB0aGUgcmVtaW5kZXIgKGlmIHdpdGhpbiAyNCBob3VycyksIG9yIGEgbmF0dXJhbCBsYW5ndWFnZSBkZXNjcmlwdGlvbiAoRXguIFxcXCJpbiAxNSBtaW51dGVzLFxcXCIgb3IgXFxcImV2ZXJ5IFRodXJzZGF5XFxcIilcXG5cIn0se1wibmFtZVwiOlwidXNlclwiLFwiZXhhbXBsZVwiOlwiVTE4ODg4ODg4XCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJUaGUgdXNlciB3aG8gd2lsbCByZWNlaXZlIHRoZSByZW1pbmRlci4gSWYgbm8gdXNlciBpcyBzcGVjaWZpZWQsIHRoZSByZW1pbmRlciB3aWxsIGdvIHRvIHVzZXIgd2hvIGNyZWF0ZWQgaXQuXFxuXCJ9XSxcInJlbWluZGVycy5jb21wbGV0ZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHJlbWluZGVyczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJyZW1pbmRlclwiLFwiZXhhbXBsZVwiOlwiUm0xMjM0NTY3OFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGhlIElEIG9mIHRoZSByZW1pbmRlciB0byBiZSBtYXJrZWQgYXMgY29tcGxldGVcXG5cIn1dLFwicmVtaW5kZXJzLmRlbGV0ZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHJlbWluZGVyczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJyZW1pbmRlclwiLFwiZXhhbXBsZVwiOlwiUm0xMjM0NTY3OFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGhlIElEIG9mIHRoZSByZW1pbmRlclxcblwifV0sXCJyZW1pbmRlcnMuaW5mb1wiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHJlbWluZGVyczpyZWFkXFxuXCJ9LHtcIm5hbWVcIjpcInJlbWluZGVyXCIsXCJleGFtcGxlXCI6XCJSbTIzNDU2Nzg5XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJUaGUgSUQgb2YgdGhlIHJlbWluZGVyXFxuXCJ9XSxcInJlbWluZGVycy5saXN0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogcmVtaW5kZXJzOnJlYWRcXG5cIn1dLFwicnRtLmNvbm5lY3RcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHRva2VuIHR5cGU6IHNlc3Npb24gb3Igb2F1dGggb3IgYm90IG9yIGFwcFxcblJlcXVpcmVzIHNjb3BlOiBjbGllbnRcXG5cIn1dLFwicnRtLnN0YXJ0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogY2xpZW50XFxuXCJ9LHtcIm5hbWVcIjpcInNpbXBsZV9sYXRlc3RcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlJldHVybiB0aW1lc3RhbXAgb25seSBmb3IgbGF0ZXN0IG1lc3NhZ2Ugb2JqZWN0IG9mIGVhY2ggY2hhbm5lbCAoaW1wcm92ZXMgcGVyZm9ybWFuY2UpLlxcblwifSx7XCJuYW1lXCI6XCJub191bnJlYWRzXCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJTa2lwIHVucmVhZCBjb3VudHMgZm9yIGVhY2ggY2hhbm5lbCAoaW1wcm92ZXMgcGVyZm9ybWFuY2UpLlxcblwifSx7XCJuYW1lXCI6XCJtcGltX2F3YXJlXCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJSZXR1cm5zIE1QSU1zIHRvIHRoZSBjbGllbnQgaW4gdGhlIEFQSSByZXNwb25zZS5cXG5cIn0se1wibmFtZVwiOlwibm9fbGF0ZXN0XCIsXCJleGFtcGxlXCI6XCIxXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MFwiLFwiZGVzY3JpcHRpb25cIjpcIkV4Y2x1ZGUgbGF0ZXN0IHRpbWVzdGFtcHMgZm9yIGNoYW5uZWxzLCBncm91cHMsIG1waW1zLCBhbmQgaW1zLiBBdXRvbWF0aWNhbGx5IHNldHMgbm9fdW5yZWFkcyB0byAxXFxuXCJ9XSxcInNlYXJjaC5hbGxcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBzZWFyY2g6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJxdWVyeVwiLFwiZXhhbXBsZVwiOlwicGlja2xlZmFjZVwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiU2VhcmNoIHF1ZXJ5LiBNYXkgY29udGFpbnMgYm9vbGVhbnMsIGV0Yy5cXG5cIn0se1wibmFtZVwiOlwic29ydFwiLFwiZXhhbXBsZVwiOlwidGltZXN0YW1wXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9c2NvcmVcIixcImRlc2NyaXB0aW9uXCI6XCJSZXR1cm4gbWF0Y2hlcyBzb3J0ZWQgYnkgZWl0aGVyIHNjb3JlIG9yIHRpbWVzdGFtcC5cXG5cIn0se1wibmFtZVwiOlwic29ydF9kaXJcIixcImV4YW1wbGVcIjpcImFzY1wiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PWRlc2NcIixcImRlc2NyaXB0aW9uXCI6XCJDaGFuZ2Ugc29ydCBkaXJlY3Rpb24gdG8gYXNjZW5kaW5nIChhc2MpIG9yIGRlc2NlbmRpbmcgKGRlc2MpLlxcblwifSx7XCJuYW1lXCI6XCJoaWdobGlnaHRcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlBhc3MgYSB2YWx1ZSBvZiB0cnVlIHRvIGVuYWJsZSBxdWVyeSBoaWdobGlnaHQgbWFya2VycyAoc2VlIGJlbG93KS5cXG5cIn0se1wibmFtZVwiOlwiY291bnRcIixcImV4YW1wbGVcIjpcIjIwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MjBcIixcImRlc2NyaXB0aW9uXCI6XCJOdW1iZXIgb2YgaXRlbXMgdG8gcmV0dXJuIHBlciBwYWdlLlxcblwifSx7XCJuYW1lXCI6XCJwYWdlXCIsXCJleGFtcGxlXCI6XCIyXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MVwiLFwiZGVzY3JpcHRpb25cIjpcIlBhZ2UgbnVtYmVyIG9mIHJlc3VsdHMgdG8gcmV0dXJuLlxcblwifV0sXCJzZWFyY2guZmlsZXNcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBzZWFyY2g6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJxdWVyeVwiLFwiZXhhbXBsZVwiOlwicGlja2xlZmFjZVwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiU2VhcmNoIHF1ZXJ5LiBNYXkgY29udGFpbiBib29sZWFucywgZXRjLlxcblwifSx7XCJuYW1lXCI6XCJzb3J0XCIsXCJleGFtcGxlXCI6XCJ0aW1lc3RhbXBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD1zY29yZVwiLFwiZGVzY3JpcHRpb25cIjpcIlJldHVybiBtYXRjaGVzIHNvcnRlZCBieSBlaXRoZXIgc2NvcmUgb3IgdGltZXN0YW1wLlxcblwifSx7XCJuYW1lXCI6XCJzb3J0X2RpclwiLFwiZXhhbXBsZVwiOlwiYXNjXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9ZGVzY1wiLFwiZGVzY3JpcHRpb25cIjpcIkNoYW5nZSBzb3J0IGRpcmVjdGlvbiB0byBhc2NlbmRpbmcgKGFzYykgb3IgZGVzY2VuZGluZyAoZGVzYykuXFxuXCJ9LHtcIm5hbWVcIjpcImhpZ2hsaWdodFwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiUGFzcyBhIHZhbHVlIG9mIHRydWUgdG8gZW5hYmxlIHF1ZXJ5IGhpZ2hsaWdodCBtYXJrZXJzIChzZWUgYmVsb3cpLlxcblwifSx7XCJuYW1lXCI6XCJjb3VudFwiLFwiZXhhbXBsZVwiOlwiMjBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0yMFwiLFwiZGVzY3JpcHRpb25cIjpcIk51bWJlciBvZiBpdGVtcyB0byByZXR1cm4gcGVyIHBhZ2UuXFxuXCJ9LHtcIm5hbWVcIjpcInBhZ2VcIixcImV4YW1wbGVcIjpcIjJcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0xXCIsXCJkZXNjcmlwdGlvblwiOlwiUGFnZSBudW1iZXIgb2YgcmVzdWx0cyB0byByZXR1cm4uXFxuXCJ9XSxcInNlYXJjaC5tZXNzYWdlc1wiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHNlYXJjaDpyZWFkXFxuXCJ9LHtcIm5hbWVcIjpcInF1ZXJ5XCIsXCJleGFtcGxlXCI6XCJwaWNrbGVmYWNlXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJTZWFyY2ggcXVlcnkuIE1heSBjb250YWlucyBib29sZWFucywgZXRjLlxcblwifSx7XCJuYW1lXCI6XCJzb3J0XCIsXCJleGFtcGxlXCI6XCJ0aW1lc3RhbXBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD1zY29yZVwiLFwiZGVzY3JpcHRpb25cIjpcIlJldHVybiBtYXRjaGVzIHNvcnRlZCBieSBlaXRoZXIgc2NvcmUgb3IgdGltZXN0YW1wLlxcblwifSx7XCJuYW1lXCI6XCJzb3J0X2RpclwiLFwiZXhhbXBsZVwiOlwiYXNjXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9ZGVzY1wiLFwiZGVzY3JpcHRpb25cIjpcIkNoYW5nZSBzb3J0IGRpcmVjdGlvbiB0byBhc2NlbmRpbmcgKGFzYykgb3IgZGVzY2VuZGluZyAoZGVzYykuXFxuXCJ9LHtcIm5hbWVcIjpcImhpZ2hsaWdodFwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiUGFzcyBhIHZhbHVlIG9mIHRydWUgdG8gZW5hYmxlIHF1ZXJ5IGhpZ2hsaWdodCBtYXJrZXJzIChzZWUgYmVsb3cpLlxcblwifSx7XCJuYW1lXCI6XCJjb3VudFwiLFwiZXhhbXBsZVwiOlwiMjBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0yMFwiLFwiZGVzY3JpcHRpb25cIjpcIk51bWJlciBvZiBpdGVtcyB0byByZXR1cm4gcGVyIHBhZ2UuXFxuXCJ9LHtcIm5hbWVcIjpcInBhZ2VcIixcImV4YW1wbGVcIjpcIjJcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0xXCIsXCJkZXNjcmlwdGlvblwiOlwiUGFnZSBudW1iZXIgb2YgcmVzdWx0cyB0byByZXR1cm4uXFxuXCJ9XSxcInN0YXJzLmFkZFwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHN0YXJzOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcImZpbGVcIixcImV4YW1wbGVcIjpcIkYxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJGaWxlIHRvIGFkZCBzdGFyIHRvLlxcblwifSx7XCJuYW1lXCI6XCJmaWxlX2NvbW1lbnRcIixcImV4YW1wbGVcIjpcIkZjMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSBjb21tZW50IHRvIGFkZCBzdGFyIHRvLlxcblwifSx7XCJuYW1lXCI6XCJjaGFubmVsXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQ2hhbm5lbCB0byBhZGQgc3RhciB0bywgb3IgY2hhbm5lbCB3aGVyZSB0aGUgbWVzc2FnZSB0byBhZGQgc3RhciB0byB3YXMgcG9zdGVkICh1c2VkIHdpdGggdGltZXN0YW1wKS5cXG5cIn0se1wibmFtZVwiOlwidGltZXN0YW1wXCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODkwLjEyMzQ1NlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiVGltZXN0YW1wIG9mIHRoZSBtZXNzYWdlIHRvIGFkZCBzdGFyIHRvLlxcblwifV0sXCJzdGFycy5saXN0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogc3RhcnM6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJjb3VudFwiLFwiZXhhbXBsZVwiOlwiMjBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0xMDBcIixcImRlc2NyaXB0aW9uXCI6XCJOdW1iZXIgb2YgaXRlbXMgdG8gcmV0dXJuIHBlciBwYWdlLlxcblwifSx7XCJuYW1lXCI6XCJwYWdlXCIsXCJleGFtcGxlXCI6XCIyXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MVwiLFwiZGVzY3JpcHRpb25cIjpcIlBhZ2UgbnVtYmVyIG9mIHJlc3VsdHMgdG8gcmV0dXJuLlxcblwifV0sXCJzdGFycy5yZW1vdmVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBzdGFyczp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJmaWxlXCIsXCJleGFtcGxlXCI6XCJGMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSB0byByZW1vdmUgc3RhciBmcm9tLlxcblwifSx7XCJuYW1lXCI6XCJmaWxlX2NvbW1lbnRcIixcImV4YW1wbGVcIjpcIkZjMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSBjb21tZW50IHRvIHJlbW92ZSBzdGFyIGZyb20uXFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJDaGFubmVsIHRvIHJlbW92ZSBzdGFyIGZyb20sIG9yIGNoYW5uZWwgd2hlcmUgdGhlIG1lc3NhZ2UgdG8gcmVtb3ZlIHN0YXIgZnJvbSB3YXMgcG9zdGVkICh1c2VkIHdpdGggdGltZXN0YW1wKS5cXG5cIn0se1wibmFtZVwiOlwidGltZXN0YW1wXCIsXCJleGFtcGxlXCI6XCIxMjM0NTY3ODkwLjEyMzQ1NlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiVGltZXN0YW1wIG9mIHRoZSBtZXNzYWdlIHRvIHJlbW92ZSBzdGFyIGZyb20uXFxuXCJ9XSxcInRlYW0uYWNjZXNzTG9nc1wiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGFkbWluXFxuXCJ9LHtcIm5hbWVcIjpcImNvdW50XCIsXCJleGFtcGxlXCI6XCIyMFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTEwMFwiLFwiZGVzY3JpcHRpb25cIjpcIk51bWJlciBvZiBpdGVtcyB0byByZXR1cm4gcGVyIHBhZ2UuXFxuXCJ9LHtcIm5hbWVcIjpcInBhZ2VcIixcImV4YW1wbGVcIjpcIjJcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbCwgZGVmYXVsdD0xXCIsXCJkZXNjcmlwdGlvblwiOlwiUGFnZSBudW1iZXIgb2YgcmVzdWx0cyB0byByZXR1cm4uXFxuXCJ9LHtcIm5hbWVcIjpcImJlZm9yZVwiLFwiZXhhbXBsZVwiOlwiMTQ1Nzk4OTE2NlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PW5vd1wiLFwiZGVzY3JpcHRpb25cIjpcIkVuZCBvZiB0aW1lIHJhbmdlIG9mIGxvZ3MgdG8gaW5jbHVkZSBpbiByZXN1bHRzIChpbmNsdXNpdmUpLlxcblwifV0sXCJ0ZWFtLmJpbGxhYmxlSW5mb1wiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IGFkbWluXFxuXCJ9LHtcIm5hbWVcIjpcInVzZXJcIixcImV4YW1wbGVcIjpcIlUxMjM0NTY3ODkwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJBIHVzZXIgdG8gcmV0cmlldmUgdGhlIGJpbGxhYmxlIGluZm9ybWF0aW9uIGZvci4gRGVmYXVsdHMgdG8gYWxsIHVzZXJzLlxcblwifV0sXCJ0ZWFtLmluZm9cIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiB0ZWFtOnJlYWRcXG5cIn1dLFwidGVhbS5pbnRlZ3JhdGlvbkxvZ3NcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBhZG1pblxcblwifSx7XCJuYW1lXCI6XCJzZXJ2aWNlX2lkXCIsXCJleGFtcGxlXCI6XCLCoFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsdGVyIGxvZ3MgdG8gdGhpcyBzZXJ2aWNlLiBEZWZhdWx0cyB0byBhbGwgbG9ncy5cXG5cIn0se1wibmFtZVwiOlwiYXBwX2lkXCIsXCJleGFtcGxlXCI6XCLCoFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsdGVyIGxvZ3MgdG8gdGhpcyBTbGFjayBhcHAuIERlZmF1bHRzIHRvIGFsbCBsb2dzLlxcblwifSx7XCJuYW1lXCI6XCJ1c2VyXCIsXCJleGFtcGxlXCI6XCJVMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsdGVyIGxvZ3MgZ2VuZXJhdGVkIGJ5IHRoaXMgdXNlcuKAmXMgYWN0aW9ucy4gRGVmYXVsdHMgdG8gYWxsIGxvZ3MuXFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5nZV90eXBlXCIsXCJleGFtcGxlXCI6XCJhZGRlZFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsdGVyIGxvZ3Mgd2l0aCB0aGlzIGNoYW5nZSB0eXBlLiBEZWZhdWx0cyB0byBhbGwgbG9ncy5cXG5cIn0se1wibmFtZVwiOlwiY291bnRcIixcImV4YW1wbGVcIjpcIjIwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWwsIGRlZmF1bHQ9MTAwXCIsXCJkZXNjcmlwdGlvblwiOlwiTnVtYmVyIG9mIGl0ZW1zIHRvIHJldHVybiBwZXIgcGFnZS5cXG5cIn0se1wibmFtZVwiOlwicGFnZVwiLFwiZXhhbXBsZVwiOlwiMlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PTFcIixcImRlc2NyaXB0aW9uXCI6XCJQYWdlIG51bWJlciBvZiByZXN1bHRzIHRvIHJldHVybi5cXG5cIn1dLFwidGVhbS5wcm9maWxlLmdldFwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHVzZXJzLnByb2ZpbGU6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJ2aXNpYmlsaXR5XCIsXCJleGFtcGxlXCI6XCJhbGxcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkZpbHRlciBieSB2aXNpYmlsaXR5LlxcblwifV0sXCJ1c2VyZ3JvdXBzLmNyZWF0ZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHVzZXJncm91cHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwibmFtZVwiLFwiZXhhbXBsZVwiOlwiTXkgVGVzdCBUZWFtXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBIG5hbWUgZm9yIHRoZSBVc2VyIEdyb3VwLiBNdXN0IGJlIHVuaXF1ZSBhbW9uZyBVc2VyIEdyb3Vwcy5cXG5cIn0se1wibmFtZVwiOlwiaGFuZGxlXCIsXCJleGFtcGxlXCI6XCJtYXJrZXRpbmdcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkEgbWVudGlvbiBoYW5kbGUuIE11c3QgYmUgdW5pcXVlIGFtb25nIGNoYW5uZWxzLCB1c2VycyBhbmQgVXNlciBHcm91cHMuXFxuXCJ9LHtcIm5hbWVcIjpcImRlc2NyaXB0aW9uXCIsXCJleGFtcGxlXCI6XCLCoFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQSBzaG9ydCBkZXNjcmlwdGlvbiBvZiB0aGUgVXNlciBHcm91cC5cXG5cIn0se1wibmFtZVwiOlwiY2hhbm5lbHNcIixcImV4YW1wbGVcIjpcIkMxMjM0NTY3ODkwLEMyMzQ1Njc4OTAxLEMzNDU2Nzg5MDEyXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJBIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmcgb2YgZW5jb2RlZCBjaGFubmVsIElEcyBmb3Igd2hpY2ggdGhlIFVzZXIgR3JvdXAgdXNlcyBhcyBhIGRlZmF1bHQuXFxuXCJ9LHtcIm5hbWVcIjpcImluY2x1ZGVfY291bnRcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkluY2x1ZGUgdGhlIG51bWJlciBvZiB1c2VycyBpbiBlYWNoIFVzZXIgR3JvdXAuXFxuXCJ9XSxcInVzZXJncm91cHMuZGlzYWJsZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHVzZXJncm91cHM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwidXNlcmdyb3VwXCIsXCJleGFtcGxlXCI6XCJTMDYwNFFTSkNcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlRoZSBlbmNvZGVkIElEIG9mIHRoZSBVc2VyIEdyb3VwIHRvIGRpc2FibGUuXFxuXCJ9LHtcIm5hbWVcIjpcImluY2x1ZGVfY291bnRcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkluY2x1ZGUgdGhlIG51bWJlciBvZiB1c2VycyBpbiB0aGUgVXNlciBHcm91cC5cXG5cIn1dLFwidXNlcmdyb3Vwcy5lbmFibGVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiB1c2VyZ3JvdXBzOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcInVzZXJncm91cFwiLFwiZXhhbXBsZVwiOlwiUzA2MDRRU0pDXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJUaGUgZW5jb2RlZCBJRCBvZiB0aGUgVXNlciBHcm91cCB0byBlbmFibGUuXFxuXCJ9LHtcIm5hbWVcIjpcImluY2x1ZGVfY291bnRcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkluY2x1ZGUgdGhlIG51bWJlciBvZiB1c2VycyBpbiB0aGUgVXNlciBHcm91cC5cXG5cIn1dLFwidXNlcmdyb3Vwcy5saXN0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogdXNlcmdyb3VwczpyZWFkXFxuXCJ9LHtcIm5hbWVcIjpcImluY2x1ZGVfZGlzYWJsZWRcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkluY2x1ZGUgZGlzYWJsZWQgVXNlciBHcm91cHMuXFxuXCJ9LHtcIm5hbWVcIjpcImluY2x1ZGVfY291bnRcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkluY2x1ZGUgdGhlIG51bWJlciBvZiB1c2VycyBpbiBlYWNoIFVzZXIgR3JvdXAuXFxuXCJ9LHtcIm5hbWVcIjpcImluY2x1ZGVfdXNlcnNcIixcImV4YW1wbGVcIjpcInRydWVcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkluY2x1ZGUgdGhlIGxpc3Qgb2YgdXNlcnMgZm9yIGVhY2ggVXNlciBHcm91cC5cXG5cIn1dLFwidXNlcmdyb3Vwcy51cGRhdGVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiB1c2VyZ3JvdXBzOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcInVzZXJncm91cFwiLFwiZXhhbXBsZVwiOlwiUzA2MDRRU0pDXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJUaGUgZW5jb2RlZCBJRCBvZiB0aGUgVXNlciBHcm91cCB0byB1cGRhdGUuXFxuXCJ9LHtcIm5hbWVcIjpcIm5hbWVcIixcImV4YW1wbGVcIjpcIk15IFRlc3QgVGVhbVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQSBuYW1lIGZvciB0aGUgVXNlciBHcm91cC4gTXVzdCBiZSB1bmlxdWUgYW1vbmcgVXNlciBHcm91cHMuXFxuXCJ9LHtcIm5hbWVcIjpcImhhbmRsZVwiLFwiZXhhbXBsZVwiOlwibWFya2V0aW5nXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJBIG1lbnRpb24gaGFuZGxlLiBNdXN0IGJlIHVuaXF1ZSBhbW9uZyBjaGFubmVscywgdXNlcnMgYW5kIFVzZXIgR3JvdXBzLlxcblwifSx7XCJuYW1lXCI6XCJkZXNjcmlwdGlvblwiLFwiZXhhbXBsZVwiOlwiwqBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIkEgc2hvcnQgZGVzY3JpcHRpb24gb2YgdGhlIFVzZXIgR3JvdXAuXFxuXCJ9LHtcIm5hbWVcIjpcImNoYW5uZWxzXCIsXCJleGFtcGxlXCI6XCJDMTIzNDU2Nzg5MCxDMjM0NTY3ODkwMSxDMzQ1Njc4OTAxMlwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQSBjb21tYSBzZXBhcmF0ZWQgc3RyaW5nIG9mIGVuY29kZWQgY2hhbm5lbCBJRHMgZm9yIHdoaWNoIHRoZSBVc2VyIEdyb3VwIHVzZXMgYXMgYSBkZWZhdWx0LlxcblwifSx7XCJuYW1lXCI6XCJpbmNsdWRlX2NvdW50XCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJJbmNsdWRlIHRoZSBudW1iZXIgb2YgdXNlcnMgaW4gdGhlIFVzZXIgR3JvdXAuXFxuXCJ9XSxcInVzZXJncm91cHMudXNlcnMubGlzdFwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHVzZXJncm91cHM6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJ1c2VyZ3JvdXBcIixcImV4YW1wbGVcIjpcIlMwNjA0UVNKQ1wiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVGhlIGVuY29kZWQgSUQgb2YgdGhlIFVzZXIgR3JvdXAgdG8gdXBkYXRlLlxcblwifSx7XCJuYW1lXCI6XCJpbmNsdWRlX2Rpc2FibGVkXCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJBbGxvdyByZXN1bHRzIHRoYXQgaW52b2x2ZSBkaXNhYmxlZCBVc2VyIEdyb3Vwcy5cXG5cIn1dLFwidXNlcmdyb3Vwcy51c2Vycy51cGRhdGVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiB1c2VyZ3JvdXBzOndyaXRlXFxuXCJ9LHtcIm5hbWVcIjpcInVzZXJncm91cFwiLFwiZXhhbXBsZVwiOlwiUzA2MDRRU0pDXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJUaGUgZW5jb2RlZCBJRCBvZiB0aGUgVXNlciBHcm91cCB0byB1cGRhdGUuXFxuXCJ9LHtcIm5hbWVcIjpcInVzZXJzXCIsXCJleGFtcGxlXCI6XCJVMDYwUjRCSjQsVTA2MFJOUkNaXCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmcgb2YgZW5jb2RlZCB1c2VyIElEcyB0aGF0IHJlcHJlc2VudCB0aGUgZW50aXJlIGxpc3Qgb2YgdXNlcnMgZm9yIHRoZSBVc2VyIEdyb3VwLlxcblwifSx7XCJuYW1lXCI6XCJpbmNsdWRlX2NvdW50XCIsXCJleGFtcGxlXCI6XCJ0cnVlXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJJbmNsdWRlIHRoZSBudW1iZXIgb2YgdXNlcnMgaW4gdGhlIFVzZXIgR3JvdXAuXFxuXCJ9XSxcInVzZXJzLmRlbGV0ZVBob3RvXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogdXNlcnMucHJvZmlsZTp3cml0ZVxcblwifV0sXCJ1c2Vycy5nZXRQcmVzZW5jZVwiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHVzZXJzOnJlYWRcXG5cIn0se1wibmFtZVwiOlwidXNlclwiLFwiZXhhbXBsZVwiOlwiVTEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIlVzZXIgdG8gZ2V0IHByZXNlbmNlIGluZm8gb24uIERlZmF1bHRzIHRvIHRoZSBhdXRoZWQgdXNlci5cXG5cIn1dLFwidXNlcnMuaWRlbnRpdHlcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiBpZGVudGl0eS5iYXNpY1xcblwifV0sXCJ1c2Vycy5pbmZvXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogdXNlcnM6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJ1c2VyXCIsXCJleGFtcGxlXCI6XCJVMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiVXNlciB0byBnZXQgaW5mbyBvblxcblwifV0sXCJ1c2Vycy5saXN0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogdXNlcnM6cmVhZFxcblwifSx7XCJuYW1lXCI6XCJwcmVzZW5jZVwiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiV2hldGhlciB0byBpbmNsdWRlIHByZXNlbmNlIGRhdGEgaW4gdGhlIG91dHB1dFxcblwifV0sXCJ1c2Vycy5zZXRBY3RpdmVcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiB1c2Vyczp3cml0ZVxcblwifV0sXCJ1c2Vycy5zZXRQaG90b1wiOlt7XCJuYW1lXCI6XCJ0b2tlblwiLFwiZXhhbXBsZVwiOlwieHh4eC14eHh4eHh4eHgteHh4eFwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiQXV0aGVudGljYXRpb24gdG9rZW4uXFxuUmVxdWlyZXMgc2NvcGU6IHVzZXJzLnByb2ZpbGU6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwiaW1hZ2VcIixcImV4YW1wbGVcIjpcIi4uLlwiLFwicmVxdWlyZWRcIjpcIlJlcXVpcmVkXCIsXCJkZXNjcmlwdGlvblwiOlwiRmlsZSBjb250ZW50cyB2aWEgbXVsdGlwYXJ0L2Zvcm0tZGF0YS5cXG5cIn0se1wibmFtZVwiOlwiY3JvcF94XCIsXCJleGFtcGxlXCI6XCIxMFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiWCBjb29yZGluYXRlIG9mIHRvcC1sZWZ0IGNvcm5lciBvZiBjcm9wIGJveFxcblwifSx7XCJuYW1lXCI6XCJjcm9wX3lcIixcImV4YW1wbGVcIjpcIjE1XCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJZIGNvb3JkaW5hdGUgb2YgdG9wLWxlZnQgY29ybmVyIG9mIGNyb3AgYm94XFxuXCJ9LHtcIm5hbWVcIjpcImNyb3Bfd1wiLFwiZXhhbXBsZVwiOlwiMTAwXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJXaWR0aC9oZWlnaHQgb2YgY3JvcCBib3ggKGFsd2F5cyBzcXVhcmUpXFxuXCJ9XSxcInVzZXJzLnNldFByZXNlbmNlXCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogdXNlcnM6d3JpdGVcXG5cIn0se1wibmFtZVwiOlwicHJlc2VuY2VcIixcImV4YW1wbGVcIjpcImF3YXlcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkVpdGhlciBhdXRvIG9yIGF3YXlcXG5cIn1dLFwidXNlcnMucHJvZmlsZS5nZXRcIjpbe1wibmFtZVwiOlwidG9rZW5cIixcImV4YW1wbGVcIjpcInh4eHgteHh4eHh4eHh4LXh4eHhcIixcInJlcXVpcmVkXCI6XCJSZXF1aXJlZFwiLFwiZGVzY3JpcHRpb25cIjpcIkF1dGhlbnRpY2F0aW9uIHRva2VuLlxcblJlcXVpcmVzIHNjb3BlOiB1c2Vycy5wcm9maWxlOnJlYWRcXG5cIn0se1wibmFtZVwiOlwidXNlclwiLFwiZXhhbXBsZVwiOlwiVTEyMzQ1Njc4OTBcIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlVzZXIgdG8gcmV0cmlldmUgcHJvZmlsZSBpbmZvIGZvclxcblwifSx7XCJuYW1lXCI6XCJpbmNsdWRlX2xhYmVsc1wiLFwiZXhhbXBsZVwiOlwidHJ1ZVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsLCBkZWZhdWx0PWZhbHNlXCIsXCJkZXNjcmlwdGlvblwiOlwiSW5jbHVkZSBsYWJlbHMgZm9yIGVhY2ggSUQgaW4gY3VzdG9tIHByb2ZpbGUgZmllbGRzXFxuXCJ9XSxcInVzZXJzLnByb2ZpbGUuc2V0XCI6W3tcIm5hbWVcIjpcInRva2VuXCIsXCJleGFtcGxlXCI6XCJ4eHh4LXh4eHh4eHh4eC14eHh4XCIsXCJyZXF1aXJlZFwiOlwiUmVxdWlyZWRcIixcImRlc2NyaXB0aW9uXCI6XCJBdXRoZW50aWNhdGlvbiB0b2tlbi5cXG5SZXF1aXJlcyBzY29wZTogdXNlcnMucHJvZmlsZTp3cml0ZVxcblwifSx7XCJuYW1lXCI6XCJ1c2VyXCIsXCJleGFtcGxlXCI6XCJVMTIzNDU2Nzg5MFwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiSUQgb2YgdXNlciB0byBjaGFuZ2UuIFRoaXMgYXJndW1lbnQgbWF5IG9ubHkgYmUgc3BlY2lmaWVkIGJ5IHRlYW0gYWRtaW5zIG9uIHBhaWQgdGVhbXMuXFxuXCJ9LHtcIm5hbWVcIjpcInByb2ZpbGVcIixcImV4YW1wbGVcIjpcInsgZmlyc3RfbmFtZTogXFxcIkpvaG5cXFwiLCAuLi4gfVwiLFwicmVxdWlyZWRcIjpcIk9wdGlvbmFsXCIsXCJkZXNjcmlwdGlvblwiOlwiQ29sbGVjdGlvbiBvZiBrZXk6dmFsdWUgcGFpcnMgcHJlc2VudGVkIGFzIGEgVVJMLWVuY29kZWQgSlNPTiBoYXNoLlxcblwifSx7XCJuYW1lXCI6XCJuYW1lXCIsXCJleGFtcGxlXCI6XCJmaXJzdF9uYW1lXCIsXCJyZXF1aXJlZFwiOlwiT3B0aW9uYWxcIixcImRlc2NyaXB0aW9uXCI6XCJOYW1lIG9mIGEgc2luZ2xlIGtleSB0byBzZXQuIFVzYWJsZSBvbmx5IGlmIHByb2ZpbGUgaXMgbm90IHBhc3NlZC5cXG5cIn0se1wibmFtZVwiOlwidmFsdWVcIixcImV4YW1wbGVcIjpcIkpvaG5cIixcInJlcXVpcmVkXCI6XCJPcHRpb25hbFwiLFwiZGVzY3JpcHRpb25cIjpcIlZhbHVlIHRvIHNldCBhIHNpbmdsZSBrZXkgdG8uIFVzYWJsZSBvbmx5IGlmIHByb2ZpbGUgaXMgbm90IHBhc3NlZC5cXG5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvYXBpLmpzb25cbi8vIG1vZHVsZSBpZCA9IDE1MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjbGllbnQ7XG5cbi8vIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtc3RhdGVmdWwtY2xpZW50XG5mdW5jdGlvbiBjbGllbnQodG9rZW4pIHtcbiAgdmFyIGFwcGxpZWQgPSB7XG4gICAgYXV0aDoge1xuICAgICAgdGVzdDoge31cbiAgICB9LFxuICAgIGJvdHM6IHtcbiAgICAgIGluZm86IHt9XG4gICAgfSxcbiAgICBjaGFubmVsczoge1xuICAgICAgYXJjaGl2ZToge30sXG4gICAgICBjcmVhdGU6IHt9LFxuICAgICAgaGlzdG9yeToge30sXG4gICAgICBpbmZvOiB7fSxcbiAgICAgIGludml0ZToge30sXG4gICAgICBqb2luOiB7fSxcbiAgICAgIGtpY2s6IHt9LFxuICAgICAgbGVhdmU6IHt9LFxuICAgICAgbGlzdDoge30sXG4gICAgICBtYXJrOiB7fSxcbiAgICAgIHJlbmFtZToge30sXG4gICAgICByZXBsaWVzOiB7fSxcbiAgICAgIHNldFB1cnBvc2U6IHt9LFxuICAgICAgc2V0VG9waWM6IHt9LFxuICAgICAgdW5hcmNoaXZlOiB7fVxuICAgIH0sXG4gICAgY2hhdDoge1xuICAgICAgZGVsZXRlOiB7fSxcbiAgICAgIG1lTWVzc2FnZToge30sXG4gICAgICBwb3N0TWVzc2FnZToge30sXG4gICAgICB1bmZ1cmw6IHt9LFxuICAgICAgdXBkYXRlOiB7fVxuICAgIH0sXG4gICAgZG5kOiB7XG4gICAgICBlbmREbmQ6IHt9LFxuICAgICAgZW5kU25vb3plOiB7fSxcbiAgICAgIGluZm86IHt9LFxuICAgICAgc2V0U25vb3plOiB7fSxcbiAgICAgIHRlYW1JbmZvOiB7fVxuICAgIH0sXG4gICAgZW1vamk6IHtcbiAgICAgIGxpc3Q6IHt9XG4gICAgfSxcbiAgICBmaWxlczoge1xuICAgICAgY29tbWVudHM6IHtcbiAgICAgICAgYWRkOiB7fSxcbiAgICAgICAgZGVsZXRlOiB7fSxcbiAgICAgICAgZWRpdDoge31cbiAgICAgIH0sXG4gICAgICBkZWxldGU6IHt9LFxuICAgICAgaW5mbzoge30sXG4gICAgICBsaXN0OiB7fSxcbiAgICAgIHJldm9rZVB1YmxpY1VSTDoge30sXG4gICAgICBzaGFyZWRQdWJsaWNVUkw6IHt9LFxuICAgICAgdXBsb2FkOiB7fVxuICAgIH0sXG4gICAgZ3JvdXBzOiB7XG4gICAgICBhcmNoaXZlOiB7fSxcbiAgICAgIGNsb3NlOiB7fSxcbiAgICAgIGNyZWF0ZToge30sXG4gICAgICBjcmVhdGVDaGlsZDoge30sXG4gICAgICBoaXN0b3J5OiB7fSxcbiAgICAgIGluZm86IHt9LFxuICAgICAgaW52aXRlOiB7fSxcbiAgICAgIGtpY2s6IHt9LFxuICAgICAgbGVhdmU6IHt9LFxuICAgICAgbGlzdDoge30sXG4gICAgICBtYXJrOiB7fSxcbiAgICAgIG9wZW46IHt9LFxuICAgICAgcmVuYW1lOiB7fSxcbiAgICAgIHJlcGxpZXM6IHt9LFxuICAgICAgc2V0UHVycG9zZToge30sXG4gICAgICBzZXRUb3BpYzoge30sXG4gICAgICB1bmFyY2hpdmU6IHt9XG4gICAgfSxcbiAgICBpbToge1xuICAgICAgY2xvc2U6IHt9LFxuICAgICAgaGlzdG9yeToge30sXG4gICAgICBsaXN0OiB7fSxcbiAgICAgIG1hcms6IHt9LFxuICAgICAgb3Blbjoge30sXG4gICAgICByZXBsaWVzOiB7fVxuICAgIH0sXG4gICAgbXBpbToge1xuICAgICAgY2xvc2U6IHt9LFxuICAgICAgaGlzdG9yeToge30sXG4gICAgICBsaXN0OiB7fSxcbiAgICAgIG1hcms6IHt9LFxuICAgICAgb3Blbjoge30sXG4gICAgICByZXBsaWVzOiB7fVxuICAgIH0sXG4gICAgcGluczoge1xuICAgICAgYWRkOiB7fSxcbiAgICAgIGxpc3Q6IHt9LFxuICAgICAgcmVtb3ZlOiB7fVxuICAgIH0sXG4gICAgcmVhY3Rpb25zOiB7XG4gICAgICBhZGQ6IHt9LFxuICAgICAgZ2V0OiB7fSxcbiAgICAgIGxpc3Q6IHt9LFxuICAgICAgcmVtb3ZlOiB7fVxuICAgIH0sXG4gICAgcmVtaW5kZXJzOiB7XG4gICAgICBhZGQ6IHt9LFxuICAgICAgY29tcGxldGU6IHt9LFxuICAgICAgZGVsZXRlOiB7fSxcbiAgICAgIGluZm86IHt9LFxuICAgICAgbGlzdDoge31cbiAgICB9LFxuICAgIHJ0bToge1xuICAgICAgY29ubmVjdDoge30sXG4gICAgICBzdGFydDoge31cbiAgICB9LFxuICAgIHNlYXJjaDoge1xuICAgICAgYWxsOiB7fSxcbiAgICAgIGZpbGVzOiB7fSxcbiAgICAgIG1lc3NhZ2VzOiB7fVxuICAgIH0sXG4gICAgc3RhcnM6IHtcbiAgICAgIGFkZDoge30sXG4gICAgICBsaXN0OiB7fSxcbiAgICAgIHJlbW92ZToge31cbiAgICB9LFxuICAgIHRlYW06IHtcbiAgICAgIGFjY2Vzc0xvZ3M6IHt9LFxuICAgICAgYmlsbGFibGVJbmZvOiB7fSxcbiAgICAgIGluZm86IHt9LFxuICAgICAgaW50ZWdyYXRpb25Mb2dzOiB7fSxcbiAgICAgIHByb2ZpbGU6IHtcbiAgICAgICAgZ2V0OiB7fVxuICAgICAgfVxuICAgIH0sXG4gICAgdXNlcmdyb3Vwczoge1xuICAgICAgY3JlYXRlOiB7fSxcbiAgICAgIGRpc2FibGU6IHt9LFxuICAgICAgZW5hYmxlOiB7fSxcbiAgICAgIGxpc3Q6IHt9LFxuICAgICAgdXBkYXRlOiB7fSxcbiAgICAgIHVzZXJzOiB7XG4gICAgICAgIGxpc3Q6IHt9LFxuICAgICAgICB1cGRhdGU6IHt9XG4gICAgICB9XG4gICAgfSxcbiAgICB1c2Vyczoge1xuICAgICAgZGVsZXRlUGhvdG86IHt9LFxuICAgICAgZ2V0UHJlc2VuY2U6IHt9LFxuICAgICAgaWRlbnRpdHk6IHt9LFxuICAgICAgaW5mbzoge30sXG4gICAgICBsaXN0OiB7fSxcbiAgICAgIHByb2ZpbGU6IHtcbiAgICAgICAgZ2V0OiB7fSxcbiAgICAgICAgc2V0OiB7fVxuICAgICAgfSxcbiAgICAgIHNldEFjdGl2ZToge30sXG4gICAgICBzZXRQaG90bzoge30sXG4gICAgICBzZXRQcmVzZW5jZToge31cbiAgICB9XG4gIH07XG5cbiAgYXBwbGllZC5hdXRoLnRlc3QgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vYXV0aC50ZXN0JykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuYm90cy5pbmZvID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2JvdHMuaW5mbycpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmNoYW5uZWxzLmFyY2hpdmUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vY2hhbm5lbHMuYXJjaGl2ZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmNoYW5uZWxzLmNyZWF0ZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9jaGFubmVscy5jcmVhdGUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5jaGFubmVscy5oaXN0b3J5ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2NoYW5uZWxzLmhpc3RvcnknKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5jaGFubmVscy5pbmZvID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2NoYW5uZWxzLmluZm8nKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5jaGFubmVscy5pbnZpdGUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vY2hhbm5lbHMuaW52aXRlJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuY2hhbm5lbHMuam9pbiA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9jaGFubmVscy5qb2luJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuY2hhbm5lbHMua2ljayA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9jaGFubmVscy5raWNrJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuY2hhbm5lbHMubGVhdmUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vY2hhbm5lbHMubGVhdmUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5jaGFubmVscy5saXN0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2NoYW5uZWxzLmxpc3QnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5jaGFubmVscy5tYXJrID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2NoYW5uZWxzLm1hcmsnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5jaGFubmVscy5yZW5hbWUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vY2hhbm5lbHMucmVuYW1lJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuY2hhbm5lbHMucmVwbGllcyA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9jaGFubmVscy5yZXBsaWVzJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuY2hhbm5lbHMuc2V0UHVycG9zZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9jaGFubmVscy5zZXRQdXJwb3NlJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuY2hhbm5lbHMuc2V0VG9waWMgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vY2hhbm5lbHMuc2V0VG9waWMnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5jaGFubmVscy51bmFyY2hpdmUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vY2hhbm5lbHMudW5hcmNoaXZlJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuY2hhdC5kZWxldGUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vY2hhdC5kZWxldGUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5jaGF0Lm1lTWVzc2FnZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9jaGF0Lm1lTWVzc2FnZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmNoYXQucG9zdE1lc3NhZ2UgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vY2hhdC5wb3N0TWVzc2FnZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmNoYXQudW5mdXJsID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2NoYXQudW5mdXJsJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuY2hhdC51cGRhdGUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vY2hhdC51cGRhdGUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5kbmQuZW5kRG5kID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2RuZC5lbmREbmQnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5kbmQuZW5kU25vb3plID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2RuZC5lbmRTbm9vemUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5kbmQuaW5mbyA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9kbmQuaW5mbycpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmRuZC5zZXRTbm9vemUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZG5kLnNldFNub296ZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmRuZC50ZWFtSW5mbyA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9kbmQudGVhbUluZm8nKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5lbW9qaS5saXN0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2Vtb2ppLmxpc3QnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5maWxlcy5jb21tZW50cy5hZGQgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZmlsZXMuY29tbWVudHMuYWRkJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuZmlsZXMuY29tbWVudHMuZGVsZXRlID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2ZpbGVzLmNvbW1lbnRzLmRlbGV0ZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmZpbGVzLmNvbW1lbnRzLmVkaXQgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZmlsZXMuY29tbWVudHMuZWRpdCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmZpbGVzLmRlbGV0ZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9maWxlcy5kZWxldGUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5maWxlcy5pbmZvID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2ZpbGVzLmluZm8nKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5maWxlcy5saXN0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2ZpbGVzLmxpc3QnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5maWxlcy5yZXZva2VQdWJsaWNVUkwgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZmlsZXMucmV2b2tlUHVibGljVVJMJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuZmlsZXMuc2hhcmVkUHVibGljVVJMID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2ZpbGVzLnNoYXJlZFB1YmxpY1VSTCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmZpbGVzLnVwbG9hZCA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9maWxlcy51cGxvYWQnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5ncm91cHMuYXJjaGl2ZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9ncm91cHMuYXJjaGl2ZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmdyb3Vwcy5jbG9zZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9ncm91cHMuY2xvc2UnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5ncm91cHMuY3JlYXRlID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2dyb3Vwcy5jcmVhdGUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5ncm91cHMuY3JlYXRlQ2hpbGQgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZ3JvdXBzLmNyZWF0ZUNoaWxkJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuZ3JvdXBzLmhpc3RvcnkgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZ3JvdXBzLmhpc3RvcnknKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5ncm91cHMuaW5mbyA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9ncm91cHMuaW5mbycpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmdyb3Vwcy5pbnZpdGUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZ3JvdXBzLmludml0ZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmdyb3Vwcy5raWNrID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2dyb3Vwcy5raWNrJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuZ3JvdXBzLmxlYXZlID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2dyb3Vwcy5sZWF2ZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmdyb3Vwcy5saXN0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2dyb3Vwcy5saXN0JykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuZ3JvdXBzLm1hcmsgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZ3JvdXBzLm1hcmsnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5ncm91cHMub3BlbiA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9ncm91cHMub3BlbicpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmdyb3Vwcy5yZW5hbWUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZ3JvdXBzLnJlbmFtZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLmdyb3Vwcy5yZXBsaWVzID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2dyb3Vwcy5yZXBsaWVzJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuZ3JvdXBzLnNldFB1cnBvc2UgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZ3JvdXBzLnNldFB1cnBvc2UnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5ncm91cHMuc2V0VG9waWMgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vZ3JvdXBzLnNldFRvcGljJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuZ3JvdXBzLnVuYXJjaGl2ZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9ncm91cHMudW5hcmNoaXZlJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuaW0uY2xvc2UgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vaW0uY2xvc2UnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5pbS5oaXN0b3J5ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2ltLmhpc3RvcnknKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5pbS5saXN0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2ltLmxpc3QnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5pbS5tYXJrID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2ltLm1hcmsnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5pbS5vcGVuID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2ltLm9wZW4nKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5pbS5yZXBsaWVzID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL2ltLnJlcGxpZXMnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5tcGltLmNsb3NlID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL21waW0uY2xvc2UnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5tcGltLmhpc3RvcnkgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vbXBpbS5oaXN0b3J5JykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQubXBpbS5saXN0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL21waW0ubGlzdCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLm1waW0ubWFyayA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9tcGltLm1hcmsnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5tcGltLm9wZW4gPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vbXBpbS5vcGVuJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQubXBpbS5yZXBsaWVzID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL21waW0ucmVwbGllcycpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnBpbnMuYWRkID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3BpbnMuYWRkJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQucGlucy5saXN0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3BpbnMubGlzdCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnBpbnMucmVtb3ZlID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3BpbnMucmVtb3ZlJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQucmVhY3Rpb25zLmFkZCA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9yZWFjdGlvbnMuYWRkJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQucmVhY3Rpb25zLmdldCA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9yZWFjdGlvbnMuZ2V0JykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQucmVhY3Rpb25zLmxpc3QgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vcmVhY3Rpb25zLmxpc3QnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5yZWFjdGlvbnMucmVtb3ZlID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3JlYWN0aW9ucy5yZW1vdmUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5yZW1pbmRlcnMuYWRkID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3JlbWluZGVycy5hZGQnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5yZW1pbmRlcnMuY29tcGxldGUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vcmVtaW5kZXJzLmNvbXBsZXRlJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQucmVtaW5kZXJzLmRlbGV0ZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9yZW1pbmRlcnMuZGVsZXRlJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQucmVtaW5kZXJzLmluZm8gPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vcmVtaW5kZXJzLmluZm8nKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5yZW1pbmRlcnMubGlzdCA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9yZW1pbmRlcnMubGlzdCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnJ0bS5jb25uZWN0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3J0bS5jb25uZWN0JykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQucnRtLnN0YXJ0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3J0bS5zdGFydCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnNlYXJjaC5hbGwgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vc2VhcmNoLmFsbCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnNlYXJjaC5maWxlcyA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9zZWFyY2guZmlsZXMnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC5zZWFyY2gubWVzc2FnZXMgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vc2VhcmNoLm1lc3NhZ2VzJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQuc3RhcnMuYWRkID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3N0YXJzLmFkZCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnN0YXJzLmxpc3QgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vc3RhcnMubGlzdCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnN0YXJzLnJlbW92ZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi9zdGFycy5yZW1vdmUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC50ZWFtLmFjY2Vzc0xvZ3MgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdGVhbS5hY2Nlc3NMb2dzJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQudGVhbS5iaWxsYWJsZUluZm8gPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdGVhbS5iaWxsYWJsZUluZm8nKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC50ZWFtLmluZm8gPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdGVhbS5pbmZvJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQudGVhbS5pbnRlZ3JhdGlvbkxvZ3MgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdGVhbS5pbnRlZ3JhdGlvbkxvZ3MnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC50ZWFtLnByb2ZpbGUuZ2V0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3RlYW0ucHJvZmlsZS5nZXQnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC51c2VyZ3JvdXBzLmNyZWF0ZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi91c2VyZ3JvdXBzLmNyZWF0ZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnVzZXJncm91cHMuZGlzYWJsZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi91c2VyZ3JvdXBzLmRpc2FibGUnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC51c2VyZ3JvdXBzLmVuYWJsZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi91c2VyZ3JvdXBzLmVuYWJsZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnVzZXJncm91cHMubGlzdCA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi91c2VyZ3JvdXBzLmxpc3QnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC51c2VyZ3JvdXBzLnVwZGF0ZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi91c2VyZ3JvdXBzLnVwZGF0ZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnVzZXJncm91cHMudXNlcnMubGlzdCA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi91c2VyZ3JvdXBzLnVzZXJzLmxpc3QnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC51c2VyZ3JvdXBzLnVzZXJzLnVwZGF0ZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi91c2VyZ3JvdXBzLnVzZXJzLnVwZGF0ZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnVzZXJzLmRlbGV0ZVBob3RvID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3VzZXJzLmRlbGV0ZVBob3RvJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQudXNlcnMuZ2V0UHJlc2VuY2UgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdXNlcnMuZ2V0UHJlc2VuY2UnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC51c2Vycy5pZGVudGl0eSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi91c2Vycy5pZGVudGl0eScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnVzZXJzLmluZm8gPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdXNlcnMuaW5mbycpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnVzZXJzLmxpc3QgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdXNlcnMubGlzdCcpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuICBhcHBsaWVkLnVzZXJzLnByb2ZpbGUuZ2V0ID0gZnVuY3Rpb24gKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgICBwYXJhbXMudG9rZW4gPSB0b2tlbjtcbiAgICByZXF1aXJlKCcuL3VzZXJzLnByb2ZpbGUuZ2V0JykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQudXNlcnMucHJvZmlsZS5zZXQgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdXNlcnMucHJvZmlsZS5zZXQnKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC51c2Vycy5zZXRBY3RpdmUgPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdXNlcnMuc2V0QWN0aXZlJykuY2FsbCh7fSwgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH07XG4gIGFwcGxpZWQudXNlcnMuc2V0UGhvdG8gPSBmdW5jdGlvbiAocGFyYW1zLCBjYWxsYmFjaykge1xuICAgIHBhcmFtcy50b2tlbiA9IHRva2VuO1xuICAgIHJlcXVpcmUoJy4vdXNlcnMuc2V0UGhvdG8nKS5jYWxsKHt9LCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfTtcbiAgYXBwbGllZC51c2Vycy5zZXRQcmVzZW5jZSA9IGZ1bmN0aW9uIChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcGFyYW1zLnRva2VuID0gdG9rZW47XG4gICAgcmVxdWlyZSgnLi91c2Vycy5zZXRQcmVzZW5jZScpLmNhbGwoe30sIHBhcmFtcywgY2FsbGJhY2spO1xuICB9O1xuXG4gIHJldHVybiBhcHBsaWVkO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9hcGkuY2xpZW50LmpzXG4vLyBtb2R1bGUgaWQgPSAxNTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JvdXBzcmVwbGllcztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIGdyb3Vwc3JlcGxpZXMocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAnZ3JvdXBzLnJlcGxpZXMnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2dyb3Vwcy5yZXBsaWVzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaW1yZXBsaWVzO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gaW1yZXBsaWVzKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ2ltLnJlcGxpZXMnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ltLnJlcGxpZXMuanNcbi8vIG1vZHVsZSBpZCA9IDE1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBtcGltcmVwbGllcztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIG1waW1yZXBsaWVzKHBhcmFtcywgY2FsbGJhY2spIHtcbiAgdmFyIG5zID0gJ21waW0ucmVwbGllcyc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvbXBpbS5yZXBsaWVzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlcnNkZWxldGVQaG90bztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHVzZXJzZGVsZXRlUGhvdG8ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAndXNlcnMuZGVsZXRlUGhvdG8nO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJzLmRlbGV0ZVBob3RvLmpzXG4vLyBtb2R1bGUgaWQgPSAxNTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlcnNzZXRQaG90bztcblxudmFyIF9leGVjID0gcmVxdWlyZSgnLi9fZXhlYycpO1xuXG52YXIgX2V4ZWMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXhlYyk7XG5cbnZhciBfdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZScpO1xuXG52YXIgX3ZhbGlkYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3ZhbGlkYXRlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gdGhpcyBmaWxlIHdhcyBnZW5lcmF0ZWQgYnkgLi9zY3JpcHRzL2dlbmVyYXRlLXdlYi1hcGlcbmZ1bmN0aW9uIHVzZXJzc2V0UGhvdG8ocGFyYW1zLCBjYWxsYmFjaykge1xuICB2YXIgbnMgPSAndXNlcnMuc2V0UGhvdG8nO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3VzZXJzLnNldFBob3RvLmpzXG4vLyBtb2R1bGUgaWQgPSAxNThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2JvdHMgPSByZXF1aXJlKCcuL2JvdHMuaW5mbycpO1xuXG52YXIgX2JvdHMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYm90cyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgaW5mbzogX2JvdHMyLmRlZmF1bHRcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2JvdHMuanNcbi8vIG1vZHVsZSBpZCA9IDE1OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBhdXRocmV2b2tlO1xuXG52YXIgX2V4ZWMgPSByZXF1aXJlKCcuL19leGVjJyk7XG5cbnZhciBfZXhlYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGVjKTtcblxudmFyIF92YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlJyk7XG5cbnZhciBfdmFsaWRhdGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmFsaWRhdGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyB0aGlzIGZpbGUgd2FzIGdlbmVyYXRlZCBieSAuL3NjcmlwdHMvZ2VuZXJhdGUtd2ViLWFwaVxuZnVuY3Rpb24gYXV0aHJldm9rZShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdhdXRoLnJldm9rZSc7XG4gIHZhciBlcnIgPSAoMCwgX3ZhbGlkYXRlMi5kZWZhdWx0KShucywgcGFyYW1zKTtcbiAgaWYgKGVycikge1xuICAgIGNhbGxiYWNrKGVycik7XG4gIH0gZWxzZSB7XG4gICAgKDAsIF9leGVjMi5kZWZhdWx0KShucywgcGFyYW1zLCBjYWxsYmFjayk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvYXV0aC5yZXZva2UuanNcbi8vIG1vZHVsZSBpZCA9IDE2MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY2hhbm5lbHMgPSByZXF1aXJlKCcuL2NoYW5uZWxzLmFyY2hpdmUnKTtcblxudmFyIF9jaGFubmVsczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGFubmVscyk7XG5cbnZhciBfY2hhbm5lbHMzID0gcmVxdWlyZSgnLi9jaGFubmVscy5jcmVhdGUnKTtcblxudmFyIF9jaGFubmVsczQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGFubmVsczMpO1xuXG52YXIgX2NoYW5uZWxzNSA9IHJlcXVpcmUoJy4vY2hhbm5lbHMuaGlzdG9yeScpO1xuXG52YXIgX2NoYW5uZWxzNiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NoYW5uZWxzNSk7XG5cbnZhciBfY2hhbm5lbHM3ID0gcmVxdWlyZSgnLi9jaGFubmVscy5pbmZvJyk7XG5cbnZhciBfY2hhbm5lbHM4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2hhbm5lbHM3KTtcblxudmFyIF9jaGFubmVsczkgPSByZXF1aXJlKCcuL2NoYW5uZWxzLmludml0ZScpO1xuXG52YXIgX2NoYW5uZWxzMTAgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGFubmVsczkpO1xuXG52YXIgX2NoYW5uZWxzMTEgPSByZXF1aXJlKCcuL2NoYW5uZWxzLmpvaW4nKTtcblxudmFyIF9jaGFubmVsczEyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2hhbm5lbHMxMSk7XG5cbnZhciBfY2hhbm5lbHMxMyA9IHJlcXVpcmUoJy4vY2hhbm5lbHMua2ljaycpO1xuXG52YXIgX2NoYW5uZWxzMTQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGFubmVsczEzKTtcblxudmFyIF9jaGFubmVsczE1ID0gcmVxdWlyZSgnLi9jaGFubmVscy5sZWF2ZScpO1xuXG52YXIgX2NoYW5uZWxzMTYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGFubmVsczE1KTtcblxudmFyIF9jaGFubmVsczE3ID0gcmVxdWlyZSgnLi9jaGFubmVscy5saXN0Jyk7XG5cbnZhciBfY2hhbm5lbHMxOCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NoYW5uZWxzMTcpO1xuXG52YXIgX2NoYW5uZWxzMTkgPSByZXF1aXJlKCcuL2NoYW5uZWxzLm1hcmsnKTtcblxudmFyIF9jaGFubmVsczIwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2hhbm5lbHMxOSk7XG5cbnZhciBfY2hhbm5lbHMyMSA9IHJlcXVpcmUoJy4vY2hhbm5lbHMucmVuYW1lJyk7XG5cbnZhciBfY2hhbm5lbHMyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NoYW5uZWxzMjEpO1xuXG52YXIgX2NoYW5uZWxzMjMgPSByZXF1aXJlKCcuL2NoYW5uZWxzLnJlcGxpZXMnKTtcblxudmFyIF9jaGFubmVsczI0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2hhbm5lbHMyMyk7XG5cbnZhciBfY2hhbm5lbHMyNSA9IHJlcXVpcmUoJy4vY2hhbm5lbHMuc2V0UHVycG9zZScpO1xuXG52YXIgX2NoYW5uZWxzMjYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGFubmVsczI1KTtcblxudmFyIF9jaGFubmVsczI3ID0gcmVxdWlyZSgnLi9jaGFubmVscy5zZXRUb3BpYycpO1xuXG52YXIgX2NoYW5uZWxzMjggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGFubmVsczI3KTtcblxudmFyIF9jaGFubmVsczI5ID0gcmVxdWlyZSgnLi9jaGFubmVscy51bmFyY2hpdmUnKTtcblxudmFyIF9jaGFubmVsczMwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2hhbm5lbHMyOSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgYXJjaGl2ZTogX2NoYW5uZWxzMi5kZWZhdWx0LFxuICBjcmVhdGU6IF9jaGFubmVsczQuZGVmYXVsdCxcbiAgaGlzdG9yeTogX2NoYW5uZWxzNi5kZWZhdWx0LFxuICBpbmZvOiBfY2hhbm5lbHM4LmRlZmF1bHQsXG4gIGludml0ZTogX2NoYW5uZWxzMTAuZGVmYXVsdCxcbiAgam9pbjogX2NoYW5uZWxzMTIuZGVmYXVsdCxcbiAga2ljazogX2NoYW5uZWxzMTQuZGVmYXVsdCxcbiAgbGVhdmU6IF9jaGFubmVsczE2LmRlZmF1bHQsXG4gIGxpc3Q6IF9jaGFubmVsczE4LmRlZmF1bHQsXG4gIG1hcms6IF9jaGFubmVsczIwLmRlZmF1bHQsXG4gIHJlbmFtZTogX2NoYW5uZWxzMjIuZGVmYXVsdCxcbiAgcmVwbGllczogX2NoYW5uZWxzMjQuZGVmYXVsdCxcbiAgc2V0UHVycG9zZTogX2NoYW5uZWxzMjYuZGVmYXVsdCxcbiAgc2V0VG9waWM6IF9jaGFubmVsczI4LmRlZmF1bHQsXG4gIHVuYXJjaGl2ZTogX2NoYW5uZWxzMzAuZGVmYXVsdFxufTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvY2hhbm5lbHMuanNcbi8vIG1vZHVsZSBpZCA9IDE2MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY2hhdCA9IHJlcXVpcmUoJy4vY2hhdC5kZWxldGUnKTtcblxudmFyIF9jaGF0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NoYXQpO1xuXG52YXIgX2NoYXQzID0gcmVxdWlyZSgnLi9jaGF0Lm1lTWVzc2FnZScpO1xuXG52YXIgX2NoYXQ0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2hhdDMpO1xuXG52YXIgX2NoYXQ1ID0gcmVxdWlyZSgnLi9jaGF0LnBvc3RNZXNzYWdlJyk7XG5cbnZhciBfY2hhdDYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGF0NSk7XG5cbnZhciBfY2hhdDcgPSByZXF1aXJlKCcuL2NoYXQudW5mdXJsJyk7XG5cbnZhciBfY2hhdDggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jaGF0Nyk7XG5cbnZhciBfY2hhdDkgPSByZXF1aXJlKCcuL2NoYXQudXBkYXRlJyk7XG5cbnZhciBfY2hhdDEwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2hhdDkpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIGRlbGV0ZTogX2NoYXQyLmRlZmF1bHQsXG4gIG1lTWVzc2FnZTogX2NoYXQ0LmRlZmF1bHQsXG4gIHBvc3RNZXNzYWdlOiBfY2hhdDYuZGVmYXVsdCxcbiAgdW5mdXJsOiBfY2hhdDguZGVmYXVsdCxcbiAgdXBkYXRlOiBfY2hhdDEwLmRlZmF1bHRcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2NoYXQuanNcbi8vIG1vZHVsZSBpZCA9IDE2MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZG5kID0gcmVxdWlyZSgnLi9kbmQuaW5mbycpO1xuXG52YXIgX2RuZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kbmQpO1xuXG52YXIgX2RuZDMgPSByZXF1aXJlKCcuL2RuZC5lbmREbmQnKTtcblxudmFyIF9kbmQ0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZG5kMyk7XG5cbnZhciBfZG5kNSA9IHJlcXVpcmUoJy4vZG5kLmVuZFNub296ZScpO1xuXG52YXIgX2RuZDYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kbmQ1KTtcblxudmFyIF9kbmQ3ID0gcmVxdWlyZSgnLi9kbmQuc2V0U25vb3plJyk7XG5cbnZhciBfZG5kOCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RuZDcpO1xuXG52YXIgX2RuZDkgPSByZXF1aXJlKCcuL2RuZC50ZWFtSW5mbycpO1xuXG52YXIgX2RuZDEwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZG5kOSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgaW5mbzogX2RuZDIuZGVmYXVsdCwgZW5kRG5kOiBfZG5kNC5kZWZhdWx0LCBlbmRTbm9vemU6IF9kbmQ2LmRlZmF1bHQsIHNldFNub296ZTogX2RuZDguZGVmYXVsdCwgdGVhbUluZm86IF9kbmQxMC5kZWZhdWx0XG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9kbmQuanNcbi8vIG1vZHVsZSBpZCA9IDE2M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZmlsZXMgPSByZXF1aXJlKCcuL2ZpbGVzLmRlbGV0ZScpO1xuXG52YXIgX2ZpbGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ZpbGVzKTtcblxudmFyIF9maWxlczMgPSByZXF1aXJlKCcuL2ZpbGVzLmluZm8nKTtcblxudmFyIF9maWxlczQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9maWxlczMpO1xuXG52YXIgX2ZpbGVzNSA9IHJlcXVpcmUoJy4vZmlsZXMubGlzdCcpO1xuXG52YXIgX2ZpbGVzNiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ZpbGVzNSk7XG5cbnZhciBfZmlsZXM3ID0gcmVxdWlyZSgnLi9maWxlcy51cGxvYWQnKTtcblxudmFyIF9maWxlczggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9maWxlczcpO1xuXG52YXIgX2ZpbGVzQ29tbWVudHMgPSByZXF1aXJlKCcuL2ZpbGVzLmNvbW1lbnRzLmFkZCcpO1xuXG52YXIgX2ZpbGVzQ29tbWVudHMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZmlsZXNDb21tZW50cyk7XG5cbnZhciBfZmlsZXNDb21tZW50czMgPSByZXF1aXJlKCcuL2ZpbGVzLmNvbW1lbnRzLmRlbGV0ZScpO1xuXG52YXIgX2ZpbGVzQ29tbWVudHM0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZmlsZXNDb21tZW50czMpO1xuXG52YXIgX2ZpbGVzQ29tbWVudHM1ID0gcmVxdWlyZSgnLi9maWxlcy5jb21tZW50cy5lZGl0Jyk7XG5cbnZhciBfZmlsZXNDb21tZW50czYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9maWxlc0NvbW1lbnRzNSk7XG5cbnZhciBfZmlsZXM5ID0gcmVxdWlyZSgnLi9maWxlcy5yZXZva2VQdWJsaWNVUkwnKTtcblxudmFyIF9maWxlczEwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZmlsZXM5KTtcblxudmFyIF9maWxlczExID0gcmVxdWlyZSgnLi9maWxlcy5zaGFyZWRQdWJsaWNVUkwnKTtcblxudmFyIF9maWxlczEyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZmlsZXMxMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgZGVsZXRlOiBfZmlsZXMyLmRlZmF1bHQsXG4gIGluZm86IF9maWxlczQuZGVmYXVsdCxcbiAgbGlzdDogX2ZpbGVzNi5kZWZhdWx0LFxuICB1cGxvYWQ6IF9maWxlczguZGVmYXVsdCxcbiAgY29tbWVudHM6IHtcbiAgICBhZGQ6IF9maWxlc0NvbW1lbnRzMi5kZWZhdWx0LFxuICAgIGRlbGV0ZTogX2ZpbGVzQ29tbWVudHM0LmRlZmF1bHQsXG4gICAgZWRpdDogX2ZpbGVzQ29tbWVudHM2LmRlZmF1bHRcbiAgfSxcbiAgcmV2b2tlUHVibGljVVJMOiBfZmlsZXMxMC5kZWZhdWx0LFxuICBzaGFyZWRQdWJsaWNVUkw6IF9maWxlczEyLmRlZmF1bHRcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL2ZpbGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2dyb3VwcyA9IHJlcXVpcmUoJy4vZ3JvdXBzLmFyY2hpdmUnKTtcblxudmFyIF9ncm91cHMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JvdXBzKTtcblxudmFyIF9ncm91cHMzID0gcmVxdWlyZSgnLi9ncm91cHMuY2xvc2UnKTtcblxudmFyIF9ncm91cHM0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JvdXBzMyk7XG5cbnZhciBfZ3JvdXBzNSA9IHJlcXVpcmUoJy4vZ3JvdXBzLmNyZWF0ZScpO1xuXG52YXIgX2dyb3VwczYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ncm91cHM1KTtcblxudmFyIF9ncm91cHM3ID0gcmVxdWlyZSgnLi9ncm91cHMuY3JlYXRlQ2hpbGQnKTtcblxudmFyIF9ncm91cHM4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JvdXBzNyk7XG5cbnZhciBfZ3JvdXBzOSA9IHJlcXVpcmUoJy4vZ3JvdXBzLmhpc3RvcnknKTtcblxudmFyIF9ncm91cHMxMCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dyb3VwczkpO1xuXG52YXIgX2dyb3VwczExID0gcmVxdWlyZSgnLi9ncm91cHMuaW5mbycpO1xuXG52YXIgX2dyb3VwczEyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JvdXBzMTEpO1xuXG52YXIgX2dyb3VwczEzID0gcmVxdWlyZSgnLi9ncm91cHMuaW52aXRlJyk7XG5cbnZhciBfZ3JvdXBzMTQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ncm91cHMxMyk7XG5cbnZhciBfZ3JvdXBzMTUgPSByZXF1aXJlKCcuL2dyb3Vwcy5raWNrJyk7XG5cbnZhciBfZ3JvdXBzMTYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ncm91cHMxNSk7XG5cbnZhciBfZ3JvdXBzMTcgPSByZXF1aXJlKCcuL2dyb3Vwcy5sZWF2ZScpO1xuXG52YXIgX2dyb3VwczE4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JvdXBzMTcpO1xuXG52YXIgX2dyb3VwczE5ID0gcmVxdWlyZSgnLi9ncm91cHMubGlzdCcpO1xuXG52YXIgX2dyb3VwczIwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JvdXBzMTkpO1xuXG52YXIgX2dyb3VwczIxID0gcmVxdWlyZSgnLi9ncm91cHMubWFyaycpO1xuXG52YXIgX2dyb3VwczIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JvdXBzMjEpO1xuXG52YXIgX2dyb3VwczIzID0gcmVxdWlyZSgnLi9ncm91cHMub3BlbicpO1xuXG52YXIgX2dyb3VwczI0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JvdXBzMjMpO1xuXG52YXIgX2dyb3VwczI1ID0gcmVxdWlyZSgnLi9ncm91cHMucmVuYW1lJyk7XG5cbnZhciBfZ3JvdXBzMjYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ncm91cHMyNSk7XG5cbnZhciBfZ3JvdXBzMjcgPSByZXF1aXJlKCcuL2dyb3Vwcy5zZXRQdXJwb3NlJyk7XG5cbnZhciBfZ3JvdXBzMjggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ncm91cHMyNyk7XG5cbnZhciBfZ3JvdXBzMjkgPSByZXF1aXJlKCcuL2dyb3Vwcy5zZXRUb3BpYycpO1xuXG52YXIgX2dyb3VwczMwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3JvdXBzMjkpO1xuXG52YXIgX2dyb3VwczMxID0gcmVxdWlyZSgnLi9ncm91cHMudW5hcmNoaXZlJyk7XG5cbnZhciBfZ3JvdXBzMzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ncm91cHMzMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgYXJjaGl2ZTogX2dyb3VwczIuZGVmYXVsdCxcbiAgY2xvc2U6IF9ncm91cHM0LmRlZmF1bHQsXG4gIGNyZWF0ZTogX2dyb3VwczYuZGVmYXVsdCxcbiAgY3JlYXRlQ2hpbGQ6IF9ncm91cHM4LmRlZmF1bHQsXG4gIGhpc3Rvcnk6IF9ncm91cHMxMC5kZWZhdWx0LFxuICBpbmZvOiBfZ3JvdXBzMTIuZGVmYXVsdCxcbiAgaW52aXRlOiBfZ3JvdXBzMTQuZGVmYXVsdCxcbiAga2ljazogX2dyb3VwczE2LmRlZmF1bHQsXG4gIGxlYXZlOiBfZ3JvdXBzMTguZGVmYXVsdCxcbiAgbGlzdDogX2dyb3VwczIwLmRlZmF1bHQsXG4gIG1hcms6IF9ncm91cHMyMi5kZWZhdWx0LFxuICBvcGVuOiBfZ3JvdXBzMjQuZGVmYXVsdCxcbiAgcmVuYW1lOiBfZ3JvdXBzMjYuZGVmYXVsdCxcbiAgc2V0UHVycG9zZTogX2dyb3VwczI4LmRlZmF1bHQsXG4gIHNldFRvcGljOiBfZ3JvdXBzMzAuZGVmYXVsdCxcbiAgdW5hcmNoaXZlOiBfZ3JvdXBzMzIuZGVmYXVsdFxufTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvZ3JvdXBzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2ltID0gcmVxdWlyZSgnLi9pbS5jbG9zZScpO1xuXG52YXIgX2ltMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ltKTtcblxudmFyIF9pbTMgPSByZXF1aXJlKCcuL2ltLmhpc3RvcnknKTtcblxudmFyIF9pbTQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pbTMpO1xuXG52YXIgX2ltNSA9IHJlcXVpcmUoJy4vaW0ubGlzdCcpO1xuXG52YXIgX2ltNiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ltNSk7XG5cbnZhciBfaW03ID0gcmVxdWlyZSgnLi9pbS5tYXJrJyk7XG5cbnZhciBfaW04ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW03KTtcblxudmFyIF9pbTkgPSByZXF1aXJlKCcuL2ltLm9wZW4nKTtcblxudmFyIF9pbTEwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW05KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICBjbG9zZTogX2ltMi5kZWZhdWx0LCBoaXN0b3J5OiBfaW00LmRlZmF1bHQsIGxpc3Q6IF9pbTYuZGVmYXVsdCwgbWFyazogX2ltOC5kZWZhdWx0LCBvcGVuOiBfaW0xMC5kZWZhdWx0XG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9pbS5qc1xuLy8gbW9kdWxlIGlkID0gMTY2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9tcGltID0gcmVxdWlyZSgnLi9tcGltLmNsb3NlJyk7XG5cbnZhciBfbXBpbTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9tcGltKTtcblxudmFyIF9tcGltMyA9IHJlcXVpcmUoJy4vbXBpbS5oaXN0b3J5Jyk7XG5cbnZhciBfbXBpbTQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9tcGltMyk7XG5cbnZhciBfbXBpbTUgPSByZXF1aXJlKCcuL21waW0ubGlzdCcpO1xuXG52YXIgX21waW02ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbXBpbTUpO1xuXG52YXIgX21waW03ID0gcmVxdWlyZSgnLi9tcGltLm1hcmsnKTtcblxudmFyIF9tcGltOCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX21waW03KTtcblxudmFyIF9tcGltOSA9IHJlcXVpcmUoJy4vbXBpbS5vcGVuJyk7XG5cbnZhciBfbXBpbTEwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbXBpbTkpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIGNsb3NlOiBfbXBpbTIuZGVmYXVsdCxcbiAgaGlzdG9yeTogX21waW00LmRlZmF1bHQsXG4gIGxpc3Q6IF9tcGltNi5kZWZhdWx0LFxuICBtYXJrOiBfbXBpbTguZGVmYXVsdCxcbiAgb3BlbjogX21waW0xMC5kZWZhdWx0XG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9tcGltLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gb2F1dGhhY2Nlc3M7XG5cbnZhciBfZXhlYyA9IHJlcXVpcmUoJy4vX2V4ZWMnKTtcblxudmFyIF9leGVjMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZWMpO1xuXG52YXIgX3ZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUnKTtcblxudmFyIF92YWxpZGF0ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF92YWxpZGF0ZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGJ5IC4vc2NyaXB0cy9nZW5lcmF0ZS13ZWItYXBpXG5mdW5jdGlvbiBvYXV0aGFjY2VzcyhwYXJhbXMsIGNhbGxiYWNrKSB7XG4gIHZhciBucyA9ICdvYXV0aC5hY2Nlc3MnO1xuICB2YXIgZXJyID0gKDAsIF92YWxpZGF0ZTIuZGVmYXVsdCkobnMsIHBhcmFtcyk7XG4gIGlmIChlcnIpIHtcbiAgICBjYWxsYmFjayhlcnIpO1xuICB9IGVsc2Uge1xuICAgICgwLCBfZXhlYzIuZGVmYXVsdCkobnMsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL29hdXRoLmFjY2Vzcy5qc1xuLy8gbW9kdWxlIGlkID0gMTY4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9yZWFjdGlvbnMgPSByZXF1aXJlKCcuL3JlYWN0aW9ucy5hZGQnKTtcblxudmFyIF9yZWFjdGlvbnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3Rpb25zKTtcblxudmFyIF9yZWFjdGlvbnMzID0gcmVxdWlyZSgnLi9yZWFjdGlvbnMuZ2V0Jyk7XG5cbnZhciBfcmVhY3Rpb25zNCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0aW9uczMpO1xuXG52YXIgX3JlYWN0aW9uczUgPSByZXF1aXJlKCcuL3JlYWN0aW9ucy5saXN0Jyk7XG5cbnZhciBfcmVhY3Rpb25zNiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0aW9uczUpO1xuXG52YXIgX3JlYWN0aW9uczcgPSByZXF1aXJlKCcuL3JlYWN0aW9ucy5yZW1vdmUnKTtcblxudmFyIF9yZWFjdGlvbnM4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3Rpb25zNyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgYWRkOiBfcmVhY3Rpb25zMi5kZWZhdWx0LCBnZXQ6IF9yZWFjdGlvbnM0LmRlZmF1bHQsIGxpc3Q6IF9yZWFjdGlvbnM2LmRlZmF1bHQsIHJlbW92ZTogX3JlYWN0aW9uczguZGVmYXVsdFxufTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcmVhY3Rpb25zLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3JlbWluZGVycyA9IHJlcXVpcmUoJy4vcmVtaW5kZXJzLmFkZCcpO1xuXG52YXIgX3JlbWluZGVyczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZW1pbmRlcnMpO1xuXG52YXIgX3JlbWluZGVyczMgPSByZXF1aXJlKCcuL3JlbWluZGVycy5jb21wbGV0ZScpO1xuXG52YXIgX3JlbWluZGVyczQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZW1pbmRlcnMzKTtcblxudmFyIF9yZW1pbmRlcnM1ID0gcmVxdWlyZSgnLi9yZW1pbmRlcnMuZGVsZXRlJyk7XG5cbnZhciBfcmVtaW5kZXJzNiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlbWluZGVyczUpO1xuXG52YXIgX3JlbWluZGVyczcgPSByZXF1aXJlKCcuL3JlbWluZGVycy5pbmZvJyk7XG5cbnZhciBfcmVtaW5kZXJzOCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlbWluZGVyczcpO1xuXG52YXIgX3JlbWluZGVyczkgPSByZXF1aXJlKCcuL3JlbWluZGVycy5saXN0Jyk7XG5cbnZhciBfcmVtaW5kZXJzMTAgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZW1pbmRlcnM5KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICBhZGQ6IF9yZW1pbmRlcnMyLmRlZmF1bHQsIGNvbXBsZXRlOiBfcmVtaW5kZXJzNC5kZWZhdWx0LCBkZWxldGU6IF9yZW1pbmRlcnM2LmRlZmF1bHQsIGluZm86IF9yZW1pbmRlcnM4LmRlZmF1bHQsIGxpc3Q6IF9yZW1pbmRlcnMxMC5kZWZhdWx0XG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9yZW1pbmRlcnMuanNcbi8vIG1vZHVsZSBpZCA9IDE3MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfcGlucyA9IHJlcXVpcmUoJy4vcGlucy5hZGQnKTtcblxudmFyIF9waW5zMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BpbnMpO1xuXG52YXIgX3BpbnMzID0gcmVxdWlyZSgnLi9waW5zLmxpc3QnKTtcblxudmFyIF9waW5zNCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BpbnMzKTtcblxudmFyIF9waW5zNSA9IHJlcXVpcmUoJy4vcGlucy5yZW1vdmUnKTtcblxudmFyIF9waW5zNiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BpbnM1KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICBhZGQ6IF9waW5zMi5kZWZhdWx0LCBsaXN0OiBfcGluczQuZGVmYXVsdCwgcmVtb3ZlOiBfcGluczYuZGVmYXVsdFxufTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvcGlucy5qc1xuLy8gbW9kdWxlIGlkID0gMTcxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNsaWVudDtcblxudmFyIF9ydG0gPSByZXF1aXJlKCcuL3J0bS5zdGFydCcpO1xuXG52YXIgX3J0bTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ydG0pO1xuXG52YXIgX3J0bTMgPSByZXF1aXJlKCcuL3J0bS5ldmVudHMnKTtcblxudmFyIF9ydG00ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcnRtMyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIHNvY2tldCBmYWN0b3J5XG5mdW5jdGlvbiBjbGllbnQoKSB7XG5cbiAgLy8gYnVpbGQgYSBuZXcgYm90IGV2ZXJ5IHRpbWVcbiAgdmFyIGJvdCA9IHtcbiAgICBoYW5kbGVyczoge1xuICAgICAgc3RhcnRlZDogW11cbiAgICB9XG4gIH07XG5cbiAgLy8gYWRkIHVuZG9jdW1lbnRlZCBwaW5nIGV2ZW50XG4gIF9ydG00LmRlZmF1bHQucHVzaCgncG9uZycpO1xuXG4gIC8vIGdlbmVyYXRlIGV2ZW50IGhhbmRsZXIgcmVnaXN0cmF0aW9uIG1ldGhvZHNcbiAgX3J0bTQuZGVmYXVsdC5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7XG4gICAgYm90LmhhbmRsZXJzW2VdID0gW107XG4gICAgYm90W2VdID0gZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgIGJvdC5oYW5kbGVyc1tlXS5wdXNoKGhhbmRsZXIpO1xuICAgIH07XG4gIH0pO1xuXG4gIGJvdC5zdGFydGVkID0gZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICBib3QuaGFuZGxlcnNbJ3N0YXJ0ZWQnXS5wdXNoKGhhbmRsZXIpO1xuICB9O1xuXG4gIC8vIGtpY2tzIHVwIGEgd2ViIHNvY2tldCBjb25uZWN0aW9uXG4gIGJvdC5saXN0ZW4gPSBmdW5jdGlvbiBib3RMaXN0ZW4ocGFyYW1zLCBjYWxsYmFjaykge1xuICAgICgwLCBfcnRtMi5kZWZhdWx0KShwYXJhbXMsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgaWYgKGNhbGxiYWNrKSBjYWxsYmFjayhlcnIpO2Vsc2UgdGhyb3cgZXJyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZ3JhYiBhIGhhbmRsZSBvbiB0aGUgc29ja2V0XG4gICAgICAgIGJvdC53cyA9IG5ldyBXZWJTb2NrZXQoZGF0YS51cmwpO1xuICAgICAgICAvLyBkZWxlZ2F0ZSBldmVyeXRoaW5nXG4gICAgICAgIGJvdC53cy5vbm1lc3NhZ2UgPSBmdW5jdGlvbiBtZXNzYWdlKGUpIHtcbiAgICAgICAgICB2YXIganNvbiA9IEpTT04ucGFyc2UoZS5kYXRhKTtcbiAgICAgICAgICAvLyBDYWxsIGFsbCByZWdpc3RlcmVkIGhhbmRsZXJzIGZvciB0aGlzIGV2ZW50LCBpZiBhbnlcbiAgICAgICAgICBpZiAoYm90LmhhbmRsZXJzW2pzb24udHlwZV0pIGJvdC5oYW5kbGVyc1tqc29uLnR5cGVdLmZvckVhY2goZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgICAgIHJldHVybiBtLmNhbGwoe30sIGpzb24pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICAvLyBjYWxsIHN0YXJ0ZWQgY2FsbGJhY2tzXG4gICAgICAgIGJvdC5oYW5kbGVyc1snc3RhcnRlZCddLmZvckVhY2goZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgICByZXR1cm4gbS5jYWxsKHt9LCBkYXRhKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2sobnVsbCwgZGF0YSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgLy8gY2xvc2VzIHRoZSBzb2NrZXRcbiAgYm90LmNsb3NlID0gZnVuY3Rpb24gYm90Q2xvc2UoKSB7XG4gICAgYm90LndzLmNsb3NlKCk7XG4gIH07XG5cbiAgLy8vLy8vLy8vL1xuICByZXR1cm4gYm90O1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ydG0uY2xpZW50LWJyb3dzZXIuanNcbi8vIG1vZHVsZSBpZCA9IDE3MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbi8vIGdlbmVyYXRlZCB1c2luZyAuL3NjcmlwdHMvZ2VuZXJhdGUtYWxsXG52YXIgZXZlbnRzID0gWydhY2NvdW50c19jaGFuZ2VkJywgJ2JvdF9hZGRlZCcsICdib3RfY2hhbmdlZCcsICdjaGFubmVsX2FyY2hpdmUnLCAnY2hhbm5lbF9jcmVhdGVkJywgJ2NoYW5uZWxfZGVsZXRlZCcsICdjaGFubmVsX2hpc3RvcnlfY2hhbmdlZCcsICdjaGFubmVsX2pvaW5lZCcsICdjaGFubmVsX2xlZnQnLCAnY2hhbm5lbF9tYXJrZWQnLCAnY2hhbm5lbF9yZW5hbWUnLCAnY2hhbm5lbF91bmFyY2hpdmUnLCAnY29tbWFuZHNfY2hhbmdlZCcsICdkbmRfdXBkYXRlZCcsICdkbmRfdXBkYXRlZF91c2VyJywgJ2VtYWlsX2RvbWFpbl9jaGFuZ2VkJywgJ2Vtb2ppX2NoYW5nZWQnLCAnZmlsZV9jaGFuZ2UnLCAnZmlsZV9jb21tZW50X2FkZGVkJywgJ2ZpbGVfY29tbWVudF9kZWxldGVkJywgJ2ZpbGVfY29tbWVudF9lZGl0ZWQnLCAnZmlsZV9jcmVhdGVkJywgJ2ZpbGVfZGVsZXRlZCcsICdmaWxlX3B1YmxpYycsICdmaWxlX3NoYXJlZCcsICdmaWxlX3Vuc2hhcmVkJywgJ2dvb2RieWUnLCAnZ3JvdXBfYXJjaGl2ZScsICdncm91cF9jbG9zZScsICdncm91cF9oaXN0b3J5X2NoYW5nZWQnLCAnZ3JvdXBfam9pbmVkJywgJ2dyb3VwX2xlZnQnLCAnZ3JvdXBfbWFya2VkJywgJ2dyb3VwX29wZW4nLCAnZ3JvdXBfcmVuYW1lJywgJ2dyb3VwX3VuYXJjaGl2ZScsICdoZWxsbycsICdpbV9jbG9zZScsICdpbV9jcmVhdGVkJywgJ2ltX2hpc3RvcnlfY2hhbmdlZCcsICdpbV9tYXJrZWQnLCAnaW1fb3BlbicsICdsaW5rX3NoYXJlZCcsICdtYW51YWxfcHJlc2VuY2VfY2hhbmdlJywgJ21lbWJlcl9qb2luZWRfY2hhbm5lbCcsICdtZW1iZXJfbGVmdF9jaGFubmVsJywgJ21lc3NhZ2UnLCAnbWVzc2FnZS5jaGFubmVscycsICdtZXNzYWdlLmdyb3VwcycsICdtZXNzYWdlLmltJywgJ21lc3NhZ2UubXBpbScsICdwaW5fYWRkZWQnLCAncGluX3JlbW92ZWQnLCAncG9uZycsICdwcmVmX2NoYW5nZScsICdwcmVzZW5jZV9jaGFuZ2UnLCAncmVhY3Rpb25fYWRkZWQnLCAncmVhY3Rpb25fcmVtb3ZlZCcsICdyZWNvbm5lY3RfdXJsJywgJ3N0YXJfYWRkZWQnLCAnc3Rhcl9yZW1vdmVkJywgJ3N1YnRlYW1fY3JlYXRlZCcsICdzdWJ0ZWFtX3NlbGZfYWRkZWQnLCAnc3VidGVhbV9zZWxmX3JlbW92ZWQnLCAnc3VidGVhbV91cGRhdGVkJywgJ3RlYW1fZG9tYWluX2NoYW5nZScsICd0ZWFtX2pvaW4nLCAndGVhbV9taWdyYXRpb25fc3RhcnRlZCcsICd0ZWFtX3BsYW5fY2hhbmdlJywgJ3RlYW1fcHJlZl9jaGFuZ2UnLCAndGVhbV9wcm9maWxlX2NoYW5nZScsICd0ZWFtX3Byb2ZpbGVfZGVsZXRlJywgJ3RlYW1fcHJvZmlsZV9yZW9yZGVyJywgJ3RlYW1fcmVuYW1lJywgJ3VybF92ZXJpZmljYXRpb24nLCAndXNlcl9jaGFuZ2UnLCAndXNlcl90eXBpbmcnXTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZXZlbnRzO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9ydG0uZXZlbnRzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNzNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3NlYXJjaCA9IHJlcXVpcmUoJy4vc2VhcmNoLmFsbCcpO1xuXG52YXIgX3NlYXJjaDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zZWFyY2gpO1xuXG52YXIgX3NlYXJjaDMgPSByZXF1aXJlKCcuL3NlYXJjaC5maWxlcycpO1xuXG52YXIgX3NlYXJjaDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zZWFyY2gzKTtcblxudmFyIF9zZWFyY2g1ID0gcmVxdWlyZSgnLi9zZWFyY2gubWVzc2FnZXMnKTtcblxudmFyIF9zZWFyY2g2ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2VhcmNoNSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgYWxsOiBfc2VhcmNoMi5kZWZhdWx0LCBmaWxlczogX3NlYXJjaDQuZGVmYXVsdCwgbWVzc2FnZXM6IF9zZWFyY2g2LmRlZmF1bHRcbn07XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9kZXYtcHJvdG9zdHVicy9zcmMvcHJvdG9zdHViL3NsYWNrL25vZGVfbW9kdWxlcy9zbGFjay9tZXRob2RzL3NlYXJjaC5qc1xuLy8gbW9kdWxlIGlkID0gMTc0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9zdGFycyA9IHJlcXVpcmUoJy4vc3RhcnMuYWRkJyk7XG5cbnZhciBfc3RhcnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3RhcnMpO1xuXG52YXIgX3N0YXJzMyA9IHJlcXVpcmUoJy4vc3RhcnMubGlzdCcpO1xuXG52YXIgX3N0YXJzNCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3N0YXJzMyk7XG5cbnZhciBfc3RhcnM1ID0gcmVxdWlyZSgnLi9zdGFycy5yZW1vdmUnKTtcblxudmFyIF9zdGFyczYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zdGFyczUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIGFkZDogX3N0YXJzMi5kZWZhdWx0LCBsaXN0OiBfc3RhcnM0LmRlZmF1bHQsIHJlbW92ZTogX3N0YXJzNi5kZWZhdWx0XG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy9zdGFycy5qc1xuLy8gbW9kdWxlIGlkID0gMTc1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF90ZWFtID0gcmVxdWlyZSgnLi90ZWFtLmFjY2Vzc0xvZ3MnKTtcblxudmFyIF90ZWFtMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RlYW0pO1xuXG52YXIgX3RlYW0zID0gcmVxdWlyZSgnLi90ZWFtLmJpbGxhYmxlSW5mbycpO1xuXG52YXIgX3RlYW00ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdGVhbTMpO1xuXG52YXIgX3RlYW01ID0gcmVxdWlyZSgnLi90ZWFtLmluZm8nKTtcblxudmFyIF90ZWFtNiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RlYW01KTtcblxudmFyIF90ZWFtNyA9IHJlcXVpcmUoJy4vdGVhbS5pbnRlZ3JhdGlvbkxvZ3MnKTtcblxudmFyIF90ZWFtOCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RlYW03KTtcblxudmFyIF90ZWFtUHJvZmlsZSA9IHJlcXVpcmUoJy4vdGVhbS5wcm9maWxlLmdldCcpO1xuXG52YXIgX3RlYW1Qcm9maWxlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RlYW1Qcm9maWxlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICBhY2Nlc3NMb2dzOiBfdGVhbTIuZGVmYXVsdCxcbiAgYmlsbGFibGVJbmZvOiBfdGVhbTQuZGVmYXVsdCxcbiAgaW5mbzogX3RlYW02LmRlZmF1bHQsXG4gIGludGVncmF0aW9uTG9nczogX3RlYW04LmRlZmF1bHQsXG4gIHByb2ZpbGU6IHtcbiAgICBnZXQ6IF90ZWFtUHJvZmlsZTIuZGVmYXVsdFxuICB9XG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy90ZWFtLmpzXG4vLyBtb2R1bGUgaWQgPSAxNzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3VzZXJncm91cHMgPSByZXF1aXJlKCcuL3VzZXJncm91cHMuY3JlYXRlJyk7XG5cbnZhciBfdXNlcmdyb3VwczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91c2VyZ3JvdXBzKTtcblxudmFyIF91c2VyZ3JvdXBzMyA9IHJlcXVpcmUoJy4vdXNlcmdyb3Vwcy5kaXNhYmxlJyk7XG5cbnZhciBfdXNlcmdyb3VwczQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91c2VyZ3JvdXBzMyk7XG5cbnZhciBfdXNlcmdyb3VwczUgPSByZXF1aXJlKCcuL3VzZXJncm91cHMuZW5hYmxlJyk7XG5cbnZhciBfdXNlcmdyb3VwczYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91c2VyZ3JvdXBzNSk7XG5cbnZhciBfdXNlcmdyb3VwczcgPSByZXF1aXJlKCcuL3VzZXJncm91cHMubGlzdCcpO1xuXG52YXIgX3VzZXJncm91cHM4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdXNlcmdyb3VwczcpO1xuXG52YXIgX3VzZXJncm91cHM5ID0gcmVxdWlyZSgnLi91c2VyZ3JvdXBzLnVwZGF0ZScpO1xuXG52YXIgX3VzZXJncm91cHMxMCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VzZXJncm91cHM5KTtcblxudmFyIF91c2VyZ3JvdXBzVXNlcnMgPSByZXF1aXJlKCcuL3VzZXJncm91cHMudXNlcnMubGlzdCcpO1xuXG52YXIgX3VzZXJncm91cHNVc2VyczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91c2VyZ3JvdXBzVXNlcnMpO1xuXG52YXIgX3VzZXJncm91cHNVc2VyczMgPSByZXF1aXJlKCcuL3VzZXJncm91cHMudXNlcnMudXBkYXRlJyk7XG5cbnZhciBfdXNlcmdyb3Vwc1VzZXJzNCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VzZXJncm91cHNVc2VyczMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIGNyZWF0ZTogX3VzZXJncm91cHMyLmRlZmF1bHQsXG4gIGRpc2FibGU6IF91c2VyZ3JvdXBzNC5kZWZhdWx0LFxuICBlbmFibGU6IF91c2VyZ3JvdXBzNi5kZWZhdWx0LFxuICBsaXN0OiBfdXNlcmdyb3VwczguZGVmYXVsdCxcbiAgdXBkYXRlOiBfdXNlcmdyb3VwczEwLmRlZmF1bHQsXG4gIHVzZXJzOiB7XG4gICAgbGlzdDogX3VzZXJncm91cHNVc2VyczIuZGVmYXVsdCxcbiAgICB1cGRhdGU6IF91c2VyZ3JvdXBzVXNlcnM0LmRlZmF1bHRcbiAgfVxufTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NsYWNrL21ldGhvZHMvdXNlcmdyb3Vwcy5qc1xuLy8gbW9kdWxlIGlkID0gMTc3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF91c2VycyA9IHJlcXVpcmUoJy4vdXNlcnMuZ2V0UHJlc2VuY2UnKTtcblxudmFyIF91c2VyczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91c2Vycyk7XG5cbnZhciBfdXNlcnNQcm9maWxlID0gcmVxdWlyZSgnLi91c2Vycy5wcm9maWxlLmdldCcpO1xuXG52YXIgX3VzZXJzUHJvZmlsZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91c2Vyc1Byb2ZpbGUpO1xuXG52YXIgX3VzZXJzMyA9IHJlcXVpcmUoJy4vdXNlcnMuaWRlbnRpdHknKTtcblxudmFyIF91c2VyczQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91c2VyczMpO1xuXG52YXIgX3VzZXJzNSA9IHJlcXVpcmUoJy4vdXNlcnMuaW5mbycpO1xuXG52YXIgX3VzZXJzNiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VzZXJzNSk7XG5cbnZhciBfdXNlcnM3ID0gcmVxdWlyZSgnLi91c2Vycy5saXN0Jyk7XG5cbnZhciBfdXNlcnM4ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdXNlcnM3KTtcblxudmFyIF91c2VyczkgPSByZXF1aXJlKCcuL3VzZXJzLnNldEFjdGl2ZScpO1xuXG52YXIgX3VzZXJzMTAgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91c2VyczkpO1xuXG52YXIgX3VzZXJzMTEgPSByZXF1aXJlKCcuL3VzZXJzLnNldFByZXNlbmNlJyk7XG5cbnZhciBfdXNlcnMxMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VzZXJzMTEpO1xuXG52YXIgX3VzZXJzUHJvZmlsZTMgPSByZXF1aXJlKCcuL3VzZXJzLnByb2ZpbGUuc2V0Jyk7XG5cbnZhciBfdXNlcnNQcm9maWxlNCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VzZXJzUHJvZmlsZTMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIGdldFByZXNlbmNlOiBfdXNlcnMyLmRlZmF1bHQsXG4gIGlkZW50aXR5OiBfdXNlcnM0LmRlZmF1bHQsXG4gIGluZm86IF91c2VyczYuZGVmYXVsdCxcbiAgbGlzdDogX3VzZXJzOC5kZWZhdWx0LFxuICBwcm9maWxlOiB7XG4gICAgZ2V0OiBfdXNlcnNQcm9maWxlMi5kZWZhdWx0LFxuICAgIHNldDogX3VzZXJzUHJvZmlsZTQuZGVmYXVsdFxuICB9LFxuICBzZXRBY3RpdmU6IF91c2VyczEwLmRlZmF1bHQsXG4gIHNldFByZXNlbmNlOiBfdXNlcnMxMi5kZWZhdWx0XG59O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vZGV2LXByb3Rvc3R1YnMvc3JjL3Byb3Rvc3R1Yi9zbGFjay9ub2RlX21vZHVsZXMvc2xhY2svbWV0aG9kcy91c2Vycy5qc1xuLy8gbW9kdWxlIGlkID0gMTc4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8vIHZlcnNpb246IDAuNy4xXG4vLyBkYXRlOiBTYXQgSnVsIDIyIDIwMTcgMjA6MTc6NDkgR01UKzAxMDAgKEdNVCBEYXlsaWdodCBUaW1lKVxuLy8gbGljZW5jZTogXG4vKipcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXG4qIENvcHlyaWdodCAyMDE2IElORVNDLUlEXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxuKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0FcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcbiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU5cbipcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4qIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKiovXG5cblxuKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoXCJTeW5jaGVyXCIsIFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcIlN5bmNoZXJcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wiXCJdID0gcm9vdFtcIlwiXSB8fCB7fSwgcm9vdFtcIlwiXVtcIlN5bmNoZXJcIl0gPSBmYWN0b3J5KCk7XG59KSh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAvKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gaWRlbnRpdHkgZnVuY3Rpb24gZm9yIGNhbGxpbmcgaGFybW9ueSBpbXBvcnRzIHdpdGggdGhlIGNvcnJlY3QgY29udGV4dFxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmkgPSBmdW5jdGlvbih2YWx1ZSkgeyByZXR1cm4gdmFsdWU7IH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4vKioqKioqLyBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbi8qKioqKiovIFx0XHRcdFx0Y29uZmlndXJhYmxlOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbi8qKioqKiovIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbi8qKioqKiovIFx0XHRcdH0pO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuLyoqKioqKi8gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuLyoqKioqKi8gXHRcdHJldHVybiBnZXR0ZXI7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLyoqKioqKi8gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxNDIpO1xuLyoqKioqKi8gfSlcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyAoW1xuLyogMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG52YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0ge3ZlcnNpb246ICcyLjQuMCd9O1xuaWYodHlwZW9mIF9fZSA9PSAnbnVtYmVyJylfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cbi8qKiovIH0pLFxuLyogMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxudmFyIGdsb2JhbCA9IG1vZHVsZS5leHBvcnRzID0gdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuTWF0aCA9PSBNYXRoXG4gID8gd2luZG93IDogdHlwZW9mIHNlbGYgIT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5NYXRoID09IE1hdGggPyBzZWxmIDogRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbmlmKHR5cGVvZiBfX2cgPT0gJ251bWJlcicpX19nID0gZ2xvYmFsOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cbi8qKiovIH0pLFxuLyogMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyBUaGFuaydzIElFOCBmb3IgaGlzIGZ1bm55IGRlZmluZVByb3BlcnR5XG5tb2R1bGUuZXhwb3J0cyA9ICFfX3dlYnBhY2tfcmVxdWlyZV9fKDExKShmdW5jdGlvbigpe1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHtnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiA3OyB9fSkuYSAhPSA3O1xufSk7XG5cbi8qKiovIH0pLFxuLyogMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgc3RvcmUgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMzApKCd3a3MnKVxuICAsIHVpZCAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIzKVxuICAsIFN5bWJvbCAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpLlN5bWJvbFxuICAsIFVTRV9TWU1CT0wgPSB0eXBlb2YgU3ltYm9sID09ICdmdW5jdGlvbic7XG5cbnZhciAkZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obmFtZSl7XG4gIHJldHVybiBzdG9yZVtuYW1lXSB8fCAoc3RvcmVbbmFtZV0gPVxuICAgIFVTRV9TWU1CT0wgJiYgU3ltYm9sW25hbWVdIHx8IChVU0VfU1lNQk9MID8gU3ltYm9sIDogdWlkKSgnU3ltYm9sLicgKyBuYW1lKSk7XG59O1xuXG4kZXhwb3J0cy5zdG9yZSA9IHN0b3JlO1xuXG4vKioqLyB9KSxcbi8qIDQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIGFuT2JqZWN0ICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KVxuICAsIElFOF9ET01fREVGSU5FID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNSlcbiAgLCB0b1ByaW1pdGl2ZSAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMjEpXG4gICwgZFAgICAgICAgICAgICAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IF9fd2VicGFja19yZXF1aXJlX18oMikgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKXtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmKElFOF9ET01fREVGSU5FKXRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoKGUpeyAvKiBlbXB0eSAqLyB9XG4gIGlmKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcyl0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZigndmFsdWUnIGluIEF0dHJpYnV0ZXMpT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTtcblxuLyoqKi8gfSksXG4vKiA1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBpc09iamVjdCA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgaWYoIWlzT2JqZWN0KGl0KSl0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG5cbi8qKiovIH0pLFxuLyogNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PT0gJ29iamVjdCcgPyBpdCAhPT0gbnVsbCA6IHR5cGVvZiBpdCA9PT0gJ2Z1bmN0aW9uJztcbn07XG5cbi8qKiovIH0pLFxuLyogNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgZFAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNClcbiAgLCBjcmVhdGVEZXNjID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNSk7XG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMikgPyBmdW5jdGlvbihvYmplY3QsIGtleSwgdmFsdWUpe1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uKG9iamVjdCwga2V5LCB2YWx1ZSl7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuXG4vKioqLyB9KSxcbi8qIDggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn07XG5cbi8qKiovIH0pLFxuLyogOSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgZ2xvYmFsICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKVxuICAsIGNvcmUgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMClcbiAgLCBjdHggICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE0KVxuICAsIGhpZGUgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNylcbiAgLCBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxudmFyICRleHBvcnQgPSBmdW5jdGlvbih0eXBlLCBuYW1lLCBzb3VyY2Upe1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRlxuICAgICwgSVNfR0xPQkFMID0gdHlwZSAmICRleHBvcnQuR1xuICAgICwgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuU1xuICAgICwgSVNfUFJPVE8gID0gdHlwZSAmICRleHBvcnQuUFxuICAgICwgSVNfQklORCAgID0gdHlwZSAmICRleHBvcnQuQlxuICAgICwgSVNfV1JBUCAgID0gdHlwZSAmICRleHBvcnQuV1xuICAgICwgZXhwb3J0cyAgID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSlcbiAgICAsIGV4cFByb3RvICA9IGV4cG9ydHNbUFJPVE9UWVBFXVxuICAgICwgdGFyZ2V0ICAgID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXVxuICAgICwga2V5LCBvd24sIG91dDtcbiAgaWYoSVNfR0xPQkFMKXNvdXJjZSA9IG5hbWU7XG4gIGZvcihrZXkgaW4gc291cmNlKXtcbiAgICAvLyBjb250YWlucyBpbiBuYXRpdmVcbiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkO1xuICAgIGlmKG93biAmJiBrZXkgaW4gZXhwb3J0cyljb250aW51ZTtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IG93biA/IHRhcmdldFtrZXldIDogc291cmNlW2tleV07XG4gICAgLy8gcHJldmVudCBnbG9iYWwgcG9sbHV0aW9uIGZvciBuYW1lc3BhY2VzXG4gICAgZXhwb3J0c1trZXldID0gSVNfR0xPQkFMICYmIHR5cGVvZiB0YXJnZXRba2V5XSAhPSAnZnVuY3Rpb24nID8gc291cmNlW2tleV1cbiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dFxuICAgIDogSVNfQklORCAmJiBvd24gPyBjdHgob3V0LCBnbG9iYWwpXG4gICAgLy8gd3JhcCBnbG9iYWwgY29uc3RydWN0b3JzIGZvciBwcmV2ZW50IGNoYW5nZSB0aGVtIGluIGxpYnJhcnlcbiAgICA6IElTX1dSQVAgJiYgdGFyZ2V0W2tleV0gPT0gb3V0ID8gKGZ1bmN0aW9uKEMpe1xuICAgICAgdmFyIEYgPSBmdW5jdGlvbihhLCBiLCBjKXtcbiAgICAgICAgaWYodGhpcyBpbnN0YW5jZW9mIEMpe1xuICAgICAgICAgIHN3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtcbiAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBDO1xuICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gbmV3IEMoYSk7XG4gICAgICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgQyhhLCBiKTtcbiAgICAgICAgICB9IHJldHVybiBuZXcgQyhhLCBiLCBjKTtcbiAgICAgICAgfSByZXR1cm4gQy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfTtcbiAgICAgIEZbUFJPVE9UWVBFXSA9IENbUFJPVE9UWVBFXTtcbiAgICAgIHJldHVybiBGO1xuICAgIC8vIG1ha2Ugc3RhdGljIHZlcnNpb25zIGZvciBwcm90b3R5cGUgbWV0aG9kc1xuICAgIH0pKG91dCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUubWV0aG9kcy4lTkFNRSVcbiAgICBpZihJU19QUk9UTyl7XG4gICAgICAoZXhwb3J0cy52aXJ0dWFsIHx8IChleHBvcnRzLnZpcnR1YWwgPSB7fSkpW2tleV0gPSBvdXQ7XG4gICAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUucHJvdG90eXBlLiVOQU1FJVxuICAgICAgaWYodHlwZSAmICRleHBvcnQuUiAmJiBleHBQcm90byAmJiAhZXhwUHJvdG9ba2V5XSloaWRlKGV4cFByb3RvLCBrZXksIG91dCk7XG4gICAgfVxuICB9XG59O1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YCBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcblxuLyoqKi8gfSksXG4vKiAxMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX2RlZmluZVByb3BlcnR5ID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMyk7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZGVmaW5lUHJvcGVydHkpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgICAgKDAsIF9kZWZpbmVQcm9wZXJ0eTIuZGVmYXVsdCkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgICBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgIHJldHVybiBDb25zdHJ1Y3RvcjtcbiAgfTtcbn0oKTtcblxuLyoqKi8gfSksXG4vKiAxMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGV4ZWMpe1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaChlKXtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcblxuLyoqKi8gfSksXG4vKiAxMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG52YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQsIGtleSl7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcblxuLyoqKi8gfSksXG4vKiAxMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyB0byBpbmRleGVkIG9iamVjdCwgdG9PYmplY3Qgd2l0aCBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIHN0cmluZ3NcbnZhciBJT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1NilcbiAgLCBkZWZpbmVkID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIElPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcblxuLyoqKi8gfSksXG4vKiAxNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE5KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZm4sIHRoYXQsIGxlbmd0aCl7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmKHRoYXQgPT09IHVuZGVmaW5lZClyZXR1cm4gZm47XG4gIHN3aXRjaChsZW5ndGgpe1xuICAgIGNhc2UgMTogcmV0dXJuIGZ1bmN0aW9uKGEpe1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbihhLCBiKXtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24oYSwgYiwgYyl7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiLCBjKTtcbiAgICB9O1xuICB9XG4gIHJldHVybiBmdW5jdGlvbigvKiAuLi5hcmdzICovKXtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG5cbi8qKiovIH0pLFxuLyogMTUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihiaXRtYXAsIHZhbHVlKXtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlICA6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlICAgIDogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZSAgICAgICA6IHZhbHVlXG4gIH07XG59O1xuXG4vKioqLyB9KSxcbi8qIDE2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0ge307XG5cbi8qKiovIH0pLFxuLyogMTcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIGlzT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KVxuICAsIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKS5kb2N1bWVudFxuICAvLyBpbiBvbGQgSUUgdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCdcbiAgLCBpcyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcblxuLyoqKi8gfSksXG4vKiAxOCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyAxOS4xLjIuMTQgLyAxNS4yLjMuMTQgT2JqZWN0LmtleXMoTylcbnZhciAka2V5cyAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNDQpXG4gICwgZW51bUJ1Z0tleXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI5KTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pe1xuICByZXR1cm4gJGtleXMoTywgZW51bUJ1Z0tleXMpO1xufTtcblxuLyoqKi8gfSksXG4vKiAxOSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgaWYodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcblxuLyoqKi8gfSksXG4vKiAyMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG52YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGl0KS5zbGljZSg4LCAtMSk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDIxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIDcuMS4xIFRvUHJpbWl0aXZlKGlucHV0IFssIFByZWZlcnJlZFR5cGVdKVxudmFyIGlzT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwgUyl7XG4gIGlmKCFpc09iamVjdChpdCkpcmV0dXJuIGl0O1xuICB2YXIgZm4sIHZhbDtcbiAgaWYoUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSlyZXR1cm4gdmFsO1xuICBpZih0eXBlb2YgKGZuID0gaXQudmFsdWVPZikgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKXJldHVybiB2YWw7XG4gIGlmKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKXJldHVybiB2YWw7XG4gIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbn07XG5cbi8qKiovIH0pLFxuLyogMjIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIGRlZiA9IF9fd2VicGFja19yZXF1aXJlX18oNCkuZlxuICAsIGhhcyA9IF9fd2VicGFja19yZXF1aXJlX18oMTIpXG4gICwgVEFHID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKSgndG9TdHJpbmdUYWcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwgdGFnLCBzdGF0KXtcbiAgaWYoaXQgJiYgIWhhcyhpdCA9IHN0YXQgPyBpdCA6IGl0LnByb3RvdHlwZSwgVEFHKSlkZWYoaXQsIFRBRywge2NvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZ30pO1xufTtcblxuLyoqKi8gfSksXG4vKiAyMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG52YXIgaWQgPSAwXG4gICwgcHggPSBNYXRoLnJhbmRvbSgpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihrZXkpe1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcblxuLyoqKi8gfSksXG4vKiAyNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyA3LjIuMSBSZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIGlmKGl0ID09IHVuZGVmaW5lZCl0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07XG5cbi8qKiovIH0pLFxuLyogMjUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxubW9kdWxlLmV4cG9ydHMgPSAhX193ZWJwYWNrX3JlcXVpcmVfXygyKSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXygxMSkoZnVuY3Rpb24oKXtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfX3dlYnBhY2tfcmVxdWlyZV9fKDE3KSgnZGl2JyksICdhJywge2dldDogZnVuY3Rpb24oKXsgcmV0dXJuIDc7IH19KS5hICE9IDc7XG59KTtcblxuLyoqKi8gfSksXG4vKiAyNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHRydWU7XG5cbi8qKiovIH0pLFxuLyogMjcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIHNoYXJlZCA9IF9fd2VicGFja19yZXF1aXJlX18oMzApKCdrZXlzJylcbiAgLCB1aWQgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIzKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oa2V5KXtcbiAgcmV0dXJuIHNoYXJlZFtrZXldIHx8IChzaGFyZWRba2V5XSA9IHVpZChrZXkpKTtcbn07XG5cbi8qKiovIH0pLFxuLyogMjggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCAgPSBNYXRoLmNlaWxcbiAgLCBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIGlzTmFOKGl0ID0gK2l0KSA/IDAgOiAoaXQgPiAwID8gZmxvb3IgOiBjZWlsKShpdCk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDI5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8vIElFIDgtIGRvbid0IGVudW0gYnVnIGtleXNcbm1vZHVsZS5leHBvcnRzID0gKFxuICAnY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mJ1xuKS5zcGxpdCgnLCcpO1xuXG4vKioqLyB9KSxcbi8qIDMwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBnbG9iYWwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpXG4gICwgU0hBUkVEID0gJ19fY29yZS1qc19zaGFyZWRfXydcbiAgLCBzdG9yZSAgPSBnbG9iYWxbU0hBUkVEXSB8fCAoZ2xvYmFsW1NIQVJFRF0gPSB7fSk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGtleSl7XG4gIHJldHVybiBzdG9yZVtrZXldIHx8IChzdG9yZVtrZXldID0ge30pO1xufTtcblxuLyoqKi8gfSksXG4vKiAzMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IF9fd2VicGFja19yZXF1aXJlX18oODApLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cbi8qKiovIH0pLFxuLyogMzIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuLy8gNy4xLjEzIFRvT2JqZWN0KGFyZ3VtZW50KVxudmFyIGRlZmluZWQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI0KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG5cbi8qKiovIH0pLFxuLyogMzMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxubW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDM2KSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG4vKioqLyB9KSxcbi8qIDM0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfc2V0UHJvdG90eXBlT2YgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDc2KTtcblxudmFyIF9zZXRQcm90b3R5cGVPZjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zZXRQcm90b3R5cGVPZik7XG5cbnZhciBfY3JlYXRlID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3NSk7XG5cbnZhciBfY3JlYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZSk7XG5cbnZhciBfdHlwZW9mMiA9IF9fd2VicGFja19yZXF1aXJlX18oNjApO1xuXG52YXIgX3R5cGVvZjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90eXBlb2YyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArICh0eXBlb2Ygc3VwZXJDbGFzcyA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiAoMCwgX3R5cGVvZjMuZGVmYXVsdCkoc3VwZXJDbGFzcykpKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9ICgwLCBfY3JlYXRlMi5kZWZhdWx0KShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xuICBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mMi5kZWZhdWx0ID8gKDAsIF9zZXRQcm90b3R5cGVPZjIuZGVmYXVsdCkoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn07XG5cbi8qKiovIH0pLFxuLyogMzUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF90eXBlb2YyID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2MCk7XG5cbnZhciBfdHlwZW9mMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3R5cGVvZjIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoc2VsZiwgY2FsbCkge1xuICBpZiAoIXNlbGYpIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gY2FsbCAmJiAoKHR5cGVvZiBjYWxsID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6ICgwLCBfdHlwZW9mMy5kZWZhdWx0KShjYWxsKSkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjtcbn07XG5cbi8qKiovIH0pLFxuLyogMzYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuX193ZWJwYWNrX3JlcXVpcmVfXygzOCk7XG52YXIgJE9iamVjdCA9IF9fd2VicGFja19yZXF1aXJlX18oMCkuT2JqZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBkZXNjKXtcbiAgcmV0dXJuICRPYmplY3QuZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgZGVzYyk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDM3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxudmFyIGFuT2JqZWN0ICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KVxuICAsIGRQcyAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2NSlcbiAgLCBlbnVtQnVnS2V5cyA9IF9fd2VicGFja19yZXF1aXJlX18oMjkpXG4gICwgSUVfUFJPVE8gICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI3KSgnSUVfUFJPVE8nKVxuICAsIEVtcHR5ICAgICAgID0gZnVuY3Rpb24oKXsgLyogZW1wdHkgKi8gfVxuICAsIFBST1RPVFlQRSAgID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24oKXtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IF9fd2VicGFja19yZXF1aXJlX18oMTcpKCdpZnJhbWUnKVxuICAgICwgaSAgICAgID0gZW51bUJ1Z0tleXMubGVuZ3RoXG4gICAgLCBsdCAgICAgPSAnPCdcbiAgICAsIGd0ICAgICA9ICc+J1xuICAgICwgaWZyYW1lRG9jdW1lbnQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICBfX3dlYnBhY2tfcmVxdWlyZV9fKDQyKS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICBpZnJhbWUuc3JjID0gJ2phdmFzY3JpcHQ6JzsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1zY3JpcHQtdXJsXG4gIC8vIGNyZWF0ZURpY3QgPSBpZnJhbWUuY29udGVudFdpbmRvdy5PYmplY3Q7XG4gIC8vIGh0bWwucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lRG9jdW1lbnQgPSBpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudDtcbiAgaWZyYW1lRG9jdW1lbnQub3BlbigpO1xuICBpZnJhbWVEb2N1bWVudC53cml0ZShsdCArICdzY3JpcHQnICsgZ3QgKyAnZG9jdW1lbnQuRj1PYmplY3QnICsgbHQgKyAnL3NjcmlwdCcgKyBndCk7XG4gIGlmcmFtZURvY3VtZW50LmNsb3NlKCk7XG4gIGNyZWF0ZURpY3QgPSBpZnJhbWVEb2N1bWVudC5GO1xuICB3aGlsZShpLS0pZGVsZXRlIGNyZWF0ZURpY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tpXV07XG4gIHJldHVybiBjcmVhdGVEaWN0KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5jcmVhdGUgfHwgZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpe1xuICB2YXIgcmVzdWx0O1xuICBpZihPICE9PSBudWxsKXtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gYW5PYmplY3QoTyk7XG4gICAgcmVzdWx0ID0gbmV3IEVtcHR5O1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcblxuXG4vKioqLyB9KSxcbi8qIDM4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciAkZXhwb3J0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFfX3dlYnBhY2tfcmVxdWlyZV9fKDIpLCAnT2JqZWN0Jywge2RlZmluZVByb3BlcnR5OiBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpLmZ9KTtcblxuLyoqKi8gfSksXG4vKiAzOSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIExJQlJBUlkgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNilcbiAgLCAkZXhwb3J0ICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oOSlcbiAgLCByZWRlZmluZSAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNDYpXG4gICwgaGlkZSAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcpXG4gICwgaGFzICAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKVxuICAsIEl0ZXJhdG9ycyAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNilcbiAgLCAkaXRlckNyZWF0ZSAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNjMpXG4gICwgc2V0VG9TdHJpbmdUYWcgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyKVxuICAsIGdldFByb3RvdHlwZU9mID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0MylcbiAgLCBJVEVSQVRPUiAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMykoJ2l0ZXJhdG9yJylcbiAgLCBCVUdHWSAgICAgICAgICA9ICEoW10ua2V5cyAmJiAnbmV4dCcgaW4gW10ua2V5cygpKSAvLyBTYWZhcmkgaGFzIGJ1Z2d5IGl0ZXJhdG9ycyB3L28gYG5leHRgXG4gICwgRkZfSVRFUkFUT1IgICAgPSAnQEBpdGVyYXRvcidcbiAgLCBLRVlTICAgICAgICAgICA9ICdrZXlzJ1xuICAsIFZBTFVFUyAgICAgICAgID0gJ3ZhbHVlcyc7XG5cbnZhciByZXR1cm5UaGlzID0gZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oQmFzZSwgTkFNRSwgQ29uc3RydWN0b3IsIG5leHQsIERFRkFVTFQsIElTX1NFVCwgRk9SQ0VEKXtcbiAgJGl0ZXJDcmVhdGUoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpO1xuICB2YXIgZ2V0TWV0aG9kID0gZnVuY3Rpb24oa2luZCl7XG4gICAgaWYoIUJVR0dZICYmIGtpbmQgaW4gcHJvdG8pcmV0dXJuIHByb3RvW2tpbmRdO1xuICAgIHN3aXRjaChraW5kKXtcbiAgICAgIGNhc2UgS0VZUzogcmV0dXJuIGZ1bmN0aW9uIGtleXMoKXsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICAgIGNhc2UgVkFMVUVTOiByZXR1cm4gZnVuY3Rpb24gdmFsdWVzKCl7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgfSByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICB9O1xuICB2YXIgVEFHICAgICAgICA9IE5BTUUgKyAnIEl0ZXJhdG9yJ1xuICAgICwgREVGX1ZBTFVFUyA9IERFRkFVTFQgPT0gVkFMVUVTXG4gICAgLCBWQUxVRVNfQlVHID0gZmFsc2VcbiAgICAsIHByb3RvICAgICAgPSBCYXNlLnByb3RvdHlwZVxuICAgICwgJG5hdGl2ZSAgICA9IHByb3RvW0lURVJBVE9SXSB8fCBwcm90b1tGRl9JVEVSQVRPUl0gfHwgREVGQVVMVCAmJiBwcm90b1tERUZBVUxUXVxuICAgICwgJGRlZmF1bHQgICA9ICRuYXRpdmUgfHwgZ2V0TWV0aG9kKERFRkFVTFQpXG4gICAgLCAkZW50cmllcyAgID0gREVGQVVMVCA/ICFERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoJ2VudHJpZXMnKSA6IHVuZGVmaW5lZFxuICAgICwgJGFueU5hdGl2ZSA9IE5BTUUgPT0gJ0FycmF5JyA/IHByb3RvLmVudHJpZXMgfHwgJG5hdGl2ZSA6ICRuYXRpdmVcbiAgICAsIG1ldGhvZHMsIGtleSwgSXRlcmF0b3JQcm90b3R5cGU7XG4gIC8vIEZpeCBuYXRpdmVcbiAgaWYoJGFueU5hdGl2ZSl7XG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZigkYW55TmF0aXZlLmNhbGwobmV3IEJhc2UpKTtcbiAgICBpZihJdGVyYXRvclByb3RvdHlwZSAhPT0gT2JqZWN0LnByb3RvdHlwZSl7XG4gICAgICAvLyBTZXQgQEB0b1N0cmluZ1RhZyB0byBuYXRpdmUgaXRlcmF0b3JzXG4gICAgICBzZXRUb1N0cmluZ1RhZyhJdGVyYXRvclByb3RvdHlwZSwgVEFHLCB0cnVlKTtcbiAgICAgIC8vIGZpeCBmb3Igc29tZSBvbGQgZW5naW5lc1xuICAgICAgaWYoIUxJQlJBUlkgJiYgIWhhcyhJdGVyYXRvclByb3RvdHlwZSwgSVRFUkFUT1IpKWhpZGUoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICB9XG4gIH1cbiAgLy8gZml4IEFycmF5I3t2YWx1ZXMsIEBAaXRlcmF0b3J9Lm5hbWUgaW4gVjggLyBGRlxuICBpZihERUZfVkFMVUVTICYmICRuYXRpdmUgJiYgJG5hdGl2ZS5uYW1lICE9PSBWQUxVRVMpe1xuICAgIFZBTFVFU19CVUcgPSB0cnVlO1xuICAgICRkZWZhdWx0ID0gZnVuY3Rpb24gdmFsdWVzKCl7IHJldHVybiAkbmF0aXZlLmNhbGwodGhpcyk7IH07XG4gIH1cbiAgLy8gRGVmaW5lIGl0ZXJhdG9yXG4gIGlmKCghTElCUkFSWSB8fCBGT1JDRUQpICYmIChCVUdHWSB8fCBWQUxVRVNfQlVHIHx8ICFwcm90b1tJVEVSQVRPUl0pKXtcbiAgICBoaWRlKHByb3RvLCBJVEVSQVRPUiwgJGRlZmF1bHQpO1xuICB9XG4gIC8vIFBsdWcgZm9yIGxpYnJhcnlcbiAgSXRlcmF0b3JzW05BTUVdID0gJGRlZmF1bHQ7XG4gIEl0ZXJhdG9yc1tUQUddICA9IHJldHVyblRoaXM7XG4gIGlmKERFRkFVTFQpe1xuICAgIG1ldGhvZHMgPSB7XG4gICAgICB2YWx1ZXM6ICBERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6ICAgIElTX1NFVCAgICAgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChLRVlTKSxcbiAgICAgIGVudHJpZXM6ICRlbnRyaWVzXG4gICAgfTtcbiAgICBpZihGT1JDRUQpZm9yKGtleSBpbiBtZXRob2RzKXtcbiAgICAgIGlmKCEoa2V5IGluIHByb3RvKSlyZWRlZmluZShwcm90bywga2V5LCBtZXRob2RzW2tleV0pO1xuICAgIH0gZWxzZSAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChCVUdHWSB8fCBWQUxVRVNfQlVHKSwgTkFNRSwgbWV0aG9kcyk7XG4gIH1cbiAgcmV0dXJuIG1ldGhvZHM7XG59O1xuXG4vKioqLyB9KSxcbi8qIDQwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogX193ZWJwYWNrX3JlcXVpcmVfXyg1MyksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuLyoqKi8gfSksXG4vKiA0MSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5leHBvcnRzLmYgPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuLyoqKi8gfSksXG4vKiA0MiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMSkuZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG4vKioqLyB9KSxcbi8qIDQzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKVxuICAsIHRvT2JqZWN0ICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMilcbiAgLCBJRV9QUk9UTyAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMjcpKCdJRV9QUk9UTycpXG4gICwgT2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbihPKXtcbiAgTyA9IHRvT2JqZWN0KE8pO1xuICBpZihoYXMoTywgSUVfUFJPVE8pKXJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYodHlwZW9mIE8uY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBPIGluc3RhbmNlb2YgTy5jb25zdHJ1Y3Rvcil7XG4gICAgcmV0dXJuIE8uY29uc3RydWN0b3IucHJvdG90eXBlO1xuICB9IHJldHVybiBPIGluc3RhbmNlb2YgT2JqZWN0ID8gT2JqZWN0UHJvdG8gOiBudWxsO1xufTtcblxuLyoqKi8gfSksXG4vKiA0NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgaGFzICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMilcbiAgLCB0b0lPYmplY3QgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKVxuICAsIGFycmF5SW5kZXhPZiA9IF9fd2VicGFja19yZXF1aXJlX18oNjIpKGZhbHNlKVxuICAsIElFX1BST1RPICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMjcpKCdJRV9QUk9UTycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9iamVjdCwgbmFtZXMpe1xuICB2YXIgTyAgICAgID0gdG9JT2JqZWN0KG9iamVjdClcbiAgICAsIGkgICAgICA9IDBcbiAgICAsIHJlc3VsdCA9IFtdXG4gICAgLCBrZXk7XG4gIGZvcihrZXkgaW4gTylpZihrZXkgIT0gSUVfUFJPVE8paGFzKE8sIGtleSkgJiYgcmVzdWx0LnB1c2goa2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZShuYW1lcy5sZW5ndGggPiBpKWlmKGhhcyhPLCBrZXkgPSBuYW1lc1tpKytdKSl7XG4gICAgfmFycmF5SW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcmVzdWx0LnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqKi8gfSksXG4vKiA0NSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyBtb3N0IE9iamVjdCBtZXRob2RzIGJ5IEVTNiBzaG91bGQgYWNjZXB0IHByaW1pdGl2ZXNcbnZhciAkZXhwb3J0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KVxuICAsIGNvcmUgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApXG4gICwgZmFpbHMgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTEpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVksIGV4ZWMpe1xuICB2YXIgZm4gID0gKGNvcmUuT2JqZWN0IHx8IHt9KVtLRVldIHx8IE9iamVjdFtLRVldXG4gICAgLCBleHAgPSB7fTtcbiAgZXhwW0tFWV0gPSBleGVjKGZuKTtcbiAgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbigpeyBmbigxKTsgfSksICdPYmplY3QnLCBleHApO1xufTtcblxuLyoqKi8gfSksXG4vKiA0NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oNyk7XG5cbi8qKiovIH0pLFxuLyogNDcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuLy8gNy4xLjE1IFRvTGVuZ3RoXG52YXIgdG9JbnRlZ2VyID0gX193ZWJwYWNrX3JlcXVpcmVfXygyOClcbiAgLCBtaW4gICAgICAgPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcblxuLyoqKi8gfSksXG4vKiA0OCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgZ2xvYmFsICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpXG4gICwgY29yZSAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApXG4gICwgTElCUkFSWSAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI2KVxuICAsIHdrc0V4dCAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0OSlcbiAgLCBkZWZpbmVQcm9wZXJ0eSA9IF9fd2VicGFja19yZXF1aXJlX18oNCkuZjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obmFtZSl7XG4gIHZhciAkU3ltYm9sID0gY29yZS5TeW1ib2wgfHwgKGNvcmUuU3ltYm9sID0gTElCUkFSWSA/IHt9IDogZ2xvYmFsLlN5bWJvbCB8fCB7fSk7XG4gIGlmKG5hbWUuY2hhckF0KDApICE9ICdfJyAmJiAhKG5hbWUgaW4gJFN5bWJvbCkpZGVmaW5lUHJvcGVydHkoJFN5bWJvbCwgbmFtZSwge3ZhbHVlOiB3a3NFeHQuZihuYW1lKX0pO1xufTtcblxuLyoqKi8gfSksXG4vKiA0OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5leHBvcnRzLmYgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG4vKioqLyB9KSxcbi8qIDUwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgJGF0ICA9IF9fd2VicGFja19yZXF1aXJlX18oNjcpKHRydWUpO1xuXG4vLyAyMS4xLjMuMjcgU3RyaW5nLnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDM5KShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbihpdGVyYXRlZCl7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uKCl7XG4gIHZhciBPICAgICA9IHRoaXMuX3RcbiAgICAsIGluZGV4ID0gdGhpcy5faVxuICAgICwgcG9pbnQ7XG4gIGlmKGluZGV4ID49IE8ubGVuZ3RoKXJldHVybiB7dmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZX07XG4gIHBvaW50ID0gJGF0KE8sIGluZGV4KTtcbiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7dmFsdWU6IHBvaW50LCBkb25lOiBmYWxzZX07XG59KTtcblxuLyoqKi8gfSksXG4vKiA1MSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDcwKTtcbnZhciBnbG9iYWwgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKVxuICAsIGhpZGUgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcpXG4gICwgSXRlcmF0b3JzICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTYpXG4gICwgVE9fU1RSSU5HX1RBRyA9IF9fd2VicGFja19yZXF1aXJlX18oMykoJ3RvU3RyaW5nVGFnJyk7XG5cbmZvcih2YXIgY29sbGVjdGlvbnMgPSBbJ05vZGVMaXN0JywgJ0RPTVRva2VuTGlzdCcsICdNZWRpYUxpc3QnLCAnU3R5bGVTaGVldExpc3QnLCAnQ1NTUnVsZUxpc3QnXSwgaSA9IDA7IGkgPCA1OyBpKyspe1xuICB2YXIgTkFNRSAgICAgICA9IGNvbGxlY3Rpb25zW2ldXG4gICAgLCBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdXG4gICAgLCBwcm90byAgICAgID0gQ29sbGVjdGlvbiAmJiBDb2xsZWN0aW9uLnByb3RvdHlwZTtcbiAgaWYocHJvdG8gJiYgIXByb3RvW1RPX1NUUklOR19UQUddKWhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpO1xuICBJdGVyYXRvcnNbTkFNRV0gPSBJdGVyYXRvcnMuQXJyYXk7XG59XG5cbi8qKiovIH0pLFxuLyogNTIgKi8sXG4vKiA1MyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgY29yZSAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApXG4gICwgJEpTT04gPSBjb3JlLkpTT04gfHwgKGNvcmUuSlNPTiA9IHtzdHJpbmdpZnk6IEpTT04uc3RyaW5naWZ5fSk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHN0cmluZ2lmeShpdCl7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgcmV0dXJuICRKU09OLnN0cmluZ2lmeS5hcHBseSgkSlNPTiwgYXJndW1lbnRzKTtcbn07XG5cbi8qKiovIH0pLFxuLyogNTQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXG5cbi8qKiovIH0pLFxuLyogNTUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIwKVxuICAsIFRBRyA9IF9fd2VicGFja19yZXF1aXJlX18oMykoJ3RvU3RyaW5nVGFnJylcbiAgLy8gRVMzIHdyb25nIGhlcmVcbiAgLCBBUkcgPSBjb2YoZnVuY3Rpb24oKXsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbihpdCwga2V5KXtcbiAgdHJ5IHtcbiAgICByZXR1cm4gaXRba2V5XTtcbiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuXG4vKioqLyB9KSxcbi8qIDU2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG52YXIgY29mID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMCk7XG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdCgneicpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApID8gT2JqZWN0IDogZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDU3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBwSUUgICAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNDEpXG4gICwgY3JlYXRlRGVzYyAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KVxuICAsIHRvSU9iamVjdCAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMylcbiAgLCB0b1ByaW1pdGl2ZSAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMjEpXG4gICwgaGFzICAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKVxuICAsIElFOF9ET01fREVGSU5FID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNSlcbiAgLCBnT1BEICAgICAgICAgICA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbmV4cG9ydHMuZiA9IF9fd2VicGFja19yZXF1aXJlX18oMikgPyBnT1BEIDogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApe1xuICBPID0gdG9JT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGlmKElFOF9ET01fREVGSU5FKXRyeSB7XG4gICAgcmV0dXJuIGdPUEQoTywgUCk7XG4gIH0gY2F0Y2goZSl7IC8qIGVtcHR5ICovIH1cbiAgaWYoaGFzKE8sIFApKXJldHVybiBjcmVhdGVEZXNjKCFwSUUuZi5jYWxsKE8sIFApLCBPW1BdKTtcbn07XG5cbi8qKiovIH0pLFxuLyogNTggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcblxuLyoqKi8gfSksXG4vKiA1OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IF9fd2VicGFja19yZXF1aXJlX18oODEpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cbi8qKiovIH0pLFxuLyogNjAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9pdGVyYXRvciA9IF9fd2VicGFja19yZXF1aXJlX18oNzgpO1xuXG52YXIgX2l0ZXJhdG9yMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2l0ZXJhdG9yKTtcblxudmFyIF9zeW1ib2wgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDc3KTtcblxudmFyIF9zeW1ib2wyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc3ltYm9sKTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBfaXRlcmF0b3IyLmRlZmF1bHQgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBfc3ltYm9sMi5kZWZhdWx0ICYmIG9iaiAhPT0gX3N5bWJvbDIuZGVmYXVsdC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBfdHlwZW9mKF9pdGVyYXRvcjIuZGVmYXVsdCkgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn0gOiBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogJiYgdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IF9zeW1ib2wyLmRlZmF1bHQgJiYgb2JqICE9PSBfc3ltYm9sMi5kZWZhdWx0LnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqID09PSBcInVuZGVmaW5lZFwiID8gXCJ1bmRlZmluZWRcIiA6IF90eXBlb2Yob2JqKTtcbn07XG5cbi8qKiovIH0pLFxuLyogNjEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpeyAvKiBlbXB0eSAqLyB9O1xuXG4vKioqLyB9KSxcbi8qIDYyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIGZhbHNlIC0+IEFycmF5I2luZGV4T2Zcbi8vIHRydWUgIC0+IEFycmF5I2luY2x1ZGVzXG52YXIgdG9JT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMylcbiAgLCB0b0xlbmd0aCAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQ3KVxuICAsIHRvSW5kZXggICA9IF9fd2VicGFja19yZXF1aXJlX18oNjkpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihJU19JTkNMVURFUyl7XG4gIHJldHVybiBmdW5jdGlvbigkdGhpcywgZWwsIGZyb21JbmRleCl7XG4gICAgdmFyIE8gICAgICA9IHRvSU9iamVjdCgkdGhpcylcbiAgICAgICwgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpXG4gICAgICAsIGluZGV4ICA9IHRvSW5kZXgoZnJvbUluZGV4LCBsZW5ndGgpXG4gICAgICAsIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICBpZihJU19JTkNMVURFUyAmJiBlbCAhPSBlbCl3aGlsZShsZW5ndGggPiBpbmRleCl7XG4gICAgICB2YWx1ZSA9IE9baW5kZXgrK107XG4gICAgICBpZih2YWx1ZSAhPSB2YWx1ZSlyZXR1cm4gdHJ1ZTtcbiAgICAvLyBBcnJheSN0b0luZGV4IGlnbm9yZXMgaG9sZXMsIEFycmF5I2luY2x1ZGVzIC0gbm90XG4gICAgfSBlbHNlIGZvcig7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspaWYoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTyl7XG4gICAgICBpZihPW2luZGV4XSA9PT0gZWwpcmV0dXJuIElTX0lOQ0xVREVTIHx8IGluZGV4IHx8IDA7XG4gICAgfSByZXR1cm4gIUlTX0lOQ0xVREVTICYmIC0xO1xuICB9O1xufTtcblxuLyoqKi8gfSksXG4vKiA2MyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIGNyZWF0ZSAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNylcbiAgLCBkZXNjcmlwdG9yICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTUpXG4gICwgc2V0VG9TdHJpbmdUYWcgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyKVxuICAsIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDcpKEl0ZXJhdG9yUHJvdG90eXBlLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpKCdpdGVyYXRvcicpLCBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpe1xuICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBjcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUsIHtuZXh0OiBkZXNjcmlwdG9yKDEsIG5leHQpfSk7XG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpO1xufTtcblxuLyoqKi8gfSksXG4vKiA2NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGRvbmUsIHZhbHVlKXtcbiAgcmV0dXJuIHt2YWx1ZTogdmFsdWUsIGRvbmU6ICEhZG9uZX07XG59O1xuXG4vKioqLyB9KSxcbi8qIDY1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBkUCAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNClcbiAgLCBhbk9iamVjdCA9IF9fd2VicGFja19yZXF1aXJlX18oNSlcbiAgLCBnZXRLZXlzICA9IF9fd2VicGFja19yZXF1aXJlX18oMTgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMikgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcyl7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIga2V5cyAgID0gZ2V0S2V5cyhQcm9wZXJ0aWVzKVxuICAgICwgbGVuZ3RoID0ga2V5cy5sZW5ndGhcbiAgICAsIGkgPSAwXG4gICAgLCBQO1xuICB3aGlsZShsZW5ndGggPiBpKWRQLmYoTywgUCA9IGtleXNbaSsrXSwgUHJvcGVydGllc1tQXSk7XG4gIHJldHVybiBPO1xufTtcblxuLyoqKi8gfSksXG4vKiA2NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyAxOS4xLjIuNyAvIDE1LjIuMy40IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG52YXIgJGtleXMgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNDQpXG4gICwgaGlkZGVuS2V5cyA9IF9fd2VicGFja19yZXF1aXJlX18oMjkpLmNvbmNhdCgnbGVuZ3RoJywgJ3Byb3RvdHlwZScpO1xuXG5leHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKE8pe1xuICByZXR1cm4gJGtleXMoTywgaGlkZGVuS2V5cyk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDY3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciB0b0ludGVnZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI4KVxuICAsIGRlZmluZWQgICA9IF9fd2VicGFja19yZXF1aXJlX18oMjQpO1xuLy8gdHJ1ZSAgLT4gU3RyaW5nI2F0XG4vLyBmYWxzZSAtPiBTdHJpbmcjY29kZVBvaW50QXRcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oVE9fU1RSSU5HKXtcbiAgcmV0dXJuIGZ1bmN0aW9uKHRoYXQsIHBvcyl7XG4gICAgdmFyIHMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSlcbiAgICAgICwgaSA9IHRvSW50ZWdlcihwb3MpXG4gICAgICAsIGwgPSBzLmxlbmd0aFxuICAgICAgLCBhLCBiO1xuICAgIGlmKGkgPCAwIHx8IGkgPj0gbClyZXR1cm4gVE9fU1RSSU5HID8gJycgOiB1bmRlZmluZWQ7XG4gICAgYSA9IHMuY2hhckNvZGVBdChpKTtcbiAgICByZXR1cm4gYSA8IDB4ZDgwMCB8fCBhID4gMHhkYmZmIHx8IGkgKyAxID09PSBsIHx8IChiID0gcy5jaGFyQ29kZUF0KGkgKyAxKSkgPCAweGRjMDAgfHwgYiA+IDB4ZGZmZlxuICAgICAgPyBUT19TVFJJTkcgPyBzLmNoYXJBdChpKSA6IGFcbiAgICAgIDogVE9fU1RSSU5HID8gcy5zbGljZShpLCBpICsgMikgOiAoYSAtIDB4ZDgwMCA8PCAxMCkgKyAoYiAtIDB4ZGMwMCkgKyAweDEwMDAwO1xuICB9O1xufTtcblxuLyoqKi8gfSksXG4vKiA2OCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgY3R4ICAgICAgICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNClcbiAgLCBpbnZva2UgICAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDg5KVxuICAsIGh0bWwgICAgICAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNDIpXG4gICwgY2VsICAgICAgICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNylcbiAgLCBnbG9iYWwgICAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpXG4gICwgcHJvY2VzcyAgICAgICAgICAgID0gZ2xvYmFsLnByb2Nlc3NcbiAgLCBzZXRUYXNrICAgICAgICAgICAgPSBnbG9iYWwuc2V0SW1tZWRpYXRlXG4gICwgY2xlYXJUYXNrICAgICAgICAgID0gZ2xvYmFsLmNsZWFySW1tZWRpYXRlXG4gICwgTWVzc2FnZUNoYW5uZWwgICAgID0gZ2xvYmFsLk1lc3NhZ2VDaGFubmVsXG4gICwgY291bnRlciAgICAgICAgICAgID0gMFxuICAsIHF1ZXVlICAgICAgICAgICAgICA9IHt9XG4gICwgT05SRUFEWVNUQVRFQ0hBTkdFID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSdcbiAgLCBkZWZlciwgY2hhbm5lbCwgcG9ydDtcbnZhciBydW4gPSBmdW5jdGlvbigpe1xuICB2YXIgaWQgPSArdGhpcztcbiAgaWYocXVldWUuaGFzT3duUHJvcGVydHkoaWQpKXtcbiAgICB2YXIgZm4gPSBxdWV1ZVtpZF07XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgICBmbigpO1xuICB9XG59O1xudmFyIGxpc3RlbmVyID0gZnVuY3Rpb24oZXZlbnQpe1xuICBydW4uY2FsbChldmVudC5kYXRhKTtcbn07XG4vLyBOb2RlLmpzIDAuOSsgJiBJRTEwKyBoYXMgc2V0SW1tZWRpYXRlLCBvdGhlcndpc2U6XG5pZighc2V0VGFzayB8fCAhY2xlYXJUYXNrKXtcbiAgc2V0VGFzayA9IGZ1bmN0aW9uIHNldEltbWVkaWF0ZShmbil7XG4gICAgdmFyIGFyZ3MgPSBbXSwgaSA9IDE7XG4gICAgd2hpbGUoYXJndW1lbnRzLmxlbmd0aCA+IGkpYXJncy5wdXNoKGFyZ3VtZW50c1tpKytdKTtcbiAgICBxdWV1ZVsrK2NvdW50ZXJdID0gZnVuY3Rpb24oKXtcbiAgICAgIGludm9rZSh0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJyA/IGZuIDogRnVuY3Rpb24oZm4pLCBhcmdzKTtcbiAgICB9O1xuICAgIGRlZmVyKGNvdW50ZXIpO1xuICAgIHJldHVybiBjb3VudGVyO1xuICB9O1xuICBjbGVhclRhc2sgPSBmdW5jdGlvbiBjbGVhckltbWVkaWF0ZShpZCl7XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgfTtcbiAgLy8gTm9kZS5qcyAwLjgtXG4gIGlmKF9fd2VicGFja19yZXF1aXJlX18oMjApKHByb2Nlc3MpID09ICdwcm9jZXNzJyl7XG4gICAgZGVmZXIgPSBmdW5jdGlvbihpZCl7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBNZXNzYWdlQ2hhbm5lbCwgaW5jbHVkZXMgV2ViV29ya2Vyc1xuICB9IGVsc2UgaWYoTWVzc2FnZUNoYW5uZWwpe1xuICAgIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWw7XG4gICAgcG9ydCAgICA9IGNoYW5uZWwucG9ydDI7XG4gICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBsaXN0ZW5lcjtcbiAgICBkZWZlciA9IGN0eChwb3J0LnBvc3RNZXNzYWdlLCBwb3J0LCAxKTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBwb3N0TWVzc2FnZSwgc2tpcCBXZWJXb3JrZXJzXG4gIC8vIElFOCBoYXMgcG9zdE1lc3NhZ2UsIGJ1dCBpdCdzIHN5bmMgJiB0eXBlb2YgaXRzIHBvc3RNZXNzYWdlIGlzICdvYmplY3QnXG4gIH0gZWxzZSBpZihnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lciAmJiB0eXBlb2YgcG9zdE1lc3NhZ2UgPT0gJ2Z1bmN0aW9uJyAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpe1xuICAgIGRlZmVyID0gZnVuY3Rpb24oaWQpe1xuICAgICAgZ2xvYmFsLnBvc3RNZXNzYWdlKGlkICsgJycsICcqJyk7XG4gICAgfTtcbiAgICBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGxpc3RlbmVyLCBmYWxzZSk7XG4gIC8vIElFOC1cbiAgfSBlbHNlIGlmKE9OUkVBRFlTVEFURUNIQU5HRSBpbiBjZWwoJ3NjcmlwdCcpKXtcbiAgICBkZWZlciA9IGZ1bmN0aW9uKGlkKXtcbiAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoY2VsKCdzY3JpcHQnKSlbT05SRUFEWVNUQVRFQ0hBTkdFXSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgICAgIHJ1bi5jYWxsKGlkKTtcbiAgICAgIH07XG4gICAgfTtcbiAgLy8gUmVzdCBvbGQgYnJvd3NlcnNcbiAgfSBlbHNlIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uKGlkKXtcbiAgICAgIHNldFRpbWVvdXQoY3R4KHJ1biwgaWQsIDEpLCAwKTtcbiAgICB9O1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiAgIHNldFRhc2ssXG4gIGNsZWFyOiBjbGVhclRhc2tcbn07XG5cbi8qKiovIH0pLFxuLyogNjkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIHRvSW50ZWdlciA9IF9fd2VicGFja19yZXF1aXJlX18oMjgpXG4gICwgbWF4ICAgICAgID0gTWF0aC5tYXhcbiAgLCBtaW4gICAgICAgPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaW5kZXgsIGxlbmd0aCl7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDcwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IF9fd2VicGFja19yZXF1aXJlX18oNjEpXG4gICwgc3RlcCAgICAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNjQpXG4gICwgSXRlcmF0b3JzICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTYpXG4gICwgdG9JT2JqZWN0ICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTMpO1xuXG4vLyAyMi4xLjMuNCBBcnJheS5wcm90b3R5cGUuZW50cmllcygpXG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmtleXMoKVxuLy8gMjIuMS4zLjI5IEFycmF5LnByb3RvdHlwZS52YWx1ZXMoKVxuLy8gMjIuMS4zLjMwIEFycmF5LnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMzkpKEFycmF5LCAnQXJyYXknLCBmdW5jdGlvbihpdGVyYXRlZCwga2luZCl7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24oKXtcbiAgdmFyIE8gICAgID0gdGhpcy5fdFxuICAgICwga2luZCAgPSB0aGlzLl9rXG4gICAgLCBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpe1xuICAgIHRoaXMuX3QgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHN0ZXAoMSk7XG4gIH1cbiAgaWYoa2luZCA9PSAna2V5cycgIClyZXR1cm4gc3RlcCgwLCBpbmRleCk7XG4gIGlmKGtpbmQgPT0gJ3ZhbHVlcycpcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuXG4vKioqLyB9KSxcbi8qIDcxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfc3RyaW5naWZ5ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0MCk7XG5cbnZhciBfc3RyaW5naWZ5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3N0cmluZ2lmeSk7XG5cbnZhciBfa2V5cyA9IF9fd2VicGFja19yZXF1aXJlX18oNTkpO1xuXG52YXIgX2tleXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfa2V5cyk7XG5cbmV4cG9ydHMuZGl2aWRlVVJMID0gZGl2aWRlVVJMO1xuZXhwb3J0cy5kaXZpZGVFbWFpbCA9IGRpdmlkZUVtYWlsO1xuZXhwb3J0cy5lbXB0eU9iamVjdCA9IGVtcHR5T2JqZWN0O1xuZXhwb3J0cy5kZWVwQ2xvbmUgPSBkZWVwQ2xvbmU7XG5leHBvcnRzLmdldFVzZXJVUkxGcm9tRW1haWwgPSBnZXRVc2VyVVJMRnJvbUVtYWlsO1xuZXhwb3J0cy5nZXRVc2VyRW1haWxGcm9tVVJMID0gZ2V0VXNlckVtYWlsRnJvbVVSTDtcbmV4cG9ydHMuY29udmVydFRvVXNlclVSTCA9IGNvbnZlcnRUb1VzZXJVUkw7XG5leHBvcnRzLmNoZWNrQXR0cmlidXRlID0gY2hlY2tBdHRyaWJ1dGU7XG5leHBvcnRzLnBhcnNlQXR0cmlidXRlcyA9IHBhcnNlQXR0cmlidXRlcztcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXHJcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcclxuKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0xcclxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxyXG4qIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxyXG4qIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUdcclxuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcclxuKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxyXG4qXHJcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbipcclxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4qXHJcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4qIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbioqL1xuLyoqXHJcbiAqIFN1cHBvcnQgbW9kdWxlIHdpdGggc29tZSBmdW5jdGlvbnMgd2lsbCBiZSB1c2VmdWxcclxuICogQG1vZHVsZSB1dGlsc1xyXG4gKi9cblxuLyoqXHJcbiAqIEB0eXBlZGVmIGRpdmlkZVVSTFxyXG4gKiBAdHlwZSBPYmplY3RcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHR5cGUgVGhlIHR5cGUgb2YgVVJMXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBkb21haW4gVGhlIGRvbWFpbiBvZiBVUkxcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGlkZW50aXR5IFRoZSBpZGVudGl0eSBvZiBVUkxcclxuICovXG5cbi8qKlxyXG4gKiBEaXZpZGUgYW4gdXJsIGluIHR5cGUsIGRvbWFpbiBhbmQgaWRlbnRpdHlcclxuICogQHBhcmFtICB7VVJMLlVSTH0gdXJsIC0gdXJsIGFkZHJlc3NcclxuICogQHJldHVybiB7ZGl2aWRlVVJMfSB0aGUgcmVzdWx0IG9mIGRpdmlkZVVSTFxyXG4gKi9cbmZ1bmN0aW9uIGRpdmlkZVVSTCh1cmwpIHtcblxuICBpZiAoIXVybCkgdGhyb3cgRXJyb3IoJ1VSTCBpcyBuZWVkZWQgdG8gc3BsaXQnKTtcblxuICBmdW5jdGlvbiByZWN1cnNlKHZhbHVlKSB7XG4gICAgdmFyIHJlZ2V4ID0gLyhbYS16QS1aLV0qKSg6XFwvXFwvKD86XFwuKT98OikoWy1hLXpBLVowLTlAOiUuX1xcK34jPV17MiwyNTZ9KShbLWEtekEtWjAtOUA6JS5fXFwrfiM9XFwvXSopL2dpO1xuICAgIHZhciBzdWJzdCA9ICckMSwkMywkNCc7XG4gICAgdmFyIHBhcnRzID0gdmFsdWUucmVwbGFjZShyZWdleCwgc3Vic3QpLnNwbGl0KCcsJyk7XG4gICAgcmV0dXJuIHBhcnRzO1xuICB9XG5cbiAgdmFyIHBhcnRzID0gcmVjdXJzZSh1cmwpO1xuXG4gIC8vIElmIHRoZSB1cmwgaGFzIG5vIHNjaGVtZVxuICBpZiAocGFydHNbMF0gPT09IHVybCAmJiAhcGFydHNbMF0uaW5jbHVkZXMoJ0AnKSkge1xuXG4gICAgdmFyIF9yZXN1bHQgPSB7XG4gICAgICB0eXBlOiBcIlwiLFxuICAgICAgZG9tYWluOiB1cmwsXG4gICAgICBpZGVudGl0eTogXCJcIlxuICAgIH07XG5cbiAgICBjb25zb2xlLmVycm9yKCdbRGl2aWRlVVJMXSBEaXZpZGVVUkwgZG9uXFwndCBzdXBwb3J0IHVybCB3aXRob3V0IHNjaGVtZS4gUGxlYXNlIHJldmlldyB5b3VyIHVybCBhZGRyZXNzJywgdXJsKTtcblxuICAgIHJldHVybiBfcmVzdWx0O1xuICB9XG5cbiAgLy8gY2hlY2sgaWYgdGhlIHVybCBoYXMgdGhlIHNjaGVtZSBhbmQgaW5jbHVkZXMgYW4gQFxuICBpZiAocGFydHNbMF0gPT09IHVybCAmJiBwYXJ0c1swXS5pbmNsdWRlcygnQCcpKSB7XG4gICAgdmFyIHNjaGVtZSA9IHBhcnRzWzBdID09PSB1cmwgPyAnc210cCcgOiBwYXJ0c1swXTtcbiAgICBwYXJ0cyA9IHJlY3Vyc2Uoc2NoZW1lICsgJzovLycgKyBwYXJ0c1swXSk7XG4gIH1cblxuICAvLyBpZiB0aGUgZG9tYWluIGluY2x1ZGVzIGFuIEAsIGRpdmlkZSBpdCB0byBkb21haW4gYW5kIGlkZW50aXR5IHJlc3BlY3RpdmVseVxuICBpZiAocGFydHNbMV0uaW5jbHVkZXMoJ0AnKSkge1xuICAgIHBhcnRzWzJdID0gcGFydHNbMF0gKyAnOi8vJyArIHBhcnRzWzFdO1xuICAgIHBhcnRzWzFdID0gcGFydHNbMV0uc3Vic3RyKHBhcnRzWzFdLmluZGV4T2YoJ0AnKSArIDEpO1xuICB9IC8qZWxzZSBpZiAocGFydHNbMl0uaW5jbHVkZXMoJy8nKSkge1xyXG4gICAgcGFydHNbMl0gPSBwYXJ0c1syXS5zdWJzdHIocGFydHNbMl0ubGFzdEluZGV4T2YoJy8nKSsxKTtcclxuICAgIH0qL1xuXG4gIHZhciByZXN1bHQgPSB7XG4gICAgdHlwZTogcGFydHNbMF0sXG4gICAgZG9tYWluOiBwYXJ0c1sxXSxcbiAgICBpZGVudGl0eTogcGFydHNbMl1cbiAgfTtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBkaXZpZGVFbWFpbChlbWFpbCkge1xuICB2YXIgaW5kZXhPZkF0ID0gZW1haWwuaW5kZXhPZignQCcpO1xuXG4gIHZhciByZXN1bHQgPSB7XG4gICAgdXNlcm5hbWU6IGVtYWlsLnN1YnN0cmluZygwLCBpbmRleE9mQXQpLFxuICAgIGRvbWFpbjogZW1haWwuc3Vic3RyaW5nKGluZGV4T2ZBdCArIDEsIGVtYWlsLmxlbmd0aClcbiAgfTtcblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcclxuICogQ2hlY2sgaWYgYW4gT2JqZWN0IGlzIGVtcHR5XHJcbiAqIEBwYXJhbSAge09iamVjdH0gb2JqZWN0IE9iamVjdCB0byBiZSBjaGVja2VkXHJcbiAqIEByZXR1cm4ge0Jvb2xlYW59ICAgICAgIHN0YXR1cyBvZiBPYmplY3QsIGVtcHR5IG9yIG5vdCAodHJ1ZXxmYWxzZSk7XHJcbiAqL1xuZnVuY3Rpb24gZW1wdHlPYmplY3Qob2JqZWN0KSB7XG4gIHJldHVybiAoMCwgX2tleXMyLmRlZmF1bHQpKG9iamVjdCkubGVuZ3RoID4gMCA/IGZhbHNlIDogdHJ1ZTtcbn1cblxuLyoqXHJcbiAqIE1ha2UgYSBDT1BZIG9mIHRoZSBvcmlnaW5hbCBkYXRhXHJcbiAqIEBwYXJhbSAge09iamVjdH0gIG9iaiAtIG9iamVjdCB0byBiZSBjbG9uZWRcclxuICogQHJldHVybiB7T2JqZWN0fVxyXG4gKi9cbmZ1bmN0aW9uIGRlZXBDbG9uZShvYmopIHtcbiAgLy9UT0RPOiBzaW1wbGUgYnV0IGluZWZmaWNpZW50IEpTT04gZGVlcCBjbG9uZS4uLlxuICBpZiAob2JqKSByZXR1cm4gSlNPTi5wYXJzZSgoMCwgX3N0cmluZ2lmeTIuZGVmYXVsdCkob2JqKSk7XG59XG5cbi8qKlxyXG4gKiBPYnRhaW5zIHRoZSB1c2VyIFVSTCB0aGF0IGNvcnJlc3BvbmRzIHRvIGEgZ2l2ZW4gZW1haWxcclxuICogQHBhcmFtICB7c3RyaW5nfSB1c2VyRW1haWwgVGhlIHVzZXIgZW1haWxcclxuICogQHJldHVybiB7VVJMLlVSTH0gdXNlclVSTCBUaGUgdXNlciBVUkxcclxuICovXG5mdW5jdGlvbiBnZXRVc2VyVVJMRnJvbUVtYWlsKHVzZXJFbWFpbCkge1xuICB2YXIgaW5kZXhPZkF0ID0gdXNlckVtYWlsLmluZGV4T2YoJ0AnKTtcbiAgcmV0dXJuICd1c2VyOi8vJyArIHVzZXJFbWFpbC5zdWJzdHJpbmcoaW5kZXhPZkF0ICsgMSwgdXNlckVtYWlsLmxlbmd0aCkgKyAnLycgKyB1c2VyRW1haWwuc3Vic3RyaW5nKDAsIGluZGV4T2ZBdCk7XG59XG5cbi8qKlxyXG4gKiBPYnRhaW5zIHRoZSB1c2VyIGVtYWlsIHRoYXQgY29ycmVzcG9uZHMgdG8gYSBnaXZlbiBVUkxcclxuICogQHBhcmFtICB7VVJMLlVSTH0gdXNlclVSTCBUaGUgdXNlciBVUkxcclxuICogQHJldHVybiB7c3RyaW5nfSB1c2VyRW1haWwgVGhlIHVzZXIgZW1haWxcclxuICovXG5mdW5jdGlvbiBnZXRVc2VyRW1haWxGcm9tVVJMKHVzZXJVUkwpIHtcbiAgdmFyIHVybCA9IGRpdmlkZVVSTCh1c2VyVVJMKTtcbiAgcmV0dXJuIHVybC5pZGVudGl0eS5yZXBsYWNlKCcvJywgJycpICsgJ0AnICsgdXJsLmRvbWFpbjsgLy8gaWRlbnRpdHkgZmllbGQgaGFzICcvZXhhbXBsZUlEJyBpbnN0ZWFkIG9mICdleGFtcGxlSUQnXG59XG5cbi8qKlxyXG4gKiBDaGVjayBpZiB0aGUgdXNlciBpZGVudGlmaWVyIGlzIGFscmVhZHkgaW4gdGhlIFVSTCBmb3JtYXQsIGlmIG5vdCwgY29udmVydCB0byBVUkwgZm9ybWF0XHJcbiAqIEBwYXJhbSAge3N0cmluZ30gICBpZGVudGlmaWVyICB1c2VyIGlkZW50aWZpZXJcclxuICogQHJldHVybiB7c3RyaW5nfSAgIHVzZXJVUkwgICAgdGhlIHVzZXIgVVJMXHJcbiAqL1xuZnVuY3Rpb24gY29udmVydFRvVXNlclVSTChpZGVudGlmaWVyKSB7XG5cbiAgLy8gY2hlY2sgaWYgdGhlIGlkZW50aWZpZXIgaXMgYWxyZWFkeSBpbiB0aGUgdXJsIGZvcm1hdFxuICBpZiAoaWRlbnRpZmllci5zdWJzdHJpbmcoMCwgNykgPT09ICd1c2VyOi8vJykge1xuICAgIHZhciBkaXZpZGVkVVJMID0gZGl2aWRlVVJMKGlkZW50aWZpZXIpO1xuXG4gICAgLy9jaGVjayBpZiB0aGUgdXJsIGlzIHdlbGwgZm9ybWF0ZWRcbiAgICBpZiAoZGl2aWRlZFVSTC5kb21haW4gJiYgZGl2aWRlZFVSTC5pZGVudGl0eSkge1xuICAgICAgcmV0dXJuIGlkZW50aWZpZXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93ICd1c2VyVVJMIHdpdGggd3JvbmcgZm9ybWF0JztcbiAgICB9XG5cbiAgICAvL2lmIG5vdCwgY29udmVydCB0aGUgdXNlciBlbWFpbCB0byBVUkwgZm9ybWF0XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGdldFVzZXJVUkxGcm9tRW1haWwoaWRlbnRpZmllcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tBdHRyaWJ1dGUocGF0aCkge1xuXG4gIHZhciByZWdleCA9IC8oKChbYS16QS1aXSspOlxcL1xcLyhbMC05YS16QS1aXVstXFx3XSpbMC05YS16QS1aXVxcLikrW2EtekEtWl17Miw5fSlcXC9bYS16QS1aMC05XFwuXStAW2EtekEtWjAtOV0rKFxcLSk/W2EtekEtWjAtOV0rKFxcLik/W2EtekEtWjAtOV17MiwxMH0/XFwuW2EtekEtWl17MiwxMH0pKC4rKD89LmlkZW50aXR5KSk/L2dtO1xuXG4gIHZhciBsaXN0ID0gW107XG4gIHZhciBmaW5hbCA9IFtdO1xuICB2YXIgdGVzdCA9IHBhdGgubWF0Y2gocmVnZXgpO1xuXG4gIGlmICh0ZXN0ID09IG51bGwpIHtcbiAgICBmaW5hbCA9IHBhdGguc3BsaXQoJy4nKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbSA9IHZvaWQgMDtcbiAgICB3aGlsZSAoKG0gPSByZWdleC5leGVjKHBhdGgpKSAhPT0gbnVsbCkge1xuICAgICAgLy8gVGhpcyBpcyBuZWNlc3NhcnkgdG8gYXZvaWQgaW5maW5pdGUgbG9vcHMgd2l0aCB6ZXJvLXdpZHRoIG1hdGNoZXNcbiAgICAgIGlmIChtLmluZGV4ID09PSByZWdleC5sYXN0SW5kZXgpIHtcbiAgICAgICAgcmVnZXgubGFzdEluZGV4Kys7XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSByZXN1bHQgY2FuIGJlIGFjY2Vzc2VkIHRocm91Z2ggdGhlIGBtYC12YXJpYWJsZS5cbiAgICAgIG0uZm9yRWFjaChmdW5jdGlvbiAobWF0Y2gsIGdyb3VwSW5kZXgpIHtcbiAgICAgICAgaWYgKGdyb3VwSW5kZXggPT09IDApIHtcbiAgICAgICAgICBsaXN0LnB1c2gobWF0Y2gpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgdmFyIHJlc3VsdCA9IHZvaWQgMDtcbiAgICBsaXN0LmZvckVhY2goZnVuY3Rpb24gKHVybCkge1xuICAgICAgcmVzdWx0ID0gcGF0aC5yZXBsYWNlKHVybCwgJyorKicpO1xuXG4gICAgICBmaW5hbCA9IHJlc3VsdC5zcGxpdCgnLicpLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICBpZiAoaXRlbSA9PT0gJyorKicpIHtcbiAgICAgICAgICByZXR1cm4gdXJsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBjb25zb2xlLmxvZygnW1NlcnZpY2VGcmFtZXdvcmsuVXRpbHMuY2hlY2tBdHRyaWJ1dGVdJywgZmluYWwpO1xuICByZXR1cm4gZmluYWw7XG59XG5cbmZ1bmN0aW9uIHBhcnNlQXR0cmlidXRlcyhwYXRoKSB7XG4gIHZhciByZWdleCA9IC8oWzAtOWEtekEtWl1bLVxcd10qKTpcXC9cXC8vZztcblxuICB2YXIgc3RyaW5nMyA9ICdpZGVudGl0eSc7XG5cbiAgaWYgKCFwYXRoLmluY2x1ZGVzKCc6Ly8nKSkge1xuICAgIHJldHVybiBwYXRoLnNwbGl0KCcuJyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHN0cmluZzEgPSBwYXRoLnNwbGl0KHJlZ2V4KVswXTtcblxuICAgIHZhciBhcnJheTEgPSBzdHJpbmcxLnNwbGl0KCcuJyk7XG5cbiAgICB2YXIgc3RyaW5nMiA9IHBhdGgucmVwbGFjZShzdHJpbmcxLCAnJyk7XG5cbiAgICBpZiAocGF0aC5pbmNsdWRlcyhzdHJpbmczKSkge1xuXG4gICAgICB2YXIgYXJyYXkyID0gc3RyaW5nMi5zcGxpdChzdHJpbmczICsgJy4nKTtcblxuICAgICAgY29uc29sZS5sb2coJ2FycmF5MiAnICsgYXJyYXkyKTtcblxuICAgICAgc3RyaW5nMiA9IGFycmF5MlswXS5zbGljZSgnLicsIC0xKTtcblxuICAgICAgYXJyYXkyID0gYXJyYXkyWzFdLnNwbGl0KCcuJyk7XG5cbiAgICAgIGFycmF5MS5wdXNoKHN0cmluZzIsIHN0cmluZzMpO1xuXG4gICAgICBhcnJheTEgPSBhcnJheTEuY29uY2F0KGFycmF5Mik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFycmF5MS5wdXNoKHN0cmluZzIpO1xuICAgIH1cblxuICAgIHJldHVybiBhcnJheTEuZmlsdGVyKEJvb2xlYW4pO1xuICB9XG59XG5cbi8qKiovIH0pLFxuLyogNzIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxubW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDgzKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG4vKioqLyB9KSxcbi8qIDczICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBNRVRBICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMjMpKCdtZXRhJylcbiAgLCBpc09iamVjdCA9IF9fd2VicGFja19yZXF1aXJlX18oNilcbiAgLCBoYXMgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTIpXG4gICwgc2V0RGVzYyAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpLmZcbiAgLCBpZCAgICAgICA9IDA7XG52YXIgaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZSB8fCBmdW5jdGlvbigpe1xuICByZXR1cm4gdHJ1ZTtcbn07XG52YXIgRlJFRVpFID0gIV9fd2VicGFja19yZXF1aXJlX18oMTEpKGZ1bmN0aW9uKCl7XG4gIHJldHVybiBpc0V4dGVuc2libGUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSk7XG59KTtcbnZhciBzZXRNZXRhID0gZnVuY3Rpb24oaXQpe1xuICBzZXREZXNjKGl0LCBNRVRBLCB7dmFsdWU6IHtcbiAgICBpOiAnTycgKyArK2lkLCAvLyBvYmplY3QgSURcbiAgICB3OiB7fSAgICAgICAgICAvLyB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9fSk7XG59O1xudmFyIGZhc3RLZXkgPSBmdW5jdGlvbihpdCwgY3JlYXRlKXtcbiAgLy8gcmV0dXJuIHByaW1pdGl2ZSB3aXRoIHByZWZpeFxuICBpZighaXNPYmplY3QoaXQpKXJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6ICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgPyAnUycgOiAnUCcpICsgaXQ7XG4gIGlmKCFoYXMoaXQsIE1FVEEpKXtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmKCFpc0V4dGVuc2libGUoaXQpKXJldHVybiAnRic7XG4gICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGFcbiAgICBpZighY3JlYXRlKXJldHVybiAnRSc7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIG9iamVjdCBJRFxuICB9IHJldHVybiBpdFtNRVRBXS5pO1xufTtcbnZhciBnZXRXZWFrID0gZnVuY3Rpb24oaXQsIGNyZWF0ZSl7XG4gIGlmKCFoYXMoaXQsIE1FVEEpKXtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmKCFpc0V4dGVuc2libGUoaXQpKXJldHVybiB0cnVlO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYoIWNyZWF0ZSlyZXR1cm4gZmFsc2U7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIGhhc2ggd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSByZXR1cm4gaXRbTUVUQV0udztcbn07XG4vLyBhZGQgbWV0YWRhdGEgb24gZnJlZXplLWZhbWlseSBtZXRob2RzIGNhbGxpbmdcbnZhciBvbkZyZWV6ZSA9IGZ1bmN0aW9uKGl0KXtcbiAgaWYoRlJFRVpFICYmIG1ldGEuTkVFRCAmJiBpc0V4dGVuc2libGUoaXQpICYmICFoYXMoaXQsIE1FVEEpKXNldE1ldGEoaXQpO1xuICByZXR1cm4gaXQ7XG59O1xudmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgS0VZOiAgICAgIE1FVEEsXG4gIE5FRUQ6ICAgICBmYWxzZSxcbiAgZmFzdEtleTogIGZhc3RLZXksXG4gIGdldFdlYWs6ICBnZXRXZWFrLFxuICBvbkZyZWV6ZTogb25GcmVlemVcbn07XG5cbi8qKiovIH0pLFxuLyogNzQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIGNsYXNzb2YgICA9IF9fd2VicGFja19yZXF1aXJlX18oNTUpXG4gICwgSVRFUkFUT1IgID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKSgnaXRlcmF0b3InKVxuICAsIEl0ZXJhdG9ycyA9IF9fd2VicGFja19yZXF1aXJlX18oMTYpO1xubW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApLmdldEl0ZXJhdG9yTWV0aG9kID0gZnVuY3Rpb24oaXQpe1xuICBpZihpdCAhPSB1bmRlZmluZWQpcmV0dXJuIGl0W0lURVJBVE9SXVxuICAgIHx8IGl0WydAQGl0ZXJhdG9yJ11cbiAgICB8fCBJdGVyYXRvcnNbY2xhc3NvZihpdCldO1xufTtcblxuLyoqKi8gfSksXG4vKiA3NSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IF9fd2VicGFja19yZXF1aXJlX18oNzkpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cbi8qKiovIH0pLFxuLyogNzYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxubW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDgyKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG4vKioqLyB9KSxcbi8qIDc3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogX193ZWJwYWNrX3JlcXVpcmVfXyg4NCksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuLyoqKi8gfSksXG4vKiA3OCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IF9fd2VicGFja19yZXF1aXJlX18oODUpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cbi8qKiovIH0pLFxuLyogNzkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuX193ZWJwYWNrX3JlcXVpcmVfXygxMDEpO1xudmFyICRPYmplY3QgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlKFAsIEQpe1xuICByZXR1cm4gJE9iamVjdC5jcmVhdGUoUCwgRCk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDgwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbl9fd2VicGFja19yZXF1aXJlX18oMTAyKTtcbm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKS5PYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG5cbi8qKiovIH0pLFxuLyogODEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuX193ZWJwYWNrX3JlcXVpcmVfXygxMDMpO1xubW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApLk9iamVjdC5rZXlzO1xuXG4vKioqLyB9KSxcbi8qIDgyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbl9fd2VicGFja19yZXF1aXJlX18oMTA0KTtcbm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKS5PYmplY3Quc2V0UHJvdG90eXBlT2Y7XG5cbi8qKiovIH0pLFxuLyogODMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuX193ZWJwYWNrX3JlcXVpcmVfXyg1NCk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDUwKTtcbl9fd2VicGFja19yZXF1aXJlX18oNTEpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxMDUpO1xubW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApLlByb21pc2U7XG5cbi8qKiovIH0pLFxuLyogODQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuX193ZWJwYWNrX3JlcXVpcmVfXygxMDYpO1xuX193ZWJwYWNrX3JlcXVpcmVfXyg1NCk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDEwNyk7XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDEwOCk7XG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMCkuU3ltYm9sO1xuXG4vKioqLyB9KSxcbi8qIDg1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbl9fd2VicGFja19yZXF1aXJlX18oNTApO1xuX193ZWJwYWNrX3JlcXVpcmVfXyg1MSk7XG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oNDkpLmYoJ2l0ZXJhdG9yJyk7XG5cbi8qKiovIH0pLFxuLyogODYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwgQ29uc3RydWN0b3IsIG5hbWUsIGZvcmJpZGRlbkZpZWxkKXtcbiAgaWYoIShpdCBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSB8fCAoZm9yYmlkZGVuRmllbGQgIT09IHVuZGVmaW5lZCAmJiBmb3JiaWRkZW5GaWVsZCBpbiBpdCkpe1xuICAgIHRocm93IFR5cGVFcnJvcihuYW1lICsgJzogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7XG4gIH0gcmV0dXJuIGl0O1xufTtcblxuLyoqKi8gfSksXG4vKiA4NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyBhbGwgZW51bWVyYWJsZSBvYmplY3Qga2V5cywgaW5jbHVkZXMgc3ltYm9sc1xudmFyIGdldEtleXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE4KVxuICAsIGdPUFMgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDU4KVxuICAsIHBJRSAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQxKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICB2YXIgcmVzdWx0ICAgICA9IGdldEtleXMoaXQpXG4gICAgLCBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICBpZihnZXRTeW1ib2xzKXtcbiAgICB2YXIgc3ltYm9scyA9IGdldFN5bWJvbHMoaXQpXG4gICAgICAsIGlzRW51bSAgPSBwSUUuZlxuICAgICAgLCBpICAgICAgID0gMFxuICAgICAgLCBrZXk7XG4gICAgd2hpbGUoc3ltYm9scy5sZW5ndGggPiBpKWlmKGlzRW51bS5jYWxsKGl0LCBrZXkgPSBzeW1ib2xzW2krK10pKXJlc3VsdC5wdXNoKGtleSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKiovIH0pLFxuLyogODggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIGN0eCAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNClcbiAgLCBjYWxsICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oOTIpXG4gICwgaXNBcnJheUl0ZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkwKVxuICAsIGFuT2JqZWN0ICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KVxuICAsIHRvTGVuZ3RoICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0NylcbiAgLCBnZXRJdGVyRm4gICA9IF9fd2VicGFja19yZXF1aXJlX18oNzQpXG4gICwgQlJFQUsgICAgICAgPSB7fVxuICAsIFJFVFVSTiAgICAgID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXRlcmFibGUsIGVudHJpZXMsIGZuLCB0aGF0LCBJVEVSQVRPUil7XG4gIHZhciBpdGVyRm4gPSBJVEVSQVRPUiA/IGZ1bmN0aW9uKCl7IHJldHVybiBpdGVyYWJsZTsgfSA6IGdldEl0ZXJGbihpdGVyYWJsZSlcbiAgICAsIGYgICAgICA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKVxuICAgICwgaW5kZXggID0gMFxuICAgICwgbGVuZ3RoLCBzdGVwLCBpdGVyYXRvciwgcmVzdWx0O1xuICBpZih0eXBlb2YgaXRlckZuICE9ICdmdW5jdGlvbicpdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZihpc0FycmF5SXRlcihpdGVyRm4pKWZvcihsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKyl7XG4gICAgcmVzdWx0ID0gZW50cmllcyA/IGYoYW5PYmplY3Qoc3RlcCA9IGl0ZXJhYmxlW2luZGV4XSlbMF0sIHN0ZXBbMV0pIDogZihpdGVyYWJsZVtpbmRleF0pO1xuICAgIGlmKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvcihpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKGl0ZXJhYmxlKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyApe1xuICAgIHJlc3VsdCA9IGNhbGwoaXRlcmF0b3IsIGYsIHN0ZXAudmFsdWUsIGVudHJpZXMpO1xuICAgIGlmKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgID0gQlJFQUs7XG5leHBvcnRzLlJFVFVSTiA9IFJFVFVSTjtcblxuLyoqKi8gfSksXG4vKiA4OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyBmYXN0IGFwcGx5LCBodHRwOi8vanNwZXJmLmxua2l0LmNvbS9mYXN0LWFwcGx5LzVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZm4sIGFyZ3MsIHRoYXQpe1xuICB2YXIgdW4gPSB0aGF0ID09PSB1bmRlZmluZWQ7XG4gIHN3aXRjaChhcmdzLmxlbmd0aCl7XG4gICAgY2FzZSAwOiByZXR1cm4gdW4gPyBmbigpXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQpO1xuICAgIGNhc2UgMTogcmV0dXJuIHVuID8gZm4oYXJnc1swXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSk7XG4gICAgY2FzZSAyOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdKTtcbiAgICBjYXNlIDM6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgIGNhc2UgNDogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSk7XG4gIH0gcmV0dXJuICAgICAgICAgICAgICBmbi5hcHBseSh0aGF0LCBhcmdzKTtcbn07XG5cbi8qKiovIH0pLFxuLyogOTAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuLy8gY2hlY2sgb24gZGVmYXVsdCBBcnJheSBpdGVyYXRvclxudmFyIEl0ZXJhdG9ycyAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE2KVxuICAsIElURVJBVE9SICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpKCdpdGVyYXRvcicpXG4gICwgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpdCAhPT0gdW5kZWZpbmVkICYmIChJdGVyYXRvcnMuQXJyYXkgPT09IGl0IHx8IEFycmF5UHJvdG9bSVRFUkFUT1JdID09PSBpdCk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDkxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIDcuMi4yIElzQXJyYXkoYXJndW1lbnQpXG52YXIgY29mID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMCk7XG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmcpe1xuICByZXR1cm4gY29mKGFyZykgPT0gJ0FycmF5Jztcbn07XG5cbi8qKiovIH0pLFxuLyogOTIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuLy8gY2FsbCBzb21ldGhpbmcgb24gaXRlcmF0b3Igc3RlcCB3aXRoIHNhZmUgY2xvc2luZyBvbiBlcnJvclxudmFyIGFuT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXRlcmF0b3IsIGZuLCB2YWx1ZSwgZW50cmllcyl7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVudHJpZXMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTtcbiAgLy8gNy40LjYgSXRlcmF0b3JDbG9zZShpdGVyYXRvciwgY29tcGxldGlvbilcbiAgfSBjYXRjaChlKXtcbiAgICB2YXIgcmV0ID0gaXRlcmF0b3JbJ3JldHVybiddO1xuICAgIGlmKHJldCAhPT0gdW5kZWZpbmVkKWFuT2JqZWN0KHJldC5jYWxsKGl0ZXJhdG9yKSk7XG4gICAgdGhyb3cgZTtcbiAgfVxufTtcblxuLyoqKi8gfSksXG4vKiA5MyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgSVRFUkFUT1IgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKSgnaXRlcmF0b3InKVxuICAsIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgcml0ZXIgPSBbN11bSVRFUkFUT1JdKCk7XG4gIHJpdGVyWydyZXR1cm4nXSA9IGZ1bmN0aW9uKCl7IFNBRkVfQ0xPU0lORyA9IHRydWU7IH07XG4gIEFycmF5LmZyb20ocml0ZXIsIGZ1bmN0aW9uKCl7IHRocm93IDI7IH0pO1xufSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGV4ZWMsIHNraXBDbG9zaW5nKXtcbiAgaWYoIXNraXBDbG9zaW5nICYmICFTQUZFX0NMT1NJTkcpcmV0dXJuIGZhbHNlO1xuICB2YXIgc2FmZSA9IGZhbHNlO1xuICB0cnkge1xuICAgIHZhciBhcnIgID0gWzddXG4gICAgICAsIGl0ZXIgPSBhcnJbSVRFUkFUT1JdKCk7XG4gICAgaXRlci5uZXh0ID0gZnVuY3Rpb24oKXsgcmV0dXJuIHtkb25lOiBzYWZlID0gdHJ1ZX07IH07XG4gICAgYXJyW0lURVJBVE9SXSA9IGZ1bmN0aW9uKCl7IHJldHVybiBpdGVyOyB9O1xuICAgIGV4ZWMoYXJyKTtcbiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gc2FmZTtcbn07XG5cbi8qKiovIH0pLFxuLyogOTQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIGdldEtleXMgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTgpXG4gICwgdG9JT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9iamVjdCwgZWwpe1xuICB2YXIgTyAgICAgID0gdG9JT2JqZWN0KG9iamVjdClcbiAgICAsIGtleXMgICA9IGdldEtleXMoTylcbiAgICAsIGxlbmd0aCA9IGtleXMubGVuZ3RoXG4gICAgLCBpbmRleCAgPSAwXG4gICAgLCBrZXk7XG4gIHdoaWxlKGxlbmd0aCA+IGluZGV4KWlmKE9ba2V5ID0ga2V5c1tpbmRleCsrXV0gPT09IGVsKXJldHVybiBrZXk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDk1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBnbG9iYWwgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpXG4gICwgbWFjcm90YXNrID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2OCkuc2V0XG4gICwgT2JzZXJ2ZXIgID0gZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIgfHwgZ2xvYmFsLldlYktpdE11dGF0aW9uT2JzZXJ2ZXJcbiAgLCBwcm9jZXNzICAgPSBnbG9iYWwucHJvY2Vzc1xuICAsIFByb21pc2UgICA9IGdsb2JhbC5Qcm9taXNlXG4gICwgaXNOb2RlICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMCkocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCl7XG4gIHZhciBoZWFkLCBsYXN0LCBub3RpZnk7XG5cbiAgdmFyIGZsdXNoID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgcGFyZW50LCBmbjtcbiAgICBpZihpc05vZGUgJiYgKHBhcmVudCA9IHByb2Nlc3MuZG9tYWluKSlwYXJlbnQuZXhpdCgpO1xuICAgIHdoaWxlKGhlYWQpe1xuICAgICAgZm4gICA9IGhlYWQuZm47XG4gICAgICBoZWFkID0gaGVhZC5uZXh0O1xuICAgICAgdHJ5IHtcbiAgICAgICAgZm4oKTtcbiAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIGlmKGhlYWQpbm90aWZ5KCk7XG4gICAgICAgIGVsc2UgbGFzdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9IGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgaWYocGFyZW50KXBhcmVudC5lbnRlcigpO1xuICB9O1xuXG4gIC8vIE5vZGUuanNcbiAgaWYoaXNOb2RlKXtcbiAgICBub3RpZnkgPSBmdW5jdGlvbigpe1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhmbHVzaCk7XG4gICAgfTtcbiAgLy8gYnJvd3NlcnMgd2l0aCBNdXRhdGlvbk9ic2VydmVyXG4gIH0gZWxzZSBpZihPYnNlcnZlcil7XG4gICAgdmFyIHRvZ2dsZSA9IHRydWVcbiAgICAgICwgbm9kZSAgID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICAgIG5ldyBPYnNlcnZlcihmbHVzaCkub2JzZXJ2ZShub2RlLCB7Y2hhcmFjdGVyRGF0YTogdHJ1ZX0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uKCl7XG4gICAgICBub2RlLmRhdGEgPSB0b2dnbGUgPSAhdG9nZ2xlO1xuICAgIH07XG4gIC8vIGVudmlyb25tZW50cyB3aXRoIG1heWJlIG5vbi1jb21wbGV0ZWx5IGNvcnJlY3QsIGJ1dCBleGlzdGVudCBQcm9taXNlXG4gIH0gZWxzZSBpZihQcm9taXNlICYmIFByb21pc2UucmVzb2x2ZSl7XG4gICAgdmFyIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoKTtcbiAgICBub3RpZnkgPSBmdW5jdGlvbigpe1xuICAgICAgcHJvbWlzZS50aGVuKGZsdXNoKTtcbiAgICB9O1xuICAvLyBmb3Igb3RoZXIgZW52aXJvbm1lbnRzIC0gbWFjcm90YXNrIGJhc2VkIG9uOlxuICAvLyAtIHNldEltbWVkaWF0ZVxuICAvLyAtIE1lc3NhZ2VDaGFubmVsXG4gIC8vIC0gd2luZG93LnBvc3RNZXNzYWdcbiAgLy8gLSBvbnJlYWR5c3RhdGVjaGFuZ2VcbiAgLy8gLSBzZXRUaW1lb3V0XG4gIH0gZWxzZSB7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24oKXtcbiAgICAgIC8vIHN0cmFuZ2UgSUUgKyB3ZWJwYWNrIGRldiBzZXJ2ZXIgYnVnIC0gdXNlIC5jYWxsKGdsb2JhbClcbiAgICAgIG1hY3JvdGFzay5jYWxsKGdsb2JhbCwgZmx1c2gpO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24oZm4pe1xuICAgIHZhciB0YXNrID0ge2ZuOiBmbiwgbmV4dDogdW5kZWZpbmVkfTtcbiAgICBpZihsYXN0KWxhc3QubmV4dCA9IHRhc2s7XG4gICAgaWYoIWhlYWQpe1xuICAgICAgaGVhZCA9IHRhc2s7XG4gICAgICBub3RpZnkoKTtcbiAgICB9IGxhc3QgPSB0YXNrO1xuICB9O1xufTtcblxuLyoqKi8gfSksXG4vKiA5NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyBmYWxsYmFjayBmb3IgSUUxMSBidWdneSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB3aXRoIGlmcmFtZSBhbmQgd2luZG93XG52YXIgdG9JT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMylcbiAgLCBnT1BOICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDY2KS5mXG4gICwgdG9TdHJpbmcgID0ge30udG9TdHJpbmc7XG5cbnZhciB3aW5kb3dOYW1lcyA9IHR5cGVvZiB3aW5kb3cgPT0gJ29iamVjdCcgJiYgd2luZG93ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzXG4gID8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KSA6IFtdO1xuXG52YXIgZ2V0V2luZG93TmFtZXMgPSBmdW5jdGlvbihpdCl7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGdPUE4oaXQpO1xuICB9IGNhdGNoKGUpe1xuICAgIHJldHVybiB3aW5kb3dOYW1lcy5zbGljZSgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCl7XG4gIHJldHVybiB3aW5kb3dOYW1lcyAmJiB0b1N0cmluZy5jYWxsKGl0KSA9PSAnW29iamVjdCBXaW5kb3ddJyA/IGdldFdpbmRvd05hbWVzKGl0KSA6IGdPUE4odG9JT2JqZWN0KGl0KSk7XG59O1xuXG5cbi8qKiovIH0pLFxuLyogOTcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxudmFyIGhpZGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih0YXJnZXQsIHNyYywgc2FmZSl7XG4gIGZvcih2YXIga2V5IGluIHNyYyl7XG4gICAgaWYoc2FmZSAmJiB0YXJnZXRba2V5XSl0YXJnZXRba2V5XSA9IHNyY1trZXldO1xuICAgIGVsc2UgaGlkZSh0YXJnZXQsIGtleSwgc3JjW2tleV0pO1xuICB9IHJldHVybiB0YXJnZXQ7XG59O1xuXG4vKioqLyB9KSxcbi8qIDk4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIFdvcmtzIHdpdGggX19wcm90b19fIG9ubHkuIE9sZCB2OCBjYW4ndCB3b3JrIHdpdGggbnVsbCBwcm90byBvYmplY3RzLlxuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cbnZhciBpc09iamVjdCA9IF9fd2VicGFja19yZXF1aXJlX18oNilcbiAgLCBhbk9iamVjdCA9IF9fd2VicGFja19yZXF1aXJlX18oNSk7XG52YXIgY2hlY2sgPSBmdW5jdGlvbihPLCBwcm90byl7XG4gIGFuT2JqZWN0KE8pO1xuICBpZighaXNPYmplY3QocHJvdG8pICYmIHByb3RvICE9PSBudWxsKXRocm93IFR5cGVFcnJvcihwcm90byArIFwiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlIVwiKTtcbn07XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgKCdfX3Byb3RvX18nIGluIHt9ID8gLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGZ1bmN0aW9uKHRlc3QsIGJ1Z2d5LCBzZXQpe1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNCkoRnVuY3Rpb24uY2FsbCwgX193ZWJwYWNrX3JlcXVpcmVfXyg1NykuZihPYmplY3QucHJvdG90eXBlLCAnX19wcm90b19fJykuc2V0LCAyKTtcbiAgICAgICAgc2V0KHRlc3QsIFtdKTtcbiAgICAgICAgYnVnZ3kgPSAhKHRlc3QgaW5zdGFuY2VvZiBBcnJheSk7XG4gICAgICB9IGNhdGNoKGUpeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90byl7XG4gICAgICAgIGNoZWNrKE8sIHByb3RvKTtcbiAgICAgICAgaWYoYnVnZ3kpTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuXG4vKioqLyB9KSxcbi8qIDk5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgZ2xvYmFsICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpXG4gICwgY29yZSAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApXG4gICwgZFAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpXG4gICwgREVTQ1JJUFRPUlMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpXG4gICwgU1BFQ0lFUyAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpKCdzcGVjaWVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oS0VZKXtcbiAgdmFyIEMgPSB0eXBlb2YgY29yZVtLRVldID09ICdmdW5jdGlvbicgPyBjb3JlW0tFWV0gOiBnbG9iYWxbS0VZXTtcbiAgaWYoREVTQ1JJUFRPUlMgJiYgQyAmJiAhQ1tTUEVDSUVTXSlkUC5mKEMsIFNQRUNJRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfVxuICB9KTtcbn07XG5cbi8qKiovIH0pLFxuLyogMTAwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIDcuMy4yMCBTcGVjaWVzQ29uc3RydWN0b3IoTywgZGVmYXVsdENvbnN0cnVjdG9yKVxudmFyIGFuT2JqZWN0ICA9IF9fd2VicGFja19yZXF1aXJlX18oNSlcbiAgLCBhRnVuY3Rpb24gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE5KVxuICAsIFNQRUNJRVMgICA9IF9fd2VicGFja19yZXF1aXJlX18oMykoJ3NwZWNpZXMnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oTywgRCl7XG4gIHZhciBDID0gYW5PYmplY3QoTykuY29uc3RydWN0b3IsIFM7XG4gIHJldHVybiBDID09PSB1bmRlZmluZWQgfHwgKFMgPSBhbk9iamVjdChDKVtTUEVDSUVTXSkgPT0gdW5kZWZpbmVkID8gRCA6IGFGdW5jdGlvbihTKTtcbn07XG5cbi8qKiovIH0pLFxuLyogMTAxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciAkZXhwb3J0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KVxuLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHtjcmVhdGU6IF9fd2VicGFja19yZXF1aXJlX18oMzcpfSk7XG5cbi8qKiovIH0pLFxuLyogMTAyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIDE5LjEuMi45IE9iamVjdC5nZXRQcm90b3R5cGVPZihPKVxudmFyIHRvT2JqZWN0ICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMzIpXG4gICwgJGdldFByb3RvdHlwZU9mID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0Myk7XG5cbl9fd2VicGFja19yZXF1aXJlX18oNDUpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uKCl7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRQcm90b3R5cGVPZihpdCl7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG5cbi8qKiovIH0pLFxuLyogMTAzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIDE5LjEuMi4xNCBPYmplY3Qua2V5cyhPKVxudmFyIHRvT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMilcbiAgLCAka2V5cyAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTgpO1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDQ1KSgna2V5cycsIGZ1bmN0aW9uKCl7XG4gIHJldHVybiBmdW5jdGlvbiBrZXlzKGl0KXtcbiAgICByZXR1cm4gJGtleXModG9PYmplY3QoaXQpKTtcbiAgfTtcbn0pO1xuXG4vKioqLyB9KSxcbi8qIDEwNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7c2V0UHJvdG90eXBlT2Y6IF9fd2VicGFja19yZXF1aXJlX18oOTgpLnNldH0pO1xuXG4vKioqLyB9KSxcbi8qIDEwNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIExJQlJBUlkgICAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMjYpXG4gICwgZ2xvYmFsICAgICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKVxuICAsIGN0eCAgICAgICAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTQpXG4gICwgY2xhc3NvZiAgICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1NSlcbiAgLCAkZXhwb3J0ICAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpXG4gICwgaXNPYmplY3QgICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KVxuICAsIGFGdW5jdGlvbiAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMTkpXG4gICwgYW5JbnN0YW5jZSAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4NilcbiAgLCBmb3JPZiAgICAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDg4KVxuICAsIHNwZWNpZXNDb25zdHJ1Y3RvciA9IF9fd2VicGFja19yZXF1aXJlX18oMTAwKVxuICAsIHRhc2sgICAgICAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNjgpLnNldFxuICAsIG1pY3JvdGFzayAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oOTUpKClcbiAgLCBQUk9NSVNFICAgICAgICAgICAgPSAnUHJvbWlzZSdcbiAgLCBUeXBlRXJyb3IgICAgICAgICAgPSBnbG9iYWwuVHlwZUVycm9yXG4gICwgcHJvY2VzcyAgICAgICAgICAgID0gZ2xvYmFsLnByb2Nlc3NcbiAgLCAkUHJvbWlzZSAgICAgICAgICAgPSBnbG9iYWxbUFJPTUlTRV1cbiAgLCBwcm9jZXNzICAgICAgICAgICAgPSBnbG9iYWwucHJvY2Vzc1xuICAsIGlzTm9kZSAgICAgICAgICAgICA9IGNsYXNzb2YocHJvY2VzcykgPT0gJ3Byb2Nlc3MnXG4gICwgZW1wdHkgICAgICAgICAgICAgID0gZnVuY3Rpb24oKXsgLyogZW1wdHkgKi8gfVxuICAsIEludGVybmFsLCBHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHksIFdyYXBwZXI7XG5cbnZhciBVU0VfTkFUSVZFID0gISFmdW5jdGlvbigpe1xuICB0cnkge1xuICAgIC8vIGNvcnJlY3Qgc3ViY2xhc3Npbmcgd2l0aCBAQHNwZWNpZXMgc3VwcG9ydFxuICAgIHZhciBwcm9taXNlICAgICA9ICRQcm9taXNlLnJlc29sdmUoMSlcbiAgICAgICwgRmFrZVByb21pc2UgPSAocHJvbWlzZS5jb25zdHJ1Y3RvciA9IHt9KVtfX3dlYnBhY2tfcmVxdWlyZV9fKDMpKCdzcGVjaWVzJyldID0gZnVuY3Rpb24oZXhlYyl7IGV4ZWMoZW1wdHksIGVtcHR5KTsgfTtcbiAgICAvLyB1bmhhbmRsZWQgcmVqZWN0aW9ucyB0cmFja2luZyBzdXBwb3J0LCBOb2RlSlMgUHJvbWlzZSB3aXRob3V0IGl0IGZhaWxzIEBAc3BlY2llcyB0ZXN0XG4gICAgcmV0dXJuIChpc05vZGUgfHwgdHlwZW9mIFByb21pc2VSZWplY3Rpb25FdmVudCA9PSAnZnVuY3Rpb24nKSAmJiBwcm9taXNlLnRoZW4oZW1wdHkpIGluc3RhbmNlb2YgRmFrZVByb21pc2U7XG4gIH0gY2F0Y2goZSl7IC8qIGVtcHR5ICovIH1cbn0oKTtcblxuLy8gaGVscGVyc1xudmFyIHNhbWVDb25zdHJ1Y3RvciA9IGZ1bmN0aW9uKGEsIGIpe1xuICAvLyB3aXRoIGxpYnJhcnkgd3JhcHBlciBzcGVjaWFsIGNhc2VcbiAgcmV0dXJuIGEgPT09IGIgfHwgYSA9PT0gJFByb21pc2UgJiYgYiA9PT0gV3JhcHBlcjtcbn07XG52YXIgaXNUaGVuYWJsZSA9IGZ1bmN0aW9uKGl0KXtcbiAgdmFyIHRoZW47XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgdHlwZW9mICh0aGVuID0gaXQudGhlbikgPT0gJ2Z1bmN0aW9uJyA/IHRoZW4gOiBmYWxzZTtcbn07XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbihDKXtcbiAgcmV0dXJuIHNhbWVDb25zdHJ1Y3RvcigkUHJvbWlzZSwgQylcbiAgICA/IG5ldyBQcm9taXNlQ2FwYWJpbGl0eShDKVxuICAgIDogbmV3IEdlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eShDKTtcbn07XG52YXIgUHJvbWlzZUNhcGFiaWxpdHkgPSBHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbihDKXtcbiAgdmFyIHJlc29sdmUsIHJlamVjdDtcbiAgdGhpcy5wcm9taXNlID0gbmV3IEMoZnVuY3Rpb24oJCRyZXNvbHZlLCAkJHJlamVjdCl7XG4gICAgaWYocmVzb2x2ZSAhPT0gdW5kZWZpbmVkIHx8IHJlamVjdCAhPT0gdW5kZWZpbmVkKXRocm93IFR5cGVFcnJvcignQmFkIFByb21pc2UgY29uc3RydWN0b3InKTtcbiAgICByZXNvbHZlID0gJCRyZXNvbHZlO1xuICAgIHJlamVjdCAgPSAkJHJlamVjdDtcbiAgfSk7XG4gIHRoaXMucmVzb2x2ZSA9IGFGdW5jdGlvbihyZXNvbHZlKTtcbiAgdGhpcy5yZWplY3QgID0gYUZ1bmN0aW9uKHJlamVjdCk7XG59O1xudmFyIHBlcmZvcm0gPSBmdW5jdGlvbihleGVjKXtcbiAgdHJ5IHtcbiAgICBleGVjKCk7XG4gIH0gY2F0Y2goZSl7XG4gICAgcmV0dXJuIHtlcnJvcjogZX07XG4gIH1cbn07XG52YXIgbm90aWZ5ID0gZnVuY3Rpb24ocHJvbWlzZSwgaXNSZWplY3Qpe1xuICBpZihwcm9taXNlLl9uKXJldHVybjtcbiAgcHJvbWlzZS5fbiA9IHRydWU7XG4gIHZhciBjaGFpbiA9IHByb21pc2UuX2M7XG4gIG1pY3JvdGFzayhmdW5jdGlvbigpe1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3ZcbiAgICAgICwgb2sgICAgPSBwcm9taXNlLl9zID09IDFcbiAgICAgICwgaSAgICAgPSAwO1xuICAgIHZhciBydW4gPSBmdW5jdGlvbihyZWFjdGlvbil7XG4gICAgICB2YXIgaGFuZGxlciA9IG9rID8gcmVhY3Rpb24ub2sgOiByZWFjdGlvbi5mYWlsXG4gICAgICAgICwgcmVzb2x2ZSA9IHJlYWN0aW9uLnJlc29sdmVcbiAgICAgICAgLCByZWplY3QgID0gcmVhY3Rpb24ucmVqZWN0XG4gICAgICAgICwgZG9tYWluICA9IHJlYWN0aW9uLmRvbWFpblxuICAgICAgICAsIHJlc3VsdCwgdGhlbjtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmKGhhbmRsZXIpe1xuICAgICAgICAgIGlmKCFvayl7XG4gICAgICAgICAgICBpZihwcm9taXNlLl9oID09IDIpb25IYW5kbGVVbmhhbmRsZWQocHJvbWlzZSk7XG4gICAgICAgICAgICBwcm9taXNlLl9oID0gMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYoaGFuZGxlciA9PT0gdHJ1ZSlyZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmKGRvbWFpbilkb21haW4uZW50ZXIoKTtcbiAgICAgICAgICAgIHJlc3VsdCA9IGhhbmRsZXIodmFsdWUpO1xuICAgICAgICAgICAgaWYoZG9tYWluKWRvbWFpbi5leGl0KCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmKHJlc3VsdCA9PT0gcmVhY3Rpb24ucHJvbWlzZSl7XG4gICAgICAgICAgICByZWplY3QoVHlwZUVycm9yKCdQcm9taXNlLWNoYWluIGN5Y2xlJykpO1xuICAgICAgICAgIH0gZWxzZSBpZih0aGVuID0gaXNUaGVuYWJsZShyZXN1bHQpKXtcbiAgICAgICAgICAgIHRoZW4uY2FsbChyZXN1bHQsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSBlbHNlIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSBlbHNlIHJlamVjdCh2YWx1ZSk7XG4gICAgICB9IGNhdGNoKGUpe1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB3aGlsZShjaGFpbi5sZW5ndGggPiBpKXJ1bihjaGFpbltpKytdKTsgLy8gdmFyaWFibGUgbGVuZ3RoIC0gY2FuJ3QgdXNlIGZvckVhY2hcbiAgICBwcm9taXNlLl9jID0gW107XG4gICAgcHJvbWlzZS5fbiA9IGZhbHNlO1xuICAgIGlmKGlzUmVqZWN0ICYmICFwcm9taXNlLl9oKW9uVW5oYW5kbGVkKHByb21pc2UpO1xuICB9KTtcbn07XG52YXIgb25VbmhhbmRsZWQgPSBmdW5jdGlvbihwcm9taXNlKXtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24oKXtcbiAgICB2YXIgdmFsdWUgPSBwcm9taXNlLl92XG4gICAgICAsIGFicnVwdCwgaGFuZGxlciwgY29uc29sZTtcbiAgICBpZihpc1VuaGFuZGxlZChwcm9taXNlKSl7XG4gICAgICBhYnJ1cHQgPSBwZXJmb3JtKGZ1bmN0aW9uKCl7XG4gICAgICAgIGlmKGlzTm9kZSl7XG4gICAgICAgICAgcHJvY2Vzcy5lbWl0KCd1bmhhbmRsZWRSZWplY3Rpb24nLCB2YWx1ZSwgcHJvbWlzZSk7XG4gICAgICAgIH0gZWxzZSBpZihoYW5kbGVyID0gZ2xvYmFsLm9udW5oYW5kbGVkcmVqZWN0aW9uKXtcbiAgICAgICAgICBoYW5kbGVyKHtwcm9taXNlOiBwcm9taXNlLCByZWFzb246IHZhbHVlfSk7XG4gICAgICAgIH0gZWxzZSBpZigoY29uc29sZSA9IGdsb2JhbC5jb25zb2xlKSAmJiBjb25zb2xlLmVycm9yKXtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdVbmhhbmRsZWQgcHJvbWlzZSByZWplY3Rpb24nLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgLy8gQnJvd3NlcnMgc2hvdWxkIG5vdCB0cmlnZ2VyIGByZWplY3Rpb25IYW5kbGVkYCBldmVudCBpZiBpdCB3YXMgaGFuZGxlZCBoZXJlLCBOb2RlSlMgLSBzaG91bGRcbiAgICAgIHByb21pc2UuX2ggPSBpc05vZGUgfHwgaXNVbmhhbmRsZWQocHJvbWlzZSkgPyAyIDogMTtcbiAgICB9IHByb21pc2UuX2EgPSB1bmRlZmluZWQ7XG4gICAgaWYoYWJydXB0KXRocm93IGFicnVwdC5lcnJvcjtcbiAgfSk7XG59O1xudmFyIGlzVW5oYW5kbGVkID0gZnVuY3Rpb24ocHJvbWlzZSl7XG4gIGlmKHByb21pc2UuX2ggPT0gMSlyZXR1cm4gZmFsc2U7XG4gIHZhciBjaGFpbiA9IHByb21pc2UuX2EgfHwgcHJvbWlzZS5fY1xuICAgICwgaSAgICAgPSAwXG4gICAgLCByZWFjdGlvbjtcbiAgd2hpbGUoY2hhaW4ubGVuZ3RoID4gaSl7XG4gICAgcmVhY3Rpb24gPSBjaGFpbltpKytdO1xuICAgIGlmKHJlYWN0aW9uLmZhaWwgfHwgIWlzVW5oYW5kbGVkKHJlYWN0aW9uLnByb21pc2UpKXJldHVybiBmYWxzZTtcbiAgfSByZXR1cm4gdHJ1ZTtcbn07XG52YXIgb25IYW5kbGVVbmhhbmRsZWQgPSBmdW5jdGlvbihwcm9taXNlKXtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24oKXtcbiAgICB2YXIgaGFuZGxlcjtcbiAgICBpZihpc05vZGUpe1xuICAgICAgcHJvY2Vzcy5lbWl0KCdyZWplY3Rpb25IYW5kbGVkJywgcHJvbWlzZSk7XG4gICAgfSBlbHNlIGlmKGhhbmRsZXIgPSBnbG9iYWwub25yZWplY3Rpb25oYW5kbGVkKXtcbiAgICAgIGhhbmRsZXIoe3Byb21pc2U6IHByb21pc2UsIHJlYXNvbjogcHJvbWlzZS5fdn0pO1xuICAgIH1cbiAgfSk7XG59O1xudmFyICRyZWplY3QgPSBmdW5jdGlvbih2YWx1ZSl7XG4gIHZhciBwcm9taXNlID0gdGhpcztcbiAgaWYocHJvbWlzZS5fZClyZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICBwcm9taXNlLl9zID0gMjtcbiAgaWYoIXByb21pc2UuX2EpcHJvbWlzZS5fYSA9IHByb21pc2UuX2Muc2xpY2UoKTtcbiAgbm90aWZ5KHByb21pc2UsIHRydWUpO1xufTtcbnZhciAkcmVzb2x2ZSA9IGZ1bmN0aW9uKHZhbHVlKXtcbiAgdmFyIHByb21pc2UgPSB0aGlzXG4gICAgLCB0aGVuO1xuICBpZihwcm9taXNlLl9kKXJldHVybjtcbiAgcHJvbWlzZS5fZCA9IHRydWU7XG4gIHByb21pc2UgPSBwcm9taXNlLl93IHx8IHByb21pc2U7IC8vIHVud3JhcFxuICB0cnkge1xuICAgIGlmKHByb21pc2UgPT09IHZhbHVlKXRocm93IFR5cGVFcnJvcihcIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmXCIpO1xuICAgIGlmKHRoZW4gPSBpc1RoZW5hYmxlKHZhbHVlKSl7XG4gICAgICBtaWNyb3Rhc2soZnVuY3Rpb24oKXtcbiAgICAgICAgdmFyIHdyYXBwZXIgPSB7X3c6IHByb21pc2UsIF9kOiBmYWxzZX07IC8vIHdyYXBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB0aGVuLmNhbGwodmFsdWUsIGN0eCgkcmVzb2x2ZSwgd3JhcHBlciwgMSksIGN0eCgkcmVqZWN0LCB3cmFwcGVyLCAxKSk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgJHJlamVjdC5jYWxsKHdyYXBwZXIsIGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICAgICAgcHJvbWlzZS5fcyA9IDE7XG4gICAgICBub3RpZnkocHJvbWlzZSwgZmFsc2UpO1xuICAgIH1cbiAgfSBjYXRjaChlKXtcbiAgICAkcmVqZWN0LmNhbGwoe193OiBwcm9taXNlLCBfZDogZmFsc2V9LCBlKTsgLy8gd3JhcFxuICB9XG59O1xuXG4vLyBjb25zdHJ1Y3RvciBwb2x5ZmlsbFxuaWYoIVVTRV9OQVRJVkUpe1xuICAvLyAyNS40LjMuMSBQcm9taXNlKGV4ZWN1dG9yKVxuICAkUHJvbWlzZSA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3Ipe1xuICAgIGFuSW5zdGFuY2UodGhpcywgJFByb21pc2UsIFBST01JU0UsICdfaCcpO1xuICAgIGFGdW5jdGlvbihleGVjdXRvcik7XG4gICAgSW50ZXJuYWwuY2FsbCh0aGlzKTtcbiAgICB0cnkge1xuICAgICAgZXhlY3V0b3IoY3R4KCRyZXNvbHZlLCB0aGlzLCAxKSwgY3R4KCRyZWplY3QsIHRoaXMsIDEpKTtcbiAgICB9IGNhdGNoKGVycil7XG4gICAgICAkcmVqZWN0LmNhbGwodGhpcywgZXJyKTtcbiAgICB9XG4gIH07XG4gIEludGVybmFsID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcil7XG4gICAgdGhpcy5fYyA9IFtdOyAgICAgICAgICAgICAvLyA8LSBhd2FpdGluZyByZWFjdGlvbnNcbiAgICB0aGlzLl9hID0gdW5kZWZpbmVkOyAgICAgIC8vIDwtIGNoZWNrZWQgaW4gaXNVbmhhbmRsZWQgcmVhY3Rpb25zXG4gICAgdGhpcy5fcyA9IDA7ICAgICAgICAgICAgICAvLyA8LSBzdGF0ZVxuICAgIHRoaXMuX2QgPSBmYWxzZTsgICAgICAgICAgLy8gPC0gZG9uZVxuICAgIHRoaXMuX3YgPSB1bmRlZmluZWQ7ICAgICAgLy8gPC0gdmFsdWVcbiAgICB0aGlzLl9oID0gMDsgICAgICAgICAgICAgIC8vIDwtIHJlamVjdGlvbiBzdGF0ZSwgMCAtIGRlZmF1bHQsIDEgLSBoYW5kbGVkLCAyIC0gdW5oYW5kbGVkXG4gICAgdGhpcy5fbiA9IGZhbHNlOyAgICAgICAgICAvLyA8LSBub3RpZnlcbiAgfTtcbiAgSW50ZXJuYWwucHJvdG90eXBlID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5NykoJFByb21pc2UucHJvdG90eXBlLCB7XG4gICAgLy8gMjUuNC41LjMgUHJvbWlzZS5wcm90b3R5cGUudGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZClcbiAgICB0aGVuOiBmdW5jdGlvbiB0aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKXtcbiAgICAgIHZhciByZWFjdGlvbiAgICA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkUHJvbWlzZSkpO1xuICAgICAgcmVhY3Rpb24ub2sgICAgID0gdHlwZW9mIG9uRnVsZmlsbGVkID09ICdmdW5jdGlvbicgPyBvbkZ1bGZpbGxlZCA6IHRydWU7XG4gICAgICByZWFjdGlvbi5mYWlsICAgPSB0eXBlb2Ygb25SZWplY3RlZCA9PSAnZnVuY3Rpb24nICYmIG9uUmVqZWN0ZWQ7XG4gICAgICByZWFjdGlvbi5kb21haW4gPSBpc05vZGUgPyBwcm9jZXNzLmRvbWFpbiA6IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2MucHVzaChyZWFjdGlvbik7XG4gICAgICBpZih0aGlzLl9hKXRoaXMuX2EucHVzaChyZWFjdGlvbik7XG4gICAgICBpZih0aGlzLl9zKW5vdGlmeSh0aGlzLCBmYWxzZSk7XG4gICAgICByZXR1cm4gcmVhY3Rpb24ucHJvbWlzZTtcbiAgICB9LFxuICAgIC8vIDI1LjQuNS4xIFByb21pc2UucHJvdG90eXBlLmNhdGNoKG9uUmVqZWN0ZWQpXG4gICAgJ2NhdGNoJzogZnVuY3Rpb24ob25SZWplY3RlZCl7XG4gICAgICByZXR1cm4gdGhpcy50aGVuKHVuZGVmaW5lZCwgb25SZWplY3RlZCk7XG4gICAgfVxuICB9KTtcbiAgUHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbigpe1xuICAgIHZhciBwcm9taXNlICA9IG5ldyBJbnRlcm5hbDtcbiAgICB0aGlzLnByb21pc2UgPSBwcm9taXNlO1xuICAgIHRoaXMucmVzb2x2ZSA9IGN0eCgkcmVzb2x2ZSwgcHJvbWlzZSwgMSk7XG4gICAgdGhpcy5yZWplY3QgID0gY3R4KCRyZWplY3QsIHByb21pc2UsIDEpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7UHJvbWlzZTogJFByb21pc2V9KTtcbl9fd2VicGFja19yZXF1aXJlX18oMjIpKCRQcm9taXNlLCBQUk9NSVNFKTtcbl9fd2VicGFja19yZXF1aXJlX18oOTkpKFBST01JU0UpO1xuV3JhcHBlciA9IF9fd2VicGFja19yZXF1aXJlX18oMClbUFJPTUlTRV07XG5cbi8vIHN0YXRpY3NcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjUgUHJvbWlzZS5yZWplY3QocilcbiAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3Qocil7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSh0aGlzKVxuICAgICAgLCAkJHJlamVjdCAgID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgJCRyZWplY3Qocik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChMSUJSQVJZIHx8ICFVU0VfTkFUSVZFKSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNiBQcm9taXNlLnJlc29sdmUoeClcbiAgcmVzb2x2ZTogZnVuY3Rpb24gcmVzb2x2ZSh4KXtcbiAgICAvLyBpbnN0YW5jZW9mIGluc3RlYWQgb2YgaW50ZXJuYWwgc2xvdCBjaGVjayBiZWNhdXNlIHdlIHNob3VsZCBmaXggaXQgd2l0aG91dCByZXBsYWNlbWVudCBuYXRpdmUgUHJvbWlzZSBjb3JlXG4gICAgaWYoeCBpbnN0YW5jZW9mICRQcm9taXNlICYmIHNhbWVDb25zdHJ1Y3Rvcih4LmNvbnN0cnVjdG9yLCB0aGlzKSlyZXR1cm4geDtcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KHRoaXMpXG4gICAgICAsICQkcmVzb2x2ZSAgPSBjYXBhYmlsaXR5LnJlc29sdmU7XG4gICAgJCRyZXNvbHZlKHgpO1xuICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7XG4gIH1cbn0pO1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKFVTRV9OQVRJVkUgJiYgX193ZWJwYWNrX3JlcXVpcmVfXyg5MykoZnVuY3Rpb24oaXRlcil7XG4gICRQcm9taXNlLmFsbChpdGVyKVsnY2F0Y2gnXShlbXB0eSk7XG59KSksIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjEgUHJvbWlzZS5hbGwoaXRlcmFibGUpXG4gIGFsbDogZnVuY3Rpb24gYWxsKGl0ZXJhYmxlKXtcbiAgICB2YXIgQyAgICAgICAgICA9IHRoaXNcbiAgICAgICwgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgICAsIHJlc29sdmUgICAgPSBjYXBhYmlsaXR5LnJlc29sdmVcbiAgICAgICwgcmVqZWN0ICAgICA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgIHZhciBhYnJ1cHQgPSBwZXJmb3JtKGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgdmFsdWVzICAgID0gW11cbiAgICAgICAgLCBpbmRleCAgICAgPSAwXG4gICAgICAgICwgcmVtYWluaW5nID0gMTtcbiAgICAgIGZvck9mKGl0ZXJhYmxlLCBmYWxzZSwgZnVuY3Rpb24ocHJvbWlzZSl7XG4gICAgICAgIHZhciAkaW5kZXggICAgICAgID0gaW5kZXgrK1xuICAgICAgICAgICwgYWxyZWFkeUNhbGxlZCA9IGZhbHNlO1xuICAgICAgICB2YWx1ZXMucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICByZW1haW5pbmcrKztcbiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24odmFsdWUpe1xuICAgICAgICAgIGlmKGFscmVhZHlDYWxsZWQpcmV0dXJuO1xuICAgICAgICAgIGFscmVhZHlDYWxsZWQgID0gdHJ1ZTtcbiAgICAgICAgICB2YWx1ZXNbJGluZGV4XSA9IHZhbHVlO1xuICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgIH0pO1xuICAgIGlmKGFicnVwdClyZWplY3QoYWJydXB0LmVycm9yKTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9LFxuICAvLyAyNS40LjQuNCBQcm9taXNlLnJhY2UoaXRlcmFibGUpXG4gIHJhY2U6IGZ1bmN0aW9uIHJhY2UoaXRlcmFibGUpe1xuICAgIHZhciBDICAgICAgICAgID0gdGhpc1xuICAgICAgLCBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoQylcbiAgICAgICwgcmVqZWN0ICAgICA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgIHZhciBhYnJ1cHQgPSBwZXJmb3JtKGZ1bmN0aW9uKCl7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uKHByb21pc2Upe1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihjYXBhYmlsaXR5LnJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZihhYnJ1cHQpcmVqZWN0KGFicnVwdC5lcnJvcik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG5cbi8qKiovIH0pLFxuLyogMTA2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG4vLyBFQ01BU2NyaXB0IDYgc3ltYm9scyBzaGltXG52YXIgZ2xvYmFsICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpXG4gICwgaGFzICAgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKVxuICAsIERFU0NSSVBUT1JTICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKVxuICAsICRleHBvcnQgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KVxuICAsIHJlZGVmaW5lICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0NilcbiAgLCBNRVRBICAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNzMpLktFWVxuICAsICRmYWlscyAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMSlcbiAgLCBzaGFyZWQgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMzApXG4gICwgc2V0VG9TdHJpbmdUYWcgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIyKVxuICAsIHVpZCAgICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMylcbiAgLCB3a3MgICAgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMylcbiAgLCB3a3NFeHQgICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNDkpXG4gICwgd2tzRGVmaW5lICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQ4KVxuICAsIGtleU9mICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5NClcbiAgLCBlbnVtS2V5cyAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oODcpXG4gICwgaXNBcnJheSAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkxKVxuICAsIGFuT2JqZWN0ICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KVxuICAsIHRvSU9iamVjdCAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMylcbiAgLCB0b1ByaW1pdGl2ZSAgICA9IF9fd2VicGFja19yZXF1aXJlX18oMjEpXG4gICwgY3JlYXRlRGVzYyAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KVxuICAsIF9jcmVhdGUgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNylcbiAgLCBnT1BORXh0ICAgICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oOTYpXG4gICwgJEdPUEQgICAgICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDU3KVxuICAsICREUCAgICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KVxuICAsICRrZXlzICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOClcbiAgLCBnT1BEICAgICAgICAgICA9ICRHT1BELmZcbiAgLCBkUCAgICAgICAgICAgICA9ICREUC5mXG4gICwgZ09QTiAgICAgICAgICAgPSBnT1BORXh0LmZcbiAgLCAkU3ltYm9sICAgICAgICA9IGdsb2JhbC5TeW1ib2xcbiAgLCAkSlNPTiAgICAgICAgICA9IGdsb2JhbC5KU09OXG4gICwgX3N0cmluZ2lmeSAgICAgPSAkSlNPTiAmJiAkSlNPTi5zdHJpbmdpZnlcbiAgLCBQUk9UT1RZUEUgICAgICA9ICdwcm90b3R5cGUnXG4gICwgSElEREVOICAgICAgICAgPSB3a3MoJ19oaWRkZW4nKVxuICAsIFRPX1BSSU1JVElWRSAgID0gd2tzKCd0b1ByaW1pdGl2ZScpXG4gICwgaXNFbnVtICAgICAgICAgPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZVxuICAsIFN5bWJvbFJlZ2lzdHJ5ID0gc2hhcmVkKCdzeW1ib2wtcmVnaXN0cnknKVxuICAsIEFsbFN5bWJvbHMgICAgID0gc2hhcmVkKCdzeW1ib2xzJylcbiAgLCBPUFN5bWJvbHMgICAgICA9IHNoYXJlZCgnb3Atc3ltYm9scycpXG4gICwgT2JqZWN0UHJvdG8gICAgPSBPYmplY3RbUFJPVE9UWVBFXVxuICAsIFVTRV9OQVRJVkUgICAgID0gdHlwZW9mICRTeW1ib2wgPT0gJ2Z1bmN0aW9uJ1xuICAsIFFPYmplY3QgICAgICAgID0gZ2xvYmFsLlFPYmplY3Q7XG4vLyBEb24ndCB1c2Ugc2V0dGVycyBpbiBRdCBTY3JpcHQsIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8xNzNcbnZhciBzZXR0ZXIgPSAhUU9iamVjdCB8fCAhUU9iamVjdFtQUk9UT1RZUEVdIHx8ICFRT2JqZWN0W1BST1RPVFlQRV0uZmluZENoaWxkO1xuXG4vLyBmYWxsYmFjayBmb3Igb2xkIEFuZHJvaWQsIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD02ODdcbnZhciBzZXRTeW1ib2xEZXNjID0gREVTQ1JJUFRPUlMgJiYgJGZhaWxzKGZ1bmN0aW9uKCl7XG4gIHJldHVybiBfY3JlYXRlKGRQKHt9LCAnYScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiBkUCh0aGlzLCAnYScsIHt2YWx1ZTogN30pLmE7IH1cbiAgfSkpLmEgIT0gNztcbn0pID8gZnVuY3Rpb24oaXQsIGtleSwgRCl7XG4gIHZhciBwcm90b0Rlc2MgPSBnT1BEKE9iamVjdFByb3RvLCBrZXkpO1xuICBpZihwcm90b0Rlc2MpZGVsZXRlIE9iamVjdFByb3RvW2tleV07XG4gIGRQKGl0LCBrZXksIEQpO1xuICBpZihwcm90b0Rlc2MgJiYgaXQgIT09IE9iamVjdFByb3RvKWRQKE9iamVjdFByb3RvLCBrZXksIHByb3RvRGVzYyk7XG59IDogZFA7XG5cbnZhciB3cmFwID0gZnVuY3Rpb24odGFnKXtcbiAgdmFyIHN5bSA9IEFsbFN5bWJvbHNbdGFnXSA9IF9jcmVhdGUoJFN5bWJvbFtQUk9UT1RZUEVdKTtcbiAgc3ltLl9rID0gdGFnO1xuICByZXR1cm4gc3ltO1xufTtcblxudmFyIGlzU3ltYm9sID0gVVNFX05BVElWRSAmJiB0eXBlb2YgJFN5bWJvbC5pdGVyYXRvciA9PSAnc3ltYm9sJyA/IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJztcbn0gOiBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpdCBpbnN0YW5jZW9mICRTeW1ib2w7XG59O1xuXG52YXIgJGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgRCl7XG4gIGlmKGl0ID09PSBPYmplY3RQcm90bykkZGVmaW5lUHJvcGVydHkoT1BTeW1ib2xzLCBrZXksIEQpO1xuICBhbk9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEQpO1xuICBpZihoYXMoQWxsU3ltYm9scywga2V5KSl7XG4gICAgaWYoIUQuZW51bWVyYWJsZSl7XG4gICAgICBpZighaGFzKGl0LCBISURERU4pKWRQKGl0LCBISURERU4sIGNyZWF0ZURlc2MoMSwge30pKTtcbiAgICAgIGl0W0hJRERFTl1ba2V5XSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmKGhhcyhpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0paXRbSElEREVOXVtrZXldID0gZmFsc2U7XG4gICAgICBEID0gX2NyZWF0ZShELCB7ZW51bWVyYWJsZTogY3JlYXRlRGVzYygwLCBmYWxzZSl9KTtcbiAgICB9IHJldHVybiBzZXRTeW1ib2xEZXNjKGl0LCBrZXksIEQpO1xuICB9IHJldHVybiBkUChpdCwga2V5LCBEKTtcbn07XG52YXIgJGRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKGl0LCBQKXtcbiAgYW5PYmplY3QoaXQpO1xuICB2YXIga2V5cyA9IGVudW1LZXlzKFAgPSB0b0lPYmplY3QoUCkpXG4gICAgLCBpICAgID0gMFxuICAgICwgbCA9IGtleXMubGVuZ3RoXG4gICAgLCBrZXk7XG4gIHdoaWxlKGwgPiBpKSRkZWZpbmVQcm9wZXJ0eShpdCwga2V5ID0ga2V5c1tpKytdLCBQW2tleV0pO1xuICByZXR1cm4gaXQ7XG59O1xudmFyICRjcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaXQsIFApe1xuICByZXR1cm4gUCA9PT0gdW5kZWZpbmVkID8gX2NyZWF0ZShpdCkgOiAkZGVmaW5lUHJvcGVydGllcyhfY3JlYXRlKGl0KSwgUCk7XG59O1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IGZ1bmN0aW9uIHByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSl7XG4gIHZhciBFID0gaXNFbnVtLmNhbGwodGhpcywga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSk7XG4gIGlmKHRoaXMgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKXJldHVybiBmYWxzZTtcbiAgcmV0dXJuIEUgfHwgIWhhcyh0aGlzLCBrZXkpIHx8ICFoYXMoQWxsU3ltYm9scywga2V5KSB8fCBoYXModGhpcywgSElEREVOKSAmJiB0aGlzW0hJRERFTl1ba2V5XSA/IEUgOiB0cnVlO1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpe1xuICBpdCAgPSB0b0lPYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBpZihpdCA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpcmV0dXJuO1xuICB2YXIgRCA9IGdPUEQoaXQsIGtleSk7XG4gIGlmKEQgJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIShoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSlELmVudW1lcmFibGUgPSB0cnVlO1xuICByZXR1cm4gRDtcbn07XG52YXIgJGdldE93blByb3BlcnR5TmFtZXMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KXtcbiAgdmFyIG5hbWVzICA9IGdPUE4odG9JT2JqZWN0KGl0KSlcbiAgICAsIHJlc3VsdCA9IFtdXG4gICAgLCBpICAgICAgPSAwXG4gICAgLCBrZXk7XG4gIHdoaWxlKG5hbWVzLmxlbmd0aCA+IGkpe1xuICAgIGlmKCFoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYga2V5ICE9IEhJRERFTiAmJiBrZXkgIT0gTUVUQSlyZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpe1xuICB2YXIgSVNfT1AgID0gaXQgPT09IE9iamVjdFByb3RvXG4gICAgLCBuYW1lcyAgPSBnT1BOKElTX09QID8gT1BTeW1ib2xzIDogdG9JT2JqZWN0KGl0KSlcbiAgICAsIHJlc3VsdCA9IFtdXG4gICAgLCBpICAgICAgPSAwXG4gICAgLCBrZXk7XG4gIHdoaWxlKG5hbWVzLmxlbmd0aCA+IGkpe1xuICAgIGlmKGhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiAoSVNfT1AgPyBoYXMoT2JqZWN0UHJvdG8sIGtleSkgOiB0cnVlKSlyZXN1bHQucHVzaChBbGxTeW1ib2xzW2tleV0pO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuXG4vLyAxOS40LjEuMSBTeW1ib2woW2Rlc2NyaXB0aW9uXSlcbmlmKCFVU0VfTkFUSVZFKXtcbiAgJFN5bWJvbCA9IGZ1bmN0aW9uIFN5bWJvbCgpe1xuICAgIGlmKHRoaXMgaW5zdGFuY2VvZiAkU3ltYm9sKXRocm93IFR5cGVFcnJvcignU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIScpO1xuICAgIHZhciB0YWcgPSB1aWQoYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpO1xuICAgIHZhciAkc2V0ID0gZnVuY3Rpb24odmFsdWUpe1xuICAgICAgaWYodGhpcyA9PT0gT2JqZWN0UHJvdG8pJHNldC5jYWxsKE9QU3ltYm9scywgdmFsdWUpO1xuICAgICAgaWYoaGFzKHRoaXMsIEhJRERFTikgJiYgaGFzKHRoaXNbSElEREVOXSwgdGFnKSl0aGlzW0hJRERFTl1bdGFnXSA9IGZhbHNlO1xuICAgICAgc2V0U3ltYm9sRGVzYyh0aGlzLCB0YWcsIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbiAgICB9O1xuICAgIGlmKERFU0NSSVBUT1JTICYmIHNldHRlcilzZXRTeW1ib2xEZXNjKE9iamVjdFByb3RvLCB0YWcsIHtjb25maWd1cmFibGU6IHRydWUsIHNldDogJHNldH0pO1xuICAgIHJldHVybiB3cmFwKHRhZyk7XG4gIH07XG4gIHJlZGVmaW5lKCRTeW1ib2xbUFJPVE9UWVBFXSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKXtcbiAgICByZXR1cm4gdGhpcy5faztcbiAgfSk7XG5cbiAgJEdPUEQuZiA9ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICREUC5mICAgPSAkZGVmaW5lUHJvcGVydHk7XG4gIF9fd2VicGFja19yZXF1aXJlX18oNjYpLmYgPSBnT1BORXh0LmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgX193ZWJwYWNrX3JlcXVpcmVfXyg0MSkuZiAgPSAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4gIF9fd2VicGFja19yZXF1aXJlX18oNTgpLmYgPSAkZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG4gIGlmKERFU0NSSVBUT1JTICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fKDI2KSl7XG4gICAgcmVkZWZpbmUoT2JqZWN0UHJvdG8sICdwcm9wZXJ0eUlzRW51bWVyYWJsZScsICRwcm9wZXJ0eUlzRW51bWVyYWJsZSwgdHJ1ZSk7XG4gIH1cblxuICB3a3NFeHQuZiA9IGZ1bmN0aW9uKG5hbWUpe1xuICAgIHJldHVybiB3cmFwKHdrcyhuYW1lKSk7XG4gIH1cbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwge1N5bWJvbDogJFN5bWJvbH0pO1xuXG5mb3IodmFyIHN5bWJvbHMgPSAoXG4gIC8vIDE5LjQuMi4yLCAxOS40LjIuMywgMTkuNC4yLjQsIDE5LjQuMi42LCAxOS40LjIuOCwgMTkuNC4yLjksIDE5LjQuMi4xMCwgMTkuNC4yLjExLCAxOS40LjIuMTIsIDE5LjQuMi4xMywgMTkuNC4yLjE0XG4gICdoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlcydcbikuc3BsaXQoJywnKSwgaSA9IDA7IHN5bWJvbHMubGVuZ3RoID4gaTsgKXdrcyhzeW1ib2xzW2krK10pO1xuXG5mb3IodmFyIHN5bWJvbHMgPSAka2V5cyh3a3Muc3RvcmUpLCBpID0gMDsgc3ltYm9scy5sZW5ndGggPiBpOyApd2tzRGVmaW5lKHN5bWJvbHNbaSsrXSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsICdTeW1ib2wnLCB7XG4gIC8vIDE5LjQuMi4xIFN5bWJvbC5mb3Ioa2V5KVxuICAnZm9yJzogZnVuY3Rpb24oa2V5KXtcbiAgICByZXR1cm4gaGFzKFN5bWJvbFJlZ2lzdHJ5LCBrZXkgKz0gJycpXG4gICAgICA/IFN5bWJvbFJlZ2lzdHJ5W2tleV1cbiAgICAgIDogU3ltYm9sUmVnaXN0cnlba2V5XSA9ICRTeW1ib2woa2V5KTtcbiAgfSxcbiAgLy8gMTkuNC4yLjUgU3ltYm9sLmtleUZvcihzeW0pXG4gIGtleUZvcjogZnVuY3Rpb24ga2V5Rm9yKGtleSl7XG4gICAgaWYoaXNTeW1ib2woa2V5KSlyZXR1cm4ga2V5T2YoU3ltYm9sUmVnaXN0cnksIGtleSk7XG4gICAgdGhyb3cgVHlwZUVycm9yKGtleSArICcgaXMgbm90IGEgc3ltYm9sIScpO1xuICB9LFxuICB1c2VTZXR0ZXI6IGZ1bmN0aW9uKCl7IHNldHRlciA9IHRydWU7IH0sXG4gIHVzZVNpbXBsZTogZnVuY3Rpb24oKXsgc2V0dGVyID0gZmFsc2U7IH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnT2JqZWN0Jywge1xuICAvLyAxOS4xLjIuMiBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4gIGNyZWF0ZTogJGNyZWF0ZSxcbiAgLy8gMTkuMS4yLjQgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4gIGRlZmluZVByb3BlcnR5OiAkZGVmaW5lUHJvcGVydHksXG4gIC8vIDE5LjEuMi4zIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4gIGRlZmluZVByb3BlcnRpZXM6ICRkZWZpbmVQcm9wZXJ0aWVzLFxuICAvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgLy8gMTkuMS4yLjcgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbiAgZ2V0T3duUHJvcGVydHlOYW1lczogJGdldE93blByb3BlcnR5TmFtZXMsXG4gIC8vIDE5LjEuMi44IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoTylcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiAkZ2V0T3duUHJvcGVydHlTeW1ib2xzXG59KTtcblxuLy8gMjQuMy4yIEpTT04uc3RyaW5naWZ5KHZhbHVlIFssIHJlcGxhY2VyIFssIHNwYWNlXV0pXG4kSlNPTiAmJiAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghVVNFX05BVElWRSB8fCAkZmFpbHMoZnVuY3Rpb24oKXtcbiAgdmFyIFMgPSAkU3ltYm9sKCk7XG4gIC8vIE1TIEVkZ2UgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIHt9XG4gIC8vIFdlYktpdCBjb252ZXJ0cyBzeW1ib2wgdmFsdWVzIHRvIEpTT04gYXMgbnVsbFxuICAvLyBWOCB0aHJvd3Mgb24gYm94ZWQgc3ltYm9sc1xuICByZXR1cm4gX3N0cmluZ2lmeShbU10pICE9ICdbbnVsbF0nIHx8IF9zdHJpbmdpZnkoe2E6IFN9KSAhPSAne30nIHx8IF9zdHJpbmdpZnkoT2JqZWN0KFMpKSAhPSAne30nO1xufSkpLCAnSlNPTicsIHtcbiAgc3RyaW5naWZ5OiBmdW5jdGlvbiBzdHJpbmdpZnkoaXQpe1xuICAgIGlmKGl0ID09PSB1bmRlZmluZWQgfHwgaXNTeW1ib2woaXQpKXJldHVybjsgLy8gSUU4IHJldHVybnMgc3RyaW5nIG9uIHVuZGVmaW5lZFxuICAgIHZhciBhcmdzID0gW2l0XVxuICAgICAgLCBpICAgID0gMVxuICAgICAgLCByZXBsYWNlciwgJHJlcGxhY2VyO1xuICAgIHdoaWxlKGFyZ3VtZW50cy5sZW5ndGggPiBpKWFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgcmVwbGFjZXIgPSBhcmdzWzFdO1xuICAgIGlmKHR5cGVvZiByZXBsYWNlciA9PSAnZnVuY3Rpb24nKSRyZXBsYWNlciA9IHJlcGxhY2VyO1xuICAgIGlmKCRyZXBsYWNlciB8fCAhaXNBcnJheShyZXBsYWNlcikpcmVwbGFjZXIgPSBmdW5jdGlvbihrZXksIHZhbHVlKXtcbiAgICAgIGlmKCRyZXBsYWNlcil2YWx1ZSA9ICRyZXBsYWNlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xuICAgICAgaWYoIWlzU3ltYm9sKHZhbHVlKSlyZXR1cm4gdmFsdWU7XG4gICAgfTtcbiAgICBhcmdzWzFdID0gcmVwbGFjZXI7XG4gICAgcmV0dXJuIF9zdHJpbmdpZnkuYXBwbHkoJEpTT04sIGFyZ3MpO1xuICB9XG59KTtcblxuLy8gMTkuNC4zLjQgU3ltYm9sLnByb3RvdHlwZVtAQHRvUHJpbWl0aXZlXShoaW50KVxuJFN5bWJvbFtQUk9UT1RZUEVdW1RPX1BSSU1JVElWRV0gfHwgX193ZWJwYWNrX3JlcXVpcmVfXyg3KSgkU3ltYm9sW1BST1RPVFlQRV0sIFRPX1BSSU1JVElWRSwgJFN5bWJvbFtQUk9UT1RZUEVdLnZhbHVlT2YpO1xuLy8gMTkuNC4zLjUgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoJFN5bWJvbCwgJ1N5bWJvbCcpO1xuLy8gMjAuMi4xLjkgTWF0aFtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoTWF0aCwgJ01hdGgnLCB0cnVlKTtcbi8vIDI0LjMuMyBKU09OW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZyhnbG9iYWwuSlNPTiwgJ0pTT04nLCB0cnVlKTtcblxuLyoqKi8gfSksXG4vKiAxMDcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuX193ZWJwYWNrX3JlcXVpcmVfXyg0OCkoJ2FzeW5jSXRlcmF0b3InKTtcblxuLyoqKi8gfSksXG4vKiAxMDggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuX193ZWJwYWNrX3JlcXVpcmVfXyg0OCkoJ29ic2VydmFibGUnKTtcblxuLyoqKi8gfSksXG4vKiAxMDkgKi8sXG4vKiAxMTAgKi8sXG4vKiAxMTEgKi8sXG4vKiAxMTIgKi8sXG4vKiAxMTMgKi8sXG4vKiAxMTQgKi8sXG4vKiAxMTUgKi8sXG4vKiAxMTYgKi8sXG4vKiAxMTcgKi8sXG4vKiAxMTggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxubW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1OSksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuLyoqKi8gfSksXG4vKiAxMTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuLy8gICAgIHByb3h5LW9ic2VydmUgdjAuMC4xOFxyXG4vLyAgICAgQ29weXJpZ2h0IChjKSAyMDE1LCAyMDE2IFNpbW9uIFkuIEJsYWNrd2VsbCwgQW55V2hpY2hXYXlcclxuLy8gICAgIE1JVCBMaWNlbnNlIC0gaHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxyXG4oZnVuY3Rpb24oKSB7XHJcblx0XCJ1c2Ugc3RyaWN0XCI7XHJcblx0Ly8gQ3JlYXRlcyBhbmQgcmV0dXJucyBhIFByb3h5IHdyYXBwaW5nIGEgdGFyZ2V0IHNvIHRoYXQgYWxsIGNoYW5nZXMgY2FuIGJlIHRyYXBwZWQgYW5kIGZvcndhcmRlZCB0b1xyXG5cdC8vIGEgY2FsbGJhY2suIFRoZSBjYWxsYmFjayB0YWtlcyBhbiBhcnJheSBvZiBjaGFuZ2VzIGp1c3QgbGlrZSB0aGUgdHJhZGl0aW9uYWwgb3JpZ2luYWwgQ2hyb21lIE9iamVjdC5vYnNlcnZlXHJcblx0Ly8ge29iamVjdDo8b2JqZWN0IGNoYW5nZWQ+LG5hbWU6PGZpZWxkIGNoYW5nZWQ+LHR5cGU6YWRkfHVwZGF0ZXxkZWxldGV8cmVjb25maWd1cmV8cHJldmVudEV4dGVuc2lvbnN8c2V0UHJvdG90eXBlLG9sZFZhbHVlOjxvbGQgdmFsdWUgaWYgdXBkYXRlIHwgZGVsZXRlPn1cclxuXHQvLyBUaGUgYWNjZXB0bGlzdCBjYW4gYmUgYWRkfHVwZGF0ZXxkZWxldGV8cmVjb25maWd1cmV8cHJldmVudEV4dGVuc2lvbnN8c2V0UHJvdG90eXBlLlxyXG5cdC8vIHYgMC4wLjEwIHRvIHN1cHBvcnQgcGF1c2luZyBhbmQgcmVzdGFydGluZyBvYnNlcnZhdGlvbiB0d28gYWRkaXRpb25hbCBjb25zdHJ1Y3RvciBhcmd1bWVudHMgYXJlIGF2YWlsYWJsZSB0byBPYmplY3Qub2JzZXJ2ZTpcclxuXHQvLyBwYXVzYWJsZSAtIGNyZWF0ZSB0aGUgT2JzZXJ2ZXIgc28gaXQgY2FuIGJlIHBhdXNlZFxyXG5cdC8vIHBhdXNlIC0gY3JlYXRlIG9ic2VydmVyIGluIHBhdXNlZCBzdGF0ZVxyXG5cdC8vIGlmIHBhdXNhYmxlIGlzIHRydWUgdGhlbiBhbiBhZGRpdGlvbmFsIG1ldGhvZCBkZWxpdmVyKGlnbm9yZVByZXZpb3VzKSBpcyBhdmFpbGFibGUgdG8gc3RhcnQgZGVsaXZlcnlcclxuXHQvLyB0byBwYXVzZSBkZWxpdmVyeSBzZXQgYSBwcm9wZXJ0eSBjYWxsZWQgcGF1c2Ugb24gdGhlIGZ1bmN0aW9uIGRlbGl2ZXIgdG8gdHJ1ZVxyXG5cdC8vIHBhdXNhYmxlIGlzIG9wdGlvbmFsIHRvIHJlZHVjZSB0aGUgY2hhbmNlIG9mIHNoYWRvd2luZyBhIHByb3BlcnR5IG9yIG1ldGhvZCBvbiBhbnkgZXhpc3RpbmcgY29kZSBjYWxsZWQgZGVsaXZlclxyXG5cdGlmKCFPYmplY3Qub2JzZXJ2ZSAmJiB0eXBlb2YoUHJveHkpPT09XCJmdW5jdGlvblwiKSB7XHJcblx0XHRmdW5jdGlvbiBPYnNlcnZlcih0YXJnZXQsY2FsbGJhY2ssYWNjZXB0bGlzdCxwYXVzYWJsZSxwYXVzZSxkZWxheSkge1xyXG5cdCAgICBcdHZhciBtZSA9IHRoaXMsIHByb3h5O1xyXG5cdCAgICBcdGZ1bmN0aW9uIGRlbGl2ZXIoaWdub3JlUHJldmlvdXMsZGVsYXkpIHtcclxuXHQgICAgXHRcdGRlbGl2ZXIuZGVsYXkgPSBkZWxheTtcclxuXHQgICAgXHRcdGlmKCFkZWxpdmVyLnBhdXNlKSB7XHJcblx0ICAgICAgICBcdFx0aWYobWUuY2hhbmdlc2V0Lmxlbmd0aD4wKSB7XHJcblx0ICAgICAgICBcdFx0XHRpZighaWdub3JlUHJldmlvdXMpIHtcclxuXHRcdCAgICBcdCAgICBcdFx0dmFyIGNoYW5nZXMgPSBtZS5jaGFuZ2VzZXQuZmlsdGVyKGZ1bmN0aW9uKGNoYW5nZSkgeyByZXR1cm4gIWFjY2VwdGxpc3QgfHwgYWNjZXB0bGlzdC5pbmRleE9mKGNoYW5nZS50eXBlKT49MDsgfSk7XHJcblx0XHQgICAgICAgIFx0XHRcdGlmKGNoYW5nZXMubGVuZ3RoPjApIHtcclxuXHRcdCAgICAgICAgXHRcdFx0XHRjYWxsYmFjayhjaGFuZ2VzKTtcclxuXHRcdCAgICAgICAgXHRcdFx0fVxyXG5cdCAgICAgICAgXHRcdFx0fVxyXG5cdCAgICAgICAgXHRcdFx0bWUuY2hhbmdlc2V0ID0gW107XHJcblx0ICAgICAgICBcdFx0fVxyXG5cdCAgICBcdFx0fVxyXG5cdCAgICBcdH1cclxuXHQgICAgXHRkZWxpdmVyLnBhdXNlID0gcGF1c2U7XHJcblx0ICAgIFx0ZGVsaXZlci5kZWxheSA9IGRlbGF5O1xyXG5cdFx0ICAgIG1lLmdldCA9IGZ1bmN0aW9uKHRhcmdldCwgcHJvcGVydHkpIHtcclxuXHRcdCAgICBcdGlmKHByb3BlcnR5PT09XCJfX29ic2VydmVyX19cIikge1xyXG5cdFx0ICAgIFx0XHRyZXR1cm4gbWU7XHJcblx0XHQgICAgXHR9XHJcblx0XHQgICAgXHRpZihwcm9wZXJ0eT09PVwidW5vYnNlcnZlXCIpIHtcclxuXHRcdCAgICBcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xyXG5cdFx0ICAgIFx0XHRcdE9iamVjdC51bm9ic2VydmUodGFyZ2V0KTtcclxuXHRcdCAgICBcdFx0XHRyZXR1cm4gdGFyZ2V0O1xyXG5cdFx0ICAgIFx0XHR9O1xyXG5cdFx0ICAgIFx0fVxyXG5cdFx0ICAgIFx0aWYocHJvcGVydHk9PT1cImRlbGl2ZXJcIikge1xyXG5cdFx0ICAgIFx0XHRyZXR1cm4gZGVsaXZlcjtcclxuXHRcdCAgICBcdH1cclxuXHRcdCAgICBcdHJldHVybiB0YXJnZXRbcHJvcGVydHldO1xyXG5cdFx0ICAgIH1cclxuXHQgICAgXHRtZS50YXJnZXQgPSB0YXJnZXQ7XHJcblx0ICAgIFx0bWUuY2hhbmdlc2V0ID0gW107XHJcblx0ICAgIFx0aWYoIW1lLnRhcmdldC5fX29ic2VydmVyQ2FsbGJhY2tzX18pIHtcclxuXHQgICAgXHRcdC8vIF9fb2JzZXJ2ZXJDYWxsYmFja3NfXyBpcyB1c2VkIGFzIGFuIGluZGV4IHRvIGdldCBhdCB0aGUgcHJveHkgd2hpY2ggaXMgdGhlIG9ic2VydmVyLCBzbyB3ZSBjYW4gdW5vYnNlcnZlXHJcblx0ICAgIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LFwiX19vYnNlcnZlckNhbGxiYWNrc19fXCIse2VudW1lcmFibGU6ZmFsc2UsY29uZmlndXJhYmxlOnRydWUsd3JpdGFibGU6ZmFsc2UsdmFsdWU6W119KTtcclxuXHQgICAgXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsXCJfX29ic2VydmVyc19fXCIse2VudW1lcmFibGU6ZmFsc2UsY29uZmlndXJhYmxlOnRydWUsd3JpdGFibGU6ZmFsc2UsdmFsdWU6W119KTtcclxuXHQgICAgXHR9XHJcblx0ICAgIFx0bWUudGFyZ2V0Ll9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5wdXNoKGNhbGxiYWNrKTtcclxuXHQgICAgXHRtZS50YXJnZXQuX19vYnNlcnZlcnNfXy5wdXNoKHRoaXMpO1xyXG5cdCAgICBcdHByb3h5ID0gbmV3IFByb3h5KHRhcmdldCxtZSk7XHJcblx0ICAgIFx0ZGVsaXZlcihmYWxzZSxkZWxheSk7XHJcblx0ICAgIFx0cmV0dXJuIHByb3h5O1xyXG5cdCAgICB9XHJcblx0XHRPYnNlcnZlci5wcm90b3R5cGUuZGVsaXZlciA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRyZXR1cm4gdGhpcy5nZXQobnVsbCxcImRlbGl2ZXJcIik7XHJcblx0XHR9XHJcblx0ICAgIE9ic2VydmVyLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbih0YXJnZXQsIHByb3BlcnR5LCB2YWx1ZSkgeyAvLyAsIHJlY2VpdmVyXHJcblx0ICAgIFx0dmFyIG9sZHZhbHVlID0gdGFyZ2V0W3Byb3BlcnR5XTtcclxuXHQgICAgXHR2YXIgdHlwZSA9IChvbGR2YWx1ZT09PXVuZGVmaW5lZCA/IFwiYWRkXCIgOiBcInVwZGF0ZVwiKTtcclxuXHQgICAgXHR0YXJnZXRbcHJvcGVydHldID0gdmFsdWU7XHJcblx0ICAgIFx0aWYodGFyZ2V0Ll9fb2JzZXJ2ZXJzX18uaW5kZXhPZih0aGlzKT49MCAmJiAoIXRoaXMuYWNjZXB0bGlzdCB8fCB0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZih0eXBlKT49MCkpIHtcclxuXHQgICAgICAgIFx0dmFyIGNoYW5nZSA9IHtvYmplY3Q6dGFyZ2V0LG5hbWU6cHJvcGVydHksdHlwZTp0eXBlfSxcclxuXHQgICAgICAgIFx0XHRzdGFydCA9IHRoaXMuY2hhbmdlc2V0Lmxlbmd0aCA9PT0gMCxcclxuXHQgICAgICAgIFx0XHRkZWxpdmVyID0gdGhpcy5kZWxpdmVyKCk7XHJcblx0ICAgICAgICBcdGlmKHR5cGU9PT1cInVwZGF0ZVwiKSB7XHJcblx0ICAgICAgICBcdFx0Y2hhbmdlLm9sZFZhbHVlID0gb2xkdmFsdWU7XHJcblx0ICAgICAgICBcdH1cclxuXHQgICAgICAgIFx0dGhpcy5jaGFuZ2VzZXQucHVzaChjaGFuZ2UpO1xyXG5cdCAgICAgICAgXHRpZihzdGFydCkge1xyXG5cdCAgICAgICAgXHRcdGRlbGl2ZXIoZmFsc2UsKHR5cGVvZihkZWxpdmVyLmRlbGF5KT09PVwibnVtYmVyXCIgPyBkZWxpdmVyLmRlbGF5IDogMTApKTtcclxuXHQgICAgICAgIFx0fVxyXG5cdCAgICBcdH1cclxuXHQgICAgXHRyZXR1cm4gdHJ1ZTtcclxuXHQgICAgfTtcclxuXHQgICAgT2JzZXJ2ZXIucHJvdG90eXBlLmRlbGV0ZVByb3BlcnR5ID0gZnVuY3Rpb24odGFyZ2V0LCBwcm9wZXJ0eSkge1xyXG5cdCAgICBcdHZhciBvbGR2YWx1ZSA9IHRhcmdldFtwcm9wZXJ0eV07XHJcblx0ICAgIFx0Ly9pZih0eXBlb2Yob2xkdmFsdWUpIT09XCJ1bmRlZmluZWRcIikge1xyXG5cdFx0ICAgIFx0ZGVsZXRlIHRhcmdldFtwcm9wZXJ0eV07XHJcblx0XHQgICAgXHRpZih0YXJnZXQuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wICYmICF0aGlzLmFjY2VwdGxpc3QgfHwgdGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoXCJkZWxldGVcIik+PTApIHtcclxuXHRcdCAgICAgICAgXHR2YXIgY2hhbmdlID0ge29iamVjdDp0YXJnZXQsbmFtZTpwcm9wZXJ0eSx0eXBlOlwiZGVsZXRlXCIsb2xkVmFsdWU6b2xkdmFsdWV9LFxyXG5cdFx0ICAgICAgICBcdFx0c3RhcnQgPSB0aGlzLmNoYW5nZXNldC5sZW5ndGggPT09IDAsXHJcblx0XHQgICAgICAgIFx0XHRkZWxpdmVyID0gdGhpcy5kZWxpdmVyKCk7XHJcblx0XHQgICAgICAgIFx0dGhpcy5jaGFuZ2VzZXQucHVzaChjaGFuZ2UpO1xyXG5cdFx0ICAgICAgICBcdGlmKHN0YXJ0KSB7XHJcblx0XHQgICAgICAgIFx0XHRkZWxpdmVyKGZhbHNlLCh0eXBlb2YoZGVsaXZlci5kZWxheSk9PT1cIm51bWJlclwiID8gZGVsaXZlci5kZWxheSA6IDEwKSk7XHJcblx0XHQgICAgICAgIFx0fVxyXG5cdFx0ICAgIFx0fVxyXG5cdCAgICBcdC8vfVxyXG5cdCAgICBcdHJldHVybiB0cnVlO1xyXG5cdCAgICB9O1xyXG5cdCAgICBPYnNlcnZlci5wcm90b3R5cGUuZGVmaW5lUHJvcGVydHkgPSBmdW5jdGlvbih0YXJnZXQsIHByb3BlcnR5LCBkZXNjcmlwdG9yKSB7XHJcblx0ICAgIFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHksIGRlc2NyaXB0b3IpO1xyXG5cdCAgICBcdGlmKHRhcmdldC5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAgJiYgIXRoaXMuYWNjZXB0bGlzdCB8fCB0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZihcInJlY29uZmlndXJlXCIpPj0wKSB7XHJcblx0ICAgICAgICBcdHZhciBjaGFuZ2UgPSB7b2JqZWN0OnRhcmdldCxuYW1lOnByb3BlcnR5LHR5cGU6XCJyZWNvbmZpZ3VyZVwifSxcclxuICAgICAgICBcdFx0XHRzdGFydCA9IHRoaXMuY2hhbmdlc2V0Lmxlbmd0aCA9PT0gMCxcclxuICAgICAgICBcdFx0XHRkZWxpdmVyID0gdGhpcy5kZWxpdmVyKCk7XHJcblx0ICAgICAgICBcdHRoaXMuY2hhbmdlc2V0LnB1c2goY2hhbmdlKTtcclxuXHQgICAgICAgIFx0aWYoc3RhcnQpIHtcclxuXHQgICAgICAgIFx0XHRkZWxpdmVyKGZhbHNlLCh0eXBlb2YoZGVsaXZlci5kZWxheSk9PT1cIm51bWJlclwiID8gZGVsaXZlci5kZWxheSA6IDEwKSk7XHJcblx0ICAgICAgICBcdH1cclxuXHQgICAgXHR9XHJcblx0ICAgIFx0cmV0dXJuIHRydWU7XHJcblx0ICAgIH07XHJcblx0ICAgIE9ic2VydmVyLnByb3RvdHlwZS5zZXRQcm90b3R5cGVPZiA9IGZ1bmN0aW9uKHRhcmdldCwgcHJvdG90eXBlKSB7XHJcblx0ICAgIFx0dmFyIG9sZHZhbHVlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHRhcmdldCk7XHJcblx0ICAgIFx0T2JqZWN0LnNldFByb3RvdHlwZU9mKHRhcmdldCwgcHJvdG90eXBlKTtcclxuXHQgICAgXHRpZih0YXJnZXQuX19vYnNlcnZlcnNfXy5pbmRleE9mKHRoaXMpPj0wICYmICF0aGlzLmFjY2VwdGxpc3QgfHwgdGhpcy5hY2NlcHRsaXN0LmluZGV4T2YoXCJzZXRQcm90b3R5cGVcIik+PTApIHtcclxuXHQgICAgICAgIFx0dmFyIGNoYW5nZSA9IHtvYmplY3Q6dGFyZ2V0LG5hbWU6XCJfX3Byb3RvX19cIix0eXBlOlwic2V0UHJvdG90eXBlXCIsb2xkVmFsdWU6b2xkdmFsdWV9LFxyXG4gICAgXHRcdFx0XHRzdGFydCA9IHRoaXMuY2hhbmdlc2V0Lmxlbmd0aCA9PT0gMCxcclxuICAgIFx0XHRcdFx0ZGVsaXZlciA9IHRoaXMuZGVsaXZlcigpO1xyXG5cdCAgICAgICAgXHR0aGlzLmNoYW5nZXNldC5wdXNoKGNoYW5nZSk7XHJcblx0ICAgICAgICBcdGlmKHN0YXJ0KSB7XHJcblx0ICAgICAgICBcdFx0ZGVsaXZlcihmYWxzZSwodHlwZW9mKGRlbGl2ZXIuZGVsYXkpPT09XCJudW1iZXJcIiA/IGRlbGl2ZXIuZGVsYXkgOiAxMCkpO1xyXG5cdCAgICAgICAgXHR9XHJcblx0ICAgIFx0fVxyXG5cdCAgICBcdHJldHVybiB0cnVlO1xyXG5cdCAgICB9O1xyXG5cdCAgICBPYnNlcnZlci5wcm90b3R5cGUucHJldmVudEV4dGVuc2lvbnMgPSBmdW5jdGlvbih0YXJnZXQpIHtcclxuXHQgICAgICAgIE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh0YXJnZXQpO1xyXG5cdCAgICBcdGlmKHRhcmdldC5fX29ic2VydmVyc19fLmluZGV4T2YodGhpcyk+PTAgJiYgIXRoaXMuYWNjZXB0bGlzdCB8fCB0aGlzLmFjY2VwdGxpc3QuaW5kZXhPZihcInByZXZlbnRFeHRlbnNpb25zXCIpPj0wKSB7XHJcblx0ICAgICAgICBcdHZhciBjaGFuZ2UgPSB7b2JqZWN0OnRhcmdldCx0eXBlOlwicHJldmVudEV4dGVuc2lvbnNcIn0sXHJcblx0XHRcdFx0XHRzdGFydCA9IHRoaXMuY2hhbmdlc2V0Lmxlbmd0aCA9PT0gMCxcclxuXHRcdFx0XHRcdGRlbGl2ZXIgPSB0aGlzLmRlbGl2ZXIoKTtcclxuXHQgICAgICAgIFx0dGhpcy5jaGFuZ2VzZXQucHVzaChjaGFuZ2UpO1xyXG5cdCAgICAgICAgXHRpZihzdGFydCkge1xyXG5cdCAgICAgICAgXHRcdGRlbGl2ZXIoZmFsc2UsKHR5cGVvZihkZWxpdmVyLmRlbGF5KT09PVwibnVtYmVyXCIgPyBkZWxpdmVyLmRlbGF5IDogMTApKTtcclxuXHQgICAgICAgIFx0fVxyXG5cdCAgICBcdH1cclxuXHQgICAgXHRyZXR1cm4gdHJ1ZTtcclxuXHQgICAgfTtcclxuXHQgICAgT2JqZWN0Lm9ic2VydmUgPSBmdW5jdGlvbihvYmplY3QsY2FsbGJhY2ssYWNjZXB0bGlzdCxwYXVzYWJsZSxwYXVzZSxkZWxheSkge1xyXG5cdCAgICBcdHJldHVybiBuZXcgT2JzZXJ2ZXIob2JqZWN0LGNhbGxiYWNrLGFjY2VwdGxpc3QscGF1c2FibGUscGF1c2UsZGVsYXkpO1xyXG5cdCAgICB9O1xyXG5cdCAgICBPYmplY3QudW5vYnNlcnZlID0gZnVuY3Rpb24ob2JqZWN0LGNhbGxiYWNrKSB7XHJcblx0ICAgIFx0aWYob2JqZWN0Ll9fb2JzZXJ2ZXJDYWxsYmFja3NfXykge1xyXG5cdCAgICBcdFx0aWYoIWNhbGxiYWNrKSB7XHJcblx0ICAgIFx0XHRcdG9iamVjdC5fX29ic2VydmVyQ2FsbGJhY2tzX18uc3BsaWNlKDAsb2JqZWN0Ll9fb2JzZXJ2ZXJDYWxsYmFja3NfXy5sZW5ndGgpO1xyXG5cdCAgICBcdFx0XHRvYmplY3QuX19vYnNlcnZlcnNfXy5zcGxpY2UoMCxvYmplY3QuX19vYnNlcnZlcnNfXy5sZW5ndGgpO1xyXG5cdCAgICBcdFx0XHRyZXR1cm47XHJcblx0ICAgIFx0XHR9XHJcblx0ICAgIFx0XHRvYmplY3QuX19vYnNlcnZlckNhbGxiYWNrc19fLmZvckVhY2goZnVuY3Rpb24ob2JzZXJ2ZXJjYWxsYmFjayxpKSB7XHJcblx0ICAgIFx0XHRcdGlmKGNhbGxiYWNrPT09b2JzZXJ2ZXJjYWxsYmFjaykge1xyXG5cdCAgICBcdFx0XHRcdG9iamVjdC5fX29ic2VydmVyQ2FsbGJhY2tzX18uc3BsaWNlKGksMSk7XHJcblx0ICAgIFx0XHRcdFx0ZGVsZXRlIG9iamVjdC5fX29ic2VydmVyc19fW2ldLmNhbGxiYWNrO1xyXG5cdCAgICBcdFx0XHRcdG9iamVjdC5fX29ic2VydmVyc19fLnNwbGljZShpLDEpO1xyXG5cdCAgICBcdFx0XHR9XHJcblx0ICAgIFx0XHR9KTtcclxuXHQgICAgXHR9XHJcblx0ICAgIH07XHJcblx0ICAgIEFycmF5Lm9ic2VydmUgPSBmdW5jdGlvbihvYmplY3QsY2FsbGJhY2ssYWNjZXB0bGlzdCxwYXVzYWJsZSxwYXVzZSxkZWxheSkge1xyXG5cdCAgICBcdGlmKCEob2JqZWN0IGluc3RhbmNlb2YgQXJyYXkpICYmICFBcnJheS5pc0FycmF5KG9iamVjdCkpIHtcclxuXHQgICAgXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoXCJGaXJzdCBhcmd1bWVudCB0byBBcnJheS5vYnNlcnZlciBpcyBub3QgYW4gQXJyYXlcIik7XHJcblx0ICAgIFx0fVxyXG4gICAgICAgICAgICBcdGFjY2VwdGxpc3QgPSBhY2NlcHRsaXN0IHx8IFtcImFkZFwiLCBcInVwZGF0ZVwiLCBcImRlbGV0ZVwiLCBcInNwbGljZVwiXTtcclxuXHQgICAgXHR2YXIgYXJyYXlwcm94eSA9IG5ldyBQcm94eShvYmplY3Qse2dldDogZnVuY3Rpb24odGFyZ2V0LHByb3BlcnR5KSB7XHJcblx0ICAgIFx0XHRpZihwcm9wZXJ0eT09PVwidW5vYnNlcnZlXCIpIHtcclxuXHRcdCAgICBcdFx0cmV0dXJuIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XHJcblx0XHQgICAgXHRcdFx0aWYoY2FsbGJhY2spIHtcclxuXHRcdCAgICBcdFx0XHRcdHJldHVybiBPYmplY3QudW5vYnNlcnZlKHRhcmdldCxjYWxsYmFjayk7XHJcblx0XHQgICAgXHRcdFx0fVxyXG5cdFx0ICAgIFx0XHRcdHJldHVybiB0YXJnZXQudW5vYnNlcnZlKCk7XHJcblx0XHQgICAgXHRcdH07XHJcblx0XHQgICAgXHR9XHJcblx0ICAgIFx0XHRpZihwcm9wZXJ0eT09PVwic3BsaWNlXCIpIHtcclxuXHQgICAgXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHN0YXJ0LGVuZCkge1xyXG5cdCAgICBcdFx0XHRcdGlmKHR5cGVvZihzdGFydCkhPT1cIm51bWJlclwiIHx8IHR5cGVvZihlbmQpIT09XCJudW1iZXJcIikge1xyXG5cdCAgICBcdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihcIkZpcnN0IHR3byBhcmd1bWVudHMgdG8gQXJyYXkgc3BsaWNlIGFyZSBub3QgbnVtYmVyLCBudW1iZXJcIik7XHJcblx0ICAgIFx0XHRcdFx0fVxyXG5cdCAgICBcdCAgICBcdFx0dmFyIHJlbW92ZWQgPSB0aGlzLnNsaWNlKHN0YXJ0LHN0YXJ0K2VuZCksXHJcblx0ICAgIFx0ICAgIFx0XHRcdGFkZGVkQ291bnQgPSAoYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHMubGVuZ3RoLTIgOiAwKSxcclxuXHQgICAgXHQgICAgXHRcdFx0Y2hhbmdlID0gIHtvYmplY3Q6b2JqZWN0LHR5cGU6XCJzcGxpY2VcIixpbmRleDpzdGFydCxyZW1vdmVkOnJlbW92ZWQsYWRkZWRDb3VudDphZGRlZENvdW50fTtcclxuXHQgICAgXHQgICAgXHRcdHRhcmdldC5zcGxpY2UuYXBwbHkodGFyZ2V0LGFyZ3VtZW50cyk7XHJcblx0ICAgIFx0ICAgIFx0XHRpZihhY2NlcHRsaXN0LmluZGV4T2YoXCJzcGxpY2VcIik+PTApIHtcclxuXHQgICAgXHQgICAgXHRcdFx0dmFyIHN0YXJ0ID0gcHJveHkuX19vYnNlcnZlcl9fLmNoYW5nZXNldC5sZW5ndGggPT09IDAsXHJcblx0ICAgIFx0ICAgICAgICBcdFx0XHRkZWxpdmVyID0gcHJveHkuX19vYnNlcnZlcl9fLmRlbGl2ZXIoKTtcclxuXHQgICAgXHQgICAgXHRcdFx0cHJveHkuX19vYnNlcnZlcl9fLmNoYW5nZXNldC5wdXNoKGNoYW5nZSk7XHJcblx0ICAgIFx0ICAgIFx0XHRcdGlmKHN0YXJ0KSB7XHJcblx0ICAgIFx0XHQgICAgICAgIFx0XHRkZWxpdmVyKGZhbHNlLCh0eXBlb2YoZGVsaXZlci5kZWxheSk9PT1cIm51bWJlclwiID8gZGVsaXZlci5kZWxheSA6IDEwKSk7XHJcblx0ICAgIFx0XHQgICAgICAgIFx0fVxyXG5cdCAgICBcdCAgICBcdFx0fVxyXG5cdCAgICBcdCAgICBcdH1cclxuXHQgICAgXHRcdH1cclxuXHQgICAgXHRcdGlmKHByb3BlcnR5PT09XCJwdXNoXCIpIHtcclxuXHQgICAgXHRcdFx0IHJldHVybiBmdW5jdGlvbihpdGVtKSB7XHJcblx0ICAgIFx0XHQgICAgXHRyZXR1cm4gdGhpcy5zcGxpY2UodGhpcy5sZW5ndGgsMCxpdGVtKTtcclxuXHQgICAgXHRcdCAgICB9XHJcblx0ICAgIFx0XHR9XHJcblx0ICAgIFx0XHRpZihwcm9wZXJ0eT09PVwicG9wXCIpIHtcclxuXHQgICAgXHRcdFx0IHJldHVybiBmdW5jdGlvbigpIHtcclxuXHQgICAgXHRcdCAgICBcdHJldHVybiB0aGlzLnNwbGljZSh0aGlzLmxlbmd0aC0xLDEpO1xyXG5cdCAgICBcdFx0ICAgIH1cclxuXHQgICAgXHRcdH1cclxuXHQgICAgXHRcdGlmKHByb3BlcnR5PT09XCJ1bnNoaWZ0XCIpIHtcclxuXHQgICAgXHRcdFx0IHJldHVybiBmdW5jdGlvbihpdGVtKSB7XHJcbiAgICBcdFx0ICAgIFx0XHRyZXR1cm4gdGhpcy5zcGxpY2UoMCwwLGl0ZW0pO1xyXG4gICAgXHRcdCAgICBcdH1cclxuXHQgICAgXHRcdH1cclxuXHQgICAgXHRcdGlmKHByb3BlcnR5PT09XCJzaGlmdFwiKSB7XHJcblx0ICAgIFx0XHRcdHJldHVybiBmdW5jdGlvbigpIHtcclxuXHQgICAgXHQgICAgXHRcdHJldHVybiB0aGlzLnNwbGljZSgwLDEpO1xyXG5cdCAgICBcdCAgICBcdH1cclxuXHQgICAgXHRcdH1cclxuXHQgICAgXHRcdHJldHVybiB0YXJnZXRbcHJvcGVydHldO1xyXG5cdCAgICBcdH19KTtcclxuXHQgICAgXHR2YXIgcHJveHkgPSBPYmplY3Qub2JzZXJ2ZShhcnJheXByb3h5LGZ1bmN0aW9uKGNoYW5nZXNldCkgeyBcclxuXHQgICAgXHRcdHZhciBjaGFuZ2VzID0gY2hhbmdlc2V0LmZpbHRlcihmdW5jdGlvbihjaGFuZ2UpIHsgcmV0dXJuIGNoYW5nZS5uYW1lIT09XCJsZW5ndGhcIiAmJiBjaGFuZ2UubmFtZSE9PVwiYWRkXCIgJiYgKCFhY2NlcHRsaXN0IHx8IGFjY2VwdGxpc3QuaW5kZXhPZihjaGFuZ2UudHlwZSk+PTApOyB9KTtcclxuXHQgICAgXHRcdGlmKGNoYW5nZXMubGVuZ3RoPjApIHtcclxuXHQgICAgXHRcdFx0Y2FsbGJhY2soY2hhbmdlcyk7XHJcblx0ICAgIFx0XHR9XHJcblx0ICAgIFx0fSxhY2NlcHRsaXN0LHBhdXNhYmxlLHBhdXNlLGRlbGF5KTtcclxuXHQgICAgXHRyZXR1cm4gcHJveHk7XHJcblx0ICAgIH07XHJcblx0ICAgIEFycmF5LnVub2JzZXJ2ZSA9IGZ1bmN0aW9uKG9iamVjdCxjYWxsYmFjaykge1xyXG5cdFx0ICByZXR1cm4gb2JqZWN0LnVub2JzZXJ2ZShjYWxsYmFjayk7XHJcblx0ICAgIH1cclxuXHR9XHJcblx0T2JqZWN0LmRlZXBPYnNlcnZlID0gZnVuY3Rpb24ob2JqZWN0LGNhbGxiYWNrLHBhcnRzKSB7XHJcblxyXG5cdFx0cGFydHMgPSAocGFydHMgPyBwYXJ0cyA6IFtdKTtcclxuXHJcblx0XHR2YXIgdG9UeXBlTmFtZSA9IGZ1bmN0aW9uKG9iaikge1xyXG5cdFx0XHRyZXR1cm4gKHt9KS50b1N0cmluZy5jYWxsKG9iaikubWF0Y2goL1xccyhbYS16QS1aXSspLylbMV0udG9Mb3dlckNhc2UoKVxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIHJlb2JzZXJ2ZSh2YWx1ZSwgcGFydHMpIHtcclxuXHRcdFx0dmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XHJcblx0XHRcdGtleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcclxuXHRcdFx0XHRpZigodG9UeXBlTmFtZSh2YWx1ZVtrZXldKSA9PT0gJ29iamVjdCcgfHwgdG9UeXBlTmFtZSh2YWx1ZVtrZXldKSA9PT0gJ2FycmF5JykgJiYgIXZhbHVlW2tleV0uaGFzT3duUHJvcGVydHkoJ19fb2JzZXJ2ZXJzX18nKSkge1xyXG5cdFx0XHRcdFx0dmFyIG5ld3BhcnRzID0gcGFydHMuc2xpY2UoMCk7XHJcblx0XHRcdFx0XHRuZXdwYXJ0cy5wdXNoKGtleSk7XHJcblx0XHRcdFx0XHR2YWx1ZVtrZXldID0gT2JqZWN0LmRlZXBPYnNlcnZlKHZhbHVlW2tleV0sY2FsbGJhY2ssbmV3cGFydHMpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmVvYnNlcnZlKG9iamVjdCwgcGFydHMpO1xyXG5cclxuXHRcdHZhciBvYnNlcnZlZCA9IE9iamVjdC5vYnNlcnZlKG9iamVjdCxmdW5jdGlvbihjaGFuZ2VzZXQpIHtcclxuXHRcdFx0dmFyIGNoYW5nZXMgPSBbXTtcclxuXHRcdFx0ZnVuY3Rpb24gcmVjdXJzZShuYW1lLHJvb3RPYmplY3Qsb2xkT2JqZWN0LG5ld09iamVjdCxwYXRoKSB7XHJcblx0XHRcdFx0aWYobmV3T2JqZWN0IGluc3RhbmNlb2YgT2JqZWN0KSB7XHJcblx0XHRcdFx0XHR2YXIgbmV3a2V5cyA9IE9iamVjdC5rZXlzKG5ld09iamVjdCk7XHJcblx0XHRcdFx0XHRuZXdrZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XHJcblx0XHRcdFx0XHRcdGlmKCFvbGRPYmplY3QgfHwgKG9sZE9iamVjdFtrZXldIT09bmV3T2JqZWN0W2tleV0pKSB7XHJcblx0XHRcdFx0XHRcdFx0dmFyIG9sZHZhbHVlID0gKG9sZE9iamVjdCAmJiBvbGRPYmplY3Rba2V5XSE9PXVuZGVmaW5lZCA/IG9sZE9iamVjdFtrZXldIDogdW5kZWZpbmVkKSxcclxuXHRcdFx0XHRcdFx0XHRcdGNoYW5nZSA9IChvbGR2YWx1ZT09PXVuZGVmaW5lZCA/IFwiYWRkXCIgOiBcInVwZGF0ZVwiKSxcclxuXHRcdFx0XHRcdFx0XHRcdGtleXBhdGggPSBwYXRoICsgXCIuXCIgKyBrZXk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdGNoYW5nZXMucHVzaCh7bmFtZTpuYW1lLG9iamVjdDpyb290T2JqZWN0LHR5cGU6Y2hhbmdlLG9sZFZhbHVlOm9sZHZhbHVlLG5ld1ZhbHVlOm5ld09iamVjdFtrZXldLGtleXBhdGg6a2V5cGF0aH0pO1xyXG5cdFx0XHRcdFx0XHRcdHJlY3Vyc2UobmFtZSxyb290T2JqZWN0LG9sZHZhbHVlLG5ld09iamVjdFtrZXldLGtleXBhdGgpO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9IGVsc2UgaWYob2xkT2JqZWN0IGluc3RhbmNlb2YgT2JqZWN0KSB7XHJcblx0XHRcdFx0XHR2YXIgb2xka2V5cyA9IE9iamVjdC5rZXlzKG9sZE9iamVjdCk7XHJcblx0XHRcdFx0XHRvbGRrZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XHJcblx0XHRcdFx0XHRcdHZhciBjaGFuZ2UgPSAobmV3T2JqZWN0PT09bnVsbCA/IFwidXBkYXRlXCIgOiBcImRlbGV0ZVwiKSxcclxuXHRcdFx0XHRcdFx0XHRrZXlwYXRoID0gcGF0aCArIFwiLlwiICsga2V5O1xyXG5cdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHRjaGFuZ2VzLnB1c2goe25hbWU6bmFtZSxvYmplY3Q6cm9vdE9iamVjdCx0eXBlOmNoYW5nZSxvbGRWYWx1ZTpvbGRPYmplY3Rba2V5XSxuZXdWYWx1ZTpuZXdPYmplY3Qsa2V5cGF0aDprZXlwYXRofSk7XHJcblx0XHRcdFx0XHRcdHJlY3Vyc2UobmFtZSxyb290T2JqZWN0LG9sZE9iamVjdFtrZXldLHVuZGVmaW5lZCxrZXlwYXRoKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRjaGFuZ2VzZXQuZm9yRWFjaChmdW5jdGlvbihjaGFuZ2UpIHtcclxuXHRcdFx0XHR2YXIga2V5cGF0aCA9IChwYXJ0cy5sZW5ndGg+MCA/IHBhcnRzLmpvaW4oXCIuXCIpICsgXCIuXCIgOiBcIlwiKSArIGNoYW5nZS5uYW1lO1xyXG5cclxuXHRcdFx0XHRpZiAoY2hhbmdlLnR5cGUgPT09IFwidXBkYXRlXCIgfHwgY2hhbmdlLnR5cGUgPT09IFwiYWRkXCIpIHsgXHJcblx0XHRcdFx0XHRyZW9ic2VydmUoY2hhbmdlLm9iamVjdCwgcGFydHMpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Y2hhbmdlcy5wdXNoKHtuYW1lOmNoYW5nZS5uYW1lLG9iamVjdDpjaGFuZ2Uub2JqZWN0LHR5cGU6Y2hhbmdlLnR5cGUsb2xkVmFsdWU6Y2hhbmdlLm9sZFZhbHVlLG5ld1ZhbHVlOmNoYW5nZS5vYmplY3RbY2hhbmdlLm5hbWVdLGtleXBhdGg6a2V5cGF0aH0pO1xyXG5cdFx0XHRcdHJlY3Vyc2UoY2hhbmdlLm5hbWUsY2hhbmdlLm9iamVjdCxjaGFuZ2Uub2xkVmFsdWUsY2hhbmdlLm9iamVjdFtjaGFuZ2UubmFtZV0sa2V5cGF0aCk7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRjYWxsYmFjayhjaGFuZ2VzKTtcclxuXHRcdH0pO1xyXG5cdFx0cmV0dXJuIG9ic2VydmVkO1xyXG5cdH07XHJcbn0pKCk7XHJcblxuXG4vKioqLyB9KSxcbi8qIDEyMCAqLyxcbi8qIDEyMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3Byb21pc2UgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcyKTtcblxudmFyIF9wcm9taXNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb21pc2UpO1xuXG52YXIgX2tleXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDU5KTtcblxudmFyIF9rZXlzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2tleXMpO1xuXG52YXIgX2Fzc2lnbiA9IF9fd2VicGFja19yZXF1aXJlX18oMTE4KTtcblxudmFyIF9hc3NpZ24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXNzaWduKTtcblxudmFyIF9nZXRQcm90b3R5cGVPZiA9IF9fd2VicGFja19yZXF1aXJlX18oMzEpO1xuXG52YXIgX2dldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldFByb3RvdHlwZU9mKTtcblxudmFyIF9jbGFzc0NhbGxDaGVjazIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuXG52YXIgX2NsYXNzQ2FsbENoZWNrMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7XG5cbnZhciBfY3JlYXRlQ2xhc3MyID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCk7XG5cbnZhciBfY3JlYXRlQ2xhc3MzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTtcblxudmFyIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiA9IF9fd2VicGFja19yZXF1aXJlX18oMzUpO1xuXG52YXIgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4zID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIpO1xuXG52YXIgX2dldDIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyNSk7XG5cbnZhciBfZ2V0MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldDIpO1xuXG52YXIgX2luaGVyaXRzMiA9IF9fd2VicGFja19yZXF1aXJlX18oMzQpO1xuXG52YXIgX2luaGVyaXRzMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2luaGVyaXRzMik7XG5cbnZhciBfdXRpbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcxKTtcblxudmFyIF9EYXRhT2JqZWN0MiA9IF9fd2VicGFja19yZXF1aXJlX18oMTIzKTtcblxudmFyIF9EYXRhT2JqZWN0MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0RhdGFPYmplY3QyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXHJcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcclxuKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0xcclxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxyXG4qIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxyXG4qIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUdcclxuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcclxuKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxyXG4qXHJcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbipcclxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4qXHJcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4qIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbioqL1xuXG52YXIgRmlsdGVyVHlwZSA9IHsgQU5ZOiAnYW55JywgU1RBUlQ6ICdzdGFydCcsIEVYQUNUOiAnZXhhY3QnIH07XG5cbi8qKlxyXG4gKiBUaGUgY2xhc3MgcmV0dXJuZWQgZnJvbSB0aGUgU3luY2hlciBzdWJzY3JpYmUgY2FsbC5cclxuICogVG8gYmUgdXNlZCBhcyBhbiBvYnNlcnZhdGlvbiBwb2ludCBmcm9tIGEgRGF0YU9iamVjdFJlcG9ydGVyIGNoYW5nZS5cclxuICovXG5cbnZhciBEYXRhT2JqZWN0T2JzZXJ2ZXIgPSBmdW5jdGlvbiAoX0RhdGFPYmplY3QpIHtcbiAgKDAsIF9pbmhlcml0czMuZGVmYXVsdCkoRGF0YU9iamVjdE9ic2VydmVyLCBfRGF0YU9iamVjdCk7XG5cbiAgLyogcHJpdmF0ZVxyXG4gIF9jaGFuZ2VMaXN0ZW5lcjogTXNnTGlzdGVuZXJcclxuICAgIC0tLS1ldmVudCBoYW5kbGVycy0tLS1cclxuICBfZmlsdGVyczogezxmaWx0ZXI+OiB7dHlwZTogPHN0YXJ0LCBleGFjdD4sIGNhbGxiYWNrOiA8ZnVuY3Rpb24+fSB9XHJcbiAgKi9cblxuICAvKipcclxuICAgKiBAaWdub3JlXHJcbiAgICogU2hvdWxkIG5vdCBiZSB1c2VkIGRpcmVjdGx5IGJ5IEh5cGVydGllcy4gSXQncyBjYWxsZWQgYnkgdGhlIFN5bmNoZXIuc3Vic2NyaWJlIG1ldGhvZFxyXG4gICAqL1xuXG4gIC8vVE9ETzogRm9yIEZ1cnRoZXIgU3R1ZHlcbiAgZnVuY3Rpb24gRGF0YU9iamVjdE9ic2VydmVyKGlucHV0KSB7XG4gICAgKDAsIF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcywgRGF0YU9iamVjdE9ic2VydmVyKTtcblxuICAgIHZhciBfdGhpczIgPSAoMCwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4zLmRlZmF1bHQpKHRoaXMsIChEYXRhT2JqZWN0T2JzZXJ2ZXIuX19wcm90b19fIHx8ICgwLCBfZ2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKERhdGFPYmplY3RPYnNlcnZlcikpLmNhbGwodGhpcywgaW5wdXQpKTtcbiAgICAvL3RvZG86IGNoZWNrIHdoeVxuICAgIC8vaW5wdXQuaW5pdGlhbERhdGEgPSBpbnB1dC5pbml0aWFsRGF0YS5kYXRhO1xuXG4gICAgdmFyIF90aGlzID0gX3RoaXMyO1xuXG4gICAgX3RoaXMuX3ZlcnNpb24gPSBpbnB1dC52ZXJzaW9uO1xuICAgIF90aGlzLl9maWx0ZXJzID0ge307XG5cbiAgICBfdGhpcy5fc3luY09iai5vYnNlcnZlKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgX3RoaXMuX29uRmlsdGVyKGV2ZW50KTtcbiAgICB9KTtcblxuICAgIF90aGlzLl9hbGxvY2F0ZUxpc3RlbmVycygpO1xuICAgIHJldHVybiBfdGhpczI7XG4gIH1cblxuICAvKipcclxuICAgKiBTeW5jIERhdGEgT2JqZWN0IE9ic2VydmVyIHdpdGggbGFzdCB2ZXJzaW9uIG9mIERhdGEgT2JqZWN0IFJlcG9ydGVyLiBVc2VmdWwgZm9yIFJlc3VtZXNcclxuICAgKi9cblxuXG4gICgwLCBfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKERhdGFPYmplY3RPYnNlcnZlciwgW3tcbiAgICBrZXk6ICdzeW5jJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3luYygpIHtcblxuICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgIGNvbnNvbGUuaW5mbygnW0RhdGFPYmplY3RPYnNlcnZlcl9zeW5jXSBzeW5jaHJvbmlzaW5nICcpO1xuXG4gICAgICBfdGhpcy5fc3luY2hlci5yZWFkKF90aGlzLl9tZXRhZGF0YS51cmwpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIGNvbnNvbGUuaW5mbygnW0RhdGFPYmplY3RPYnNlcnZlcl9zeW5jXSB2YWx1ZSB0byBzeW5jOiAnLCB2YWx1ZSk7XG5cbiAgICAgICAgKDAsIF9hc3NpZ24yLmRlZmF1bHQpKF90aGlzLmRhdGEsICgwLCBfdXRpbHMuZGVlcENsb25lKSh2YWx1ZS5kYXRhKSk7XG5cbiAgICAgICAgX3RoaXMuX3ZlcnNpb24gPSB2YWx1ZS52ZXJzaW9uO1xuXG4gICAgICAgIF90aGlzLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQgPSB2YWx1ZS5sYXN0TW9kaWZpZWQ7XG5cbiAgICAgICAgLyppZiAodmFsdWUudmVyc2lvbiAhPSBfdGhpcy5fdmVyc2lvbikge1xyXG4gICAgICAgICAgY29uc29sZS5pbmZvKCdbRGF0YU9iamVjdE9ic2VydmVyX3N5bmNdIHVwZGF0aW5nIGV4aXN0aW5nIGRhdGE6ICcsIF90aGlzLmRhdGEpO1xyXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKF90aGlzLmRhdGEgfHwge30sIGRlZXBDbG9uZSh2YWx1ZS5kYXRhKSk7XHJcbiAgICAgICAgICAgIF90aGlzLl9tZXRhZGF0YSA9IGRlZXBDbG9uZSh2YWx1ZSk7XHJcbiAgICAgICAgICAgIGRlbGV0ZSBfdGhpcy5fbWV0YWRhdGEuZGF0YTtcclxuICAgICAgICAgICAgX3RoaXMuX3ZlcnNpb24gPSB2YWx1ZS52ZXJzaW9uO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGNvbnNvbGUuaW5mbygnW0RhdGFPYmplY3RPYnNlcnZlcl9zeW5jXSBleGlzdGluZyBkYXRhIGlzIHVwZGF0ZWQ6ICcsIHZhbHVlKTtcclxuICAgICAgICB9Ki9cbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZWFzb24pIHtcbiAgICAgICAgY29uc29sZS5pbmZvKCdbRGF0YU9iamVjdE9ic2VydmVyX3N5bmNdIHN5bmMgZmFpbGVkOiAnLCByZWFzb24pO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnX2FsbG9jYXRlTGlzdGVuZXJzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2FsbG9jYXRlTGlzdGVuZXJzKCkge1xuICAgICAgKDAsIF9nZXQzLmRlZmF1bHQpKERhdGFPYmplY3RPYnNlcnZlci5wcm90b3R5cGUuX19wcm90b19fIHx8ICgwLCBfZ2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKERhdGFPYmplY3RPYnNlcnZlci5wcm90b3R5cGUpLCAnX2FsbG9jYXRlTGlzdGVuZXJzJywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIF90aGlzLl9jaGFuZ2VMaXN0ZW5lciA9IF90aGlzLl9idXMuYWRkTGlzdGVuZXIoX3RoaXMuX3VybCArICcvY2hhbmdlcycsIGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgICAgaWYgKG1zZy50eXBlID09PSAndXBkYXRlJykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdEYXRhT2JqZWN0T2JzZXJ2ZXItJyArIF90aGlzLl91cmwgKyAnLVJDVjogJywgbXNnKTtcbiAgICAgICAgICBfdGhpcy5fY2hhbmdlT2JqZWN0KF90aGlzLl9zeW5jT2JqLCBtc2cpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdfcmVsZWFzZUxpc3RlbmVycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9yZWxlYXNlTGlzdGVuZXJzKCkge1xuICAgICAgKDAsIF9nZXQzLmRlZmF1bHQpKERhdGFPYmplY3RPYnNlcnZlci5wcm90b3R5cGUuX19wcm90b19fIHx8ICgwLCBfZ2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKERhdGFPYmplY3RPYnNlcnZlci5wcm90b3R5cGUpLCAnX3JlbGVhc2VMaXN0ZW5lcnMnLCB0aGlzKS5jYWxsKHRoaXMpO1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgX3RoaXMuX2NoYW5nZUxpc3RlbmVyLnJlbW92ZSgpO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgICogUmVsZWFzZSBhbmQgZGVsZXRlIG9iamVjdCBkYXRhXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZGVsZXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2RlbGV0ZSgpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIF90aGlzLnVuc3Vic2NyaWJlKCk7XG4gICAgICBfdGhpcy5fcmVsZWFzZUxpc3RlbmVycygpO1xuICAgICAgZGVsZXRlIF90aGlzLl9zeW5jaGVyLl9vYnNlcnZlcnNbX3RoaXMuX3VybF07XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBSZWxlYXNlIGFuZCBkZWxldGUgb2JqZWN0IGRhdGFcclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICd1bnN1YnNjcmliZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgLy9GTE9XLU9VVDogdGhpcyBtZXNzYWdlIHdpbGwgYmUgc2VudCB0byB0aGUgcnVudGltZSBpbnN0YW5jZSBvZiBTeW5jaGVyTWFuYWdlciAtPiBfb25Mb2NhbFVuU3Vic2NyaWJlXG4gICAgICB2YXIgdW5TdWJzY3JpYmVNc2cgPSB7XG4gICAgICAgIHR5cGU6ICd1bnN1YnNjcmliZScsIGZyb206IF90aGlzLl9vd25lciwgdG86IF90aGlzLl9zeW5jaGVyLl9zdWJVUkwsXG4gICAgICAgIGJvZHk6IHsgcmVzb3VyY2U6IF90aGlzLl91cmwgfVxuICAgICAgfTtcblxuICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh1blN1YnNjcmliZU1zZywgZnVuY3Rpb24gKHJlcGx5KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdEYXRhT2JqZWN0T2JzZXJ2ZXItVU5TVUJTQ1JJQkU6ICcsIHJlcGx5KTtcbiAgICAgICAgaWYgKHJlcGx5LmJvZHkuY29kZSA9PT0gMjAwKSB7XG4gICAgICAgICAgX3RoaXMuX3JlbGVhc2VMaXN0ZW5lcnMoKTtcbiAgICAgICAgICBkZWxldGUgX3RoaXMuX3N5bmNoZXIuX29ic2VydmVyc1tfdGhpcy5fdXJsXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBSZWdpc3RlciB0aGUgY2hhbmdlIGxpc3RlbmVycyBzZW50IGJ5IHRoZSByZXBvcnRlclxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbHRlciAtIEZpbHRlciB0aGF0IGlkZW50aWZpZXMgdGhlIGZpZWxkIChzZXBhcmF0ZWQgZG90IHBhdGgpLiBBY2NlcHRzICogYXQgdGhlIGVuZCBmb3IgYSBtb3JlIHVucmVzdHJpY3RlZCBmaWx0ZXJpbmcuXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9uKGV2ZW50OiBNc2dFdmVudCl9IGNhbGxiYWNrXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnb25DaGFuZ2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNoYW5nZShmaWx0ZXIsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIga2V5ID0gZmlsdGVyO1xuICAgICAgdmFyIGZpbHRlck9iaiA9IHtcbiAgICAgICAgdHlwZTogRmlsdGVyVHlwZS5FWEFDVCxcbiAgICAgICAgY2FsbGJhY2s6IGNhbGxiYWNrXG4gICAgICB9O1xuXG4gICAgICB2YXIgaWR4ID0gZmlsdGVyLmluZGV4T2YoJyonKTtcbiAgICAgIGlmIChpZHggPT09IGZpbHRlci5sZW5ndGggLSAxKSB7XG4gICAgICAgIGlmIChpZHggPT09IDApIHtcbiAgICAgICAgICBmaWx0ZXJPYmoudHlwZSA9IEZpbHRlclR5cGUuQU5ZO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZpbHRlck9iai50eXBlID0gRmlsdGVyVHlwZS5TVEFSVDtcbiAgICAgICAgICBrZXkgPSBmaWx0ZXIuc3Vic3RyKDAsIGZpbHRlci5sZW5ndGggLSAxKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLl9maWx0ZXJzW2tleV0gPSBmaWx0ZXJPYmo7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnX29uRmlsdGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX29uRmlsdGVyKGV2ZW50KSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAoMCwgX2tleXMyLmRlZmF1bHQpKF90aGlzLl9maWx0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdmFyIGZpbHRlciA9IF90aGlzLl9maWx0ZXJzW2tleV07XG4gICAgICAgIGlmIChmaWx0ZXIudHlwZSA9PT0gRmlsdGVyVHlwZS5BTlkpIHtcbiAgICAgICAgICAvL21hdGNoIGFueXRoaW5nXG4gICAgICAgICAgZmlsdGVyLmNhbGxiYWNrKGV2ZW50KTtcbiAgICAgICAgfSBlbHNlIGlmIChmaWx0ZXIudHlwZSA9PT0gRmlsdGVyVHlwZS5TVEFSVCkge1xuICAgICAgICAgIC8vaWYgc3RhcnRzIHdpdGggZmlsdGVyLi4uXG4gICAgICAgICAgaWYgKGV2ZW50LmZpZWxkLmluZGV4T2Yoa2V5KSA9PT0gMCkge1xuICAgICAgICAgICAgZmlsdGVyLmNhbGxiYWNrKGV2ZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoZmlsdGVyLnR5cGUgPT09IEZpbHRlclR5cGUuRVhBQ1QpIHtcbiAgICAgICAgICAvL2V4YWN0IG1hdGNoXG4gICAgICAgICAgaWYgKGV2ZW50LmZpZWxkID09PSBrZXkpIHtcbiAgICAgICAgICAgIGZpbHRlci5jYWxsYmFjayhldmVudCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdvbkRpc2Nvbm5lY3RlZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uRGlzY29ubmVjdGVkKGNhbGxiYWNrKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgcmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG5cbiAgICAgICAgX3RoaXMzLl9zdWJzY3JpYmVSZWdpc3RyYXRpb24oKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBfdGhpczMuX29uRGlzY29ubmVjdGVkID0gY2FsbGJhY2s7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19zdWJzY3JpYmVSZWdpc3RyYXRpb24nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfc3Vic2NyaWJlUmVnaXN0cmF0aW9uKCkge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHZhciBtc2cgPSB7XG4gICAgICAgIHR5cGU6ICdzdWJzY3JpYmUnLFxuICAgICAgICBmcm9tOiB0aGlzLl9vd25lcixcbiAgICAgICAgdG86IHRoaXMuX3N5bmNoZXIuX3J1bnRpbWVVcmwgKyAnL3N1YnNjcmlwdGlvbnMnLFxuICAgICAgICBib2R5OiB7XG4gICAgICAgICAgcmVzb3VyY2VzOiBbdGhpcy5fdXJsICsgJy9yZWdpc3RyYXRpb24nXVxuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gbmV3IF9wcm9taXNlMi5kZWZhdWx0KGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcblxuICAgICAgICBfdGhpczQuX2J1cy5wb3N0TWVzc2FnZShtc2csIGZ1bmN0aW9uIChyZXBseSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdE9ic2VydmVyLl9zdWJzY3JpYmVSZWdpc3RyYXRpb25dICcgKyBfdGhpczQuX3VybCArICcgcmN2ZWQgcmVwbHkgJywgcmVwbHkpO1xuXG4gICAgICAgICAgaWYgKHJlcGx5LmJvZHkuY29kZSA9PT0gMjAwKSB7XG4gICAgICAgICAgICBfdGhpczQuX2dlbmVyYXRlTGlzdGVuZXIoX3RoaXM0Ll91cmwgKyAnL3JlZ2lzdHJhdGlvbicpO1xuICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzdWJzY3JpYmluZyByZWdpc3RyYXRpb24gc3RhdHVzIGZvciAnLCBfdGhpczQuX3VybCk7XG4gICAgICAgICAgICByZWplY3QoJ0Vycm9yIHN1YnNjcmliaW5nIHJlZ2lzdHJhdGlvbiBzdGF0dXMgZm9yICcgKyBfdGhpczQuX3VybCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19nZW5lcmF0ZUxpc3RlbmVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2dlbmVyYXRlTGlzdGVuZXIobm90aWZpY2F0aW9uVVJMKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBfdGhpcy5fYnVzLmFkZExpc3RlbmVyKG5vdGlmaWNhdGlvblVSTCwgZnVuY3Rpb24gKG1zZykge1xuICAgICAgICBjb25zb2xlLmxvZygnW0RhdGFPYmplY3RPYnNlcnZlci5yZWdpc3RyYXRpb25Ob3RpZmljYXRpb25dICcgKyBfdGhpcy5fdXJsICsgJzogJywgbXNnKTtcbiAgICAgICAgaWYgKG1zZy5ib2R5LnZhbHVlICYmIG1zZy5ib2R5LnZhbHVlID09PSAnZGlzY29ubmVjdGVkJyAmJiBfdGhpcy5fb25EaXNjb25uZWN0ZWQpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnW0RhdGFPYmplY3RPYnNlcnZlcl0gJyArIF90aGlzLl91cmwgKyAnOiB3YXMgZGlzY29ubmVjdGVkICcsIG1zZyk7XG4gICAgICAgICAgX3RoaXMuX29uRGlzY29ubmVjdGVkKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgICogUmVxdWVzdHMgdGhlIHJlcG9ydGVyIHRvIGV4ZWN1dGUgYSBtZXRob2Qgb24gdGhlIGRhdGEgb2JqZWN0XHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWV0aG9kIC0gTmFtZSBvZiB0aGUgZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQuXHJcbiAgICAgKiBAcGFyYW0ge2FycmF5fSBwYXJhbXMgLSBhcnJheSBvZiBwYXJhbWV0ZXJzIGZvciB0aGUgcmVxdWVzdGVkIGZ1bmN0aW9uXHJcbiAgICAgKiBAcmV0dXJuIHtwcm9taXNlfVxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2V4ZWN1dGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBleGVjdXRlKG1ldGhvZCwgcGFyYW1zKSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgcmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG5cbiAgICAgICAgdmFyIG1zZyA9IHtcbiAgICAgICAgICB0eXBlOiAnZXhlY3V0ZScsXG4gICAgICAgICAgZnJvbTogX3RoaXM1Ll9vd25lcixcbiAgICAgICAgICB0bzogX3RoaXMuX3VybCxcbiAgICAgICAgICBib2R5OiB7XG4gICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgICAgICAgIHBhcmFtczogcGFyYW1zXG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2UobXNnLCBmdW5jdGlvbiAocmVwbHkpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnW0RhdGFPYmplY3RPYnNlcnZlci5leGVjdXRlXSAnICsgX3RoaXMuX3VybCArICcgcmN2ZWQgcmVwbHkgJywgcmVwbHkpO1xuXG4gICAgICAgICAgaWYgKHJlcGx5LmJvZHkuY29kZSA9PT0gMjAwKSB7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybmluZygnW0RhdGFPYmplY3RPYnNlcnZlci5leGVjdXRlXSBleGVjdXRpb24gb2YgbWV0aG9kICcgKyBtZXRob2QgKyAnIHdhcyByZWplY3QgYnkgcmVwb3J0ZXInKTtcbiAgICAgICAgICAgIHJlamVjdCgnW0RhdGFPYmplY3RPYnNlcnZlci5leGVjdXRlXSBleGVjdXRpb24gb2YgbWV0aG9kICcgKyBtZXRob2QgKyAnIHdhcyByZWplY3QgYnkgcmVwb3J0ZXInKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBEYXRhT2JqZWN0T2JzZXJ2ZXI7XG59KF9EYXRhT2JqZWN0My5kZWZhdWx0IC8qIGltcGxlbWVudHMgU3luY1N0YXR1cyAqLyk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IERhdGFPYmplY3RPYnNlcnZlcjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG4vKioqLyB9KSxcbi8qIDEyMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2tleXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDU5KTtcblxudmFyIF9rZXlzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2tleXMpO1xuXG52YXIgX2dldFByb3RvdHlwZU9mID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMSk7XG5cbnZhciBfZ2V0UHJvdG90eXBlT2YyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0UHJvdG90eXBlT2YpO1xuXG52YXIgX2NsYXNzQ2FsbENoZWNrMiA9IF9fd2VicGFja19yZXF1aXJlX18oOCk7XG5cbnZhciBfY2xhc3NDYWxsQ2hlY2szID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTtcblxudmFyIF9jcmVhdGVDbGFzczIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTtcblxudmFyIF9jcmVhdGVDbGFzczMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO1xuXG52YXIgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNSk7XG5cbnZhciBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMik7XG5cbnZhciBfZ2V0MiA9IF9fd2VicGFja19yZXF1aXJlX18oMTI1KTtcblxudmFyIF9nZXQzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0Mik7XG5cbnZhciBfaW5oZXJpdHMyID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNCk7XG5cbnZhciBfaW5oZXJpdHMzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5oZXJpdHMyKTtcblxudmFyIF9EYXRhT2JqZWN0MiA9IF9fd2VicGFja19yZXF1aXJlX18oMTIzKTtcblxudmFyIF9EYXRhT2JqZWN0MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0RhdGFPYmplY3QyKTtcblxudmFyIF91dGlscyA9IF9fd2VicGFja19yZXF1aXJlX18oNzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcclxuICogVGhlIGNsYXNzIHJldHVybmVkIGZyb20gdGhlIFN5bmNoZXIgY3JlYXRlIGNhbGwuXHJcbiAqIFRvIGJlIHVzZWQgYXMgYSByZXBvcnRlciBwb2ludCwgY2hhbmdlcyB3aWxsIGJlIHN1Ym1pdGVkIHRvIERhdGFPYmplY3RPYnNlcnZlciBpbnN0YW5jZXMuXHJcbiAqL1xuLyoqXHJcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcclxuKiBDb3B5cmlnaHQgMjAxNiBRVU9CSVMgTkVUV09SS1MgU0xcclxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxyXG4qIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxyXG4qIENvcHlyaWdodCAyMDE2IERldXRzY2hlIFRlbGVrb20gQUdcclxuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcclxuKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxyXG4qXHJcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbipcclxuKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4qXHJcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4qIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbioqL1xuXG52YXIgRGF0YU9iamVjdFJlcG9ydGVyID0gZnVuY3Rpb24gKF9EYXRhT2JqZWN0KSB7XG4gICgwLCBfaW5oZXJpdHMzLmRlZmF1bHQpKERhdGFPYmplY3RSZXBvcnRlciwgX0RhdGFPYmplY3QpO1xuXG4gIC8qIHByaXZhdGVcclxuICBfc3Vic2NyaXB0aW9uczogPGh5cGVydHlVcmw6IHsgc3RhdHVzOiBzdHJpbmcgfSB9PlxyXG4gICAgLS0tLWV2ZW50IGhhbmRsZXJzLS0tLVxyXG4gIF9vblN1YnNjcmlwdGlvbkhhbmRsZXI6IChldmVudCkgPT4gdm9pZFxyXG4gIF9vblJlc3BvbnNlSGFuZGxlcjogKGV2ZW50KSA9PiB2b2lkXHJcbiAgX29uUmVhZEhhbmRsZXI6IChldmVudCkgPT4gdm9pZFxyXG4gICovXG5cbiAgLyoqXHJcbiAgICogQGlnbm9yZVxyXG4gICAqIFNob3VsZCBub3QgYmUgdXNlZCBkaXJlY3RseSBieSBIeXBlcnRpZXMuIEl0J3MgY2FsbGVkIGJ5IHRoZSBTeW5jaGVyLmNyZWF0ZSBtZXRob2RcclxuICAgKi9cblxuICAvL2NvbnN0cnVjdG9yKHN5bmNoZXIsIHVybCwgY3JlYXRlZCwgcmVwb3J0ZXIsIHJ1bnRpbWUsIHNjaGVtYSwgbmFtZSwgaW5pdGlhbFN0YXR1cywgaW5pdGlhbERhdGEsIGNoaWxkcmVucywgbXV0dWFsID0gdHJ1ZSwgcmVzdW1lZCA9IGZhbHNlLCBkZXNjcmlwdGlvbiwgdGFncywgcmVzb3VyY2VzLCBvYnNlcnZlclN0b3JhZ2UsIHB1YmxpY09ic2VydmF0aW9uKSB7XG4gIGZ1bmN0aW9uIERhdGFPYmplY3RSZXBvcnRlcihpbnB1dCkge1xuICAgICgwLCBfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsIERhdGFPYmplY3RSZXBvcnRlcik7XG5cbiAgICB2YXIgX3RoaXMyID0gKDAsIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMy5kZWZhdWx0KSh0aGlzLCAoRGF0YU9iamVjdFJlcG9ydGVyLl9fcHJvdG9fXyB8fCAoMCwgX2dldFByb3RvdHlwZU9mMi5kZWZhdWx0KShEYXRhT2JqZWN0UmVwb3J0ZXIpKS5jYWxsKHRoaXMsIGlucHV0KSk7XG5cbiAgICB2YXIgX3RoaXMgPSBfdGhpczI7XG5cbiAgICBfdGhpcy5fc3Vic2NyaXB0aW9ucyA9IHt9O1xuXG4gICAgX3RoaXMuX3N5bmNPYmoub2JzZXJ2ZShmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdbU3luY2hlci5EYXRhT2JqZWN0UmVwb3J0ZXJdICcgKyBfdGhpcy51cmwgKyAnIHB1Ymxpc2ggY2hhbmdlOiAnLCBldmVudCk7XG4gICAgICBfdGhpcy5fb25DaGFuZ2UoZXZlbnQpO1xuICAgIH0pO1xuXG4gICAgX3RoaXMuX2FsbG9jYXRlTGlzdGVuZXJzKCk7XG5cbiAgICBfdGhpcy5faW52aXRhdGlvbnMgPSBbXTtcbiAgICByZXR1cm4gX3RoaXMyO1xuICB9XG5cbiAgKDAsIF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoRGF0YU9iamVjdFJlcG9ydGVyLCBbe1xuICAgIGtleTogJ19hbGxvY2F0ZUxpc3RlbmVycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9hbGxvY2F0ZUxpc3RlbmVycygpIHtcbiAgICAgICgwLCBfZ2V0My5kZWZhdWx0KShEYXRhT2JqZWN0UmVwb3J0ZXIucHJvdG90eXBlLl9fcHJvdG9fXyB8fCAoMCwgX2dldFByb3RvdHlwZU9mMi5kZWZhdWx0KShEYXRhT2JqZWN0UmVwb3J0ZXIucHJvdG90eXBlKSwgJ19hbGxvY2F0ZUxpc3RlbmVycycsIHRoaXMpLmNhbGwodGhpcyk7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBfdGhpcy5fb2JqZWN0TGlzdGVuZXIgPSBfdGhpcy5fYnVzLmFkZExpc3RlbmVyKF90aGlzLl91cmwsIGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1tTeW5jaGVyLkRhdGFPYmplY3RSZXBvcnRlcl0gbGlzdGVuZXIgJyArIF90aGlzLl91cmwgKyAnIFJlY2VpdmVkOiAnLCBtc2cpO1xuICAgICAgICBzd2l0Y2ggKG1zZy50eXBlKSB7XG4gICAgICAgICAgY2FzZSAncmVzcG9uc2UnOlxuICAgICAgICAgICAgX3RoaXMuX29uUmVzcG9uc2UobXNnKTticmVhaztcbiAgICAgICAgICBjYXNlICdyZWFkJzpcbiAgICAgICAgICAgIF90aGlzLl9vblJlYWQobXNnKTticmVhaztcbiAgICAgICAgICBjYXNlICdleGVjdXRlJzpcbiAgICAgICAgICAgIF90aGlzLl9vbkV4ZWN1dGUobXNnKTticmVhaztcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnX3JlbGVhc2VMaXN0ZW5lcnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfcmVsZWFzZUxpc3RlbmVycygpIHtcbiAgICAgICgwLCBfZ2V0My5kZWZhdWx0KShEYXRhT2JqZWN0UmVwb3J0ZXIucHJvdG90eXBlLl9fcHJvdG9fXyB8fCAoMCwgX2dldFByb3RvdHlwZU9mMi5kZWZhdWx0KShEYXRhT2JqZWN0UmVwb3J0ZXIucHJvdG90eXBlKSwgJ19yZWxlYXNlTGlzdGVuZXJzJywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIF90aGlzLl9vYmplY3RMaXN0ZW5lci5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICAvKipcclxuICAgICAqIFNlbmQgaW52aXRhdGlvbnMgKGNyZWF0ZSBtZXNzYWdlcykgdG8gaHlwZXJ0aWVzLCBvYnNlcnZlcnMgbGlzdC5cclxuICAgICAqIEBwYXJhbSAge0h5cGVydHlVUkxbXX0gb2JzZXJ2ZXJzIExpc3Qgb2YgSHlwZXJ0eSBVUkwnc1xyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2ludml0ZU9ic2VydmVycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGludml0ZU9ic2VydmVycyhvYnNlcnZlcnMpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIC8vRkxPVy1PVVQ6IHRoaXMgbWVzc2FnZSB3aWxsIGJlIHNlbnQgdG8gdGhlIHJ1bnRpbWUgaW5zdGFuY2Ugb2YgU3luY2hlck1hbmFnZXIgLT4gX29uQ3JlYXRlXG4gICAgICAvLyBUT0RPOiByZW1vdmUgdmFsdWUgYW5kIGFkZCByZXNvdXJjZXM/IHNob3VsZCBzaW1pbGFyIHRvIDFzdCBjcmVhdGVcblxuICAgICAgdmFyIHRvSW52aXRlID0gW107XG5cbiAgICAgIG9ic2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgICBpZiAoIV90aGlzLl9pbnZpdGF0aW9uc1tvYnNlcnZlcl0pIHtcbiAgICAgICAgICB0b0ludml0ZS5wdXNoKG9ic2VydmVyKTtcbiAgICAgICAgICBfdGhpcy5faW52aXRhdGlvbnNbb2JzZXJ2ZXJdID0gb2JzZXJ2ZXI7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAodG9JbnZpdGUubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zb2xlLmxvZygnW1N5bmNoZXIuRGF0YU9iamVjdFJlcG9ydGVyXSBJbnZpdGVPYnNlcnZlcnMgJywgdG9JbnZpdGUsIF90aGlzLl9tZXRhZGF0YSk7XG5cbiAgICAgICAgdmFyIGludml0ZU1zZyA9IHtcbiAgICAgICAgICB0eXBlOiAnY3JlYXRlJywgZnJvbTogX3RoaXMuX3N5bmNoZXIuX293bmVyLCB0bzogX3RoaXMuX3N5bmNoZXIuX3N1YlVSTCxcbiAgICAgICAgICBib2R5OiB7IHJlc3VtZTogZmFsc2UsIHJlc291cmNlOiBfdGhpcy5fdXJsLCBzY2hlbWE6IF90aGlzLl9zY2hlbWEsIHZhbHVlOiBfdGhpcy5fbWV0YWRhdGEsIGF1dGhvcmlzZTogdG9JbnZpdGUgfVxuICAgICAgICB9O1xuXG4gICAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2UoaW52aXRlTXNnKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcclxuICAgICAqIFJlbGVhc2UgYW5kIGRlbGV0ZSBvYmplY3QgZGF0YVxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2RlbGV0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9kZWxldGUoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAvL0ZMT1ctT1VUOiB0aGlzIG1lc3NhZ2Ugd2lsbCBiZSBzZW50IHRvIHRoZSBydW50aW1lIGluc3RhbmNlIG9mIFN5bmNoZXJNYW5hZ2VyIC0+IF9vbkRlbGV0ZVxuICAgICAgdmFyIGRlbGV0ZU1zZyA9IHtcbiAgICAgICAgdHlwZTogJ2RlbGV0ZScsIGZyb206IF90aGlzLl9vd25lciwgdG86IF90aGlzLl9zeW5jaGVyLl9zdWJVUkwsXG4gICAgICAgIGJvZHk6IHsgcmVzb3VyY2U6IF90aGlzLl91cmwgfVxuICAgICAgfTtcblxuICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShkZWxldGVNc2csIGZ1bmN0aW9uIChyZXBseSkge1xuICAgICAgICBjb25zb2xlLmxvZygnRGF0YU9iamVjdFJlcG9ydGVyLURFTEVURTogJywgcmVwbHkpO1xuICAgICAgICBpZiAocmVwbHkuYm9keS5jb2RlID09PSAyMDApIHtcbiAgICAgICAgICBfdGhpcy5fcmVsZWFzZUxpc3RlbmVycygpO1xuICAgICAgICAgIGRlbGV0ZSBfdGhpcy5fc3luY2hlci5fcmVwb3J0ZXJzW190aGlzLl91cmxdO1xuXG4gICAgICAgICAgLy9fdGhpcy5fc3luY09iai51bm9ic2VydmUoKTtcbiAgICAgICAgICBfdGhpcy5fc3luY09iaiA9IHt9O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcclxuICAgICAqIFN1YnNjcmlwdGlvbnMgcmVxdWVzdGVkIGFuZCBhY2NlcHRlZCB0byB0aGlzIHJlcG9ydGVyXHJcbiAgICAgKiBAdHlwZSB7T2JqZWN0PEh5cGVydHlVUkwsIFN5bmNTdWJzY3JpcHRpb24+fVxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ29uU3Vic2NyaXB0aW9uJyxcblxuXG4gICAgLyoqXHJcbiAgICAgKiBTZXR1cCB0aGUgY2FsbGJhY2sgdG8gcHJvY2VzcyBzdWJzY3JpYmUgYW5kIHVuc3Vic2NyaWJlIG5vdGlmaWNhdGlvbnNcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2sgZnVuY3Rpb24gdG8gcmVjZWl2ZSBldmVudHNcclxuICAgICAqL1xuICAgIHZhbHVlOiBmdW5jdGlvbiBvblN1YnNjcmlwdGlvbihjYWxsYmFjaykge1xuICAgICAgdGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyID0gY2FsbGJhY2s7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBTZXR1cCB0aGUgY2FsbGJhY2sgdG8gcHJvY2VzcyByZXNwb25zZSBub3RpZmljYXRpb25zIG9mIHRoZSBjcmVhdGUnc1xyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbihldmVudDogTXNnRXZlbnQpfSBjYWxsYmFjayBmdW5jdGlvbiB0byByZWNlaXZlIGV2ZW50c1xyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ29uUmVzcG9uc2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvblJlc3BvbnNlKGNhbGxiYWNrKSB7XG4gICAgICB0aGlzLl9vblJlc3BvbnNlSGFuZGxlciA9IGNhbGxiYWNrO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgICogU2V0dXAgdGhlIGNhbGxiYWNrIHRvIHByb2Nlc3MgcmVhZCBub3RpZmljYXRpb25zXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9uKGV2ZW50OiBNc2dFdmVudCl9IGNhbGxiYWNrXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnb25SZWFkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25SZWFkKGNhbGxiYWNrKSB7XG4gICAgICB0aGlzLl9vblJlYWRIYW5kbGVyID0gY2FsbGJhY2s7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBTZXR1cCB0aGUgY2FsbGJhY2sgdG8gcHJvY2VzcyBleGVjdXRlIG5vdGlmaWNhdGlvbnNcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2tcclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdvbkV4ZWN1dGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbkV4ZWN1dGUoY2FsbGJhY2spIHtcbiAgICAgIHRoaXMuX29uRXhlY3V0ZUhhbmRsZXIgPSBjYWxsYmFjaztcbiAgICB9XG5cbiAgICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBwYXJlbnQgU3luY2hlciAtPiBfb25Gb3J3YXJkXG5cbiAgfSwge1xuICAgIGtleTogJ19vbkZvcndhcmQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfb25Gb3J3YXJkKG1zZykge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgY29uc29sZS5sb2coJ0RhdGFPYmplY3RSZXBvcnRlci1SQ1Y6ICcsIG1zZyk7XG4gICAgICBzd2l0Y2ggKG1zZy5ib2R5LnR5cGUpIHtcbiAgICAgICAgY2FzZSAnc3Vic2NyaWJlJzpcbiAgICAgICAgICBfdGhpcy5fb25TdWJzY3JpYmUobXNnKTticmVhaztcbiAgICAgICAgY2FzZSAndW5zdWJzY3JpYmUnOlxuICAgICAgICAgIF90aGlzLl9vblVuU3Vic2NyaWJlKG1zZyk7YnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy9GTE9XLUlOOiBtZXNzYWdlIHJlY2VpdmVkIGZyb20gdGhpcyAtPiBfb25Gb3J3YXJkOiBlbWl0dGVkIGJ5IGEgcmVtb3RlIFN5bmNoZXIgLT4gc3Vic2NyaWJlXG5cbiAgfSwge1xuICAgIGtleTogJ19vblN1YnNjcmliZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9vblN1YnNjcmliZShtc2cpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgdmFyIGh5cGVydHlVcmwgPSBtc2cuYm9keS5mcm9tO1xuICAgICAgdmFyIGRpdmlkZWRVUkwgPSAoMCwgX3V0aWxzLmRpdmlkZVVSTCkoaHlwZXJ0eVVybCk7XG4gICAgICB2YXIgZG9tYWluID0gZGl2aWRlZFVSTC5kb21haW47XG5cbiAgICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdFJlcG9ydGVyLl9vblN1YnNjcmliZV0nLCBtc2csIGRvbWFpbiwgZGl2aWRlZFVSTCk7XG5cbiAgICAgIHZhciBldmVudCA9IHtcbiAgICAgICAgdHlwZTogbXNnLmJvZHkudHlwZSxcbiAgICAgICAgdXJsOiBoeXBlcnR5VXJsLFxuXG4gICAgICAgIGRvbWFpbjogZG9tYWluLFxuXG4gICAgICAgIGlkZW50aXR5OiBtc2cuYm9keS5pZGVudGl0eSxcblxuICAgICAgICBhY2NlcHQ6IGZ1bmN0aW9uIGFjY2VwdCgpIHtcbiAgICAgICAgICAvL2NyZWF0ZSBuZXcgc3Vic2NyaXB0aW9uXG4gICAgICAgICAgdmFyIHN1YiA9IHsgdXJsOiBoeXBlcnR5VXJsLCBzdGF0dXM6ICdsaXZlJyB9O1xuICAgICAgICAgIF90aGlzLl9zdWJzY3JpcHRpb25zW2h5cGVydHlVcmxdID0gc3ViO1xuICAgICAgICAgIGlmIChfdGhpcy5tZXRhZGF0YS5zdWJzY3JpcHRpb25zKSB7XG4gICAgICAgICAgICBfdGhpcy5tZXRhZGF0YS5zdWJzY3JpcHRpb25zLnB1c2goc3ViLnVybCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIG1zZ1ZhbHVlID0gX3RoaXMuX21ldGFkYXRhO1xuICAgICAgICAgIG1zZ1ZhbHVlLmRhdGEgPSAoMCwgX3V0aWxzLmRlZXBDbG9uZSkoX3RoaXMuZGF0YSk7XG4gICAgICAgICAgbXNnVmFsdWUudmVyc2lvbiA9IF90aGlzLl92ZXJzaW9uO1xuXG4gICAgICAgICAgLy9wcm9jZXNzIGFuZCBzZW5kIGNoaWxkcmVucyBkYXRhXG4gICAgICAgICAgLy8gbGV0IGNoaWxkcmVuVmFsdWVzID0ge307XG4gICAgICAgICAgLy9cbiAgICAgICAgICAvLyBpZiAoX3RoaXMuX2NoaWxkcmVuT2JqZWN0cykge1xuICAgICAgICAgIC8vICAgT2JqZWN0LmtleXMoX3RoaXMuX2NoaWxkcmVuT2JqZWN0cykuZm9yRWFjaCgoY2hpbGRyZW5JZCkgPT4ge1xuICAgICAgICAgIC8vICAgICBsZXQgY2hpbGRyZW5EYXRhID0gX3RoaXMuX2NoaWxkcmVuT2JqZWN0c1tjaGlsZHJlbklkXTtcbiAgICAgICAgICAvLyAgICAgY2hpbGRyZW5WYWx1ZXNbY2hpbGRyZW5JZF0gPSBkZWVwQ2xvbmUoY2hpbGRyZW5EYXRhKTtcbiAgICAgICAgICAvLyAgIH0pO1xuICAgICAgICAgIC8vICAgbXNnVmFsdWUuY2hpbGRyZW5PYmplY3RzID0gY2hpbGRyZW5WYWx1ZXM7XG4gICAgICAgICAgLy8gfVxuXG4gICAgICAgICAgdmFyIHNlbmRNc2cgPSB7XG4gICAgICAgICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcbiAgICAgICAgICAgIGJvZHk6IHsgY29kZTogMjAwLCBzY2hlbWE6IF90aGlzLl9zY2hlbWEsIHZhbHVlOiBtc2dWYWx1ZSB9XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIC8vVE9ETzogRm9yIEZ1cnRoZXIgU3R1ZHlcbiAgICAgICAgICBpZiAobXNnLmJvZHkuaGFzT3duUHJvcGVydHkoJ211dHVhbEF1dGhlbnRpY2F0aW9uJykgJiYgIW1zZy5ib2R5Lm11dHVhbEF1dGhlbnRpY2F0aW9uKSB7XG4gICAgICAgICAgICBzZW5kTXNnLmJvZHkubXV0dWFsQXV0aGVudGljYXRpb24gPSBfdGhpczMuX211dHVhbEF1dGhlbnRpY2F0aW9uO1xuICAgICAgICAgICAgX3RoaXMzLl9tdXR1YWxBdXRoZW50aWNhdGlvbiA9IG1zZy5ib2R5Lm11dHVhbEF1dGhlbnRpY2F0aW9uO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vc2VuZCBvayByZXNwb25zZSBtZXNzYWdlXG4gICAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShzZW5kTXNnKTtcblxuICAgICAgICAgIHJldHVybiBzdWI7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3QocmVhc29uKSB7XG4gICAgICAgICAgLy9zZW5kIHJlamVjdCByZXNwb25zZSBtZXNzYWdlXG4gICAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcbiAgICAgICAgICAgIGJvZHk6IHsgY29kZTogNDAzLCBkZXNjOiByZWFzb24gfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBpZiAoX3RoaXMuX29uU3Vic2NyaXB0aW9uSGFuZGxlcikge1xuICAgICAgICBjb25zb2xlLmxvZygnU1VCU0NSSVBUSU9OLUVWRU5UOiAnLCBldmVudCk7XG4gICAgICAgIF90aGlzLl9vblN1YnNjcmlwdGlvbkhhbmRsZXIoZXZlbnQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vRkxPVy1JTjogbWVzc2FnZSByZWNlaXZlZCBmcm9tIHRoaXMgLT4gX29uRm9yd2FyZDogZW1pdHRlZCBieSBhIHJlbW90ZSBEYXRhT2JqZWN0T2JzZXJ2ZXIgLT4gdW5zdWJzY3JpYmVcblxuICB9LCB7XG4gICAga2V5OiAnX29uVW5TdWJzY3JpYmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfb25VblN1YnNjcmliZShtc2cpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICB2YXIgaHlwZXJ0eVVybCA9IG1zZy5ib2R5LmZyb207XG4gICAgICB2YXIgZGl2aWRlZFVSTCA9ICgwLCBfdXRpbHMuZGl2aWRlVVJMKShoeXBlcnR5VXJsKTtcbiAgICAgIHZhciBkb21haW4gPSBkaXZpZGVkVVJMLmRvbWFpbjtcblxuICAgICAgY29uc29sZS5sb2coJ1tEYXRhT2JqZWN0UmVwb3J0ZXIuX29uVW5TdWJzY3JpYmVdJywgbXNnLCBkb21haW4sIGRpdmlkZWRVUkwpO1xuXG4gICAgICAvL2xldCBzdWIgPSBfdGhpcy5fc3Vic2NyaXB0aW9uc1toeXBlcnR5VXJsXTtcbiAgICAgIGRlbGV0ZSBfdGhpcy5fc3Vic2NyaXB0aW9uc1toeXBlcnR5VXJsXTtcbiAgICAgIGRlbGV0ZSBfdGhpcy5faW52aXRhdGlvbnNbaHlwZXJ0eVVybF07XG5cbiAgICAgIHZhciBldmVudCA9IHtcbiAgICAgICAgdHlwZTogbXNnLmJvZHkudHlwZSxcbiAgICAgICAgdXJsOiBoeXBlcnR5VXJsLFxuICAgICAgICBkb21haW46IGRvbWFpbixcbiAgICAgICAgaWRlbnRpdHk6IG1zZy5ib2R5LmlkZW50aXR5XG4gICAgICB9O1xuXG4gICAgICAvLyBUT0RPOiBjaGVjayBpZiB0aGUgX29uU3Vic2NyaXB0aW9uSGFuZGxlciBpdCBpcyB0aGUgc2FtZSBvZiB0aGUgc3Vic2NyaXB0aW9ucz8/P1xuICAgICAgaWYgKF90aGlzLl9vblN1YnNjcmlwdGlvbkhhbmRsZXIpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1VOLVNVQlNDUklQVElPTi1FVkVOVDogJywgZXZlbnQpO1xuICAgICAgICBfdGhpcy5fb25TdWJzY3JpcHRpb25IYW5kbGVyKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBSZXBvcnRlclVSTCBhZGRyZXNzOiBlbWl0ZWQgYnkgYSByZW1vdGUgU3luY2hlciAtPiBfb25SZW1vdGVDcmVhdGUgLT4gZXZlbnQuYWNrXG5cbiAgfSwge1xuICAgIGtleTogJ19vblJlc3BvbnNlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX29uUmVzcG9uc2UobXNnKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgZXZlbnQgPSB7XG4gICAgICAgIHR5cGU6IG1zZy50eXBlLFxuICAgICAgICB1cmw6IG1zZy5mcm9tLFxuICAgICAgICBjb2RlOiBtc2cuYm9keS5jb2RlXG4gICAgICB9O1xuXG4gICAgICBpZiAoX3RoaXMuX29uUmVzcG9uc2VIYW5kbGVyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdSRVNQT05TRS1FVkVOVDogJywgZXZlbnQpO1xuICAgICAgICBfdGhpcy5fb25SZXNwb25zZUhhbmRsZXIoZXZlbnQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vRkxPVy1JTjogbWVzc2FnZSByZWNlaXZlZCBmcm9tIFJlcG9ydGVyVVJMIGFkZHJlc3M6IGVtaXRlZCBieSBhIHJlbW90ZSBTeW5jaGVyIC0+IHJlYWRcblxuICB9LCB7XG4gICAga2V5OiAnX29uUmVhZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9vblJlYWQobXNnKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgdmFyIG9iamVjdFZhbHVlID0gKDAsIF91dGlscy5kZWVwQ2xvbmUpKF90aGlzLm1ldGFkYXRhKTtcbiAgICAgIG9iamVjdFZhbHVlLmRhdGEgPSAoMCwgX3V0aWxzLmRlZXBDbG9uZSkoX3RoaXMuZGF0YSk7XG4gICAgICBvYmplY3RWYWx1ZS52ZXJzaW9uID0gX3RoaXMuX3ZlcnNpb247XG5cbiAgICAgIHZhciByZXNwb25zZSA9IHtcbiAgICAgICAgaWQ6IG1zZy5pZCwgdHlwZTogJ3Jlc3BvbnNlJywgZnJvbTogbXNnLnRvLCB0bzogbXNnLmZyb20sXG4gICAgICAgIGJvZHk6IHsgY29kZTogMjAwLCB2YWx1ZTogb2JqZWN0VmFsdWUgfVxuICAgICAgfTtcblxuICAgICAgdmFyIGV2ZW50ID0ge1xuICAgICAgICB0eXBlOiBtc2cudHlwZSxcbiAgICAgICAgdXJsOiBtc2cuZnJvbSxcblxuICAgICAgICBhY2NlcHQ6IGZ1bmN0aW9uIGFjY2VwdCgpIHtcbiAgICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHJlc3BvbnNlKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZWplY3Q6IGZ1bmN0aW9uIHJlamVjdChyZWFzb24pIHtcbiAgICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgIGlkOiBtc2cuaWQsIHR5cGU6ICdyZXNwb25zZScsIGZyb206IG1zZy50bywgdG86IG1zZy5mcm9tLFxuICAgICAgICAgICAgYm9keTogeyBjb2RlOiA0MDEsIGRlc2M6IHJlYXNvbiB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIC8vIGlmIHRoZSByZXF1ZXN0ZXIgaXMgYW4gYXV0aG9yaXNlZCBvYnNlcnZlciwgdGhlIGRhdGEgb2JqZWN0IGlzIHJlc3BvbmRlZCBvdGhlcndpc2UgYW4gZXZlbnQgaXMgdHJpZ2dlcmVkXG4gICAgICB2YXIgc3Vic2NyaXB0aW9ucyA9IFtdO1xuXG4gICAgICBpZiAoX3RoaXMubWV0YWRhdGEuc3Vic2NyaXB0aW9ucykge1xuICAgICAgICBzdWJzY3JpcHRpb25zID0gX3RoaXMubWV0YWRhdGEuc3Vic2NyaXB0aW9ucztcbiAgICAgIH0gZWxzZSBpZiAoX3RoaXMuX3N1YnNjcmlwdGlvbnMpIHtcbiAgICAgICAgc3Vic2NyaXB0aW9ucyA9ICgwLCBfa2V5czIuZGVmYXVsdCkoX3RoaXMuX3N1YnNjcmlwdGlvbnMpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLl9zdWJzY3JpcHRpb25zW2tleV0udXJsO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN1YnNjcmlwdGlvbnMuaW5kZXhPZihtc2cuZnJvbSkgIT0gLTEpIHtcbiAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyZXNwb25zZSk7XG4gICAgICB9IGVsc2UgaWYgKF90aGlzLl9vblJlYWRIYW5kbGVyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdSRUFELUVWRU5UOiAnLCBldmVudCk7XG4gICAgICAgIF90aGlzLl9vblJlYWRIYW5kbGVyKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBFeGVjdXRlIHJlcXVlc3QgcmVjZWl2ZWRcblxuICB9LCB7XG4gICAga2V5OiAnX29uRXhlY3V0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9vbkV4ZWN1dGUobXNnKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBpZiAoIW1zZy5ib2R5Lm1ldGhvZCkgdGhyb3cgJ1tEYXRhT2JqZWN0UmVwb3J0ZXIuX29uRXhlY3V0ZV0gbWV0aG9kIG1pc3NpbmcgJywgbXNnO1xuXG4gICAgICB2YXIgcmVzcG9uc2UgPSB7XG4gICAgICAgIGlkOiBtc2cuaWQsIHR5cGU6ICdyZXNwb25zZScsIGZyb206IG1zZy50bywgdG86IG1zZy5mcm9tLFxuICAgICAgICBib2R5OiB7IGNvZGU6IDIwMCB9XG4gICAgICB9O1xuXG4gICAgICB2YXIgZXZlbnQgPSB7XG4gICAgICAgIHR5cGU6IG1zZy50eXBlLFxuICAgICAgICB1cmw6IG1zZy5mcm9tLFxuICAgICAgICBtZXRob2Q6IG1zZy5ib2R5Lm1ldGhvZCxcbiAgICAgICAgcGFyYW1zOiBtc2cuYm9keS5wYXJhbXMsXG5cbiAgICAgICAgYWNjZXB0OiBmdW5jdGlvbiBhY2NlcHQoKSB7XG4gICAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyZXNwb25zZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3QocmVhc29uKSB7XG4gICAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcbiAgICAgICAgICAgIGJvZHk6IHsgY29kZTogNDAxLCBkZXNjOiByZWFzb24gfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBpZiAoX3RoaXMuX29uRXhlY3V0ZUhhbmRsZXIpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1tEYXRhT2JqZWN0UmVwb3J0ZXJdIEVYRUNVVEUtRVZFTlQ6ICcsIGV2ZW50KTtcbiAgICAgICAgX3RoaXMuX29uRXhlY3V0ZUhhbmRsZXIoZXZlbnQpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3N1YnNjcmlwdGlvbnMnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3N1YnNjcmlwdGlvbnM7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBEYXRhT2JqZWN0UmVwb3J0ZXI7XG59KF9EYXRhT2JqZWN0My5kZWZhdWx0IC8qIGltcGxlbWVudHMgU3luY1N0YXR1cyAqLyk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IERhdGFPYmplY3RSZXBvcnRlcjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG4vKioqLyB9KSxcbi8qIDEyMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3Byb21pc2UgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcyKTtcblxudmFyIF9wcm9taXNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb21pc2UpO1xuXG52YXIgX2tleXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDU5KTtcblxudmFyIF9rZXlzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2tleXMpO1xuXG52YXIgX2Fzc2lnbiA9IF9fd2VicGFja19yZXF1aXJlX18oMTE4KTtcblxudmFyIF9hc3NpZ24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXNzaWduKTtcblxudmFyIF9jbGFzc0NhbGxDaGVjazIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuXG52YXIgX2NsYXNzQ2FsbENoZWNrMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7XG5cbnZhciBfY3JlYXRlQ2xhc3MyID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCk7XG5cbnZhciBfY3JlYXRlQ2xhc3MzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTtcblxudmFyIF9Qcm94eU9iamVjdCA9IF9fd2VicGFja19yZXF1aXJlX18oMTI0KTtcblxudmFyIF9Qcm94eU9iamVjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9Qcm94eU9iamVjdCk7XG5cbnZhciBfRGF0YU9iamVjdENoaWxkID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNDkpO1xuXG52YXIgX0RhdGFPYmplY3RDaGlsZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9EYXRhT2JqZWN0Q2hpbGQpO1xuXG52YXIgX3V0aWxzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3MSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxyXG4gKiBNYWluIGV4dGVuc2lvbiBjbGFzcyBmb3Igb2JzZXJ2ZXJzIGFuZCByZXBvcnRlcnMsIHdpdGggY29tbW9uIHByb3BlcnRpZXMgYW5kIG1ldGhvZHMuXHJcbiAqIENoaWxkcmVuIG1hbmFnZW1lbnQgaXMgY29tbW9uIGZvciBvYnNlcnZlcnMgYW5kIHJlcG9ydGVycy5cclxuICovXG52YXIgRGF0YU9iamVjdCA9IGZ1bmN0aW9uICgpIHtcbiAgLyogcHJpdmF0ZVxyXG4gIF92ZXJzaW9uOiBudW1iZXJcclxuICAgIF9vd25lcjogSHlwZXJ0eVVSTFxyXG4gIF91cmw6IE9iamVjdFVSTFxyXG4gIF9zY2hlbWE6IFNjaGVtYVxyXG4gIF9idXM6IE1pbmlCdXNcclxuICBfc3RhdHVzOiBvbiB8IHBhdXNlZFxyXG4gIF9zeW5jT2JqOiBTeW5jRGF0YVxyXG4gICAgX2NoaWxkcmVuOiB7IGlkOiBEYXRhT2JqZWN0Q2hpbGQgfVxyXG4gIF9jaGlsZHJlbkxpc3RlbmVyczogW01zZ0xpc3RlbmVyXVxyXG4gICAgLS0tLWV2ZW50IGhhbmRsZXJzLS0tLVxyXG4gIF9vbkFkZENoaWxkSGFuZGxlcjogKGV2ZW50KSA9PiB2b2lkXHJcbiAgKi9cblxuICAvKipcclxuICAgKiBAaWdub3JlXHJcbiAgICogU2hvdWxkIG5vdCBiZSB1c2VkIGRpcmVjdGx5IGJ5IEh5cGVydGllcy4gSXQncyBjYWxsZWQgYnkgdGhlIFN5bmNoZXIgY3JlYXRlIG9yIHN1YnNjcmliZSBtZXRob2Qnc1xyXG4gICAqL1xuICAvL2NvbnN0cnVjdG9yKHN5bmNoZXIsIHVybCwgY3JlYXRlZCwgcmVwb3J0ZXIsIHJ1bnRpbWUsIHNjaGVtYSwgbmFtZSwgaW5pdGlhbFN0YXR1cywgaW5pdGlhbERhdGEsIGNoaWxkcmVucywgbXV0dWFsID0gdHJ1ZSwgcmVzdW1lZCA9IGZhbHNlLCBkZXNjcmlwdGlvbiwgdGFncywgcmVzb3VyY2VzLCBvYnNlcnZlclN0b3JhZ2UsIHB1YmxpY09ic2VydmF0aW9uKSB7XG4gIGZ1bmN0aW9uIERhdGFPYmplY3QoaW5wdXQpIHtcbiAgICAoMCwgX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLCBEYXRhT2JqZWN0KTtcblxuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBmdW5jdGlvbiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IocGFyKSB7XG4gICAgICB0aHJvdyAnW0RhdGFPYmplY3RdICcgKyBwYXIgKyAnIG1hbmRhdG9yeSBwYXJhbWV0ZXIgaXMgbWlzc2luZyc7XG4gICAgfVxuXG4gICAgaW5wdXQuc3luY2hlciA/IF90aGlzLl9zeW5jaGVyID0gaW5wdXQuc3luY2hlciA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcignc3luY2hlcicpO1xuICAgIGlucHV0LnVybCA/IF90aGlzLl91cmwgPSBpbnB1dC51cmwgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3VybCcpO1xuICAgIGlucHV0LmNyZWF0ZWQgPyBfdGhpcy5fY3JlYXRlZCA9IGlucHV0LmNyZWF0ZWQgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ2NyZWF0ZWQnKTtcbiAgICBpbnB1dC5yZXBvcnRlciA/IF90aGlzLl9yZXBvcnRlciA9IGlucHV0LnJlcG9ydGVyIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCdyZXBvcnRlcicpO1xuICAgIGlucHV0LnJ1bnRpbWUgPyBfdGhpcy5fcnVudGltZSA9IGlucHV0LnJ1bnRpbWUgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3J1bnRpbWUnKTtcbiAgICBpbnB1dC5zY2hlbWEgPyBfdGhpcy5fc2NoZW1hID0gaW5wdXQuc2NoZW1hIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCdzY2hlbWEnKTtcbiAgICBpbnB1dC5uYW1lID8gX3RoaXMuX25hbWUgPSBpbnB1dC5uYW1lIDogdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKCduYW1lJyk7XG5cbiAgICBfdGhpcy5fc3RhdHVzID0gaW5wdXQuc3RhdHVzO1xuXG4gICAgaWYgKGlucHV0LmRhdGEpIHtcbiAgICAgIF90aGlzLl9zeW5jT2JqID0gbmV3IF9Qcm94eU9iamVjdDIuZGVmYXVsdChpbnB1dC5kYXRhKTtcbiAgICB9IGVsc2Uge1xuICAgICAgX3RoaXMuX3N5bmNPYmogPSBuZXcgX1Byb3h5T2JqZWN0Mi5kZWZhdWx0KHt9KTtcbiAgICB9XG4gICAgX3RoaXMuX2NoaWxkcmVucyA9IGlucHV0LmNoaWxkcmVucztcblxuICAgIC8vVE9ETzogRm9yIEZ1cnRoZXIgU3R1ZHlcbiAgICBfdGhpcy5fbXV0dWFsQXV0aGVudGljYXRpb24gPSBpbnB1dC5tdXR1YWw7XG5cbiAgICBfdGhpcy5fdmVyc2lvbiA9IDA7XG4gICAgX3RoaXMuX2NoaWxkSWQgPSAwO1xuICAgIF90aGlzLl9jaGlsZHJlbkxpc3RlbmVycyA9IFtdO1xuXG4gICAgX3RoaXMuX3Jlc3VtZWQgPSBpbnB1dC5yZXN1bWU7XG5cbiAgICBpZiAoaW5wdXQucmVzdW1lKSB7XG4gICAgICBfdGhpcy5fdmVyc2lvbiA9IGlucHV0LnZlcnNpb247XG4gICAgfVxuXG4gICAgX3RoaXMuX293bmVyID0gaW5wdXQuc3luY2hlci5fb3duZXI7XG4gICAgX3RoaXMuX2J1cyA9IGlucHV0LnN5bmNoZXIuX2J1cztcblxuICAgIGlmIChpbnB1dC5kZXNjcmlwdGlvbikgX3RoaXMuX2Rlc2NyaXB0aW9uID0gaW5wdXQuZGVzY3JpcHRpb247XG4gICAgaWYgKGlucHV0LnRhZ3MpIF90aGlzLl90YWdzID0gaW5wdXQudGFncztcbiAgICBpZiAoaW5wdXQucmVzb3VyY2VzKSBfdGhpcy5fcmVzb3VyY2VzID0gaW5wdXQucmVzb3VyY2VzO1xuICAgIGlmIChpbnB1dC5vYnNlcnZlclN0b3JhZ2UpIF90aGlzLl9vYnNlcnZlclN0b3JhZ2UgPSBpbnB1dC5vYnNlcnZlclN0b3JhZ2U7XG4gICAgaWYgKGlucHV0LnB1YmxpY09ic2VydmF0aW9uKSBfdGhpcy5fcHVibGljT2JzZXJ2YXRpb24gPSBpbnB1dC5wdWJsaWNPYnNlcnZhdGlvbjtcblxuICAgIF90aGlzLl9tZXRhZGF0YSA9ICgwLCBfYXNzaWduMi5kZWZhdWx0KShpbnB1dCk7XG4gICAgX3RoaXMuX21ldGFkYXRhLmxhc3RNb2RpZmllZCA9IF90aGlzLl9tZXRhZGF0YS5jcmVhdGVkO1xuXG4gICAgZGVsZXRlIF90aGlzLl9tZXRhZGF0YS5kYXRhO1xuICAgIGRlbGV0ZSBfdGhpcy5fbWV0YWRhdGEuc3luY2hlcjtcbiAgICBkZWxldGUgX3RoaXMuX21ldGFkYXRhLmF1dGhvcmlzZTtcbiAgfVxuXG4gICgwLCBfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKERhdGFPYmplY3QsIFt7XG4gICAga2V5OiAnX2dldExhc3RDaGlsZElkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2dldExhc3RDaGlsZElkKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIGNoaWxkSWRJbnQgPSAwO1xuICAgICAgdmFyIGNoaWxkSWRTdHJpbmcgPSBfdGhpcy5fb3duZXIgKyAnIycgKyBjaGlsZElkSW50O1xuXG4gICAgICAoMCwgX2tleXMyLmRlZmF1bHQpKF90aGlzLl9jaGlsZHJlbnMpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmIChfdGhpcy5fY2hpbGRyZW5zW2tleV0uY2hpbGRJZCA+IGNoaWxkSWRTdHJpbmcpIHtcbiAgICAgICAgICBjaGlsZElkU3RyaW5nID0gX3RoaXMuX2NoaWxkcmVuc1trZXldLmNoaWxkSWQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gY2hpbGRJZEludCA9IE51bWJlcihjaGlsZElkU3RyaW5nLnNwbGl0KCcjJylbMV0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19hbGxvY2F0ZUxpc3RlbmVycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9hbGxvY2F0ZUxpc3RlbmVycygpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgY2hpbGRCYXNlVVJMID0gX3RoaXMuX3VybCArICcvY2hpbGRyZW4vJztcbiAgICAgIGNvbnNvbGUubG9nKCdbRGF0YSBPYmplY3QgLSBBbGxvY2F0ZUxpc3RlbmVyc10gLSAnLCBfdGhpcy5fY2hpbGRyZW5zKTtcbiAgICAgIGlmIChfdGhpcy5fY2hpbGRyZW5zKSB7XG4gICAgICAgIF90aGlzLl9jaGlsZHJlbnMuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgICB2YXIgY2hpbGRVUkwgPSBjaGlsZEJhc2VVUkwgKyBjaGlsZDtcbiAgICAgICAgICB2YXIgbGlzdGVuZXIgPSBfdGhpcy5fYnVzLmFkZExpc3RlbmVyKGNoaWxkVVJMLCBmdW5jdGlvbiAobXNnKSB7XG4gICAgICAgICAgICAvL2lnbm9yZSBtc2cgc2VudCBieSBoaW1zZWxmXG4gICAgICAgICAgICBpZiAobXNnLmZyb20gIT09IF90aGlzMi5fb3duZXIpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGFPYmplY3QtQ2hpbGRyZW4tUkNWOiAnLCBtc2cpO1xuICAgICAgICAgICAgICBzd2l0Y2ggKG1zZy50eXBlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnY3JlYXRlJzpcbiAgICAgICAgICAgICAgICAgIF90aGlzLl9vbkNoaWxkQ3JlYXRlKG1zZyk7YnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnZGVsZXRlJzpcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG1zZyk7YnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgIF90aGlzLl9jaGFuZ2VDaGlsZHJlbihtc2cpO2JyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19yZWxlYXNlTGlzdGVuZXJzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3JlbGVhc2VMaXN0ZW5lcnMoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgICAgbGlzdGVuZXIucmVtb3ZlKCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKF90aGlzLl9jaGlsZHJlbk9iamVjdHMpIHtcbiAgICAgICAgKDAsIF9rZXlzMi5kZWZhdWx0KShfdGhpcy5fY2hpbGRyZW5PYmplY3RzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICBfdGhpcy5fY2hpbGRyZW5PYmplY3RzW2tleV0uX3JlbGVhc2VMaXN0ZW5lcnMoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3Jlc3VtZUNoaWxkcmVucycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc3VtZUNoaWxkcmVucyhjaGlsZHJlbnMpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgY2hpbGRJZFN0cmluZyA9IHRoaXMuX293bmVyICsgJyMnICsgdGhpcy5fY2hpbGRJZDtcblxuICAgICAgaWYgKGNoaWxkcmVucyAmJiAhX3RoaXMuX2NoaWxkcmVuT2JqZWN0cykge1xuICAgICAgICBfdGhpcy5fY2hpbGRyZW5PYmplY3RzID0ge307XG4gICAgICB9XG5cbiAgICAgIC8vc2V0dXAgY2hpbGRyZW5zIGRhdGEgZnJvbSBzdWJzY3JpcHRpb25cbiAgICAgICgwLCBfa2V5czIuZGVmYXVsdCkoY2hpbGRyZW5zKS5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZHJlblJlc291cmNlKSB7XG4gICAgICAgIHZhciBjaGlsZHJlbiA9IGNoaWxkcmVuc1tjaGlsZHJlblJlc291cmNlXTtcblxuICAgICAgICAoMCwgX2tleXMyLmRlZmF1bHQpKGNoaWxkcmVuKS5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZElkKSB7XG4gICAgICAgICAgdmFyIGNoaWxkSW5wdXQgPSBjaGlsZHJlbltjaGlsZElkXS52YWx1ZTtcbiAgICAgICAgICBjb25zb2xlLmxvZygnW0RhdGFPYmplY3QucmVzdW1lQ2hpbGRyZW5zXSBuZXcgRGF0YU9iamVjdENoaWxkOiAnLCBjaGlsZHJlblJlc291cmNlLCBjaGlsZHJlbiwgY2hpbGRJbnB1dCk7XG4gICAgICAgICAgY2hpbGRJbnB1dC5wYXJlbnRPYmplY3QgPSBfdGhpcztcbiAgICAgICAgICBjaGlsZElucHV0LnBhcmVudCA9IF90aGlzLl91cmw7XG4gICAgICAgICAgX3RoaXMuX2NoaWxkcmVuT2JqZWN0c1tjaGlsZElkXSA9IG5ldyBfRGF0YU9iamVjdENoaWxkMi5kZWZhdWx0KGNoaWxkSW5wdXQpO1xuICAgICAgICAgIF90aGlzLl9jaGlsZHJlbk9iamVjdHNbY2hpbGRJZF0uaWRlbnRpdHkgPSBjaGlsZHJlbltjaGlsZElkXS5pZGVudGl0eTtcblxuICAgICAgICAgIGlmIChjaGlsZElkID4gY2hpbGRJZFN0cmluZykge1xuICAgICAgICAgICAgY2hpbGRJZFN0cmluZyA9IGNoaWxkSWQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc29sZS5sb2coJ1tEYXRhT2JqZWN0UmVwb3J0ZXIucmVzdW1lQ2hpbGRyZW5zXSAtIHJlc3VtZWQ6ICcsIF90aGlzMy5fY2hpbGRyZW5PYmplY3RzW2NoaWxkSWRdKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5fY2hpbGRJZCA9IE51bWJlcihjaGlsZElkU3RyaW5nLnNwbGl0KCcjJylbMV0pO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgICogQWxsIE1ldGFkYXRhIGFib3V0IHRoZSBEYXRhIE9iamVjdFxyXG4gICAgICogQHR5cGUge09iamVjdH0gLVxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3BhdXNlJyxcblxuXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cbiAgICB2YWx1ZTogZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgICAvL1RPRE86IHRoaXMgZmVhdHVyZSBuZWVkcyBtb3JlIGFuYWxpc2VcbiAgICAgIHRocm93ICdOb3QgaW1wbGVtZW50ZWQnO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3Jlc3VtZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc3VtZSgpIHtcbiAgICAgIC8vVE9ETzogdGhpcyBmZWF0dXJlIG5lZWRzIG1vcmUgYW5hbGlzZVxuICAgICAgdGhyb3cgJ05vdCBpbXBsZW1lbnRlZCc7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc3RvcCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgICAvL1RPRE86IHNob3VsZCByZW1vdmUgdGhlIHN1YnNjcmlwdGlvbiBhbmQgc2VuZCBtZXNzYWdlIHVuc3Vic2NyaWJlP1xuICAgICAgdGhyb3cgJ05vdCBpbXBsZW1lbnRlZCc7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYW5kIGFkZCBhIERhdGFPYmplY3RDaGlsZCB0byBhIGNoaWxkcmVuIGNvbGxlY3Rpb24uXHJcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gY2hpbGRyZW4gLSBDaGlsZHJlbiBuYW1lIHdoZXJlIHRoZSBjaGlsZCBpcyBhZGRlZC5cclxuICAgICAqIEBwYXJhbSB7SlNPTn0gaW5pdGlhbERhdGEgLSBJbml0aWFsIGRhdGEgb2YgdGhlIGNoaWxkXHJcbiAgICAgKiBAcGFyYW0gIHtNZXNzYWdlQm9keUlkZW50aXR5fSBpZGVudGl0eSAtIChvcHRpb25hbCkgaWRlbnRpdHkgZGF0YSB0byBiZSBhZGRlZCB0byBpZGVudGl0eSB0aGUgdXNlciByZXBvcnRlci4gVG8gYmUgdXNlZCBmb3IgbGVnYWN5IGlkZW50aXRpZXMuXHJcbiAgICAgKiBAcGFyYW0gIHtTeW5jQ2hpbGRNZXRhZGF0YX0gaW5wdXQgLSAob3B0aW9uYWwpIEFsbCBhZGRpdGlvbmFsIG1ldGFkYXRhIGFib3V0IHRoZSBEYXRhT2JqZWN0Q2hpbGQuXHJcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlPERhdGFPYmplY3RDaGlsZD59IC0gUmV0dXJuIFByb21pc2UgdG8gYSBuZXcgRGF0YU9iamVjdENoaWxkLlxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2FkZENoaWxkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkQ2hpbGQoY2hpbGRyZW4sIGluaXRpYWxEYXRhLCBpZGVudGl0eSwgaW5wdXQpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIC8vcmV0dXJucyBwcm9taXNlLCBpbiB0aGUgZnV0dXJlLCB0aGUgQVBJIG1heSBjaGFuZ2UgdG8gYXN5bmNocm9ub3VzIGNhbGxcbiAgICAgIHJldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24gKHJlc29sdmUpIHtcblxuICAgICAgICB2YXIgY2hpbGRJbnB1dCA9ICgwLCBfYXNzaWduMi5kZWZhdWx0KSh7fSwgaW5wdXQpO1xuXG4gICAgICAgIC8vY3JlYXRlIG5ldyBjaGlsZCB1bmlxdWUgSUQsIGJhc2VkIG9uIGh5cGVydHlVUkxcbiAgICAgICAgX3RoaXMuX2NoaWxkSWQrKztcbiAgICAgICAgY2hpbGRJbnB1dC51cmwgPSBfdGhpcy5fb3duZXIgKyAnIycgKyBfdGhpcy5fY2hpbGRJZDtcbiAgICAgICAgdmFyIG1zZ0NoaWxkUGF0aCA9IF90aGlzLl91cmwgKyAnL2NoaWxkcmVuLycgKyBjaGlsZHJlbjtcblxuICAgICAgICBjaGlsZElucHV0LnBhcmVudE9iamVjdCA9IF90aGlzO1xuICAgICAgICBjaGlsZElucHV0LmRhdGEgPSBpbml0aWFsRGF0YTtcbiAgICAgICAgY2hpbGRJbnB1dC5yZXBvcnRlciA9IF90aGlzLl9vd25lcjtcbiAgICAgICAgY2hpbGRJbnB1dC5jcmVhdGVkID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICAgICAgICBjaGlsZElucHV0LnJ1bnRpbWUgPSBfdGhpcy5fcnVudGltZTtcbiAgICAgICAgY2hpbGRJbnB1dC5zY2hlbWEgPSBfdGhpcy5fc2NoZW1hO1xuICAgICAgICBjaGlsZElucHV0LnBhcmVudCA9IF90aGlzLnVybDtcblxuICAgICAgICB2YXIgbmV3Q2hpbGQgPSBuZXcgX0RhdGFPYmplY3RDaGlsZDIuZGVmYXVsdChjaGlsZElucHV0KTtcblxuICAgICAgICB2YXIgYm9keVZhbHVlID0gbmV3Q2hpbGQubWV0YWRhdGE7XG4gICAgICAgIGJvZHlWYWx1ZS5kYXRhID0gaW5pdGlhbERhdGE7XG5cbiAgICAgICAgLy9GTE9XLU9VVDogdGhpcyBtZXNzYWdlIHdpbGwgYmUgc2VudCBkaXJlY3RseSB0byBhIHJlc291cmNlIGNoaWxkIGFkZHJlc3M6IE1lc3NhZ2VCdXNcbiAgICAgICAgdmFyIHJlcXVlc3RNc2cgPSB7XG4gICAgICAgICAgdHlwZTogJ2NyZWF0ZScsIGZyb206IF90aGlzLl9vd25lciwgdG86IG1zZ0NoaWxkUGF0aCxcbiAgICAgICAgICBib2R5OiB7IHJlc291cmNlOiBjaGlsZElucHV0LnVybCwgdmFsdWU6IGJvZHlWYWx1ZSB9XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKGlkZW50aXR5KSB7XG4gICAgICAgICAgbmV3Q2hpbGQuaWRlbnRpdHkgPSBpZGVudGl0eTtcbiAgICAgICAgICByZXF1ZXN0TXNnLmJvZHkuaWRlbnRpdHkgPSBpZGVudGl0eTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vVE9ETzogRm9yIEZ1cnRoZXIgU3R1ZHlcbiAgICAgICAgaWYgKCFfdGhpcy5fbXV0dWFsQXV0aGVudGljYXRpb24pIHJlcXVlc3RNc2cuYm9keS5tdXR1YWxBdXRoZW50aWNhdGlvbiA9IF90aGlzLl9tdXR1YWxBdXRoZW50aWNhdGlvbjtcblxuICAgICAgICB2YXIgbXNnSWQgPSBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHJlcXVlc3RNc2cpO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdC5hZGRDaGlsZF0gYWRkZWQgJywgbmV3Q2hpbGQsIG1zZ0lkLCBib2R5VmFsdWUpO1xuXG4gICAgICAgIG5ld0NoaWxkLm9uQ2hhbmdlKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIF90aGlzLl9vbkNoYW5nZShldmVudCwgeyBwYXRoOiBtc2dDaGlsZFBhdGgsIGNoaWxkSWQ6IGNoaWxkSW5wdXQudXJsIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIV90aGlzLl9jaGlsZHJlbk9iamVjdHMpIHtcbiAgICAgICAgICBfdGhpcy5fY2hpbGRyZW5PYmplY3RzID0ge307XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpcy5fY2hpbGRyZW5PYmplY3RzW2NoaWxkSW5wdXQudXJsXSA9IG5ld0NoaWxkO1xuXG4gICAgICAgIHJlc29sdmUobmV3Q2hpbGQpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBTZXR1cCB0aGUgY2FsbGJhY2sgdG8gcHJvY2VzcyBjcmVhdGUgYW5kIGRlbGV0ZSBvZiBjaGlsZHJlbnMuXHJcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9uKGV2ZW50OiBNc2dFdmVudCl9IGNhbGxiYWNrXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnb25BZGRDaGlsZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uQWRkQ2hpbGQoY2FsbGJhY2spIHtcbiAgICAgIHRoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyID0gY2FsbGJhY2s7XG4gICAgfVxuXG4gICAgLy9GTE9XLUlOOiBtZXNzYWdlIHJlY2VpdmVkIGZyb20gYSByZW1vdGUgRGF0YU9iamVjdCAtPiBhZGRDaGlsZFxuXG4gIH0sIHtcbiAgICBrZXk6ICdfb25DaGlsZENyZWF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9vbkNoaWxkQ3JlYXRlKG1zZykge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgIHZhciBjaGlsZElucHV0ID0gKDAsIF91dGlscy5kZWVwQ2xvbmUpKG1zZy5ib2R5LnZhbHVlKTtcbiAgICAgIGNoaWxkSW5wdXQucGFyZW50T2JqZWN0ID0gX3RoaXM7XG5cbiAgICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdC5fb25DaGlsZENyZWF0ZV0gcmVjZWl2ZWRCeSAnICsgX3RoaXMuX293bmVyICsgJyA6ICcsIG1zZyk7XG4gICAgICB2YXIgbmV3Q2hpbGQgPSBuZXcgX0RhdGFPYmplY3RDaGlsZDIuZGVmYXVsdChjaGlsZElucHV0KTtcbiAgICAgIG5ld0NoaWxkLmlkZW50aXR5ID0gbXNnLmJvZHkuaWRlbnRpdHk7XG5cbiAgICAgIGlmICghX3RoaXMuX2NoaWxkcmVuT2JqZWN0cykge1xuICAgICAgICBfdGhpcy5fY2hpbGRyZW5PYmplY3RzID0ge307XG4gICAgICB9XG5cbiAgICAgIF90aGlzLl9jaGlsZHJlbk9iamVjdHNbY2hpbGRJbnB1dC51cmxdID0gbmV3Q2hpbGQ7XG5cbiAgICAgIC8vdG9kbzogcmVtb3ZlIHJlc3BvbnNlIGJlbG93XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy9GTE9XLU9VVDogd2lsbCBmbG93IHRvIERhdGFPYmplY3RDaGlsZCAtPiBfb25SZXNwb25zZVxuICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcbiAgICAgICAgICBib2R5OiB7IGNvZGU6IDIwMCwgc291cmNlOiBfdGhpcy5fb3duZXIgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgZXZlbnQgPSB7XG4gICAgICAgIHR5cGU6IG1zZy50eXBlLFxuICAgICAgICBmcm9tOiBtc2cuZnJvbSxcbiAgICAgICAgdXJsOiBtc2cudG8sXG4gICAgICAgIHZhbHVlOiBtc2cuYm9keS52YWx1ZS5kYXRhLFxuICAgICAgICBjaGlsZElkOiBjaGlsZElucHV0LnVybCxcbiAgICAgICAgaWRlbnRpdHk6IG1zZy5ib2R5LmlkZW50aXR5XG4gICAgICB9O1xuXG4gICAgICBpZiAoX3RoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBREQtQ0hJTERSRU4tRVZFTlQ6ICcsIGV2ZW50KTtcbiAgICAgICAgX3RoaXMuX29uQWRkQ2hpbGRyZW5IYW5kbGVyKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvL3NlbmQgZGVsdGEgbWVzc2FnZXMgdG8gc3Vic2NyaXB0aW9uc1xuXG4gIH0sIHtcbiAgICBrZXk6ICdfb25DaGFuZ2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfb25DaGFuZ2UoZXZlbnQsIGNoaWxkSW5mbykge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgX3RoaXMuX21ldGFkYXRhLmxhc3RNb2RpZmllZCA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcblxuICAgICAgX3RoaXMuX3ZlcnNpb24rKztcblxuICAgICAgaWYgKF90aGlzLl9zdGF0dXMgPT09ICdsaXZlJykge1xuICAgICAgICAvL0ZMT1ctT1VUOiB0aGlzIG1lc3NhZ2Ugd2lsbCBiZSBzZW50IGRpcmVjdGx5IHRvIGEgcmVzb3VyY2UgY2hhbmdlcyBhZGRyZXNzOiBNZXNzYWdlQnVzXG4gICAgICAgIHZhciBjaGFuZ2VNc2cgPSB7XG4gICAgICAgICAgdHlwZTogJ3VwZGF0ZScsIGZyb206IF90aGlzLl91cmwsIHRvOiBfdGhpcy5fdXJsICsgJy9jaGFuZ2VzJyxcbiAgICAgICAgICBib2R5OiB7IHZlcnNpb246IF90aGlzLl92ZXJzaW9uLCBzb3VyY2U6IF90aGlzLl9vd25lciwgYXR0cmlidXRlOiBldmVudC5maWVsZCwgbGFzdE1vZGlmaWVkOiBfdGhpcy5fbWV0YWRhdGEubGFzdE1vZGlmaWVkIH1cbiAgICAgICAgfTtcblxuICAgICAgICBjb25zb2xlLmxvZygnW0RhdGFPYmplY3QgLSBfb25DaGFuZ2VdIC0gJywgZXZlbnQsIGNoaWxkSW5mbywgY2hhbmdlTXNnKTtcblxuICAgICAgICBpZiAoZXZlbnQub1R5cGUgPT09IF9Qcm94eU9iamVjdC5PYmplY3RUeXBlLk9CSkVDVCkge1xuICAgICAgICAgIGlmIChldmVudC5jVHlwZSAhPT0gX1Byb3h5T2JqZWN0LkNoYW5nZVR5cGUuUkVNT1ZFKSB7XG4gICAgICAgICAgICBjaGFuZ2VNc2cuYm9keS52YWx1ZSA9IGV2ZW50LmRhdGE7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZU1zZy5ib2R5LmF0dHJpYnV0ZVR5cGUgPSBldmVudC5vVHlwZTtcbiAgICAgICAgICBjaGFuZ2VNc2cuYm9keS52YWx1ZSA9IGV2ZW50LmRhdGE7XG4gICAgICAgICAgaWYgKGV2ZW50LmNUeXBlICE9PSBfUHJveHlPYmplY3QuQ2hhbmdlVHlwZS5VUERBVEUpIHtcbiAgICAgICAgICAgIGNoYW5nZU1zZy5ib2R5Lm9wZXJhdGlvbiA9IGV2ZW50LmNUeXBlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vY2hpbGRJbmZvIG11c3QgaGF2ZSAocGF0aCwgY2hpbGRJZClcbiAgICAgICAgaWYgKGNoaWxkSW5mbykge1xuICAgICAgICAgIGNoYW5nZU1zZy50byA9IGNoaWxkSW5mby5wYXRoO1xuICAgICAgICAgIGNoYW5nZU1zZy5ib2R5LnJlc291cmNlID0gY2hpbGRJbmZvLmNoaWxkSWQ7XG4gICAgICAgIH1cblxuICAgICAgICAvL1RPRE86IEZvciBGdXJ0aGVyIFN0dWR5XG4gICAgICAgIGlmICghX3RoaXMuX211dHVhbEF1dGhlbnRpY2F0aW9uKSBjaGFuZ2VNc2cuYm9keS5tdXR1YWxBdXRoZW50aWNhdGlvbiA9IF90aGlzLl9tdXR1YWxBdXRoZW50aWNhdGlvbjtcblxuICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKGNoYW5nZU1zZyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy9GTE9XLUlOOiBkZWx0YSBtZXNzYWdlIHJlY2VpdmVkIGZyb20gYSByZW1vdGUgRGF0YU9iamVjdFJlcG9ydGVyIG9yIERhdGFPYmplY3RDaGlsZCB3aGVuIGNoYW5naW5nIGRhdGFcblxuICB9LCB7XG4gICAga2V5OiAnX2NoYW5nZU9iamVjdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jaGFuZ2VPYmplY3Qoc3luY09iaiwgbXNnKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAvL1RPRE86IHVwZGF0ZSB2ZXJzaW9uID9cbiAgICAgIC8vaG93IHRvIGhhbmRsZSBhbiBpbmNvcnJlY3QgdmVyc2lvbiA/IEV4YW1wbGU6IHJlY2VpdmUgYSB2ZXJzaW9uIDMgd2hlbiB0aGUgb2JzZXJ2ZXIgaXMgaW4gdmVyc2lvbiAxLCB3aGVyZSBpcyB0aGUgdmVyc2lvbiAyID9cbiAgICAgIC8vd2lsbCB3ZSBuZWVkIHRvIGNvbmZpcm0gdGhlIHJlY2VwdGlvbiA/XG4gICAgICBpZiAoX3RoaXMuX3ZlcnNpb24gKyAxIDw9IG1zZy5ib2R5LnZlcnNpb24pIHtcbiAgICAgICAgX3RoaXMuX3ZlcnNpb24gPSBtc2cuYm9keS52ZXJzaW9uO1xuICAgICAgICB2YXIgcGF0aCA9IG1zZy5ib2R5LmF0dHJpYnV0ZTtcbiAgICAgICAgdmFyIHZhbHVlID0gKDAsIF91dGlscy5kZWVwQ2xvbmUpKG1zZy5ib2R5LnZhbHVlKTtcbiAgICAgICAgdmFyIGZpbmRSZXN1bHQgPSBzeW5jT2JqLmZpbmRCZWZvcmUocGF0aCk7XG5cbiAgICAgICAgaWYgKG1zZy5ib2R5Lmxhc3RNb2RpZmllZCkge1xuICAgICAgICAgIF90aGlzLl9tZXRhZGF0YS5sYXN0TW9kaWZpZWQgPSBtc2cuYm9keS5sYXN0TW9kaWZpZWQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMuX21ldGFkYXRhLmxhc3RNb2RpZmllZCA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChtc2cuYm9keS5hdHRyaWJ1dGVUeXBlID09PSBfUHJveHlPYmplY3QuT2JqZWN0VHlwZS5BUlJBWSkge1xuICAgICAgICAgIGlmIChtc2cuYm9keS5vcGVyYXRpb24gPT09IF9Qcm94eU9iamVjdC5DaGFuZ2VUeXBlLkFERCkge1xuICAgICAgICAgICAgdmFyIGFyciA9IGZpbmRSZXN1bHQub2JqO1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gZmluZFJlc3VsdC5sYXN0O1xuICAgICAgICAgICAgQXJyYXkucHJvdG90eXBlLnNwbGljZS5hcHBseShhcnIsIFtpbmRleCwgMF0uY29uY2F0KHZhbHVlKSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChtc2cuYm9keS5vcGVyYXRpb24gPT09IF9Qcm94eU9iamVjdC5DaGFuZ2VUeXBlLlJFTU9WRSkge1xuICAgICAgICAgICAgdmFyIF9hcnIgPSBmaW5kUmVzdWx0Lm9iajtcbiAgICAgICAgICAgIHZhciBfaW5kZXggPSBmaW5kUmVzdWx0Lmxhc3Q7XG4gICAgICAgICAgICBfYXJyLnNwbGljZShfaW5kZXgsIHZhbHVlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZmluZFJlc3VsdC5vYmpbZmluZFJlc3VsdC5sYXN0XSA9IHZhbHVlOyAvLyBVUERBVEVcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKG1zZy5ib2R5LnZhbHVlKSB7XG4gICAgICAgICAgICBmaW5kUmVzdWx0Lm9ialtmaW5kUmVzdWx0Lmxhc3RdID0gdmFsdWU7IC8vIFVQREFURSBvciBBRERcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGVsZXRlIGZpbmRSZXN1bHQub2JqW2ZpbmRSZXN1bHQubGFzdF07IC8vIFJFTU9WRVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy9UT0RPOiBob3cgdG8gaGFuZGxlIHVuc3luY2hyb25pemVkIHZlcnNpb25zP1xuICAgICAgICBjb25zb2xlLmxvZygnVU5TWU5DSFJPTklaRUQgVkVSU0lPTjogKGRhdGEgPT4gJyArIF90aGlzLl92ZXJzaW9uICsgJywgbXNnID0+ICcgKyBtc2cuYm9keS52ZXJzaW9uICsgJyknKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBhIHJlbW90ZSBEYXRhT2JqZWN0Q2hpbGQgd2hlbiBjaGFuZ2luZyBkYXRhXG5cbiAgfSwge1xuICAgIGtleTogJ19jaGFuZ2VDaGlsZHJlbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jaGFuZ2VDaGlsZHJlbihtc2cpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICBjb25zb2xlLmxvZygnQ2hhbmdlIGNoaWxkcmVuOiAnLCBfdGhpcy5fb3duZXIsIG1zZyk7XG5cbiAgICAgIHZhciBjaGlsZElkID0gbXNnLmJvZHkucmVzb3VyY2U7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBfdGhpcy5fY2hpbGRyZW5PYmplY3RzW2NoaWxkSWRdO1xuXG4gICAgICBpZiAoY2hpbGRyZW4pIHtcbiAgICAgICAgX3RoaXMuX2NoYW5nZU9iamVjdChjaGlsZHJlbi5fc3luY09iaiwgbXNnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdObyBjaGlsZHJlbiBmb3VuZCBmb3I6ICcsIGNoaWxkSWQpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ21ldGFkYXRhJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9tZXRhZGF0YTtcbiAgICB9XG5cbiAgICAvKipcclxuICAgICAqIE9iamVjdCBVUkwgb2YgcmVwb3J0ZXIgb3Igb2JzZXJ2ZXJcclxuICAgICAqIEB0eXBlIHtPYmplY3RVUkx9XHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAndXJsJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl91cmw7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBPYmplY3Qgc2NoZW1hIFVSTCAodGhpcyBmaWVsZCBpcyBub3QgeWV0IHN0YWJsZSwgYW5kIGlzIHN1YnNqZWN0IHRvIGNoYW5nZSlcclxuICAgICAqIEB0eXBlIHtTY2hlbWFVUkx9XHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc2NoZW1hJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9zY2hlbWE7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBTdGF0dXMgb2YgdGhlIHJlcG9ydGVyIG9yIG9ic2VydmVyIGNvbm5lY3Rpb24gKHRoaXMgZmllbGQgaXMgbm90IHlldCBzdGFibGUsIGFuZCBpcyBzdWJzamVjdCB0byBjaGFuZ2UpXHJcbiAgICAgKiBAdHlwZSB7U3RhdHVzfSAtIEVudW0gb2Y6IG9uIHwgcGF1c2VkXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc3RhdHVzJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9zdGF0dXM7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBEYXRhIHN0cnVjdHVyZSB0byBiZSBzeW5jaHJvbml6ZWQuXHJcbiAgICAgKiBAdHlwZSB7SlNPTn0gLSBKU09OIHN0cnVjdHVyZSB0aGF0IHNob3VsZCBmb2xsb3cgdGhlIGRlZmluZWQgc2NoZW1hLCBpZiBhbnkuXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZGF0YScsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc3luY09iai5kYXRhO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgICogQWxsIGNyZWF0ZWQgY2hpbGRyZW4ncyBzaW5jZSB0aGUgc3Vic2NyaXB0aW9uLCBkb2Vzbid0IGNvbnRhaW4gYWxsIGNoaWxkcmVuJ3Mgc2luY2UgcmVwb3J0ZXIgY3JlYXRpb24uXHJcbiAgICAgKiBAdHlwZSB7T2JqZWN0PENoaWxkSWQsIERhdGFPYmplY3RDaGlsZD59XHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnY2hpbGRyZW5zJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9jaGlsZHJlbk9iamVjdHM7XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBEYXRhT2JqZWN0O1xufSgpOyAvKipcclxuICAgICAqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQVxyXG4gICAgICogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcclxuICAgICAqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxyXG4gICAgICogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlZcclxuICAgICAqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxyXG4gICAgICogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xyXG4gICAgICogQ29weXJpZ2h0IDIwMTYgQXBpemVlXHJcbiAgICAgKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxyXG4gICAgICpcclxuICAgICAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAgICAgKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAgICAgKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICAgICAqXHJcbiAgICAgKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gICAgICpcclxuICAgICAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICAgICAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICAgICAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gICAgICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gICAgICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAgICAgKiovXG5cbmV4cG9ydHMuZGVmYXVsdCA9IERhdGFPYmplY3Q7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuLyoqKi8gfSksXG4vKiAxMjQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuT2JqZWN0VHlwZSA9IGV4cG9ydHMuQ2hhbmdlVHlwZSA9IHVuZGVmaW5lZDtcblxudmFyIF9jbGFzc0NhbGxDaGVjazIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuXG52YXIgX2NsYXNzQ2FsbENoZWNrMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7XG5cbnZhciBfY3JlYXRlQ2xhc3MyID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCk7XG5cbnZhciBfY3JlYXRlQ2xhc3MzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXygxMTkpO1xuXG52YXIgX3V0aWxzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3MSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBvYmplY3RUeXBlID0geyBBUlJBWTogJ1tvYmplY3QgQXJyYXldJywgT0JKRUNUOiAnW29iamVjdCBPYmplY3RdJyB9O1xuXG4vKipcclxuICogQGFjY2VzcyBwcml2YXRlXHJcbiAqIE1haW4gY2xhc3MgdGhhdCBtYWludGFpbnMgYSBKU09OIG9iamVjdCwgYW5kIG9ic2VydmVzIGNoYW5nZXMgaW4gdGhpcyBvYmplY3QsIHJlY3Vyc2l2ZWx5LlxyXG4gKiBJbnRlcm5hbCBvYmplY3RzIGFuZCBhcnJheXMgYXJlIGFsc28gb2JzZXJ2ZWQuXHJcbiAqL1xuXG52YXIgU3luY09iamVjdCA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3luY09iamVjdChpbml0aWFsRGF0YSkge1xuICAgICgwLCBfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsIFN5bmNPYmplY3QpO1xuXG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF90aGlzLl9vYnNlcnZlcnMgPSBbXTtcbiAgICBfdGhpcy5fZmlsdGVycyA9IHt9O1xuXG4gICAgdGhpcy5fZGF0YSA9IGluaXRpYWxEYXRhIHx8IHt9O1xuXG4gICAgdGhpcy5faW50ZXJuYWxPYnNlcnZlKHRoaXMuX2RhdGEpO1xuICB9XG5cbiAgKDAsIF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoU3luY09iamVjdCwgW3tcbiAgICBrZXk6ICdvYnNlcnZlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb2JzZXJ2ZShjYWxsYmFjaykge1xuICAgICAgdGhpcy5fb2JzZXJ2ZXJzLnB1c2goY2FsbGJhY2spO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2ZpbmQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmaW5kKHBhdGgpIHtcbiAgICAgIHZhciBsaXN0ID0gKDAsIF91dGlscy5wYXJzZUF0dHJpYnV0ZXMpKHBhdGgpO1xuXG4gICAgICByZXR1cm4gdGhpcy5fZmluZFdpdGhTcGxpdChsaXN0KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmaW5kQmVmb3JlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZmluZEJlZm9yZShwYXRoKSB7XG4gICAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgICB2YXIgbGlzdCA9ICgwLCBfdXRpbHMucGFyc2VBdHRyaWJ1dGVzKShwYXRoKTtcbiAgICAgIHJlc3VsdC5sYXN0ID0gbGlzdC5wb3AoKTtcbiAgICAgIHJlc3VsdC5vYmogPSB0aGlzLl9maW5kV2l0aFNwbGl0KGxpc3QpO1xuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19maW5kV2l0aFNwbGl0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2ZpbmRXaXRoU3BsaXQobGlzdCkge1xuICAgICAgdmFyIG9iaiA9IHRoaXMuX2RhdGE7XG4gICAgICBsaXN0LmZvckVhY2goZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIG9iaiA9IG9ialt2YWx1ZV07XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdfaW50ZXJuYWxPYnNlcnZlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2ludGVybmFsT2JzZXJ2ZShvYmplY3QpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgaGFuZGxlciA9IGZ1bmN0aW9uIGhhbmRsZXIoY2hhbmdlc2V0KSB7XG5cbiAgICAgICAgY2hhbmdlc2V0LmV2ZXJ5KGZ1bmN0aW9uIChjaGFuZ2UpIHtcbiAgICAgICAgICBfdGhpczIuX29uQ2hhbmdlcyhjaGFuZ2UpO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuX2RhdGEgPSBPYmplY3QuZGVlcE9ic2VydmUob2JqZWN0LCBoYW5kbGVyKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdfZmlyZUV2ZW50JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2ZpcmVFdmVudChldmVudCkge1xuICAgICAgdGhpcy5fb2JzZXJ2ZXJzLmZvckVhY2goZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgIGNhbGxiYWNrKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19vbkNoYW5nZXMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfb25DaGFuZ2VzKGNoYW5nZSkge1xuXG4gICAgICB2YXIgb2JqID0gY2hhbmdlLm9iamVjdDtcbiAgICAgIHZhciBvYmpUeXBlID0gdm9pZCAwO1xuXG4gICAgICBpZiAob2JqLmNvbnN0cnVjdG9yID09PSBPYmplY3QpIHtcbiAgICAgICAgb2JqVHlwZSA9IE9iamVjdFR5cGUuT0JKRUNUO1xuICAgICAgfVxuXG4gICAgICBpZiAob2JqLmNvbnN0cnVjdG9yID09PSBBcnJheSkge1xuICAgICAgICBvYmpUeXBlID0gT2JqZWN0VHlwZS5BUlJBWTtcbiAgICAgIH1cblxuICAgICAgdmFyIGZpZWxkU3RyaW5nID0gY2hhbmdlLmtleXBhdGg7XG5cbiAgICAgIC8vIGNvbnNvbGUubG9nKCdGaWVsZDonLCBmaWVsZFN0cmluZyk7XG4gICAgICAvLyBjb25zb2xlLmxvZygndHlwZTonLCBjaGFuZ2UudHlwZSk7XG5cbiAgICAgIC8vbGV0IG9sZFZhbHVlID0gY2hhbmdlLm9sZFZhbHVlO1xuICAgICAgdmFyIG5ld1ZhbHVlID0gb2JqW2NoYW5nZS5uYW1lXTtcblxuICAgICAgLy8gY29uc29sZS5pbmZvKGNoYW5nZS50eXBlICsgJyB8IEZpZWxkOiAnICsgZmllbGRTdHJpbmcgKyAnIHwgTmV3IFZhbHVlOicsIEpTT04uc3RyaW5naWZ5KG5ld1ZhbHVlKSwgZmllbGRTdHJpbmcuaW5jbHVkZXMoJ2xlbmd0aCcpKTtcblxuICAgICAgaWYgKGNoYW5nZS50eXBlID09PSAndXBkYXRlJyAmJiAhZmllbGRTdHJpbmcuaW5jbHVkZXMoJy5sZW5ndGgnKSkge1xuICAgICAgICB0aGlzLl9maXJlRXZlbnQoe1xuICAgICAgICAgIGNUeXBlOiBDaGFuZ2VUeXBlLlVQREFURSxcbiAgICAgICAgICBvVHlwZTogb2JqVHlwZSxcbiAgICAgICAgICBmaWVsZDogZmllbGRTdHJpbmcsXG4gICAgICAgICAgZGF0YTogbmV3VmFsdWVcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjaGFuZ2UudHlwZSA9PT0gJ2FkZCcpIHtcbiAgICAgICAgdGhpcy5fZmlyZUV2ZW50KHtcbiAgICAgICAgICBjVHlwZTogQ2hhbmdlVHlwZS5BREQsXG4gICAgICAgICAgb1R5cGU6IG9ialR5cGUsXG4gICAgICAgICAgZmllbGQ6IGZpZWxkU3RyaW5nLFxuICAgICAgICAgIGRhdGE6IG5ld1ZhbHVlXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoY2hhbmdlLnR5cGUgPT09ICdkZWxldGUnKSB7XG4gICAgICAgIHRoaXMuX2ZpcmVFdmVudCh7XG4gICAgICAgICAgY1R5cGU6IENoYW5nZVR5cGUuUkVNT1ZFLFxuICAgICAgICAgIG9UeXBlOiBvYmpUeXBlLFxuICAgICAgICAgIGZpZWxkOiBmaWVsZFN0cmluZ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdkYXRhJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9kYXRhO1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gU3luY09iamVjdDtcbn0oKTtcblxudmFyIENoYW5nZVR5cGUgPSBleHBvcnRzLkNoYW5nZVR5cGUgPSB7IFVQREFURTogJ3VwZGF0ZScsIEFERDogJ2FkZCcsIFJFTU9WRTogJ3JlbW92ZScgfTtcbnZhciBPYmplY3RUeXBlID0gZXhwb3J0cy5PYmplY3RUeXBlID0geyBPQkpFQ1Q6ICdvYmplY3QnLCBBUlJBWTogJ2FycmF5JyB9O1xuZXhwb3J0cy5kZWZhdWx0ID0gU3luY09iamVjdDtcblxuLyoqKi8gfSksXG4vKiAxMjUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9nZXRQcm90b3R5cGVPZiA9IF9fd2VicGFja19yZXF1aXJlX18oMzEpO1xuXG52YXIgX2dldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldFByb3RvdHlwZU9mKTtcblxudmFyIF9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1NCk7XG5cbnZhciBfZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldE93blByb3BlcnR5RGVzY3JpcHRvcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7XG4gIHZhciBkZXNjID0gKDAsIF9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IyLmRlZmF1bHQpKG9iamVjdCwgcHJvcGVydHkpO1xuXG4gIGlmIChkZXNjID09PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgcGFyZW50ID0gKDAsIF9nZXRQcm90b3R5cGVPZjIuZGVmYXVsdCkob2JqZWN0KTtcblxuICAgIGlmIChwYXJlbnQgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykge1xuICAgIHJldHVybiBkZXNjLnZhbHVlO1xuICB9IGVsc2Uge1xuICAgIHZhciBnZXR0ZXIgPSBkZXNjLmdldDtcblxuICAgIGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpO1xuICB9XG59O1xuXG4vKioqLyB9KSxcbi8qIDEyNiAqLyxcbi8qIDEyNyAqLyxcbi8qIDEyOCAqLyxcbi8qIDEyOSAqLyxcbi8qIDEzMCAqLyxcbi8qIDEzMSAqLyxcbi8qIDEzMiAqLyxcbi8qIDEzMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3Byb21pc2UgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDcyKTtcblxudmFyIF9wcm9taXNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb21pc2UpO1xuXG52YXIgX2Fzc2lnbiA9IF9fd2VicGFja19yZXF1aXJlX18oMTE4KTtcblxudmFyIF9hc3NpZ24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXNzaWduKTtcblxudmFyIF9jbGFzc0NhbGxDaGVjazIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuXG52YXIgX2NsYXNzQ2FsbENoZWNrMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NsYXNzQ2FsbENoZWNrMik7XG5cbnZhciBfY3JlYXRlQ2xhc3MyID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCk7XG5cbnZhciBfY3JlYXRlQ2xhc3MzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY3JlYXRlQ2xhc3MyKTtcblxudmFyIF91dGlscyA9IF9fd2VicGFja19yZXF1aXJlX18oNzEpO1xuXG52YXIgX0RhdGFPYmplY3RSZXBvcnRlciA9IF9fd2VicGFja19yZXF1aXJlX18oMTIyKTtcblxudmFyIF9EYXRhT2JqZWN0UmVwb3J0ZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRGF0YU9iamVjdFJlcG9ydGVyKTtcblxudmFyIF9EYXRhT2JqZWN0T2JzZXJ2ZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyMSk7XG5cbnZhciBfRGF0YU9iamVjdE9ic2VydmVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0RhdGFPYmplY3RPYnNlcnZlcik7XG5cbnZhciBfRGF0YVByb3Zpc2lvbmFsID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNTApO1xuXG52YXIgX0RhdGFQcm92aXNpb25hbDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9EYXRhUHJvdmlzaW9uYWwpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcclxuKiBUaGUgbWFpbiBjbGFzcyBmb3IgdGhlIHN5bmNoZXIgcGFja2FnZS5cclxuKiBUaGUgU3luY2hlciBpcyBhIHNpbmdsZXRvbiBjbGFzcyBwZXIgSHlwZXJ0eS9VUkwgYW5kIGl0IGlzIHRoZSBvd25lciBvZiBhbGwgY3JlYXRlZCBEYXRhIFN5bmMgT2JqZWN0cyBhY2NvcmRpbmcgdG8gdGhlIFJlcG9ydGVyIC0gT2JzZXJ2ZXIgcGF0dGVybi5cclxuKiBNYWluIGZ1bmN0aW9uYWxpdHkgaXMgdG8gY3JlYXRlIHJlcG9ydGVycyBhbmQgdG8gc3Vic2NyaWJlIHRvIGV4aXN0aW5nIG9uZXMuXHJcbiovXG4vKipcclxuKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRFxyXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxyXG4qIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WXHJcbiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xyXG4qIENvcHlyaWdodCAyMDE2IEFwaXplZVxyXG4qIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElOXHJcbipcclxuKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4qIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuKlxyXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbipcclxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4qIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuKiovXG52YXIgU3luY2hlciA9IGZ1bmN0aW9uICgpIHtcbiAgLyogcHJpdmF0ZVxyXG4gIF9vd25lcjogVVJMXHJcbiAgX2J1czogTWluaUJ1c1xyXG4gICAgX3N1YlVSTDogVVJMXHJcbiAgICBfcmVwb3J0ZXJzOiA8dXJsOiBEYXRhT2JqZWN0UmVwb3J0ZXI+XHJcbiAgX29ic2VydmVyczogPHVybDogRGF0YU9iamVjdE9ic2VydmVyPlxyXG4gIF9wcm92aXNpb25hbHM6IDx1cmw6IERhdGFQcm92aXNpb25hbD5cclxuICAgIC0tLS1ldmVudCBoYW5kbGVycy0tLS1cclxuICBfb25Ob3RpZmljYXRpb25IYW5kbGVyOiAoZXZlbnQpID0+IHZvaWRcclxuICBfb25SZXN1bWU6IChldmVudCkgPT4gdm9pZFxyXG4gICovXG5cbiAgLyoqXHJcbiAgKiBDb25zdHJ1Y3RvciB0aGF0IHNob3VsZCBiZSB1c2VkIGJ5IHRoZSBIeXBlcnR5IG93bmVyXHJcbiAgKiBAcGFyYW0ge0h5cGVydHlVUkx9IG93bmVyIC0gSHlwZXJ0eSBVUkwgb3duZXIuIEFuIFVSTCBhbGxvY2F0ZWQgYnkgdGhlIHJ1bnRpbWUgdGhhdCB1bmlxdWVseSBpZGVudGlmaWVzIHRoZSBIeXBlcnR5LlxyXG4gICogQHBhcmFtIHtNaW5pQnVzfSBidXMgLSBBbiBpbnN0YW5jZSBvZiB0aGUgTWluaUJ1cyBwcm92aWRlZCBpbiB0aGUgc2FuZGJveC4gV2hlbiBhbiBvYmplY3QgKFJlcG9ydGVyIG9yIE9ic2VydmVkKSBpcyBjcmVhdGVkLCB0aGUgU3luY2hlck1hbmFnZXIgd2lsbCBhZGQgYSBsaXN0ZW5lciBpbiB0aGUgTWluaUJ1cyB0byByZWNlaXZlL3NlbmQgTWVzc2FnZXMgb2YgdGhhdCBvYmplY3QuXHJcbiAgKiBAcGFyYW0ge0pTT059IGNvbmZpZyAtIENvbmZpZ3VyYXRpb24gZGF0YS4gVGhlIG9ubHkgcmVxdWlyZWQgZmllbGQgZm9yIG5vdyBpcyB0aGUgcnVudGltZVVSTC5cclxuICAqL1xuICBmdW5jdGlvbiBTeW5jaGVyKG93bmVyLCBidXMsIGNvbmZpZykge1xuICAgICgwLCBfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsIFN5bmNoZXIpO1xuXG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF90aGlzLl9vd25lciA9IG93bmVyO1xuICAgIF90aGlzLl9idXMgPSBidXM7XG5cbiAgICBfdGhpcy5fc3ViVVJMID0gY29uZmlnLnJ1bnRpbWVVUkwgKyAnL3NtJztcbiAgICBfdGhpcy5fcnVudGltZVVybCA9IGNvbmZpZy5ydW50aW1lVVJMO1xuXG4gICAgX3RoaXMuX3JlcG9ydGVycyA9IHt9O1xuICAgIF90aGlzLl9vYnNlcnZlcnMgPSB7fTtcbiAgICBfdGhpcy5fcHJvdmlzaW9uYWxzID0ge307XG5cbiAgICBidXMuYWRkTGlzdGVuZXIob3duZXIsIGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgIC8vaWdub3JlIG1zZyBzZW50IGJ5IGhpbXNlbGZcbiAgICAgIGlmIChtc2cuZnJvbSAhPT0gb3duZXIpIHtcbiAgICAgICAgY29uc29sZS5pbmZvKCdbU3luY2hlcl0gU3luY2hlci1SQ1Y6ICcsIG1zZywgX3RoaXMpO1xuICAgICAgICBzd2l0Y2ggKG1zZy50eXBlKSB7XG4gICAgICAgICAgY2FzZSAnZm9yd2FyZCc6XG4gICAgICAgICAgICBfdGhpcy5fb25Gb3J3YXJkKG1zZyk7YnJlYWs7XG4gICAgICAgICAgY2FzZSAnY3JlYXRlJzpcbiAgICAgICAgICAgIF90aGlzLl9vblJlbW90ZUNyZWF0ZShtc2cpO2JyZWFrO1xuICAgICAgICAgIGNhc2UgJ2RlbGV0ZSc6XG4gICAgICAgICAgICBfdGhpcy5fb25SZW1vdGVEZWxldGUobXNnKTticmVhaztcbiAgICAgICAgICBjYXNlICdleGVjdXRlJzpcbiAgICAgICAgICAgIF90aGlzLl9vbkV4ZWN1dGUobXNnKTticmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXHJcbiAgKiBUaGUgb3duZXIgb2YgdGhlIFN5bmNoZXIgYW5kIGFsbCBjcmVhdGVkIHJlcG9ydGVycy5cclxuICAqIEB0eXBlIHtIeXBlcnR5VVJMfVxyXG4gICovXG5cblxuICAoMCwgX2NyZWF0ZUNsYXNzMy5kZWZhdWx0KShTeW5jaGVyLCBbe1xuICAgIGtleTogJ2NyZWF0ZScsXG5cblxuICAgIC8qKlxyXG4gICAgKiBSZXF1ZXN0IGEgRGF0YU9iamVjdFJlcG9ydGVyIGNyZWF0aW9uLiBUaGUgVVJMIHdpbGwgYmUgYmUgcmVxdWVzdGVkIGJ5IHRoZSBhbGxvY2F0aW9uIG1lY2hhbmlzbS5cclxuICAgICogQHBhcmFtICB7U2NoZW1hVVJMfSBzY2hlbWEgLSBIeXBlcnR5IENhdGFsb2d1ZSBVUkwgYWRkcmVzcyB0aGF0IGNhbiBiZSB1c2VkIHRvIHJldHJpZXZlIHRoZSBKU09OLVNjaGVtYSBkZXNjcmliaW5nIHRoZSBEYXRhIE9iamVjdCBzY2hlbWFcclxuICAgICogQHBhcmFtICB7SHlwZXJ0eVVSTFtdfSBvYnNlcnZlcnMgLSBMaXN0IG9mIGh5cGVydGllcyB0aGF0IGFyZSBwcmUtYXV0aG9yaXplZCBmb3Igc3Vic2NyaXB0aW9uXHJcbiAgICAqIEBwYXJhbSAge0pTT059IGluaXRpYWxEYXRhIC0gSW5pdGlhbCBkYXRhIG9mIHRoZSByZXBvcnRlclxyXG4gICAgKiBAcGFyYW0gIHtib29sZWFufSBzdG9yZSAtIChPcHRpb25hbCkgaWYgdHJ1ZSwgb2JqZWN0IHdpbGwgYmUgc3RvcmVkIGJ5IHRoZSBydW50aW1lXHJcbiAgICAqIEBwYXJhbSAge2Jvb2xlYW59IHAycCAtIChPcHRpb25hbCkgaWYgdHJ1ZSwgZGF0YSBzeW5jaHJvbmlzYXRpb24gc3RyZWFtIHdpbGwgdXNlIHAycCBjb25uZWN0aW9uIGFzIG11Y2ggYXMgcG9zc2libGVcclxuICAgICogQHBhcmFtICB7c3RyaW5nfSBuYW1lIC0gKE9wdGlvbmFsKSB0aGUgbmFtZSBvZiB0aGUgZGF0YW9iamVjdFxyXG4gICAgKiBAcGFyYW0gIHtNZXNzYWdlQm9keUlkZW50aXR5fSBpZGVudGl0eSAtIChvcHRpb25hbCkgaWRlbnRpdHkgZGF0YSB0byBiZSBhZGRlZCB0byBpZGVudGl0eSB0aGUgdXNlciByZXBvcnRlci4gVG8gYmUgdXNlZCBmb3IgbGVnYWN5IGlkZW50aXRpZXMuXHJcbiAgICAqIEBwYXJhbSAge1N5bmNNZXRhZGF0YX0gaW5wdXQgLSAob3B0aW9uYWwpIGFsbCBtZXRhZGF0YSByZXF1aXJlZCB0byBzdW5jIHRoZSBEYXRhIE9iamVjdC5cclxuICAgICogQHJldHVybiB7UHJvbWlzZTxEYXRhT2JqZWN0UmVwb3J0ZXI+fSBSZXR1cm4gUHJvbWlzZSB0byBhIG5ldyBSZXBvcnRlci4gVGhlIHJlcG9ydGVyIGNhbiBiZSBhY2NlcHRlZCBvciByZWplY3RlZCBieSB0aGUgUEVQXHJcbiAgICAqL1xuICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGUoc2NoZW1hLCBvYnNlcnZlcnMsIGluaXRpYWxEYXRhKSB7XG4gICAgICB2YXIgc3RvcmUgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IGZhbHNlO1xuICAgICAgdmFyIHAycCA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDogZmFsc2U7XG4gICAgICB2YXIgbmFtZSA9IGFyZ3VtZW50cy5sZW5ndGggPiA1ICYmIGFyZ3VtZW50c1s1XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzVdIDogJ25vIG5hbWUnO1xuICAgICAgdmFyIGlkZW50aXR5ID0gYXJndW1lbnRzWzZdO1xuICAgICAgdmFyIGlucHV0ID0gYXJndW1lbnRzWzddO1xuXG5cbiAgICAgIGlmICghc2NoZW1hKSB0aHJvdyBFcnJvcignW1N5bmNoZXIgLSBDcmVhdGVdIC0gWW91IG5lZWQgc3BlY2lmeSB0aGUgZGF0YSBvYmplY3Qgc2NoZW1hJyk7XG4gICAgICBpZiAoIW9ic2VydmVycykgdGhyb3cgRXJyb3IoJ1tTeW5jaGVyIC0gQ3JlYXRlXSAtVGhlIG9ic2VydmVycyBzaG91bGQgYmUgZGVmaW5lZCcpO1xuXG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgdmFyIGNyZWF0ZUlucHV0ID0gKDAsIF9hc3NpZ24yLmRlZmF1bHQpKHt9LCBpbnB1dCk7XG5cbiAgICAgIGNyZWF0ZUlucHV0LnAycCA9IHAycDtcbiAgICAgIGNyZWF0ZUlucHV0LnN0b3JlID0gc3RvcmU7XG4gICAgICBjcmVhdGVJbnB1dC5zY2hlbWEgPSBzY2hlbWE7XG4gICAgICBjcmVhdGVJbnB1dC5hdXRob3Jpc2UgPSBvYnNlcnZlcnM7XG4gICAgICBpbml0aWFsRGF0YSA/IGNyZWF0ZUlucHV0LmRhdGEgPSAoMCwgX3V0aWxzLmRlZXBDbG9uZSkoaW5pdGlhbERhdGEpIDogY3JlYXRlSW5wdXQuZGF0YSA9IHt9O1xuICAgICAgY3JlYXRlSW5wdXQubmFtZSA9IG5hbWUubGVuZ3RoID09PSAwID8gJ25vIG5hbWUnIDogbmFtZTtcbiAgICAgIGNyZWF0ZUlucHV0LnJlcG9ydGVyID0gX3RoaXMuX293bmVyO1xuICAgICAgY3JlYXRlSW5wdXQucmVzdW1lID0gZmFsc2U7XG4gICAgICBpZiAoaW5wdXQpIHtcbiAgICAgICAgY3JlYXRlSW5wdXQubXV0dWFsID0gaW5wdXQubXV0dWFsID8gaW5wdXQubXV0dWFsIDogdHJ1ZTtcbiAgICAgICAgY3JlYXRlSW5wdXQubmFtZSA9IGlucHV0Lm5hbWUgPyBpbnB1dC5uYW1lIDogY3JlYXRlSW5wdXQubmFtZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNyZWF0ZUlucHV0Lm11dHVhbCA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChpZGVudGl0eSkge1xuICAgICAgICBjcmVhdGVJbnB1dC5pZGVudGl0eSA9IGlkZW50aXR5O1xuICAgICAgfVxuXG4gICAgICAvL09iamVjdC5hc3NpZ24oY3JlYXRlSW5wdXQsIHtyZXN1bWU6IGZhbHNlfSk7XG5cbiAgICAgIGNvbnNvbGUubG9nKCdbc3luY2hlciAtIGNyZWF0ZV0gLSBjcmVhdGUgUmVwb3J0ZXIgLSBjcmVhdGVJbnB1dDogJywgY3JlYXRlSW5wdXQpO1xuXG4gICAgICByZXR1cm4gX3RoaXMuX2NyZWF0ZShjcmVhdGVJbnB1dCk7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAqIFJlcXVlc3QgYSBEYXRhT2JqZWN0UmVwb3J0ZXIgY3JlYXRpb24uIFRoZSBVUkwgd2lsbCBiZSBiZSByZXF1ZXN0ZWQgYnkgdGhlIGFsbG9jYXRpb24gbWVjaGFuaXNtLlxyXG4gICAgKiBAcGFyYW0gIHtPYmplY3R9IGNyaXRlcmlhIC0gKG9wdGlvbmFsKSBpZGVudGl0eSBkYXRhIHRvIGJlIGFkZGVkIHRvIGlkZW50aXR5IHRoZSB1c2VyIHJlcG9ydGVyLiBUbyBiZSB1c2VkIGZvciBsZWdhY3kgaWRlbnRpdGllcy5cclxuICAgICogQHJldHVybiB7UHJvbWlzZTxEYXRhT2JqZWN0UmVwb3J0ZXI+W119IFJldHVybiBhIHByb21pc2Ugd2l0aCBhIGxpc3Qgb2YgRGF0YU9iamVjdFJlcG9ydGVyIHRvIGJlIHJlc3VtZWQ7XHJcbiAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdyZXN1bWVSZXBvcnRlcnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXN1bWVSZXBvcnRlcnMoY3JpdGVyaWEpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXIgLSBjcmVhdGVdIC0gcmVzdW1lIFJlcG9ydGVyIC0gY3JpdGVyaWE6ICcsIGNyaXRlcmlhKTtcblxuICAgICAgKDAsIF9hc3NpZ24yLmRlZmF1bHQpKGNyaXRlcmlhLCB7IHJlc3VtZTogdHJ1ZSB9KTtcblxuICAgICAgcmV0dXJuIF90aGlzLl9yZXN1bWVDcmVhdGUoY3JpdGVyaWEpO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgKiBSZXF1ZXN0IGEgc3Vic2NyaXB0aW9uIHRvIGFuIGV4aXN0ZW50IHJlcG9ydGVyIG9iamVjdC5cclxuICAgICogQHBhcmFtIHtTY2hlbWFVUkx9IHNjaGVtYSAtIEh5cGVydHkgQ2F0YWxvZ3VlIFVSTCBhZGRyZXNzIHRoYXQgY2FuIGJlIHVzZWQgdG8gcmV0cmlldmUgdGhlIEpTT04tU2NoZW1hIGRlc2NyaWJpbmcgdGhlIERhdGEgT2JqZWN0IHNjaGVtYVxyXG4gICAgKiBAcGFyYW0ge09iamVjdFVSTH0gb2JqVVJMIC0gQWRkcmVzcyBvZiB0aGUgZXhpc3RlbnQgcmVwb3J0ZXIgb2JqZWN0IHRvIGJlIG9ic2VydmVkXHJcbiAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gW3N0b3JlPWZhbHNlXSAtIFNhdmUgdGhlIHN1YnNjcmlwdGlvbiBvbiB0aGUgU3luY2hlciBNYW5hZ2VyIGZvciBmdXJ0aGVyIHJlc3VtZSAoRGVmYXVsdCBpcyBmYWxzZSlcclxuICAgICogQHBhcmFtIHtCb29sZWFufSBbcDJwPWZhbHNlXSAtIEluZm8gYWJvdXQgaWYgc2hvdWxkIHVzZSBwMnAgY29ubmVjdGlvbiAoRGVmYXVsdCBpcyBmYWxzZSlcclxuICAgICogQHBhcmFtIHtCb29sZWFufSBbbXV0dWFsPXRydWVdIC0gSW5mbyBhYm91dCBpZiBtZXNzYWdlcyBvZiB0aGlzIG9iamVjdCBzaG91bGQgYmUgZW5jcnlwdGVkIChEZWZhdWx0IGlzIHRydWUpXHJcbiAgICAqIEBwYXJhbSAge01lc3NhZ2VCb2R5SWRlbnRpdHl9IGlkZW50aXR5IC0gKG9wdGlvbmFsKSBpZGVudGl0eSBkYXRhIHRvIGJlIGFkZGVkIHRvIGlkZW50aXR5IHRoZSB1c2VyIHJlcG9ydGVyLiBUbyBiZSB1c2VkIGZvciBsZWdhY3kgaWRlbnRpdGllcy5cclxuICAgICogQHJldHVybiB7UHJvbWlzZTxEYXRhT2JqZWN0T2JzZXJ2ZXI+fSBSZXR1cm4gUHJvbWlzZSB0byBhIG5ldyBvYnNlcnZlci4gSXQncyBhc3NvY2lhdGVkIHdpdGggdGhlIHJlcG9ydGVyLlxyXG4gICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnc3Vic2NyaWJlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3Vic2NyaWJlKHNjaGVtYSwgb2JqVVJMKSB7XG4gICAgICB2YXIgc3RvcmUgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGZhbHNlO1xuICAgICAgdmFyIHAycCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogZmFsc2U7XG4gICAgICB2YXIgbXV0dWFsID0gYXJndW1lbnRzLmxlbmd0aCA+IDQgJiYgYXJndW1lbnRzWzRdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNF0gOiB0cnVlO1xuICAgICAgdmFyIGlkZW50aXR5ID0gYXJndW1lbnRzWzVdO1xuXG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgdmFyIGNyaXRlcmlhID0ge307XG5cbiAgICAgIGNyaXRlcmlhLnAycCA9IHAycDtcbiAgICAgIGNyaXRlcmlhLnN0b3JlID0gc3RvcmU7XG4gICAgICBjcml0ZXJpYS5zY2hlbWEgPSBzY2hlbWE7XG5cbiAgICAgIGNyaXRlcmlhLnJlc291cmNlID0gb2JqVVJMO1xuICAgICAgaWYgKGlkZW50aXR5KSB7XG4gICAgICAgIGNyaXRlcmlhLmlkZW50aXR5ID0gaWRlbnRpdHk7XG4gICAgICB9XG5cbiAgICAgIC8vVE9ETzogRm9yIEZ1cnRoZXIgU3R1ZHlcbiAgICAgIGNyaXRlcmlhLm11dHVhbCA9IG11dHVhbDtcblxuICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyIC0gc3Vic2NyaWJlXSAtIHN1YnNjcmliZSBjcml0ZXJpYTogJywgY3JpdGVyaWEpO1xuXG4gICAgICAoMCwgX2Fzc2lnbjIuZGVmYXVsdCkoY3JpdGVyaWEsIHsgcmVzdW1lOiBmYWxzZSB9KTtcblxuICAgICAgcmV0dXJuIF90aGlzLl9zdWJzY3JpYmUoY3JpdGVyaWEpO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgKiBSZXF1ZXN0IGEgc3Vic2NyaXB0aW9uIHRvIGFuIGV4aXN0ZW50IHJlcG9ydGVyIG9iamVjdC5cclxuICAgICogQHBhcmFtIHtjcml0ZXJpYX0gY3JpdGVyaWEgLSBJbmZvcm1hdGlvbiB0byBkaXNjb3ZlcnkgdGhlIG9ic2VydmVyIG9iamVjdFxyXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlPERhdGFPYmplY3RPYnNlcnZlcj59IFJldHVybiBQcm9taXNlIHRvIGEgbmV3IG9ic2VydmVyLiBJdCdzIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmVwb3J0ZXIuXHJcbiAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdyZXN1bWVPYnNlcnZlcnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXN1bWVPYnNlcnZlcnMoY3JpdGVyaWEpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICB2YXIgX2NyaXRlcmlhID0gY3JpdGVyaWEgfHwge307XG5cbiAgICAgICgwLCBfYXNzaWduMi5kZWZhdWx0KShfY3JpdGVyaWEsIHsgcmVzdW1lOiB0cnVlIH0pO1xuXG4gICAgICByZXR1cm4gX3RoaXMuX3Jlc3VtZVN1YnNjcmliZShfY3JpdGVyaWEpO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgKiBSZXF1ZXN0IGEgcmVhZCBhY3Rpb24gb24gdGhlIHJlcG9ydGVyIG9iamVjdFxyXG4gICAgKiBAcGFyYW0ge09iamVjdFVSTH0gb2JqVVJMIC0gVVJMIG9mIHRoZSByZXBvcnRlciBvYmplY3QgdG8gYmUgcmVhZFxyXG4gICAgKiBAcmV0dXJuIHtQcm9taXNlPE9iamVjdD59IFJldHVybiBQcm9taXNlIHRvIGxhc3QgYXZhaWxhYmxlIGRhdGEgb2YgdGhlIHJlcG9ydGVyXHJcbiAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdyZWFkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVhZChvYmpVUkwpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIC8vRkxPVy1PVVQ6IHRoaXMgbWVzc2FnZSB3aWxsIGJlIHNlbnQgZGlyZWN0bHkgdG8gcmVwb3J0ZXIgb2JqZWN0IChtYXliZSB0aGVyZSBpcyBubyBsaXN0ZW5lciBhdmFpbGFibGUsIHNvIGl0IHdpbGwgYmUgcmVzb2x2ZWQgd2l0aCBNZXNzYWdlQnVzIC0+IHJlc29sdmUpXG4gICAgICAvL3dpbGwgcmVhY2ggdGhlIHJlbW90ZSBvYmplY3QgaW4gRGF0YU9iamVjdFJlcG9ydGVyIC0+IF9vblJlYWRcbiAgICAgIHZhciByZWFkTXNnID0ge1xuICAgICAgICB0eXBlOiAncmVhZCcsIGZyb206IF90aGlzLl9vd25lciwgdG86IG9ialVSTFxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2UocmVhZE1zZywgZnVuY3Rpb24gKHJlcGx5KSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ3JlYWQtcmVzcG9uc2U6ICcsIHJlcGx5KTtcbiAgICAgICAgICBpZiAocmVwbHkuYm9keS5jb2RlID09PSAyMDApIHtcbiAgICAgICAgICAgIHJlc29sdmUocmVwbHkuYm9keS52YWx1ZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlamVjdChyZXBseS5ib2R5LmRlc2MpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcclxuICAgICogU2V0dXAgdGhlIGNhbGxiYWNrIHRvIHByb2Nlc3MgY3JlYXRlIGFuZCBkZWxldGUgZXZlbnRzIG9mIHJlbW92ZSBSZXBvcnRlciBvYmplY3RzLlxyXG4gICAgKiBUaGlzIGlzIHJlbGVhdGVkIHRvIHRoZSBtZXNzYWdlbnMgc2VudCBieSBjcmVhdGUgdG8gdGhlIG9ic2VydmVycyBIeXBlcnR5IGFycmF5LlxyXG4gICAgKiBAcGFyYW0ge2Z1bmN0aW9uKGV2ZW50OiBNc2dFdmVudCl9IGNhbGxiYWNrXHJcbiAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdvbk5vdGlmaWNhdGlvbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uTm90aWZpY2F0aW9uKGNhbGxiYWNrKSB7XG4gICAgICB0aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXIgPSBjYWxsYmFjaztcbiAgICB9XG5cbiAgICAvKipcclxuICAgICogU2V0dXAgdGhlIGNhbGxiYWNrIHRvIHByb2Nlc3MgY2xvc2UgZXZlbnRzIGZyb20gdGhlIHJ1bnRpbWUuXHJcbiAgICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2tcclxuICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ29uQ2xvc2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsb3NlKGNhbGxiYWNrKSB7XG4gICAgICB0aGlzLl9vbkNsb3NlID0gY2FsbGJhY2s7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnX2NyZWF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jcmVhdGUoaW5wdXQpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuXG4gICAgICAgIHZhciByZXBvcnRlcklucHV0ID0gKDAsIF9hc3NpZ24yLmRlZmF1bHQpKHt9LCBpbnB1dCk7XG5cbiAgICAgICAgdmFyIHJlc3VtZSA9IGlucHV0LnJlc3VtZTtcblxuICAgICAgICByZXBvcnRlcklucHV0LmNyZWF0ZWQgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIHJlcG9ydGVySW5wdXQucnVudGltZSA9IF90aGlzLl9ydW50aW1lVXJsO1xuXG4gICAgICAgIHZhciByZXF1ZXN0VmFsdWUgPSAoMCwgX3V0aWxzLmRlZXBDbG9uZSkocmVwb3J0ZXJJbnB1dCk7XG5cbiAgICAgICAgZGVsZXRlIHJlcXVlc3RWYWx1ZS5wMnA7XG4gICAgICAgIGRlbGV0ZSByZXF1ZXN0VmFsdWUuc3RvcmU7XG4gICAgICAgIGRlbGV0ZSByZXF1ZXN0VmFsdWUub2JzZXJ2ZXJzO1xuICAgICAgICBkZWxldGUgcmVxdWVzdFZhbHVlLmlkZW50aXR5O1xuXG4gICAgICAgIC8vRkxPVy1PVVQ6IHRoaXMgbWVzc2FnZSB3aWxsIGJlIHNlbnQgdG8gdGhlIHJ1bnRpbWUgaW5zdGFuY2Ugb2YgU3luY2hlck1hbmFnZXIgLT4gX29uQ3JlYXRlXG4gICAgICAgIHZhciByZXF1ZXN0TXNnID0ge1xuICAgICAgICAgIHR5cGU6ICdjcmVhdGUnLCBmcm9tOiBfdGhpcy5fb3duZXIsIHRvOiBfdGhpcy5fc3ViVVJMLFxuICAgICAgICAgIGJvZHk6IHsgcmVzdW1lOiByZXN1bWUsIHZhbHVlOiByZXF1ZXN0VmFsdWUgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHJlcXVlc3RNc2cuYm9keS5zY2hlbWEgPSByZXBvcnRlcklucHV0LnNjaGVtYTtcblxuICAgICAgICBpZiAocmVwb3J0ZXJJbnB1dC5wMnApIHJlcXVlc3RNc2cuYm9keS5wMnAgPSByZXBvcnRlcklucHV0LnAycDtcbiAgICAgICAgaWYgKHJlcG9ydGVySW5wdXQuc3RvcmUpIHJlcXVlc3RNc2cuYm9keS5zdG9yZSA9IHJlcG9ydGVySW5wdXQuc3RvcmU7XG4gICAgICAgIGlmIChyZXBvcnRlcklucHV0LmlkZW50aXR5KSByZXF1ZXN0TXNnLmJvZHkuaWRlbnRpdHkgPSByZXBvcnRlcklucHV0LmlkZW50aXR5O1xuXG4gICAgICAgIGNvbnNvbGUubG9nKCdbc3luY2hlci5fY3JlYXRlXTogJywgcmVwb3J0ZXJJbnB1dCwgcmVxdWVzdE1zZyk7XG5cbiAgICAgICAgLy9yZXF1ZXN0IGNyZWF0ZSB0byB0aGUgYWxsb2NhdGlvbiBzeXN0ZW0uIENhbiBiZSByZWplY3RlZCBieSB0aGUgUG9saWN5RW5naW5lLlxuICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHJlcXVlc3RNc2csIGZ1bmN0aW9uIChyZXBseSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdbc3luY2hlciAtIGNyZWF0ZV0gLSBjcmVhdGUtcmVzcG9uc2U6ICcsIHJlcGx5KTtcbiAgICAgICAgICBpZiAocmVwbHkuYm9keS5jb2RlID09PSAyMDApIHtcbiAgICAgICAgICAgIC8vcmVwb3J0ZXIgY3JlYXRpb24gYWNjZXB0ZWRcbiAgICAgICAgICAgIHJlcG9ydGVySW5wdXQudXJsID0gcmVwbHkuYm9keS5yZXNvdXJjZTtcblxuICAgICAgICAgICAgcmVwb3J0ZXJJbnB1dC5zdGF0dXMgPSAnbGl2ZSc7IC8vIHBjaDogZG8gd2UgbmVkIHRoaXM/XG4gICAgICAgICAgICByZXBvcnRlcklucHV0LnN5bmNoZXIgPSBfdGhpcztcbiAgICAgICAgICAgIHJlcG9ydGVySW5wdXQuY2hpbGRyZW5zID0gcmVwbHkuYm9keS5jaGlsZHJlblJlc291cmNlcztcblxuICAgICAgICAgICAgdmFyIG5ld09iaiA9IF90aGlzLl9yZXBvcnRlcnNbcmVwb3J0ZXJJbnB1dC51cmxdO1xuICAgICAgICAgICAgaWYgKCFuZXdPYmopIHtcbiAgICAgICAgICAgICAgbmV3T2JqID0gbmV3IF9EYXRhT2JqZWN0UmVwb3J0ZXIyLmRlZmF1bHQocmVwb3J0ZXJJbnB1dCk7XG4gICAgICAgICAgICAgIF90aGlzLl9yZXBvcnRlcnNbcmVwb3J0ZXJJbnB1dC51cmxdID0gbmV3T2JqO1xuICAgICAgICAgICAgICBuZXdPYmouaW52aXRlT2JzZXJ2ZXJzKGlucHV0LmF1dGhvcmlzZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJlc29sdmUobmV3T2JqKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy9yZXBvcnRlciBjcmVhdGlvbiByZWplY3RlZFxuICAgICAgICAgICAgcmVqZWN0KHJlcGx5LmJvZHkuZGVzYyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19yZXN1bWVDcmVhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfcmVzdW1lQ3JlYXRlKGNyaXRlcmlhKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgcmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIHZhciByZXN1bWUgPSBjcml0ZXJpYS5yZXN1bWU7XG5cbiAgICAgICAgLy9GTE9XLU9VVDogdGhpcyBtZXNzYWdlIHdpbGwgYmUgc2VudCB0byB0aGUgcnVudGltZSBpbnN0YW5jZSBvZiBTeW5jaGVyTWFuYWdlciAtPiBfb25DcmVhdGVcbiAgICAgICAgdmFyIHJlcXVlc3RNc2cgPSB7XG4gICAgICAgICAgdHlwZTogJ2NyZWF0ZScsIGZyb206IF90aGlzLl9vd25lciwgdG86IF90aGlzLl9zdWJVUkwsXG4gICAgICAgICAgYm9keTogeyByZXN1bWU6IHJlc3VtZSB9XG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyIC0gY3JlYXRlXTogJywgY3JpdGVyaWEsIHJlcXVlc3RNc2cpO1xuXG4gICAgICAgIGlmIChjcml0ZXJpYSkge1xuICAgICAgICAgIHJlcXVlc3RNc2cuYm9keS52YWx1ZSA9IGNyaXRlcmlhO1xuICAgICAgICAgIHJlcXVlc3RNc2cuYm9keS52YWx1ZS5yZXBvcnRlciA9IF90aGlzLl9vd25lcjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjcml0ZXJpYS5wMnApIHJlcXVlc3RNc2cuYm9keS5wMnAgPSBjcml0ZXJpYS5wMnA7XG4gICAgICAgIGlmIChjcml0ZXJpYS5zdG9yZSkgcmVxdWVzdE1zZy5ib2R5LnN0b3JlID0gY3JpdGVyaWEuc3RvcmU7XG4gICAgICAgIGlmIChjcml0ZXJpYS5vYnNlcnZlcnMpIHJlcXVlc3RNc2cuYm9keS5hdXRob3Jpc2UgPSBjcml0ZXJpYS5vYnNlcnZlcnM7XG4gICAgICAgIGlmIChjcml0ZXJpYS5pZGVudGl0eSkgcmVxdWVzdE1zZy5ib2R5LmlkZW50aXR5ID0gY3JpdGVyaWEuaWRlbnRpdHk7XG5cbiAgICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyLl9yZXN1bWVDcmVhdGVdIC0gcmVzdW1lIG1lc3NhZ2U6ICcsIHJlcXVlc3RNc2cpO1xuXG4gICAgICAgIC8vcmVxdWVzdCBjcmVhdGUgdG8gdGhlIGFsbG9jYXRpb24gc3lzdGVtLiBDYW4gYmUgcmVqZWN0ZWQgYnkgdGhlIFBvbGljeUVuZ2luZS5cbiAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyZXF1ZXN0TXNnLCBmdW5jdGlvbiAocmVwbHkpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXIuX3Jlc3VtZUNyZWF0ZV0gLSBjcmVhdGUtcmVzdW1lZC1yZXNwb25zZTogJywgcmVwbHkpO1xuICAgICAgICAgIGlmIChyZXBseS5ib2R5LmNvZGUgPT09IDIwMCkge1xuXG4gICAgICAgICAgICB2YXIgbGlzdE9mUmVwb3J0ZXJzID0gcmVwbHkuYm9keS52YWx1ZTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggaW4gbGlzdE9mUmVwb3J0ZXJzKSB7XG5cbiAgICAgICAgICAgICAgdmFyIGRhdGFPYmplY3QgPSBsaXN0T2ZSZXBvcnRlcnNbaW5kZXhdO1xuXG4gICAgICAgICAgICAgIC8vcmVwb3J0ZXIgY3JlYXRpb24gYWNjZXB0ZWRcblxuICAgICAgICAgICAgICBkYXRhT2JqZWN0LmRhdGEgPSAoMCwgX3V0aWxzLmRlZXBDbG9uZSkoZGF0YU9iamVjdC5kYXRhKSB8fCB7fTtcblxuICAgICAgICAgICAgICBpZiAoZGF0YU9iamVjdC5jaGlsZHJlbk9iamVjdHMpIHtcbiAgICAgICAgICAgICAgICBkYXRhT2JqZWN0LmNoaWxkcmVuT2JqZWN0cyA9ICgwLCBfdXRpbHMuZGVlcENsb25lKShkYXRhT2JqZWN0LmNoaWxkcmVuT2JqZWN0cyk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBkYXRhT2JqZWN0Lm11dHVhbCA9IGZhbHNlO1xuICAgICAgICAgICAgICBkYXRhT2JqZWN0LnJlc3VtZSA9IHRydWU7XG4gICAgICAgICAgICAgIGRhdGFPYmplY3Quc3RhdHVzID0gJ2xpdmUnOyAvLyBwY2g6IGRvIHdlIG5lZCB0aGlzP1xuICAgICAgICAgICAgICBkYXRhT2JqZWN0LnN5bmNoZXIgPSBfdGhpcztcblxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXIuX3Jlc3VtZUNyZWF0ZV0gLSBjcmVhdGUtcmVzdW1lZC1kYXRhT2JqZWN0UmVwb3J0ZXInLCBkYXRhT2JqZWN0KTtcblxuICAgICAgICAgICAgICB2YXIgbmV3T2JqID0gbmV3IF9EYXRhT2JqZWN0UmVwb3J0ZXIyLmRlZmF1bHQoZGF0YU9iamVjdCk7XG5cbiAgICAgICAgICAgICAgaWYgKGRhdGFPYmplY3QuY2hpbGRyZW5PYmplY3RzKSB7XG4gICAgICAgICAgICAgICAgbmV3T2JqLnJlc3VtZUNoaWxkcmVucyhkYXRhT2JqZWN0LmNoaWxkcmVuT2JqZWN0cyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgX3RoaXMuX3JlcG9ydGVyc1tkYXRhT2JqZWN0LnVybF0gPSBuZXdPYmo7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJlc29sdmUoX3RoaXMuX3JlcG9ydGVycyk7XG4gICAgICAgICAgICBpZiAoX3RoaXMyLl9vblJlcG9ydGVyc1Jlc3VtZSkgX3RoaXMyLl9vblJlcG9ydGVyc1Jlc3VtZShfdGhpczIuX3JlcG9ydGVycyk7XG4gICAgICAgICAgfSBlbHNlIGlmIChyZXBseS5ib2R5LmNvZGUgPT09IDQwNCkge1xuICAgICAgICAgICAgcmVzb2x2ZSh7fSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vcmVwb3J0ZXIgY3JlYXRpb24gcmVqZWN0ZWRcbiAgICAgICAgICAgIHJlamVjdChyZXBseS5ib2R5LmRlc2MpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdfc3Vic2NyaWJlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3N1YnNjcmliZShpbnB1dCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgcmV0dXJuIG5ldyBfcHJvbWlzZTIuZGVmYXVsdChmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG5cbiAgICAgICAgLy9GTE9XLU9VVDogdGhpcyBtZXNzYWdlIHdpbGwgYmUgc2VudCB0byB0aGUgcnVudGltZSBpbnN0YW5jZSBvZiBTeW5jaGVyTWFuYWdlciAtPiBfb25Mb2NhbFN1YnNjcmliZVxuICAgICAgICB2YXIgc3Vic2NyaWJlTXNnID0ge1xuICAgICAgICAgIHR5cGU6ICdzdWJzY3JpYmUnLCBmcm9tOiBfdGhpcy5fb3duZXIsIHRvOiBfdGhpcy5fc3ViVVJMLFxuICAgICAgICAgIGJvZHk6IHt9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gSHlwZXJ0eSByZXF1ZXN0IHRvIGJlIGFuIE9ic2VydmVyXG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9yZVRISU5LLXByb2plY3Qvc3BlY3MvYmxvYi9tYXN0ZXIvbWVzc2FnZXMvZGF0YS1zeW5jLW1lc3NhZ2VzLm1kI2h5cGVydHktcmVxdWVzdC10by1iZS1hbi1vYnNlcnZlclxuXG4gICAgICAgIC8vIFJlc3VtZSBTdWJzY3JpcHRpb25zIGZvciB0aGUgc2FtZSBIeXBlcnR5IFVSTFxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L3NwZWNzL2Jsb2IvbWFzdGVyL21lc3NhZ2VzL2RhdGEtc3luYy1tZXNzYWdlcy5tZCNyZXN1bWUtc3Vic2NyaXB0aW9ucy1mb3ItdGhlLXNhbWUtaHlwZXJ0eS11cmxcblxuICAgICAgICAvLyBSZXN1bWUgU3Vic2NyaXB0aW9ucyBmb3IgYSBjZXJ0YWluIHVzZXIgYW5kIGRhdGEgc2NoZW1hIGluZGVwZW5kZW50bHkgb2YgdGhlIEh5cGVydHkgVVJMLlxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L3NwZWNzL2Jsb2IvbWFzdGVyL21lc3NhZ2VzL2RhdGEtc3luYy1tZXNzYWdlcy5tZCNyZXN1bWUtc3Vic2NyaXB0aW9ucy1mb3ItYS1jZXJ0YWluLXVzZXItYW5kLWRhdGEtc2NoZW1hLWluZGVwZW5kZW50bHktb2YtdGhlLWh5cGVydHktdXJsXG4gICAgICAgIGlmIChpbnB1dCkge1xuICAgICAgICAgIGlmIChpbnB1dC5oYXNPd25Qcm9wZXJ0eSgncDJwJykpIHN1YnNjcmliZU1zZy5ib2R5LnAycCA9IGlucHV0LnAycDtcbiAgICAgICAgICBpZiAoaW5wdXQuaGFzT3duUHJvcGVydHkoJ3N0b3JlJykpIHN1YnNjcmliZU1zZy5ib2R5LnN0b3JlID0gaW5wdXQuc3RvcmU7XG4gICAgICAgICAgaWYgKGlucHV0Lmhhc093blByb3BlcnR5KCdzY2hlbWEnKSkgc3Vic2NyaWJlTXNnLmJvZHkuc2NoZW1hID0gaW5wdXQuc2NoZW1hO1xuICAgICAgICAgIGlmIChpbnB1dC5oYXNPd25Qcm9wZXJ0eSgnaWRlbnRpdHknKSkgc3Vic2NyaWJlTXNnLmJvZHkuaWRlbnRpdHkgPSBpbnB1dC5pZGVudGl0eTtcbiAgICAgICAgICBpZiAoaW5wdXQuaGFzT3duUHJvcGVydHkoJ3Jlc291cmNlJykpIHN1YnNjcmliZU1zZy5ib2R5LnJlc291cmNlID0gaW5wdXQucmVzb3VyY2U7XG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVNc2cuYm9keS5yZXN1bWUgPSBpbnB1dC5yZXN1bWU7XG5cbiAgICAgICAgLy9UT0RPOiBGb3IgRnVydGhlciBTdHVkeVxuICAgICAgICBpZiAoaW5wdXQuaGFzT3duUHJvcGVydHkoJ211dHVhbCcpKSBzdWJzY3JpYmVNc2cuYm9keS5tdXR1YWxBdXRoZW50aWNhdGlvbiA9IGlucHV0Lm11dHVhbDtcblxuICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXJfc3Vic2NyaWJlXSAtIHN1YnNjcmliZSBtZXNzYWdlOiAnLCBpbnB1dCwgc3Vic2NyaWJlTXNnKTtcblxuICAgICAgICAvL3JlcXVlc3Qgc3Vic2NyaXB0aW9uXG4gICAgICAgIC8vUHJvdmlzaW9uYWwgZGF0YSBpcyBhcHBsaWVkIHRvIHRoZSBEYXRhT2JqZWN0T2JzZXJ2ZXIgYWZ0ZXIgY29uZmlybWF0aW9uLiBPciBkaXNjYXJkZWQgaWYgdGhlcmUgaXMgbm8gY29uZmlybWF0aW9uLlxuICAgICAgICAvL2ZvciBtb3JlIGluZm8gc2VlIHRoZSBEYXRhUHJvdmlzaW9uYWwgY2xhc3MgZG9jdW1lbnRhdGlvbi5cbiAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShzdWJzY3JpYmVNc2csIGZ1bmN0aW9uIChyZXBseSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdbc3luY2hlcl0gLSBzdWJzY3JpYmUtcmVzcG9uc2U6ICcsIHJlcGx5KTtcblxuICAgICAgICAgIHZhciBvYmpVUkwgPSByZXBseS5ib2R5LnJlc291cmNlO1xuXG4gICAgICAgICAgdmFyIG5ld1Byb3Zpc2lvbmFsID0gX3RoaXMuX3Byb3Zpc2lvbmFsc1tvYmpVUkxdO1xuICAgICAgICAgIGRlbGV0ZSBfdGhpcy5fcHJvdmlzaW9uYWxzW29ialVSTF07XG4gICAgICAgICAgaWYgKG5ld1Byb3Zpc2lvbmFsKSBuZXdQcm92aXNpb25hbC5fcmVsZWFzZUxpc3RlbmVycygpO1xuXG4gICAgICAgICAgaWYgKHJlcGx5LmJvZHkuY29kZSA8IDIwMCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyXSAtIG5ldyBEYXRhUHJvdmlzaW9uYWw6ICcsIHJlcGx5LmJvZHkuY2hpbGRyZW5SZXNvdXJjZXMsIG9ialVSTCk7XG4gICAgICAgICAgICBuZXdQcm92aXNpb25hbCA9IG5ldyBfRGF0YVByb3Zpc2lvbmFsMi5kZWZhdWx0KF90aGlzLl9vd25lciwgb2JqVVJMLCBfdGhpcy5fYnVzLCByZXBseS5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKTtcbiAgICAgICAgICAgIF90aGlzLl9wcm92aXNpb25hbHNbb2JqVVJMXSA9IG5ld1Byb3Zpc2lvbmFsO1xuICAgICAgICAgIH0gZWxzZSBpZiAocmVwbHkuYm9keS5jb2RlID09PSAyMDApIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbc3luY2hlcl0gLSBuZXcgRGF0YSBPYmplY3QgT2JzZXJ2ZXI6ICcsIHJlcGx5LCBfdGhpcy5fcHJvdmlzaW9uYWxzKTtcblxuICAgICAgICAgICAgdmFyIG9ic2VydmVySW5wdXQgPSByZXBseS5ib2R5LnZhbHVlO1xuXG4gICAgICAgICAgICBvYnNlcnZlcklucHV0LnN5bmNoZXIgPSBfdGhpcztcbiAgICAgICAgICAgIG9ic2VydmVySW5wdXQucDJwID0gaW5wdXQucDJwO1xuICAgICAgICAgICAgb2JzZXJ2ZXJJbnB1dC5zdG9yZSA9IGlucHV0LnN0b3JlO1xuICAgICAgICAgICAgb2JzZXJ2ZXJJbnB1dC5pZGVudGl0eSA9IGlucHV0LmlkZW50aXR5O1xuICAgICAgICAgICAgb2JzZXJ2ZXJJbnB1dC5yZXN1bWUgPSBmYWxzZTtcblxuICAgICAgICAgICAgLy8gdG9kbzogRm9yIEZ1cnRoZXIgU3R1ZHlcbiAgICAgICAgICAgIG9ic2VydmVySW5wdXQubXV0dWFsID0gaW5wdXQubXV0dWFsO1xuXG4gICAgICAgICAgICAvL29ic2VydmVySW5wdXQuY2hpbGRyZW4gPSBuZXdQcm92aXNpb25hbC5jaGlsZHJlbjtcblxuICAgICAgICAgICAgLy9UT0RPOiBtdXR1YWxBdXRoZW50aWNhdGlvbiBGb3IgRnVydGhlciBTdHVkeVxuICAgICAgICAgICAgdmFyIG5ld09iaiA9IF90aGlzLl9vYnNlcnZlcnNbb2JqVVJMXTtcbiAgICAgICAgICAgIGlmICghbmV3T2JqKSB7XG4gICAgICAgICAgICAgIG5ld09iaiA9IG5ldyBfRGF0YU9iamVjdE9ic2VydmVyMi5kZWZhdWx0KG9ic2VydmVySW5wdXQpO1xuICAgICAgICAgICAgICBfdGhpcy5fb2JzZXJ2ZXJzW29ialVSTF0gPSBuZXdPYmo7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBuZXdPYmouc3luYygpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXJdIC0gbmV3IERhdGEgT2JqZWN0IE9ic2VydmVyIGFscmVhZHkgZXhpc3Q6ICcsIG5ld09iaik7XG5cbiAgICAgICAgICAgIHJlc29sdmUobmV3T2JqKTtcblxuICAgICAgICAgICAgaWYgKG5ld1Byb3Zpc2lvbmFsKSB7XG4gICAgICAgICAgICAgIG5ld1Byb3Zpc2lvbmFsLmFwcGx5KG5ld09iaik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlamVjdChyZXBseS5ib2R5LmRlc2MpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdfcmVzdW1lU3Vic2NyaWJlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3Jlc3VtZVN1YnNjcmliZShjcml0ZXJpYSkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBuZXcgX3Byb21pc2UyLmRlZmF1bHQoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuXG4gICAgICAgIC8vRkxPVy1PVVQ6IHRoaXMgbWVzc2FnZSB3aWxsIGJlIHNlbnQgdG8gdGhlIHJ1bnRpbWUgaW5zdGFuY2Ugb2YgU3luY2hlck1hbmFnZXIgLT4gX29uTG9jYWxTdWJzY3JpYmVcbiAgICAgICAgdmFyIHN1YnNjcmliZU1zZyA9IHtcbiAgICAgICAgICB0eXBlOiAnc3Vic2NyaWJlJywgZnJvbTogX3RoaXMuX293bmVyLCB0bzogX3RoaXMuX3N1YlVSTCxcbiAgICAgICAgICBib2R5OiB7fVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEh5cGVydHkgcmVxdWVzdCB0byBiZSBhbiBPYnNlcnZlclxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vcmVUSElOSy1wcm9qZWN0L3NwZWNzL2Jsb2IvbWFzdGVyL21lc3NhZ2VzL2RhdGEtc3luYy1tZXNzYWdlcy5tZCNoeXBlcnR5LXJlcXVlc3QtdG8tYmUtYW4tb2JzZXJ2ZXJcblxuICAgICAgICAvLyBSZXN1bWUgU3Vic2NyaXB0aW9ucyBmb3IgdGhlIHNhbWUgSHlwZXJ0eSBVUkxcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9zcGVjcy9ibG9iL21hc3Rlci9tZXNzYWdlcy9kYXRhLXN5bmMtbWVzc2FnZXMubWQjcmVzdW1lLXN1YnNjcmlwdGlvbnMtZm9yLXRoZS1zYW1lLWh5cGVydHktdXJsXG5cbiAgICAgICAgLy8gUmVzdW1lIFN1YnNjcmlwdGlvbnMgZm9yIGEgY2VydGFpbiB1c2VyIGFuZCBkYXRhIHNjaGVtYSBpbmRlcGVuZGVudGx5IG9mIHRoZSBIeXBlcnR5IFVSTC5cbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3JlVEhJTkstcHJvamVjdC9zcGVjcy9ibG9iL21hc3Rlci9tZXNzYWdlcy9kYXRhLXN5bmMtbWVzc2FnZXMubWQjcmVzdW1lLXN1YnNjcmlwdGlvbnMtZm9yLWEtY2VydGFpbi11c2VyLWFuZC1kYXRhLXNjaGVtYS1pbmRlcGVuZGVudGx5LW9mLXRoZS1oeXBlcnR5LXVybFxuICAgICAgICBpZiAoY3JpdGVyaWEpIHtcbiAgICAgICAgICBpZiAoY3JpdGVyaWEuaGFzT3duUHJvcGVydHkoJ3AycCcpKSBzdWJzY3JpYmVNc2cuYm9keS5wMnAgPSBjcml0ZXJpYS5wMnA7XG4gICAgICAgICAgaWYgKGNyaXRlcmlhLmhhc093blByb3BlcnR5KCdzdG9yZScpKSBzdWJzY3JpYmVNc2cuYm9keS5zdG9yZSA9IGNyaXRlcmlhLnN0b3JlO1xuICAgICAgICAgIGlmIChjcml0ZXJpYS5oYXNPd25Qcm9wZXJ0eSgnc2NoZW1hJykpIHN1YnNjcmliZU1zZy5ib2R5LnNjaGVtYSA9IGNyaXRlcmlhLnNjaGVtYTtcbiAgICAgICAgICBpZiAoY3JpdGVyaWEuaGFzT3duUHJvcGVydHkoJ2lkZW50aXR5JykpIHN1YnNjcmliZU1zZy5ib2R5LmlkZW50aXR5ID0gY3JpdGVyaWEuaWRlbnRpdHk7XG4gICAgICAgICAgaWYgKGNyaXRlcmlhLmhhc093blByb3BlcnR5KCdyZXNvdXJjZScpKSBzdWJzY3JpYmVNc2cuYm9keS5yZXNvdXJjZSA9IGNyaXRlcmlhLnVybDtcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZU1zZy5ib2R5LnJlc3VtZSA9IGNyaXRlcmlhLnJlc3VtZTtcblxuICAgICAgICAvL1RPRE86IEZvciBGdXJ0aGVyIFN0dWR5XG4gICAgICAgIHZhciBtdXR1YWxBdXRoZW50aWNhdGlvbiA9IGNyaXRlcmlhLm11dHVhbDtcbiAgICAgICAgaWYgKGNyaXRlcmlhLmhhc093blByb3BlcnR5KCdtdXR1YWwnKSkgc3Vic2NyaWJlTXNnLmJvZHkubXV0dWFsQXV0aGVudGljYXRpb24gPSBtdXR1YWxBdXRoZW50aWNhdGlvbjtcblxuICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXJdIC0gc3Vic2NyaWJlIG1lc3NhZ2U6ICcsIGNyaXRlcmlhLCBzdWJzY3JpYmVNc2cpO1xuXG4gICAgICAgIC8vcmVxdWVzdCBzdWJzY3JpcHRpb25cbiAgICAgICAgLy9Qcm92aXNpb25hbCBkYXRhIGlzIGFwcGxpZWQgdG8gdGhlIERhdGFPYmplY3RPYnNlcnZlciBhZnRlciBjb25maXJtYXRpb24uIE9yIGRpc2NhcmRlZCBpZiB0aGVyZSBpcyBubyBjb25maXJtYXRpb24uXG4gICAgICAgIC8vZm9yIG1vcmUgaW5mbyBzZWUgdGhlIERhdGFQcm92aXNpb25hbCBjbGFzcyBkb2N1bWVudGF0aW9uLlxuICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHN1YnNjcmliZU1zZywgZnVuY3Rpb24gKHJlcGx5KSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyXSAtIHN1YnNjcmliZS1yZXN1bWVkLXJlc3BvbnNlOiAnLCByZXBseSk7XG5cbiAgICAgICAgICB2YXIgb2JqVVJMID0gcmVwbHkuYm9keS5yZXNvdXJjZTtcblxuICAgICAgICAgIHZhciBuZXdQcm92aXNpb25hbCA9IF90aGlzLl9wcm92aXNpb25hbHNbb2JqVVJMXTtcbiAgICAgICAgICBkZWxldGUgX3RoaXMuX3Byb3Zpc2lvbmFsc1tvYmpVUkxdO1xuICAgICAgICAgIGlmIChuZXdQcm92aXNpb25hbCkgbmV3UHJvdmlzaW9uYWwuX3JlbGVhc2VMaXN0ZW5lcnMoKTtcblxuICAgICAgICAgIGlmIChyZXBseS5ib2R5LmNvZGUgPCAyMDApIHtcbiAgICAgICAgICAgIC8vIHRvZG86IGNoZWNrIGlmIHRoaXMgaXMgbmVlZGVkIGZvciB0aGUgcmVzdW1lXG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbc3luY2hlcl0gLSByZXN1bWUgbmV3IERhdGFQcm92aXNpb25hbDogJywgcmVwbHksIG9ialVSTCk7XG4gICAgICAgICAgICBuZXdQcm92aXNpb25hbCA9IG5ldyBfRGF0YVByb3Zpc2lvbmFsMi5kZWZhdWx0KF90aGlzLl9vd25lciwgb2JqVVJMLCBfdGhpcy5fYnVzLCByZXBseS5ib2R5LmNoaWxkcmVuUmVzb3VyY2VzKTtcbiAgICAgICAgICAgIF90aGlzLl9wcm92aXNpb25hbHNbb2JqVVJMXSA9IG5ld1Byb3Zpc2lvbmFsO1xuICAgICAgICAgIH0gZWxzZSBpZiAocmVwbHkuYm9keS5jb2RlID09PSAyMDApIHtcblxuICAgICAgICAgICAgdmFyIGxpc3RPZk9ic2VydmVycyA9IHJlcGx5LmJvZHkudmFsdWU7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGluZGV4IGluIGxpc3RPZk9ic2VydmVycykge1xuXG4gICAgICAgICAgICAgIHZhciBkYXRhT2JqZWN0ID0gbGlzdE9mT2JzZXJ2ZXJzW2luZGV4XTtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1tzeW5jaGVyXSAtIFJlc3VtZSBPYmplY3QgT2JzZXJ2ZXI6ICcsIHJlcGx5LCBkYXRhT2JqZWN0LCBfdGhpcy5fcHJvdmlzaW9uYWxzKTtcblxuICAgICAgICAgICAgICBpZiAoZGF0YU9iamVjdC5jaGlsZHJlbk9iamVjdHMpIHtcbiAgICAgICAgICAgICAgICBkYXRhT2JqZWN0LmNoaWxkcmVuT2JqZWN0cyA9ICgwLCBfdXRpbHMuZGVlcENsb25lKShkYXRhT2JqZWN0LmNoaWxkcmVuT2JqZWN0cyk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBkYXRhT2JqZWN0LmRhdGEgPSAoMCwgX3V0aWxzLmRlZXBDbG9uZSkoZGF0YU9iamVjdC5kYXRhKSB8fCB7fTtcbiAgICAgICAgICAgICAgZGF0YU9iamVjdC5yZXN1bWUgPSB0cnVlO1xuICAgICAgICAgICAgICBkYXRhT2JqZWN0LnN5bmNoZXIgPSBfdGhpcztcblxuICAgICAgICAgICAgICAvL1RPRE86IG11dHVhbEF1dGhlbnRpY2F0aW9uIEZvciBGdXJ0aGVyIFN0dWR5XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbc3luY2hlci5fcmVzdW1lU3Vic2NyaWJlXSAtIGNyZWF0ZSBuZXcgZGF0YU9iamVjdDogJywgZGF0YU9iamVjdCk7XG4gICAgICAgICAgICAgIHZhciBuZXdPYmogPSBuZXcgX0RhdGFPYmplY3RPYnNlcnZlcjIuZGVmYXVsdChkYXRhT2JqZWN0KTtcblxuICAgICAgICAgICAgICBpZiAoZGF0YU9iamVjdC5jaGlsZHJlbk9iamVjdHMpIHtcbiAgICAgICAgICAgICAgICBuZXdPYmoucmVzdW1lQ2hpbGRyZW5zKGRhdGFPYmplY3QuY2hpbGRyZW5PYmplY3RzKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnW3N5bmNoZXIuX3Jlc3VtZVN1YnNjcmliZV0gLSBuZXcgZGF0YU9iamVjdCcsIG5ld09iaik7XG4gICAgICAgICAgICAgIF90aGlzLl9vYnNlcnZlcnNbbmV3T2JqLnVybF0gPSBuZXdPYmo7XG5cbiAgICAgICAgICAgICAgaWYgKF90aGlzLl9wcm92aXNpb25hbHNbbmV3T2JqLnVybF0pIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5fcHJvdmlzaW9uYWxzW25ld09iai51cmxdLmFwcGx5KG5ld09iaik7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAvL2xldHMgc3luYyB3aXRoIFJlcG9ydGVyXG4gICAgICAgICAgICAgIC8vIGl0IHdhcyBjb21tZW50ZWQgdG8gbGV0IGh5cGVydGllcyBkZWNpZGUgd2hlbiB0byBzeW5jXG4gICAgICAgICAgICAgIC8vbmV3T2JqLnN5bmMoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVzb2x2ZShfdGhpcy5fb2JzZXJ2ZXJzKTtcblxuICAgICAgICAgICAgaWYgKF90aGlzMy5fb25PYnNlcnZlcnNSZXN1bWUpIF90aGlzMy5fb25PYnNlcnZlcnNSZXN1bWUoX3RoaXMuX29ic2VydmVycyk7XG4gICAgICAgICAgfSBlbHNlIGlmIChyZXBseS5ib2R5LmNvZGUgPT09IDQwNCkge1xuICAgICAgICAgICAgcmVzb2x2ZSh7fSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlamVjdChyZXBseS5ib2R5LmRlc2MpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBhIGxvY2FsIHJ1bnRpbWUgUmVwb3J0ZXJPYmplY3QgLT4gX29uUmVtb3RlU3Vic2NyaWJlXG5cbiAgfSwge1xuICAgIGtleTogJ19vbkZvcndhcmQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfb25Gb3J3YXJkKG1zZykge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgdmFyIHJlcG9ydGVyID0gX3RoaXMuX3JlcG9ydGVyc1ttc2cuYm9keS50b107XG4gICAgICByZXBvcnRlci5fb25Gb3J3YXJkKG1zZyk7XG4gICAgfVxuXG4gICAgLy9GTE9XLUlOOiBtZXNzYWdlIHJlY2VpdmVkIGZyb20gYSByZW1vdGUgU3luY2hlciAtPiBjcmVhdGUgKHRoaXMgaXMgYWN0dWFsbHkgYW4gaW52aXRhdGlvbiB0byBzdWJzY3JpYmUpXG5cbiAgfSwge1xuICAgIGtleTogJ19vblJlbW90ZUNyZWF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9vblJlbW90ZUNyZWF0ZShtc2cpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICB2YXIgcmVzb3VyY2UgPSBtc2cuZnJvbS5zbGljZSgwLCAtMTMpOyAvL3JlbW92ZSBcIi9zdWJzY3JpcHRpb25cIiBmcm9tIHRoZSBVUkxcbiAgICAgIHZhciBkaXZpZGVkVVJMID0gKDAsIF91dGlscy5kaXZpZGVVUkwpKHJlc291cmNlKTtcbiAgICAgIHZhciBkb21haW4gPSBkaXZpZGVkVVJMLmRvbWFpbjtcblxuICAgICAgdmFyIGV2ZW50ID0ge1xuICAgICAgICB0eXBlOiBtc2cudHlwZSxcbiAgICAgICAgZnJvbTogbXNnLmJvZHkuc291cmNlLFxuICAgICAgICB1cmw6IHJlc291cmNlLFxuICAgICAgICBkb21haW46IGRvbWFpbixcbiAgICAgICAgc2NoZW1hOiBtc2cuYm9keS5zY2hlbWEsXG4gICAgICAgIHZhbHVlOiBtc2cuYm9keS52YWx1ZSxcbiAgICAgICAgaWRlbnRpdHk6IG1zZy5ib2R5LmlkZW50aXR5LFxuXG4gICAgICAgIGFjazogZnVuY3Rpb24gYWNrKHR5cGUpIHtcbiAgICAgICAgICB2YXIgbFR5cGUgPSAyMDA7XG4gICAgICAgICAgaWYgKHR5cGUpIHtcbiAgICAgICAgICAgIGxUeXBlID0gdHlwZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvL3NlbmQgYWNrIHJlc3BvbnNlIG1lc3NhZ2VcbiAgICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgIGlkOiBtc2cuaWQsIHR5cGU6ICdyZXNwb25zZScsIGZyb206IG1zZy50bywgdG86IG1zZy5mcm9tLFxuICAgICAgICAgICAgYm9keTogeyBjb2RlOiBsVHlwZSB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIGlmIChfdGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyKSB7XG4gICAgICAgIGNvbnNvbGUuaW5mbygnW1N5bmNoZXJdIE5PVElGSUNBVElPTi1FVkVOVDogJywgZXZlbnQpO1xuICAgICAgICBfdGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBhIHJlbW90ZSBEYXRhT2JqZWN0UmVwb3J0ZXIgLT4gZGVsZXRlXG5cbiAgfSwge1xuICAgIGtleTogJ19vblJlbW90ZURlbGV0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9vblJlbW90ZURlbGV0ZShtc2cpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIC8vcmVtb3ZlIFwiL3N1YnNjcmlwdGlvblwiIGZyb20gdGhlIFVSTFxuICAgICAgdmFyIHJlc291cmNlID0gbXNnLmJvZHkucmVzb3VyY2U7XG5cbiAgICAgIHZhciBvYmplY3QgPSBfdGhpcy5fb2JzZXJ2ZXJzW3Jlc291cmNlXTtcblxuICAgICAgdmFyIHVuc3Vic2NyaWJlID0ge1xuICAgICAgICBmcm9tOiBfdGhpcy5vd25lcixcbiAgICAgICAgdG86IF90aGlzLl9zdWJVUkwsXG4gICAgICAgIGlkOiBtc2cuaWQsXG4gICAgICAgIHR5cGU6ICd1bnN1YnNjcmliZScsXG4gICAgICAgIGJvZHk6IHsgcmVzb3VyY2U6IG1zZy5ib2R5LnJlc291cmNlIH1cbiAgICAgIH07XG5cbiAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2UodW5zdWJzY3JpYmUpO1xuXG4gICAgICBkZWxldGUgX3RoaXMuX29ic2VydmVyc1tyZXNvdXJjZV07XG5cbiAgICAgIGlmIChvYmplY3QpIHtcbiAgICAgICAgdmFyIGV2ZW50ID0ge1xuICAgICAgICAgIHR5cGU6IG1zZy50eXBlLFxuICAgICAgICAgIHVybDogcmVzb3VyY2UsXG4gICAgICAgICAgaWRlbnRpdHk6IG1zZy5ib2R5LmlkZW50aXR5LFxuXG4gICAgICAgICAgYWNrOiBmdW5jdGlvbiBhY2sodHlwZSkge1xuICAgICAgICAgICAgdmFyIGxUeXBlID0gMjAwO1xuICAgICAgICAgICAgaWYgKHR5cGUpIHtcbiAgICAgICAgICAgICAgbFR5cGUgPSB0eXBlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvL1RPRE86IGFueSBvdGhlciBkaWZmZXJlbnQgb3B0aW9ucyBmb3IgdGhlIHJlbGVhc2UgcHJvY2VzcywgbGlrZSBhY2NlcHQgYnV0IG5vciByZWxlYXNlIGxvY2FsP1xuICAgICAgICAgICAgaWYgKGxUeXBlID09PSAyMDApIHtcbiAgICAgICAgICAgICAgb2JqZWN0LmRlbGV0ZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvL3NlbmQgYWNrIHJlc3BvbnNlIG1lc3NhZ2VcbiAgICAgICAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcbiAgICAgICAgICAgICAgYm9keTogeyBjb2RlOiBsVHlwZSwgc291cmNlOiBfdGhpcy5fb3duZXIgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChfdGhpcy5fb25Ob3RpZmljYXRpb25IYW5kbGVyKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ05PVElGSUNBVElPTi1FVkVOVDogJywgZXZlbnQpO1xuICAgICAgICAgIF90aGlzLl9vbk5vdGlmaWNhdGlvbkhhbmRsZXIoZXZlbnQpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfdGhpcy5fYnVzLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICBpZDogbXNnLmlkLCB0eXBlOiAncmVzcG9uc2UnLCBmcm9tOiBtc2cudG8sIHRvOiBtc2cuZnJvbSxcbiAgICAgICAgICBib2R5OiB7IGNvZGU6IDQwNCwgc291cmNlOiBfdGhpcy5fb3duZXIgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjbG9zZSBldmVudCByZWNlaXZlZCBmcm9tIHJ1bnRpbWUgcmVnaXN0cnlcblxuICB9LCB7XG4gICAga2V5OiAnX29uRXhlY3V0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9vbkV4ZWN1dGUobXNnKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgcmVwbHkgPSB7XG4gICAgICAgIGlkOiBtc2cuaWQsIHR5cGU6ICdyZXNwb25zZScsIGZyb206IG1zZy50bywgdG86IG1zZy5mcm9tLFxuICAgICAgICBib2R5OiB7IGNvZGU6IDIwMCB9XG4gICAgICB9O1xuXG4gICAgICBpZiAoKG1zZy5mcm9tID09PSBfdGhpcy5fcnVudGltZVVybCArICcvcmVnaXN0cnkvJyB8fCBtc2cuZnJvbSA9PT0gX3RoaXMuX3J1bnRpbWVVcmwgKyAnL3JlZ2lzdHJ5JykgJiYgbXNnLmJvZHkgJiYgbXNnLmJvZHkubWV0aG9kICYmIG1zZy5ib2R5Lm1ldGhvZCA9PT0gJ2Nsb3NlJyAmJiBfdGhpcy5fb25DbG9zZSkge1xuICAgICAgICB2YXIgZXZlbnQgPSB7XG4gICAgICAgICAgdHlwZTogJ2Nsb3NlJyxcblxuICAgICAgICAgIGFjazogZnVuY3Rpb24gYWNrKHR5cGUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlKSB7XG4gICAgICAgICAgICAgIHJlcGx5LmJvZHkuY29kZSA9IHR5cGU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vc2VuZCBhY2sgcmVzcG9uc2UgbWVzc2FnZVxuICAgICAgICAgICAgX3RoaXMuX2J1cy5wb3N0TWVzc2FnZShyZXBseSk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnNvbGUuaW5mbygnW1N5bmNoZXJdIENsb3NlLUVWRU5UOiAnLCBldmVudCk7XG4gICAgICAgIF90aGlzLl9vbkNsb3NlKGV2ZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF90aGlzLl9idXMucG9zdE1lc3NhZ2UocmVwbHkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxyXG4gICAgKiBDYWxsYmFjayBzeXN0ZW0gdG8gdHJpZ2dlciB0aGUgcmVzdW1lZCByZXBvcnRlcnNcclxuICAgICogQHBhcmFtICB7RnVuY3Rpb259IGNhbGxiYWNrIC0gZnVuY3Rpb24gY2FsbGJhY2sgd2hpY2ggd2lsbCBiZSBpbnZva2VkXHJcbiAgICAqIEByZXR1cm4ge09iamVjdDxVUkwsIERhdGFPYmplY3RSZXBvcnRlcj59IFJldHVybiBvbmUgb2JqZWN0IHdpdGggYWxsIHJlc3VtZWQgcmVwb3J0ZXJzO1xyXG4gICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnb25SZXBvcnRlcnNSZXN1bWUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvblJlcG9ydGVyc1Jlc3VtZShjYWxsYmFjaykge1xuICAgICAgdGhpcy5fb25SZXBvcnRlcnNSZXN1bWUgPSBjYWxsYmFjaztcbiAgICB9XG5cbiAgICAvKipcclxuICAgICogQ2FsbGJhY2sgc3lzdGVtIHRvIHRyaWdnZXIgdGhlIHJlc3VtZWQgb2JzZXJ2ZXJzXHJcbiAgICAqIEBwYXJhbSAge0Z1bmN0aW9ufSBjYWxsYmFjayAtIGZ1bmN0aW9uIGNhbGxiYWNrIHdoaWNoIHdpbGwgYmUgaW52b2tlZFxyXG4gICAgKiBAcmV0dXJuIHtPYmplY3Q8VVJMLCBEYXRhT2JqZWN0T2JzZXJ2ZXI+fSBSZXR1cm4gb25lIG9iamVjdCB3aXRoIGFsbCByZXN1bWVkIG9ic2VydmVycztcclxuICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ29uT2JzZXJ2ZXJzUmVzdW1lJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25PYnNlcnZlcnNSZXN1bWUoY2FsbGJhY2spIHtcbiAgICAgIHRoaXMuX29uT2JzZXJ2ZXJzUmVzdW1lID0gY2FsbGJhY2s7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnb3duZXInLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX293bmVyO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgKiBBbGwgb3duZWQgcmVwb3J0ZXJzLCB0aGUgb25lcyB0aGF0IHdlcmUgY3JlYXRlZCBieSBhIGNyZWF0ZVxyXG4gICAgKiBAdHlwZSB7T2JqZWN0PFVSTCwgRGF0YU9iamVjdFJlcG9ydGVyPn1cclxuICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ3JlcG9ydGVycycsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcmVwb3J0ZXJzO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgKiBBbGwgb3duZWQgb2JzZXJ2ZXJzLCB0aGUgb25lcyB0aGF0IHdlcmUgY3JlYXRlZCBieSBhIGxvY2FsIHN1YnNjcmlwdGlvblxyXG4gICAgKiBAdHlwZSB7T2JqZWN0PFVSTCwgRGF0YU9iamVjdE9ic2VydmVyPn1cclxuICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ29ic2VydmVycycsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fb2JzZXJ2ZXJzO1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gU3luY2hlcjtcbn0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gU3luY2hlcjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG4vKioqLyB9KSxcbi8qIDEzNCAqLyxcbi8qIDEzNSAqLyxcbi8qIDEzNiAqLyxcbi8qIDEzNyAqLyxcbi8qIDEzOCAqLyxcbi8qIDEzOSAqLyxcbi8qIDE0MCAqLyxcbi8qIDE0MSAqLyxcbi8qIDE0MiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5EYXRhT2JqZWN0T2JzZXJ2ZXIgPSBleHBvcnRzLkRhdGFPYmplY3RSZXBvcnRlciA9IGV4cG9ydHMuU3luY2hlciA9IHVuZGVmaW5lZDtcblxudmFyIF9TeW5jaGVyID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMzMpO1xuXG52YXIgX1N5bmNoZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfU3luY2hlcik7XG5cbnZhciBfRGF0YU9iamVjdFJlcG9ydGVyID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMjIpO1xuXG52YXIgX0RhdGFPYmplY3RSZXBvcnRlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9EYXRhT2JqZWN0UmVwb3J0ZXIpO1xuXG52YXIgX0RhdGFPYmplY3RPYnNlcnZlciA9IF9fd2VicGFja19yZXF1aXJlX18oMTIxKTtcblxudmFyIF9EYXRhT2JqZWN0T2JzZXJ2ZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfRGF0YU9iamVjdE9ic2VydmVyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5TeW5jaGVyID0gX1N5bmNoZXIyLmRlZmF1bHQ7XG5leHBvcnRzLkRhdGFPYmplY3RSZXBvcnRlciA9IF9EYXRhT2JqZWN0UmVwb3J0ZXIyLmRlZmF1bHQ7XG5leHBvcnRzLkRhdGFPYmplY3RPYnNlcnZlciA9IF9EYXRhT2JqZWN0T2JzZXJ2ZXIyLmRlZmF1bHQ7XG5cbi8qKiovIH0pLFxuLyogMTQzICovLFxuLyogMTQ0ICovLFxuLyogMTQ1ICovLFxuLyogMTQ2ICovLFxuLyogMTQ3ICovLFxuLyogMTQ4ICovLFxuLyogMTQ5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY2xhc3NDYWxsQ2hlY2syID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcblxudmFyIF9jbGFzc0NhbGxDaGVjazMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO1xuXG52YXIgX2NyZWF0ZUNsYXNzMiA9IF9fd2VicGFja19yZXF1aXJlX18oMTApO1xuXG52YXIgX2NyZWF0ZUNsYXNzMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7XG5cbnZhciBfUHJveHlPYmplY3QgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyNCk7XG5cbnZhciBfUHJveHlPYmplY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUHJveHlPYmplY3QpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vL2ltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzLmpzJztcblxuLyoqXHJcbiAqIFRoZSBjbGFzcyByZXR1cm5lZCBmcm9tIHRoZSBEYXRhT2JqZWN0IGFkZENoaWxkcmVuIGNhbGwgb3IgZnJvbSBvbkFkZENoaWxkcmVuIGlmIHJlbW90ZWx5IGNyZWF0ZWQuXHJcbiAqL1xudmFyIERhdGFPYmplY3RDaGlsZCAvKiBpbXBsZW1lbnRzIFN5bmNTdGF0dXMgKi8gPSBmdW5jdGlvbiAoKSB7XG4gIC8qIHByaXZhdGVcclxuICAgIC0tLS1ldmVudCBoYW5kbGVycy0tLS1cclxuICBfb25SZXNwb25zZUhhbmRsZXI6IChldmVudCkgPT4gdm9pZFxyXG4gICovXG5cbiAgLyoqXHJcbiAgICogQGlnbm9yZVxyXG4gICAqIFNob3VsZCBub3QgYmUgdXNlZCBkaXJlY3RseSBieSBIeXBlcnRpZXMuIEl0J3MgY2FsbGVkIGJ5IHRoZSBEYXRhT2JqZWN0LmFkZENoaWxkcmVuXHJcbiAgICovXG4gIGZ1bmN0aW9uIERhdGFPYmplY3RDaGlsZChpbnB1dCkge1xuICAgICgwLCBfY2xhc3NDYWxsQ2hlY2szLmRlZmF1bHQpKHRoaXMsIERhdGFPYmplY3RDaGlsZCk7XG5cbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgZnVuY3Rpb24gdGhyb3dNYW5kYXRvcnlQYXJtTWlzc2luZ0Vycm9yKHBhcikge1xuICAgICAgdGhyb3cgJ1tEYXRhT2JqZWN0Q2hpbGRdICcgKyBwYXIgKyAnIG1hbmRhdG9yeSBwYXJhbWV0ZXIgaXMgbWlzc2luZyc7XG4gICAgfVxuXG4gICAgaW5wdXQucGFyZW50ID8gX3RoaXMuX3BhcmVudCA9IGlucHV0LnBhcmVudCA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcigncGFyZW50Jyk7XG4gICAgaW5wdXQudXJsID8gX3RoaXMuX3VybCA9IGlucHV0LnVybCA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcigndXJsJyk7XG4gICAgaW5wdXQuY3JlYXRlZCA/IF90aGlzLl9jcmVhdGVkID0gaW5wdXQuY3JlYXRlZCA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcignY3JlYXRlZCcpO1xuICAgIGlucHV0LnJlcG9ydGVyID8gX3RoaXMuX3JlcG9ydGVyID0gaW5wdXQucmVwb3J0ZXIgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3JlcG9ydGVyJyk7XG4gICAgaW5wdXQucnVudGltZSA/IF90aGlzLl9ydW50aW1lID0gaW5wdXQucnVudGltZSA6IHRocm93TWFuZGF0b3J5UGFybU1pc3NpbmdFcnJvcigncnVudGltZScpO1xuICAgIGlucHV0LnNjaGVtYSA/IF90aGlzLl9zY2hlbWEgPSBpbnB1dC5zY2hlbWEgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3NjaGVtYScpO1xuICAgIGlucHV0LnBhcmVudE9iamVjdCA/IF90aGlzLl9wYXJlbnRPYmplY3QgPSBpbnB1dC5wYXJlbnRPYmplY3QgOiB0aHJvd01hbmRhdG9yeVBhcm1NaXNzaW5nRXJyb3IoJ3BhcmVudE9iamVjdCcpO1xuXG4gICAgaWYgKGlucHV0Lm5hbWUpIF90aGlzLl9uYW1lID0gaW5wdXQubmFtZTtcbiAgICBpZiAoaW5wdXQuZGVzY3JpcHRpb24pIF90aGlzLl9kZXNjcmlwdGlvbiA9IGlucHV0LmRlc2NyaXB0aW9uO1xuICAgIGlmIChpbnB1dC50YWdzKSBfdGhpcy5fdGFncyA9IGlucHV0LnRhZ3M7XG4gICAgaWYgKGlucHV0LnJlc291cmNlcykgX3RoaXMuX3Jlc291cmNlcyA9IGlucHV0LnJlc291cmNlcztcbiAgICBpZiAoaW5wdXQub2JzZXJ2ZXJTdG9yYWdlKSBfdGhpcy5fb2JzZXJ2ZXJTdG9yYWdlID0gaW5wdXQub2JzZXJ2ZXJTdG9yYWdlO1xuICAgIGlmIChpbnB1dC5wdWJsaWNPYnNlcnZhdGlvbikgX3RoaXMuX3B1YmxpY09ic2VydmF0aW9uID0gaW5wdXQucHVibGljT2JzZXJ2YXRpb247XG5cbiAgICBpZiAoaW5wdXQuZGF0YSkge1xuICAgICAgX3RoaXMuX3N5bmNPYmogPSBuZXcgX1Byb3h5T2JqZWN0Mi5kZWZhdWx0KGlucHV0LmRhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfdGhpcy5fc3luY09iaiA9IG5ldyBfUHJveHlPYmplY3QyLmRlZmF1bHQoe30pO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdENoaWxkIC0gIENvbnN0cnVjdG9yXSAtICcsIF90aGlzLl9zeW5jT2JqKTtcblxuICAgIF90aGlzLl9idXMgPSBfdGhpcy5fcGFyZW50T2JqZWN0Ll9idXM7XG4gICAgX3RoaXMuX293bmVyID0gX3RoaXMuX3BhcmVudE9iamVjdC5fb3duZXI7XG5cbiAgICBfdGhpcy5fYWxsb2NhdGVMaXN0ZW5lcnMoKTtcblxuICAgIF90aGlzLl9tZXRhZGF0YSA9IGlucHV0O1xuXG4gICAgLy8gZGVsZXRlIF90aGlzLl9tZXRhZGF0YS5kYXRhO1xuICAgIGRlbGV0ZSBfdGhpcy5fbWV0YWRhdGEucGFyZW50T2JqZWN0O1xuICB9XG5cbiAgKDAsIF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoRGF0YU9iamVjdENoaWxkLCBbe1xuICAgIGtleTogJ19hbGxvY2F0ZUxpc3RlbmVycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9hbGxvY2F0ZUxpc3RlbmVycygpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIC8vdGhpcyBpcyBvbmx5IG5lZWRlZCBmb3IgY2hpbGRyZW4gcmVwb3J0ZXJzXG4gICAgICBpZiAoX3RoaXMuX3JlcG9ydGVyID09PSBfdGhpcy5fb3duZXIpIHtcbiAgICAgICAgX3RoaXMuX2xpc3RlbmVyID0gX3RoaXMuX2J1cy5hZGRMaXN0ZW5lcihfdGhpcy5fcmVwb3J0ZXIsIGZ1bmN0aW9uIChtc2cpIHtcbiAgICAgICAgICBpZiAobXNnLnR5cGUgPT09ICdyZXNwb25zZScgJiYgbXNnLmlkID09PSBfdGhpcy5fbXNnSWQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEYXRhT2JqZWN0Q2hpbGQub25SZXNwb25zZTonLCBtc2cpO1xuICAgICAgICAgICAgX3RoaXMuX29uUmVzcG9uc2UobXNnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ19yZWxlYXNlTGlzdGVuZXJzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX3JlbGVhc2VMaXN0ZW5lcnMoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBpZiAoX3RoaXMuX2xpc3RlbmVyKSB7XG4gICAgICAgIF90aGlzLl9saXN0ZW5lci5yZW1vdmUoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcclxuICAgICAqIFJlbGVhc2UgYW5kIGRlbGV0ZSBvYmplY3QgZGF0YVxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2RlbGV0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9kZWxldGUoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBfdGhpcy5fcmVsZWFzZUxpc3RlbmVycygpO1xuXG4gICAgICAvL1RPRE86IHNlbmQgZGVsZXRlIG1lc3NhZ2UgP1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgICogQWxsIE1ldGFkYXRhIGFib3V0IHRoZSBDaGlsZCBEYXRhIE9iamVjdFxyXG4gICAgICogQHR5cGUge09iamVjdH0gLVxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ29uQ2hhbmdlJyxcblxuXG4gICAgLyoqXHJcbiAgICAgKiBSZWdpc3RlciB0aGUgY2hhbmdlIGxpc3RlbmVycyBzZW50IGJ5IHRoZSByZXBvcnRlciBjaGlsZFxyXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbihldmVudDogTXNnRXZlbnQpfSBjYWxsYmFja1xyXG4gICAgICovXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uQ2hhbmdlKGNhbGxiYWNrKSB7XG4gICAgICB0aGlzLl9zeW5jT2JqLm9ic2VydmUoZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbRGF0YU9iamVjdENoaWxkIC0gb2JzZXJ2ZXJdIC0gJywgZXZlbnQpO1xuICAgICAgICBjYWxsYmFjayhldmVudCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcclxuICAgICAqIFNldHVwIHRoZSBjYWxsYmFjayB0byBwcm9jZXNzIHJlc3BvbnNlIG5vdGlmaWNhdGlvbnMgb2YgdGhlIGNyZWF0ZXNcclxuICAgICAqIEBwYXJhbSB7ZnVuY3Rpb24oZXZlbnQ6IE1zZ0V2ZW50KX0gY2FsbGJhY2tcclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdvblJlc3BvbnNlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25SZXNwb25zZShjYWxsYmFjaykge1xuICAgICAgdGhpcy5fb25SZXNwb25zZUhhbmRsZXIgPSBjYWxsYmFjaztcbiAgICB9XG5cbiAgICAvL0ZMT1ctSU46IG1lc3NhZ2UgcmVjZWl2ZWQgZnJvbSBhIHJlbW90ZSBEYXRhT2JqZWN0IC0+IF9vbkNoaWxkQ3JlYXRlXG5cbiAgfSwge1xuICAgIGtleTogJ19vblJlc3BvbnNlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX29uUmVzcG9uc2UobXNnKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgZXZlbnQgPSB7XG4gICAgICAgIHR5cGU6IG1zZy50eXBlLFxuICAgICAgICB1cmw6IG1zZy5ib2R5LnNvdXJjZSxcbiAgICAgICAgY29kZTogbXNnLmJvZHkuY29kZVxuICAgICAgfTtcblxuICAgICAgaWYgKF90aGlzLl9vblJlc3BvbnNlSGFuZGxlcikge1xuICAgICAgICBfdGhpcy5fb25SZXNwb25zZUhhbmRsZXIoZXZlbnQpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ21ldGFkYXRhJyxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB0aGlzLl9tZXRhZGF0YTtcbiAgICB9XG5cbiAgICAvKipcclxuICAgICAqIENoaWxkcmVuIElEIGdlbmVyYXRlZCBvbiBhZGRDaGlsZHJlbi4gVW5pcXVlIGlkZW50aWZpZXJcclxuICAgICAqIEB0eXBlIHtVUkx9IC0gVVJMIG9mIHRoZSBmb3JtYXQgPEh5cGVydHlVUkw+IzxudW1lcmljLXNlcXVlbmNlPlxyXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogJ2NoaWxkSWQnLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2NoaWxkSWQ7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBEYXRhIFN0cnVjdHVyZSB0byBiZSBzeW5jaHJvbml6ZWQuXHJcbiAgICAgKiBAdHlwZSB7SlNPTn0gLSBKU09OIHN0cnVjdHVyZSB0aGF0IHNob3VsZCBmb2xsb3cgdGhlIGRlZmluZWQgc2NoZW1hLCBpZiBhbnkuXHJcbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiAnZGF0YScsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fc3luY09iai5kYXRhO1xuICAgIH1cblxuICAgIC8qKlxyXG4gICAgICogU2V0IGZvciB0aGlzIGRhdGFPYmplY3RDaGlsZCBhbiBpZGVudGl0eVxyXG4gICAgICogQG1ldGhvZCBpZGVudGl0eVxyXG4gICAgICogQHBhcmFtICB7SWRlbnRpdHl9IGlkZW50aXR5IGlkZW50aXR5IGZyb20gd2hvIGNyZWF0ZWQgdGhlIG1lc3NhZ2VcclxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6ICdpZGVudGl0eScsXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQoaWRlbnRpdHkpIHtcbiAgICAgIHRoaXMuX2lkZW50aXR5ID0gaWRlbnRpdHk7XG4gICAgfVxuXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgZm9yIHRoaXMgZGF0YU9iamVjdENoaWxkIGFuIGlkZW50aXR5XHJcbiAgICAgKiBAbWV0aG9kIGlkZW50aXR5XHJcbiAgICAgKiBAcmV0dXJuIHtJZGVudGl0eX0gaWRlbnRpdHkgZnJvbSB3aG8gY3JlYXRlZCB0aGUgbWVzc2FnZVxyXG4gICAgICovXG4gICAgLFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2lkZW50aXR5O1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gRGF0YU9iamVjdENoaWxkO1xufSgpOyAvKipcclxuICAgICAqIENvcHlyaWdodCAyMDE2IFBUIElub3Zhw6fDo28gZSBTaXN0ZW1hcyBTQVxyXG4gICAgICogQ29weXJpZ2h0IDIwMTYgSU5FU0MtSURcclxuICAgICAqIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxyXG4gICAgICogQ29weXJpZ2h0IDIwMTYgRlJBVU5IT0ZFUi1HRVNFTExTQ0hBRlQgWlVSIEZPRVJERVJVTkcgREVSIEFOR0VXQU5EVEVOIEZPUlNDSFVORyBFLlZcclxuICAgICAqIENvcHlyaWdodCAyMDE2IE9SQU5HRSBTQVxyXG4gICAgICogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xyXG4gICAgICogQ29weXJpZ2h0IDIwMTYgQXBpemVlXHJcbiAgICAgKiBDb3B5cmlnaHQgMjAxNiBURUNITklTQ0hFIFVOSVZFUlNJVEFUIEJFUkxJTlxyXG4gICAgICpcclxuICAgICAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAgICAgKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAgICAgKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICAgICAqXHJcbiAgICAgKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gICAgICpcclxuICAgICAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICAgICAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICAgICAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gICAgICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gICAgICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAgICAgKiovXG5cbmV4cG9ydHMuZGVmYXVsdCA9IERhdGFPYmplY3RDaGlsZDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG4vKioqLyB9KSxcbi8qIDE1MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NsYXNzQ2FsbENoZWNrMiA9IF9fd2VicGFja19yZXF1aXJlX18oOCk7XG5cbnZhciBfY2xhc3NDYWxsQ2hlY2szID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xhc3NDYWxsQ2hlY2syKTtcblxudmFyIF9jcmVhdGVDbGFzczIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTtcblxudmFyIF9jcmVhdGVDbGFzczMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jcmVhdGVDbGFzczIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcclxuKiBDb3B5cmlnaHQgMjAxNiBQVCBJbm92YcOnw6NvIGUgU2lzdGVtYXMgU0FcclxuKiBDb3B5cmlnaHQgMjAxNiBJTkVTQy1JRFxyXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxyXG4qIENvcHlyaWdodCAyMDE2IEZSQVVOSE9GRVItR0VTRUxMU0NIQUZUIFpVUiBGT0VSREVSVU5HIERFUiBBTkdFV0FORFRFTiBGT1JTQ0hVTkcgRS5WXHJcbiogQ29weXJpZ2h0IDIwMTYgT1JBTkdFIFNBXHJcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xyXG4qIENvcHlyaWdodCAyMDE2IEFwaXplZVxyXG4qIENvcHlyaWdodCAyMDE2IFRFQ0hOSVNDSEUgVU5JVkVSU0lUQVQgQkVSTElOXHJcbipcclxuKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4qIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuKlxyXG4qICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbipcclxuKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4qIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuKiovXG5cbi8qKlxyXG4gKiBAYWNjZXNzIHByaXZhdGVcclxuICogVGhpcyBjbGFzcyBpcyByZXNwb25zaWJsZSBmb3IgY29sbGVjdGluZyBkZWx0YSBjaGFuZ2VzIGluIHJlbW90ZSBvYmplY3RzLCBiZWZvcmUgdGhlIHJlc3BvbnNlIG9mIHN1YnNjcmlwdGlvbiByZWFjaCB0aGUgb2JzZXJ2ZXIuXHJcbiAqIEl0J3MgdXNlZCBpbiBTeW5jaGVyIC0+IHN1YnNjcmliZS4gVGhlIGZsb3cgaXMgZGVmaW5lZCBhczpcclxuICogMS4gKG9ic2VydmVyKSAtLXN1YnNjcmliZS0tPiAocmVwb3J0ZXIpXHJcbiAqIDIuIChvYnNlcnZlcikgPC0tZGVsdGEgdXBkYXRlcy0tIChyZXBvcnRlcilcclxuICogMy4gKG9ic2VydmVyKSA8LS1zdWJzY3JpYmUgcmVzcG9uc2UtLSAocmVwb3J0ZXIpXHJcbiAqIFRoaXMgbWVhbnMgdGhhdCB0aGVyZSBjb3VsZCBiZSBkZWx0YSB1cGRhdGVzIHRyYW5zZmVycmVkIGJlZm9yZSB0aGUgc3Vic2NyaXB0aW9uIGNvbmZpcm1hdGlvbi5cclxuICogU2luY2UgdGhlcmUgaXMgbm8gRGF0YU9iamVjdE9ic2VydmVyIGJlZm9yZSB0aGUgdWJzY3JpcHRpb24gY29uZmlybWF0aW9uLCB0aGVyZSBzaG91bGQgYmUgc29tZSBvdGhlciBvYmplY3QgY29sbGVjdGluZyB0aGUgdXBkYXRlcy5cclxuICogUHJvdmlzaW9uYWwgZGF0YSBpcyBhcHBsaWVkIHRvIHRoZSBEYXRhT2JqZWN0T2JzZXJ2ZXIgYWZ0ZXIgY29uZmlybWF0aW9uLiBPciBkaXNjYXJkZWQgaWYgdGhlcmUgaXMgbm8gY29uZmlybWF0aW9uLlxyXG4gKi9cbnZhciBEYXRhUHJvdmlzaW9uYWwgPSBmdW5jdGlvbiAoKSB7XG4gIC8qIHByaXZhdGVcclxuICBfY2hpbGRyZW5MaXN0ZW5lcnM6IFtNc2dMaXN0ZW5lcl1cclxuICBfbGlzdGVuZXI6IE1zZ0xpc3RlbmVyXHJcbiAgICBfY2hhbmdlczogW11cclxuICAqL1xuXG4gIGZ1bmN0aW9uIERhdGFQcm92aXNpb25hbChvd25lciwgdXJsLCBidXMsIGNoaWxkcmVuKSB7XG4gICAgKDAsIF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcywgRGF0YVByb3Zpc2lvbmFsKTtcblxuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfdGhpcy5fb3duZXIgPSBvd25lcjtcbiAgICBfdGhpcy5fdXJsID0gdXJsO1xuICAgIF90aGlzLl9idXMgPSBidXM7XG4gICAgX3RoaXMuX2NoaWxkcmVuID0gY2hpbGRyZW47XG5cbiAgICBfdGhpcy5fY2hhbmdlcyA9IFtdO1xuICAgIF90aGlzLl9hbGxvY2F0ZUxpc3RlbmVycygpO1xuICB9XG5cbiAgKDAsIF9jcmVhdGVDbGFzczMuZGVmYXVsdCkoRGF0YVByb3Zpc2lvbmFsLCBbe1xuICAgIGtleTogJ19hbGxvY2F0ZUxpc3RlbmVycycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9hbGxvY2F0ZUxpc3RlbmVycygpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIF90aGlzLl9saXN0ZW5lciA9IF90aGlzLl9idXMuYWRkTGlzdGVuZXIoX3RoaXMuX3VybCwgZnVuY3Rpb24gKG1zZykge1xuICAgICAgICBjb25zb2xlLmxvZygnRGF0YVByb3Zpc2lvbmFsLScgKyBfdGhpcy5fdXJsICsgJy1SQ1Y6ICcsIG1zZyk7XG4gICAgICAgIF90aGlzLl9jaGFuZ2VzLnB1c2gobXNnKTtcbiAgICAgIH0pO1xuXG4gICAgICAvKlxyXG4gICAgICBfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMgPSBbXTtcclxuICAgICAgaWYgKF90aGlzLl9jaGlsZHJlbikge1xyXG4gICAgICAgIGxldCBjaGlsZEJhc2VVUkwgPSB1cmwgKyAnL2NoaWxkcmVuLyc7XHJcbiAgICAgICAgX3RoaXMuX2NoaWxkcmVuLmZvckVhY2goKGNoaWxkKSA9PiB7XHJcbiAgICAgICAgICBsZXQgY2hpbGRVUkwgPSBjaGlsZEJhc2VVUkwgKyBjaGlsZDtcclxuICAgICAgICAgIGxldCBsaXN0ZW5lciA9IF90aGlzLl9idXMuYWRkTGlzdGVuZXIoY2hpbGRVUkwsIChtc2cpID0+IHtcclxuICAgICAgICAgICAgLy9pZ25vcmUgbXNnIHNlbnQgYnkgaGltc2VsZlxyXG4gICAgICAgICAgICBpZiAobXNnLmZyb20gIT09IG93bmVyKSB7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2cobXNnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIF90aGlzLl9jaGlsZHJlbkxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSovXG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnX3JlbGVhc2VMaXN0ZW5lcnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfcmVsZWFzZUxpc3RlbmVycygpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIF90aGlzLl9saXN0ZW5lci5yZW1vdmUoKTtcblxuICAgICAgLypfdGhpcy5fY2hpbGRyZW5MaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcclxuICAgICAgICBsaXN0ZW5lci5yZW1vdmUoKTtcclxuICAgICAgfSk7Ki9cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdhcHBseScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFwcGx5KG9ic2VydmVyKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgX3RoaXMuX2NoYW5nZXMuZm9yRWFjaChmdW5jdGlvbiAoY2hhbmdlKSB7XG4gICAgICAgIG9ic2VydmVyLl9jaGFuZ2VPYmplY3Qob2JzZXJ2ZXIuX3N5bmNPYmosIGNoYW5nZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjaGlsZHJlbicsXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fY2hpbGRyZW47XG4gICAgfVxuICB9XSk7XG4gIHJldHVybiBEYXRhUHJvdmlzaW9uYWw7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IERhdGFQcm92aXNpb25hbDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG4vKioqLyB9KSxcbi8qIDE1MSAqLyxcbi8qIDE1MiAqLyxcbi8qIDE1MyAqLyxcbi8qIDE1NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IF9fd2VicGFja19yZXF1aXJlX18oMTYxKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG4vKioqLyB9KSxcbi8qIDE1NSAqLyxcbi8qIDE1NiAqLyxcbi8qIDE1NyAqLyxcbi8qIDE1OCAqLyxcbi8qIDE1OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE2NSk7XG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMCkuT2JqZWN0LmFzc2lnbjtcblxuLyoqKi8gfSksXG4vKiAxNjAgKi8sXG4vKiAxNjEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuX193ZWJwYWNrX3JlcXVpcmVfXygxNjcpO1xudmFyICRPYmplY3QgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpe1xuICByZXR1cm4gJE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSk7XG59O1xuXG4vKioqLyB9KSxcbi8qIDE2MiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLy8gMTkuMS4yLjEgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHNvdXJjZSwgLi4uKVxudmFyIGdldEtleXMgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOClcbiAgLCBnT1BTICAgICA9IF9fd2VicGFja19yZXF1aXJlX18oNTgpXG4gICwgcElFICAgICAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQxKVxuICAsIHRvT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMilcbiAgLCBJT2JqZWN0ICA9IF9fd2VicGFja19yZXF1aXJlX18oNTYpXG4gICwgJGFzc2lnbiAgPSBPYmplY3QuYXNzaWduO1xuXG4vLyBzaG91bGQgd29yayB3aXRoIHN5bWJvbHMgYW5kIHNob3VsZCBoYXZlIGRldGVybWluaXN0aWMgcHJvcGVydHkgb3JkZXIgKFY4IGJ1Zylcbm1vZHVsZS5leHBvcnRzID0gISRhc3NpZ24gfHwgX193ZWJwYWNrX3JlcXVpcmVfXygxMSkoZnVuY3Rpb24oKXtcbiAgdmFyIEEgPSB7fVxuICAgICwgQiA9IHt9XG4gICAgLCBTID0gU3ltYm9sKClcbiAgICAsIEsgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3QnO1xuICBBW1NdID0gNztcbiAgSy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbihrKXsgQltrXSA9IGs7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbU10gIT0gNyB8fCBPYmplY3Qua2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT0gSztcbn0pID8gZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc291cmNlKXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICB2YXIgVCAgICAgPSB0b09iamVjdCh0YXJnZXQpXG4gICAgLCBhTGVuICA9IGFyZ3VtZW50cy5sZW5ndGhcbiAgICAsIGluZGV4ID0gMVxuICAgICwgZ2V0U3ltYm9scyA9IGdPUFMuZlxuICAgICwgaXNFbnVtICAgICA9IHBJRS5mO1xuICB3aGlsZShhTGVuID4gaW5kZXgpe1xuICAgIHZhciBTICAgICAgPSBJT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSlcbiAgICAgICwga2V5cyAgID0gZ2V0U3ltYm9scyA/IGdldEtleXMoUykuY29uY2F0KGdldFN5bWJvbHMoUykpIDogZ2V0S2V5cyhTKVxuICAgICAgLCBsZW5ndGggPSBrZXlzLmxlbmd0aFxuICAgICAgLCBqICAgICAgPSAwXG4gICAgICAsIGtleTtcbiAgICB3aGlsZShsZW5ndGggPiBqKWlmKGlzRW51bS5jYWxsKFMsIGtleSA9IGtleXNbaisrXSkpVFtrZXldID0gU1trZXldO1xuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247XG5cbi8qKiovIH0pLFxuLyogMTYzICovLFxuLyogMTY0ICovLFxuLyogMTY1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIDE5LjEuMy4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UpXG52YXIgJGV4cG9ydCA9IF9fd2VicGFja19yZXF1aXJlX18oOSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GLCAnT2JqZWN0Jywge2Fzc2lnbjogX193ZWJwYWNrX3JlcXVpcmVfXygxNjIpfSk7XG5cbi8qKiovIH0pLFxuLyogMTY2ICovLFxuLyogMTY3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbnZhciB0b0lPYmplY3QgICAgICAgICAgICAgICAgID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMylcbiAgLCAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1NykuZjtcblxuX193ZWJwYWNrX3JlcXVpcmVfXyg0NSkoJ2dldE93blByb3BlcnR5RGVzY3JpcHRvcicsIGZ1bmN0aW9uKCl7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSl7XG4gICAgcmV0dXJuICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodG9JT2JqZWN0KGl0KSwga2V5KTtcbiAgfTtcbn0pO1xuXG4vKioqLyB9KVxuLyoqKioqKi8gXSk7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OHZkMlZpY0dGamF5OTFibWwyWlhKellXeE5iMlIxYkdWRVpXWnBibWwwYVc5dVB6VmpZVFlpTENKM1pXSndZV05yT2k4dkwzZGxZbkJoWTJzdlltOXZkSE4wY21Gd0lHTXlOR0kzTUdFeE9ETmlOMkkzTXpRek5XVXdQMk13T1dRaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmWTI5eVpTNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOW5iRzlpWVd3dWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZlpHVnpZM0pwY0hSdmNuTXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZkMnR6TG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDI5aWFtVmpkQzFrY0M1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5aGJpMXZZbXBsWTNRdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmFYTXRiMkpxWldOMExtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgyaHBaR1V1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5aVlXSmxiQzF5ZFc1MGFXMWxMMmhsYkhCbGNuTXZZMnhoYzNORFlXeHNRMmhsWTJzdWFuTS9NakZoWmlJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTlsZUhCdmNuUXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlpWVdKbGJDMXlkVzUwYVcxbEwyaGxiSEJsY25NdlkzSmxZWFJsUTJ4aGMzTXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZabUZwYkhNdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmFHRnpMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYM1J2TFdsdlltcGxZM1F1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmWTNSNExtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgzQnliM0JsY25SNUxXUmxjMk11YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmYVhSbGNtRjBiM0p6TG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDJSdmJTMWpjbVZoZEdVdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmIySnFaV04wTFd0bGVYTXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZZUzFtZFc1amRHbHZiaTVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTlqYjJZdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmRHOHRjSEpwYldsMGFYWmxMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYM05sZEMxMGJ5MXpkSEpwYm1jdGRHRm5MbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYM1ZwWkM1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5a1pXWnBibVZrTG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDJsbE9DMWtiMjB0WkdWbWFXNWxMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMnhwWW5KaGNua3Vhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZjMmhoY21Wa0xXdGxlUzVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTkwYnkxcGJuUmxaMlZ5TG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDJWdWRXMHRZblZuTFd0bGVYTXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZjMmhoY21Wa0xtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZbUZpWld3dGNuVnVkR2x0WlM5amIzSmxMV3B6TDI5aWFtVmpkQzluWlhRdGNISnZkRzkwZVhCbExXOW1MbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYM1J2TFc5aWFtVmpkQzVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJKaFltVnNMWEoxYm5ScGJXVXZZMjl5WlMxcWN5OXZZbXBsWTNRdlpHVm1hVzVsTFhCeWIzQmxjblI1TG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlltRmlaV3d0Y25WdWRHbHRaUzlvWld4d1pYSnpMMmx1YUdWeWFYUnpMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WW1GaVpXd3RjblZ1ZEdsdFpTOW9aV3h3WlhKekwzQnZjM05wWW14bFEyOXVjM1J5ZFdOMGIzSlNaWFIxY200dWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdlptNHZiMkpxWldOMEwyUmxabWx1WlMxd2NtOXdaWEowZVM1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5dlltcGxZM1F0WTNKbFlYUmxMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZaWE0yTG05aWFtVmpkQzVrWldacGJtVXRjSEp2Y0dWeWRIa3Vhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZhWFJsY2kxa1pXWnBibVV1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5aVlXSmxiQzF5ZFc1MGFXMWxMMk52Y21VdGFuTXZhbk52Ymk5emRISnBibWRwWm5rdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmIySnFaV04wTFhCcFpTNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOW9kRzFzTG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDI5aWFtVmpkQzFuY0c4dWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmIySnFaV04wTFd0bGVYTXRhVzUwWlhKdVlXd3Vhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZiMkpxWldOMExYTmhjQzVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTl5WldSbFptbHVaUzVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTkwYnkxc1pXNW5kR2d1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmZDJ0ekxXUmxabWx1WlM1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5M2EzTXRaWGgwTG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WlhNMkxuTjBjbWx1Wnk1cGRHVnlZWFJ2Y2k1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDNkbFlpNWtiMjB1YVhSbGNtRmliR1V1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Wm00dmFuTnZiaTl6ZEhKcGJtZHBabmt1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmWTJ4aGMzTnZaaTVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTlwYjJKcVpXTjBMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMjlpYW1WamRDMW5iM0JrTG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDI5aWFtVmpkQzFuYjNCekxtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZbUZpWld3dGNuVnVkR2x0WlM5amIzSmxMV3B6TDI5aWFtVmpkQzlyWlhsekxtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZbUZpWld3dGNuVnVkR2x0WlM5b1pXeHdaWEp6TDNSNWNHVnZaaTVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTloWkdRdGRHOHRkVzV6WTI5d1lXSnNaWE11YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmWVhKeVlYa3RhVzVqYkhWa1pYTXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZhWFJsY2kxamNtVmhkR1V1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmYVhSbGNpMXpkR1Z3TG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDI5aWFtVmpkQzFrY0hNdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmIySnFaV04wTFdkdmNHNHVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZjM1J5YVc1bkxXRjBMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYM1JoYzJzdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmRHOHRhVzVrWlhndWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5bGN6WXVZWEp5WVhrdWFYUmxjbUYwYjNJdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmMzSmpMM1YwYVd4ekwzVjBhV3h6TG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlltRmlaV3d0Y25WdWRHbHRaUzlqYjNKbExXcHpMM0J5YjIxcGMyVXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZiV1YwWVM1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDJOdmNtVXVaMlYwTFdsMFpYSmhkRzl5TFcxbGRHaHZaQzVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJKaFltVnNMWEoxYm5ScGJXVXZZMjl5WlMxcWN5OXZZbXBsWTNRdlkzSmxZWFJsTG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlltRmlaV3d0Y25WdWRHbHRaUzlqYjNKbExXcHpMMjlpYW1WamRDOXpaWFF0Y0hKdmRHOTBlWEJsTFc5bUxtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZbUZpWld3dGNuVnVkR2x0WlM5amIzSmxMV3B6TDNONWJXSnZiQzVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJKaFltVnNMWEoxYm5ScGJXVXZZMjl5WlMxcWN5OXplVzFpYjJ3dmFYUmxjbUYwYjNJdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdlptNHZiMkpxWldOMEwyTnlaV0YwWlM1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5bWJpOXZZbXBsWTNRdloyVjBMWEJ5YjNSdmRIbHdaUzF2Wmk1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5bWJpOXZZbXBsWTNRdmEyVjVjeTVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzltYmk5dlltcGxZM1F2YzJWMExYQnliM1J2ZEhsd1pTMXZaaTVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzltYmk5d2NtOXRhWE5sTG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDJadUwzTjViV0p2YkM5cGJtUmxlQzVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzltYmk5emVXMWliMnd2YVhSbGNtRjBiM0l1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmWVc0dGFXNXpkR0Z1WTJVdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZlpXNTFiUzFyWlhsekxtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgyWnZjaTF2Wmk1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5cGJuWnZhMlV1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmYVhNdFlYSnlZWGt0YVhSbGNpNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXBjeTFoY25KaGVTNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXBkR1Z5TFdOaGJHd3Vhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZhWFJsY2kxa1pYUmxZM1F1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmYTJWNWIyWXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZiV2xqY205MFlYTnJMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMjlpYW1WamRDMW5iM0J1TFdWNGRDNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXlaV1JsWm1sdVpTMWhiR3d1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmYzJWMExYQnliM1J2TG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDNObGRDMXpjR1ZqYVdWekxtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgzTndaV05wWlhNdFkyOXVjM1J5ZFdOMGIzSXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWxjell1YjJKcVpXTjBMbU55WldGMFpTNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwyVnpOaTV2WW1wbFkzUXVaMlYwTFhCeWIzUnZkSGx3WlMxdlppNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwyVnpOaTV2WW1wbFkzUXVhMlY1Y3k1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDJWek5pNXZZbXBsWTNRdWMyVjBMWEJ5YjNSdmRIbHdaUzF2Wmk1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDJWek5pNXdjbTl0YVhObExtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlpYTTJMbk41YldKdmJDNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwyVnpOeTV6ZVcxaWIyd3VZWE41Ym1NdGFYUmxjbUYwYjNJdWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5bGN6Y3VjM2x0WW05c0xtOWljMlZ5ZG1GaWJHVXVhbk1pTENKM1pXSndZV05yT2k4dkx5NHZmaTlpWVdKbGJDMXlkVzUwYVcxbEwyTnZjbVV0YW5NdmIySnFaV04wTDJGemMybG5iaTVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDNCeWIzaDVMVzlpYzJWeWRtVXZhVzVrWlhndWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmMzSmpMM041Ym1Ob1pYSXZSR0YwWVU5aWFtVmpkRTlpYzJWeWRtVnlMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMM055WXk5emVXNWphR1Z5TDBSaGRHRlBZbXBsWTNSU1pYQnZjblJsY2k1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5emNtTXZjM2x1WTJobGNpOUVZWFJoVDJKcVpXTjBMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMM055WXk5emVXNWphR1Z5TDFCeWIzaDVUMkpxWldOMExtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZbUZpWld3dGNuVnVkR2x0WlM5b1pXeHdaWEp6TDJkbGRDNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOXpjbU12YzNsdVkyaGxjaTlUZVc1amFHVnlMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMM055WXk5VGVXNWphR1Z5TG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDNOeVl5OXplVzVqYUdWeUwwUmhkR0ZQWW1wbFkzUkRhR2xzWkM1cWN5SXNJbmRsWW5CaFkyczZMeTh2TGk5emNtTXZjM2x1WTJobGNpOUVZWFJoVUhKdmRtbHphVzl1WVd3dWFuTWlMQ0ozWldKd1lXTnJPaTh2THk0dmZpOWlZV0psYkMxeWRXNTBhVzFsTDJOdmNtVXRhbk12YjJKcVpXTjBMMmRsZEMxdmQyNHRjSEp2Y0dWeWRIa3RaR1Z6WTNKcGNIUnZjaTVxY3lJc0luZGxZbkJoWTJzNkx5OHZMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzltYmk5dlltcGxZM1F2WVhOemFXZHVMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMlp1TDI5aWFtVmpkQzluWlhRdGIzZHVMWEJ5YjNCbGNuUjVMV1JsYzJOeWFYQjBiM0l1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmYjJKcVpXTjBMV0Z6YzJsbmJpNXFjeUlzSW5kbFluQmhZMnM2THk4dkxpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwyVnpOaTV2WW1wbFkzUXVZWE56YVdkdUxtcHpJaXdpZDJWaWNHRmphem92THk4dUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlpYTTJMbTlpYW1WamRDNW5aWFF0YjNkdUxYQnliM0JsY25SNUxXUmxjMk55YVhCMGIzSXVhbk1pWFN3aWJtRnRaWE1pT2xzaVpHbDJhV1JsVlZKTUlpd2laR2wyYVdSbFJXMWhhV3dpTENKbGJYQjBlVTlpYW1WamRDSXNJbVJsWlhCRGJHOXVaU0lzSW1kbGRGVnpaWEpWVWt4R2NtOXRSVzFoYVd3aUxDSm5aWFJWYzJWeVJXMWhhV3hHY205dFZWSk1JaXdpWTI5dWRtVnlkRlJ2VlhObGNsVlNUQ0lzSW1Ob1pXTnJRWFIwY21saWRYUmxJaXdpY0dGeWMyVkJkSFJ5YVdKMWRHVnpJaXdpZFhKc0lpd2lSWEp5YjNJaUxDSnlaV04xY25ObElpd2lkbUZzZFdVaUxDSnlaV2RsZUNJc0luTjFZbk4wSWl3aWNHRnlkSE1pTENKeVpYQnNZV05sSWl3aWMzQnNhWFFpTENKcGJtTnNkV1JsY3lJc0luSmxjM1ZzZENJc0luUjVjR1VpTENKa2IyMWhhVzRpTENKcFpHVnVkR2wwZVNJc0ltTnZibk52YkdVaUxDSmxjbkp2Y2lJc0luTmphR1Z0WlNJc0luTjFZbk4wY2lJc0ltbHVaR1Y0VDJZaUxDSmxiV0ZwYkNJc0ltbHVaR1Y0VDJaQmRDSXNJblZ6WlhKdVlXMWxJaXdpYzNWaWMzUnlhVzVuSWl3aWJHVnVaM1JvSWl3aWIySnFaV04wSWl3aWIySnFJaXdpU2xOUFRpSXNJbkJoY25ObElpd2lkWE5sY2tWdFlXbHNJaXdpZFhObGNsVlNUQ0lzSW1sa1pXNTBhV1pwWlhJaUxDSmthWFpwWkdWa1ZWSk1JaXdpY0dGMGFDSXNJbXhwYzNRaUxDSm1hVzVoYkNJc0luUmxjM1FpTENKdFlYUmphQ0lzSW0waUxDSmxlR1ZqSWl3aWFXNWtaWGdpTENKc1lYTjBTVzVrWlhnaUxDSm1iM0pGWVdOb0lpd2laM0p2ZFhCSmJtUmxlQ0lzSW5CMWMyZ2lMQ0p0WVhBaUxDSnBkR1Z0SWl3aWJHOW5JaXdpYzNSeWFXNW5NeUlzSW5OMGNtbHVaekVpTENKaGNuSmhlVEVpTENKemRISnBibWN5SWl3aVlYSnlZWGt5SWl3aWMyeHBZMlVpTENKamIyNWpZWFFpTENKbWFXeDBaWElpTENKQ2IyOXNaV0Z1SWl3aVJtbHNkR1Z5Vkhsd1pTSXNJa0ZPV1NJc0lsTlVRVkpVSWl3aVJWaEJRMVFpTENKRVlYUmhUMkpxWldOMFQySnpaWEoyWlhJaUxDSnBibkIxZENJc0lsOTBhR2x6SWl3aVgzWmxjbk5wYjI0aUxDSjJaWEp6YVc5dUlpd2lYMlpwYkhSbGNuTWlMQ0pmYzNsdVkwOWlhaUlzSW05aWMyVnlkbVVpTENKbGRtVnVkQ0lzSWw5dmJrWnBiSFJsY2lJc0lsOWhiR3h2WTJGMFpVeHBjM1JsYm1WeWN5SXNJbWx1Wm04aUxDSmZjM2x1WTJobGNpSXNJbkpsWVdRaUxDSmZiV1YwWVdSaGRHRWlMQ0owYUdWdUlpd2laR0YwWVNJc0lteGhjM1JOYjJScFptbGxaQ0lzSW1OaGRHTm9JaXdpY21WaGMyOXVJaXdpWDJOb1lXNW5aVXhwYzNSbGJtVnlJaXdpWDJKMWN5SXNJbUZrWkV4cGMzUmxibVZ5SWl3aVgzVnliQ0lzSW0xelp5SXNJbDlqYUdGdVoyVlBZbXBsWTNRaUxDSnlaVzF2ZG1VaUxDSjFibk4xWW5OamNtbGlaU0lzSWw5eVpXeGxZWE5sVEdsemRHVnVaWEp6SWl3aVgyOWljMlZ5ZG1WeWN5SXNJblZ1VTNWaWMyTnlhV0psVFhObklpd2labkp2YlNJc0lsOXZkMjVsY2lJc0luUnZJaXdpWDNOMVlsVlNUQ0lzSW1KdlpIa2lMQ0p5WlhOdmRYSmpaU0lzSW5CdmMzUk5aWE56WVdkbElpd2ljbVZ3YkhraUxDSmpiMlJsSWl3aVkyRnNiR0poWTJzaUxDSnJaWGtpTENKbWFXeDBaWEpQWW1vaUxDSnBaSGdpTENKbWFXVnNaQ0lzSW5KbGMyOXNkbVVpTENKeVpXcGxZM1FpTENKZmMzVmljMk55YVdKbFVtVm5hWE4wY21GMGFXOXVJaXdpWDI5dVJHbHpZMjl1Ym1WamRHVmtJaXdpWlhKeUlpd2lYM0oxYm5ScGJXVlZjbXdpTENKeVpYTnZkWEpqWlhNaUxDSmZaMlZ1WlhKaGRHVk1hWE4wWlc1bGNpSXNJbTV2ZEdsbWFXTmhkR2x2YmxWU1RDSXNJbTFsZEdodlpDSXNJbkJoY21GdGN5SXNJbmRoY201cGJtY2lMQ0pFWVhSaFQySnFaV04wVW1Wd2IzSjBaWElpTENKZmMzVmljMk55YVhCMGFXOXVjeUlzSWw5dmJrTm9ZVzVuWlNJc0lsOXBiblpwZEdGMGFXOXVjeUlzSWw5dlltcGxZM1JNYVhOMFpXNWxjaUlzSWw5dmJsSmxjM0J2Ym5ObElpd2lYMjl1VW1WaFpDSXNJbDl2YmtWNFpXTjFkR1VpTENKdlluTmxjblpsY25NaUxDSjBiMGx1ZG1sMFpTSXNJbTlpYzJWeWRtVnlJaXdpYVc1MmFYUmxUWE5uSWl3aWNtVnpkVzFsSWl3aWMyTm9aVzFoSWl3aVgzTmphR1Z0WVNJc0ltRjFkR2h2Y21selpTSXNJbVJsYkdWMFpVMXpaeUlzSWw5eVpYQnZjblJsY25NaUxDSmZiMjVUZFdKelkzSnBjSFJwYjI1SVlXNWtiR1Z5SWl3aVgyOXVVbVZ6Y0c5dWMyVklZVzVrYkdWeUlpd2lYMjl1VW1WaFpFaGhibVJzWlhJaUxDSmZiMjVGZUdWamRYUmxTR0Z1Wkd4bGNpSXNJbDl2YmxOMVluTmpjbWxpWlNJc0lsOXZibFZ1VTNWaWMyTnlhV0psSWl3aWFIbHdaWEowZVZWeWJDSXNJbUZqWTJWd2RDSXNJbk4xWWlJc0luTjBZWFIxY3lJc0ltMWxkR0ZrWVhSaElpd2ljM1ZpYzJOeWFYQjBhVzl1Y3lJc0ltMXpaMVpoYkhWbElpd2ljMlZ1WkUxelp5SXNJbWxrSWl3aWFHRnpUM2R1VUhKdmNHVnlkSGtpTENKdGRYUjFZV3hCZFhSb1pXNTBhV05oZEdsdmJpSXNJbDl0ZFhSMVlXeEJkWFJvWlc1MGFXTmhkR2x2YmlJc0ltUmxjMk1pTENKdlltcGxZM1JXWVd4MVpTSXNJbkpsYzNCdmJuTmxJaXdpUkdGMFlVOWlhbVZqZENJc0luUm9jbTkzVFdGdVpHRjBiM0o1VUdGeWJVMXBjM05wYm1kRmNuSnZjaUlzSW5CaGNpSXNJbk41Ym1Ob1pYSWlMQ0pqY21WaGRHVmtJaXdpWDJOeVpXRjBaV1FpTENKeVpYQnZjblJsY2lJc0lsOXlaWEJ2Y25SbGNpSXNJbkoxYm5ScGJXVWlMQ0pmY25WdWRHbHRaU0lzSW01aGJXVWlMQ0pmYm1GdFpTSXNJbDl6ZEdGMGRYTWlMQ0pmWTJocGJHUnlaVzV6SWl3aVkyaHBiR1J5Wlc1eklpd2liWFYwZFdGc0lpd2lYMk5vYVd4a1NXUWlMQ0pmWTJocGJHUnlaVzVNYVhOMFpXNWxjbk1pTENKZmNtVnpkVzFsWkNJc0ltUmxjMk55YVhCMGFXOXVJaXdpWDJSbGMyTnlhWEIwYVc5dUlpd2lkR0ZuY3lJc0lsOTBZV2R6SWl3aVgzSmxjMjkxY21ObGN5SXNJbTlpYzJWeWRtVnlVM1J2Y21GblpTSXNJbDl2WW5ObGNuWmxjbE4wYjNKaFoyVWlMQ0p3ZFdKc2FXTlBZbk5sY25aaGRHbHZiaUlzSWw5d2RXSnNhV05QWW5ObGNuWmhkR2x2YmlJc0ltTm9hV3hrU1dSSmJuUWlMQ0pqYUdsc1pFbGtVM1J5YVc1bklpd2lZMmhwYkdSSlpDSXNJazUxYldKbGNpSXNJbU5vYVd4a1FtRnpaVlZTVENJc0ltTm9hV3hrSWl3aVkyaHBiR1JWVWt3aUxDSnNhWE4wWlc1bGNpSXNJbDl2YmtOb2FXeGtRM0psWVhSbElpd2lYMk5vWVc1blpVTm9hV3hrY21WdUlpd2lYMk5vYVd4a2NtVnVUMkpxWldOMGN5SXNJbU5vYVd4a2NtVnVVbVZ6YjNWeVkyVWlMQ0pqYUdsc1pISmxiaUlzSW1Ob2FXeGtTVzV3ZFhRaUxDSndZWEpsYm5SUFltcGxZM1FpTENKd1lYSmxiblFpTENKcGJtbDBhV0ZzUkdGMFlTSXNJbTF6WjBOb2FXeGtVR0YwYUNJc0lrUmhkR1VpTENKMGIwbFRUMU4wY21sdVp5SXNJbTVsZDBOb2FXeGtJaXdpWW05a2VWWmhiSFZsSWl3aWNtVnhkV1Z6ZEUxelp5SXNJbTF6WjBsa0lpd2liMjVEYUdGdVoyVWlMQ0pmYjI1QlpHUkRhR2xzWkhKbGJraGhibVJzWlhJaUxDSnpaWFJVYVcxbGIzVjBJaXdpYzI5MWNtTmxJaXdpWTJocGJHUkpibVp2SWl3aVkyaGhibWRsVFhObklpd2lZWFIwY21saWRYUmxJaXdpYjFSNWNHVWlMQ0pQUWtwRlExUWlMQ0pqVkhsd1pTSXNJbEpGVFU5V1JTSXNJbUYwZEhKcFluVjBaVlI1Y0dVaUxDSlZVRVJCVkVVaUxDSnZjR1Z5WVhScGIyNGlMQ0p6ZVc1alQySnFJaXdpWm1sdVpGSmxjM1ZzZENJc0ltWnBibVJDWldadmNtVWlMQ0pCVWxKQldTSXNJa0ZFUkNJc0ltRnljaUlzSW14aGMzUWlMQ0pCY25KaGVTSXNJbkJ5YjNSdmRIbHdaU0lzSW5Od2JHbGpaU0lzSW1Gd2NHeDVJaXdpYjJKcVpXTjBWSGx3WlNJc0lsTjVibU5QWW1wbFkzUWlMQ0pmWkdGMFlTSXNJbDlwYm5SbGNtNWhiRTlpYzJWeWRtVWlMQ0pmWm1sdVpGZHBkR2hUY0d4cGRDSXNJbkJ2Y0NJc0ltaGhibVJzWlhJaUxDSmphR0Z1WjJWelpYUWlMQ0psZG1WeWVTSXNJbU5vWVc1blpTSXNJbDl2YmtOb1lXNW5aWE1pTENKUFltcGxZM1FpTENKa1pXVndUMkp6WlhKMlpTSXNJbTlpYWxSNWNHVWlMQ0pqYjI1emRISjFZM1J2Y2lJc0lrOWlhbVZqZEZSNWNHVWlMQ0ptYVdWc1pGTjBjbWx1WnlJc0ltdGxlWEJoZEdnaUxDSnVaWGRXWVd4MVpTSXNJbDltYVhKbFJYWmxiblFpTENKRGFHRnVaMlZVZVhCbElpd2lVM2x1WTJobGNpSXNJbTkzYm1WeUlpd2lZblZ6SWl3aVkyOXVabWxuSWl3aWNuVnVkR2x0WlZWU1RDSXNJbDl3Y205MmFYTnBiMjVoYkhNaUxDSmZiMjVHYjNKM1lYSmtJaXdpWDI5dVVtVnRiM1JsUTNKbFlYUmxJaXdpWDI5dVVtVnRiM1JsUkdWc1pYUmxJaXdpYzNSdmNtVWlMQ0p3TW5BaUxDSmpjbVZoZEdWSmJuQjFkQ0lzSWw5amNtVmhkR1VpTENKamNtbDBaWEpwWVNJc0lsOXlaWE4xYldWRGNtVmhkR1VpTENKdlltcFZVa3dpTENKZmMzVmljMk55YVdKbElpd2lYMk55YVhSbGNtbGhJaXdpWDNKbGMzVnRaVk4xWW5OamNtbGlaU0lzSW5KbFlXUk5jMmNpTENKZmIyNU9iM1JwWm1sallYUnBiMjVJWVc1a2JHVnlJaXdpWDI5dVEyeHZjMlVpTENKeVpYQnZjblJsY2tsdWNIVjBJaXdpY21WeGRXVnpkRlpoYkhWbElpd2lZMmhwYkdSeVpXNVNaWE52ZFhKalpYTWlMQ0p1WlhkUFltb2lMQ0pwYm5acGRHVlBZbk5sY25abGNuTWlMQ0pzYVhOMFQyWlNaWEJ2Y25SbGNuTWlMQ0prWVhSaFQySnFaV04wSWl3aVkyaHBiR1J5Wlc1UFltcGxZM1J6SWl3aWNtVnpkVzFsUTJocGJHUnlaVzV6SWl3aVgyOXVVbVZ3YjNKMFpYSnpVbVZ6ZFcxbElpd2ljM1ZpYzJOeWFXSmxUWE5uSWl3aWJtVjNVSEp2ZG1semFXOXVZV3dpTENKdlluTmxjblpsY2tsdWNIVjBJaXdpYzNsdVl5SXNJbXhwYzNSUFprOWljMlZ5ZG1WeWN5SXNJbDl2Yms5aWMyVnlkbVZ5YzFKbGMzVnRaU0lzSW1GamF5SXNJbXhVZVhCbElpd2laR1ZzWlhSbElpd2lSR0YwWVU5aWFtVmpkRU5vYVd4a0lpd2lYM0JoY21WdWRDSXNJbDl3WVhKbGJuUlBZbXBsWTNRaUxDSmZiR2x6ZEdWdVpYSWlMQ0pmYlhOblNXUWlMQ0pmYVdSbGJuUnBkSGtpTENKRVlYUmhVSEp2ZG1semFXOXVZV3dpTENKZlkyaHBiR1J5Wlc0aUxDSmZZMmhoYm1kbGN5SmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTERKQ1FVRXlRanRCUVVNelFpeERRVUZETzBGQlEwUXNUenRCUTFaQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3pzN1FVRkhRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3h0UkVGQk1rTXNZMEZCWXpzN1FVRkZla1E3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hoUVVGTE8wRkJRMHc3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3h0UTBGQk1rSXNNRUpCUVRCQ0xFVkJRVVU3UVVGRGRrUXNlVU5CUVdsRExHVkJRV1U3UVVGRGFFUTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzT0VSQlFYTkVMQ3RFUVVFclJEczdRVUZGY2tnN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3pzN096czdPMEZEYUVWQkxEWkNRVUUyUWp0QlFVTTNRaXh4UTBGQmNVTXNaME03T3pzN096dEJRMFJ5UXp0QlFVTkJPMEZCUTBFN1FVRkRRU3gxUTBGQmRVTXNaME03T3pzN096dEJRMGgyUXp0QlFVTkJPMEZCUTBFc2FVTkJRV2xETEZGQlFWRXNaMEpCUVdkQ0xGVkJRVlVzUjBGQlJ6dEJRVU4wUlN4RFFVRkRMRVU3T3pzN096dEJRMGhFTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMSFZDT3pzN096czdRVU5XUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSExGVkJRVlU3UVVGRFlqdEJRVU5CTzBGQlEwRTdRVUZEUVN4Rk96czdPenM3UVVObVFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVU3T3pzN096dEJRMHBCTzBGQlEwRTdRVUZEUVN4Rk96czdPenM3UVVOR1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRU5CUVVNN1FVRkRSRHRCUVVOQk8wRkJRMEVzUlRzN096czdPenRCUTFCQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlRzN096czdPMEZEVWtFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEcxRlFVRnRSVHRCUVVOdVJUdEJRVU5CTEhGR1FVRnhSanRCUVVOeVJqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNWMEZCVnp0QlFVTllMRk5CUVZNN1FVRkRWRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVER0QlFVTkJPMEZCUTBFc0swTkJRU3RETzBGQlF5OURPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEdOQlFXTTdRVUZEWkN4alFVRmpPMEZCUTJRc1kwRkJZenRCUVVOa0xHTkJRV003UVVGRFpDeGxRVUZsTzBGQlEyWXNaVUZCWlR0QlFVTm1MR1ZCUVdVN1FVRkRaaXhuUWtGQlowSTdRVUZEYUVJc2VVSTdPenM3T3pzN1FVTTFSRUU3TzBGQlJVRTdPMEZCUlVFN08wRkJSVUU3TzBGQlJVRXNjME5CUVhORExIVkRRVUYxUXl4blFrRkJaMEk3TzBGQlJUZEdPMEZCUTBFN1FVRkRRU3h0UWtGQmJVSXNhMEpCUVd0Q08wRkJRM0pETzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hEUVVGRExFYzdPenM3T3p0QlF6RkNSRHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdRVUZEUVR0QlFVTkJMRVU3T3pzN096dEJRMDVCTEhWQ1FVRjFRanRCUVVOMlFqdEJRVU5CTzBGQlEwRXNSVHM3T3pzN08wRkRTRUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVU3T3pzN096dEJRMHhCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVHM3T3pzN08wRkRia0pCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlRzN096czdPMEZEVUVFc2IwSTdPenM3T3p0QlEwRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVVN096czdPenRCUTA1Qk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1JUczdPenM3TzBGRFRrRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JUczdPenM3TzBGRFNFRXNhVUpCUVdsQ096dEJRVVZxUWp0QlFVTkJPMEZCUTBFc1JUczdPenM3TzBGRFNrRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVU3T3pzN096dEJRMWhCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxHdEZRVUZyUlN3clFrRkJLMEk3UVVGRGFrY3NSVHM3T3pzN08wRkRUa0U3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4Rk96czdPenM3UVVOS1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVU3T3pzN096dEJRMHBCTzBGQlEwRXNjVVZCUVhORkxHZENRVUZuUWl4VlFVRlZMRWRCUVVjN1FVRkRia2NzUTBGQlF5eEZPenM3T3pzN1FVTkdSQ3h6UWpzN096czdPMEZEUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZPenM3T3pzN1FVTktRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVHM3T3pzN08wRkRURUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNZVHM3T3pzN08wRkRTRUU3UVVGRFFUdEJRVU5CTEcxRVFVRnRSRHRCUVVOdVJEdEJRVU5CTEhWRFFVRjFRenRCUVVOMlF5eEZPenM3T3pzN1FVTk1RU3hyUWtGQmEwSXNkMFE3T3pzN096dEJRMEZzUWp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVTdPenM3T3p0QlEwcEJMR3RDUVVGclFpeDNSRHM3T3pzN096dEJRMEZzUWpzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFTeHpRMEZCYzBNc2RVTkJRWFZETEdkQ1FVRm5RanM3UVVGRk4wWTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFTeEZPenM3T3pzN08wRkRhRU5CT3p0QlFVVkJPenRCUVVWQk96dEJRVVZCT3p0QlFVVkJMSE5EUVVGelF5eDFRMEZCZFVNc1owSkJRV2RDT3p0QlFVVTNSanRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMRVU3T3pzN096dEJRMmhDUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVTdPenM3T3p0QlEwcEJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTdzJRa0ZCTmtJN1FVRkROMEk3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN3MlFrRkJOa0k3UVVGRE4wSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHRCUVVOQk96czdPenM3TzBGRGVFTkJPMEZCUTBFN1FVRkRRU3h2UlVGQmRVVXNlVU5CUVRCRExFVTdPenM3T3pzN1FVTkdha2c3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQkxEUkNRVUUwUWl4aFFVRmhPenRCUVVWNlF6dEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc2QwTkJRWGRETEc5RFFVRnZRenRCUVVNMVJTdzBRMEZCTkVNc2IwTkJRVzlETzBGQlEyaEdMRXRCUVVzc01rSkJRVEpDTEc5RFFVRnZRenRCUVVOd1JUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNaMEpCUVdkQ0xHMUNRVUZ0UWp0QlFVTnVRenRCUVVOQk8wRkJRMEVzYVVOQlFXbERMREpDUVVFeVFqdEJRVU0xUkR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVER0QlFVTkJPMEZCUTBFc1JUczdPenM3TzBGRGNrVkJMR3RDUVVGclFpeDNSRHM3T3pzN08wRkRRV3hDTEdOQlFXTXNjMEk3T3pzN096dEJRMEZrTERaRk96czdPenM3UVVOQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnc1JUczdPenM3TzBGRFdrRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVVN096czdPenRCUTJoQ1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc09FSkJRVGhDTzBGQlF6bENPMEZCUTBFN1FVRkRRU3h0UkVGQmJVUXNUMEZCVHl4RlFVRkZPMEZCUXpWRUxFVTdPenM3T3p0QlExUkJMSGRET3pzN096czdRVU5CUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxESkVRVUV5UkR0QlFVTXpSQ3hGT3pzN096czdRVU5NUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTd3dSRUZCTUVRc2MwSkJRWE5DTzBGQlEyaEdMR2RHUVVGblJpeHpRa0ZCYzBJN1FVRkRkRWNzUlRzN096czdPMEZEVWtFc2JVTTdPenM3T3pzN1FVTkJRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN3MlFrRkJOa0k3UVVGRE4wSXNZMEZCWXp0QlFVTmtPMEZCUTBFc1EwRkJRenRCUVVORU8wRkJRMEU3UVVGRFFUdEJRVU5CTEN0Q1FVRXJRanRCUVVNdlFqdEJRVU5CTzBGQlEwRXNWVUZCVlR0QlFVTldMRU5CUVVNc1JUczdPenM3TzBGRGFFSkVPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRXNkMGRCUVhkSExFOUJRVTg3UVVGREwwYzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFTTdPenM3T3pzN1FVTmFRVHRCUVVOQkxIVkRRVUYxUXl3d1FrRkJNRUk3UVVGRGFrVXNkME5CUVhkRE8wRkJRM2hETzBGQlEwRXNSVHM3T3pzN096czdPenM3TzBGRFNrRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3g1UWtGQmVVSXNhMEpCUVd0Q0xFVkJRVVU3TzBGQlJUZERPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUjBGQlJ5eFZRVUZWTzBGQlEySTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JUczdPenM3TzBGRGRFSkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlRzN096czdPMEZEU2tFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVY3NWVUZCVlR0QlFVTmlPMEZCUTBFc1JUczdPenM3TzBGRFprRXNlVU03T3pzN096dEJRMEZCTEd0Q1FVRnJRaXgzUkRzN096czdPenRCUTBGc1FqczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFTeHBTRUZCYVVnc2JVSkJRVzFDTEVWQlFVVXNiVUpCUVcxQ0xEUktRVUUwU2pzN1FVRkZjbFFzYzBOQlFYTkRMSFZEUVVGMVF5eG5Ra0ZCWjBJN08wRkJSVGRHTzBGQlEwRTdRVUZEUVN4RFFVRkRPMEZCUTBRN1FVRkRRU3hGT3pzN096czdRVU53UWtFc05FSkJRVFJDTEdVN096czdPenRCUTBFMVFqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXNzVjBGQlZ5eGxRVUZsTzBGQlF5OUNPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEVzUlRzN096czdPenRCUTNCQ1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzZVVaQlFXZEdMR0ZCUVdFc1JVRkJSVHM3UVVGRkwwWTdRVUZEUVN4eFJFRkJjVVFzTUVKQlFUQkNPMEZCUXk5Rk8wRkJRMEVzUlRzN096czdPMEZEV2tFN1FVRkRRU3hWUVVGVk8wRkJRMVlzUlRzN096czdPMEZEUmtFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZPenM3T3pzN1FVTmFRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRVU3T3pzN096dEJRMDVCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlRzN096czdPMEZEYUVKQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVU3T3pzN096dEJRekZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZPenM3T3pzN08wRkRUa0U3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNaME5CUVdkRE8wRkJRMmhETEdOQlFXTTdRVUZEWkN4cFFrRkJhVUk3UVVGRGFrSTdRVUZEUVN4RFFVRkRPMEZCUTBRN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hEUVVGRE96dEJRVVZFTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxEUkNPenM3T3pzN096czdPenM3T3pzN096czdPenM3VVVOUFowSkJMRk1zUjBGQlFVRXNVenRSUVd0RVFVTXNWeXhIUVVGQlFTeFhPMUZCWjBKQlF5eFhMRWRCUVVGQkxGYzdVVUZUUVVNc1V5eEhRVUZCUVN4VE8xRkJWVUZETEcxQ0xFZEJRVUZCTEcxQ08xRkJWVUZETEcxQ0xFZEJRVUZCTEcxQ08xRkJWMEZETEdkQ0xFZEJRVUZCTEdkQ08xRkJiVUpCUXl4akxFZEJRVUZCTEdNN1VVRjVRMEZETEdVc1IwRkJRVUVzWlRzN096dEJRVGxOYUVJN096czdPenM3T3pzN096czdPenM3T3pzN096czdRVUZ6UWtFN096czdPMEZCUzBFN096czdPenM3TzBGQlVVRTdPenM3TzBGQlMwOHNVMEZCVTFJc1UwRkJWQ3hEUVVGdFFsTXNSMEZCYmtJc1JVRkJkMEk3TzBGQlJUZENMRTFCUVVrc1EwRkJRMEVzUjBGQlRDeEZRVUZWTEUxQlFVMURMRTFCUVUwc2QwSkJRVTRzUTBGQlRqczdRVUZGV0N4WFFVRlRReXhQUVVGVUxFTkJRV2xDUXl4TFFVRnFRaXhGUVVGM1FqdEJRVU4yUWl4UlFVRk5ReXhSUVVGUkxEQkdRVUZrTzBGQlEwVXNVVUZCVFVNc1VVRkJVU3hWUVVGa08wRkJRMFFzVVVGQlNVTXNVVUZCVVVnc1RVRkJUVWtzVDBGQlRpeERRVUZqU0N4TFFVRmtMRVZCUVhGQ1F5eExRVUZ5UWl4RlFVRTBRa2NzUzBGQk5VSXNRMEZCYTBNc1IwRkJiRU1zUTBGQldqdEJRVU5FTEZkQlFVOUdMRXRCUVZBN1FVRkRRVHM3UVVGRlJDeE5RVUZKUVN4UlFVRlJTaXhSUVVGUlJpeEhRVUZTTEVOQlFWbzdPMEZCUlVNN1FVRkRRU3hOUVVGSlRTeE5RVUZOTEVOQlFVNHNUVUZCWVU0c1IwRkJZaXhKUVVGdlFpeERRVUZEVFN4TlFVRk5MRU5CUVU0c1JVRkJVMGNzVVVGQlZDeERRVUZyUWl4SFFVRnNRaXhEUVVGNlFpeEZRVUZwUkRzN1FVRkZMME1zVVVGQlNVTXNWVUZCVXp0QlFVTllReXhaUVVGTkxFVkJSRXM3UVVGRldFTXNZMEZCVVZvc1IwRkdSenRCUVVkWVlTeG5Ra0ZCVlR0QlFVaERMRXRCUVdJN08wRkJUVUZETEZsQlFWRkRMRXRCUVZJc1EwRkJZeXg1UmtGQlpDeEZRVUY1UjJZc1IwRkJla2M3TzBGQlJVRXNWMEZCVDFVc1QwRkJVRHRCUVVORU96dEJRVVZHTzBGQlEwRXNUVUZCU1Vvc1RVRkJUU3hEUVVGT0xFMUJRV0ZPTEVkQlFXSXNTVUZCYjBKTkxFMUJRVTBzUTBGQlRpeEZRVUZUUnl4UlFVRlVMRU5CUVd0Q0xFZEJRV3hDTEVOQlFYaENMRVZCUVdkRU8wRkJReTlETEZGQlFVbFBMRk5CUVZOV0xFMUJRVTBzUTBGQlRpeE5RVUZoVGl4SFFVRmlMRWRCUVcxQ0xFMUJRVzVDTEVkQlFUUkNUU3hOUVVGTkxFTkJRVTRzUTBGQmVrTTdRVUZEUVVFc1dVRkJVVW9zVVVGQlVXTXNVMEZCVXl4TFFVRlVMRWRCUVdsQ1ZpeE5RVUZOTEVOQlFVNHNRMEZCZWtJc1EwRkJVanRCUVVOQk96dEJRVVZFTzBGQlEwRXNUVUZCU1VFc1RVRkJUU3hEUVVGT0xFVkJRVk5ITEZGQlFWUXNRMEZCYTBJc1IwRkJiRUlzUTBGQlNpeEZRVUUwUWp0QlFVTXpRa2dzVlVGQlRTeERRVUZPTEVsQlFWZEJMRTFCUVUwc1EwRkJUaXhKUVVGWExFdEJRVmdzUjBGQmJVSkJMRTFCUVUwc1EwRkJUaXhEUVVFNVFqdEJRVU5CUVN4VlFVRk5MRU5CUVU0c1NVRkJWMEVzVFVGQlRTeERRVUZPTEVWQlFWTlhMRTFCUVZRc1EwRkJaMEpZTEUxQlFVMHNRMEZCVGl4RlFVRlRXU3hQUVVGVUxFTkJRV2xDTEVkQlFXcENMRWxCUVhkQ0xFTkJRWGhETEVOQlFWZzdRVUZEUnl4SFFYSkRNRUlzUTBGeFEzaENPenM3TzBGQlNVd3NUVUZCU1ZJc1UwRkJVenRCUVVOWVF5eFZRVUZOVEN4TlFVRk5MRU5CUVU0c1EwRkVTenRCUVVWWVRTeFpRVUZSVGl4TlFVRk5MRU5CUVU0c1EwRkdSenRCUVVkWVR5eGpRVUZWVUN4TlFVRk5MRU5CUVU0N1FVRklReXhIUVVGaU96dEJRVTFCTEZOQlFVOUpMRTFCUVZBN1FVRkRSRHM3UVVGRlRTeFRRVUZUYkVJc1YwRkJWQ3hEUVVGeFFqSkNMRXRCUVhKQ0xFVkJRVFJDTzBGQlEycERMRTFCUVVsRExGbEJRVmxFTEUxQlFVMUVMRTlCUVU0c1EwRkJZeXhIUVVGa0xFTkJRV2hDT3p0QlFVVkJMRTFCUVVsU0xGTkJRVk03UVVGRFdGY3NZMEZCVlVZc1RVRkJUVWNzVTBGQlRpeERRVUZuUWl4RFFVRm9RaXhGUVVGdFFrWXNVMEZCYmtJc1EwRkVRenRCUVVWWVVpeFpRVUZSVHl4TlFVRk5SeXhUUVVGT0xFTkJRV2RDUml4WlFVRlpMRU5CUVRWQ0xFVkJRU3RDUkN4TlFVRk5TU3hOUVVGeVF6dEJRVVpITEVkQlFXSTdPMEZCUzBFc1UwRkJUMklzVFVGQlVEdEJRVU5FT3p0QlFVVkVPenM3T3p0QlFVdFBMRk5CUVZOcVFpeFhRVUZVTEVOQlFYRkNLMElzVFVGQmNrSXNSVUZCTmtJN1FVRkRiRU1zVTBGQlR5eHZRa0ZCV1VFc1RVRkJXaXhGUVVGdlFrUXNUVUZCY0VJc1IwRkJOa0lzUTBGQk4wSXNSMEZCYVVNc1MwRkJha01zUjBGQmVVTXNTVUZCYUVRN1FVRkRSRHM3UVVGRlJEczdPenM3UVVGTFR5eFRRVUZUTjBJc1UwRkJWQ3hEUVVGdFFpdENMRWRCUVc1Q0xFVkJRWGRDTzBGQlF6ZENPMEZCUTBFc1RVRkJTVUVzUjBGQlNpeEZRVUZUTEU5QlFVOURMRXRCUVV0RExFdEJRVXdzUTBGQlZ5eDVRa0ZCWlVZc1IwRkJaaXhEUVVGWUxFTkJRVkE3UVVGRFZqczdRVUZGUkRzN096czdRVUZMVHl4VFFVRlRPVUlzYlVKQlFWUXNRMEZCTmtKcFF5eFRRVUUzUWl4RlFVRjNRenRCUVVNM1F5eE5RVUZKVWl4WlFVRlpVU3hWUVVGVlZpeFBRVUZXTEVOQlFXdENMRWRCUVd4Q0xFTkJRV2hDTzBGQlEwRXNVMEZCVHl4WlFVRlpWU3hWUVVGVlRpeFRRVUZXTEVOQlFXOUNSaXhaUVVGWkxFTkJRV2hETEVWQlFXMURVU3hWUVVGVlRDeE5RVUUzUXl4RFFVRmFMRWRCUVcxRkxFZEJRVzVGTEVkQlFYbEZTeXhWUVVGVlRpeFRRVUZXTEVOQlFXOUNMRU5CUVhCQ0xFVkJRWFZDUml4VFFVRjJRaXhEUVVGb1JqdEJRVU5FT3p0QlFVVkVPenM3T3p0QlFVdFBMRk5CUVZONFFpeHRRa0ZCVkN4RFFVRTJRbWxETEU5QlFUZENMRVZCUVhORE8wRkJRek5ETEUxQlFVazNRaXhOUVVGTlZDeFZRVUZWYzBNc1QwRkJWaXhEUVVGV08wRkJRMEVzVTBGQlR6ZENMRWxCUVVsaExGRkJRVW9zUTBGQllVNHNUMEZCWWl4RFFVRnhRaXhIUVVGeVFpeEZRVUV3UWl4RlFVRXhRaXhKUVVGblF5eEhRVUZvUXl4SFFVRnpRMUFzU1VGQlNWa3NUVUZCYWtRc1EwRkdNa01zUTBGRll6dEJRVU14UkRzN1FVRkhSRHM3T3pzN1FVRkxUeXhUUVVGVFppeG5Ra0ZCVkN4RFFVRXdRbWxETEZWQlFURkNMRVZCUVhORE96dEJRVVV6UXp0QlFVTkJMRTFCUVVsQkxGZEJRVmRTTEZOQlFWZ3NRMEZCY1VJc1EwRkJja0lzUlVGQmQwSXNRMEZCZUVJc1RVRkJLMElzVTBGQmJrTXNSVUZCT0VNN1FVRkROVU1zVVVGQlNWTXNZVUZCWVhoRExGVkJRVlYxUXl4VlFVRldMRU5CUVdwQ096dEJRVVZCTzBGQlEwRXNVVUZCU1VNc1YwRkJWMjVDTEUxQlFWZ3NTVUZCY1VKdFFpeFhRVUZYYkVJc1VVRkJjRU1zUlVGQk9FTTdRVUZETlVNc1lVRkJUMmxDTEZWQlFWQTdRVUZEUkN4TFFVWkVMRTFCUlU4N1FVRkRUQ3haUVVGTkxESkNRVUZPTzBGQlEwUTdPMEZCUlVnN1FVRkRReXhIUVZoRUxFMUJWMDg3UVVGRFRDeFhRVUZQYmtNc2IwSkJRVzlDYlVNc1ZVRkJjRUlzUTBGQlVEdEJRVU5FTzBGQlEwWTdPMEZCUlUwc1UwRkJVMmhETEdOQlFWUXNRMEZCZDBKclF5eEpRVUY0UWl4RlFVRTRRanM3UVVGRmJrTXNUVUZCU1RWQ0xGRkJRVkVzTmt0QlFWbzdPMEZCUlVFc1RVRkJTVFpDTEU5QlFVOHNSVUZCV0R0QlFVTkJMRTFCUVVsRExGRkJRVkVzUlVGQldqdEJRVU5CTEUxQlFVbERMRTlCUVU5SUxFdEJRVXRKTEV0QlFVd3NRMEZCVjJoRExFdEJRVmdzUTBGQldEczdRVUZGUVN4TlFVRkpLMElzVVVGQlVTeEpRVUZhTEVWQlFXdENPMEZCUTJoQ1JDeFpRVUZSUml4TFFVRkxlRUlzUzBGQlRDeERRVUZYTEVkQlFWZ3NRMEZCVWp0QlFVTkVMRWRCUmtRc1RVRkZUenRCUVVOTUxGRkJRVWsyUWl4VlFVRktPMEZCUTBFc1YwRkJUeXhEUVVGRFFTeEpRVUZKYWtNc1RVRkJUV3RETEVsQlFVNHNRMEZCVjA0c1NVRkJXQ3hEUVVGTUxFMUJRVEpDTEVsQlFXeERMRVZCUVhkRE8wRkJRM1JETzBGQlEwRXNWVUZCU1Vzc1JVRkJSVVVzUzBGQlJpeExRVUZaYmtNc1RVRkJUVzlETEZOQlFYUkNMRVZCUVdsRE8wRkJReTlDY0VNc1kwRkJUVzlETEZOQlFVNDdRVUZEUkRzN1FVRkZSRHRCUVVOQlNDeFJRVUZGU1N4UFFVRkdMRU5CUVZVc1ZVRkJRMHdzUzBGQlJDeEZRVUZSVFN4VlFVRlNMRVZCUVhWQ08wRkJReTlDTEZsQlFVbEJMR1ZCUVdVc1EwRkJia0lzUlVGQmMwSTdRVUZEY0VKVUxHVkJRVXRWTEVsQlFVd3NRMEZCVlZBc1MwRkJWanRCUVVORU8wRkJRMFlzVDBGS1JEdEJRVXRFTzBGQlEwUXNVVUZCU1RGQ0xHVkJRVW83UVVGRFFYVkNMRk5CUVV0UkxFOUJRVXdzUTBGQllTeFZRVUZEZWtNc1IwRkJSQ3hGUVVGVE8wRkJRM0JDVlN4bFFVRlRjMElzUzBGQlMzcENMRTlCUVV3c1EwRkJZVkFzUjBGQllpeEZRVUZyUWl4TFFVRnNRaXhEUVVGVU96dEJRVVZCYTBNc1kwRkJVWGhDTEU5QlFVOUdMRXRCUVZBc1EwRkJZU3hIUVVGaUxFVkJRV3RDYjBNc1IwRkJiRUlzUTBGQmMwSXNWVUZCUTBNc1NVRkJSQ3hGUVVGVk8wRkJRM1JETEZsQlFVbEJMRk5CUVZNc1MwRkJZaXhGUVVGdlFqdEJRVUZGTEdsQ1FVRlBOME1zUjBGQlVEdEJRVUZoTzBGQlEyNURMR1ZCUVU4MlF5eEpRVUZRTzBGQlEwUXNUMEZJVHl4RFFVRlNPMEZCUzBRc1MwRlNSRHRCUVZORU96dEJRVVZFTDBJc1ZVRkJVV2RETEVkQlFWSXNRMEZCV1N4NVEwRkJXaXhGUVVGMVJGb3NTMEZCZGtRN1FVRkRRU3hUUVVGUFFTeExRVUZRTzBGQlEwUTdPMEZCUlUwc1UwRkJVMjVETEdWQlFWUXNRMEZCZVVKcFF5eEpRVUY2UWl4RlFVRXJRanRCUVVOd1F5eE5RVUZKTlVJc1VVRkJVU3d5UWtGQldqczdRVUZGUVN4TlFVRkpNa01zVlVGQlZTeFZRVUZrT3p0QlFVVkJMRTFCUVVrc1EwRkJRMllzUzBGQlMzWkNMRkZCUVV3c1EwRkJZeXhMUVVGa0xFTkJRVXdzUlVGQk1rSTdRVUZEZWtJc1YwRkJVWFZDTEV0QlFVdDRRaXhMUVVGTUxFTkJRVmNzUjBGQldDeERRVUZTTzBGQlEwUXNSMEZHUkN4TlFVVlBPMEZCUTB3c1VVRkJTWGRETEZWQlFWVm9RaXhMUVVGTGVFSXNTMEZCVEN4RFFVRlhTaXhMUVVGWUxFVkJRV3RDTEVOQlFXeENMRU5CUVdRN08wRkJSVUVzVVVGQlNUWkRMRk5CUVZORUxGRkJRVkY0UXl4TFFVRlNMRU5CUVdNc1IwRkJaQ3hEUVVGaU96dEJRVVZCTEZGQlFVa3dReXhWUVVGVmJFSXNTMEZCUzNwQ0xFOUJRVXdzUTBGQllYbERMRTlCUVdJc1JVRkJjMElzUlVGQmRFSXNRMEZCWkRzN1FVRkZRU3hSUVVGSmFFSXNTMEZCUzNaQ0xGRkJRVXdzUTBGQlkzTkRMRTlCUVdRc1EwRkJTaXhGUVVFMFFqczdRVUZGTVVJc1ZVRkJTVWtzVTBGQlUwUXNVVUZCVVRGRExFdEJRVklzUTBGQlkzVkRMRlZCUVZVc1IwRkJlRUlzUTBGQllqczdRVUZGUVdwRExHTkJRVkZuUXl4SFFVRlNMRU5CUVZrc1dVRkJXVXNzVFVGQmVFSTdPMEZCUlVGRUxHZENRVUZWUXl4UFFVRlBMRU5CUVZBc1JVRkJWVU1zUzBGQlZpeERRVUZuUWl4SFFVRm9RaXhGUVVGeFFpeERRVUZETEVOQlFYUkNMRU5CUVZZN08wRkJSVUZFTEdWQlFWTkJMRTlCUVU4c1EwRkJVQ3hGUVVGVk0wTXNTMEZCVml4RFFVRm5RaXhIUVVGb1FpeERRVUZVT3p0QlFVVkJlVU1zWVVGQlQwNHNTVUZCVUN4RFFVRlpUeXhQUVVGYUxFVkJRWEZDU0N4UFFVRnlRanM3UVVGRlFVVXNaVUZCVTBFc1QwRkJUMGtzVFVGQlVDeERRVUZqUml4TlFVRmtMRU5CUVZRN1FVRkZSQ3hMUVdSRUxFMUJZMDg3UVVGRFRFWXNZVUZCVDA0c1NVRkJVQ3hEUVVGWlR5eFBRVUZhTzBGQlJVUTdPMEZCUlVRc1YwRkJVVVFzVDBGQlQwc3NUVUZCVUN4RFFVRmpReXhQUVVGa0xFTkJRVkk3UVVGRlJEdEJRVU5HTEVNN096czdPenRCUTJ4UVJDeHJRa0ZCYTBJc2QwUTdPenM3T3p0QlEwRnNRanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hwUkVGQmFVUTdRVUZEYWtRc1EwRkJRenRCUVVORU8wRkJRMEVzY1VKQlFYRkNPMEZCUTNKQ08wRkJRMEVzVTBGQlV6dEJRVU5VTEVsQlFVazdRVUZEU2p0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JUczdPenM3TzBGRGNFUkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVHM3T3pzN08wRkRVRUVzYTBKQlFXdENMSGRFT3pzN096czdRVU5CYkVJc2EwSkJRV3RDTEhkRU96czdPenM3UVVOQmJFSXNhMEpCUVd0Q0xIZEVPenM3T3pzN1FVTkJiRUlzYTBKQlFXdENMSGRFT3pzN096czdRVU5CYkVJN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZPenM3T3pzN1FVTktRVHRCUVVOQkxEaEVPenM3T3pzN1FVTkVRVHRCUVVOQkxHOUVPenM3T3pzN1FVTkVRVHRCUVVOQkxEaEVPenM3T3pzN1FVTkVRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEdkRU96czdPenM3UVVOS1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMQ3RET3pzN096czdRVU5LUVR0QlFVTkJPMEZCUTBFc2RVUTdPenM3T3p0QlEwWkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFZEJRVWM3UVVGRFNDeEZPenM3T3pzN1FVTktRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0N4Rk96czdPenM3UVVOa1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeHhRMEZCY1VNc2FVSkJRV2xDTEVWQlFVVTdRVUZEZUVRN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEdkRlFVRm5SU3huUWtGQlowSTdRVUZEYUVZN1FVRkRRVHRCUVVOQkxFZEJRVWNzTWtOQlFUSkRMR2REUVVGblF6dEJRVU01UlR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzZDBJN096czdPenRCUTNoQ1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSUxFVTdPenM3T3p0QlEyWkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4Rk96czdPenM3UVVOUVFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVU3T3pzN096dEJRMHBCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFZEJRVWM3UVVGRFNEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVU3T3pzN096dEJRMWhCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxDdENRVUVyUWl4eFFrRkJjVUk3UVVGRGNFUXNLMEpCUVN0Q0xGTkJRVk1zUlVGQlJUdEJRVU14UXl4RFFVRkRMRlZCUVZVN08wRkJSVmc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc01rSkJRVEpDTEZOQlFWTXNiVUpCUVcxQ08wRkJRM1pFTEN0Q1FVRXJRaXhoUVVGaE8wRkJRelZETzBGQlEwRXNSMEZCUnl4VlFVRlZPMEZCUTJJN1FVRkRRU3hGT3pzN096czdRVU53UWtFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JUczdPenM3TzBGRFZFRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTlCUVU4N1FVRkRVRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVER0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHRCUVVOQk8wRkJRMEVzZFVOQlFYVkRMRzlDUVVGdlFpeEZRVUZGTzBGQlF6ZEVPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUjBGQlJ6dEJRVU5JTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4blFrRkJaMEk3UVVGRGFFSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hMUVVGTE8wRkJRMHc3UVVGRFFTeEZPenM3T3pzN1FVTnVSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNhMEpCUVd0Q096dEJRVVZzUWp0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0R0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3pzN096czdPMEZEYkVKQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnc1JUczdPenM3TzBGRFRrRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNhMFJCUVd0RU8wRkJRMnhFTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hQUVVGUExGVkJRVlVzWTBGQll6dEJRVU12UWp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMTEVkQlFVYzdRVUZEVWp0QlFVTkJMRVU3T3pzN096czdRVU40UWtFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzYjBKQlFXOUNMR0ZCUVdFN1FVRkRha01zUjBGQlJ6dEJRVU5JTEVVN096czdPenRCUTJKQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JUczdPenM3TzBGRFVFRTdRVUZEUVR0QlFVTkJMRGhDUVVFNFFpeG5RMEZCYjBNc1JUczdPenM3TzBGRFJteEZPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRU5CUVVNc1JUczdPenM3TzBGRFVrUTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNRMEZCUXl4Rk96czdPenM3UVVOU1JEdEJRVU5CTzBGQlEwRXNPRUpCUVRoQ0xEUkRRVUUwUXl4Rk96czdPenM3TzBGRFJqRkZPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc2IwTkJRVzlETzBGQlEzQkRPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNLME5CUVN0RExITkVRVUZwUkN4dlFrRkJiMEk3UVVGRGNFZzdRVUZEUVR0QlFVTkJMRWRCUVVjc1ZVRkJWVHRCUVVOaUxFTkJRVU03TzBGQlJVUTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnc1dVRkJXVHRCUVVOYU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZkQlFWYzdRVUZEV0R0QlFVTkJMRmRCUVZjN1FVRkRXQ3hUUVVGVE8wRkJRMVFzVDBGQlR6dEJRVU5RTzBGQlEwRTdRVUZEUVR0QlFVTkJMREpEUVVFeVF6dEJRVU16UXp0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVTBGQlV6dEJRVU5VTEcxQ1FVRnRRaXhuUTBGQlowTTdRVUZEYmtRc1UwRkJVenRCUVVOVU8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRURHRCUVVOQkxFZEJRVWM3UVVGRFNEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUzBGQlN6dEJRVU5NTEdWQlFXVXNjVU5CUVhGRE8wRkJRM0JFTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeHJRMEZCYTBNN1FVRkRiRU03UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeHJRMEZCYTBNN1FVRkRiRU03UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4MVFrRkJkVUlzZDBKQlFYZENPMEZCUXk5RE8wRkJRMEU3UVVGRFFTeFRRVUZUTzBGQlExUTdRVUZEUVR0QlFVTkJMRTlCUVU4N1FVRkRVQ3hMUVVGTE8wRkJRMHc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnc2EwSkJRV3RDTEhWQ1FVRjFRaXhMUVVGTE8wRkJRemxETzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNhVUpCUVdsQ08wRkJRMnBDTEhkQ1FVRjNRanRCUVVONFFpeG5Ra0ZCWjBJN1FVRkRhRUlzYjBKQlFXOUNPMEZCUTNCQ0xIZENRVUYzUWp0QlFVTjRRaXhuUWtGQlowSTdRVUZEYUVJc2IwSkJRVzlDTzBGQlEzQkNPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXM3UVVGRFREdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRU3d3UkVGQk1FUXNhMEpCUVd0Q08wRkJRelZGTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hEUVVGRE8wRkJRMFE3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeERRVUZETzBGQlEwUTdRVUZEUVR0QlFVTkJMRU5CUVVNN1FVRkRSRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVTBGQlV6dEJRVU5VTEU5QlFVODdRVUZEVUR0QlFVTkJMRXRCUVVzN1FVRkRURHRCUVVOQk8wRkJRMEVzUjBGQlJ6dEJRVU5JTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQXNTMEZCU3p0QlFVTk1PMEZCUTBFN1FVRkRRVHRCUVVOQkxFTkJRVU1zUlRzN096czdPenRCUXpGVFJEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeDFRa0ZCZFVJN1FVRkRka0k3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNjMEpCUVhOQ08wRkJRM1JDTEc5Q1FVRnZRaXgxUWtGQmRVSXNVMEZCVXl4SlFVRkpPMEZCUTNoRUxFZEJRVWM3UVVGRFNDeERRVUZETzBGQlEwUTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hEUVVGRE96dEJRVVZFTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEVOQlFVTTdRVUZEUkR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc2VVUkJRWGxFTzBGQlEzcEVPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEVzYzBKQlFYTkNMR2xEUVVGcFF6dEJRVU4yUkN4TFFVRkxPMEZCUTB3c1IwRkJSenRCUVVOSU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN3NFJFRkJPRVFzT0VKQlFUaENPMEZCUXpWR08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnpzN1FVRkZTRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRU3d3UkVGQk1FUXNaMEpCUVdkQ096dEJRVVV4UlR0QlFVTkJPMEZCUTBFN1FVRkRRU3h2UWtGQmIwSXNiMEpCUVc5Q096dEJRVVY0UXl3d1EwRkJNRU1zYjBKQlFXOUNPenRCUVVVNVJEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnc2QwSkJRWGRDTEdWQlFXVXNSVUZCUlR0QlFVTjZReXgzUWtGQmQwSXNaMEpCUVdkQ08wRkJRM2hETEVOQlFVTTdPMEZCUlVRN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeERRVUZET3p0QlFVVkVPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEc5RVFVRnZSQ3hMUVVGTExGRkJRVkVzYVVOQlFXbERPMEZCUTJ4SExFTkJRVU03UVVGRFJEdEJRVU5CTEN0RFFVRXJRenRCUVVNdlF6dEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRU5CUVVNN08wRkJSVVE3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3d3UXpzN096czdPMEZETVU5QkxIbERPenM3T3pzN1FVTkJRU3h6UXpzN096czdPenM3T3pzN096czdPMEZEUVVFc2EwSkJRV3RDTEhsRU96czdPenM3UVVOQmJFSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwdzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzYVVWQlFXbEZMREJFUVVFd1JDeEZRVUZGTzBGQlF6ZElPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3cyUkVGQk5rUXNNa1JCUVRKRU8wRkJRM2hJTEhGRVFVRnhSQ3d5UkVGQk1rUTdRVUZEYUVnN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hwUlVGQmFVVTdRVUZEYWtVN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeDNRa0ZCZDBJc2MwTkJRWE5ETzBGQlF6bEVPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4NVFrRkJlVUlzTkVSQlFUUkVPMEZCUTNKR08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNkMEpCUVhkQ0xDdERRVUVyUXp0QlFVTjJSVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEhkQ1FVRjNRaXh4UlVGQmNVVTdRVUZETjBZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzZDBKQlFYZENMSFZEUVVGMVF6dEJRVU12UkR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZGQlFWRTdRVUZEVWp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEhsRFFVRjVRenRCUVVONlF6dEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3gzUWtGQmQwSTdRVUZEZUVJN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZGQlFWRTdRVUZEVWl4cFJUdEJRVU5CTEhkRVFVRjNSQ3cyUjBGQk5rY3NSVUZCUlR0QlFVTjJTenRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRU3hoUVVGaE8wRkJRMkk3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVsQlFVazdRVUZEU2pzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4eFFrRkJjVUlzYTBkQlFXdEhPMEZCUTNaSU8wRkJRMEU3UVVGRFFTeE5RVUZOTzBGQlEwNHNTMEZCU3p0QlFVTk1PMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEc5Q1FVRnZRaXh0UjBGQmJVYzdRVUZEZGtnN1FVRkRRU3hOUVVGTk8wRkJRMDQ3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFc05FUTdRVUZEUVR0QlFVTkJPenRCUVVWQkxHdENRVUZyUWl4dlNVRkJiMGs3UVVGRGRFbzdRVUZEUVN4SlFVRkpPMEZCUTBvN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUdEJRVU5CTEVOQlFVTTdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3p0QlEzWlJSRHM3UVVGRFFUczdPenM3TzBGQmVFSkJPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3p0QlFUQkNRU3hKUVVGSlF5eGhRVUZoTEVWQlFVTkRMRXRCUVVzc1MwRkJUaXhGUVVGaFF5eFBRVUZQTEU5QlFYQkNMRVZCUVRaQ1F5eFBRVUZQTEU5QlFYQkRMRVZCUVdwQ096dEJRVVZCT3pzN096dEpRVWxOUXl4clFqczdPMEZCUTBvN096czdPenRCUVU5Qk96czdPenRCUVV0Qk8wRkJRMEVzT0VKQlFWbERMRXRCUVZvc1JVRkJiVUk3UVVGQlFUczdRVUZCUVN3clNrRkpXRUVzUzBGS1Z6dEJRVU5xUWp0QlFVTkJPenRCUVVsQkxGRkJRVWxETEdOQlFVbzdPMEZCUlVGQkxGVkJRVTFETEZGQlFVNHNSMEZCYVVKR0xFMUJRVTFITEU5QlFYWkNPMEZCUTBGR0xGVkJRVTFITEZGQlFVNHNSMEZCYVVJc1JVRkJha0k3TzBGQlJVRklMRlZCUVUxSkxGRkJRVTRzUTBGQlpVTXNUMEZCWml4RFFVRjFRaXhWUVVGRFF5eExRVUZFTEVWQlFWYzdRVUZEYUVOT0xGbEJRVTFQTEZOQlFVNHNRMEZCWjBKRUxFdEJRV2hDTzBGQlEwUXNTMEZHUkRzN1FVRkxRVTRzVlVGQlRWRXNhMEpCUVU0N1FVRm9RbWxDTzBGQmFVSnNRanM3UVVGRlJEczdPenM3T3pzeVFrRkhUenM3UVVGRlRDeFZRVUZKVWl4UlFVRlJMRWxCUVZvN1FVRkRRV2hFTEdOQlFWRjVSQ3hKUVVGU0xFTkJRV0VzTUVOQlFXSTdPMEZCUlVGVUxGbEJRVTFWTEZGQlFVNHNRMEZCWlVNc1NVRkJaaXhEUVVGdlFsZ3NUVUZCVFZrc1UwRkJUaXhEUVVGblFqRkZMRWRCUVhCRExFVkJRWGxETWtVc1NVRkJla01zUTBGQk9FTXNWVUZCUTNoRkxFdEJRVVFzUlVGQlV6dEJRVU55UkZjc1owSkJRVkY1UkN4SlFVRlNMRU5CUVdFc01rTkJRV0lzUlVGQk1FUndSU3hMUVVFeFJEczdRVUZGUVN3NFFrRkJZekpFTEUxQlFVMWpMRWxCUVhCQ0xFVkJRVEJDTEhOQ1FVRlZla1VzVFVGQlRYbEZMRWxCUVdoQ0xFTkJRVEZDT3p0QlFVVkJaQ3hqUVVGTlF5eFJRVUZPTEVkQlFXbENOVVFzVFVGQlRUWkVMRTlCUVhaQ096dEJRVVZCUml4alFVRk5XU3hUUVVGT0xFTkJRV2RDUnl4WlFVRm9RaXhIUVVFclFqRkZMRTFCUVUwd1JTeFpRVUZ5UXpzN1FVRkZRVHM3T3pzN096czdPMEZCWlVRc1QwRjRRa1FzUlVGM1FrZERMRXRCZUVKSUxFTkJkMEpUTEZWQlFVTkRMRTFCUVVRc1JVRkJXVHRCUVVOdVFtcEZMR2RDUVVGUmVVUXNTVUZCVWl4RFFVRmhMSGxEUVVGaUxFVkJRWGRFVVN4TlFVRjRSRHRCUVVORUxFOUJNVUpFTzBGQk5FSkVPenM3ZVVOQlJXOUNPMEZCUTI1Q08wRkJRMEVzVlVGQlNXcENMRkZCUVZFc1NVRkJXanM3UVVGRlFVRXNXVUZCVFd0Q0xHVkJRVTRzUjBGQmQwSnNRaXhOUVVGTmJVSXNTVUZCVGl4RFFVRlhReXhYUVVGWUxFTkJRWFZDY0VJc1RVRkJUWEZDTEVsQlFVNHNSMEZCWVN4VlFVRndReXhGUVVGblJDeFZRVUZEUXl4SFFVRkVMRVZCUVZNN1FVRkRMMFVzV1VGQlNVRXNTVUZCU1hwRkxFbEJRVW9zUzBGQllTeFJRVUZxUWl4RlFVRXlRanRCUVVONlFrY3NhMEpCUVZGblF5eEhRVUZTTEVOQlFWa3NkMEpCUVhkQ1owSXNUVUZCVFhGQ0xFbEJRVGxDTEVkQlFYRkRMRkZCUVdwRUxFVkJRVEpFUXl4SFFVRXpSRHRCUVVOQmRFSXNaMEpCUVUxMVFpeGhRVUZPTEVOQlFXOUNka0lzVFVGQlRVa3NVVUZCTVVJc1JVRkJiME5yUWl4SFFVRndRenRCUVVORU8wRkJRMFlzVDBGTWRVSXNRMEZCZUVJN1FVRk5SRHM3TzNkRFFVVnRRanRCUVVOc1FqdEJRVU5CTEZWQlFVbDBRaXhSUVVGUkxFbEJRVm83TzBGQlJVRkJMRmxCUVUxclFpeGxRVUZPTEVOQlFYTkNUU3hOUVVGMFFqdEJRVU5FT3p0QlFVVkVPenM3T3pzN09FSkJSMU03UVVGRFVDeFZRVUZKZUVJc1VVRkJVU3hKUVVGYU96dEJRVVZCUVN4WlFVRk5lVUlzVjBGQlRqdEJRVU5CZWtJc1dVRkJUVEJDTEdsQ1FVRk9PMEZCUTBFc1lVRkJUekZDTEUxQlFVMVZMRkZCUVU0c1EwRkJaV2xDTEZWQlFXWXNRMEZCTUVJelFpeE5RVUZOY1VJc1NVRkJhRU1zUTBGQlVEdEJRVU5FT3p0QlFVVkVPenM3T3pzN2EwTkJSMk03UVVGRFdpeFZRVUZKY2tJc1VVRkJVU3hKUVVGYU96dEJRVVZCTzBGQlEwRXNWVUZCU1RSQ0xHbENRVUZwUWp0QlFVTnVRaTlGTEdOQlFVMHNZVUZFWVN4RlFVTkZaMFlzVFVGQlRUZENMRTFCUVUwNFFpeE5RVVJrTEVWQlEzTkNReXhKUVVGSkwwSXNUVUZCVFZVc1VVRkJUaXhEUVVGbGMwSXNUMEZFZWtNN1FVRkZia0pETEdOQlFVMHNSVUZCUlVNc1ZVRkJWV3hETEUxQlFVMXhRaXhKUVVGc1FqdEJRVVpoTEU5QlFYSkNPenRCUVV0QmNrSXNXVUZCVFcxQ0xFbEJRVTRzUTBGQlYyZENMRmRCUVZnc1EwRkJkVUpRTEdOQlFYWkNMRVZCUVhWRExGVkJRVU5STEV0QlFVUXNSVUZCVnp0QlFVTm9SSEJHTEdkQ1FVRlJaME1zUjBGQlVpeERRVUZaTEd0RFFVRmFMRVZCUVdkRWIwUXNTMEZCYUVRN1FVRkRRU3haUVVGSlFTeE5RVUZOU0N4SlFVRk9MRU5CUVZkSkxFbEJRVmdzUzBGQmIwSXNSMEZCZUVJc1JVRkJOa0k3UVVGRE0wSnlReXhuUWtGQlRUQkNMR2xDUVVGT08wRkJRMEVzYVVKQlFVOHhRaXhOUVVGTlZTeFJRVUZPTEVOQlFXVnBRaXhWUVVGbUxFTkJRVEJDTTBJc1RVRkJUWEZDTEVsQlFXaERMRU5CUVZBN1FVRkRSRHRCUVVOR0xFOUJUa1E3UVVGUFJEczdRVUZGUkRzN096czdPenM3TmtKQlMxTTNRaXhOTEVWQlFWRTRReXhSTEVWQlFWVTdRVUZEZWtJc1ZVRkJTVU1zVFVGQlRTOURMRTFCUVZZN1FVRkRRU3hWUVVGSlowUXNXVUZCV1R0QlFVTmtNMFlzWTBGQlRUWkRMRmRCUVZkSExFdEJSRWc3UVVGRlpIbERMR3RDUVVGVlFUdEJRVVpKTEU5QlFXaENPenRCUVV0QkxGVkJRVWxITEUxQlFVMXFSQ3hQUVVGUGNFTXNUMEZCVUN4RFFVRmxMRWRCUVdZc1EwRkJWanRCUVVOQkxGVkJRVWx4Uml4UlFVRlJha1FzVDBGQlR5OUNMRTFCUVZBc1IwRkJaMElzUTBGQk5VSXNSVUZCSzBJN1FVRkROMElzV1VGQlNXZEdMRkZCUVZFc1EwRkJXaXhGUVVGbE8wRkJRMkpFTEc5Q1FVRlZNMFlzU1VGQlZpeEhRVUZwUWpaRExGZEJRVmRETEVkQlFUVkNPMEZCUTBRc1UwRkdSQ3hOUVVWUE8wRkJRMHcyUXl4dlFrRkJWVE5HTEVsQlFWWXNSMEZCYVVJMlF5eFhRVUZYUlN4TFFVRTFRanRCUVVOQk1rTXNaMEpCUVUwdlF5eFBRVUZQY2tNc1RVRkJVQ3hEUVVGakxFTkJRV1FzUlVGQmFVSnhReXhQUVVGUEwwSXNUVUZCVUN4SFFVRm5RaXhEUVVGcVF5eERRVUZPTzBGQlEwUTdRVUZEUmpzN1FVRkZSQ3hYUVVGTE1FTXNVVUZCVEN4RFFVRmpiME1zUjBGQlpDeEpRVUZ4UWtNc1UwRkJja0k3UVVGRFJEczdPemhDUVVWVGJFTXNTeXhGUVVGUE8wRkJRMllzVlVGQlNVNHNVVUZCVVN4SlFVRmFPenRCUVVWQkxEQkNRVUZaUVN4TlFVRk5SeXhSUVVGc1FpeEZRVUUwUW5oQ0xFOUJRVFZDTEVOQlFXOURMRlZCUVVNMFJDeEhRVUZFTEVWQlFWTTdRVUZETTBNc1dVRkJTUzlETEZOQlFWTlJMRTFCUVUxSExGRkJRVTRzUTBGQlpXOURMRWRCUVdZc1EwRkJZanRCUVVOQkxGbEJRVWt2UXl4UFFVRlBNME1zU1VGQlVDeExRVUZuUWpaRExGZEJRVmRETEVkQlFTOUNMRVZCUVc5RE8wRkJRMnhETzBGQlEwRklMR2xDUVVGUE9FTXNVVUZCVUN4RFFVRm5RbWhETEV0QlFXaENPMEZCUTBRc1UwRklSQ3hOUVVkUExFbEJRVWxrTEU5QlFVOHpReXhKUVVGUUxFdEJRV2RDTmtNc1YwRkJWMFVzUzBGQkwwSXNSVUZCYzBNN1FVRkRNME03UVVGRFFTeGpRVUZKVlN4TlFVRk5iME1zUzBGQlRpeERRVUZaZEVZc1QwRkJXaXhEUVVGdlFtMUdMRWRCUVhCQ0xFMUJRVFpDTEVOQlFXcERMRVZCUVc5RE8wRkJRMnhETDBNc2JVSkJRVTg0UXl4UlFVRlFMRU5CUVdkQ2FFTXNTMEZCYUVJN1FVRkRSRHRCUVVOR0xGTkJURTBzVFVGTFFTeEpRVUZKWkN4UFFVRlBNME1zU1VGQlVDeExRVUZuUWpaRExGZEJRVmRITEV0QlFTOUNMRVZCUVhORE8wRkJRek5ETzBGQlEwRXNZMEZCU1ZNc1RVRkJUVzlETEV0QlFVNHNTMEZCWjBKSUxFZEJRWEJDTEVWQlFYbENPMEZCUTNaQ0wwTXNiVUpCUVU4NFF5eFJRVUZRTEVOQlFXZENhRU1zUzBGQmFFSTdRVUZEUkR0QlFVTkdPMEZCUTBZc1QwRm9Ra1E3UVVGcFFrUTdPenR0UTBGRlkyZERMRkVzUlVGQlZUdEJRVUZCT3p0QlFVVjJRaXhoUVVGUExITkNRVUZaTEZWQlFVTkxMRTlCUVVRc1JVRkJWVU1zVFVGQlZpeEZRVUZ4UWpzN1FVRkZkRU1zWlVGQlMwTXNjMEpCUVV3c1IwRkRRMmhETEVsQlJFUXNRMEZEVFN4WlFVRk5PMEZCUTFZc2FVSkJRVXRwUXl4bFFVRk1MRWRCUVhWQ1VpeFJRVUYyUWp0QlFVTkJTenRCUVVORUxGTkJTa1FzUlVGTFF6TkNMRXRCVEVRc1EwRkxUeXhWUVVGREswSXNSMEZCUkR0QlFVRkJMR2xDUVVGVFNDeFBRVUZQUnl4SFFVRlFMRU5CUVZRN1FVRkJRU3hUUVV4UU8wRkJUVVFzVDBGU1RTeERRVUZRTzBGQlUwUTdPenMyUTBGRmQwSTdRVUZCUVRzN1FVRkZka0lzVlVGQlRYcENMRTFCUVUwN1FVRkRWbnBGTEdOQlFVMHNWMEZFU1R0QlFVVldaMFlzWTBGQlRTeExRVUZMUXl4TlFVWkVPMEZCUjFaRExGbEJRVWtzUzBGQlMzSkNMRkZCUVV3c1EwRkJZM05ETEZkQlFXUXNSMEZCTkVJc1owSkJTSFJDTzBGQlNWWm1MR05CUVUwN1FVRkRTbWRDTEhGQ1FVRlhMRU5CUVVNc1MwRkJTelZDTEVsQlFVd3NSMEZCV1N4bFFVRmlPMEZCUkZBN1FVRktTU3hQUVVGYU96dEJRVk5CTEdGQlFVOHNjMEpCUVZrc1ZVRkJRM05DTEU5QlFVUXNSVUZCVlVNc1RVRkJWaXhGUVVGeFFqczdRVUZGZEVNc1pVRkJTM3BDTEVsQlFVd3NRMEZCVldkQ0xGZEJRVllzUTBGQmMwSmlMRWRCUVhSQ0xFVkJRVEpDTEZWQlFVTmpMRXRCUVVRc1JVRkJWenRCUVVOd1EzQkdMR3RDUVVGUlowTXNSMEZCVWl4clJFRkJNa1FzVDBGQlMzRkRMRWxCUVdoRkxHOUNRVUZ4Um1Vc1MwRkJja1k3TzBGQlJVRXNZMEZCU1VFc1RVRkJUVWdzU1VGQlRpeERRVUZYU1N4SlFVRllMRXRCUVc5Q0xFZEJRWGhDTEVWQlFUWkNPMEZCUXpOQ0xHMUNRVUZMWVN4cFFrRkJUQ3hEUVVGMVFpeFBRVUZMTjBJc1NVRkJUQ3hIUVVGWkxHVkJRVzVETzBGQlEwRnpRanRCUVVORUxGZEJTRVFzVFVGSFR6dEJRVU5NTTBZc2IwSkJRVkZETEV0QlFWSXNRMEZCWXl3MFEwRkJaQ3hGUVVFMFJDeFBRVUZMYjBVc1NVRkJha1U3UVVGRFFYVkNMRzFDUVVGUExDdERRVUVyUXl4UFFVRkxka0lzU1VGQk0wUTdRVUZEUkR0QlFVTkdMRk5CVmtRN1FVRlhSQ3hQUVdKTkxFTkJRVkE3UVVGalJEczdPM05EUVVWcFFqaENMR1VzUlVGQmFVSTdRVUZEYWtNc1ZVRkJTVzVFTEZGQlFWRXNTVUZCV2pzN1FVRkZRVUVzV1VGQlRXMUNMRWxCUVU0c1EwRkJWME1zVjBGQldDeERRVUYxUWl0Q0xHVkJRWFpDTEVWQlFYZERMRlZCUVVNM1FpeEhRVUZFTEVWQlFWTTdRVUZETDBOMFJTeG5Ra0ZCVVdkRExFZEJRVklzYjBSQlFUWkVaMElzVFVGQlRYRkNMRWxCUVc1RkxGTkJRVFpGUXl4SFFVRTNSVHRCUVVOQkxGbEJRVWxCTEVsQlFVbFhMRWxCUVVvc1EwRkJVelZHTEV0QlFWUXNTVUZCYTBKcFJpeEpRVUZKVnl4SlFVRktMRU5CUVZNMVJpeExRVUZVTEV0QlFXMUNMR05CUVhKRExFbEJRWFZFTWtRc1RVRkJUVGhETEdWQlFXcEZMRVZCUVd0R08wRkJRMmhHT1VZc2EwSkJRVkZuUXl4SFFVRlNMREpDUVVGdlEyZENMRTFCUVUxeFFpeEpRVUV4UXl3d1FrRkJjVVZETEVkQlFYSkZPMEZCUTBGMFFpeG5Ra0ZCVFRoRExHVkJRVTQ3UVVGRFJEdEJRVVZHTEU5QlVFUTdRVUZSUkRzN1FVRkZSRHM3T3pzN096czdPelJDUVU5UlRTeE5MRVZCUVZGRExFMHNSVUZCVVR0QlFVRkJPenRCUVVOMFFpeFZRVUZKY2tRc1VVRkJVU3hKUVVGYU96dEJRVVZCTEdGQlFVOHNjMEpCUVZrc1ZVRkJRekpETEU5QlFVUXNSVUZCVlVNc1RVRkJWaXhGUVVGeFFqczdRVUZGZEVNc1dVRkJUWFJDTEUxQlFVMDdRVUZEVm5wRkxHZENRVUZOTEZOQlJFazdRVUZGVm1kR0xHZENRVUZOTEU5QlFVdERMRTFCUmtRN1FVRkhWa01zWTBGQlNTOUNMRTFCUVUxeFFpeEpRVWhCTzBGQlNWWlpMR2RDUVVGTk8wRkJRMHB0UWl4dlFrRkJVVUVzVFVGRVNqdEJRVVZLUXl4dlFrRkJVVUU3UVVGR1NqdEJRVXBKTEZOQlFWbzdPMEZCVlVGeVJDeGpRVUZOYlVJc1NVRkJUaXhEUVVGWFowSXNWMEZCV0N4RFFVRjFRbUlzUjBGQmRrSXNSVUZCTkVJc1ZVRkJRMk1zUzBGQlJDeEZRVUZYTzBGQlEzSkRjRVlzYTBKQlFWRm5ReXhIUVVGU0xHMURRVUUwUTJkQ0xFMUJRVTF4UWl4SlFVRnNSQ3h2UWtGQmRVVmxMRXRCUVhaRk96dEJRVVZCTEdOQlFVbEJMRTFCUVUxSUxFbEJRVTRzUTBGQlYwa3NTVUZCV0N4TFFVRnZRaXhIUVVGNFFpeEZRVUUyUWp0QlFVTXpRazA3UVVGRFJDeFhRVVpFTEUxQlJVODdRVUZEVEROR0xHOUNRVUZSYzBjc1QwRkJVaXgxUkVGQmIwVkdMRTFCUVhCRk8wRkJRMEZTTEhsRlFVRXlSRkVzVFVGQk0wUTdRVUZEUkR0QlFVTkdMRk5CVkVRN1FVRlZSQ3hQUVhSQ1RTeERRVUZRTzBGQmRVSkVPenM3ZFVKQkwxQjVReXd5UWpzN2EwSkJhMUUzUW5SRUxHdENPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN1FVTXpVV1k3T3pzN1FVRkZRVHM3T3p0QlFVVkJPenM3TzBGQk0wSkJPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3p0SlFTdENUWGxFTEd0Q096czdRVUZEU2pzN096czdPenM3UVVGVFFUczdPenM3UVVGTFF6dEJRVU5FTERoQ1FVRlplRVFzUzBGQldpeEZRVUZ0UWp0QlFVRkJPenRCUVVGQkxDdEtRVVZZUVN4TFFVWlhPenRCUVVkcVFpeFJRVUZKUXl4alFVRktPenRCUVVWQlFTeFZRVUZOZDBRc1kwRkJUaXhIUVVGMVFpeEZRVUYyUWpzN1FVRkZRWGhFTEZWQlFVMUpMRkZCUVU0c1EwRkJaVU1zVDBGQlppeERRVUYxUWl4VlFVRkRReXhMUVVGRUxFVkJRVmM3UVVGRGFFTjBSQ3hqUVVGUlowTXNSMEZCVWl4RFFVRlpMR3REUVVGclEyZENMRTFCUVUwNVJDeEhRVUY0UXl4SFFVRTRReXh0UWtGQk1VUXNSVUZCSzBWdlJTeExRVUV2UlR0QlFVTkJUaXhaUVVGTmVVUXNVMEZCVGl4RFFVRm5RbTVFTEV0QlFXaENPMEZCUTBRc1MwRklSRHM3UVVGTFFVNHNWVUZCVFZFc2EwSkJRVTQ3TzBGQlJVRlNMRlZCUVUwd1JDeFpRVUZPTEVkQlFYRkNMRVZCUVhKQ08wRkJaR2xDTzBGQlpXeENPenM3TzNsRFFVVnZRanRCUVVOdVFqdEJRVU5CTEZWQlFVa3hSQ3hSUVVGUkxFbEJRVm83TzBGQlJVRkJMRmxCUVUweVJDeGxRVUZPTEVkQlFYZENNMFFzVFVGQlRXMUNMRWxCUVU0c1EwRkJWME1zVjBGQldDeERRVUYxUW5CQ0xFMUJRVTF4UWl4SlFVRTNRaXhGUVVGdFF5eFZRVUZEUXl4SFFVRkVMRVZCUVZNN1FVRkRiRVYwUlN4blFrRkJVV2RETEVkQlFWSXNRMEZCV1N3eVEwRkJNa05uUWl4TlFVRk5jVUlzU1VGQmFrUXNSMEZCZDBRc1lVRkJjRVVzUlVGQmJVWkRMRWRCUVc1R08wRkJRMEVzWjBKQlFWRkJMRWxCUVVsNlJTeEpRVUZhTzBGQlEwVXNaVUZCU3l4VlFVRk1PMEZCUVdsQ2JVUXNhMEpCUVUwMFJDeFhRVUZPTEVOQlFXdENkRU1zUjBGQmJFSXNSVUZCZDBJN1FVRkRla01zWlVGQlN5eE5RVUZNTzBGQlFXRjBRaXhyUWtGQlRUWkVMRTlCUVU0c1EwRkJZM1pETEVkQlFXUXNSVUZCYjBJN1FVRkRha01zWlVGQlN5eFRRVUZNTzBGQlFXZENkRUlzYTBKQlFVMDRSQ3hWUVVGT0xFTkJRV2xDZUVNc1IwRkJha0lzUlVGQmRVSTdRVUZJZWtNN1FVRkxSQ3hQUVZCMVFpeERRVUY0UWp0QlFWRkVPenM3ZDBOQlJXMUNPMEZCUTJ4Q08wRkJRMEVzVlVGQlNYUkNMRkZCUVZFc1NVRkJXanM3UVVGRlFVRXNXVUZCVFRKRUxHVkJRVTRzUTBGQmMwSnVReXhOUVVGMFFqdEJRVU5FT3p0QlFVVkVPenM3T3pzN08yOURRVWxuUW5WRExGTXNSVUZCVnp0QlFVTjZRaXhWUVVGSkwwUXNVVUZCVVN4SlFVRmFPenRCUVVkQk8wRkJRMEU3TzBGQlJVRXNWVUZCU1dkRkxGZEJRVmNzUlVGQlpqczdRVUZGUVVRc1owSkJRVlZ3Uml4UFFVRldMRU5CUVd0Q0xGVkJRVU56Uml4UlFVRkVMRVZCUVdFN1FVRkROMElzV1VGQlNTeERRVUZEYWtVc1RVRkJUVEJFTEZsQlFVNHNRMEZCYlVKUExGRkJRVzVDTEVOQlFVd3NSVUZCYlVNN1FVRkRha05FTEcxQ1FVRlRia1lzU1VGQlZDeERRVUZqYjBZc1VVRkJaRHRCUVVOQmFrVXNaMEpCUVUwd1JDeFpRVUZPTEVOQlFXMUNUeXhSUVVGdVFpeEpRVUVyUWtFc1VVRkJMMEk3UVVGRFJEdEJRVU5HTEU5QlRFUTdPMEZCVDBFc1ZVRkJTVVFzVTBGQlUzWkhMRTFCUVZRc1IwRkJhMElzUTBGQmRFSXNSVUZCZVVJN1FVRkRka0pVTEdkQ1FVRlJaME1zUjBGQlVpeERRVUZaTEN0RFFVRmFMRVZCUVRaRVowWXNVVUZCTjBRc1JVRkJkVVZvUlN4TlFVRk5XU3hUUVVFM1JUczdRVUZGUVN4WlFVRkpjMFFzV1VGQldUdEJRVU5rY2tnc1owSkJRVTBzVVVGRVVTeEZRVU5GWjBZc1RVRkJUVGRDTEUxQlFVMVZMRkZCUVU0c1EwRkJaVzlDTEUxQlJIWkNMRVZCUXl0Q1F5eEpRVUZKTDBJc1RVRkJUVlVzVVVGQlRpeERRVUZsYzBJc1QwRkViRVE3UVVGRlpFTXNaMEpCUVUwc1JVRkJSV3RETEZGQlFWRXNTMEZCVml4RlFVRnBRbXBETEZWQlFWVnNReXhOUVVGTmNVSXNTVUZCYWtNc1JVRkJkVU1yUXl4UlFVRlJjRVVzVFVGQlRYRkZMRTlCUVhKRUxFVkJRVGhFYUVrc1QwRkJUekpFTEUxQlFVMVpMRk5CUVRORkxFVkJRWE5HTUVRc1YwRkJWMDRzVVVGQmFrYzdRVUZHVVN4VFFVRm9RanM3UVVGTFFXaEZMR05CUVUxdFFpeEpRVUZPTEVOQlFWZG5RaXhYUVVGWUxFTkJRWFZDSzBJc1UwRkJka0k3UVVGRlJEdEJRVU5HT3p0QlFVVkVPenM3T3pzN09FSkJSMU03UVVGRFVDeFZRVUZKYkVVc1VVRkJVU3hKUVVGYU96dEJRVVZCTzBGQlEwRXNWVUZCU1hWRkxGbEJRVms3UVVGRFpERklMR05CUVUwc1VVRkVVU3hGUVVORlowWXNUVUZCVFRkQ0xFMUJRVTA0UWl4TlFVUmtMRVZCUTNOQ1F5eEpRVUZKTDBJc1RVRkJUVlVzVVVGQlRpeERRVUZsYzBJc1QwRkVla003UVVGRlpFTXNZMEZCVFN4RlFVRkZReXhWUVVGVmJFTXNUVUZCVFhGQ0xFbEJRV3hDTzBGQlJsRXNUMEZCYUVJN08wRkJTMEZ5UWl4WlFVRk5iVUlzU1VGQlRpeERRVUZYWjBJc1YwRkJXQ3hEUVVGMVFtOURMRk5CUVhaQ0xFVkJRV3RETEZWQlFVTnVReXhMUVVGRUxFVkJRVmM3UVVGRE0wTndSaXhuUWtGQlVXZERMRWRCUVZJc1EwRkJXU3cyUWtGQldpeEZRVUV5UTI5RUxFdEJRVE5ETzBGQlEwRXNXVUZCU1VFc1RVRkJUVWdzU1VGQlRpeERRVUZYU1N4SlFVRllMRXRCUVc5Q0xFZEJRWGhDTEVWQlFUWkNPMEZCUXpOQ2NrTXNaMEpCUVUwd1FpeHBRa0ZCVGp0QlFVTkJMR2xDUVVGUE1VSXNUVUZCVFZVc1VVRkJUaXhEUVVGbE9FUXNWVUZCWml4RFFVRXdRbmhGTEUxQlFVMXhRaXhKUVVGb1F5eERRVUZRT3p0QlFVVkJPMEZCUTBGeVFpeG5Ra0ZCVFVrc1VVRkJUaXhIUVVGcFFpeEZRVUZxUWp0QlFVTkVPMEZCUTBZc1QwRlVSRHRCUVZWRU96dEJRVVZFT3pzN096czdPenM3UVVGTlFUczdPenR0UTBGSlpXdERMRkVzUlVGQlZUdEJRVU4yUWl4WFFVRkxiVU1zYzBKQlFVd3NSMEZCT0VKdVF5eFJRVUU1UWp0QlFVTkVPenRCUVVWRU96czdPenM3T3l0Q1FVbFhRU3hSTEVWQlFWVTdRVUZEYmtJc1YwRkJTMjlETEd0Q1FVRk1MRWRCUVRCQ2NFTXNVVUZCTVVJN1FVRkRSRHM3UVVGRlJEczdPenM3T3pzeVFrRkxUMEVzVVN4RlFVRlZPMEZCUTJZc1YwRkJTM0ZETEdOQlFVd3NSMEZCYzBKeVF5eFJRVUYwUWp0QlFVTkVPenRCUVVWRU96czdPenM3T3poQ1FVdFZRU3hSTEVWQlFWVTdRVUZEYkVJc1YwRkJTM05ETEdsQ1FVRk1MRWRCUVhsQ2RFTXNVVUZCZWtJN1FVRkRSRHM3UVVGRlJEczdPenNyUWtGRFYyaENMRWNzUlVGQlN6dEJRVU5rTEZWQlFVbDBRaXhSUVVGUkxFbEJRVm83TzBGQlJVRm9SQ3hqUVVGUlowTXNSMEZCVWl4RFFVRlpMREJDUVVGYUxFVkJRWGREYzBNc1IwRkJlRU03UVVGRFFTeGpRVUZSUVN4SlFVRkpWeXhKUVVGS0xFTkJRVk53Uml4SlFVRnFRanRCUVVORkxHRkJRVXNzVjBGQlREdEJRVUZyUW0xRUxHZENRVUZOTmtVc1dVRkJUaXhEUVVGdFFuWkVMRWRCUVc1Q0xFVkJRWGxDTzBGQlF6TkRMR0ZCUVVzc1lVRkJURHRCUVVGdlFuUkNMR2RDUVVGTk9FVXNZMEZCVGl4RFFVRnhRbmhFTEVkQlFYSkNMRVZCUVRKQ08wRkJSbXBFTzBGQlNVUTdPMEZCUlVRN096czdhVU5CUTJGQkxFY3NSVUZCU3p0QlFVRkJPenRCUVVOb1FpeFZRVUZKZEVJc1VVRkJVU3hKUVVGYU8wRkJRMEVzVlVGQlNTdEZMR0ZCUVdGNlJDeEpRVUZKVnl4SlFVRktMRU5CUVZOS0xFbEJRVEZDTzBGQlEwRXNWVUZCU1RWRUxHRkJRV0VzYzBKQlFWVTRSeXhWUVVGV0xFTkJRV3BDTzBGQlEwRXNWVUZCU1dwSkxGTkJRVk50UWl4WFFVRlhia0lzVFVGQmVFSTdPMEZCUlVGRkxHTkJRVkZuUXl4SFFVRlNMRU5CUVZrc2JVTkJRVm9zUlVGQmFVUnpReXhIUVVGcVJDeEZRVUZ6UkhoRkxFMUJRWFJFTEVWQlFUaEViVUlzVlVGQk9VUTdPMEZCUlVFc1ZVRkJTWEZETEZGQlFWRTdRVUZEVm5wRUxHTkJRVTE1UlN4SlFVRkpWeXhKUVVGS0xFTkJRVk53Uml4SlFVUk1PMEZCUlZaWUxHRkJRVXMyU1N4VlFVWkxPenRCUVVsV2Fra3NaMEpCUVZGQkxFMUJTa1U3TzBGQlRWWkRMR3RDUVVGVmRVVXNTVUZCU1Zjc1NVRkJTaXhEUVVGVGJFWXNVVUZPVkRzN1FVRlJWbWxKTEdkQ1FVRlJMR3RDUVVGTk8wRkJRMW83UVVGRFFTeGpRVUZKUXl4TlFVRk5MRVZCUVVVdlNTeExRVUZMTmtrc1ZVRkJVQ3hGUVVGdFFrY3NVVUZCVVN4TlFVRXpRaXhGUVVGV08wRkJRMEZzUml4blFrRkJUWGRFTEdOQlFVNHNRMEZCY1VKMVFpeFZRVUZ5UWl4SlFVRnRRMFVzUjBGQmJrTTdRVUZEUVN4alFVRkpha1lzVFVGQlRXMUdMRkZCUVU0c1EwRkJaVU1zWVVGQmJrSXNSVUZCYTBNN1FVRkJSWEJHTEd0Q1FVRk5iVVlzVVVGQlRpeERRVUZsUXl4aFFVRm1MRU5CUVRaQ2RrY3NTVUZCTjBJc1EwRkJhME52Unl4SlFVRkpMMGtzUjBGQmRFTTdRVUZCTmtNN08wRkJSV3BHTEdOQlFVbHRTaXhYUVVGWGNrWXNUVUZCVFZrc1UwRkJja0k3UVVGRFFYbEZMRzFDUVVGVGRrVXNTVUZCVkN4SFFVRm5RaXh6UWtGQlZXUXNUVUZCVFdNc1NVRkJhRUlzUTBGQmFFSTdRVUZEUVhWRkxHMUNRVUZUYmtZc1QwRkJWQ3hIUVVGdFFrWXNUVUZCVFVNc1VVRkJla0k3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFc1kwRkJTWEZHTEZWQlFWVTdRVUZEV2tNc1owSkJRVWxxUlN4SlFVRkphVVVzUlVGRVNTeEZRVU5CTVVrc1RVRkJUU3hWUVVST0xFVkJRMnRDWjBZc1RVRkJUVkFzU1VGQlNWTXNSVUZFTlVJc1JVRkRaME5CTEVsQlFVbFVMRWxCUVVsUExFbEJSSGhETzBGQlJWcEpMR3RDUVVGTkxFVkJRVVZKTEUxQlFVMHNSMEZCVWl4RlFVRmhLMElzVVVGQlVYQkZMRTFCUVUxeFJTeFBRVUV6UWl4RlFVRnZRMmhKTEU5QlFVOW5TaXhSUVVFelF6dEJRVVpOTEZkQlFXUTdPMEZCUzBFN1FVRkRRU3hqUVVGSkwwUXNTVUZCU1Zjc1NVRkJTaXhEUVVGVGRVUXNZMEZCVkN4RFFVRjNRaXh6UWtGQmVFSXNTMEZCYlVRc1EwRkJRMnhGTEVsQlFVbFhMRWxCUVVvc1EwRkJVM2RFTEc5Q1FVRnFSU3hGUVVGMVJqdEJRVU55Umtnc2IwSkJRVkZ5UkN4SlFVRlNMRU5CUVdGM1JDeHZRa0ZCWWl4SFFVRnZReXhQUVVGTFF5eHhRa0ZCZWtNN1FVRkRRU3h0UWtGQlMwRXNjVUpCUVV3c1IwRkJOa0p3UlN4SlFVRkpWeXhKUVVGS0xFTkJRVk4zUkN4dlFrRkJkRU03UVVGRFJEczdRVUZGUkR0QlFVTkJla1lzWjBKQlFVMXRRaXhKUVVGT0xFTkJRVmRuUWl4WFFVRllMRU5CUVhWQ2JVUXNUMEZCZGtJN08wRkJSVUVzYVVKQlFVOU1MRWRCUVZBN1FVRkRSQ3hUUVRWRFV6czdRVUU0UTFaeVF5eG5Ra0ZCVVN4blFrRkJRek5DTEUxQlFVUXNSVUZCV1R0QlFVTnNRanRCUVVOQmFrSXNaMEpCUVUxdFFpeEpRVUZPTEVOQlFWZG5RaXhYUVVGWUxFTkJRWFZDTzBGQlEzSkNiMFFzWjBKQlFVbHFSU3hKUVVGSmFVVXNSVUZFWVN4RlFVTlVNVWtzVFVGQlRTeFZRVVJITEVWQlExTm5SaXhOUVVGTlVDeEpRVUZKVXl4RlFVUnVRaXhGUVVOMVFrRXNTVUZCU1ZRc1NVRkJTVThzU1VGRUwwSTdRVUZGY2tKSkxHdENRVUZOTEVWQlFVVkpMRTFCUVUwc1IwRkJVaXhGUVVGaGMwUXNUVUZCVFRGRkxFMUJRVzVDTzBGQlJtVXNWMEZCZGtJN1FVRkpSRHRCUVhCRVV5eFBRVUZhT3p0QlFYVkVRU3hWUVVGSmFrSXNUVUZCVFhsRkxITkNRVUZXTEVWQlFXdERPMEZCUTJoRGVrZ3NaMEpCUVZGblF5eEhRVUZTTEVOQlFWa3NjMEpCUVZvc1JVRkJiME56UWl4TFFVRndRenRCUVVOQlRpeGpRVUZOZVVVc2MwSkJRVTRzUTBGQk5rSnVSU3hMUVVFM1FqdEJRVU5FTzBGQlEwWTdPMEZCUlVRN096czdiVU5CUTJWblFpeEhMRVZCUVVzN1FVRkRiRUlzVlVGQlNYUkNMRkZCUVZFc1NVRkJXanRCUVVOQkxGVkJRVWtyUlN4aFFVRmhla1FzU1VGQlNWY3NTVUZCU2l4RFFVRlRTaXhKUVVFeFFqdEJRVU5CTEZWQlFVazFSQ3hoUVVGaExITkNRVUZWT0Vjc1ZVRkJWaXhEUVVGcVFqdEJRVU5CTEZWQlFVbHFTU3hUUVVGVGJVSXNWMEZCVjI1Q0xFMUJRWGhDT3p0QlFVVkJSU3hqUVVGUlowTXNSMEZCVWl4RFFVRlpMSEZEUVVGYUxFVkJRVzFFYzBNc1IwRkJia1FzUlVGQmQwUjRSU3hOUVVGNFJDeEZRVUZuUlcxQ0xGVkJRV2hGT3p0QlFVVkJPMEZCUTBFc1lVRkJUeXRDTEUxQlFVMTNSQ3hqUVVGT0xFTkJRWEZDZFVJc1ZVRkJja0lzUTBGQlVEdEJRVU5CTEdGQlFVOHZSU3hOUVVGTk1FUXNXVUZCVGl4RFFVRnRRbkZDTEZWQlFXNUNMRU5CUVZBN08wRkJSVUVzVlVGQlNYcEZMRkZCUVZFN1FVRkRWbnBFTEdOQlFVMTVSU3hKUVVGSlZ5eEpRVUZLTEVOQlFWTndSaXhKUVVSTU8wRkJSVlpZTEdGQlFVczJTU3hWUVVaTE8wRkJSMVpxU1N4blFrRkJVVUVzVFVGSVJUdEJRVWxXUXl4clFrRkJWWFZGTEVsQlFVbFhMRWxCUVVvc1EwRkJVMnhHTzBGQlNsUXNUMEZCV2pzN1FVRlBRVHRCUVVOQkxGVkJRVWxwUkN4TlFVRk5lVVVzYzBKQlFWWXNSVUZCYTBNN1FVRkRhRU42U0N4blFrRkJVV2RETEVkQlFWSXNRMEZCV1N4NVFrRkJXaXhGUVVGMVEzTkNMRXRCUVhaRE8wRkJRMEZPTEdOQlFVMTVSU3h6UWtGQlRpeERRVUUyUW01RkxFdEJRVGRDTzBGQlEwUTdRVUZEUmpzN1FVRkZSRHM3T3p0blEwRkRXV2RDTEVjc1JVRkJTenRCUVVObUxGVkJRVWwwUWl4UlFVRlJMRWxCUVZvN08wRkJSVUVzVlVGQlNVMHNVVUZCVVR0QlFVTldla1FzWTBGQlRYbEZMRWxCUVVsNlJTeEpRVVJCTzBGQlJWWllMR0ZCUVV0dlJpeEpRVUZKVHl4SlFVWkRPMEZCUjFaUkxHTkJRVTFtTEVsQlFVbFhMRWxCUVVvc1EwRkJVMGs3UVVGSVRDeFBRVUZhT3p0QlFVMUJMRlZCUVVseVF5eE5RVUZOTUVVc2EwSkJRVllzUlVGQk9FSTdRVUZETlVJeFNDeG5Ra0ZCVVdkRExFZEJRVklzUTBGQldTeHJRa0ZCV2l4RlFVRm5RM05DTEV0QlFXaERPMEZCUTBGT0xHTkJRVTB3UlN4clFrRkJUaXhEUVVGNVFuQkZMRXRCUVhwQ08wRkJRMFE3UVVGRFJqczdRVUZGUkRzN096czBRa0ZEVVdkQ0xFY3NSVUZCU3p0QlFVTllMRlZCUVVsMFFpeFJRVUZSTEVsQlFWbzdRVUZEUVN4VlFVRkpORVlzWTBGQll5eHpRa0ZCVlRWR0xFMUJRVTF0Uml4UlFVRm9RaXhEUVVGc1FqdEJRVU5CVXl4clFrRkJXVGxGTEVsQlFWb3NSMEZCYlVJc2MwSkJRVlZrTEUxQlFVMWpMRWxCUVdoQ0xFTkJRVzVDTzBGQlEwRTRSU3hyUWtGQldURkdMRTlCUVZvc1IwRkJjMEpHTEUxQlFVMURMRkZCUVRWQ096dEJRVVZCTEZWQlFVazBSaXhYUVVGWE8wRkJRMkpPTEZsQlFVbHFSU3hKUVVGSmFVVXNSVUZFU3l4RlFVTkVNVWtzVFVGQlRTeFZRVVJNTEVWQlEybENaMFlzVFVGQlRWQXNTVUZCU1ZNc1JVRkVNMElzUlVGREswSkJMRWxCUVVsVUxFbEJRVWxQTEVsQlJIWkRPMEZCUldKSkxHTkJRVTBzUlVGQlJVa3NUVUZCVFN4SFFVRlNMRVZCUVdGb1J5eFBRVUZQZFVvc1YwRkJjRUk3UVVGR1R5eFBRVUZtT3p0QlFVdEJMRlZCUVVsMFJpeFJRVUZSTzBGQlExWjZSQ3hqUVVGTmVVVXNTVUZCU1hwRkxFbEJSRUU3UVVGRlZsZ3NZVUZCUzI5R0xFbEJRVWxQTEVsQlJrTTdPMEZCU1ZadFJDeG5Ra0ZCVVN4clFrRkJUVHRCUVVOYWFFWXNaMEpCUVUxdFFpeEpRVUZPTEVOQlFWZG5RaXhYUVVGWUxFTkJRWFZDTUVRc1VVRkJka0k3UVVGRFJDeFRRVTVUT3p0QlFWRldha1FzWjBKQlFWRXNaMEpCUVVNelFpeE5RVUZFTEVWQlFWazdRVUZEYkVKcVFpeG5Ra0ZCVFcxQ0xFbEJRVTRzUTBGQlYyZENMRmRCUVZnc1EwRkJkVUk3UVVGRGNrSnZSQ3huUWtGQlNXcEZMRWxCUVVscFJTeEZRVVJoTEVWQlExUXhTU3hOUVVGTkxGVkJSRWNzUlVGRFUyZEdMRTFCUVUxUUxFbEJRVWxUTEVWQlJHNUNMRVZCUTNWQ1FTeEpRVUZKVkN4SlFVRkpUeXhKUVVRdlFqdEJRVVZ5UWtrc2EwSkJRVTBzUlVGQlJVa3NUVUZCVFN4SFFVRlNMRVZCUVdGelJDeE5RVUZOTVVVc1RVRkJia0k3UVVGR1pTeFhRVUYyUWp0QlFVbEVPMEZCWWxNc1QwRkJXanM3UVVGblFrRTdRVUZEUVN4VlFVRkpiVVVzWjBKQlFXZENMRVZCUVhCQ096dEJRVVZCTEZWQlFVbHdSaXhOUVVGTmJVWXNVVUZCVGl4RFFVRmxReXhoUVVGdVFpeEZRVUZyUXp0QlFVTm9RMEVzZDBKQlFXZENjRVlzVFVGQlRXMUdMRkZCUVU0c1EwRkJaVU1zWVVGQkwwSTdRVUZEUkN4UFFVWkVMRTFCUlU4c1NVRkJTWEJHTEUxQlFVMTNSQ3hqUVVGV0xFVkJRVEJDTzBGQlF5OUNORUlzZDBKQlFXZENMRzlDUVVGWmNFWXNUVUZCVFhkRUxHTkJRV3hDTEVWQlFXdERNVVVzUjBGQmJFTXNRMEZCYzBNc1ZVRkJVM2xFTEVkQlFWUXNSVUZCWXp0QlFVRkZMR2xDUVVGUGRrTXNUVUZCVFhkRUxHTkJRVTRzUTBGQmNVSnFRaXhIUVVGeVFpeEZRVUV3UW5KSExFZEJRV3BETzBGQlFYVkRMRk5CUVRkR0xFTkJRV2hDTzBGQlEwUTdPMEZCUlVRc1ZVRkJTV3RLTEdOQlFXTm9TU3hQUVVGa0xFTkJRWE5DYTBVc1NVRkJTVThzU1VGQk1VSXNTMEZCYlVNc1EwRkJReXhEUVVGNFF5eEZRVUV5UXp0QlFVTjZRemRDTEdOQlFVMXRRaXhKUVVGT0xFTkJRVmRuUWl4WFFVRllMRU5CUVhWQ01FUXNVVUZCZGtJN1FVRkRSQ3hQUVVaRUxFMUJSVThzU1VGQlNUZEdMRTFCUVUweVJTeGpRVUZXTEVWQlFUQkNPMEZCUXk5Q00wZ3NaMEpCUVZGblF5eEhRVUZTTEVOQlFWa3NZMEZCV2l4RlFVRTBRbk5DTEV0QlFUVkNPMEZCUTBGT0xHTkJRVTB5UlN4alFVRk9MRU5CUVhGQ2NrVXNTMEZCY2tJN1FVRkRSRHRCUVVOR096dEJRVVZFT3pzN095dENRVU5YWjBJc1J5eEZRVUZMTzBGQlEyUXNWVUZCU1hSQ0xGRkJRVkVzU1VGQldqczdRVUZGUVN4VlFVRkpMRU5CUVVOelFpeEpRVUZKVnl4SlFVRktMRU5CUVZOdFFpeE5RVUZrTEVWQlFYTkNMRTFCUVUwc2JVUkJRVzFFT1VJc1IwRkJla1E3TzBGQlJYUkNMRlZCUVVsMVJTeFhRVUZYTzBGQlEySk9MRmxCUVVscVJTeEpRVUZKYVVVc1JVRkVTeXhGUVVORU1Va3NUVUZCVFN4VlFVUk1MRVZCUTJsQ1owWXNUVUZCVFZBc1NVRkJTVk1zUlVGRU0wSXNSVUZESzBKQkxFbEJRVWxVTEVsQlFVbFBMRWxCUkhaRE8wRkJSV0pKTEdOQlFVMHNSVUZCUlVrc1RVRkJUU3hIUVVGU08wRkJSazhzVDBGQlpqczdRVUZMUVN4VlFVRkpMMElzVVVGQlVUdEJRVU5XZWtRc1kwRkJUWGxGTEVsQlFVbDZSU3hKUVVSQk8wRkJSVlpZTEdGQlFVdHZSaXhKUVVGSlR5eEpRVVpETzBGQlIxWjFRaXhuUWtGQlVUbENMRWxCUVVsWExFbEJRVW9zUTBGQlUyMUNMRTFCU0ZBN1FVRkpWa01zWjBKQlFWRXZRaXhKUVVGSlZ5eEpRVUZLTEVOQlFWTnZRaXhOUVVwUU96dEJRVTFXTWtJc1owSkJRVkVzYTBKQlFVMDdRVUZEV21oR0xHZENRVUZOYlVJc1NVRkJUaXhEUVVGWFowSXNWMEZCV0N4RFFVRjFRakJFTEZGQlFYWkNPMEZCUTBRc1UwRlNVenM3UVVGVlZtcEVMR2RDUVVGUkxHZENRVUZETTBJc1RVRkJSQ3hGUVVGWk8wRkJRMnhDYWtJc1owSkJRVTF0UWl4SlFVRk9MRU5CUVZkblFpeFhRVUZZTEVOQlFYVkNPMEZCUTNKQ2IwUXNaMEpCUVVscVJTeEpRVUZKYVVVc1JVRkVZU3hGUVVOVU1Va3NUVUZCVFN4VlFVUkhMRVZCUTFOblJpeE5RVUZOVUN4SlFVRkpVeXhGUVVSdVFpeEZRVU4xUWtFc1NVRkJTVlFzU1VGQlNVOHNTVUZFTDBJN1FVRkZja0pKTEd0Q1FVRk5MRVZCUVVWSkxFMUJRVTBzUjBGQlVpeEZRVUZoYzBRc1RVRkJUVEZGTEUxQlFXNUNPMEZCUm1Vc1YwRkJka0k3UVVGSlJEdEJRV1pUTEU5QlFWbzdPMEZCYTBKQkxGVkJRVWxxUWl4TlFVRk5ORVVzYVVKQlFWWXNSVUZCTmtJN1FVRkRNMEkxU0N4blFrRkJVV2RETEVkQlFWSXNRMEZCV1N4elEwRkJXaXhGUVVGdlJITkNMRXRCUVhCRU8wRkJRMEZPTEdOQlFVMDBSU3hwUWtGQlRpeERRVUYzUW5SRkxFdEJRWGhDTzBGQlEwUTdRVUZEUmpzN08zZENRVGxQYlVJN1FVRkJSU3hoUVVGUExFdEJRVXRyUkN4alFVRmFPMEZCUVRaQ096czdkVUpCYmtoVUxESkNPenRyUWtGeFZ6ZENSQ3hyUWpzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenRCUXpkWFpqczdPenRCUVVOQk96czdPMEZCUTBFN096czdRVUZGUVRzN096dEpRVWxOZFVNc1ZUdEJRVU5LT3pzN096czdPenM3T3pzN096dEJRV2xDUVRzN096dEJRVWxCTzBGQlEwRXNjMEpCUVZrdlJpeExRVUZhTEVWQlFXMUNPMEZCUVVFN08wRkJRMnBDTEZGQlFVbERMRkZCUVZFc1NVRkJXanM3UVVGRlFTeGhRVUZUSzBZc09FSkJRVlFzUTBGQmQwTkRMRWRCUVhoRExFVkJRVFpETzBGQlF6TkRMRmxCUVUwc2EwSkJRV3RDUVN4SFFVRnNRaXhIUVVGM1FpeHBRMEZCT1VJN1FVRkRSRHM3UVVGRlJHcEhMRlZCUVUxclJ5eFBRVUZPTEVkQlFXZENha2NzVFVGQlRWVXNVVUZCVGl4SFFVRnBRbGdzVFVGQlRXdEhMRTlCUVhaRExFZEJRV2xFUml3clFrRkJLMElzVTBGQkwwSXNRMEZCYWtRN1FVRkRRV2hITEZWQlFVMDNSQ3hIUVVGT0xFZEJRV0U0UkN4TlFVRk5jVUlzU1VGQlRpeEhRVUZoZEVJc1RVRkJUVGRFTEVkQlFXaERMRWRCUVhORE5rb3NLMEpCUVN0Q0xFdEJRUzlDTEVOQlFYUkRPMEZCUTBGb1J5eFZRVUZOYlVjc1QwRkJUaXhIUVVGblFteEhMRTFCUVUxdFJ5eFJRVUZPTEVkQlFXbENjRWNzVFVGQlRXMUhMRTlCUVhaRExFZEJRV2xFU0N3clFrRkJLMElzVTBGQkwwSXNRMEZCYWtRN1FVRkRRV2hITEZWQlFVMXhSeXhSUVVGT0xFZEJRV2xDY0Vjc1RVRkJUWEZITEZOQlFVNHNSMEZCYTBKMFJ5eE5RVUZOY1Vjc1VVRkJla01zUjBGQmIwUk1MQ3RDUVVFclFpeFZRVUV2UWl4RFFVRndSRHRCUVVOQmFFY3NWVUZCVFhWSExFOUJRVTRzUjBGQlowSjBSeXhOUVVGTmRVY3NVVUZCVGl4SFFVRnBRbmhITEUxQlFVMTFSeXhQUVVGMlF5eEhRVUZwUkZBc0swSkJRU3RDTEZOQlFTOUNMRU5CUVdwRU8wRkJRMEZvUnl4VlFVRk5jVVVzVFVGQlRpeEhRVUZsY0VVc1RVRkJUWEZGTEU5QlFVNHNSMEZCWjBKMFJTeE5RVUZOY1VVc1RVRkJja01zUjBGQk9FTXlRaXdyUWtGQkswSXNVVUZCTDBJc1EwRkJPVU03UVVGRFFXaEhMRlZCUVUxNVJ5eEpRVUZPTEVkQlFXRjRSeXhOUVVGTmVVY3NTMEZCVGl4SFFVRmpNVWNzVFVGQlRYbEhMRWxCUVdwRExFZEJRWGREVkN3clFrRkJLMElzVFVGQkwwSXNRMEZCZUVNN08wRkJSMEV2Uml4VlFVRk5NRWNzVDBGQlRpeEhRVUZuUWpOSExFMUJRVTF0Uml4TlFVRjBRanM3UVVGRlFTeFJRVUZKYmtZc1RVRkJUV1VzU1VGQlZpeEZRVUZuUWp0QlFVTmtaQ3haUVVGTlNTeFJRVUZPTEVkQlFXbENMREJDUVVGbFRDeE5RVUZOWlN4SlFVRnlRaXhEUVVGcVFqdEJRVU5FTEV0QlJrUXNUVUZGVHp0QlFVTk1aQ3haUVVGTlNTeFJRVUZPTEVkQlFXbENMREJDUVVGbExFVkJRV1lzUTBGQmFrSTdRVUZEUkR0QlFVTkVTaXhWUVVGTk1rY3NWVUZCVGl4SFFVRnRRalZITEUxQlFVMDJSeXhUUVVGNlFqczdRVUZGUVR0QlFVTkJOVWNzVlVGQlRUQkdMSEZDUVVGT0xFZEJRVGhDTTBZc1RVRkJUVGhITEUxQlFYQkRPenRCUVVWQk4wY3NWVUZCVFVNc1VVRkJUaXhIUVVGcFFpeERRVUZxUWp0QlFVTkJSQ3hWUVVGTk9FY3NVVUZCVGl4SFFVRnBRaXhEUVVGcVFqdEJRVU5CT1Vjc1ZVRkJUU3RITEd0Q1FVRk9MRWRCUVRKQ0xFVkJRVE5DT3p0QlFVVkJMMGNzVlVGQlRXZElMRkZCUVU0c1IwRkJhVUpxU0N4TlFVRk5iMFVzVFVGQmRrSTdPMEZCUlVFc1VVRkJTWEJGTEUxQlFVMXZSU3hOUVVGV0xFVkJRV3RDTzBGQlFVVnVSU3haUVVGTlF5eFJRVUZPTEVkQlFXbENSaXhOUVVGTlJ5eFBRVUYyUWp0QlFVRnBRenM3UVVGRmNrUkdMRlZCUVUwNFFpeE5RVUZPTEVkQlFXVXZRaXhOUVVGTmEwY3NUMEZCVGl4RFFVRmpia1VzVFVGQk4wSTdRVUZEUVRsQ0xGVkJRVTF0UWl4SlFVRk9MRWRCUVdGd1FpeE5RVUZOYTBjc1QwRkJUaXhEUVVGak9VVXNTVUZCTTBJN08wRkJSVUVzVVVGQlNYQkNMRTFCUVUxclNDeFhRVUZXTEVWQlFYVkNha2dzVFVGQlRXdElMRmxCUVU0c1IwRkJjVUp1U0N4TlFVRk5hMGdzVjBGQk0wSTdRVUZEZGtJc1VVRkJTV3hJTEUxQlFVMXZTQ3hKUVVGV0xFVkJRV2RDYmtnc1RVRkJUVzlJTEV0QlFVNHNSMEZCWTNKSUxFMUJRVTF2U0N4SlFVRndRanRCUVVOb1FpeFJRVUZKY0Vnc1RVRkJUV3RFTEZOQlFWWXNSVUZCY1VKcVJDeE5RVUZOY1Vnc1ZVRkJUaXhIUVVGdFFuUklMRTFCUVUxclJDeFRRVUY2UWp0QlFVTnlRaXhSUVVGSmJFUXNUVUZCVFhWSUxHVkJRVllzUlVGQk1rSjBTQ3hOUVVGTmRVZ3NaMEpCUVU0c1IwRkJlVUo0U0N4TlFVRk5kVWdzWlVGQkwwSTdRVUZETTBJc1VVRkJTWFpJTEUxQlFVMTVTQ3hwUWtGQlZpeEZRVUUyUW5oSUxFMUJRVTE1U0N4clFrRkJUaXhIUVVFeVFqRklMRTFCUVUxNVNDeHBRa0ZCYWtNN08wRkJSVGRDZUVnc1ZVRkJUVmtzVTBGQlRpeEhRVUZyUWl4elFrRkJZMklzUzBGQlpDeERRVUZzUWp0QlFVTkJReXhWUVVGTldTeFRRVUZPTEVOQlFXZENSeXhaUVVGb1FpeEhRVUVyUW1Zc1RVRkJUVmtzVTBGQlRpeERRVUZuUW5OR0xFOUJRUzlET3p0QlFVVkJMRmRCUVU5c1J5eE5RVUZOV1N4VFFVRk9MRU5CUVdkQ1JTeEpRVUYyUWp0QlFVTkJMRmRCUVU5a0xFMUJRVTFaTEZOQlFVNHNRMEZCWjBKeFJpeFBRVUYyUWp0QlFVTkJMRmRCUVU5cVJ5eE5RVUZOV1N4VFFVRk9MRU5CUVdkQ01FUXNVMEZCZGtJN1FVRkZSRHM3T3p0elEwRkZhVUk3UVVGRGFFSXNWVUZCU1hSRkxGRkJRVkVzU1VGQldqczdRVUZGUVN4VlFVRkpNRWdzWVVGQllTeERRVUZxUWp0QlFVTkJMRlZCUVVsRExHZENRVUZuUWpOSUxFMUJRVTA0UWl4TlFVRk9MRWRCUVdVc1IwRkJaaXhIUVVGeFFqUkdMRlZCUVhwRE96dEJRVWRCTERCQ1FVRlpNVWdzVFVGQlRUSkhMRlZCUVd4Q0xFVkJRVGhDYmtnc1RVRkJPVUlzUTBGQmNVTXNWVUZCUXl0RExFZEJRVVFzUlVGQlV6dEJRVU0xUXl4WlFVRkpka01zVFVGQlRUSkhMRlZCUVU0c1EwRkJhVUp3UlN4SFFVRnFRaXhGUVVGelFuRkdMRTlCUVhSQ0xFZEJRV2REUkN4aFFVRndReXhGUVVGdFJEdEJRVU5xUkVFc01FSkJRV2RDTTBnc1RVRkJUVEpITEZWQlFVNHNRMEZCYVVKd1JTeEhRVUZxUWl4RlFVRnpRbkZHTEU5QlFYUkRPMEZCUTBRN1FVRkRSaXhQUVVwRU96dEJRVTFCTEdGQlFVOUdMR0ZCUVdGSExFOUJRVTlHTEdOQlFXTnFUQ3hMUVVGa0xFTkJRVzlDTEVkQlFYQkNMRVZCUVhsQ0xFTkJRWHBDTEVOQlFWQXNRMEZCY0VJN1FVRkRSRHM3TzNsRFFVVnZRanRCUVVGQk96dEJRVU51UWl4VlFVRkpjMFFzVVVGQlVTeEpRVUZhT3p0QlFVVkJMRlZCUVVrNFNDeGxRVUZsT1Vnc1RVRkJUWEZDTEVsQlFVNHNSMEZCWVN4WlFVRm9RenRCUVVOQmNrVXNZMEZCVVdkRExFZEJRVklzUTBGQldTeHpRMEZCV2l4RlFVRnZSR2RDTEUxQlFVMHlSeXhWUVVFeFJEdEJRVU5CTEZWQlFVa3pSeXhOUVVGTk1rY3NWVUZCVml4RlFVRnpRanRCUVVOd1FqTkhMR05CUVUweVJ5eFZRVUZPTEVOQlFXbENhRWtzVDBGQmFrSXNRMEZCZVVJc1ZVRkJRMjlLTEV0QlFVUXNSVUZCVnp0QlFVTnNReXhqUVVGSlF5eFhRVUZYUml4bFFVRmxReXhMUVVFNVFqdEJRVU5CTEdOQlFVbEZMRmRCUVZkcVNTeE5RVUZOYlVJc1NVRkJUaXhEUVVGWFF5eFhRVUZZTEVOQlFYVkNORWNzVVVGQmRrSXNSVUZCYVVNc1ZVRkJRekZITEVkQlFVUXNSVUZCVXp0QlFVTjJSRHRCUVVOQkxHZENRVUZKUVN4SlFVRkpUeXhKUVVGS0xFdEJRV0VzVDBGQlMwTXNUVUZCZEVJc1JVRkJPRUk3UVVGRE5VSTVSU3h6UWtGQlVXZERMRWRCUVZJc1EwRkJXU3d5UWtGQldpeEZRVUY1UTNORExFZEJRWHBETzBGQlEwRXNjMEpCUVZGQkxFbEJRVWw2UlN4SlFVRmFPMEZCUTBVc2NVSkJRVXNzVVVGQlREdEJRVUZsYlVRc2QwSkJRVTFyU1N4alFVRk9MRU5CUVhGQ05VY3NSMEZCY2tJc1JVRkJNa0k3UVVGRE1VTXNjVUpCUVVzc1VVRkJURHRCUVVGbGRFVXNNRUpCUVZGblF5eEhRVUZTTEVOQlFWbHpReXhIUVVGYUxFVkJRV3RDTzBGQlEycERPMEZCUVZOMFFpeDNRa0ZCVFcxSkxHVkJRVTRzUTBGQmMwSTNSeXhIUVVGMFFpeEZRVUUwUWp0QlFVaDJRenRCUVV0RU8wRkJRMFlzVjBGV1l5eERRVUZtT3p0QlFWbEJkRUlzWjBKQlFVMHJSeXhyUWtGQlRpeERRVUY1UW14SkxFbEJRWHBDTEVOQlFUaENiMG9zVVVGQk9VSTdRVUZEUkN4VFFXWkVPMEZCWjBKRU8wRkJRMFk3T3p0M1EwRkZiVUk3UVVGRGJFSXNWVUZCU1dwSkxGRkJRVkVzU1VGQldqczdRVUZGUVVFc1dVRkJUU3RITEd0Q1FVRk9MRU5CUVhsQ2NFa3NUMEZCZWtJc1EwRkJhVU1zVlVGQlEzTktMRkZCUVVRc1JVRkJZenRCUVVNM1EwRXNhVUpCUVZONlJ5eE5RVUZVTzBGQlEwUXNUMEZHUkRzN1FVRkpRU3hWUVVGSmVFSXNUVUZCVFc5SkxHZENRVUZXTEVWQlFUUkNPMEZCUXpGQ0xEUkNRVUZaY0Vrc1RVRkJUVzlKTEdkQ1FVRnNRaXhGUVVGdlEzcEtMRTlCUVhCRExFTkJRVFJETEZWQlFVTTBSQ3hIUVVGRUxFVkJRVk03UVVGRGJrUjJReXhuUWtGQlRXOUpMR2RDUVVGT0xFTkJRWFZDTjBZc1IwRkJka0lzUlVGQk5FSmlMR2xDUVVFMVFqdEJRVU5FTEZOQlJrUTdRVUZIUkR0QlFVTkdPenRCUVVWRU96czdPenM3YjBOQlIyZENhMFlzVXl4RlFVRlhPMEZCUVVFN08wRkJRM3BDTEZWQlFVazFSeXhSUVVGUkxFbEJRVm83TzBGQlJVRXNWVUZCU1RKSUxHZENRVUZuUWl4TFFVRkxOMFlzVFVGQlRDeEhRVUZqTEVkQlFXUXNSMEZCYjBJc1MwRkJTMmRHTEZGQlFUZERPenRCUVVWQkxGVkJRVWxHTEdGQlFXRXNRMEZCUXpWSExFMUJRVTF2U1N4blFrRkJlRUlzUlVGQk1FTTdRVUZEZUVOd1NTeGpRVUZOYjBrc1owSkJRVTRzUjBGQmVVSXNSVUZCZWtJN1FVRkRSRHM3UVVGRlJEdEJRVU5CTERCQ1FVRlplRUlzVTBGQldpeEZRVUYxUW1wSkxFOUJRWFpDTEVOQlFTdENMRlZCUVVNd1NpeG5Ra0ZCUkN4RlFVRnpRanRCUVVOdVJDeFpRVUZKUXl4WFFVRlhNVUlzVlVGQlZYbENMR2RDUVVGV0xFTkJRV1k3TzBGQlJVRXNORUpCUVZsRExGRkJRVm9zUlVGQmMwSXpTaXhQUVVGMFFpeERRVUU0UWl4VlFVRkRhVW9zVDBGQlJDeEZRVUZoTzBGQlEzcERMR05CUVVsWExHRkJRV0ZFTEZOQlFWTldMRTlCUVZRc1JVRkJhMEoyVEN4TFFVRnVRenRCUVVOQlZ5eHJRa0ZCVVdkRExFZEJRVklzUTBGQldTeHZSRUZCV2l4RlFVRnJSWEZLTEdkQ1FVRnNSU3hGUVVGdlJrTXNVVUZCY0VZc1JVRkJPRVpETEZWQlFUbEdPMEZCUTBGQkxIRkNRVUZYUXl4WlFVRllMRWRCUVRCQ2VFa3NTMEZCTVVJN1FVRkRRWFZKTEhGQ1FVRlhSU3hOUVVGWUxFZEJRVzlDZWtrc1RVRkJUWEZDTEVsQlFURkNPMEZCUTBGeVFpeG5Ra0ZCVFc5SkxHZENRVUZPTEVOQlFYVkNVaXhQUVVGMlFpeEpRVUZyUXl3NFFrRkJiMEpYTEZWQlFYQkNMRU5CUVd4RE8wRkJRMEYyU1N4blFrRkJUVzlKTEdkQ1FVRk9MRU5CUVhWQ1VpeFBRVUYyUWl4RlFVRm5RemRMTEZGQlFXaERMRWRCUVRKRGRVd3NVMEZCVTFZc1QwRkJWQ3hGUVVGclFqZExMRkZCUVRkRU96dEJRVVZCTEdOQlFVazJTeXhWUVVGVlJDeGhRVUZrTEVWQlFUWkNPMEZCUXpOQ1FTdzBRa0ZCWjBKRExFOUJRV2hDTzBGQlEwUTdPMEZCUlVRMVN5eHJRa0ZCVVdkRExFZEJRVklzUTBGQldTeHJSRUZCV2l4RlFVRm5SU3hQUVVGTGIwb3NaMEpCUVV3c1EwRkJjMEpTTEU5QlFYUkNMRU5CUVdoRk8wRkJRMFFzVTBGaVJEdEJRV05FTEU5QmFrSkVPenRCUVcxQ1FTeFhRVUZMWkN4UlFVRk1MRWRCUVdkQ1pTeFBRVUZQUml4alFVRmpha3dzUzBGQlpDeERRVUZ2UWl4SFFVRndRaXhGUVVGNVFpeERRVUY2UWl4RFFVRlFMRU5CUVdoQ08wRkJRMFE3TzBGQlJVUTdPenM3T3pzN096dEJRWEZEUVRzN096UkNRVWRSTzBGQlEwNDdRVUZEUVN4WlFVRk5MR2xDUVVGT08wRkJRMFE3TzBGQlJVUTdPenM3T3pzMlFrRkhVenRCUVVOUU8wRkJRMEVzV1VGQlRTeHBRa0ZCVGp0QlFVTkVPenRCUVVWRU96czdPenM3TWtKQlIwODdRVUZEVER0QlFVTkJMRmxCUVUwc2FVSkJRVTQ3UVVGRFJEczdRVUZGUkRzN096czdPenM3T3pzN05rSkJVMU0wVEN4UkxFVkJRVlZKTEZjc1JVRkJZVE5NTEZFc1JVRkJWV2RFTEVzc1JVRkJUenRCUVVNdlF5eFZRVUZKUXl4UlFVRlJMRWxCUVZvN08wRkJSVUU3UVVGRFFTeGhRVUZQTEhOQ1FVRlpMRlZCUVVNeVF5eFBRVUZFTEVWQlFXRTdPMEZCUlRsQ0xGbEJRVWswUml4aFFVRmpMSE5DUVVGakxFVkJRV1FzUlVGQmEwSjRTU3hMUVVGc1FpeERRVUZzUWpzN1FVRkZRVHRCUVVOQlF5eGpRVUZOT0Vjc1VVRkJUanRCUVVOQmVVSXNiVUpCUVZkeVRTeEhRVUZZTEVkQlFXbENPRVFzVFVGQlRUaENMRTFCUVU0c1IwRkJaU3hIUVVGbUxFZEJRWEZDT1VJc1RVRkJUVGhITEZGQlFUVkRPMEZCUTBFc1dVRkJTVFpDTEdWQlFXVXpTU3hOUVVGTmNVSXNTVUZCVGl4SFFVRmhMRmxCUVdJc1IwRkJORUpwU0N4UlFVRXZRenM3UVVGRlFVTXNiVUpCUVZkRExGbEJRVmdzUjBGQk1FSjRTU3hMUVVFeFFqdEJRVU5CZFVrc2JVSkJRVmQ2U0N4SlFVRllMRWRCUVd0Q05FZ3NWMEZCYkVJN1FVRkRRVWdzYlVKQlFWZHVReXhSUVVGWUxFZEJRWE5DY0Vjc1RVRkJUVGhDTEUxQlFUVkNPMEZCUTBGNVJ5eHRRa0ZCVjNKRExFOUJRVmdzUjBGQmMwSXNTVUZCU1RCRExFbEJRVW9zUlVGQlJDeERRVUZYUXl4WFFVRllMRVZCUVhKQ08wRkJRMEZPTEcxQ1FVRlhha01zVDBGQldDeEhRVUZ4UW5SSExFMUJRVTExUnl4UlFVRXpRanRCUVVOQlowTXNiVUpCUVZkdVJTeE5RVUZZTEVkQlFXOUNjRVVzVFVGQlRYRkZMRTlCUVRGQ08wRkJRMEZyUlN4dFFrRkJWMFVzVFVGQldDeEhRVUZ2UW5wSkxFMUJRVTA1UkN4SFFVRXhRanM3UVVGRlFTeFpRVUZKTkUwc1YwRkJWeXc0UWtGQmIwSlFMRlZCUVhCQ0xFTkJRV1k3TzBGQlJVRXNXVUZCU1ZFc1dVRkJXVVFzVTBGQlV6TkVMRkZCUVhwQ08wRkJRMEUwUkN4clFrRkJWV3BKTEVsQlFWWXNSMEZCYVVJMFNDeFhRVUZxUWpzN1FVRkZRVHRCUVVOQkxGbEJRVWxOTEdGQlFXRTdRVUZEWm01TkxHZENRVUZOTEZGQlJGTXNSVUZEUTJkR0xFMUJRVTAzUWl4TlFVRk5PRUlzVFVGRVlpeEZRVU54UWtNc1NVRkJTVFJITEZsQlJIcENPMEZCUldZeFJ5eG5Ra0ZCVFN4RlFVRkZReXhWUVVGVmNVY3NWMEZCVjNKTkxFZEJRWFpDTEVWQlFUUkNSeXhQUVVGUE1FMHNVMEZCYmtNN1FVRkdVeXhUUVVGcVFqczdRVUZMUVN4WlFVRkphRTBzVVVGQlNpeEZRVUZ0UWp0QlFVTnFRaXRNTEcxQ1FVRlRMMHdzVVVGQlZDeEhRVUZ2UWtFc1VVRkJjRUk3UVVGRFFXbE5MSEZDUVVGWEwwY3NTVUZCV0N4RFFVRm5RbXhHTEZGQlFXaENMRWRCUVRKQ1FTeFJRVUV6UWp0QlFVTkVPenRCUVVWRU8wRkJRMEVzV1VGQlNTeERRVUZEYVVRc1RVRkJUVEJHTEhGQ1FVRllMRVZCUVd0RGMwUXNWMEZCVnk5SExFbEJRVmdzUTBGQlowSjNSQ3h2UWtGQmFFSXNSMEZCZFVONlJpeE5RVUZOTUVZc2NVSkJRVGRET3p0QlFVVnNReXhaUVVGSmRVUXNVVUZCVVdwS0xFMUJRVTF0UWl4SlFVRk9MRU5CUVZkblFpeFhRVUZZTEVOQlFYVkNOa2NzVlVGQmRrSXNRMEZCV2pzN1FVRkZRV2hOTEdkQ1FVRlJaME1zUjBGQlVpeERRVUZaTERoQ1FVRmFMRVZCUVRSRE9Fb3NVVUZCTlVNc1JVRkJjMFJITEV0QlFYUkVMRVZCUVRaRVJpeFRRVUUzUkRzN1FVRkZRVVFzYVVKQlFWTkpMRkZCUVZRc1EwRkJhMElzVlVGQlF6VkpMRXRCUVVRc1JVRkJWenRCUVVNelFrNHNaMEpCUVUxNVJDeFRRVUZPTEVOQlFXZENia1FzUzBGQmFFSXNSVUZCZFVJc1JVRkJSWEJETEUxQlFVMTVTeXhaUVVGU0xFVkJRWE5DWml4VFFVRlRWeXhYUVVGWGNrMHNSMEZCTVVNc1JVRkJka0k3UVVGRFJDeFRRVVpFT3p0QlFVbEJMRmxCUVVrc1EwRkJRemhFTEUxQlFVMXZTU3huUWtGQldDeEZRVUUyUWp0QlFVRkZjRWtzWjBKQlFVMXZTU3huUWtGQlRpeEhRVUY1UWl4RlFVRjZRanRCUVVFNFFqczdRVUZGTjBSd1NTeGpRVUZOYjBrc1owSkJRVTRzUTBGQmRVSkhMRmRCUVZkeVRTeEhRVUZzUXl4SlFVRjVRelJOTEZGQlFYcERPenRCUVVWQmJrY3NaMEpCUVZGdFJ5eFJRVUZTTzBGQlEwUXNUMEZxUkUwc1EwRkJVRHRCUVd0RVJEczdRVUZGUkRzN096czdPenNyUWtGSlYzaEhMRkVzUlVGQlZUdEJRVU51UWl4WFFVRkxOa2NzY1VKQlFVd3NSMEZCTmtJM1J5eFJRVUUzUWp0QlFVTkVPenRCUVVWRU96czdPMjFEUVVObGFFSXNSeXhGUVVGTE8wRkJRMnhDTEZWQlFVbDBRaXhSUVVGUkxFbEJRVm83UVVGRFFTeFZRVUZKZFVrc1lVRkJZU3h6UWtGQlZXcElMRWxCUVVsWExFbEJRVW9zUTBGQlV6VkdMRXRCUVc1Q0xFTkJRV3BDTzBGQlEwRnJUU3hwUWtGQlYwTXNXVUZCV0N4SFFVRXdRbmhKTEV0QlFURkNPenRCUVVWQmFFUXNZMEZCVVdkRExFZEJRVklzUTBGQldTdzBRMEZCTkVOblFpeE5RVUZOT0VJc1RVRkJiRVFzUjBGQk1rUXNTMEZCZGtVc1JVRkJPRVZTTEVkQlFUbEZPMEZCUTBFc1ZVRkJTWGRJTEZkQlFWY3NPRUpCUVc5Q1VDeFZRVUZ3UWl4RFFVRm1PMEZCUTBGUExHVkJRVk12VEN4UlFVRlVMRWRCUVc5Q2RVVXNTVUZCU1Zjc1NVRkJTaXhEUVVGVGJFWXNVVUZCTjBJN08wRkJSVUVzVlVGQlNTeERRVUZEYVVRc1RVRkJUVzlKTEdkQ1FVRllMRVZCUVRaQ08wRkJRVVZ3U1N4alFVRk5iMGtzWjBKQlFVNHNSMEZCZVVJc1JVRkJla0k3UVVGQk9FSTdPMEZCUlRkRWNFa3NXVUZCVFc5SkxHZENRVUZPTEVOQlFYVkNSeXhYUVVGWGNrMHNSMEZCYkVNc1NVRkJlVU0wVFN4UlFVRjZRenM3UVVGRlFUdEJRVU5CVFN4cFFrRkJWeXhaUVVGTk8wRkJRMlk3UVVGRFFYQktMR05CUVUxdFFpeEpRVUZPTEVOQlFWZG5RaXhYUVVGWUxFTkJRWFZDTzBGQlEzSkNiMFFzWTBGQlNXcEZMRWxCUVVscFJTeEZRVVJoTEVWQlExUXhTU3hOUVVGTkxGVkJSRWNzUlVGRFUyZEdMRTFCUVUxUUxFbEJRVWxUTEVWQlJHNUNMRVZCUTNWQ1FTeEpRVUZKVkN4SlFVRkpUeXhKUVVRdlFqdEJRVVZ5UWtrc1owSkJRVTBzUlVGQlJVa3NUVUZCVFN4SFFVRlNMRVZCUVdGblNDeFJRVUZSY2tvc1RVRkJUVGhDTEUxQlFUTkNPMEZCUm1Vc1UwRkJka0k3UVVGSlJDeFBRVTVFT3p0QlFWRkJMRlZCUVVsNFFpeFJRVUZSTzBGQlExWjZSQ3hqUVVGTmVVVXNTVUZCU1hwRkxFbEJSRUU3UVVGRlZtZEdMR05CUVUxUUxFbEJRVWxQTEVsQlJrRTdRVUZIVmpOR0xHRkJRVXR2Uml4SlFVRkpVeXhGUVVoRE8wRkJTVll4Uml4bFFVRlBhVVlzU1VGQlNWY3NTVUZCU2l4RFFVRlROVVlzUzBGQlZDeERRVUZsZVVVc1NVRktXanRCUVV0V09FY3NhVUpCUVZOWExGZEJRVmR5VFN4SFFVeFdPMEZCVFZaaExHdENRVUZWZFVVc1NVRkJTVmNzU1VGQlNpeERRVUZUYkVZN1FVRk9WQ3hQUVVGYU96dEJRVk5CTEZWQlFVbHBSQ3hOUVVGTmJVb3NjVUpCUVZZc1JVRkJhVU03UVVGREwwSnVUU3huUWtGQlVXZERMRWRCUVZJc1EwRkJXU3h6UWtGQldpeEZRVUZ2UTNOQ0xFdEJRWEJETzBGQlEwRk9MR05CUVUxdFNpeHhRa0ZCVGl4RFFVRTBRamRKTEV0QlFUVkNPMEZCUTBRN1FVRkRSanM3UVVGRlJEczdPenM0UWtGRFZVRXNTeXhGUVVGUFowb3NVeXhGUVVGWE8wRkJRekZDTEZWQlFVbDBTaXhSUVVGUkxFbEJRVm83TzBGQlJVRkJMRmxCUVUxWkxGTkJRVTRzUTBGQlowSkhMRmxCUVdoQ0xFZEJRV2RETEVsQlFVazJTQ3hKUVVGS0xFVkJRVVFzUTBGQlYwTXNWMEZCV0N4RlFVRXZRanM3UVVGRlFUZEpMRmxCUVUxRExGRkJRVTQ3TzBGQlJVRXNWVUZCU1VRc1RVRkJUVEJITEU5QlFVNHNTMEZCYTBJc1RVRkJkRUlzUlVGQk9FSTdRVUZETlVJN1FVRkRRU3haUVVGSk5rTXNXVUZCV1R0QlFVTmtNVTBzWjBKQlFVMHNVVUZFVVN4RlFVTkZaMFlzVFVGQlRUZENMRTFCUVUxeFFpeEpRVVJrTEVWQlEyOUNWU3hKUVVGSkwwSXNUVUZCVFhGQ0xFbEJRVTRzUjBGQllTeFZRVVJ5UXp0QlFVVmtXU3huUWtGQlRTeEZRVUZGTDBJc1UwRkJVMFlzVFVGQlRVTXNVVUZCYWtJc1JVRkJNa0p2U2l4UlFVRlJja29zVFVGQlRUaENMRTFCUVhwRExFVkJRV2xFTUVnc1YwRkJWMnhLTEUxQlFVMXZReXhMUVVGc1JTeEZRVUY1UlROQ0xHTkJRV05tTEUxQlFVMVpMRk5CUVU0c1EwRkJaMEpITEZsQlFYWkhPMEZCUmxFc1UwRkJhRUk3TzBGQlMwRXZSQ3huUWtGQlVXZERMRWRCUVZJc1EwRkJXU3cyUWtGQldpeEZRVUV5UTNOQ0xFdEJRVE5ETEVWQlFXdEVaMG9zVTBGQmJFUXNSVUZCTmtSRExGTkJRVGRFT3p0QlFVVkJMRmxCUVVscVNpeE5RVUZOYlVvc1MwRkJUaXhMUVVGblFpeDNRa0ZCVjBNc1RVRkJMMElzUlVGQmRVTTdRVUZEY2tNc1kwRkJTWEJLTEUxQlFVMXhTaXhMUVVGT0xFdEJRV2RDTEhkQ1FVRlhReXhOUVVFdlFpeEZRVUYxUXp0QlFVTnlRMHdzYzBKQlFWVjBTQ3hKUVVGV0xFTkJRV1UxUml4TFFVRm1MRWRCUVhWQ2FVVXNUVUZCVFZFc1NVRkJOMEk3UVVGRFJEdEJRVU5HTEZOQlNrUXNUVUZKVHp0QlFVTk1lVWtzYjBKQlFWVjBTQ3hKUVVGV0xFTkJRV1UwU0N4aFFVRm1MRWRCUVN0Q2Rrb3NUVUZCVFcxS0xFdEJRWEpETzBGQlEwRkdMRzlDUVVGVmRFZ3NTVUZCVml4RFFVRmxOVVlzUzBGQlppeEhRVUYxUW1sRkxFMUJRVTFSTEVsQlFUZENPMEZCUTBFc1kwRkJTVklzVFVGQlRYRktMRXRCUVU0c1MwRkJaMElzZDBKQlFWZEhMRTFCUVM5Q0xFVkJRWFZETzBGQlEzSkRVQ3h6UWtGQlZYUklMRWxCUVZZc1EwRkJaVGhJTEZOQlFXWXNSMEZCTWtKNlNpeE5RVUZOY1Vvc1MwRkJha003UVVGRFJEdEJRVU5HT3p0QlFVVkVPMEZCUTBFc1dVRkJTVXdzVTBGQlNpeEZRVUZsTzBGQlEySkRMRzlDUVVGVmVFZ3NSVUZCVml4SFFVRmxkVWdzVlVGQlZYQk1MRWxCUVhwQ08wRkJRMEZ4VEN4dlFrRkJWWFJJTEVsQlFWWXNRMEZCWlVNc1VVRkJaaXhIUVVFd1FtOUlMRlZCUVZVeFFpeFBRVUZ3UXp0QlFVTkVPenRCUVVWRU8wRkJRMEVzV1VGQlNTeERRVUZETlVnc1RVRkJUVEJHTEhGQ1FVRllMRVZCUVd0RE5rUXNWVUZCVlhSSUxFbEJRVllzUTBGQlpYZEVMRzlDUVVGbUxFZEJRWE5EZWtZc1RVRkJUVEJHTEhGQ1FVRTFRenM3UVVGRmJFTXhSaXhqUVVGTmJVSXNTVUZCVGl4RFFVRlhaMElzVjBGQldDeERRVUYxUW05SUxGTkJRWFpDTzBGQlEwUTdRVUZEUmpzN1FVRkZSRHM3T3p0clEwRkRZMU1zVHl4RlFVRlRNVWtzUnl4RlFVRkxPMEZCUXpGQ0xGVkJRVWwwUWl4UlFVRlJMRWxCUVZvN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNWVUZCU1VFc1RVRkJUVU1zVVVGQlRpeEhRVUZwUWl4RFFVRnFRaXhKUVVGelFuRkNMRWxCUVVsWExFbEJRVW9zUTBGQlV5OUNMRTlCUVc1RExFVkJRVFJETzBGQlF6RkRSaXhqUVVGTlF5eFJRVUZPTEVkQlFXbENjVUlzU1VGQlNWY3NTVUZCU2l4RFFVRlRMMElzVDBGQk1VSTdRVUZEUVN4WlFVRkphRU1zVDBGQlQyOUVMRWxCUVVsWExFbEJRVW9zUTBGQlUzVklMRk5CUVhCQ08wRkJRMEVzV1VGQlNXNU9MRkZCUVZFc2MwSkJRVlZwUml4SlFVRkpWeXhKUVVGS0xFTkJRVk0xUml4TFFVRnVRaXhEUVVGYU8wRkJRMEVzV1VGQlNUUk9MR0ZCUVdGRUxGRkJRVkZGTEZWQlFWSXNRMEZCYlVKb1RTeEpRVUZ1UWl4RFFVRnFRanM3UVVGRlFTeFpRVUZKYjBRc1NVRkJTVmNzU1VGQlNpeERRVUZUYkVJc1dVRkJZaXhGUVVFeVFqdEJRVU42UW1Zc1owSkJRVTFaTEZOQlFVNHNRMEZCWjBKSExGbEJRV2hDTEVkQlFTdENUeXhKUVVGSlZ5eEpRVUZLTEVOQlFWTnNRaXhaUVVGNFF6dEJRVU5FTEZOQlJrUXNUVUZGVHp0QlFVTk1aaXhuUWtGQlRWa3NVMEZCVGl4RFFVRm5Ra2NzV1VGQmFFSXNSMEZCWjBNc1NVRkJTVFpJTEVsQlFVb3NSVUZCUkN4RFFVRlhReXhYUVVGWUxFVkJRUzlDTzBGQlEwUTdPMEZCUlVRc1dVRkJTWFpJTEVsQlFVbFhMRWxCUVVvc1EwRkJVelJJTEdGQlFWUXNTMEZCTWtJc2QwSkJRVmROTEV0QlFURkRMRVZCUVdsRU8wRkJReTlETEdOQlFVazNTU3hKUVVGSlZ5eEpRVUZLTEVOQlFWTTRTQ3hUUVVGVUxFdEJRWFZDTEhkQ1FVRlhTeXhIUVVGMFF5eEZRVUV5UXp0QlFVTjZReXhuUWtGQlNVTXNUVUZCVFVvc1YwRkJWM1JOTEVkQlFYSkNPMEZCUTBFc1owSkJRVWxqTEZGQlFWRjNUQ3hYUVVGWFN5eEpRVUYyUWp0QlFVTkJReXhyUWtGQlRVTXNVMEZCVGl4RFFVRm5Ra01zVFVGQmFFSXNRMEZCZFVKRExFdEJRWFpDTEVOQlFUWkNUQ3hIUVVFM1FpeEZRVUZyUXl4RFFVRkROVXdzUzBGQlJDeEZRVUZSTEVOQlFWSXNSVUZCVjJNc1RVRkJXQ3hEUVVGclFteEVMRXRCUVd4Q0xFTkJRV3hETzBGQlEwUXNWMEZLUkN4TlFVbFBMRWxCUVVscFJpeEpRVUZKVnl4SlFVRktMRU5CUVZNNFNDeFRRVUZVTEV0QlFYVkNMSGRDUVVGWFNDeE5RVUYwUXl4RlFVRTRRenRCUVVOdVJDeG5Ra0ZCU1ZNc1QwRkJUVW9zVjBGQlYzUk5MRWRCUVhKQ08wRkJRMEVzWjBKQlFVbGpMRk5CUVZGM1RDeFhRVUZYU3l4SlFVRjJRanRCUVVOQlJDeHBRa0ZCU1Vrc1RVRkJTaXhEUVVGWGFFMHNUVUZCV0N4RlFVRnJRbkJETEV0QlFXeENPMEZCUTBRc1YwRktUU3hOUVVsQk8wRkJRMHcwVGl4MVFrRkJWM1JOTEVkQlFWZ3NRMEZCWlhOTkxGZEJRVmRMTEVsQlFURkNMRWxCUVd0RGFrOHNTMEZCYkVNc1EwRkVTeXhEUVVOdlF6dEJRVU14UXp0QlFVTkdMRk5CV2tRc1RVRlpUenRCUVVOTUxHTkJRVWxwUml4SlFVRkpWeXhKUVVGS0xFTkJRVk0xUml4TFFVRmlMRVZCUVc5Q08wRkJRMnhDTkU0c2RVSkJRVmQwVFN4SFFVRllMRU5CUVdWelRTeFhRVUZYU3l4SlFVRXhRaXhKUVVGclEycFBMRXRCUVd4RExFTkJSR3RDTEVOQlEzVkNPMEZCUXpGRExGZEJSa1FzVFVGRlR6dEJRVU5NTEcxQ1FVRlBORTRzVjBGQlYzUk5MRWRCUVZnc1EwRkJaWE5OTEZkQlFWZExMRWxCUVRGQ0xFTkJRVkFzUTBGRVN5eERRVU50UXp0QlFVTjZRenRCUVVOR08wRkJRMFlzVDBFdlFrUXNUVUVyUWs4N1FVRkRURHRCUVVOQmRFNHNaMEpCUVZGblF5eEhRVUZTTEVOQlFWa3NjME5CUVhORFowSXNUVUZCVFVNc1VVRkJOVU1zUjBGQmRVUXNWMEZCZGtRc1IwRkJjVVZ4UWl4SlFVRkpWeXhKUVVGS0xFTkJRVk12UWl4UFFVRTVSU3hIUVVGM1JpeEhRVUZ3Unp0QlFVTkVPMEZCUTBZN08wRkJSVVE3T3pzN2IwTkJRMmRDYjBJc1J5eEZRVUZMTzBGQlEyNUNMRlZCUVVsMFFpeFJRVUZSTEVsQlFWbzdRVUZEUVdoRUxHTkJRVkZuUXl4SFFVRlNMRU5CUVZrc2JVSkJRVm9zUlVGQmFVTm5RaXhOUVVGTk9FSXNUVUZCZGtNc1JVRkJLME5TTEVkQlFTOURPenRCUVVWQkxGVkJRVWx6Unl4VlFVRlZkRWNzU1VGQlNWY3NTVUZCU2l4RFFVRlRReXhSUVVGMlFqdEJRVU5CTEZWQlFVbHZSeXhYUVVGWGRFa3NUVUZCVFc5SkxHZENRVUZPTEVOQlFYVkNVaXhQUVVGMlFpeERRVUZtT3p0QlFVVkJMRlZCUVVsVkxGRkJRVW9zUlVGQll6dEJRVU5hZEVrc1kwRkJUWFZDTEdGQlFVNHNRMEZCYjBJclJ5eFRRVUZUYkVrc1VVRkJOMElzUlVGQmRVTnJRaXhIUVVGMlF6dEJRVU5FTEU5QlJrUXNUVUZGVHp0QlFVTk1kRVVzWjBKQlFWRm5ReXhIUVVGU0xFTkJRVmtzZVVKQlFWb3NSVUZCZFVNMFNTeFBRVUYyUXp0QlFVTkVPMEZCUTBZN096dDNRa0V4VVdNN1FVRkJSU3hoUVVGUExFdEJRVXRvU0N4VFFVRmFPMEZCUVhkQ096dEJRVVY2UXpzN096czdPenQzUWtGSlZUdEJRVUZGTEdGQlFVOHNTMEZCUzFNc1NVRkJXanRCUVVGdFFqczdRVUZGTDBJN096czdPenM3ZDBKQlNXRTdRVUZCUlN4aFFVRlBMRXRCUVV0blJDeFBRVUZhTzBGQlFYTkNPenRCUVVWeVF6czdPenM3T3p0M1FrRkpZVHRCUVVGRkxHRkJRVThzUzBGQlMzRkRMRTlCUVZvN1FVRkJjMEk3TzBGQlJYSkRPenM3T3pzN08zZENRVWxYTzBGQlFVVXNZVUZCVHl4TFFVRkxkRWNzVVVGQlRDeERRVUZqVlN4SlFVRnlRanRCUVVFMFFqczdRVUZGZWtNN096czdPenM3ZDBKQlNXZENPMEZCUVVVc1lVRkJUeXhMUVVGTGMwZ3NaMEpCUVZvN1FVRkJLMEk3T3p0TFFYcFBia1E3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN08ydENRWGxrWlhSRExGVTdPenM3T3pzN096czdPenM3T3pzN096czdPenM3TzBGRGVtUm1PenRCUVVOQk96czdPMEZCUlVFc1NVRkJUVFpGTEdGQlFXRXNSVUZCUTFJc1QwRkJUeXhuUWtGQlVpeEZRVUV3UWxRc1VVRkJVU3hwUWtGQmJFTXNSVUZCYmtJN08wRkJSVUU3T3pzN096dEpRVXROYTBJc1ZUdEJRVVZLTEhOQ1FVRlpiRU1zVjBGQldpeEZRVUY1UWp0QlFVRkJPenRCUVVOMlFpeFJRVUZKTVVrc1VVRkJVU3hKUVVGYU96dEJRVVZCUVN4VlFVRk5Na0lzVlVGQlRpeEhRVUZ0UWl4RlFVRnVRanRCUVVOQk0wSXNWVUZCVFVjc1VVRkJUaXhIUVVGcFFpeEZRVUZxUWpzN1FVRkZRU3hUUVVGTE1Fc3NTMEZCVEN4SFFVRmhia01zWlVGQlpTeEZRVUUxUWpzN1FVRkZRU3hUUVVGTGIwTXNaMEpCUVV3c1EwRkJjMElzUzBGQlMwUXNTMEZCTTBJN1FVRkRSRHM3T3pzMFFrRkpUM1pKTEZFc1JVRkJWVHRCUVVOb1FpeFhRVUZMV0N4VlFVRk1MRU5CUVdkQ09VTXNTVUZCYUVJc1EwRkJjVUo1UkN4UlFVRnlRanRCUVVORU96czdlVUpCUlVsd1JTeEpMRVZCUVUwN1FVRkRWQ3hWUVVGSlF5eFBRVUZQTERSQ1FVRm5Ra1FzU1VGQmFFSXNRMEZCV0RzN1FVRkZRU3hoUVVGUExFdEJRVXMyVFN4alFVRk1MRU5CUVc5Q05VMHNTVUZCY0VJc1EwRkJVRHRCUVVORU96czdLMEpCUlZWRUxFa3NSVUZCVFR0QlFVTm1MRlZCUVVsMFFpeFRRVUZUTEVWQlFXSTdRVUZEUVN4VlFVRkpkVUlzVDBGQlR5dzBRa0ZCWjBKRUxFbEJRV2hDTEVOQlFWZzdRVUZEUVhSQ0xHRkJRVTh3VGl4SlFVRlFMRWRCUVdOdVRTeExRVUZMTmswc1IwRkJUQ3hGUVVGa08wRkJRMEZ3VHl4aFFVRlBaU3hIUVVGUUxFZEJRV0VzUzBGQlMyOU9MR05CUVV3c1EwRkJiMEkxVFN4SlFVRndRaXhEUVVGaU96dEJRVVZCTEdGQlFVOTJRaXhOUVVGUU8wRkJRMFE3T3p0dFEwRkZZM1ZDTEVrc1JVRkJUVHRCUVVOdVFpeFZRVUZKVWl4TlFVRk5MRXRCUVV0clRpeExRVUZtTzBGQlEwRXhUU3hYUVVGTFVTeFBRVUZNTEVOQlFXRXNWVUZCUTNSRExFdEJRVVFzUlVGQlZ6dEJRVU4wUW5OQ0xHTkJRVTFCTEVsQlFVbDBRaXhMUVVGS0xFTkJRVTQ3UVVGRFJDeFBRVVpFT3p0QlFVbEJMR0ZCUVU5elFpeEhRVUZRTzBGQlEwUTdPenR4UTBGRlowSkVMRTBzUlVGQlVUdEJRVUZCT3p0QlFVVjJRaXhWUVVGSmRVNHNWVUZCVlN4VFFVRldRU3hQUVVGVkxFTkJRVU5ETEZOQlFVUXNSVUZCWlRzN1FVRkZNMEpCTEd0Q1FVRlZReXhMUVVGV0xFTkJRV2RDTEZWQlFVTkRMRTFCUVVRc1JVRkJXVHRCUVVNeFFpeHBRa0ZCUzBNc1ZVRkJUQ3hEUVVGblFrUXNUVUZCYUVJN1FVRkRSQ3hUUVVaRU8wRkJTVVFzVDBGT1JEczdRVUZSUVN4WFFVRkxVQ3hMUVVGTUxFZEJRV0ZUTEU5QlFVOURMRmRCUVZBc1EwRkJiVUkzVGl4TlFVRnVRaXhGUVVFeVFuVk9MRTlCUVROQ0xFTkJRV0k3UVVGRlJEczdPeXRDUVVWVk0wc3NTeXhGUVVGUE8wRkJRMmhDTEZkQlFVdHhRaXhWUVVGTUxFTkJRV2RDYUVRc1QwRkJhRUlzUTBGQmQwSXNWVUZCUXpKRUxGRkJRVVFzUlVGQll6dEJRVU53UTBFc2FVSkJRVk5vUXl4TFFVRlVPMEZCUTBRc1QwRkdSRHRCUVVkRU96czdLMEpCUlZVNFN5eE5MRVZCUVZFN08wRkJSV3BDTEZWQlFVbDZUaXhOUVVGTmVVNHNUMEZCVHpGT0xFMUJRV3BDTzBGQlEwRXNWVUZCU1RoT0xHZENRVUZLT3p0QlFVVkJMRlZCUVVrM1RpeEpRVUZKT0U0c1YwRkJTaXhMUVVGdlFrZ3NUVUZCZUVJc1JVRkJaME03UVVGRE9VSkZMR3RDUVVGVlJTeFhRVUZYYUVNc1RVRkJja0k3UVVGRFJEczdRVUZGUkN4VlFVRkpMMHdzU1VGQlNUaE9MRmRCUVVvc1MwRkJiMEpzUWl4TFFVRjRRaXhGUVVFclFqdEJRVU0zUW1sQ0xHdENRVUZWUlN4WFFVRlhka0lzUzBGQmNrSTdRVUZEUkRzN1FVRkZSQ3hWUVVGSmQwSXNZMEZCWTFBc1QwRkJUMUVzVDBGQmVrSTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEZWQlFVbERMRmRCUVZkc1R5eEpRVUZKZVU0c1QwRkJUelZGTEVsQlFWZ3NRMEZCWmpzN1FVRkZRVHM3UVVGRlFTeFZRVUZKTkVVc1QwRkJUM1pQTEVsQlFWQXNTMEZCWjBJc1VVRkJhRUlzU1VGQk5FSXNRMEZCUXpoUExGbEJRVmxvVUN4UlFVRmFMRU5CUVhGQ0xGTkJRWEpDTEVOQlFXcERMRVZCUVd0Rk8wRkJRMmhGTEdGQlFVdHRVQ3hWUVVGTUxFTkJRV2RDTzBGQlEyUnVReXhwUWtGQlQyOURMRmRCUVZkcVF5eE5RVVJLTzBGQlJXUk1MR2xDUVVGUEswSXNUMEZHVHp0QlFVZGtPVWtzYVVKQlFVOXBTaXhYUVVoUE8wRkJTV1EzU3l4blFrRkJUU3RMTzBGQlNsRXNVMEZCYUVJN1FVRk5SRHM3UVVGRlJDeFZRVUZKVkN4UFFVRlBkazhzU1VGQlVDeExRVUZuUWl4TFFVRndRaXhGUVVFeVFqdEJRVU42UWl4aFFVRkxhVkFzVlVGQlRDeERRVUZuUWp0QlFVTmtia01zYVVKQlFVOXZReXhYUVVGWE0wSXNSMEZFU2p0QlFVVmtXQ3hwUWtGQlR5dENMRTlCUms4N1FVRkhaRGxKTEdsQ1FVRlBhVW9zVjBGSVR6dEJRVWxrTjBzc1owSkJRVTByU3p0QlFVcFJMRk5CUVdoQ08wRkJUVVE3TzBGQlJVUXNWVUZCU1ZRc1QwRkJUM1pQTEVsQlFWQXNTMEZCWjBJc1VVRkJjRUlzUlVGQk9FSTdRVUZETlVJc1lVRkJTMmxRTEZWQlFVd3NRMEZCWjBJN1FVRkRaRzVETEdsQ1FVRlBiME1zVjBGQlYyNURMRTFCUkVvN1FVRkZaRWdzYVVKQlFVOHJRaXhQUVVaUE8wRkJSMlE1U1N4cFFrRkJUMmxLTzBGQlNFOHNVMEZCYUVJN1FVRkxSRHRCUVVOR096czdkMEpCYkVkVk8wRkJRVVVzWVVGQlR5eExRVUZMWkN4TFFVRmFPMEZCUVc5Q096czdPenRCUVhOSE5VSXNTVUZCU1d0Q0xHdERRVUZoTEVWQlFVTnFReXhSUVVGUkxGRkJRVlFzUlVGQmJVSk5MRXRCUVVzc1MwRkJlRUlzUlVGQkswSlNMRkZCUVZFc1VVRkJka01zUlVGQmFrSTdRVUZEUVN4SlFVRkpPRUlzYTBOQlFXRXNSVUZCUTJoRExGRkJRVkVzVVVGQlZDeEZRVUZ0UWxNc1QwRkJUeXhQUVVFeFFpeEZRVUZxUWp0clFrRkRVVk1zVlRzN096czdPenRCUXk5SVpqczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFTeHpRMEZCYzBNc2RVTkJRWFZETEdkQ1FVRm5RanM3UVVGRk4wWTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRURHRCUVVOQk8wRkJRMEVzUjBGQlJ6dEJRVU5JTzBGQlEwRXNSMEZCUnp0QlFVTklPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1JUczdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN08wRkRaa0U3TzBGQlJVRTdPenM3UVVGRFFUczdPenRCUVVOQk96czdPenM3UVVGRlFUczdPenM3UVVFMVFrRTdPenM3T3pzN096czdPenM3T3pzN096czdPenM3U1VGcFEwMXZRaXhQTzBGQlEwbzdPenM3T3pzN096czdPenRCUVdWQk96czdPenM3UVVGTlFTeHRRa0ZCV1VNc1MwRkJXaXhGUVVGdFFrTXNSMEZCYmtJc1JVRkJkMEpETEUxQlFYaENMRVZCUVdkRE8wRkJRVUU3TzBGQlF6bENMRkZCUVVsdVRTeFJRVUZSTEVsQlFWbzdPMEZCUlVGQkxGVkJRVTA0UWl4TlFVRk9MRWRCUVdWdFN5eExRVUZtTzBGQlEwRnFUU3hWUVVGTmJVSXNTVUZCVGl4SFFVRmhLMHNzUjBGQllqczdRVUZGUVd4TkxGVkJRVTFuUXl4UFFVRk9MRWRCUVdkQ2JVc3NUMEZCVDBNc1ZVRkJVQ3hIUVVGdlFpeExRVUZ3UXp0QlFVTkJjRTBzVlVGQlRXZEVMRmRCUVU0c1IwRkJiMEp0U2l4UFFVRlBReXhWUVVFelFqczdRVUZGUVhCTkxGVkJRVTEzUlN4VlFVRk9MRWRCUVcxQ0xFVkJRVzVDTzBGQlEwRjRSU3hWUVVGTk1rSXNWVUZCVGl4SFFVRnRRaXhGUVVGdVFqdEJRVU5CTTBJc1ZVRkJUWEZOTEdGQlFVNHNSMEZCYzBJc1JVRkJkRUk3TzBGQlJVRklMRkZCUVVrNVN5eFhRVUZLTEVOQlFXZENOa3NzUzBGQmFFSXNSVUZCZFVJc1ZVRkJRek5MTEVkQlFVUXNSVUZCVXp0QlFVTTVRanRCUVVOQkxGVkJRVWxCTEVsQlFVbFBMRWxCUVVvc1MwRkJZVzlMTEV0QlFXcENMRVZCUVhkQ08wRkJRM1JDYWxBc1owSkJRVkY1UkN4SlFVRlNMRU5CUVdFc2VVSkJRV0lzUlVGQmQwTmhMRWRCUVhoRExFVkJRVFpEZEVJc1MwRkJOME03UVVGRFFTeG5Ra0ZCVVhOQ0xFbEJRVWw2UlN4SlFVRmFPMEZCUTBVc1pVRkJTeXhUUVVGTU8wRkJRV2RDYlVRc2EwSkJRVTF6VFN4VlFVRk9MRU5CUVdsQ2FFd3NSMEZCYWtJc1JVRkJkVUk3UVVGRGRrTXNaVUZCU3l4UlFVRk1PMEZCUVdWMFFpeHJRa0ZCVFhWTkxHVkJRVTRzUTBGQmMwSnFUQ3hIUVVGMFFpeEZRVUUwUWp0QlFVTXpReXhsUVVGTExGRkJRVXc3UVVGQlpYUkNMR3RDUVVGTmQwMHNaVUZCVGl4RFFVRnpRbXhNTEVkQlFYUkNMRVZCUVRSQ08wRkJRek5ETEdWQlFVc3NVMEZCVER0QlFVRm5RblJDTEd0Q1FVRk5PRVFzVlVGQlRpeERRVUZwUW5oRExFZEJRV3BDTEVWQlFYVkNPMEZCU25wRE8wRkJUVVE3UVVGRFJpeExRVmhFTzBGQldVUTdPMEZCUlVRN096czdPenM3T3pzN1FVRnJRa0U3T3pzN096czdPenM3T3pzeVFrRlpUemhETEUwc1JVRkJVVXdzVXl4RlFVRlhNa1VzVnl4RlFVRTBSVHRCUVVGQkxGVkJRUzlFSzBRc1MwRkJLMFFzZFVWQlFYWkVMRXRCUVhWRU8wRkJRVUVzVlVGQmFFUkRMRWRCUVdkRUxIVkZRVUV4UXl4TFFVRXdRenRCUVVGQkxGVkJRVzVEYkVjc1NVRkJiVU1zZFVWQlFUVkNMRk5CUVRSQ08wRkJRVUVzVlVGQmFrSjZTaXhSUVVGcFFqdEJRVUZCTEZWQlFWQm5SQ3hMUVVGUE96czdRVUZGY0Vjc1ZVRkJTU3hEUVVGRGNVVXNUVUZCVEN4RlFVRmhMRTFCUVUxcVNTeE5RVUZOTERoRVFVRk9MRU5CUVU0N1FVRkRZaXhWUVVGSkxFTkJRVU0wU0N4VFFVRk1MRVZCUVdkQ0xFMUJRVTAxU0N4TlFVRk5MSEZFUVVGT0xFTkJRVTQ3TzBGQlJXaENMRlZCUVVrMlJDeFJRVUZSTEVsQlFWbzdRVUZEUVN4VlFVRkpNazBzWTBGQlpTeHpRa0ZCWXl4RlFVRmtMRVZCUVd0Q05VMHNTMEZCYkVJc1EwRkJia0k3TzBGQlJVRTBUU3hyUWtGQldVUXNSMEZCV2l4SFFVRnJRa0VzUjBGQmJFSTdRVUZEUVVNc2EwSkJRVmxHTEV0QlFWb3NSMEZCYjBKQkxFdEJRWEJDTzBGQlEwRkZMR3RDUVVGWmRra3NUVUZCV2l4SFFVRnhRa0VzVFVGQmNrSTdRVUZEUVhWSkxHdENRVUZaY2trc1UwRkJXaXhIUVVGM1FsQXNVMEZCZUVJN1FVRkRRekpGTEdsQ1FVRkVMRWRCUVdkQ2FVVXNXVUZCV1RkTUxFbEJRVm9zUjBGQmJVSXNjMEpCUVZVMFNDeFhRVUZXTEVOQlFXNURMRWRCUVRSRWFVVXNXVUZCV1RkTUxFbEJRVm9zUjBGQmJVSXNSVUZCTDBVN1FVRkRRVFpNTEd0Q1FVRlpia2NzU1VGQldpeEhRVUZ0UWtFc1MwRkJTeTlKTEUxQlFVd3NTMEZCWjBJc1EwRkJhRUlzUjBGQmIwSXNVMEZCY0VJc1IwRkJaME1yU1N4SlFVRnVSRHRCUVVOQmJVY3NhMEpCUVZsMlJ5eFJRVUZhTEVkQlFYVkNjRWNzVFVGQlRUaENMRTFCUVRkQ08wRkJRMEUyU3l4clFrRkJXWGhKTEUxQlFWb3NSMEZCY1VJc1MwRkJja0k3UVVGRFFTeFZRVUZKY0VVc1MwRkJTaXhGUVVGWE8wRkJRMVEwVFN4dlFrRkJXVGxHTEUxQlFWb3NSMEZCY1VJNVJ5eE5RVUZOT0Vjc1RVRkJUaXhIUVVGbE9VY3NUVUZCVFRoSExFMUJRWEpDTEVkQlFUaENMRWxCUVc1RU8wRkJRMEU0Uml4dlFrRkJXVzVITEVsQlFWb3NSMEZCYlVKNlJ5eE5RVUZOZVVjc1NVRkJUaXhIUVVGaGVrY3NUVUZCVFhsSExFbEJRVzVDTEVkQlFUQkNiVWNzV1VGQldXNUhMRWxCUVhwRU8wRkJRMFFzVDBGSVJDeE5RVWRQTzBGQlFVVnRSeXh2UWtGQldUbEdMRTFCUVZvc1IwRkJjVUlzU1VGQmNrSTdRVUZCTkVJN08wRkJSWEpETEZWQlFVazVTaXhSUVVGS0xFVkJRVzFDTzBGQlFVVTBVQ3h2UWtGQldUVlFMRkZCUVZvc1IwRkJkVUpCTEZGQlFYWkNPMEZCUVd0RE96dEJRVVYyUkRzN1FVRkZRVU1zWTBGQlVXZERMRWRCUVZJc1EwRkJXU3h6UkVGQldpeEZRVUZ2UlRKT0xGZEJRWEJGT3p0QlFVVkJMR0ZCUVU4elRTeE5RVUZOTkUwc1QwRkJUaXhEUVVGalJDeFhRVUZrTEVOQlFWQTdRVUZEUkRzN1FVRkZSRHM3T3pzN096czdiME5CUzJkQ1JTeFJMRVZCUVZVN1FVRkRlRUlzVlVGQlNUZE5MRkZCUVZFc1NVRkJXanRCUVVOQmFFUXNZMEZCVVdkRExFZEJRVklzUTBGQldTeHRSRUZCV2l4RlFVRnBSVFpPTEZGQlFXcEZPenRCUVVWQkxEUkNRVUZqUVN4UlFVRmtMRVZCUVhkQ0xFVkJRVU14U1N4UlFVRlJMRWxCUVZRc1JVRkJlRUk3TzBGQlJVRXNZVUZCVDI1RkxFMUJRVTA0VFN4aFFVRk9MRU5CUVc5Q1JDeFJRVUZ3UWl4RFFVRlFPMEZCUTBRN08wRkJSVVE3T3pzN096czdPenM3T3pzN09FSkJWVlY2U1N4TkxFVkJRVkV5U1N4TkxFVkJRVFpFTzBGQlFVRXNWVUZCY2tST0xFdEJRWEZFTEhWRlFVRTNReXhMUVVFMlF6dEJRVUZCTEZWQlFYUkRReXhIUVVGelF5eDFSVUZCYUVNc1MwRkJaME03UVVGQlFTeFZRVUY2UWpkR0xFMUJRWGxDTEhWRlFVRm9RaXhKUVVGblFqdEJRVUZCTEZWQlFWWTVTaXhSUVVGVk96dEJRVU0zUlN4VlFVRkphVVFzVVVGQlVTeEpRVUZhTzBGQlEwRXNWVUZCU1RaTkxGZEJRVmNzUlVGQlpqczdRVUZGUVVFc1pVRkJVMGdzUjBGQlZDeEhRVUZsUVN4SFFVRm1PMEZCUTBGSExHVkJRVk5LTEV0QlFWUXNSMEZCYVVKQkxFdEJRV3BDTzBGQlEwRkpMR1ZCUVZONlNTeE5RVUZVTEVkQlFXdENRU3hOUVVGc1FqczdRVUZGUVhsSkxHVkJRVk16U3l4UlFVRlVMRWRCUVc5Q05rc3NUVUZCY0VJN1FVRkRRU3hWUVVGSmFGRXNVVUZCU2l4RlFVRnRRanRCUVVGRk9GQXNhVUpCUVZNNVVDeFJRVUZVTEVkQlFXOUNRU3hSUVVGd1FqdEJRVUVyUWpzN1FVRkZjRVE3UVVGRFFUaFFMR1ZCUVZOb1J5eE5RVUZVTEVkQlFXdENRU3hOUVVGc1FqczdRVUZGUVRkS0xHTkJRVkZuUXl4SFFVRlNMRU5CUVZrc09FTkJRVm9zUlVGQk5FUTJUaXhSUVVFMVJEczdRVUZGUVN3MFFrRkJZMEVzVVVGQlpDeEZRVUYzUWl4RlFVRkRNVWtzVVVGQlVTeExRVUZVTEVWQlFYaENPenRCUVVWQkxHRkJRVTl1UlN4TlFVRk5aMDRzVlVGQlRpeERRVUZwUWtnc1VVRkJha0lzUTBGQlVEdEJRVU5FT3p0QlFVVkVPenM3T3pzN096dHZRMEZMWjBKQkxGRXNSVUZCVlR0QlFVTjRRaXhWUVVGSk4wMHNVVUZCVVN4SlFVRmFPMEZCUTBFc1ZVRkJTV2xPTEZsQlFWbEtMRmxCUVZrc1JVRkJOVUk3TzBGQlJVRXNORUpCUVdOSkxGTkJRV1FzUlVGQmVVSXNSVUZCUXpsSkxGRkJRVkVzU1VGQlZDeEZRVUY2UWpzN1FVRkZRU3hoUVVGUGJrVXNUVUZCVFd0T0xHZENRVUZPTEVOQlFYVkNSQ3hUUVVGMlFpeERRVUZRTzBGQlEwUTdPMEZCUlVRN096czdPenM3TzNsQ1FVdExSaXhOTEVWQlFWRTdRVUZEV0N4VlFVRkpMMDBzVVVGQlVTeEpRVUZhT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hWUVVGSmJVNHNWVUZCVlR0QlFVTmFkRkVzWTBGQlRTeE5RVVJOTEVWQlEwVm5SaXhOUVVGTk4wSXNUVUZCVFRoQ0xFMUJSR1FzUlVGRGMwSkRMRWxCUVVsblREdEJRVVF4UWl4UFFVRmtPenRCUVVsQkxHRkJRVThzYzBKQlFWa3NWVUZCUTNCTExFOUJRVVFzUlVGQlZVTXNUVUZCVml4RlFVRnhRanRCUVVOMFF6VkRMR05CUVUxdFFpeEpRVUZPTEVOQlFWZG5RaXhYUVVGWUxFTkJRWFZDWjB3c1QwRkJka0lzUlVGQlowTXNWVUZCUXk5TExFdEJRVVFzUlVGQlZ6dEJRVU42UTNCR0xHdENRVUZSWjBNc1IwRkJVaXhEUVVGWkxHbENRVUZhTEVWQlFTdENiMFFzUzBGQkwwSTdRVUZEUVN4alFVRkpRU3hOUVVGTlNDeEpRVUZPTEVOQlFWZEpMRWxCUVZnc1MwRkJiMElzUjBGQmVFSXNSVUZCTmtJN1FVRkRNMEpOTEc5Q1FVRlJVQ3hOUVVGTlNDeEpRVUZPTEVOQlFWYzFSaXhMUVVGdVFqdEJRVU5FTEZkQlJrUXNUVUZGVHp0QlFVTk1kVWNzYlVKQlFVOVNMRTFCUVUxSUxFbEJRVTRzUTBGQlZ6QkVMRWxCUVd4Q08wRkJRMFE3UVVGRFJpeFRRVkJFTzBGQlVVUXNUMEZVVFN4RFFVRlFPMEZCVlVRN08wRkJSVVE3T3pzN096czdPMjFEUVV0bGNrUXNVU3hGUVVGVk8wRkJRM1pDTEZkQlFVczRTeXh6UWtGQlRDeEhRVUU0UWpsTExGRkJRVGxDTzBGQlEwUTdPMEZCUlVRN096czdPenM3TkVKQlNWRkJMRkVzUlVGQlZUdEJRVU5vUWl4WFFVRkxLMHNzVVVGQlRDeEhRVUZuUWk5TExGRkJRV2hDTzBGQlEwUTdPenMwUWtGRlQzWkRMRXNzUlVGQlR6dEJRVU5pTEZWQlFVbERMRkZCUVZFc1NVRkJXanM3UVVGRlFTeGhRVUZQTEhOQ1FVRlpMRlZCUVVNeVF5eFBRVUZFTEVWQlFWVkRMRTFCUVZZc1JVRkJjVUk3TzBGQlJYUkRMRmxCUVVrd1N5eG5Ra0ZCYVVJc2MwSkJRV01zUlVGQlpDeEZRVUZyUW5aT0xFdEJRV3hDTEVOQlFYSkNPenRCUVVWQkxGbEJRVWx2UlN4VFFVRlRjRVVzVFVGQlRXOUZMRTFCUVc1Q096dEJRVVZCYlVvc2MwSkJRV053U0N4UFFVRmtMRWRCUVhsQ0xFbEJRVWt3UXl4SlFVRktMRVZCUVVRc1EwRkJWME1zVjBGQldDeEZRVUY0UWp0QlFVTkJlVVVzYzBKQlFXTm9TQ3hQUVVGa0xFZEJRWGRDZEVjc1RVRkJUV2RFTEZkQlFUbENPenRCUVVWQkxGbEJRVWwxU3l4bFFVRmxMSE5DUVVGVlJDeGhRVUZXTEVOQlFXNUNPenRCUVVWQkxHVkJRVTlETEdGQlFXRmlMRWRCUVhCQ08wRkJRMEVzWlVGQlQyRXNZVUZCWVdRc1MwRkJjRUk3UVVGRFFTeGxRVUZQWXl4aFFVRmhlRW9zVTBGQmNFSTdRVUZEUVN4bFFVRlBkMG9zWVVGQllYaFJMRkZCUVhCQ096dEJRVVZCTzBGQlEwRXNXVUZCU1dsTkxHRkJRV0U3UVVGRFptNU5MR2RDUVVGTkxGRkJSRk1zUlVGRFEyZEdMRTFCUVUwM1FpeE5RVUZOT0VJc1RVRkVZaXhGUVVOeFFrTXNTVUZCU1M5Q0xFMUJRVTFuUXl4UFFVUXZRanRCUVVWbVF5eG5Ra0ZCVFN4RlFVRkZhME1zVVVGQlVVRXNUVUZCVml4RlFVRnJRamxJTEU5QlFVOXJVaXhaUVVGNlFqdEJRVVpUTEZOQlFXcENPenRCUVUxQmRrVXNiVUpCUVZjdlJ5eEpRVUZZTEVOQlFXZENiVU1zVFVGQmFFSXNSMEZCZVVKclNpeGpRVUZqYkVvc1RVRkJka003TzBGQlJVRXNXVUZCU1d0S0xHTkJRV05hTEVkQlFXeENMRVZCUVhWQ01VUXNWMEZCVnk5SExFbEJRVmdzUTBGQlowSjVTeXhIUVVGb1FpeEhRVUZ6UWxrc1kwRkJZMW9zUjBGQmNFTTdRVUZEZGtJc1dVRkJTVmtzWTBGQlkySXNTMEZCYkVJc1JVRkJlVUo2UkN4WFFVRlhMMGNzU1VGQldDeERRVUZuUW5kTExFdEJRV2hDTEVkQlFYZENZU3hqUVVGallpeExRVUYwUXp0QlFVTjZRaXhaUVVGSllTeGpRVUZqZGxFc1VVRkJiRUlzUlVGQk5FSnBUU3hYUVVGWEwwY3NTVUZCV0N4RFFVRm5RbXhHTEZGQlFXaENMRWRCUVRKQ2RWRXNZMEZCWTNaUkxGRkJRWHBET3p0QlFVVTFRa01zWjBKQlFWRm5ReXhIUVVGU0xFTkJRVmtzY1VKQlFWb3NSVUZCYlVOelR5eGhRVUZ1UXl4RlFVRnJSSFJGTEZWQlFXeEVPenRCUVVWQk8wRkJRMEZvU2l4alFVRk5iVUlzU1VGQlRpeERRVUZYWjBJc1YwRkJXQ3hEUVVGMVFqWkhMRlZCUVhaQ0xFVkJRVzFETEZWQlFVTTFSeXhMUVVGRUxFVkJRVmM3UVVGRE5VTndSaXhyUWtGQlVXZERMRWRCUVZJc1EwRkJXU3gzUTBGQldpeEZRVUZ6Ukc5RUxFdEJRWFJFTzBGQlEwRXNZMEZCU1VFc1RVRkJUVWdzU1VGQlRpeERRVUZYU1N4SlFVRllMRXRCUVc5Q0xFZEJRWGhDTEVWQlFUWkNPMEZCUXpOQ08wRkJRMEZwVEN3d1FrRkJZM0JTTEVkQlFXUXNSMEZCYjBKclJ5eE5RVUZOU0N4SlFVRk9MRU5CUVZkRExGRkJRUzlDT3p0QlFVVkJiMHdzTUVKQlFXTndTU3hOUVVGa0xFZEJRWFZDTEUxQlFYWkNMRU5CU2pKQ0xFTkJTVWM3UVVGRE9VSnZTU3d3UWtGQlkzSklMRTlCUVdRc1IwRkJkMEpxUnl4TFFVRjRRanRCUVVOQmMwNHNNRUpCUVdNeFJ5eFRRVUZrTEVkQlFUQkNlRVVzVFVGQlRVZ3NTVUZCVGl4RFFVRlhkVXdzYVVKQlFYSkRPenRCUVVWQkxHZENRVUZKUXl4VFFVRlRlazRzVFVGQlRYZEZMRlZCUVU0c1EwRkJhVUk0U1N4alFVRmpjRklzUjBGQkwwSXNRMEZCWWp0QlFVTkJMR2RDUVVGSkxFTkJRVU4xVWl4TlFVRk1MRVZCUVdFN1FVRkRXRUVzZFVKQlFWTXNhVU5CUVhWQ1NDeGhRVUYyUWl4RFFVRlVPMEZCUTBGMFRpeHZRa0ZCVFhkRkxGVkJRVTRzUTBGQmFVSTRTU3hqUVVGamNGSXNSMEZCTDBJc1NVRkJjME4xVWl4TlFVRjBRenRCUVVOQlFTeHhRa0ZCVDBNc1pVRkJVQ3hEUVVGMVFqTk9MRTFCUVUxMVJTeFRRVUUzUWp0QlFVTkVPenRCUVVWRU0wSXNiMEpCUVZFNFN5eE5RVUZTTzBGQlJVUXNWMEZxUWtRc1RVRnBRazg3UVVGRFREdEJRVU5CTjBzc2JVSkJRVTlTTEUxQlFVMUlMRWxCUVU0c1EwRkJWekJFTEVsQlFXeENPMEZCUTBRN1FVRkRSaXhUUVhaQ1JEdEJRWGRDUkN4UFFYaEVUU3hEUVVGUU8wRkJNRVJFT3pzN2EwTkJSV0ZyU0N4UkxFVkJRVlU3UVVGQlFUczdRVUZEZEVJc1ZVRkJTVGROTEZGQlFWRXNTVUZCV2pzN1FVRkZRU3hoUVVGUExITkNRVUZaTEZWQlFVTXlReXhQUVVGRUxFVkJRVlZETEUxQlFWWXNSVUZCY1VJN1FVRkRkRU1zV1VGQlNYVkNMRk5CUVZNd1NTeFRRVUZUTVVrc1RVRkJkRUk3TzBGQlJVRTdRVUZEUVN4WlFVRkpOa1VzWVVGQllUdEJRVU5tYmswc1owSkJRVTBzVVVGRVV5eEZRVU5EWjBZc1RVRkJUVGRDTEUxQlFVMDRRaXhOUVVSaUxFVkJRM0ZDUXl4SlFVRkpMMElzVFVGQlRXZERMRTlCUkM5Q08wRkJSV1pETEdkQ1FVRk5MRVZCUVVWclF5eFJRVUZSUVN4TlFVRldPMEZCUmxNc1UwRkJha0k3TzBGQlMwRnVTQ3huUWtGQlVXZERMRWRCUVZJc1EwRkJXU3h6UWtGQldpeEZRVUZ2UXpaT0xGRkJRWEJETEVWQlFUaEROMFFzVlVGQk9VTTdPMEZCUlVFc1dVRkJTVFpFTEZGQlFVb3NSVUZCWXp0QlFVTmFOMFFzY1VKQlFWY3ZSeXhKUVVGWUxFTkJRV2RDTlVZc1MwRkJhRUlzUjBGQmQwSjNVU3hSUVVGNFFqdEJRVU5CTjBRc2NVSkJRVmN2Unl4SlFVRllMRU5CUVdkQ05VWXNTMEZCYUVJc1EwRkJjMElyU2l4UlFVRjBRaXhIUVVGcFEzQkhMRTFCUVUwNFFpeE5RVUYyUXp0QlFVTkVPenRCUVVWRUxGbEJRVWtyU3l4VFFVRlRTQ3hIUVVGaUxFVkJRV3RDTVVRc1YwRkJWeTlITEVsQlFWZ3NRMEZCWjBKNVN5eEhRVUZvUWl4SFFVRnpRa2NzVTBGQlUwZ3NSMEZCTDBJN1FVRkRiRUlzV1VGQlNVY3NVMEZCVTBvc1MwRkJZaXhGUVVGdlFucEVMRmRCUVZjdlJ5eEpRVUZZTEVOQlFXZENkMHNzUzBGQmFFSXNSMEZCZDBKSkxGTkJRVk5LTEV0QlFXcERPMEZCUTNCQ0xGbEJRVWxKTEZOQlFWTTVTU3hUUVVGaUxFVkJRWGRDYVVZc1YwRkJWeTlITEVsQlFWZ3NRMEZCWjBKeFF5eFRRVUZvUWl4SFFVRTBRblZKTEZOQlFWTTVTU3hUUVVGeVF6dEJRVU40UWl4WlFVRkpPRWtzVTBGQlV6bFFMRkZCUVdJc1JVRkJkVUpwVFN4WFFVRlhMMGNzU1VGQldDeERRVUZuUW14R0xGRkJRV2hDTEVkQlFUSkNPRkFzVTBGQlV6bFFMRkZCUVhCRE96dEJRVVYyUWtNc1owSkJRVkZuUXl4SFFVRlNMRU5CUVZrc05FTkJRVm9zUlVGQk1FUm5TeXhWUVVFeFJEczdRVUZGUVR0QlFVTkJhRW9zWTBGQlRXMUNMRWxCUVU0c1EwRkJWMmRDTEZkQlFWZ3NRMEZCZFVJMlJ5eFZRVUYyUWl4RlFVRnRReXhWUVVGRE5VY3NTMEZCUkN4RlFVRlhPMEZCUXpWRGNFWXNhMEpCUVZGblF5eEhRVUZTTEVOQlFWa3NjVVJCUVZvc1JVRkJiVVZ2UkN4TFFVRnVSVHRCUVVOQkxHTkJRVWxCTEUxQlFVMUlMRWxCUVU0c1EwRkJWMGtzU1VGQldDeExRVUZ2UWl4SFFVRjRRaXhGUVVFMlFqczdRVUZGTTBJc1owSkJRVWx6VEN4clFrRkJhMEoyVEN4TlFVRk5TQ3hKUVVGT0xFTkJRVmMxUml4TFFVRnFRenM3UVVGRlFTeHBRa0ZCU3l4SlFVRkpiME1zUzBGQlZDeEpRVUZyUW10UUxHVkJRV3hDTEVWQlFXMURPenRCUVVWcVF5eHJRa0ZCU1VNc1lVRkJZVVFzWjBKQlFXZENiRkFzUzBGQmFFSXNRMEZCYWtJN08wRkJSVUU3TzBGQlJVRnRVQ3g1UWtGQlZ6bE5MRWxCUVZnc1IwRkJhMElzYzBKQlFWVTRUU3hYUVVGWE9VMHNTVUZCY2tJc1MwRkJPRUlzUlVGQmFFUTdPMEZCUlVFc2EwSkJRVWs0VFN4WFFVRlhReXhsUVVGbUxFVkJRV2RETzBGQlFVVkVMREpDUVVGWFF5eGxRVUZZTEVkQlFUWkNMSE5DUVVGVlJDeFhRVUZYUXl4bFFVRnlRaXhEUVVFM1FqdEJRVUZ4UlRzN1FVRkZka2RFTEhsQ1FVRlhMMGNzVFVGQldDeEhRVUZ2UWl4TFFVRndRanRCUVVOQkswY3NlVUpCUVZkNlNpeE5RVUZZTEVkQlFXOUNMRWxCUVhCQ08wRkJRMEY1U2l4NVFrRkJWekZKTEUxQlFWZ3NSMEZCYjBJc1RVRkJjRUlzUTBGYWFVTXNRMEZaVGp0QlFVTXpRakJKTEhsQ1FVRlhNMGdzVDBGQldDeEhRVUZ4UW1wSExFdEJRWEpDT3p0QlFVVkJhRVFzYzBKQlFWRm5ReXhIUVVGU0xFTkJRVmtzTmtSQlFWb3NSVUZCTWtVMFR5eFZRVUV6UlRzN1FVRkZRU3hyUWtGQlNVZ3NVMEZCVXl4cFEwRkJkVUpITEZWQlFYWkNMRU5CUVdJN08wRkJSVUVzYTBKQlFVbEJMRmRCUVZkRExHVkJRV1lzUlVGQlowTTdRVUZCUlVvc2RVSkJRVTlMTEdWQlFWQXNRMEZCZFVKR0xGZEJRVmRETEdWQlFXeERPMEZCUVhGRU8wRkJRM1pHTjA0c2IwSkJRVTEzUlN4VlFVRk9MRU5CUVdsQ2Iwb3NWMEZCVnpGU0xFZEJRVFZDTEVsQlFXMURkVklzVFVGQmJrTTdRVUZGUkRzN1FVRkZSRGxMTEc5Q1FVRlJNME1zVFVGQlRYZEZMRlZCUVdRN1FVRkRRU3huUWtGQlNTeFBRVUZMZFVvc2EwSkJRVlFzUlVGQk5rSXNUMEZCUzBFc2EwSkJRVXdzUTBGQmQwSXNUMEZCUzNaS0xGVkJRVGRDTzBGQlJUbENMRmRCTDBKRUxFMUJLMEpQTEVsQlFVbHdReXhOUVVGTlNDeEpRVUZPTEVOQlFWZEpMRWxCUVZnc1MwRkJiMElzUjBGQmVFSXNSVUZCTmtJN1FVRkRiRU5OTEc5Q1FVRlJMRVZCUVZJN1FVRkRSQ3hYUVVaTkxFMUJSVUU3UVVGRFREdEJRVU5CUXl4dFFrRkJUMUlzVFVGQlRVZ3NTVUZCVGl4RFFVRlhNRVFzU1VGQmJFSTdRVUZEUkR0QlFVTkdMRk5CZGtORU8wRkJkME5FTEU5QmFFVk5MRU5CUVZBN1FVRnBSVVE3T3pzclFrRkZWVFZHTEVzc1JVRkJUenRCUVVOb1FpeFZRVUZKUXl4UlFVRlJMRWxCUVZvN08wRkJSVUVzWVVGQlR5eHpRa0ZCV1N4VlFVRkRNa01zVDBGQlJDeEZRVUZWUXl4TlFVRldMRVZCUVhGQ096dEJRVVYwUXp0QlFVTkJMRmxCUVVsdlRDeGxRVUZsTzBGQlEycENibElzWjBKQlFVMHNWMEZFVnl4RlFVTkZaMFlzVFVGQlRUZENMRTFCUVUwNFFpeE5RVVJrTEVWQlEzTkNReXhKUVVGSkwwSXNUVUZCVFdkRExFOUJSR2hETzBGQlJXcENReXhuUWtGQlRUdEJRVVpYTEZOQlFXNUNPenRCUVV0Qk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzV1VGQlNXeERMRXRCUVVvc1JVRkJWenRCUVVOVUxHTkJRVWxCTEUxQlFVMTVSaXhqUVVGT0xFTkJRWEZDTEV0QlFYSkNMRU5CUVVvc1JVRkJhVU4zU1N4aFFVRmhMMHdzU1VGQllpeERRVUZyUW5sTExFZEJRV3hDTEVkQlFYZENNMDBzVFVGQlRUSk5MRWRCUVRsQ08wRkJRMnBETEdOQlFVa3pUU3hOUVVGTmVVWXNZMEZCVGl4RFFVRnhRaXhQUVVGeVFpeERRVUZLTEVWQlFXMURkMGtzWVVGQllTOU1MRWxCUVdJc1EwRkJhMEozU3l4TFFVRnNRaXhIUVVFd1FqRk5MRTFCUVUwd1RTeExRVUZvUXp0QlFVTnVReXhqUVVGSk1VMHNUVUZCVFhsR0xHTkJRVTRzUTBGQmNVSXNVVUZCY2tJc1EwRkJTaXhGUVVGdlEzZEpMR0ZCUVdFdlRDeEpRVUZpTEVOQlFXdENiVU1zVFVGQmJFSXNSMEZCTWtKeVJTeE5RVUZOY1VVc1RVRkJha003UVVGRGNFTXNZMEZCU1hKRkxFMUJRVTE1Uml4alFVRk9MRU5CUVhGQ0xGVkJRWEpDTEVOQlFVb3NSVUZCYzBOM1NTeGhRVUZoTDB3c1NVRkJZaXhEUVVGclFteEdMRkZCUVd4Q0xFZEJRVFpDWjBRc1RVRkJUV2hFTEZGQlFXNURPMEZCUTNSRExHTkJRVWxuUkN4TlFVRk5lVVlzWTBGQlRpeERRVUZ4UWl4VlFVRnlRaXhEUVVGS0xFVkJRWE5EZDBrc1lVRkJZUzlNTEVsQlFXSXNRMEZCYTBKRExGRkJRV3hDTEVkQlFUWkNia01zVFVGQlRXMURMRkZCUVc1RE8wRkJRM1pET3p0QlFVVkVPRXdzY1VKQlFXRXZUQ3hKUVVGaUxFTkJRV3RDYTBNc1RVRkJiRUlzUjBGQk1rSndSU3hOUVVGTmIwVXNUVUZCYWtNN08wRkJSVUU3UVVGRFFTeFpRVUZKY0VVc1RVRkJUWGxHTEdOQlFVNHNRMEZCY1VJc1VVRkJja0lzUTBGQlNpeEZRVUZ2UTNkSkxHRkJRV0V2VEN4SlFVRmlMRU5CUVd0Q2QwUXNiMEpCUVd4Q0xFZEJRWGxETVVZc1RVRkJUVGhITEUxQlFTOURPenRCUVVWd1F6ZEtMR2RDUVVGUlowTXNSMEZCVWl4RFFVRlpMREpEUVVGYUxFVkJRWGxFWlN4TFFVRjZSQ3hGUVVGblJXbFBMRmxCUVdoRk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJhRThzWTBGQlRXMUNMRWxCUVU0c1EwRkJWMmRDTEZkQlFWZ3NRMEZCZFVJMlRDeFpRVUYyUWl4RlFVRnhReXhWUVVGRE5Vd3NTMEZCUkN4RlFVRlhPMEZCUXpsRGNFWXNhMEpCUVZGblF5eEhRVUZTTEVOQlFWa3NhME5CUVZvc1JVRkJaMFJ2UkN4TFFVRm9SRHM3UVVGRlFTeGpRVUZKTWtzc1UwRkJVek5MTEUxQlFVMUlMRWxCUVU0c1EwRkJWME1zVVVGQmVFSTdPMEZCUlVFc1kwRkJTU3RNTEdsQ1FVRnBRbXBQTEUxQlFVMXhUU3hoUVVGT0xFTkJRVzlDVlN4TlFVRndRaXhEUVVGeVFqdEJRVU5CTEdsQ1FVRlBMMDBzVFVGQlRYRk5MR0ZCUVU0c1EwRkJiMEpWTEUxQlFYQkNMRU5CUVZBN1FVRkRRU3hqUVVGSmEwSXNZMEZCU2l4RlFVRnZRa0VzWlVGQlpYWk5MR2xDUVVGbU96dEJRVVZ3UWl4alFVRkpWU3hOUVVGTlNDeEpRVUZPTEVOQlFWZEpMRWxCUVZnc1IwRkJhMElzUjBGQmRFSXNSVUZCTWtJN1FVRkRla0p5Uml4dlFrRkJVV2RETEVkQlFWSXNRMEZCV1N4dFEwRkJXaXhGUVVGcFJHOUVMRTFCUVUxSUxFbEJRVTRzUTBGQlYzVk1MR2xDUVVFMVJDeEZRVUVyUlZRc1RVRkJMMFU3UVVGRFFXdENMRFpDUVVGcFFpdzRRa0ZCYjBKcVR5eE5RVUZOT0VJc1RVRkJNVUlzUlVGQmEwTnBUQ3hOUVVGc1F5eEZRVUV3UXk5TkxFMUJRVTF0UWl4SlFVRm9SQ3hGUVVGelJHbENMRTFCUVUxSUxFbEJRVTRzUTBGQlYzVk1MR2xDUVVGcVJTeERRVUZxUWp0QlFVTkJlRTRzYTBKQlFVMXhUU3hoUVVGT0xFTkJRVzlDVlN4TlFVRndRaXhKUVVFNFFtdENMR05CUVRsQ08wRkJRMFFzVjBGS1JDeE5RVWxQTEVsQlFVazNUQ3hOUVVGTlNDeEpRVUZPTEVOQlFWZEpMRWxCUVZnc1MwRkJiMElzUjBGQmVFSXNSVUZCTmtJN1FVRkRiRU55Uml4dlFrRkJVV2RETEVkQlFWSXNRMEZCV1N4M1EwRkJXaXhGUVVGelJHOUVMRXRCUVhSRUxFVkJRVFpFY0VNc1RVRkJUWEZOTEdGQlFXNUZPenRCUVVWQkxHZENRVUZKTmtJc1owSkJRV2RDT1V3c1RVRkJUVWdzU1VGQlRpeERRVUZYTlVZc1MwRkJMMEk3TzBGQlJVRTJVaXd3UWtGQlkycEpMRTlCUVdRc1IwRkJkMEpxUnl4TFFVRjRRanRCUVVOQmEwOHNNRUpCUVdONFFpeEhRVUZrTEVkQlFXOUNNMDBzVFVGQlRUSk5MRWRCUVRGQ08wRkJRMEYzUWl3d1FrRkJZM3BDTEV0QlFXUXNSMEZCYzBJeFRTeE5RVUZOTUUwc1MwRkJOVUk3UVVGRFFYbENMREJDUVVGamJsSXNVVUZCWkN4SFFVRjVRbWRFTEUxQlFVMW9SQ3hSUVVFdlFqdEJRVU5CYlZJc01FSkJRV012U2l4TlFVRmtMRWRCUVhWQ0xFdEJRWFpDT3p0QlFVVkJPMEZCUTBFclNpd3dRa0ZCWTNKSUxFMUJRV1FzUjBGQmRVSTVSeXhOUVVGTk9FY3NUVUZCTjBJN08wRkJSVUU3TzBGQlJVRTdRVUZEUVN4blFrRkJTVFJITEZOQlFWTjZUaXhOUVVGTk1rSXNWVUZCVGl4RFFVRnBRbTlNTEUxQlFXcENMRU5CUVdJN1FVRkRRU3huUWtGQlNTeERRVUZEVlN4TlFVRk1MRVZCUVdFN1FVRkRXRUVzZFVKQlFWTXNhVU5CUVhWQ1V5eGhRVUYyUWl4RFFVRlVPMEZCUTBGc1R5eHZRa0ZCVFRKQ0xGVkJRVTRzUTBGQmFVSnZUQ3hOUVVGcVFpeEpRVUV5UWxVc1RVRkJNMEk3UVVGRFJDeGhRVWhFTEUxQlIwODdRVUZEVEVFc2NVSkJRVTlWTEVsQlFWQTdRVUZEUkRzN1FVRkZSRzVTTEc5Q1FVRlJaME1zUjBGQlVpeERRVUZaTEhORVFVRmFMRVZCUVc5RmVVOHNUVUZCY0VVN08wRkJSVUU1U3l4dlFrRkJVVGhMTEUxQlFWSTdPMEZCUlVFc1owSkJRVWxSTEdOQlFVb3NSVUZCYjBJN1FVRkJSVUVzTmtKQlFXVjJSQ3hMUVVGbUxFTkJRWEZDSzBNc1RVRkJja0k3UVVGQkswSTdRVUZGZEVRc1YwRXZRazBzVFVFclFrRTdRVUZEVERkTExHMUNRVUZQVWl4TlFVRk5TQ3hKUVVGT0xFTkJRVmN3UkN4SlFVRnNRanRCUVVORU8wRkJRMFlzVTBFdlEwUTdRVUZuUkVRc1QwRnNSazBzUTBGQlVEdEJRVzFHUkRzN08zRkRRVVZuUW10SUxGRXNSVUZCVlR0QlFVRkJPenRCUVVONlFpeFZRVUZKTjAwc1VVRkJVU3hKUVVGYU96dEJRVVZCTEdGQlFVOHNjMEpCUVZrc1ZVRkJRekpETEU5QlFVUXNSVUZCVlVNc1RVRkJWaXhGUVVGeFFqczdRVUZGZEVNN1FVRkRRU3haUVVGSmIwd3NaVUZCWlR0QlFVTnFRbTVTTEdkQ1FVRk5MRmRCUkZjc1JVRkRSV2RHTEUxQlFVMDNRaXhOUVVGTk9FSXNUVUZFWkN4RlFVTnpRa01zU1VGQlNTOUNMRTFCUVUxblF5eFBRVVJvUXp0QlFVVnFRa01zWjBKQlFVMDdRVUZHVnl4VFFVRnVRanM3UVVGTFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEZsQlFVazBTeXhSUVVGS0xFVkJRV003UVVGRFdpeGpRVUZKUVN4VFFVRlRja2dzWTBGQlZDeERRVUYzUWl4TFFVRjRRaXhEUVVGS0xFVkJRVzlEZDBrc1lVRkJZUzlNTEVsQlFXSXNRMEZCYTBKNVN5eEhRVUZzUWl4SFFVRjNRa2NzVTBGQlUwZ3NSMEZCYWtNN1FVRkRjRU1zWTBGQlNVY3NVMEZCVTNKSUxHTkJRVlFzUTBGQmQwSXNUMEZCZUVJc1EwRkJTaXhGUVVGelEzZEpMR0ZCUVdFdlRDeEpRVUZpTEVOQlFXdENkMHNzUzBGQmJFSXNSMEZCTUVKSkxGTkJRVk5LTEV0QlFXNURPMEZCUTNSRExHTkJRVWxKTEZOQlFWTnlTQ3hqUVVGVUxFTkJRWGRDTEZGQlFYaENMRU5CUVVvc1JVRkJkVU4zU1N4aFFVRmhMMHdzU1VGQllpeERRVUZyUW0xRExFMUJRV3hDTEVkQlFUSkNlVWtzVTBGQlUzcEpMRTFCUVhCRE8wRkJRM1pETEdOQlFVbDVTU3hUUVVGVGNrZ3NZMEZCVkN4RFFVRjNRaXhWUVVGNFFpeERRVUZLTEVWQlFYbERkMGtzWVVGQllTOU1MRWxCUVdJc1EwRkJhMEpzUml4UlFVRnNRaXhIUVVFMlFqaFFMRk5CUVZNNVVDeFJRVUYwUXp0QlFVTjZReXhqUVVGSk9GQXNVMEZCVTNKSUxHTkJRVlFzUTBGQmQwSXNWVUZCZUVJc1EwRkJTaXhGUVVGNVEzZEpMR0ZCUVdFdlRDeEpRVUZpTEVOQlFXdENReXhSUVVGc1FpeEhRVUUyUWpKTExGTkJRVk16VVN4SFFVRjBRenRCUVVNeFF6czdRVUZGUkRoU0xIRkNRVUZoTDB3c1NVRkJZaXhEUVVGclFtdERMRTFCUVd4Q0xFZEJRVEpDTUVrc1UwRkJVekZKTEUxQlFYQkRPenRCUVVWQk8wRkJRMEVzV1VGQlNYTkNMSFZDUVVGMVFtOUlMRk5CUVZOb1J5eE5RVUZ3UXp0QlFVTkJMRmxCUVVsblJ5eFRRVUZUY2tnc1kwRkJWQ3hEUVVGM1FpeFJRVUY0UWl4RFFVRktMRVZCUVhWRGQwa3NZVUZCWVM5TUxFbEJRV0lzUTBGQmEwSjNSQ3h2UWtGQmJFSXNSMEZCZVVOQkxHOUNRVUY2UXpzN1FVRkZka042U1N4blFrRkJVV2RETEVkQlFWSXNRMEZCV1N4cFEwRkJXaXhGUVVFclF6Wk9MRkZCUVM5RExFVkJRWGxFYlVJc1dVRkJla1E3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBGb1R5eGpRVUZOYlVJc1NVRkJUaXhEUVVGWFowSXNWMEZCV0N4RFFVRjFRalpNTEZsQlFYWkNMRVZCUVhGRExGVkJRVU0xVEN4TFFVRkVMRVZCUVZjN1FVRkRPVU53Uml4clFrRkJVV2RETEVkQlFWSXNRMEZCV1N3d1EwRkJXaXhGUVVGM1JHOUVMRXRCUVhoRU96dEJRVVZCTEdOQlFVa3lTeXhUUVVGVE0wc3NUVUZCVFVnc1NVRkJUaXhEUVVGWFF5eFJRVUY0UWpzN1FVRkZRU3hqUVVGSkswd3NhVUpCUVdsQ2FrOHNUVUZCVFhGTkxHRkJRVTRzUTBGQmIwSlZMRTFCUVhCQ0xFTkJRWEpDTzBGQlEwRXNhVUpCUVU4dlRTeE5RVUZOY1Uwc1lVRkJUaXhEUVVGdlFsVXNUVUZCY0VJc1EwRkJVRHRCUVVOQkxHTkJRVWxyUWl4alFVRktMRVZCUVc5Q1FTeGxRVUZsZGswc2FVSkJRV1k3TzBGQlJYQkNMR05CUVVsVkxFMUJRVTFJTEVsQlFVNHNRMEZCVjBrc1NVRkJXQ3hIUVVGclFpeEhRVUYwUWl4RlFVRXlRanRCUVVGRk96dEJRVVV6UW5KR0xHOUNRVUZSWjBNc1IwRkJVaXhEUVVGWkxEQkRRVUZhTEVWQlFYZEViMFFzUzBGQmVFUXNSVUZCSzBReVN5eE5RVUV2UkR0QlFVTkJhMElzTmtKQlFXbENMRGhDUVVGdlFtcFBMRTFCUVUwNFFpeE5RVUV4UWl4RlFVRnJRMmxNTEUxQlFXeERMRVZCUVRCREwwMHNUVUZCVFcxQ0xFbEJRV2hFTEVWQlFYTkVhVUlzVFVGQlRVZ3NTVUZCVGl4RFFVRlhkVXdzYVVKQlFXcEZMRU5CUVdwQ08wRkJRMEY0VGl4clFrRkJUWEZOTEdGQlFVNHNRMEZCYjBKVkxFMUJRWEJDTEVsQlFUaENhMElzWTBGQk9VSTdRVUZGUkN4WFFVNUVMRTFCVFU4c1NVRkJTVGRNTEUxQlFVMUlMRWxCUVU0c1EwRkJWMGtzU1VGQldDeExRVUZ2UWl4SFFVRjRRaXhGUVVFMlFqczdRVUZGYkVNc1owSkJRVWtyVEN4clFrRkJhMEpvVFN4TlFVRk5TQ3hKUVVGT0xFTkJRVmMxUml4TFFVRnFRenM3UVVGRlFTeHBRa0ZCU3l4SlFVRkpiME1zUzBGQlZDeEpRVUZyUWpKUUxHVkJRV3hDTEVWQlFXMURPenRCUVVWcVF5eHJRa0ZCU1ZJc1lVRkJZVkVzWjBKQlFXZENNMUFzUzBGQmFFSXNRMEZCYWtJN1FVRkRRWHBDTEhOQ1FVRlJaME1zUjBGQlVpeERRVUZaTEhORFFVRmFMRVZCUVc5RWIwUXNTMEZCY0VRc1JVRkJNa1IzVEN4VlFVRXpSQ3hGUVVGMVJUVk9MRTFCUVUxeFRTeGhRVUUzUlRzN1FVRkZRU3hyUWtGQlNYVkNMRmRCUVZkRExHVkJRV1lzUlVGQlowTTdRVUZCUlVRc01rSkJRVmRETEdWQlFWZ3NSMEZCTmtJc2MwSkJRVlZFTEZkQlFWZERMR1ZCUVhKQ0xFTkJRVGRDTzBGQlFYRkZPenRCUVVWMlIwUXNlVUpCUVZjNVRTeEpRVUZZTEVkQlFXdENMSE5DUVVGVk9FMHNWMEZCVnpsTkxFbEJRWEpDTEV0QlFUaENMRVZCUVdoRU8wRkJRMEU0VFN4NVFrRkJWM3BLTEUxQlFWZ3NSMEZCYjBJc1NVRkJjRUk3UVVGRFFYbEtMSGxDUVVGWE0wZ3NUMEZCV0N4SFFVRnhRbXBITEV0QlFYSkNPenRCUVVWQk8wRkJRMEZvUkN4elFrRkJVV2RETEVkQlFWSXNRMEZCV1N4elJFRkJXaXhGUVVGdlJUUlBMRlZCUVhCRk8wRkJRMEVzYTBKQlFVbElMRk5CUVZNc2FVTkJRWFZDUnl4VlFVRjJRaXhEUVVGaU96dEJRVVZCTEd0Q1FVRkpRU3hYUVVGWFF5eGxRVUZtTEVWQlFXZERPMEZCUVVWS0xIVkNRVUZQU3l4bFFVRlFMRU5CUVhWQ1JpeFhRVUZYUXl4bFFVRnNRenRCUVVGeFJEdEJRVU4yUmpkUkxITkNRVUZSWjBNc1IwRkJVaXhEUVVGWkxEWkRRVUZhTEVWQlFUSkVlVThzVFVGQk0wUTdRVUZEUVhwT0xHOUNRVUZOTWtJc1ZVRkJUaXhEUVVGcFFqaE1MRTlCUVU5MlVpeEhRVUY0UWl4SlFVRXJRblZTTEUxQlFTOUNPenRCUVVWQkxHdENRVUZKZWs0c1RVRkJUWEZOTEdGQlFVNHNRMEZCYjBKdlFpeFBRVUZQZGxJc1IwRkJNMElzUTBGQlNpeEZRVUZ4UXp0QlFVTnVRemhFTEhOQ1FVRk5jVTBzWVVGQlRpeERRVUZ2UW05Q0xFOUJRVTkyVWl4SFFVRXpRaXhGUVVGblEzZFBMRXRCUVdoRExFTkJRWE5ESzBNc1RVRkJkRU03UVVGRFJEczdRVUZGUkR0QlFVTkJPMEZCUTBFN1FVRkRSRHM3UVVGRlJEbExMRzlDUVVGUk0wTXNUVUZCVFRKQ0xGVkJRV1E3TzBGQlJVRXNaMEpCUVVrc1QwRkJTekJOTEd0Q1FVRlVMRVZCUVRaQ0xFOUJRVXRCTEd0Q1FVRk1MRU5CUVhkQ2NrOHNUVUZCVFRKQ0xGVkJRVGxDTzBGQlJUbENMRmRCY0VOTkxFMUJiME5CTEVsQlFVbFRMRTFCUVUxSUxFbEJRVTRzUTBGQlYwa3NTVUZCV0N4TFFVRnZRaXhIUVVGNFFpeEZRVUUyUWp0QlFVTnNRMDBzYjBKQlFWRXNSVUZCVWp0QlFVTkVMRmRCUmswc1RVRkZRVHRCUVVOTVF5eHRRa0ZCVDFJc1RVRkJUVWdzU1VGQlRpeERRVUZYTUVRc1NVRkJiRUk3UVVGRFJEdEJRVU5HTEZOQmVFUkVPMEZCZVVSRUxFOUJOVVpOTEVOQlFWQTdRVUU0UmtRN08wRkJSVVE3T3pzN0swSkJRMWR5UlN4SExFVkJRVXM3UVVGRFpDeFZRVUZKZEVJc1VVRkJVU3hKUVVGYU96dEJRVVZCTEZWQlFVbHZSeXhYUVVGWGNFY3NUVUZCVFhkRkxGVkJRVTRzUTBGQmFVSnNSQ3hKUVVGSlZ5eEpRVUZLTEVOQlFWTkdMRVZCUVRGQ0xFTkJRV1k3UVVGRFFYRkZMR1ZCUVZOclJ5eFZRVUZVTEVOQlFXOUNhRXdzUjBGQmNFSTdRVUZEUkRzN1FVRkZSRHM3T3p0dlEwRkRaMEpCTEVjc1JVRkJTenRCUVVOdVFpeFZRVUZKZEVJc1VVRkJVU3hKUVVGYU8wRkJRMEVzVlVGQlNXdERMRmRCUVZkYUxFbEJRVWxQTEVsQlFVb3NRMEZCVTNaRExFdEJRVlFzUTBGQlpTeERRVUZtTEVWQlFXdENMRU5CUVVNc1JVRkJia0lzUTBGQlppeERRVVp0UWl4RFFVVnZRanRCUVVOMlF5eFZRVUZKY2tJc1lVRkJZU3h6UWtGQlZXbEZMRkZCUVZZc1EwRkJha0k3UVVGRFFTeFZRVUZKY0VZc1UwRkJVMjFDTEZkQlFWZHVRaXhOUVVGNFFqczdRVUZGUVN4VlFVRkpkMFFzVVVGQlVUdEJRVU5XZWtRc1kwRkJUWGxGTEVsQlFVbDZSU3hKUVVSQk8wRkJSVlpuUml4alFVRk5VQ3hKUVVGSlZ5eEpRVUZLTEVOQlFWTnZTQ3hOUVVaTU8wRkJSMVp1VGl4aFFVRkxaMGNzVVVGSVN6dEJRVWxXY0VZc1owSkJRVkZCTEUxQlNrVTdRVUZMVm5OSUxHZENRVUZST1VNc1NVRkJTVmNzU1VGQlNpeERRVUZUYlVNc1RVRk1VRHRCUVUxV0wwZ3NaVUZCVDJsR0xFbEJRVWxYTEVsQlFVb3NRMEZCVXpWR0xFdEJUazQ3UVVGUFZsVXNhMEpCUVZWMVJTeEpRVUZKVnl4SlFVRktMRU5CUVZOc1JpeFJRVkJVT3p0QlFWTldkVklzWVVGQlN5eGhRVUZEZWxJc1NVRkJSQ3hGUVVGVk8wRkJRMklzWTBGQlNUQlNMRkZCUVZFc1IwRkJXanRCUVVOQkxHTkJRVWt4VWl4SlFVRktMRVZCUVZVN1FVRkRVakJTTEc5Q1FVRlJNVklzU1VGQlVqdEJRVU5FT3p0QlFVVkdPMEZCUTBOdFJDeG5Ra0ZCVFcxQ0xFbEJRVTRzUTBGQlYyZENMRmRCUVZnc1EwRkJkVUk3UVVGRGNrSnZSQ3huUWtGQlNXcEZMRWxCUVVscFJTeEZRVVJoTEVWQlExUXhTU3hOUVVGTkxGVkJSRWNzUlVGRFUyZEdMRTFCUVUxUUxFbEJRVWxUTEVWQlJHNUNMRVZCUTNWQ1FTeEpRVUZKVkN4SlFVRkpUeXhKUVVRdlFqdEJRVVZ5UWtrc2EwSkJRVTBzUlVGQlJVa3NUVUZCVFd0TkxFdEJRVkk3UVVGR1pTeFhRVUYyUWp0QlFVbEVPMEZCY0VKVExFOUJRVm83TzBGQmRVSkJMRlZCUVVsMlR5eE5RVUZOYjA0c2MwSkJRVllzUlVGQmEwTTdRVUZEYUVOd1VTeG5Ra0ZCVVhsRUxFbEJRVklzUTBGQllTeG5RMEZCWWl4RlFVRXJRMGdzUzBGQkwwTTdRVUZEUVU0c1kwRkJUVzlPTEhOQ1FVRk9MRU5CUVRaQ09VMHNTMEZCTjBJN1FVRkRSRHRCUVVOR096dEJRVVZFT3pzN08yOURRVU5uUW1kQ0xFY3NSVUZCU3p0QlFVTnVRaXhWUVVGSmRFSXNVVUZCVVN4SlFVRmFPenRCUVVWRU8wRkJRME1zVlVGQlNXdERMRmRCUVZkYUxFbEJRVWxYTEVsQlFVb3NRMEZCVTBNc1VVRkJlRUk3TzBGQlJVRXNWVUZCU1hoRkxGTkJRVk56UXl4TlFVRk5Na0lzVlVGQlRpeERRVUZwUWs4c1VVRkJha0lzUTBGQllqczdRVUZGUVN4VlFVRkpWQ3hqUVVGak8wRkJRMmhDU1N4alFVRk5OMElzVFVGQlRXbE5MRXRCUkVrN1FVRkZhRUpzU3l4WlFVRkpMMElzVFVGQlRXZERMRTlCUmswN1FVRkhhRUoxUkN4WlFVRkpha1VzU1VGQlNXbEZMRVZCU0ZFN1FVRkphRUl4U1N4alFVRk5MR0ZCU2xVN1FVRkxhRUp2Uml4alFVRk5MRVZCUVVWRExGVkJRVlZhTEVsQlFVbFhMRWxCUVVvc1EwRkJVME1zVVVGQmNrSTdRVUZNVlN4UFFVRnNRanM3UVVGUlFXeERMRmxCUVUxdFFpeEpRVUZPTEVOQlFWZG5RaXhYUVVGWUxFTkJRWFZDVml4WFFVRjJRanM3UVVGRlFTeGhRVUZQZWtJc1RVRkJUVEpDTEZWQlFVNHNRMEZCYVVKUExGRkJRV3BDTEVOQlFWQTdPMEZCUlVFc1ZVRkJTWGhGTEUxQlFVb3NSVUZCV1R0QlFVTldMRmxCUVVrMFF5eFJRVUZSTzBGQlExWjZSQ3huUWtGQlRYbEZMRWxCUVVsNlJTeEpRVVJCTzBGQlJWWllMR1ZCUVV0blJ5eFJRVVpMTzBGQlIxWnVSaXh2UWtGQlZYVkZMRWxCUVVsWExFbEJRVW9zUTBGQlUyeEdMRkZCU0ZRN08wRkJTMVoxVWl4bFFVRkxMR0ZCUVVONlVpeEpRVUZFTEVWQlFWVTdRVUZEWWl4blFrRkJTVEJTTEZGQlFWRXNSMEZCV2p0QlFVTkJMR2RDUVVGSk1WSXNTVUZCU2l4RlFVRlZPMEZCUTFJd1VpeHpRa0ZCVVRGU0xFbEJRVkk3UVVGRFJEczdRVUZGUmp0QlFVTkRMR2RDUVVGSk1GSXNWVUZCVlN4SFFVRmtMRVZCUVcxQ08wRkJRMnBDTjFFc2NVSkJRVTg0VVN4TlFVRlFPMEZCUTBRN08wRkJSVVE3UVVGRFFYaFBMR3RDUVVGTmJVSXNTVUZCVGl4RFFVRlhaMElzVjBGQldDeERRVUYxUWp0QlFVTnlRbTlFTEd0Q1FVRkpha1VzU1VGQlNXbEZMRVZCUkdFc1JVRkRWREZKTEUxQlFVMHNWVUZFUnl4RlFVTlRaMFlzVFVGQlRWQXNTVUZCU1ZNc1JVRkVia0lzUlVGRGRVSkJMRWxCUVVsVUxFbEJRVWxQTEVsQlJDOUNPMEZCUlhKQ1NTeHZRa0ZCVFN4RlFVRkZTU3hOUVVGTmEwMHNTMEZCVWl4RlFVRmxiRVlzVVVGQlVYSktMRTFCUVUwNFFpeE5RVUUzUWp0QlFVWmxMR0ZCUVhaQ08wRkJTVVE3UVVGeVFsTXNVMEZCV2pzN1FVRjNRa0VzV1VGQlNUbENMRTFCUVUxdlRpeHpRa0ZCVml4RlFVRnJRenRCUVVOb1EzQlJMR3RDUVVGUlowTXNSMEZCVWl4RFFVRlpMSE5DUVVGYUxFVkJRVzlEYzBJc1MwRkJjRU03UVVGRFFVNHNaMEpCUVUxdlRpeHpRa0ZCVGl4RFFVRTJRamxOTEV0QlFUZENPMEZCUTBRN1FVRkRSaXhQUVRkQ1JDeE5RVFpDVHp0QlFVTk1UaXhqUVVGTmJVSXNTVUZCVGl4RFFVRlhaMElzVjBGQldDeERRVUYxUWp0QlFVTnlRbTlFTEdOQlFVbHFSU3hKUVVGSmFVVXNSVUZFWVN4RlFVTlVNVWtzVFVGQlRTeFZRVVJITEVWQlExTm5SaXhOUVVGTlVDeEpRVUZKVXl4RlFVUnVRaXhGUVVOMVFrRXNTVUZCU1ZRc1NVRkJTVThzU1VGRUwwSTdRVUZGY2tKSkxHZENRVUZOTEVWQlFVVkpMRTFCUVUwc1IwRkJVaXhGUVVGaFowZ3NVVUZCVVhKS0xFMUJRVTA0UWl4TlFVRXpRanRCUVVabExGTkJRWFpDTzBGQlNVUTdRVUZEUmpzN1FVRkZSRHM3T3pzclFrRkRWMUlzUnl4RlFVRkxPMEZCUTJRc1ZVRkJTWFJDTEZGQlFWRXNTVUZCV2pzN1FVRkZRU3hWUVVGSmIwTXNVVUZCVVR0QlFVTldiVVFzV1VGQlNXcEZMRWxCUVVscFJTeEZRVVJGTEVWQlEwVXhTU3hOUVVGTkxGVkJSRklzUlVGRGIwSm5SaXhOUVVGTlVDeEpRVUZKVXl4RlFVUTVRaXhGUVVOclEwRXNTVUZCU1ZRc1NVRkJTVThzU1VGRU1VTTdRVUZGVmtrc1kwRkJUU3hGUVVGRlNTeE5RVUZOTEVkQlFWSTdRVUZHU1N4UFFVRmFPenRCUVV0QkxGVkJRVWtzUTBGQlEyWXNTVUZCU1U4c1NVRkJTaXhMUVVGaE4wSXNUVUZCVFdkRUxGZEJRVTRzUjBGQmIwSXNXVUZCYWtNc1NVRkJhVVF4UWl4SlFVRkpUeXhKUVVGS0xFdEJRV0UzUWl4TlFVRk5aMFFzVjBGQlRpeEhRVUZ2UWl4WFFVRnVSaXhMUVVGdFJ6RkNMRWxCUVVsWExFbEJRWFpITEVsQlFTdEhXQ3hKUVVGSlZ5eEpRVUZLTEVOQlFWTnRRaXhOUVVGNFNDeEpRVUZyU1RsQ0xFbEJRVWxYTEVsQlFVb3NRMEZCVTIxQ0xFMUJRVlFzUzBGQmIwSXNUMEZCZEVvc1NVRkJhVXR3UkN4TlFVRk5jVTRzVVVGQk0wc3NSVUZCY1V3N1FVRkRia3dzV1VGQlNTOU5MRkZCUVZFN1FVRkRWbnBFTEdkQ1FVRk5MRTlCUkVrN08wRkJSMVo1VWl4bFFVRkxMR0ZCUVVONlVpeEpRVUZFTEVWQlFWVTdRVUZEWWl4blFrRkJTVUVzU1VGQlNpeEZRVUZWTzBGQlExSjFSaXh2UWtGQlRVZ3NTVUZCVGl4RFFVRlhTU3hKUVVGWUxFZEJRV3RDZUVZc1NVRkJiRUk3UVVGRFJEczdRVUZGUmp0QlFVTkRiVVFzYTBKQlFVMXRRaXhKUVVGT0xFTkJRVmRuUWl4WFFVRllMRU5CUVhWQ1F5eExRVUYyUWp0QlFVTkVPMEZCVmxNc1UwRkJXanM3UVVGaFFYQkdMR2RDUVVGUmVVUXNTVUZCVWl4RFFVRmhMSGxDUVVGaUxFVkJRWGREU0N4TFFVRjRRenRCUVVOQlRpeGpRVUZOY1U0c1VVRkJUaXhEUVVGbEwwMHNTMEZCWmp0QlFVVkVMRTlCYWtKRUxFMUJhVUpQTzBGQlEweE9MR05CUVUxdFFpeEpRVUZPTEVOQlFWZG5RaXhYUVVGWUxFTkJRWFZDUXl4TFFVRjJRanRCUVVORU8wRkJSVVk3TzBGQlJVUTdPenM3T3pzN08zTkRRVXRyUWtVc1VTeEZRVUZWTzBGQlF6RkNMRmRCUVV0NVRDeHJRa0ZCVEN4SFFVRXdRbnBNTEZGQlFURkNPMEZCUTBRN08wRkJSVVE3T3pzN096czdPM05EUVV0clFrRXNVU3hGUVVGVk8wRkJRekZDTEZkQlFVc3JUQ3hyUWtGQlRDeEhRVUV3UWk5TUxGRkJRVEZDTzBGQlEwUTdPenQzUWtGd2JrSlhPMEZCUVVVc1lVRkJUeXhMUVVGTFVpeE5RVUZhTzBGQlFYRkNPenRCUVVWdVF6czdPenM3T3p0M1FrRkpaMEk3UVVGQlJTeGhRVUZQTEV0QlFVc3dReXhWUVVGYU8wRkJRWGxDT3p0QlFVVXpRenM3T3pzN096dDNRa0ZKWjBJN1FVRkJSU3hoUVVGUExFdEJRVXMzUXl4VlFVRmFPMEZCUVhsQ096czdPenRyUWtFMGJVSTVRbkZMTEU4N096czdPenM3T3pzN096czdPenM3T3pzN096czdPMEZET1hOQ1pqczdPenRCUVVOQk96czdPMEZCUTBFN096czdPenRSUVVWUlFTeFBPMUZCUVZONlNTeHJRanRSUVVGdlFucEVMR3RDT3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3UVVOdFFuSkRPenM3T3pzN1FVRkZRVHM3UVVGRlFUczdPMGxCUjAweVR5eGxMRU5CUVdkQ0xESkNPMEZCUTNCQ096czdPenRCUVUxQk96czdPMEZCU1VFc01rSkJRVmt4VHl4TFFVRmFMRVZCUVcxQ08wRkJRVUU3TzBGQlEycENMRkZCUVVsRExGRkJRVkVzU1VGQldqczdRVUZGUVN4aFFVRlRLMFlzT0VKQlFWUXNRMEZCZDBORExFZEJRWGhETEVWQlFUWkRPMEZCUXpORExGbEJRVTBzZFVKQlFYVkNRU3hIUVVGMlFpeEhRVUUyUWl4cFEwRkJia003UVVGRFJEczdRVUZGUkdwSExGVkJRVTB3U1N4TlFVRk9MRWRCUVdkQ2Vra3NUVUZCVFRCUExFOUJRVTRzUjBGQlowSXpUeXhOUVVGTk1Fa3NUVUZCZEVNc1IwRkJLME14UXl3clFrRkJLMElzVVVGQkwwSXNRMEZCTDBNN1FVRkRRV2hITEZWQlFVMDNSQ3hIUVVGT0xFZEJRV0U0UkN4TlFVRk5jVUlzU1VGQlRpeEhRVUZoZEVJc1RVRkJUVGRFTEVkQlFXaERMRWRCUVhORE5rb3NLMEpCUVN0Q0xFdEJRUzlDTEVOQlFYUkRPMEZCUTBGb1J5eFZRVUZOYlVjc1QwRkJUaXhIUVVGblFteEhMRTFCUVUxdFJ5eFJRVUZPTEVkQlFXbENjRWNzVFVGQlRXMUhMRTlCUVhaRExFZEJRV2xFU0N3clFrRkJLMElzVTBGQkwwSXNRMEZCYWtRN1FVRkRRV2hITEZWQlFVMXhSeXhSUVVGT0xFZEJRV2xDY0Vjc1RVRkJUWEZITEZOQlFVNHNSMEZCYTBKMFJ5eE5RVUZOY1Vjc1VVRkJla01zUjBGQmIwUk1MQ3RDUVVFclFpeFZRVUV2UWl4RFFVRndSRHRCUVVOQmFFY3NWVUZCVFhWSExFOUJRVTRzUjBGQlowSjBSeXhOUVVGTmRVY3NVVUZCVGl4SFFVRnBRbmhITEUxQlFVMTFSeXhQUVVGMlF5eEhRVUZwUkZBc0swSkJRU3RDTEZOQlFTOUNMRU5CUVdwRU8wRkJRMEZvUnl4VlFVRk5jVVVzVFVGQlRpeEhRVUZsY0VVc1RVRkJUWEZGTEU5QlFVNHNSMEZCWjBKMFJTeE5RVUZOY1VVc1RVRkJja01zUjBGQk9FTXlRaXdyUWtGQkswSXNVVUZCTDBJc1EwRkJPVU03UVVGRFFXaEhMRlZCUVUxNVNTeFpRVUZPTEVkQlFYRkNlRWtzVFVGQlRUSlBMR0ZCUVU0c1IwRkJjMEkxVHl4TlFVRk5lVWtzV1VGQmFrUXNSMEZCWjBWNlF5d3JRa0ZCSzBJc1kwRkJMMElzUTBGQmFFVTdPMEZCUlVFc1VVRkJTV2hITEUxQlFVMTVSeXhKUVVGV0xFVkJRV2RDZUVjc1RVRkJUWGxITEV0QlFVNHNSMEZCWXpGSExFMUJRVTE1Unl4SlFVRndRanRCUVVOb1FpeFJRVUZKZWtjc1RVRkJUV3RJTEZkQlFWWXNSVUZCZFVKcVNDeE5RVUZOYTBnc1dVRkJUaXhIUVVGeFFtNUlMRTFCUVUxclNDeFhRVUV6UWp0QlFVTjJRaXhSUVVGSmJFZ3NUVUZCVFc5SUxFbEJRVllzUlVGQlowSnVTQ3hOUVVGTmIwZ3NTMEZCVGl4SFFVRmpja2dzVFVGQlRXOUlMRWxCUVhCQ08wRkJRMmhDTEZGQlFVbHdTQ3hOUVVGTmEwUXNVMEZCVml4RlFVRnhRbXBFTEUxQlFVMXhTQ3hWUVVGT0xFZEJRVzFDZEVnc1RVRkJUV3RFTEZOQlFYcENPMEZCUTNKQ0xGRkJRVWxzUkN4TlFVRk5kVWdzWlVGQlZpeEZRVUV5UW5SSUxFMUJRVTExU0N4blFrRkJUaXhIUVVGNVFuaElMRTFCUVUxMVNDeGxRVUV2UWp0QlFVTXpRaXhSUVVGSmRrZ3NUVUZCVFhsSUxHbENRVUZXTEVWQlFUWkNlRWdzVFVGQlRYbElMR3RDUVVGT0xFZEJRVEpDTVVnc1RVRkJUWGxJTEdsQ1FVRnFRenM3UVVGRk4wSXNVVUZCU1hwSUxFMUJRVTFsTEVsQlFWWXNSVUZCWjBJN1FVRkRaR1FzV1VGQlRVa3NVVUZCVGl4SFFVRnBRaXd3UWtGQlpVd3NUVUZCVFdVc1NVRkJja0lzUTBGQmFrSTdRVUZEUkN4TFFVWkVMRTFCUlU4N1FVRkRUR1FzV1VGQlRVa3NVVUZCVGl4SFFVRnBRaXd3UWtGQlpTeEZRVUZtTEVOQlFXcENPMEZCUTBRN08wRkJSVVJ3UkN4WlFVRlJaME1zUjBGQlVpeERRVUZaTEhGRFFVRmFMRVZCUVcxRVowSXNUVUZCVFVrc1VVRkJla1E3TzBGQlJVRktMRlZCUVUxdFFpeEpRVUZPTEVkQlFXRnVRaXhOUVVGTk1rOHNZVUZCVGl4RFFVRnZRbmhPTEVsQlFXcERPMEZCUTBGdVFpeFZRVUZOT0VJc1RVRkJUaXhIUVVGbE9VSXNUVUZCVFRKUExHRkJRVTRzUTBGQmIwSTNUU3hOUVVGdVF6czdRVUZGUVRsQ0xGVkJRVTFSTEd0Q1FVRk9PenRCUVVWQlVpeFZRVUZOV1N4VFFVRk9MRWRCUVd0Q1lpeExRVUZzUWpzN1FVRkZRVHRCUVVOQkxGZEJRVTlETEUxQlFVMVpMRk5CUVU0c1EwRkJaMEkwU0N4WlFVRjJRanRCUVVWRU96czdPM2xEUVVWdlFqdEJRVU51UWl4VlFVRkplRWtzVVVGQlVTeEpRVUZhT3p0QlFVVkJPMEZCUTBFc1ZVRkJTVUVzVFVGQlRYRkhMRk5CUVU0c1MwRkJiMEp5Unl4TlFVRk5PRUlzVFVGQk9VSXNSVUZCYzBNN1FVRkRjRU01UWl4alFVRk5ORThzVTBGQlRpeEhRVUZyUWpWUExFMUJRVTF0UWl4SlFVRk9MRU5CUVZkRExGZEJRVmdzUTBGQmRVSndRaXhOUVVGTmNVY3NVMEZCTjBJc1JVRkJkME1zVlVGQlF5OUZMRWRCUVVRc1JVRkJVenRCUVVOcVJTeGpRVUZKUVN4SlFVRkpla1VzU1VGQlNpeExRVUZoTEZWQlFXSXNTVUZCTWtKNVJTeEpRVUZKYVVVc1JVRkJTaXhMUVVGWGRrWXNUVUZCVFRaUExFMUJRV2hFTEVWQlFYZEVPMEZCUTNSRU4xSXNiMEpCUVZGblF5eEhRVUZTTEVOQlFWa3NOa0pCUVZvc1JVRkJNa056UXl4SFFVRXpRenRCUVVOQmRFSXNhMEpCUVUwMFJDeFhRVUZPTEVOQlFXdENkRU1zUjBGQmJFSTdRVUZEUkR0QlFVTkdMRk5CVEdsQ0xFTkJRV3hDTzBGQlRVUTdRVUZEUmpzN08zZERRVVZ0UWp0QlFVTnNRaXhWUVVGSmRFSXNVVUZCVVN4SlFVRmFPenRCUVVWQkxGVkJRVWxCTEUxQlFVMDBUeXhUUVVGV0xFVkJRWEZDTzBGQlEyNUNOVThzWTBGQlRUUlBMRk5CUVU0c1EwRkJaMEp3VGl4TlFVRm9RanRCUVVORU8wRkJRMFk3TzBGQlJVUTdPenM3T3pzNFFrRkhVenRCUVVOUUxGVkJRVWw0UWl4UlFVRlJMRWxCUVZvN08wRkJSMEZCTEZsQlFVMHdRaXhwUWtGQlRqczdRVUZGUVR0QlFVTkVPenRCUVVWRU96czdPenM3T3pzN1FVRm5RMEU3T3pzN05rSkJTVk5aTEZFc1JVRkJWVHRCUVVOcVFpeFhRVUZMYkVNc1VVRkJUQ3hEUVVGalF5eFBRVUZrTEVOQlFYTkNMRlZCUVVORExFdEJRVVFzUlVGQlZ6dEJRVU12UW5SRUxHZENRVUZSWjBNc1IwRkJVaXhEUVVGWkxHbERRVUZhTEVWQlFTdERjMElzUzBGQkwwTTdRVUZEUVdkRExHbENRVUZUYUVNc1MwRkJWRHRCUVVORUxFOUJTRVE3UVVGSlJEczdRVUZGUkRzN096czdPenNyUWtGSlYyZERMRkVzUlVGQlZUdEJRVU51UWl4WFFVRkxiME1zYTBKQlFVd3NSMEZCTUVKd1F5eFJRVUV4UWp0QlFVTkVPenRCUVVWRU96czdPMmREUVVOWmFFSXNSeXhGUVVGTE8wRkJRMllzVlVGQlNYUkNMRkZCUVZFc1NVRkJXanM3UVVGRlFTeFZRVUZKVFN4UlFVRlJPMEZCUTFaNlJDeGpRVUZOZVVVc1NVRkJTWHBGTEVsQlJFRTdRVUZGVmxnc1lVRkJTMjlHTEVsQlFVbFhMRWxCUVVvc1EwRkJVMjlJTEUxQlJrbzdRVUZIVm1oSUxHTkJRVTFtTEVsQlFVbFhMRWxCUVVvc1EwRkJVMGs3UVVGSVRDeFBRVUZhT3p0QlFVMUJMRlZCUVVseVF5eE5RVUZOTUVVc2EwSkJRVllzUlVGQk9FSTdRVUZETlVJeFJTeGpRVUZOTUVVc2EwSkJRVTRzUTBGQmVVSndSU3hMUVVGNlFqdEJRVU5FTzBGQlEwWTdPenQzUWtFMVJHTTdRVUZCUlN4aFFVRlBMRXRCUVV0TkxGTkJRVm83UVVGQmQwSTdPMEZCUlhwRE96czdPenM3TzNkQ1FVbGpPMEZCUVVVc1lVRkJUeXhMUVVGTGEwY3NVVUZCV2p0QlFVRjFRanM3UVVGRmRrTTdPenM3T3pzN2QwSkJTVmM3UVVGQlJTeGhRVUZQTEV0QlFVc3hSeXhSUVVGTUxFTkJRV05WTEVsQlFYSkNPMEZCUVRSQ096dEJRVVY2UXpzN096czdPenM3YzBKQlMyRXZSQ3hSTEVWQlFWVTdRVUZCUlN4WFFVRkxLMUlzVTBGQlRDeEhRVUZwUWk5U0xGRkJRV3BDTzBGQlFUUkNPenRCUVVWeVJEczdPenM3TzNkQ1FVdGxPMEZCUVVVc1lVRkJUeXhMUVVGTEsxSXNVMEZCV2p0QlFVRjNRanM3TzB0QmJrb3pRenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN2EwSkJlVXhsVEN4bE96czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3UVVONlRHWTdPenM3T3pzN096czdPenM3T3pzN096czdPenM3TzBGQmRVSkJPenM3T3pzN096czdPenRKUVZkTlRTeGxPMEZCUTBvN096czdPenRCUVU5QkxESkNRVUZaT1VNc1MwRkJXaXhGUVVGdFFpOVFMRWRCUVc1Q0xFVkJRWGRDWjFFc1IwRkJlRUlzUlVGQk5rSTFSQ3hSUVVFM1FpeEZRVUYxUXp0QlFVRkJPenRCUVVOeVF5eFJRVUZKZEVrc1VVRkJVU3hKUVVGYU96dEJRVVZCUVN4VlFVRk5PRUlzVFVGQlRpeEhRVUZsYlVzc1MwRkJaanRCUVVOQmFrMHNWVUZCVFhGQ0xFbEJRVTRzUjBGQllXNUdMRWRCUVdJN1FVRkRRVGhFTEZWQlFVMXRRaXhKUVVGT0xFZEJRV0VyU3l4SFFVRmlPMEZCUTBGc1RTeFZRVUZOWjFBc1UwRkJUaXhIUVVGclFqRkhMRkZCUVd4Q096dEJRVVZCZEVrc1ZVRkJUV2xRTEZGQlFVNHNSMEZCYVVJc1JVRkJha0k3UVVGRFFXcFFMRlZCUVUxUkxHdENRVUZPTzBGQlEwUTdPenM3ZVVOQlJXOUNPMEZCUTI1Q0xGVkJRVWxTTEZGQlFWRXNTVUZCV2pzN1FVRkZRVUVzV1VGQlRUUlBMRk5CUVU0c1IwRkJhMEkxVHl4TlFVRk5iVUlzU1VGQlRpeERRVUZYUXl4WFFVRllMRU5CUVhWQ2NFSXNUVUZCVFhGQ0xFbEJRVGRDTEVWQlFXMURMRlZCUVVORExFZEJRVVFzUlVGQlV6dEJRVU0xUkhSRkxHZENRVUZSWjBNc1IwRkJVaXhEUVVGWkxIRkNRVUZ4UW1kQ0xFMUJRVTF4UWl4SlFVRXpRaXhIUVVGclF5eFJRVUU1UXl4RlFVRjNSRU1zUjBGQmVFUTdRVUZEUVhSQ0xHTkJRVTFwVUN4UlFVRk9MRU5CUVdWd1VTeEpRVUZtTEVOQlFXOUNlVU1zUjBGQmNFSTdRVUZEUkN4UFFVaHBRaXhEUVVGc1FqczdRVUZMUVRzN096czdPenM3T3pzN096czdPMEZCWjBKRU96czdkME5CUlcxQ08wRkJRMnhDTEZWQlFVbDBRaXhSUVVGUkxFbEJRVm83TzBGQlJVRkJMRmxCUVUwMFR5eFRRVUZPTEVOQlFXZENjRTRzVFVGQmFFSTdPMEZCUlVFN096dEJRVWRFT3pzN01FSkJTVXQ1UXl4UkxFVkJRVlU3UVVGRFpDeFZRVUZKYWtVc1VVRkJVU3hKUVVGYU8wRkJRMEZCTEZsQlFVMXBVQ3hSUVVGT0xFTkJRV1YwVVN4UFFVRm1MRU5CUVhWQ0xGVkJRVU41VFN4TlFVRkVMRVZCUVZrN1FVRkRha051U0N4cFFrRkJVekZETEdGQlFWUXNRMEZCZFVJd1F5eFRRVUZUTjBRc1VVRkJhRU1zUlVGQk1FTm5UQ3hOUVVFeFF6dEJRVU5FTEU5QlJrUTdRVUZIUkRzN08zZENRVkJqTzBGQlFVVXNZVUZCVHl4TFFVRkxORVFzVTBGQldqdEJRVUYzUWpzN096czdhMEpCVlRWQ1JDeGxPenM3T3pzN096czdPMEZEY0VkbUxHdENRVUZyUWl4NVJEczdPenM3T3pzN096dEJRMEZzUWp0QlFVTkJMSE5FT3pzN096czdPMEZEUkVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZPenM3T3pzN08wRkRTa0U3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxHdERRVUZyUXl4VlFVRlZMRVZCUVVVN1FVRkRPVU1zYlVKQlFXMUNMSE5EUVVGelF6dEJRVU42UkN4RFFVRkRMRzlEUVVGdlF6dEJRVU55UXp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGdzUTBGQlF5eFhPenM3T3pzN096dEJRMmhEUkR0QlFVTkJPenRCUVVWQkxEQkRRVUV3UXl4cFEwRkJiME1zUlRzN096czdPenRCUTBnNVJUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeERRVUZETEVVaUxDSm1hV3hsSWpvaVUzbHVZMmhsY2k1cWN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaWhtZFc1amRHbHZiaUIzWldKd1lXTnJWVzVwZG1WeWMyRnNUVzlrZFd4bFJHVm1hVzVwZEdsdmJpaHliMjkwTENCbVlXTjBiM0o1S1NCN1hHNWNkR2xtS0hSNWNHVnZaaUJsZUhCdmNuUnpJRDA5UFNBbmIySnFaV04wSnlBbUppQjBlWEJsYjJZZ2JXOWtkV3hsSUQwOVBTQW5iMkpxWldOMEp5bGNibHgwWEhSdGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaaFkzUnZjbmtvS1R0Y2JseDBaV3h6WlNCcFppaDBlWEJsYjJZZ1pHVm1hVzVsSUQwOVBTQW5ablZ1WTNScGIyNG5JQ1ltSUdSbFptbHVaUzVoYldRcFhHNWNkRngwWkdWbWFXNWxLRndpVTNsdVkyaGxjbHdpTENCYlhTd2dabUZqZEc5eWVTazdYRzVjZEdWc2MyVWdhV1lvZEhsd1pXOW1JR1Y0Y0c5eWRITWdQVDA5SUNkdlltcGxZM1FuS1Z4dVhIUmNkR1Y0Y0c5eWRITmJYQ0pUZVc1amFHVnlYQ0pkSUQwZ1ptRmpkRzl5ZVNncE8xeHVYSFJsYkhObFhHNWNkRngwY205dmRGdGNJbHdpWFNBOUlISnZiM1JiWENKY0lsMGdmSHdnZTMwc0lISnZiM1JiWENKY0lsMWJYQ0pUZVc1amFHVnlYQ0pkSUQwZ1ptRmpkRzl5ZVNncE8xeHVmU2tvZEdocGN5d2dablZ1WTNScGIyNG9LU0I3WEc1eVpYUjFjbTRnWEc1Y2JseHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSWdMeTljYmk4dklIZGxZbkJoWTJzdmRXNXBkbVZ5YzJGc1RXOWtkV3hsUkdWbWFXNXBkR2x2YmlJc0lpQmNkQzh2SUZSb1pTQnRiMlIxYkdVZ1kyRmphR1ZjYmlCY2RIWmhjaUJwYm5OMFlXeHNaV1JOYjJSMWJHVnpJRDBnZTMwN1hHNWNiaUJjZEM4dklGUm9aU0J5WlhGMWFYSmxJR1oxYm1OMGFXOXVYRzRnWEhSbWRXNWpkR2x2YmlCZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZktHMXZaSFZzWlVsa0tTQjdYRzVjYmlCY2RGeDBMeThnUTJobFkyc2dhV1lnYlc5a2RXeGxJR2x6SUdsdUlHTmhZMmhsWEc0Z1hIUmNkR2xtS0dsdWMzUmhiR3hsWkUxdlpIVnNaWE5iYlc5a2RXeGxTV1JkS1NCN1hHNGdYSFJjZEZ4MGNtVjBkWEp1SUdsdWMzUmhiR3hsWkUxdlpIVnNaWE5iYlc5a2RXeGxTV1JkTG1WNGNHOXlkSE03WEc0Z1hIUmNkSDFjYmlCY2RGeDBMeThnUTNKbFlYUmxJR0VnYm1WM0lHMXZaSFZzWlNBb1lXNWtJSEIxZENCcGRDQnBiblJ2SUhSb1pTQmpZV05vWlNsY2JpQmNkRngwZG1GeUlHMXZaSFZzWlNBOUlHbHVjM1JoYkd4bFpFMXZaSFZzWlhOYmJXOWtkV3hsU1dSZElEMGdlMXh1SUZ4MFhIUmNkR2s2SUcxdlpIVnNaVWxrTEZ4dUlGeDBYSFJjZEd3NklHWmhiSE5sTEZ4dUlGeDBYSFJjZEdWNGNHOXlkSE02SUh0OVhHNGdYSFJjZEgwN1hHNWNiaUJjZEZ4MEx5OGdSWGhsWTNWMFpTQjBhR1VnYlc5a2RXeGxJR1oxYm1OMGFXOXVYRzRnWEhSY2RHMXZaSFZzWlhOYmJXOWtkV3hsU1dSZExtTmhiR3dvYlc5a2RXeGxMbVY0Y0c5eWRITXNJRzF2WkhWc1pTd2diVzlrZFd4bExtVjRjRzl5ZEhNc0lGOWZkMlZpY0dGamExOXlaWEYxYVhKbFgxOHBPMXh1WEc0Z1hIUmNkQzh2SUVac1lXY2dkR2hsSUcxdlpIVnNaU0JoY3lCc2IyRmtaV1JjYmlCY2RGeDBiVzlrZFd4bExtd2dQU0IwY25WbE8xeHVYRzRnWEhSY2RDOHZJRkpsZEhWeWJpQjBhR1VnWlhod2IzSjBjeUJ2WmlCMGFHVWdiVzlrZFd4bFhHNGdYSFJjZEhKbGRIVnliaUJ0YjJSMWJHVXVaWGh3YjNKMGN6dGNiaUJjZEgxY2JseHVYRzRnWEhRdkx5QmxlSEJ2YzJVZ2RHaGxJRzF2WkhWc1pYTWdiMkpxWldOMElDaGZYM2RsWW5CaFkydGZiVzlrZFd4bGMxOWZLVnh1SUZ4MFgxOTNaV0p3WVdOclgzSmxjWFZwY21WZlh5NXRJRDBnYlc5a2RXeGxjenRjYmx4dUlGeDBMeThnWlhod2IzTmxJSFJvWlNCdGIyUjFiR1VnWTJGamFHVmNiaUJjZEY5ZmQyVmljR0ZqYTE5eVpYRjFhWEpsWDE4dVl5QTlJR2x1YzNSaGJHeGxaRTF2WkhWc1pYTTdYRzVjYmlCY2RDOHZJR2xrWlc1MGFYUjVJR1oxYm1OMGFXOXVJR1p2Y2lCallXeHNhVzVuSUdoaGNtMXZibmtnYVcxd2IzSjBjeUIzYVhSb0lIUm9aU0JqYjNKeVpXTjBJR052Ym5SbGVIUmNiaUJjZEY5ZmQyVmljR0ZqYTE5eVpYRjFhWEpsWDE4dWFTQTlJR1oxYm1OMGFXOXVLSFpoYkhWbEtTQjdJSEpsZEhWeWJpQjJZV3gxWlRzZ2ZUdGNibHh1SUZ4MEx5OGdaR1ZtYVc1bElHZGxkSFJsY2lCbWRXNWpkR2x2YmlCbWIzSWdhR0Z5Ylc5dWVTQmxlSEJ2Y25SelhHNGdYSFJmWDNkbFluQmhZMnRmY21WeGRXbHlaVjlmTG1RZ1BTQm1kVzVqZEdsdmJpaGxlSEJ2Y25SekxDQnVZVzFsTENCblpYUjBaWElwSUh0Y2JpQmNkRngwYVdZb0lWOWZkMlZpY0dGamExOXlaWEYxYVhKbFgxOHVieWhsZUhCdmNuUnpMQ0J1WVcxbEtTa2dlMXh1SUZ4MFhIUmNkRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNobGVIQnZjblJ6TENCdVlXMWxMQ0I3WEc0Z1hIUmNkRngwWEhSamIyNW1hV2QxY21GaWJHVTZJR1poYkhObExGeHVJRngwWEhSY2RGeDBaVzUxYldWeVlXSnNaVG9nZEhKMVpTeGNiaUJjZEZ4MFhIUmNkR2RsZERvZ1oyVjBkR1Z5WEc0Z1hIUmNkRngwZlNrN1hHNGdYSFJjZEgxY2JpQmNkSDA3WEc1Y2JpQmNkQzh2SUdkbGRFUmxabUYxYkhSRmVIQnZjblFnWm5WdVkzUnBiMjRnWm05eUlHTnZiWEJoZEdsaWFXeHBkSGtnZDJsMGFDQnViMjR0YUdGeWJXOXVlU0J0YjJSMWJHVnpYRzRnWEhSZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZkxtNGdQU0JtZFc1amRHbHZiaWh0YjJSMWJHVXBJSHRjYmlCY2RGeDBkbUZ5SUdkbGRIUmxjaUE5SUcxdlpIVnNaU0FtSmlCdGIyUjFiR1V1WDE5bGMwMXZaSFZzWlNBL1hHNGdYSFJjZEZ4MFpuVnVZM1JwYjI0Z1oyVjBSR1ZtWVhWc2RDZ3BJSHNnY21WMGRYSnVJRzF2WkhWc1pWc25aR1ZtWVhWc2RDZGRPeUI5SURwY2JpQmNkRngwWEhSbWRXNWpkR2x2YmlCblpYUk5iMlIxYkdWRmVIQnZjblJ6S0NrZ2V5QnlaWFIxY200Z2JXOWtkV3hsT3lCOU8xeHVJRngwWEhSZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZkxtUW9aMlYwZEdWeUxDQW5ZU2NzSUdkbGRIUmxjaWs3WEc0Z1hIUmNkSEpsZEhWeWJpQm5aWFIwWlhJN1hHNGdYSFI5TzF4dVhHNGdYSFF2THlCUFltcGxZM1F1Y0hKdmRHOTBlWEJsTG1oaGMwOTNibEJ5YjNCbGNuUjVMbU5oYkd4Y2JpQmNkRjlmZDJWaWNHRmphMTl5WlhGMWFYSmxYMTh1YnlBOUlHWjFibU4wYVc5dUtHOWlhbVZqZEN3Z2NISnZjR1Z5ZEhrcElIc2djbVYwZFhKdUlFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVdWFHRnpUM2R1VUhKdmNHVnlkSGt1WTJGc2JDaHZZbXBsWTNRc0lIQnliM0JsY25SNUtUc2dmVHRjYmx4dUlGeDBMeThnWDE5M1pXSndZV05yWDNCMVlteHBZMTl3WVhSb1gxOWNiaUJjZEY5ZmQyVmljR0ZqYTE5eVpYRjFhWEpsWDE4dWNDQTlJRndpWENJN1hHNWNiaUJjZEM4dklFeHZZV1FnWlc1MGNua2diVzlrZFd4bElHRnVaQ0J5WlhSMWNtNGdaWGh3YjNKMGMxeHVJRngwY21WMGRYSnVJRjlmZDJWaWNHRmphMTl5WlhGMWFYSmxYMThvWDE5M1pXSndZV05yWDNKbGNYVnBjbVZmWHk1eklEMGdNVFF5S1R0Y2JseHVYRzVjYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTSUM4dlhHNHZMeUIzWldKd1lXTnJMMkp2YjNSemRISmhjQ0JqTWpSaU56QmhNVGd6WWpkaU56TTBNelZsTUNJc0luWmhjaUJqYjNKbElEMGdiVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQjdkbVZ5YzJsdmJqb2dKekl1TkM0d0ozMDdYRzVwWmloMGVYQmxiMllnWDE5bElEMDlJQ2R1ZFcxaVpYSW5LVjlmWlNBOUlHTnZjbVU3SUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFd4cGJtVWdibTh0ZFc1a1pXWmNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDJOdmNtVXVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJREJjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SURRZ05TQTJJRGNnT0NBNUlpd2lMeThnYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNwc2IybHliMk5yTDJOdmNtVXRhbk12YVhOemRXVnpMemcySTJsemMzVmxZMjl0YldWdWRDMHhNVFUzTlRrd01qaGNiblpoY2lCbmJHOWlZV3dnUFNCdGIyUjFiR1V1Wlhod2IzSjBjeUE5SUhSNWNHVnZaaUIzYVc1a2IzY2dJVDBnSjNWdVpHVm1hVzVsWkNjZ0ppWWdkMmx1Wkc5M0xrMWhkR2dnUFQwZ1RXRjBhRnh1SUNBL0lIZHBibVJ2ZHlBNklIUjVjR1Z2WmlCelpXeG1JQ0U5SUNkMWJtUmxabWx1WldRbklDWW1JSE5sYkdZdVRXRjBhQ0E5UFNCTllYUm9JRDhnYzJWc1ppQTZJRVoxYm1OMGFXOXVLQ2R5WlhSMWNtNGdkR2hwY3ljcEtDazdYRzVwWmloMGVYQmxiMllnWDE5bklEMDlJQ2R1ZFcxaVpYSW5LVjlmWnlBOUlHZHNiMkpoYkRzZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJHbHVaU0J1YnkxMWJtUmxabHh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZloyeHZZbUZzTG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBeFhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015QTBJRFVnTmlBM0lEZ2dPU0lzSWk4dklGUm9ZVzVySjNNZ1NVVTRJR1p2Y2lCb2FYTWdablZ1Ym5rZ1pHVm1hVzVsVUhKdmNHVnlkSGxjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnSVhKbGNYVnBjbVVvSnk0dlgyWmhhV3h6Snlrb1puVnVZM1JwYjI0b0tYdGNiaUFnY21WMGRYSnVJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoN2ZTd2dKMkVuTENCN1oyVjBPaUJtZFc1amRHbHZiaWdwZXlCeVpYUjFjbTRnTnpzZ2ZYMHBMbUVnSVQwZ056dGNibjBwTzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZaR1Z6WTNKcGNIUnZjbk11YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURKY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0EySURjZ09DQTVJaXdpZG1GeUlITjBiM0psSUNBZ0lDQWdQU0J5WlhGMWFYSmxLQ2N1TDE5emFHRnlaV1FuS1NnbmQydHpKeWxjYmlBZ0xDQjFhV1FnSUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmRXbGtKeWxjYmlBZ0xDQlRlVzFpYjJ3Z0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZloyeHZZbUZzSnlrdVUzbHRZbTlzWEc0Z0lDd2dWVk5GWDFOWlRVSlBUQ0E5SUhSNWNHVnZaaUJUZVcxaWIyd2dQVDBnSjJaMWJtTjBhVzl1Snp0Y2JseHVkbUZ5SUNSbGVIQnZjblJ6SUQwZ2JXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlodVlXMWxLWHRjYmlBZ2NtVjBkWEp1SUhOMGIzSmxXMjVoYldWZElIeDhJQ2h6ZEc5eVpWdHVZVzFsWFNBOVhHNGdJQ0FnVlZORlgxTlpUVUpQVENBbUppQlRlVzFpYjJ4YmJtRnRaVjBnZkh3Z0tGVlRSVjlUV1UxQ1Qwd2dQeUJUZVcxaWIyd2dPaUIxYVdRcEtDZFRlVzFpYjJ3dUp5QXJJRzVoYldVcEtUdGNibjA3WEc1Y2JpUmxlSEJ2Y25SekxuTjBiM0psSUQwZ2MzUnZjbVU3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOTNhM011YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SUROY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0lzSW5aaGNpQmhiazlpYW1WamRDQWdJQ0FnSUNBOUlISmxjWFZwY21Vb0p5NHZYMkZ1TFc5aWFtVmpkQ2NwWEc0Z0lDd2dTVVU0WDBSUFRWOUVSVVpKVGtVZ1BTQnlaWEYxYVhKbEtDY3VMMTlwWlRndFpHOXRMV1JsWm1sdVpTY3BYRzRnSUN3Z2RHOVFjbWx0YVhScGRtVWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOTBieTF3Y21sdGFYUnBkbVVuS1Z4dUlDQXNJR1JRSUNBZ0lDQWdJQ0FnSUNBZ0lEMGdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1TzF4dVhHNWxlSEJ2Y25SekxtWWdQU0J5WlhGMWFYSmxLQ2N1TDE5a1pYTmpjbWx3ZEc5eWN5Y3BJRDhnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUlEb2dablZ1WTNScGIyNGdaR1ZtYVc1bFVISnZjR1Z5ZEhrb1R5d2dVQ3dnUVhSMGNtbGlkWFJsY3lsN1hHNGdJR0Z1VDJKcVpXTjBLRThwTzF4dUlDQlFJRDBnZEc5UWNtbHRhWFJwZG1Vb1VDd2dkSEoxWlNrN1hHNGdJR0Z1VDJKcVpXTjBLRUYwZEhKcFluVjBaWE1wTzF4dUlDQnBaaWhKUlRoZlJFOU5YMFJGUmtsT1JTbDBjbmtnZTF4dUlDQWdJSEpsZEhWeWJpQmtVQ2hQTENCUUxDQkJkSFJ5YVdKMWRHVnpLVHRjYmlBZ2ZTQmpZWFJqYUNobEtYc2dMeW9nWlcxd2RIa2dLaThnZlZ4dUlDQnBaaWduWjJWMEp5QnBiaUJCZEhSeWFXSjFkR1Z6SUh4OElDZHpaWFFuSUdsdUlFRjBkSEpwWW5WMFpYTXBkR2h5YjNjZ1ZIbHdaVVZ5Y205eUtDZEJZMk5sYzNOdmNuTWdibTkwSUhOMWNIQnZjblJsWkNFbktUdGNiaUFnYVdZb0ozWmhiSFZsSnlCcGJpQkJkSFJ5YVdKMWRHVnpLVTliVUYwZ1BTQkJkSFJ5YVdKMWRHVnpMblpoYkhWbE8xeHVJQ0J5WlhSMWNtNGdUenRjYm4wN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTl2WW1wbFkzUXRaSEF1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURSY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0EySURjZ09DQTVJaXdpZG1GeUlHbHpUMkpxWldOMElEMGdjbVZ4ZFdseVpTZ25MaTlmYVhNdGIySnFaV04wSnlrN1hHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUtHbDBLWHRjYmlBZ2FXWW9JV2x6VDJKcVpXTjBLR2wwS1NsMGFISnZkeUJVZVhCbFJYSnliM0lvYVhRZ0t5QW5JR2x6SUc1dmRDQmhiaUJ2WW1wbFkzUWhKeWs3WEc0Z0lISmxkSFZ5YmlCcGREdGNibjA3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOWhiaTF2WW1wbFkzUXVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJRFZjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SURRZ05TQTJJRGNnT0NBNUlpd2liVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpaHBkQ2w3WEc0Z0lISmxkSFZ5YmlCMGVYQmxiMllnYVhRZ1BUMDlJQ2R2WW1wbFkzUW5JRDhnYVhRZ0lUMDlJRzUxYkd3Z09pQjBlWEJsYjJZZ2FYUWdQVDA5SUNkbWRXNWpkR2x2YmljN1hHNTlPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmFYTXRiMkpxWldOMExtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQTJYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVZ05pQTNJRGdnT1NJc0luWmhjaUJrVUNBZ0lDQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZiMkpxWldOMExXUndKeWxjYmlBZ0xDQmpjbVZoZEdWRVpYTmpJRDBnY21WeGRXbHlaU2duTGk5ZmNISnZjR1Z5ZEhrdFpHVnpZeWNwTzF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCeVpYRjFhWEpsS0NjdUwxOWtaWE5qY21sd2RHOXljeWNwSUQ4Z1puVnVZM1JwYjI0b2IySnFaV04wTENCclpYa3NJSFpoYkhWbEtYdGNiaUFnY21WMGRYSnVJR1JRTG1Zb2IySnFaV04wTENCclpYa3NJR055WldGMFpVUmxjMk1vTVN3Z2RtRnNkV1VwS1R0Y2JuMGdPaUJtZFc1amRHbHZiaWh2WW1wbFkzUXNJR3RsZVN3Z2RtRnNkV1VwZTF4dUlDQnZZbXBsWTNSYmEyVjVYU0E5SUhaaGJIVmxPMXh1SUNCeVpYUjFjbTRnYjJKcVpXTjBPMXh1ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMmhwWkdVdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlEZGNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SURFZ01pQXpJRFFnTlNBMklEY2dPQ0E1SWl3aVhDSjFjMlVnYzNSeWFXTjBYQ0k3WEc1Y2JtVjRjRzl5ZEhNdVgxOWxjMDF2WkhWc1pTQTlJSFJ5ZFdVN1hHNWNibVY0Y0c5eWRITXVaR1ZtWVhWc2RDQTlJR1oxYm1OMGFXOXVJQ2hwYm5OMFlXNWpaU3dnUTI5dWMzUnlkV04wYjNJcElIdGNiaUFnYVdZZ0tDRW9hVzV6ZEdGdVkyVWdhVzV6ZEdGdVkyVnZaaUJEYjI1emRISjFZM1J2Y2lrcElIdGNiaUFnSUNCMGFISnZkeUJ1WlhjZ1ZIbHdaVVZ5Y205eUtGd2lRMkZ1Ym05MElHTmhiR3dnWVNCamJHRnpjeUJoY3lCaElHWjFibU4wYVc5dVhDSXBPMXh1SUNCOVhHNTlPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWlZV0psYkMxeWRXNTBhVzFsTDJobGJIQmxjbk12WTJ4aGMzTkRZV3hzUTJobFkyc3Vhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJRGhjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SURRZ05TQTJJRGNnT0NBNUlERXdJaXdpZG1GeUlHZHNiMkpoYkNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJkc2IySmhiQ2NwWEc0Z0lDd2dZMjl5WlNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZlkyOXlaU2NwWEc0Z0lDd2dZM1I0SUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZlkzUjRKeWxjYmlBZ0xDQm9hV1JsSUNBZ0lDQWdQU0J5WlhGMWFYSmxLQ2N1TDE5b2FXUmxKeWxjYmlBZ0xDQlFVazlVVDFSWlVFVWdQU0FuY0hKdmRHOTBlWEJsSnp0Y2JseHVkbUZ5SUNSbGVIQnZjblFnUFNCbWRXNWpkR2x2YmloMGVYQmxMQ0J1WVcxbExDQnpiM1Z5WTJVcGUxeHVJQ0IyWVhJZ1NWTmZSazlTUTBWRUlEMGdkSGx3WlNBbUlDUmxlSEJ2Y25RdVJseHVJQ0FnSUN3Z1NWTmZSMHhQUWtGTUlEMGdkSGx3WlNBbUlDUmxlSEJ2Y25RdVIxeHVJQ0FnSUN3Z1NWTmZVMVJCVkVsRElEMGdkSGx3WlNBbUlDUmxlSEJ2Y25RdVUxeHVJQ0FnSUN3Z1NWTmZVRkpQVkU4Z0lEMGdkSGx3WlNBbUlDUmxlSEJ2Y25RdVVGeHVJQ0FnSUN3Z1NWTmZRa2xPUkNBZ0lEMGdkSGx3WlNBbUlDUmxlSEJ2Y25RdVFseHVJQ0FnSUN3Z1NWTmZWMUpCVUNBZ0lEMGdkSGx3WlNBbUlDUmxlSEJ2Y25RdVYxeHVJQ0FnSUN3Z1pYaHdiM0owY3lBZ0lEMGdTVk5mUjB4UFFrRk1JRDhnWTI5eVpTQTZJR052Y21WYmJtRnRaVjBnZkh3Z0tHTnZjbVZiYm1GdFpWMGdQU0I3ZlNsY2JpQWdJQ0FzSUdWNGNGQnliM1J2SUNBOUlHVjRjRzl5ZEhOYlVGSlBWRTlVV1ZCRlhWeHVJQ0FnSUN3Z2RHRnlaMlYwSUNBZ0lEMGdTVk5mUjB4UFFrRk1JRDhnWjJ4dlltRnNJRG9nU1ZOZlUxUkJWRWxESUQ4Z1oyeHZZbUZzVzI1aGJXVmRJRG9nS0dkc2IySmhiRnR1WVcxbFhTQjhmQ0I3ZlNsYlVGSlBWRTlVV1ZCRlhWeHVJQ0FnSUN3Z2EyVjVMQ0J2ZDI0c0lHOTFkRHRjYmlBZ2FXWW9TVk5mUjB4UFFrRk1LWE52ZFhKalpTQTlJRzVoYldVN1hHNGdJR1p2Y2loclpYa2dhVzRnYzI5MWNtTmxLWHRjYmlBZ0lDQXZMeUJqYjI1MFlXbHVjeUJwYmlCdVlYUnBkbVZjYmlBZ0lDQnZkMjRnUFNBaFNWTmZSazlTUTBWRUlDWW1JSFJoY21kbGRDQW1KaUIwWVhKblpYUmJhMlY1WFNBaFBUMGdkVzVrWldacGJtVmtPMXh1SUNBZ0lHbG1LRzkzYmlBbUppQnJaWGtnYVc0Z1pYaHdiM0owY3lsamIyNTBhVzUxWlR0Y2JpQWdJQ0F2THlCbGVIQnZjblFnYm1GMGFYWmxJRzl5SUhCaGMzTmxaRnh1SUNBZ0lHOTFkQ0E5SUc5M2JpQS9JSFJoY21kbGRGdHJaWGxkSURvZ2MyOTFjbU5sVzJ0bGVWMDdYRzRnSUNBZ0x5OGdjSEpsZG1WdWRDQm5iRzlpWVd3Z2NHOXNiSFYwYVc5dUlHWnZjaUJ1WVcxbGMzQmhZMlZ6WEc0Z0lDQWdaWGh3YjNKMGMxdHJaWGxkSUQwZ1NWTmZSMHhQUWtGTUlDWW1JSFI1Y0dWdlppQjBZWEpuWlhSYmEyVjVYU0FoUFNBblpuVnVZM1JwYjI0bklEOGdjMjkxY21ObFcydGxlVjFjYmlBZ0lDQXZMeUJpYVc1a0lIUnBiV1Z5Y3lCMGJ5Qm5iRzlpWVd3Z1ptOXlJR05oYkd3Z1puSnZiU0JsZUhCdmNuUWdZMjl1ZEdWNGRGeHVJQ0FnSURvZ1NWTmZRa2xPUkNBbUppQnZkMjRnUHlCamRIZ29iM1YwTENCbmJHOWlZV3dwWEc0Z0lDQWdMeThnZDNKaGNDQm5iRzlpWVd3Z1kyOXVjM1J5ZFdOMGIzSnpJR1p2Y2lCd2NtVjJaVzUwSUdOb1lXNW5aU0IwYUdWdElHbHVJR3hwWW5KaGNubGNiaUFnSUNBNklFbFRYMWRTUVZBZ0ppWWdkR0Z5WjJWMFcydGxlVjBnUFQwZ2IzVjBJRDhnS0daMWJtTjBhVzl1S0VNcGUxeHVJQ0FnSUNBZ2RtRnlJRVlnUFNCbWRXNWpkR2x2YmloaExDQmlMQ0JqS1h0Y2JpQWdJQ0FnSUNBZ2FXWW9kR2hwY3lCcGJuTjBZVzVqWlc5bUlFTXBlMXh1SUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2hoY21kMWJXVnVkSE11YkdWdVozUm9LWHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvZ2NtVjBkWEp1SUc1bGR5QkRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F4T2lCeVpYUjFjbTRnYm1WM0lFTW9ZU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURJNklISmxkSFZ5YmlCdVpYY2dReWhoTENCaUtUdGNiaUFnSUNBZ0lDQWdJQ0I5SUhKbGRIVnliaUJ1WlhjZ1F5aGhMQ0JpTENCaktUdGNiaUFnSUNBZ0lDQWdmU0J5WlhSMWNtNGdReTVoY0hCc2VTaDBhR2x6TENCaGNtZDFiV1Z1ZEhNcE8xeHVJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lFWmJVRkpQVkU5VVdWQkZYU0E5SUVOYlVGSlBWRTlVV1ZCRlhUdGNiaUFnSUNBZ0lISmxkSFZ5YmlCR08xeHVJQ0FnSUM4dklHMWhhMlVnYzNSaGRHbGpJSFpsY25OcGIyNXpJR1p2Y2lCd2NtOTBiM1I1Y0dVZ2JXVjBhRzlrYzF4dUlDQWdJSDBwS0c5MWRDa2dPaUJKVTE5UVVrOVVUeUFtSmlCMGVYQmxiMllnYjNWMElEMDlJQ2RtZFc1amRHbHZiaWNnUHlCamRIZ29SblZ1WTNScGIyNHVZMkZzYkN3Z2IzVjBLU0E2SUc5MWREdGNiaUFnSUNBdkx5QmxlSEJ2Y25RZ2NISnZkRzhnYldWMGFHOWtjeUIwYnlCamIzSmxMaVZEVDA1VFZGSlZRMVJQVWlVdWJXVjBhRzlrY3k0bFRrRk5SU1ZjYmlBZ0lDQnBaaWhKVTE5UVVrOVVUeWw3WEc0Z0lDQWdJQ0FvWlhod2IzSjBjeTUyYVhKMGRXRnNJSHg4SUNobGVIQnZjblJ6TG5acGNuUjFZV3dnUFNCN2ZTa3BXMnRsZVYwZ1BTQnZkWFE3WEc0Z0lDQWdJQ0F2THlCbGVIQnZjblFnY0hKdmRHOGdiV1YwYUc5a2N5QjBieUJqYjNKbExpVkRUMDVUVkZKVlExUlBVaVV1Y0hKdmRHOTBlWEJsTGlWT1FVMUZKVnh1SUNBZ0lDQWdhV1lvZEhsd1pTQW1JQ1JsZUhCdmNuUXVVaUFtSmlCbGVIQlFjbTkwYnlBbUppQWhaWGh3VUhKdmRHOWJhMlY1WFNsb2FXUmxLR1Y0Y0ZCeWIzUnZMQ0JyWlhrc0lHOTFkQ2s3WEc0Z0lDQWdmVnh1SUNCOVhHNTlPMXh1THk4Z2RIbHdaU0JpYVhSdFlYQmNiaVJsZUhCdmNuUXVSaUE5SURFN0lDQWdMeThnWm05eVkyVmtYRzRrWlhod2IzSjBMa2NnUFNBeU95QWdJQzh2SUdkc2IySmhiRnh1SkdWNGNHOXlkQzVUSUQwZ05Ec2dJQ0F2THlCemRHRjBhV05jYmlSbGVIQnZjblF1VUNBOUlEZzdJQ0FnTHk4Z2NISnZkRzljYmlSbGVIQnZjblF1UWlBOUlERTJPeUFnTHk4Z1ltbHVaRnh1SkdWNGNHOXlkQzVYSUQwZ016STdJQ0F2THlCM2NtRndYRzRrWlhod2IzSjBMbFVnUFNBMk5Ec2dJQzh2SUhOaFptVmNiaVJsZUhCdmNuUXVVaUE5SURFeU9Ec2dMeThnY21WaGJDQndjbTkwYnlCdFpYUm9iMlFnWm05eUlHQnNhV0p5WVhKNVlDQmNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdKR1Y0Y0c5eWREdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDJWNGNHOXlkQzVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnT1Z4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWdNU0F5SURNZ05DQTFJRFlnTnlBNElEa2lMQ0pjSW5WelpTQnpkSEpwWTNSY0lqdGNibHh1Wlhod2IzSjBjeTVmWDJWelRXOWtkV3hsSUQwZ2RISjFaVHRjYmx4dWRtRnlJRjlrWldacGJtVlFjbTl3WlhKMGVTQTlJSEpsY1hWcGNtVW9YQ0l1TGk5amIzSmxMV3B6TDI5aWFtVmpkQzlrWldacGJtVXRjSEp2Y0dWeWRIbGNJaWs3WEc1Y2JuWmhjaUJmWkdWbWFXNWxVSEp2Y0dWeWRIa3lJRDBnWDJsdWRHVnliM0JTWlhGMWFYSmxSR1ZtWVhWc2RDaGZaR1ZtYVc1bFVISnZjR1Z5ZEhrcE8xeHVYRzVtZFc1amRHbHZiaUJmYVc1MFpYSnZjRkpsY1hWcGNtVkVaV1poZFd4MEtHOWlhaWtnZXlCeVpYUjFjbTRnYjJKcUlDWW1JRzlpYWk1ZlgyVnpUVzlrZFd4bElEOGdiMkpxSURvZ2V5QmtaV1poZFd4ME9pQnZZbW9nZlRzZ2ZWeHVYRzVsZUhCdmNuUnpMbVJsWm1GMWJIUWdQU0JtZFc1amRHbHZiaUFvS1NCN1hHNGdJR1oxYm1OMGFXOXVJR1JsWm1sdVpWQnliM0JsY25ScFpYTW9kR0Z5WjJWMExDQndjbTl3Y3lrZ2UxeHVJQ0FnSUdadmNpQW9kbUZ5SUdrZ1BTQXdPeUJwSUR3Z2NISnZjSE11YkdWdVozUm9PeUJwS3lzcElIdGNiaUFnSUNBZ0lIWmhjaUJrWlhOamNtbHdkRzl5SUQwZ2NISnZjSE5iYVYwN1hHNGdJQ0FnSUNCa1pYTmpjbWx3ZEc5eUxtVnVkVzFsY21GaWJHVWdQU0JrWlhOamNtbHdkRzl5TG1WdWRXMWxjbUZpYkdVZ2ZId2dabUZzYzJVN1hHNGdJQ0FnSUNCa1pYTmpjbWx3ZEc5eUxtTnZibVpwWjNWeVlXSnNaU0E5SUhSeWRXVTdYRzRnSUNBZ0lDQnBaaUFvWENKMllXeDFaVndpSUdsdUlHUmxjMk55YVhCMGIzSXBJR1JsYzJOeWFYQjBiM0l1ZDNKcGRHRmliR1VnUFNCMGNuVmxPMXh1SUNBZ0lDQWdLREFzSUY5a1pXWnBibVZRY205d1pYSjBlVEl1WkdWbVlYVnNkQ2tvZEdGeVoyVjBMQ0JrWlhOamNtbHdkRzl5TG10bGVTd2daR1Z6WTNKcGNIUnZjaWs3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnY21WMGRYSnVJR1oxYm1OMGFXOXVJQ2hEYjI1emRISjFZM1J2Y2l3Z2NISnZkRzlRY205d2N5d2djM1JoZEdsalVISnZjSE1wSUh0Y2JpQWdJQ0JwWmlBb2NISnZkRzlRY205d2N5a2daR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aERiMjV6ZEhKMVkzUnZjaTV3Y205MGIzUjVjR1VzSUhCeWIzUnZVSEp2Y0hNcE8xeHVJQ0FnSUdsbUlDaHpkR0YwYVdOUWNtOXdjeWtnWkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWhEYjI1emRISjFZM1J2Y2l3Z2MzUmhkR2xqVUhKdmNITXBPMXh1SUNBZ0lISmxkSFZ5YmlCRGIyNXpkSEoxWTNSdmNqdGNiaUFnZlR0Y2JuMG9LVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZbUZpWld3dGNuVnVkR2x0WlM5b1pXeHdaWEp6TDJOeVpXRjBaVU5zWVhOekxtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQXhNRnh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1nTkNBMUlEWWdOeUE0SURraUxDSnRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUtHVjRaV01wZTF4dUlDQjBjbmtnZTF4dUlDQWdJSEpsZEhWeWJpQWhJV1Y0WldNb0tUdGNiaUFnZlNCallYUmphQ2hsS1h0Y2JpQWdJQ0J5WlhSMWNtNGdkSEoxWlR0Y2JpQWdmVnh1ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMlpoYVd4ekxtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQXhNVnh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1nTkNBMUlEWWdOeUE0SURraUxDSjJZWElnYUdGelQzZHVVSEp2Y0dWeWRIa2dQU0I3ZlM1b1lYTlBkMjVRY205d1pYSjBlVHRjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRvYVhRc0lHdGxlU2w3WEc0Z0lISmxkSFZ5YmlCb1lYTlBkMjVRY205d1pYSjBlUzVqWVd4c0tHbDBMQ0JyWlhrcE8xeHVmVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgyaGhjeTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTVRKY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0lzSWk4dklIUnZJR2x1WkdWNFpXUWdiMkpxWldOMExDQjBiMDlpYW1WamRDQjNhWFJvSUdaaGJHeGlZV05ySUdadmNpQnViMjR0WVhKeVlYa3RiR2xyWlNCRlV6TWdjM1J5YVc1bmMxeHVkbUZ5SUVsUFltcGxZM1FnUFNCeVpYRjFhWEpsS0NjdUwxOXBiMkpxWldOMEp5bGNiaUFnTENCa1pXWnBibVZrSUQwZ2NtVnhkV2x5WlNnbkxpOWZaR1ZtYVc1bFpDY3BPMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaWhwZENsN1hHNGdJSEpsZEhWeWJpQkpUMkpxWldOMEtHUmxabWx1WldRb2FYUXBLVHRjYm4wN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTkwYnkxcGIySnFaV04wTG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBeE0xeHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBeUlETWdOQ0ExSWl3aUx5OGdiM0IwYVc5dVlXd2dMeUJ6YVcxd2JHVWdZMjl1ZEdWNGRDQmlhVzVrYVc1blhHNTJZWElnWVVaMWJtTjBhVzl1SUQwZ2NtVnhkV2x5WlNnbkxpOWZZUzFtZFc1amRHbHZiaWNwTzF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlobWJpd2dkR2hoZEN3Z2JHVnVaM1JvS1h0Y2JpQWdZVVoxYm1OMGFXOXVLR1p1S1R0Y2JpQWdhV1lvZEdoaGRDQTlQVDBnZFc1a1pXWnBibVZrS1hKbGRIVnliaUJtYmp0Y2JpQWdjM2RwZEdOb0tHeGxibWQwYUNsN1hHNGdJQ0FnWTJGelpTQXhPaUJ5WlhSMWNtNGdablZ1WTNScGIyNG9ZU2w3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdabTR1WTJGc2JDaDBhR0YwTENCaEtUdGNiaUFnSUNCOU8xeHVJQ0FnSUdOaGMyVWdNam9nY21WMGRYSnVJR1oxYm1OMGFXOXVLR0VzSUdJcGUxeHVJQ0FnSUNBZ2NtVjBkWEp1SUdadUxtTmhiR3dvZEdoaGRDd2dZU3dnWWlrN1hHNGdJQ0FnZlR0Y2JpQWdJQ0JqWVhObElETTZJSEpsZEhWeWJpQm1kVzVqZEdsdmJpaGhMQ0JpTENCaktYdGNiaUFnSUNBZ0lISmxkSFZ5YmlCbWJpNWpZV3hzS0hSb1lYUXNJR0VzSUdJc0lHTXBPMXh1SUNBZ0lIMDdYRzRnSUgxY2JpQWdjbVYwZFhKdUlHWjFibU4wYVc5dUtDOHFJQzR1TG1GeVozTWdLaThwZTF4dUlDQWdJSEpsZEhWeWJpQm1iaTVoY0hCc2VTaDBhR0YwTENCaGNtZDFiV1Z1ZEhNcE8xeHVJQ0I5TzF4dWZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDJOMGVDNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdNVFJjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SURRZ05TQTJJRGNnT0NBNUlpd2liVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpaGlhWFJ0WVhBc0lIWmhiSFZsS1h0Y2JpQWdjbVYwZFhKdUlIdGNiaUFnSUNCbGJuVnRaWEpoWW14bElDQTZJQ0VvWW1sMGJXRndJQ1lnTVNrc1hHNGdJQ0FnWTI5dVptbG5kWEpoWW14bE9pQWhLR0pwZEcxaGNDQW1JRElwTEZ4dUlDQWdJSGR5YVhSaFlteGxJQ0FnSURvZ0lTaGlhWFJ0WVhBZ0ppQTBLU3hjYmlBZ0lDQjJZV3gxWlNBZ0lDQWdJQ0E2SUhaaGJIVmxYRzRnSUgwN1hHNTlPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmNISnZjR1Z5ZEhrdFpHVnpZeTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTVRWY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0EySURjZ09DQTVJaXdpYlc5a2RXeGxMbVY0Y0c5eWRITWdQU0I3ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMmwwWlhKaGRHOXljeTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTVRaY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0lzSW5aaGNpQnBjMDlpYW1WamRDQTlJSEpsY1hWcGNtVW9KeTR2WDJsekxXOWlhbVZqZENjcFhHNGdJQ3dnWkc5amRXMWxiblFnUFNCeVpYRjFhWEpsS0NjdUwxOW5iRzlpWVd3bktTNWtiMk4xYldWdWRGeHVJQ0F2THlCcGJpQnZiR1FnU1VVZ2RIbHdaVzltSUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUWdhWE1nSjI5aWFtVmpkQ2RjYmlBZ0xDQnBjeUE5SUdselQySnFaV04wS0dSdlkzVnRaVzUwS1NBbUppQnBjMDlpYW1WamRDaGtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS1R0Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0b2FYUXBlMXh1SUNCeVpYUjFjbTRnYVhNZ1B5QmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0dsMEtTQTZJSHQ5TzF4dWZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDJSdmJTMWpjbVZoZEdVdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlERTNYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVZ05pQTNJRGdnT1NJc0lpOHZJREU1TGpFdU1pNHhOQ0F2SURFMUxqSXVNeTR4TkNCUFltcGxZM1F1YTJWNWN5aFBLVnh1ZG1GeUlDUnJaWGx6SUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmIySnFaV04wTFd0bGVYTXRhVzUwWlhKdVlXd25LVnh1SUNBc0lHVnVkVzFDZFdkTFpYbHpJRDBnY21WeGRXbHlaU2duTGk5ZlpXNTFiUzFpZFdjdGEyVjVjeWNwTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlFOWlhbVZqZEM1clpYbHpJSHg4SUdaMWJtTjBhVzl1SUd0bGVYTW9UeWw3WEc0Z0lISmxkSFZ5YmlBa2EyVjVjeWhQTENCbGJuVnRRblZuUzJWNWN5azdYRzU5TzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZiMkpxWldOMExXdGxlWE11YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURFNFhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015QTBJRFVpTENKdGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1S0dsMEtYdGNiaUFnYVdZb2RIbHdaVzltSUdsMElDRTlJQ2RtZFc1amRHbHZiaWNwZEdoeWIzY2dWSGx3WlVWeWNtOXlLR2wwSUNzZ0p5QnBjeUJ1YjNRZ1lTQm1kVzVqZEdsdmJpRW5LVHRjYmlBZ2NtVjBkWEp1SUdsME8xeHVmVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgyRXRablZ1WTNScGIyNHVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJREU1WEc0dkx5QnRiMlIxYkdVZ1kyaDFibXR6SUQwZ01DQXhJRElnTXlBMElEVWdOaUEzSURnZ09TSXNJblpoY2lCMGIxTjBjbWx1WnlBOUlIdDlMblJ2VTNSeWFXNW5PMXh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1S0dsMEtYdGNiaUFnY21WMGRYSnVJSFJ2VTNSeWFXNW5MbU5oYkd3b2FYUXBMbk5zYVdObEtEZ3NJQzB4S1R0Y2JuMDdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5amIyWXVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJREl3WEc0dkx5QnRiMlIxYkdVZ1kyaDFibXR6SUQwZ01DQXhJRElnTXlBMElEVWlMQ0l2THlBM0xqRXVNU0JVYjFCeWFXMXBkR2wyWlNocGJuQjFkQ0JiTENCUWNtVm1aWEp5WldSVWVYQmxYU2xjYm5aaGNpQnBjMDlpYW1WamRDQTlJSEpsY1hWcGNtVW9KeTR2WDJsekxXOWlhbVZqZENjcE8xeHVMeThnYVc1emRHVmhaQ0J2WmlCMGFHVWdSVk0ySUhOd1pXTWdkbVZ5YzJsdmJpd2dkMlVnWkdsa2JpZDBJR2x0Y0d4bGJXVnVkQ0JBUUhSdlVISnBiV2wwYVhabElHTmhjMlZjYmk4dklHRnVaQ0IwYUdVZ2MyVmpiMjVrSUdGeVozVnRaVzUwSUMwZ1pteGhaeUF0SUhCeVpXWmxjbkpsWkNCMGVYQmxJR2x6SUdFZ2MzUnlhVzVuWEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1S0dsMExDQlRLWHRjYmlBZ2FXWW9JV2x6VDJKcVpXTjBLR2wwS1NseVpYUjFjbTRnYVhRN1hHNGdJSFpoY2lCbWJpd2dkbUZzTzF4dUlDQnBaaWhUSUNZbUlIUjVjR1Z2WmlBb1ptNGdQU0JwZEM1MGIxTjBjbWx1WnlrZ1BUMGdKMloxYm1OMGFXOXVKeUFtSmlBaGFYTlBZbXBsWTNRb2RtRnNJRDBnWm00dVkyRnNiQ2hwZENrcEtYSmxkSFZ5YmlCMllXdzdYRzRnSUdsbUtIUjVjR1Z2WmlBb1ptNGdQU0JwZEM1MllXeDFaVTltS1NBOVBTQW5ablZ1WTNScGIyNG5JQ1ltSUNGcGMwOWlhbVZqZENoMllXd2dQU0JtYmk1allXeHNLR2wwS1NrcGNtVjBkWEp1SUhaaGJEdGNiaUFnYVdZb0lWTWdKaVlnZEhsd1pXOW1JQ2htYmlBOUlHbDBMblJ2VTNSeWFXNW5LU0E5UFNBblpuVnVZM1JwYjI0bklDWW1JQ0ZwYzA5aWFtVmpkQ2gyWVd3Z1BTQm1iaTVqWVd4c0tHbDBLU2twY21WMGRYSnVJSFpoYkR0Y2JpQWdkR2h5YjNjZ1ZIbHdaVVZ5Y205eUtGd2lRMkZ1SjNRZ1kyOXVkbVZ5ZENCdlltcGxZM1FnZEc4Z2NISnBiV2wwYVhabElIWmhiSFZsWENJcE8xeHVmVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgzUnZMWEJ5YVcxcGRHbDJaUzVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTWpGY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0EySURjZ09DQTVJaXdpZG1GeUlHUmxaaUE5SUhKbGNYVnBjbVVvSnk0dlgyOWlhbVZqZEMxa2NDY3BMbVpjYmlBZ0xDQm9ZWE1nUFNCeVpYRjFhWEpsS0NjdUwxOW9ZWE1uS1Z4dUlDQXNJRlJCUnlBOUlISmxjWFZwY21Vb0p5NHZYM2RyY3ljcEtDZDBiMU4wY21sdVoxUmhaeWNwTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUtHbDBMQ0IwWVdjc0lITjBZWFFwZTF4dUlDQnBaaWhwZENBbUppQWhhR0Z6S0dsMElEMGdjM1JoZENBL0lHbDBJRG9nYVhRdWNISnZkRzkwZVhCbExDQlVRVWNwS1dSbFppaHBkQ3dnVkVGSExDQjdZMjl1Wm1sbmRYSmhZbXhsT2lCMGNuVmxMQ0IyWVd4MVpUb2dkR0ZuZlNrN1hHNTlPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmMyVjBMWFJ2TFhOMGNtbHVaeTEwWVdjdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlESXlYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVaUxDSjJZWElnYVdRZ1BTQXdYRzRnSUN3Z2NIZ2dQU0JOWVhSb0xuSmhibVJ2YlNncE8xeHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpaHJaWGtwZTF4dUlDQnlaWFIxY200Z0oxTjViV0p2YkNnbkxtTnZibU5oZENoclpYa2dQVDA5SUhWdVpHVm1hVzVsWkNBL0lDY25JRG9nYTJWNUxDQW5LVjhuTENBb0t5dHBaQ0FySUhCNEtTNTBiMU4wY21sdVp5Z3pOaWtwTzF4dWZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDNWcFpDNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdNak5jYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SURRZ05TSXNJaTh2SURjdU1pNHhJRkpsY1hWcGNtVlBZbXBsWTNSRGIyVnlZMmxpYkdVb1lYSm5kVzFsYm5RcFhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUtHbDBLWHRjYmlBZ2FXWW9hWFFnUFQwZ2RXNWtaV1pwYm1Wa0tYUm9jbTkzSUZSNWNHVkZjbkp2Y2loY0lrTmhiaWQwSUdOaGJHd2diV1YwYUc5a0lHOXVJQ0JjSWlBcklHbDBLVHRjYmlBZ2NtVjBkWEp1SUdsME8xeHVmVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgyUmxabWx1WldRdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlESTBYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVaUxDSnRiMlIxYkdVdVpYaHdiM0owY3lBOUlDRnlaWEYxYVhKbEtDY3VMMTlrWlhOamNtbHdkRzl5Y3ljcElDWW1JQ0Z5WlhGMWFYSmxLQ2N1TDE5bVlXbHNjeWNwS0daMWJtTjBhVzl1S0NsN1hHNGdJSEpsZEhWeWJpQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvY21WeGRXbHlaU2duTGk5ZlpHOXRMV055WldGMFpTY3BLQ2RrYVhZbktTd2dKMkVuTENCN1oyVjBPaUJtZFc1amRHbHZiaWdwZXlCeVpYUjFjbTRnTnpzZ2ZYMHBMbUVnSVQwZ056dGNibjBwTzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZhV1U0TFdSdmJTMWtaV1pwYm1VdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlESTFYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVZ05pQTNJRGdnT1NJc0ltMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ2RISjFaVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgyeHBZbkpoY25rdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlESTJYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVaUxDSjJZWElnYzJoaGNtVmtJRDBnY21WeGRXbHlaU2duTGk5ZmMyaGhjbVZrSnlrb0oydGxlWE1uS1Z4dUlDQXNJSFZwWkNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDNWcFpDY3BPMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaWhyWlhrcGUxeHVJQ0J5WlhSMWNtNGdjMmhoY21Wa1cydGxlVjBnZkh3Z0tITm9ZWEpsWkZ0clpYbGRJRDBnZFdsa0tHdGxlU2twTzF4dWZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDNOb1lYSmxaQzFyWlhrdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlESTNYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVaUxDSXZMeUEzTGpFdU5DQlViMGx1ZEdWblpYSmNiblpoY2lCalpXbHNJQ0E5SUUxaGRHZ3VZMlZwYkZ4dUlDQXNJR1pzYjI5eUlEMGdUV0YwYUM1bWJHOXZjanRjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRvYVhRcGUxeHVJQ0J5WlhSMWNtNGdhWE5PWVU0b2FYUWdQU0FyYVhRcElEOGdNQ0E2SUNocGRDQStJREFnUHlCbWJHOXZjaUE2SUdObGFXd3BLR2wwS1R0Y2JuMDdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5MGJ5MXBiblJsWjJWeUxtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQXlPRnh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1nTkNBMUlpd2lMeThnU1VVZ09DMGdaRzl1SjNRZ1pXNTFiU0JpZFdjZ2EyVjVjMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0FvWEc0Z0lDZGpiMjV6ZEhKMVkzUnZjaXhvWVhOUGQyNVFjbTl3WlhKMGVTeHBjMUJ5YjNSdmRIbHdaVTltTEhCeWIzQmxjblI1U1hORmJuVnRaWEpoWW14bExIUnZURzlqWVd4bFUzUnlhVzVuTEhSdlUzUnlhVzVuTEhaaGJIVmxUMlluWEc0cExuTndiR2wwS0Njc0p5azdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5bGJuVnRMV0oxWnkxclpYbHpMbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0F5T1Z4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWdNU0F5SURNZ05DQTFJaXdpZG1GeUlHZHNiMkpoYkNBOUlISmxjWFZwY21Vb0p5NHZYMmRzYjJKaGJDY3BYRzRnSUN3Z1UwaEJVa1ZFSUQwZ0oxOWZZMjl5WlMxcWMxOXphR0Z5WldSZlh5ZGNiaUFnTENCemRHOXlaU0FnUFNCbmJHOWlZV3hiVTBoQlVrVkVYU0I4ZkNBb1oyeHZZbUZzVzFOSVFWSkZSRjBnUFNCN2ZTazdYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVLR3RsZVNsN1hHNGdJSEpsZEhWeWJpQnpkRzl5WlZ0clpYbGRJSHg4SUNoemRHOXlaVnRyWlhsZElEMGdlMzBwTzF4dWZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDNOb1lYSmxaQzVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTXpCY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0lzSW0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnZXlCY0ltUmxabUYxYkhSY0lqb2djbVZ4ZFdseVpTaGNJbU52Y21VdGFuTXZiR2xpY21GeWVTOW1iaTl2WW1wbFkzUXZaMlYwTFhCeWIzUnZkSGx3WlMxdlpsd2lLU3dnWDE5bGMwMXZaSFZzWlRvZ2RISjFaU0I5TzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlpWVdKbGJDMXlkVzUwYVcxbEwyTnZjbVV0YW5NdmIySnFaV04wTDJkbGRDMXdjbTkwYjNSNWNHVXRiMll1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURNeFhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015SXNJaTh2SURjdU1TNHhNeUJVYjA5aWFtVmpkQ2hoY21kMWJXVnVkQ2xjYm5aaGNpQmtaV1pwYm1Wa0lEMGdjbVZ4ZFdseVpTZ25MaTlmWkdWbWFXNWxaQ2NwTzF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlocGRDbDdYRzRnSUhKbGRIVnliaUJQWW1wbFkzUW9aR1ZtYVc1bFpDaHBkQ2twTzF4dWZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDNSdkxXOWlhbVZqZEM1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ016SmNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SURFZ01pQXpJRFFnTlNJc0ltMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ2V5QmNJbVJsWm1GMWJIUmNJam9nY21WeGRXbHlaU2hjSW1OdmNtVXRhbk12YkdsaWNtRnllUzltYmk5dlltcGxZM1F2WkdWbWFXNWxMWEJ5YjNCbGNuUjVYQ0lwTENCZlgyVnpUVzlrZFd4bE9pQjBjblZsSUgwN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJKaFltVnNMWEoxYm5ScGJXVXZZMjl5WlMxcWN5OXZZbXBsWTNRdlpHVm1hVzVsTFhCeWIzQmxjblI1TG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBek0xeHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBeUlETWdOQ0ExSURZZ055QTRJRGtpTENKY0luVnpaU0J6ZEhKcFkzUmNJanRjYmx4dVpYaHdiM0owY3k1ZlgyVnpUVzlrZFd4bElEMGdkSEoxWlR0Y2JseHVkbUZ5SUY5elpYUlFjbTkwYjNSNWNHVlBaaUE5SUhKbGNYVnBjbVVvWENJdUxpOWpiM0psTFdwekwyOWlhbVZqZEM5elpYUXRjSEp2ZEc5MGVYQmxMVzltWENJcE8xeHVYRzUyWVhJZ1gzTmxkRkJ5YjNSdmRIbHdaVTltTWlBOUlGOXBiblJsY205d1VtVnhkV2x5WlVSbFptRjFiSFFvWDNObGRGQnliM1J2ZEhsd1pVOW1LVHRjYmx4dWRtRnlJRjlqY21WaGRHVWdQU0J5WlhGMWFYSmxLRndpTGk0dlkyOXlaUzFxY3k5dlltcGxZM1F2WTNKbFlYUmxYQ0lwTzF4dVhHNTJZWElnWDJOeVpXRjBaVElnUFNCZmFXNTBaWEp2Y0ZKbGNYVnBjbVZFWldaaGRXeDBLRjlqY21WaGRHVXBPMXh1WEc1MllYSWdYM1I1Y0dWdlpqSWdQU0J5WlhGMWFYSmxLRndpTGk0dmFHVnNjR1Z5Y3k5MGVYQmxiMlpjSWlrN1hHNWNiblpoY2lCZmRIbHdaVzltTXlBOUlGOXBiblJsY205d1VtVnhkV2x5WlVSbFptRjFiSFFvWDNSNWNHVnZaaklwTzF4dVhHNW1kVzVqZEdsdmJpQmZhVzUwWlhKdmNGSmxjWFZwY21WRVpXWmhkV3gwS0c5aWFpa2dleUJ5WlhSMWNtNGdiMkpxSUNZbUlHOWlhaTVmWDJWelRXOWtkV3hsSUQ4Z2IySnFJRG9nZXlCa1pXWmhkV3gwT2lCdlltb2dmVHNnZlZ4dVhHNWxlSEJ2Y25SekxtUmxabUYxYkhRZ1BTQm1kVzVqZEdsdmJpQW9jM1ZpUTJ4aGMzTXNJSE4xY0dWeVEyeGhjM01wSUh0Y2JpQWdhV1lnS0hSNWNHVnZaaUJ6ZFhCbGNrTnNZWE56SUNFOVBTQmNJbVoxYm1OMGFXOXVYQ0lnSmlZZ2MzVndaWEpEYkdGemN5QWhQVDBnYm5Wc2JDa2dlMXh1SUNBZ0lIUm9jbTkzSUc1bGR5QlVlWEJsUlhKeWIzSW9YQ0pUZFhCbGNpQmxlSEJ5WlhOemFXOXVJRzExYzNRZ1pXbDBhR1Z5SUdKbElHNTFiR3dnYjNJZ1lTQm1kVzVqZEdsdmJpd2dibTkwSUZ3aUlDc2dLSFI1Y0dWdlppQnpkWEJsY2tOc1lYTnpJRDA5UFNCY0luVnVaR1ZtYVc1bFpGd2lJRDhnWENKMWJtUmxabWx1WldSY0lpQTZJQ2d3TENCZmRIbHdaVzltTXk1a1pXWmhkV3gwS1NoemRYQmxja05zWVhOektTa3BPMXh1SUNCOVhHNWNiaUFnYzNWaVEyeGhjM011Y0hKdmRHOTBlWEJsSUQwZ0tEQXNJRjlqY21WaGRHVXlMbVJsWm1GMWJIUXBLSE4xY0dWeVEyeGhjM01nSmlZZ2MzVndaWEpEYkdGemN5NXdjbTkwYjNSNWNHVXNJSHRjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjam9nZTF4dUlDQWdJQ0FnZG1Gc2RXVTZJSE4xWWtOc1lYTnpMRnh1SUNBZ0lDQWdaVzUxYldWeVlXSnNaVG9nWm1Gc2MyVXNYRzRnSUNBZ0lDQjNjbWwwWVdKc1pUb2dkSEoxWlN4Y2JpQWdJQ0FnSUdOdmJtWnBaM1Z5WVdKc1pUb2dkSEoxWlZ4dUlDQWdJSDFjYmlBZ2ZTazdYRzRnSUdsbUlDaHpkWEJsY2tOc1lYTnpLU0JmYzJWMFVISnZkRzkwZVhCbFQyWXlMbVJsWm1GMWJIUWdQeUFvTUN3Z1gzTmxkRkJ5YjNSdmRIbHdaVTltTWk1a1pXWmhkV3gwS1NoemRXSkRiR0Z6Y3l3Z2MzVndaWEpEYkdGemN5a2dPaUJ6ZFdKRGJHRnpjeTVmWDNCeWIzUnZYMThnUFNCemRYQmxja05zWVhOek8xeHVmVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZbUZpWld3dGNuVnVkR2x0WlM5b1pXeHdaWEp6TDJsdWFHVnlhWFJ6TG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBek5GeHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBeUlETWlMQ0pjSW5WelpTQnpkSEpwWTNSY0lqdGNibHh1Wlhod2IzSjBjeTVmWDJWelRXOWtkV3hsSUQwZ2RISjFaVHRjYmx4dWRtRnlJRjkwZVhCbGIyWXlJRDBnY21WeGRXbHlaU2hjSWk0dUwyaGxiSEJsY25NdmRIbHdaVzltWENJcE8xeHVYRzUyWVhJZ1gzUjVjR1Z2WmpNZ1BTQmZhVzUwWlhKdmNGSmxjWFZwY21WRVpXWmhkV3gwS0Y5MGVYQmxiMll5S1R0Y2JseHVablZ1WTNScGIyNGdYMmx1ZEdWeWIzQlNaWEYxYVhKbFJHVm1ZWFZzZENodlltb3BJSHNnY21WMGRYSnVJRzlpYWlBbUppQnZZbW91WDE5bGMwMXZaSFZzWlNBL0lHOWlhaUE2SUhzZ1pHVm1ZWFZzZERvZ2IySnFJSDA3SUgxY2JseHVaWGh3YjNKMGN5NWtaV1poZFd4MElEMGdablZ1WTNScGIyNGdLSE5sYkdZc0lHTmhiR3dwSUh0Y2JpQWdhV1lnS0NGelpXeG1LU0I3WEc0Z0lDQWdkR2h5YjNjZ2JtVjNJRkpsWm1WeVpXNWpaVVZ5Y205eUtGd2lkR2hwY3lCb1lYTnVKM1FnWW1WbGJpQnBibWwwYVdGc2FYTmxaQ0F0SUhOMWNHVnlLQ2tnYUdGemJpZDBJR0psWlc0Z1kyRnNiR1ZrWENJcE8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHTmhiR3dnSmlZZ0tDaDBlWEJsYjJZZ1kyRnNiQ0E5UFQwZ1hDSjFibVJsWm1sdVpXUmNJaUEvSUZ3aWRXNWtaV1pwYm1Wa1hDSWdPaUFvTUN3Z1gzUjVjR1Z2WmpNdVpHVm1ZWFZzZENrb1kyRnNiQ2twSUQwOVBTQmNJbTlpYW1WamRGd2lJSHg4SUhSNWNHVnZaaUJqWVd4c0lEMDlQU0JjSW1aMWJtTjBhVzl1WENJcElEOGdZMkZzYkNBNklITmxiR1k3WEc1OU8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5aVlXSmxiQzF5ZFc1MGFXMWxMMmhsYkhCbGNuTXZjRzl6YzJsaWJHVkRiMjV6ZEhKMVkzUnZjbEpsZEhWeWJpNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdNelZjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SWl3aWNtVnhkV2x5WlNnbkxpNHZMaTR2Ylc5a2RXeGxjeTlsY3pZdWIySnFaV04wTG1SbFptbHVaUzF3Y205d1pYSjBlU2NwTzF4dWRtRnlJQ1JQWW1wbFkzUWdQU0J5WlhGMWFYSmxLQ2N1TGk4dUxpOXRiMlIxYkdWekwxOWpiM0psSnlrdVQySnFaV04wTzF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlCa1pXWnBibVZRY205d1pYSjBlU2hwZEN3Z2EyVjVMQ0JrWlhOaktYdGNiaUFnY21WMGRYSnVJQ1JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2FYUXNJR3RsZVN3Z1pHVnpZeWs3WEc1OU8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Wm00dmIySnFaV04wTDJSbFptbHVaUzF3Y205d1pYSjBlUzVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTXpaY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0EySURjZ09DQTVJaXdpTHk4Z01Ua3VNUzR5TGpJZ0x5QXhOUzR5TGpNdU5TQlBZbXBsWTNRdVkzSmxZWFJsS0U4Z1d5d2dVSEp2Y0dWeWRHbGxjMTBwWEc1MllYSWdZVzVQWW1wbFkzUWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOWhiaTF2WW1wbFkzUW5LVnh1SUNBc0lHUlFjeUFnSUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmIySnFaV04wTFdSd2N5Y3BYRzRnSUN3Z1pXNTFiVUoxWjB0bGVYTWdQU0J5WlhGMWFYSmxLQ2N1TDE5bGJuVnRMV0oxWnkxclpYbHpKeWxjYmlBZ0xDQkpSVjlRVWs5VVR5QWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgzTm9ZWEpsWkMxclpYa25LU2duU1VWZlVGSlBWRThuS1Z4dUlDQXNJRVZ0Y0hSNUlDQWdJQ0FnSUQwZ1puVnVZM1JwYjI0b0tYc2dMeW9nWlcxd2RIa2dLaThnZlZ4dUlDQXNJRkJTVDFSUFZGbFFSU0FnSUQwZ0ozQnliM1J2ZEhsd1pTYzdYRzVjYmk4dklFTnlaV0YwWlNCdlltcGxZM1FnZDJsMGFDQm1ZV3RsSUdCdWRXeHNZQ0J3Y205MGIzUjVjR1U2SUhWelpTQnBabkpoYldVZ1QySnFaV04wSUhkcGRHZ2dZMnhsWVhKbFpDQndjbTkwYjNSNWNHVmNiblpoY2lCamNtVmhkR1ZFYVdOMElEMGdablZ1WTNScGIyNG9LWHRjYmlBZ0x5OGdWR2h5WVhOb0xDQjNZWE4wWlNCaGJtUWdjMjlrYjIxNU9pQkpSU0JIUXlCaWRXZGNiaUFnZG1GeUlHbG1jbUZ0WlNBOUlISmxjWFZwY21Vb0p5NHZYMlJ2YlMxamNtVmhkR1VuS1NnbmFXWnlZVzFsSnlsY2JpQWdJQ0FzSUdrZ0lDQWdJQ0E5SUdWdWRXMUNkV2RMWlhsekxteGxibWQwYUZ4dUlDQWdJQ3dnYkhRZ0lDQWdJRDBnSnp3blhHNGdJQ0FnTENCbmRDQWdJQ0FnUFNBblBpZGNiaUFnSUNBc0lHbG1jbUZ0WlVSdlkzVnRaVzUwTzF4dUlDQnBabkpoYldVdWMzUjViR1V1WkdsemNHeGhlU0E5SUNkdWIyNWxKenRjYmlBZ2NtVnhkV2x5WlNnbkxpOWZhSFJ0YkNjcExtRndjR1Z1WkVOb2FXeGtLR2xtY21GdFpTazdYRzRnSUdsbWNtRnRaUzV6Y21NZ1BTQW5hbUYyWVhOamNtbHdkRG9uT3lBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxc2FXNWxJRzV2TFhOamNtbHdkQzExY214Y2JpQWdMeThnWTNKbFlYUmxSR2xqZENBOUlHbG1jbUZ0WlM1amIyNTBaVzUwVjJsdVpHOTNMazlpYW1WamREdGNiaUFnTHk4Z2FIUnRiQzV5WlcxdmRtVkRhR2xzWkNocFpuSmhiV1VwTzF4dUlDQnBabkpoYldWRWIyTjFiV1Z1ZENBOUlHbG1jbUZ0WlM1amIyNTBaVzUwVjJsdVpHOTNMbVJ2WTNWdFpXNTBPMXh1SUNCcFpuSmhiV1ZFYjJOMWJXVnVkQzV2Y0dWdUtDazdYRzRnSUdsbWNtRnRaVVJ2WTNWdFpXNTBMbmR5YVhSbEtHeDBJQ3NnSjNOamNtbHdkQ2NnS3lCbmRDQXJJQ2RrYjJOMWJXVnVkQzVHUFU5aWFtVmpkQ2NnS3lCc2RDQXJJQ2N2YzJOeWFYQjBKeUFySUdkMEtUdGNiaUFnYVdaeVlXMWxSRzlqZFcxbGJuUXVZMnh2YzJVb0tUdGNiaUFnWTNKbFlYUmxSR2xqZENBOUlHbG1jbUZ0WlVSdlkzVnRaVzUwTGtZN1hHNGdJSGRvYVd4bEtHa3RMU2xrWld4bGRHVWdZM0psWVhSbFJHbGpkRnRRVWs5VVQxUlpVRVZkVzJWdWRXMUNkV2RMWlhselcybGRYVHRjYmlBZ2NtVjBkWEp1SUdOeVpXRjBaVVJwWTNRb0tUdGNibjA3WEc1Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1QySnFaV04wTG1OeVpXRjBaU0I4ZkNCbWRXNWpkR2x2YmlCamNtVmhkR1VvVHl3Z1VISnZjR1Z5ZEdsbGN5bDdYRzRnSUhaaGNpQnlaWE4xYkhRN1hHNGdJR2xtS0U4Z0lUMDlJRzUxYkd3cGUxeHVJQ0FnSUVWdGNIUjVXMUJTVDFSUFZGbFFSVjBnUFNCaGJrOWlhbVZqZENoUEtUdGNiaUFnSUNCeVpYTjFiSFFnUFNCdVpYY2dSVzF3ZEhrN1hHNGdJQ0FnUlcxd2RIbGJVRkpQVkU5VVdWQkZYU0E5SUc1MWJHdzdYRzRnSUNBZ0x5OGdZV1JrSUZ3aVgxOXdjbTkwYjE5ZlhDSWdabTl5SUU5aWFtVmpkQzVuWlhSUWNtOTBiM1I1Y0dWUFppQndiMng1Wm1sc2JGeHVJQ0FnSUhKbGMzVnNkRnRKUlY5UVVrOVVUMTBnUFNCUE8xeHVJQ0I5SUdWc2MyVWdjbVZ6ZFd4MElEMGdZM0psWVhSbFJHbGpkQ2dwTzF4dUlDQnlaWFIxY200Z1VISnZjR1Z5ZEdsbGN5QTlQVDBnZFc1a1pXWnBibVZrSUQ4Z2NtVnpkV3gwSURvZ1pGQnpLSEpsYzNWc2RDd2dVSEp2Y0dWeWRHbGxjeWs3WEc1OU8xeHVYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5dlltcGxZM1F0WTNKbFlYUmxMbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0F6TjF4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWdNU0F5SURNZ05DQTFJaXdpZG1GeUlDUmxlSEJ2Y25RZ1BTQnlaWEYxYVhKbEtDY3VMMTlsZUhCdmNuUW5LVHRjYmk4dklERTVMakV1TWk0MElDOGdNVFV1TWk0ekxqWWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0U4c0lGQXNJRUYwZEhKcFluVjBaWE1wWEc0a1pYaHdiM0owS0NSbGVIQnZjblF1VXlBcklDUmxlSEJ2Y25RdVJpQXFJQ0Z5WlhGMWFYSmxLQ2N1TDE5a1pYTmpjbWx3ZEc5eWN5Y3BMQ0FuVDJKcVpXTjBKeXdnZTJSbFptbHVaVkJ5YjNCbGNuUjVPaUJ5WlhGMWFYSmxLQ2N1TDE5dlltcGxZM1F0WkhBbktTNW1mU2s3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwyVnpOaTV2WW1wbFkzUXVaR1ZtYVc1bExYQnliM0JsY25SNUxtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQXpPRnh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1nTkNBMUlEWWdOeUE0SURraUxDSW5kWE5sSUhOMGNtbGpkQ2M3WEc1MllYSWdURWxDVWtGU1dTQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTlzYVdKeVlYSjVKeWxjYmlBZ0xDQWtaWGh3YjNKMElDQWdJQ0FnSUNBOUlISmxjWFZwY21Vb0p5NHZYMlY0Y0c5eWRDY3BYRzRnSUN3Z2NtVmtaV1pwYm1VZ0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOXlaV1JsWm1sdVpTY3BYRzRnSUN3Z2FHbGtaU0FnSUNBZ0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOW9hV1JsSnlsY2JpQWdMQ0JvWVhNZ0lDQWdJQ0FnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJoaGN5Y3BYRzRnSUN3Z1NYUmxjbUYwYjNKeklDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOXBkR1Z5WVhSdmNuTW5LVnh1SUNBc0lDUnBkR1Z5UTNKbFlYUmxJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZhWFJsY2kxamNtVmhkR1VuS1Z4dUlDQXNJSE5sZEZSdlUzUnlhVzVuVkdGbklEMGdjbVZ4ZFdseVpTZ25MaTlmYzJWMExYUnZMWE4wY21sdVp5MTBZV2NuS1Z4dUlDQXNJR2RsZEZCeWIzUnZkSGx3WlU5bUlEMGdjbVZ4ZFdseVpTZ25MaTlmYjJKcVpXTjBMV2R3YnljcFhHNGdJQ3dnU1ZSRlVrRlVUMUlnSUNBZ0lDQWdQU0J5WlhGMWFYSmxLQ2N1TDE5M2EzTW5LU2duYVhSbGNtRjBiM0luS1Z4dUlDQXNJRUpWUjBkWklDQWdJQ0FnSUNBZ0lEMGdJU2hiWFM1clpYbHpJQ1ltSUNkdVpYaDBKeUJwYmlCYlhTNXJaWGx6S0NrcElDOHZJRk5oWm1GeWFTQm9ZWE1nWW5Wbloza2dhWFJsY21GMGIzSnpJSGN2YnlCZ2JtVjRkR0JjYmlBZ0xDQkdSbDlKVkVWU1FWUlBVaUFnSUNBOUlDZEFRR2wwWlhKaGRHOXlKMXh1SUNBc0lFdEZXVk1nSUNBZ0lDQWdJQ0FnSUQwZ0oydGxlWE1uWEc0Z0lDd2dWa0ZNVlVWVElDQWdJQ0FnSUNBZ1BTQW5kbUZzZFdWekp6dGNibHh1ZG1GeUlISmxkSFZ5YmxSb2FYTWdQU0JtZFc1amRHbHZiaWdwZXlCeVpYUjFjbTRnZEdocGN6c2dmVHRjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmloQ1lYTmxMQ0JPUVUxRkxDQkRiMjV6ZEhKMVkzUnZjaXdnYm1WNGRDd2dSRVZHUVZWTVZDd2dTVk5mVTBWVUxDQkdUMUpEUlVRcGUxeHVJQ0FrYVhSbGNrTnlaV0YwWlNoRGIyNXpkSEoxWTNSdmNpd2dUa0ZOUlN3Z2JtVjRkQ2s3WEc0Z0lIWmhjaUJuWlhSTlpYUm9iMlFnUFNCbWRXNWpkR2x2YmlocmFXNWtLWHRjYmlBZ0lDQnBaaWdoUWxWSFIxa2dKaVlnYTJsdVpDQnBiaUJ3Y205MGJ5bHlaWFIxY200Z2NISnZkRzliYTJsdVpGMDdYRzRnSUNBZ2MzZHBkR05vS0d0cGJtUXBlMXh1SUNBZ0lDQWdZMkZ6WlNCTFJWbFRPaUJ5WlhSMWNtNGdablZ1WTNScGIyNGdhMlY1Y3lncGV5QnlaWFIxY200Z2JtVjNJRU52Ym5OMGNuVmpkRzl5S0hSb2FYTXNJR3RwYm1RcE95QjlPMXh1SUNBZ0lDQWdZMkZ6WlNCV1FVeFZSVk02SUhKbGRIVnliaUJtZFc1amRHbHZiaUIyWVd4MVpYTW9LWHNnY21WMGRYSnVJRzVsZHlCRGIyNXpkSEoxWTNSdmNpaDBhR2x6TENCcmFXNWtLVHNnZlR0Y2JpQWdJQ0I5SUhKbGRIVnliaUJtZFc1amRHbHZiaUJsYm5SeWFXVnpLQ2w3SUhKbGRIVnliaUJ1WlhjZ1EyOXVjM1J5ZFdOMGIzSW9kR2hwY3l3Z2EybHVaQ2s3SUgwN1hHNGdJSDA3WEc0Z0lIWmhjaUJVUVVjZ0lDQWdJQ0FnSUQwZ1RrRk5SU0FySUNjZ1NYUmxjbUYwYjNJblhHNGdJQ0FnTENCRVJVWmZWa0ZNVlVWVElEMGdSRVZHUVZWTVZDQTlQU0JXUVV4VlJWTmNiaUFnSUNBc0lGWkJURlZGVTE5Q1ZVY2dQU0JtWVd4elpWeHVJQ0FnSUN3Z2NISnZkRzhnSUNBZ0lDQTlJRUpoYzJVdWNISnZkRzkwZVhCbFhHNGdJQ0FnTENBa2JtRjBhWFpsSUNBZ0lEMGdjSEp2ZEc5YlNWUkZVa0ZVVDFKZElIeDhJSEJ5YjNSdlcwWkdYMGxVUlZKQlZFOVNYU0I4ZkNCRVJVWkJWVXhVSUNZbUlIQnliM1J2VzBSRlJrRlZURlJkWEc0Z0lDQWdMQ0FrWkdWbVlYVnNkQ0FnSUQwZ0pHNWhkR2wyWlNCOGZDQm5aWFJOWlhSb2IyUW9SRVZHUVZWTVZDbGNiaUFnSUNBc0lDUmxiblJ5YVdWeklDQWdQU0JFUlVaQlZVeFVJRDhnSVVSRlJsOVdRVXhWUlZNZ1B5QWtaR1ZtWVhWc2RDQTZJR2RsZEUxbGRHaHZaQ2duWlc1MGNtbGxjeWNwSURvZ2RXNWtaV1pwYm1Wa1hHNGdJQ0FnTENBa1lXNTVUbUYwYVhabElEMGdUa0ZOUlNBOVBTQW5RWEp5WVhrbklEOGdjSEp2ZEc4dVpXNTBjbWxsY3lCOGZDQWtibUYwYVhabElEb2dKRzVoZEdsMlpWeHVJQ0FnSUN3Z2JXVjBhRzlrY3l3Z2EyVjVMQ0JKZEdWeVlYUnZjbEJ5YjNSdmRIbHdaVHRjYmlBZ0x5OGdSbWw0SUc1aGRHbDJaVnh1SUNCcFppZ2tZVzU1VG1GMGFYWmxLWHRjYmlBZ0lDQkpkR1Z5WVhSdmNsQnliM1J2ZEhsd1pTQTlJR2RsZEZCeWIzUnZkSGx3WlU5bUtDUmhibmxPWVhScGRtVXVZMkZzYkNodVpYY2dRbUZ6WlNrcE8xeHVJQ0FnSUdsbUtFbDBaWEpoZEc5eVVISnZkRzkwZVhCbElDRTlQU0JQWW1wbFkzUXVjSEp2ZEc5MGVYQmxLWHRjYmlBZ0lDQWdJQzh2SUZObGRDQkFRSFJ2VTNSeWFXNW5WR0ZuSUhSdklHNWhkR2wyWlNCcGRHVnlZWFJ2Y25OY2JpQWdJQ0FnSUhObGRGUnZVM1J5YVc1blZHRm5LRWwwWlhKaGRHOXlVSEp2ZEc5MGVYQmxMQ0JVUVVjc0lIUnlkV1VwTzF4dUlDQWdJQ0FnTHk4Z1ptbDRJR1p2Y2lCemIyMWxJRzlzWkNCbGJtZHBibVZ6WEc0Z0lDQWdJQ0JwWmlnaFRFbENVa0ZTV1NBbUppQWhhR0Z6S0VsMFpYSmhkRzl5VUhKdmRHOTBlWEJsTENCSlZFVlNRVlJQVWlrcGFHbGtaU2hKZEdWeVlYUnZjbEJ5YjNSdmRIbHdaU3dnU1ZSRlVrRlVUMUlzSUhKbGRIVnlibFJvYVhNcE8xeHVJQ0FnSUgxY2JpQWdmVnh1SUNBdkx5Qm1hWGdnUVhKeVlYa2plM1poYkhWbGN5d2dRRUJwZEdWeVlYUnZjbjB1Ym1GdFpTQnBiaUJXT0NBdklFWkdYRzRnSUdsbUtFUkZSbDlXUVV4VlJWTWdKaVlnSkc1aGRHbDJaU0FtSmlBa2JtRjBhWFpsTG01aGJXVWdJVDA5SUZaQlRGVkZVeWw3WEc0Z0lDQWdWa0ZNVlVWVFgwSlZSeUE5SUhSeWRXVTdYRzRnSUNBZ0pHUmxabUYxYkhRZ1BTQm1kVzVqZEdsdmJpQjJZV3gxWlhNb0tYc2djbVYwZFhKdUlDUnVZWFJwZG1VdVkyRnNiQ2gwYUdsektUc2dmVHRjYmlBZ2ZWeHVJQ0F2THlCRVpXWnBibVVnYVhSbGNtRjBiM0pjYmlBZ2FXWW9LQ0ZNU1VKU1FWSlpJSHg4SUVaUFVrTkZSQ2tnSmlZZ0tFSlZSMGRaSUh4OElGWkJURlZGVTE5Q1ZVY2dmSHdnSVhCeWIzUnZXMGxVUlZKQlZFOVNYU2twZTF4dUlDQWdJR2hwWkdVb2NISnZkRzhzSUVsVVJWSkJWRTlTTENBa1pHVm1ZWFZzZENrN1hHNGdJSDFjYmlBZ0x5OGdVR3gxWnlCbWIzSWdiR2xpY21GeWVWeHVJQ0JKZEdWeVlYUnZjbk5iVGtGTlJWMGdQU0FrWkdWbVlYVnNkRHRjYmlBZ1NYUmxjbUYwYjNKelcxUkJSMTBnSUQwZ2NtVjBkWEp1VkdocGN6dGNiaUFnYVdZb1JFVkdRVlZNVkNsN1hHNGdJQ0FnYldWMGFHOWtjeUE5SUh0Y2JpQWdJQ0FnSUhaaGJIVmxjem9nSUVSRlJsOVdRVXhWUlZNZ1B5QWtaR1ZtWVhWc2RDQTZJR2RsZEUxbGRHaHZaQ2hXUVV4VlJWTXBMRnh1SUNBZ0lDQWdhMlY1Y3pvZ0lDQWdTVk5mVTBWVUlDQWdJQ0EvSUNSa1pXWmhkV3gwSURvZ1oyVjBUV1YwYUc5a0tFdEZXVk1wTEZ4dUlDQWdJQ0FnWlc1MGNtbGxjem9nSkdWdWRISnBaWE5jYmlBZ0lDQjlPMXh1SUNBZ0lHbG1LRVpQVWtORlJDbG1iM0lvYTJWNUlHbHVJRzFsZEdodlpITXBlMXh1SUNBZ0lDQWdhV1lvSVNoclpYa2dhVzRnY0hKdmRHOHBLWEpsWkdWbWFXNWxLSEJ5YjNSdkxDQnJaWGtzSUcxbGRHaHZaSE5iYTJWNVhTazdYRzRnSUNBZ2ZTQmxiSE5sSUNSbGVIQnZjblFvSkdWNGNHOXlkQzVRSUNzZ0pHVjRjRzl5ZEM1R0lDb2dLRUpWUjBkWklIeDhJRlpCVEZWRlUxOUNWVWNwTENCT1FVMUZMQ0J0WlhSb2IyUnpLVHRjYmlBZ2ZWeHVJQ0J5WlhSMWNtNGdiV1YwYUc5a2N6dGNibjA3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXBkR1Z5TFdSbFptbHVaUzVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTXpsY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0lzSW0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnZXlCY0ltUmxabUYxYkhSY0lqb2djbVZ4ZFdseVpTaGNJbU52Y21VdGFuTXZiR2xpY21GeWVTOW1iaTlxYzI5dUwzTjBjbWx1WjJsbWVWd2lLU3dnWDE5bGMwMXZaSFZzWlRvZ2RISjFaU0I5TzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlpWVdKbGJDMXlkVzUwYVcxbEwyTnZjbVV0YW5NdmFuTnZiaTl6ZEhKcGJtZHBabmt1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURRd1hHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015QTBJRFVnTmlJc0ltVjRjRzl5ZEhNdVppQTlJSHQ5TG5CeWIzQmxjblI1U1hORmJuVnRaWEpoWW14bE8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmYjJKcVpXTjBMWEJwWlM1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ05ERmNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SURFZ01pQXpJaXdpYlc5a2RXeGxMbVY0Y0c5eWRITWdQU0J5WlhGMWFYSmxLQ2N1TDE5bmJHOWlZV3duS1M1a2IyTjFiV1Z1ZENBbUppQmtiMk4xYldWdWRDNWtiMk4xYldWdWRFVnNaVzFsYm5RN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTlvZEcxc0xtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQTBNbHh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1nTkNBMUlpd2lMeThnTVRrdU1TNHlMamtnTHlBeE5TNHlMak11TWlCUFltcGxZM1F1WjJWMFVISnZkRzkwZVhCbFQyWW9UeWxjYm5aaGNpQm9ZWE1nSUNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgyaGhjeWNwWEc0Z0lDd2dkRzlQWW1wbFkzUWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOTBieTF2WW1wbFkzUW5LVnh1SUNBc0lFbEZYMUJTVDFSUElDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmMyaGhjbVZrTFd0bGVTY3BLQ2RKUlY5UVVrOVVUeWNwWEc0Z0lDd2dUMkpxWldOMFVISnZkRzhnUFNCUFltcGxZM1F1Y0hKdmRHOTBlWEJsTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlFOWlhbVZqZEM1blpYUlFjbTkwYjNSNWNHVlBaaUI4ZkNCbWRXNWpkR2x2YmloUEtYdGNiaUFnVHlBOUlIUnZUMkpxWldOMEtFOHBPMXh1SUNCcFppaG9ZWE1vVHl3Z1NVVmZVRkpQVkU4cEtYSmxkSFZ5YmlCUFcwbEZYMUJTVDFSUFhUdGNiaUFnYVdZb2RIbHdaVzltSUU4dVkyOXVjM1J5ZFdOMGIzSWdQVDBnSjJaMWJtTjBhVzl1SnlBbUppQlBJR2x1YzNSaGJtTmxiMllnVHk1amIyNXpkSEoxWTNSdmNpbDdYRzRnSUNBZ2NtVjBkWEp1SUU4dVkyOXVjM1J5ZFdOMGIzSXVjSEp2ZEc5MGVYQmxPMXh1SUNCOUlISmxkSFZ5YmlCUElHbHVjM1JoYm1ObGIyWWdUMkpxWldOMElEOGdUMkpxWldOMFVISnZkRzhnT2lCdWRXeHNPMXh1ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMjlpYW1WamRDMW5jRzh1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURRelhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015QTBJRFVpTENKMllYSWdhR0Z6SUNBZ0lDQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZhR0Z6SnlsY2JpQWdMQ0IwYjBsUFltcGxZM1FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTkwYnkxcGIySnFaV04wSnlsY2JpQWdMQ0JoY25KaGVVbHVaR1Y0VDJZZ1BTQnlaWEYxYVhKbEtDY3VMMTloY25KaGVTMXBibU5zZFdSbGN5Y3BLR1poYkhObEtWeHVJQ0FzSUVsRlgxQlNUMVJQSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDNOb1lYSmxaQzFyWlhrbktTZ25TVVZmVUZKUFZFOG5LVHRjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlodlltcGxZM1FzSUc1aGJXVnpLWHRjYmlBZ2RtRnlJRThnSUNBZ0lDQTlJSFJ2U1U5aWFtVmpkQ2h2WW1wbFkzUXBYRzRnSUNBZ0xDQnBJQ0FnSUNBZ1BTQXdYRzRnSUNBZ0xDQnlaWE4xYkhRZ1BTQmJYVnh1SUNBZ0lDd2dhMlY1TzF4dUlDQm1iM0lvYTJWNUlHbHVJRThwYVdZb2EyVjVJQ0U5SUVsRlgxQlNUMVJQS1doaGN5aFBMQ0JyWlhrcElDWW1JSEpsYzNWc2RDNXdkWE5vS0d0bGVTazdYRzRnSUM4dklFUnZiaWQwSUdWdWRXMGdZblZuSUNZZ2FHbGtaR1Z1SUd0bGVYTmNiaUFnZDJocGJHVW9ibUZ0WlhNdWJHVnVaM1JvSUQ0Z2FTbHBaaWhvWVhNb1R5d2dhMlY1SUQwZ2JtRnRaWE5iYVNzclhTa3BlMXh1SUNBZ0lINWhjbkpoZVVsdVpHVjRUMllvY21WemRXeDBMQ0JyWlhrcElIeDhJSEpsYzNWc2RDNXdkWE5vS0d0bGVTazdYRzRnSUgxY2JpQWdjbVYwZFhKdUlISmxjM1ZzZER0Y2JuMDdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5dlltcGxZM1F0YTJWNWN5MXBiblJsY201aGJDNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdORFJjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SURRZ05TSXNJaTh2SUcxdmMzUWdUMkpxWldOMElHMWxkR2h2WkhNZ1lua2dSVk0ySUhOb2IzVnNaQ0JoWTJObGNIUWdjSEpwYldsMGFYWmxjMXh1ZG1GeUlDUmxlSEJ2Y25RZ1BTQnlaWEYxYVhKbEtDY3VMMTlsZUhCdmNuUW5LVnh1SUNBc0lHTnZjbVVnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTlqYjNKbEp5bGNiaUFnTENCbVlXbHNjeUFnSUQwZ2NtVnhkV2x5WlNnbkxpOWZabUZwYkhNbktUdGNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNG9TMFZaTENCbGVHVmpLWHRjYmlBZ2RtRnlJR1p1SUNBOUlDaGpiM0psTGs5aWFtVmpkQ0I4ZkNCN2ZTbGJTMFZaWFNCOGZDQlBZbXBsWTNSYlMwVlpYVnh1SUNBZ0lDd2daWGh3SUQwZ2UzMDdYRzRnSUdWNGNGdExSVmxkSUQwZ1pYaGxZeWhtYmlrN1hHNGdJQ1JsZUhCdmNuUW9KR1Y0Y0c5eWRDNVRJQ3NnSkdWNGNHOXlkQzVHSUNvZ1ptRnBiSE1vWm5WdVkzUnBiMjRvS1hzZ1ptNG9NU2s3SUgwcExDQW5UMkpxWldOMEp5d2daWGh3S1R0Y2JuMDdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5dlltcGxZM1F0YzJGd0xtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQTBOVnh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1nTkNBMUlpd2liVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQnlaWEYxYVhKbEtDY3VMMTlvYVdSbEp5azdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5eVpXUmxabWx1WlM1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ05EWmNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SURFZ01pQXpJRFFnTlNJc0lpOHZJRGN1TVM0eE5TQlViMHhsYm1kMGFGeHVkbUZ5SUhSdlNXNTBaV2RsY2lBOUlISmxjWFZwY21Vb0p5NHZYM1J2TFdsdWRHVm5aWEluS1Z4dUlDQXNJRzFwYmlBZ0lDQWdJQ0E5SUUxaGRHZ3ViV2x1TzF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlocGRDbDdYRzRnSUhKbGRIVnliaUJwZENBK0lEQWdQeUJ0YVc0b2RHOUpiblJsWjJWeUtHbDBLU3dnTUhneFptWm1abVptWm1abVptWm1aaWtnT2lBd095QXZMeUJ3YjNjb01pd2dOVE1wSUMwZ01TQTlQU0E1TURBM01UazVNalUwTnpRd09Ua3hYRzU5TzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZkRzh0YkdWdVozUm9MbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0EwTjF4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWdNU0F5SURNZ05DQTFJaXdpZG1GeUlHZHNiMkpoYkNBZ0lDQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZaMnh2WW1Gc0p5bGNiaUFnTENCamIzSmxJQ0FnSUNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgyTnZjbVVuS1Z4dUlDQXNJRXhKUWxKQlVsa2dJQ0FnSUNBZ0lEMGdjbVZ4ZFdseVpTZ25MaTlmYkdsaWNtRnllU2NwWEc0Z0lDd2dkMnR6UlhoMElDQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTkzYTNNdFpYaDBKeWxjYmlBZ0xDQmtaV1pwYm1WUWNtOXdaWEowZVNBOUlISmxjWFZwY21Vb0p5NHZYMjlpYW1WamRDMWtjQ2NwTG1ZN1hHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUtHNWhiV1VwZTF4dUlDQjJZWElnSkZONWJXSnZiQ0E5SUdOdmNtVXVVM2x0WW05c0lIeDhJQ2hqYjNKbExsTjViV0p2YkNBOUlFeEpRbEpCVWxrZ1B5QjdmU0E2SUdkc2IySmhiQzVUZVcxaWIyd2dmSHdnZTMwcE8xeHVJQ0JwWmlodVlXMWxMbU5vWVhKQmRDZ3dLU0FoUFNBblh5Y2dKaVlnSVNodVlXMWxJR2x1SUNSVGVXMWliMndwS1dSbFptbHVaVkJ5YjNCbGNuUjVLQ1JUZVcxaWIyd3NJRzVoYldVc0lIdDJZV3gxWlRvZ2QydHpSWGgwTG1Zb2JtRnRaU2w5S1R0Y2JuMDdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5M2EzTXRaR1ZtYVc1bExtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQTBPRnh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1pTENKbGVIQnZjblJ6TG1ZZ1BTQnlaWEYxYVhKbEtDY3VMMTkzYTNNbktUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDNkcmN5MWxlSFF1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURRNVhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015SXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JuWmhjaUFrWVhRZ0lEMGdjbVZ4ZFdseVpTZ25MaTlmYzNSeWFXNW5MV0YwSnlrb2RISjFaU2s3WEc1Y2JpOHZJREl4TGpFdU15NHlOeUJUZEhKcGJtY3VjSEp2ZEc5MGVYQmxXMEJBYVhSbGNtRjBiM0pkS0NsY2JuSmxjWFZwY21Vb0p5NHZYMmwwWlhJdFpHVm1hVzVsSnlrb1UzUnlhVzVuTENBblUzUnlhVzVuSnl3Z1puVnVZM1JwYjI0b2FYUmxjbUYwWldRcGUxeHVJQ0IwYUdsekxsOTBJRDBnVTNSeWFXNW5LR2wwWlhKaGRHVmtLVHNnTHk4Z2RHRnlaMlYwWEc0Z0lIUm9hWE11WDJrZ1BTQXdPeUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJ1WlhoMElHbHVaR1Y0WEc0dkx5QXlNUzR4TGpVdU1pNHhJQ1ZUZEhKcGJtZEpkR1Z5WVhSdmNsQnliM1J2ZEhsd1pTVXVibVY0ZENncFhHNTlMQ0JtZFc1amRHbHZiaWdwZTF4dUlDQjJZWElnVHlBZ0lDQWdQU0IwYUdsekxsOTBYRzRnSUNBZ0xDQnBibVJsZUNBOUlIUm9hWE11WDJsY2JpQWdJQ0FzSUhCdmFXNTBPMXh1SUNCcFppaHBibVJsZUNBK1BTQlBMbXhsYm1kMGFDbHlaWFIxY200Z2UzWmhiSFZsT2lCMWJtUmxabWx1WldRc0lHUnZibVU2SUhSeWRXVjlPMXh1SUNCd2IybHVkQ0E5SUNSaGRDaFBMQ0JwYm1SbGVDazdYRzRnSUhSb2FYTXVYMmtnS3owZ2NHOXBiblF1YkdWdVozUm9PMXh1SUNCeVpYUjFjbTRnZTNaaGJIVmxPaUJ3YjJsdWRDd2daRzl1WlRvZ1ptRnNjMlY5TzF4dWZTazdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDJWek5pNXpkSEpwYm1jdWFYUmxjbUYwYjNJdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlEVXdYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVaUxDSnlaWEYxYVhKbEtDY3VMMlZ6Tmk1aGNuSmhlUzVwZEdWeVlYUnZjaWNwTzF4dWRtRnlJR2RzYjJKaGJDQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTluYkc5aVlXd25LVnh1SUNBc0lHaHBaR1VnSUNBZ0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOW9hV1JsSnlsY2JpQWdMQ0JKZEdWeVlYUnZjbk1nSUNBZ0lEMGdjbVZ4ZFdseVpTZ25MaTlmYVhSbGNtRjBiM0p6SnlsY2JpQWdMQ0JVVDE5VFZGSkpUa2RmVkVGSElEMGdjbVZ4ZFdseVpTZ25MaTlmZDJ0ekp5a29KM1J2VTNSeWFXNW5WR0ZuSnlrN1hHNWNibVp2Y2loMllYSWdZMjlzYkdWamRHbHZibk1nUFNCYkowNXZaR1ZNYVhOMEp5d2dKMFJQVFZSdmEyVnVUR2x6ZENjc0lDZE5aV1JwWVV4cGMzUW5MQ0FuVTNSNWJHVlRhR1ZsZEV4cGMzUW5MQ0FuUTFOVFVuVnNaVXhwYzNRblhTd2dhU0E5SURBN0lHa2dQQ0ExT3lCcEt5c3BlMXh1SUNCMllYSWdUa0ZOUlNBZ0lDQWdJQ0E5SUdOdmJHeGxZM1JwYjI1elcybGRYRzRnSUNBZ0xDQkRiMnhzWldOMGFXOXVJRDBnWjJ4dlltRnNXMDVCVFVWZFhHNGdJQ0FnTENCd2NtOTBieUFnSUNBZ0lEMGdRMjlzYkdWamRHbHZiaUFtSmlCRGIyeHNaV04wYVc5dUxuQnliM1J2ZEhsd1pUdGNiaUFnYVdZb2NISnZkRzhnSmlZZ0lYQnliM1J2VzFSUFgxTlVVa2xPUjE5VVFVZGRLV2hwWkdVb2NISnZkRzhzSUZSUFgxTlVVa2xPUjE5VVFVY3NJRTVCVFVVcE8xeHVJQ0JKZEdWeVlYUnZjbk5iVGtGTlJWMGdQU0JKZEdWeVlYUnZjbk11UVhKeVlYazdYRzU5WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwzZGxZaTVrYjIwdWFYUmxjbUZpYkdVdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlEVXhYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVaUxDSjJZWElnWTI5eVpTQWdQU0J5WlhGMWFYSmxLQ2N1TGk4dUxpOXRiMlIxYkdWekwxOWpiM0psSnlsY2JpQWdMQ0FrU2xOUFRpQTlJR052Y21VdVNsTlBUaUI4ZkNBb1kyOXlaUzVLVTA5T0lEMGdlM04wY21sdVoybG1lVG9nU2xOUFRpNXpkSEpwYm1kcFpubDlLVHRjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRnYzNSeWFXNW5hV1o1S0dsMEtYc2dMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRiR2x1WlNCdWJ5MTFiblZ6WldRdGRtRnljMXh1SUNCeVpYUjFjbTRnSkVwVFQwNHVjM1J5YVc1bmFXWjVMbUZ3Y0d4NUtDUktVMDlPTENCaGNtZDFiV1Z1ZEhNcE8xeHVmVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyWnVMMnB6YjI0dmMzUnlhVzVuYVdaNUxtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQTFNMXh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1nTkNBMUlEWWlMQ0l2THlCblpYUjBhVzVuSUhSaFp5Qm1jbTl0SURFNUxqRXVNeTQySUU5aWFtVmpkQzV3Y205MGIzUjVjR1V1ZEc5VGRISnBibWNvS1Z4dWRtRnlJR052WmlBOUlISmxjWFZwY21Vb0p5NHZYMk52WmljcFhHNGdJQ3dnVkVGSElEMGdjbVZ4ZFdseVpTZ25MaTlmZDJ0ekp5a29KM1J2VTNSeWFXNW5WR0ZuSnlsY2JpQWdMeThnUlZNeklIZHliMjVuSUdobGNtVmNiaUFnTENCQlVrY2dQU0JqYjJZb1puVnVZM1JwYjI0b0tYc2djbVYwZFhKdUlHRnlaM1Z0Wlc1MGN6c2dmU2dwS1NBOVBTQW5RWEpuZFcxbGJuUnpKenRjYmx4dUx5OGdabUZzYkdKaFkyc2dabTl5SUVsRk1URWdVMk55YVhCMElFRmpZMlZ6Y3lCRVpXNXBaV1FnWlhKeWIzSmNiblpoY2lCMGNubEhaWFFnUFNCbWRXNWpkR2x2YmlocGRDd2dhMlY1S1h0Y2JpQWdkSEo1SUh0Y2JpQWdJQ0J5WlhSMWNtNGdhWFJiYTJWNVhUdGNiaUFnZlNCallYUmphQ2hsS1hzZ0x5b2daVzF3ZEhrZ0tpOGdmVnh1ZlR0Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpaHBkQ2w3WEc0Z0lIWmhjaUJQTENCVUxDQkNPMXh1SUNCeVpYUjFjbTRnYVhRZ1BUMDlJSFZ1WkdWbWFXNWxaQ0EvSUNkVmJtUmxabWx1WldRbklEb2dhWFFnUFQwOUlHNTFiR3dnUHlBblRuVnNiQ2RjYmlBZ0lDQXZMeUJBUUhSdlUzUnlhVzVuVkdGbklHTmhjMlZjYmlBZ0lDQTZJSFI1Y0dWdlppQW9WQ0E5SUhSeWVVZGxkQ2hQSUQwZ1QySnFaV04wS0dsMEtTd2dWRUZIS1NrZ1BUMGdKM04wY21sdVp5Y2dQeUJVWEc0Z0lDQWdMeThnWW5WcGJIUnBibFJoWnlCallYTmxYRzRnSUNBZ09pQkJVa2NnUHlCamIyWW9UeWxjYmlBZ0lDQXZMeUJGVXpNZ1lYSm5kVzFsYm5SeklHWmhiR3hpWVdOclhHNGdJQ0FnT2lBb1FpQTlJR052WmloUEtTa2dQVDBnSjA5aWFtVmpkQ2NnSmlZZ2RIbHdaVzltSUU4dVkyRnNiR1ZsSUQwOUlDZG1kVzVqZEdsdmJpY2dQeUFuUVhKbmRXMWxiblJ6SnlBNklFSTdYRzU5TzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZZMnhoYzNOdlppNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdOVFZjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdOQ0ExSWl3aUx5OGdabUZzYkdKaFkyc2dabTl5SUc1dmJpMWhjbkpoZVMxc2FXdGxJRVZUTXlCaGJtUWdibTl1TFdWdWRXMWxjbUZpYkdVZ2IyeGtJRlk0SUhOMGNtbHVaM05jYm5aaGNpQmpiMllnUFNCeVpYRjFhWEpsS0NjdUwxOWpiMlluS1R0Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1QySnFaV04wS0NkNkp5a3VjSEp2Y0dWeWRIbEpjMFZ1ZFcxbGNtRmliR1VvTUNrZ1B5QlBZbXBsWTNRZ09pQm1kVzVqZEdsdmJpaHBkQ2w3WEc0Z0lISmxkSFZ5YmlCamIyWW9hWFFwSUQwOUlDZFRkSEpwYm1jbklEOGdhWFF1YzNCc2FYUW9KeWNwSURvZ1QySnFaV04wS0dsMEtUdGNibjA3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXBiMkpxWldOMExtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQTFObHh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1nTkNBMUlpd2lkbUZ5SUhCSlJTQWdJQ0FnSUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmIySnFaV04wTFhCcFpTY3BYRzRnSUN3Z1kzSmxZWFJsUkdWell5QWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOXdjbTl3WlhKMGVTMWtaWE5qSnlsY2JpQWdMQ0IwYjBsUFltcGxZM1FnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDNSdkxXbHZZbXBsWTNRbktWeHVJQ0FzSUhSdlVISnBiV2wwYVhabElDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmRHOHRjSEpwYldsMGFYWmxKeWxjYmlBZ0xDQm9ZWE1nSUNBZ0lDQWdJQ0FnSUNBOUlISmxjWFZwY21Vb0p5NHZYMmhoY3ljcFhHNGdJQ3dnU1VVNFgwUlBUVjlFUlVaSlRrVWdQU0J5WlhGMWFYSmxLQ2N1TDE5cFpUZ3RaRzl0TFdSbFptbHVaU2NwWEc0Z0lDd2daMDlRUkNBZ0lDQWdJQ0FnSUNBZ1BTQlBZbXBsWTNRdVoyVjBUM2R1VUhKdmNHVnlkSGxFWlhOamNtbHdkRzl5TzF4dVhHNWxlSEJ2Y25SekxtWWdQU0J5WlhGMWFYSmxLQ2N1TDE5a1pYTmpjbWx3ZEc5eWN5Y3BJRDhnWjA5UVJDQTZJR1oxYm1OMGFXOXVJR2RsZEU5M2JsQnliM0JsY25SNVJHVnpZM0pwY0hSdmNpaFBMQ0JRS1h0Y2JpQWdUeUE5SUhSdlNVOWlhbVZqZENoUEtUdGNiaUFnVUNBOUlIUnZVSEpwYldsMGFYWmxLRkFzSUhSeWRXVXBPMXh1SUNCcFppaEpSVGhmUkU5TlgwUkZSa2xPUlNsMGNua2dlMXh1SUNBZ0lISmxkSFZ5YmlCblQxQkVLRThzSUZBcE8xeHVJQ0I5SUdOaGRHTm9LR1VwZXlBdktpQmxiWEIwZVNBcUx5QjlYRzRnSUdsbUtHaGhjeWhQTENCUUtTbHlaWFIxY200Z1kzSmxZWFJsUkdWell5Z2hjRWxGTG1ZdVkyRnNiQ2hQTENCUUtTd2dUMXRRWFNrN1hHNTlPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZmIySnFaV04wTFdkdmNHUXVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJRFUzWEc0dkx5QnRiMlIxYkdVZ1kyaDFibXR6SUQwZ01DQXhJRElnTXlJc0ltVjRjRzl5ZEhNdVppQTlJRTlpYW1WamRDNW5aWFJQZDI1UWNtOXdaWEowZVZONWJXSnZiSE03WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXZZbXBsWTNRdFoyOXdjeTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTlRoY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklpd2liVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQjdJRndpWkdWbVlYVnNkRndpT2lCeVpYRjFhWEpsS0Z3aVkyOXlaUzFxY3k5c2FXSnlZWEo1TDJadUwyOWlhbVZqZEM5clpYbHpYQ0lwTENCZlgyVnpUVzlrZFd4bE9pQjBjblZsSUgwN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJKaFltVnNMWEoxYm5ScGJXVXZZMjl5WlMxcWN5OXZZbXBsWTNRdmEyVjVjeTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTlRsY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJRElnTkNBMUlpd2lYQ0oxYzJVZ2MzUnlhV04wWENJN1hHNWNibVY0Y0c5eWRITXVYMTlsYzAxdlpIVnNaU0E5SUhSeWRXVTdYRzVjYm5aaGNpQmZhWFJsY21GMGIzSWdQU0J5WlhGMWFYSmxLRndpTGk0dlkyOXlaUzFxY3k5emVXMWliMnd2YVhSbGNtRjBiM0pjSWlrN1hHNWNiblpoY2lCZmFYUmxjbUYwYjNJeUlEMGdYMmx1ZEdWeWIzQlNaWEYxYVhKbFJHVm1ZWFZzZENoZmFYUmxjbUYwYjNJcE8xeHVYRzUyWVhJZ1gzTjViV0p2YkNBOUlISmxjWFZwY21Vb1hDSXVMaTlqYjNKbExXcHpMM041YldKdmJGd2lLVHRjYmx4dWRtRnlJRjl6ZVcxaWIyd3lJRDBnWDJsdWRHVnliM0JTWlhGMWFYSmxSR1ZtWVhWc2RDaGZjM2x0WW05c0tUdGNibHh1ZG1GeUlGOTBlWEJsYjJZZ1BTQjBlWEJsYjJZZ1gzTjViV0p2YkRJdVpHVm1ZWFZzZENBOVBUMGdYQ0ptZFc1amRHbHZibHdpSUNZbUlIUjVjR1Z2WmlCZmFYUmxjbUYwYjNJeUxtUmxabUYxYkhRZ1BUMDlJRndpYzNsdFltOXNYQ0lnUHlCbWRXNWpkR2x2YmlBb2IySnFLU0I3SUhKbGRIVnliaUIwZVhCbGIyWWdiMkpxT3lCOUlEb2dablZ1WTNScGIyNGdLRzlpYWlrZ2V5QnlaWFIxY200Z2IySnFJQ1ltSUhSNWNHVnZaaUJmYzNsdFltOXNNaTVrWldaaGRXeDBJRDA5UFNCY0ltWjFibU4wYVc5dVhDSWdKaVlnYjJKcUxtTnZibk4wY25WamRHOXlJRDA5UFNCZmMzbHRZbTlzTWk1a1pXWmhkV3gwSUNZbUlHOWlhaUFoUFQwZ1gzTjViV0p2YkRJdVpHVm1ZWFZzZEM1d2NtOTBiM1I1Y0dVZ1B5QmNJbk41YldKdmJGd2lJRG9nZEhsd1pXOW1JRzlpYWpzZ2ZUdGNibHh1Wm5WdVkzUnBiMjRnWDJsdWRHVnliM0JTWlhGMWFYSmxSR1ZtWVhWc2RDaHZZbW9wSUhzZ2NtVjBkWEp1SUc5aWFpQW1KaUJ2WW1vdVgxOWxjMDF2WkhWc1pTQS9JRzlpYWlBNklIc2daR1ZtWVhWc2REb2diMkpxSUgwN0lIMWNibHh1Wlhod2IzSjBjeTVrWldaaGRXeDBJRDBnZEhsd1pXOW1JRjl6ZVcxaWIyd3lMbVJsWm1GMWJIUWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpQW1KaUJmZEhsd1pXOW1LRjlwZEdWeVlYUnZjakl1WkdWbVlYVnNkQ2tnUFQwOUlGd2ljM2x0WW05c1hDSWdQeUJtZFc1amRHbHZiaUFvYjJKcUtTQjdYRzRnSUhKbGRIVnliaUIwZVhCbGIyWWdiMkpxSUQwOVBTQmNJblZ1WkdWbWFXNWxaRndpSUQ4Z1hDSjFibVJsWm1sdVpXUmNJaUE2SUY5MGVYQmxiMllvYjJKcUtUdGNibjBnT2lCbWRXNWpkR2x2YmlBb2IySnFLU0I3WEc0Z0lISmxkSFZ5YmlCdlltb2dKaVlnZEhsd1pXOW1JRjl6ZVcxaWIyd3lMbVJsWm1GMWJIUWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpQW1KaUJ2WW1vdVkyOXVjM1J5ZFdOMGIzSWdQVDA5SUY5emVXMWliMnd5TG1SbFptRjFiSFFnSmlZZ2IySnFJQ0U5UFNCZmMzbHRZbTlzTWk1a1pXWmhkV3gwTG5CeWIzUnZkSGx3WlNBL0lGd2ljM2x0WW05c1hDSWdPaUIwZVhCbGIyWWdiMkpxSUQwOVBTQmNJblZ1WkdWbWFXNWxaRndpSUQ4Z1hDSjFibVJsWm1sdVpXUmNJaUE2SUY5MGVYQmxiMllvYjJKcUtUdGNibjA3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMkpoWW1Wc0xYSjFiblJwYldVdmFHVnNjR1Z5Y3k5MGVYQmxiMll1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURZd1hHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015SXNJbTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNG9LWHNnTHlvZ1pXMXdkSGtnS2k4Z2ZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDJGa1pDMTBieTExYm5OamIzQmhZbXhsY3k1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ05qRmNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SURFZ01pQXpJRFFnTlNJc0lpOHZJR1poYkhObElDMCtJRUZ5Y21GNUkybHVaR1Y0VDJaY2JpOHZJSFJ5ZFdVZ0lDMCtJRUZ5Y21GNUkybHVZMngxWkdWelhHNTJZWElnZEc5SlQySnFaV04wSUQwZ2NtVnhkV2x5WlNnbkxpOWZkRzh0YVc5aWFtVmpkQ2NwWEc0Z0lDd2dkRzlNWlc1bmRHZ2dJRDBnY21WeGRXbHlaU2duTGk5ZmRHOHRiR1Z1WjNSb0p5bGNiaUFnTENCMGIwbHVaR1Y0SUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTkwYnkxcGJtUmxlQ2NwTzF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmloSlUxOUpUa05NVlVSRlV5bDdYRzRnSUhKbGRIVnliaUJtZFc1amRHbHZiaWdrZEdocGN5d2daV3dzSUdaeWIyMUpibVJsZUNsN1hHNGdJQ0FnZG1GeUlFOGdJQ0FnSUNBOUlIUnZTVTlpYW1WamRDZ2tkR2hwY3lsY2JpQWdJQ0FnSUN3Z2JHVnVaM1JvSUQwZ2RHOU1aVzVuZEdnb1R5NXNaVzVuZEdncFhHNGdJQ0FnSUNBc0lHbHVaR1Y0SUNBOUlIUnZTVzVrWlhnb1puSnZiVWx1WkdWNExDQnNaVzVuZEdncFhHNGdJQ0FnSUNBc0lIWmhiSFZsTzF4dUlDQWdJQzh2SUVGeWNtRjVJMmx1WTJ4MVpHVnpJSFZ6WlhNZ1UyRnRaVlpoYkhWbFdtVnlieUJsY1hWaGJHbDBlU0JoYkdkdmNtbDBhRzFjYmlBZ0lDQnBaaWhKVTE5SlRrTk1WVVJGVXlBbUppQmxiQ0FoUFNCbGJDbDNhR2xzWlNoc1pXNW5kR2dnUGlCcGJtUmxlQ2w3WEc0Z0lDQWdJQ0IyWVd4MVpTQTlJRTliYVc1a1pYZ3JLMTA3WEc0Z0lDQWdJQ0JwWmloMllXeDFaU0FoUFNCMllXeDFaU2x5WlhSMWNtNGdkSEoxWlR0Y2JpQWdJQ0F2THlCQmNuSmhlU04wYjBsdVpHVjRJR2xuYm05eVpYTWdhRzlzWlhNc0lFRnljbUY1STJsdVkyeDFaR1Z6SUMwZ2JtOTBYRzRnSUNBZ2ZTQmxiSE5sSUdadmNpZzdiR1Z1WjNSb0lENGdhVzVrWlhnN0lHbHVaR1Y0S3lzcGFXWW9TVk5mU1U1RFRGVkVSVk1nZkh3Z2FXNWtaWGdnYVc0Z1R5bDdYRzRnSUNBZ0lDQnBaaWhQVzJsdVpHVjRYU0E5UFQwZ1pXd3BjbVYwZFhKdUlFbFRYMGxPUTB4VlJFVlRJSHg4SUdsdVpHVjRJSHg4SURBN1hHNGdJQ0FnZlNCeVpYUjFjbTRnSVVsVFgwbE9RMHhWUkVWVElDWW1JQzB4TzF4dUlDQjlPMXh1ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMkZ5Y21GNUxXbHVZMngxWkdWekxtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQTJNbHh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQXlJRE1nTkNBMUlpd2lKM1Z6WlNCemRISnBZM1FuTzF4dWRtRnlJR055WldGMFpTQWdJQ0FnSUNBZ0lEMGdjbVZ4ZFdseVpTZ25MaTlmYjJKcVpXTjBMV055WldGMFpTY3BYRzRnSUN3Z1pHVnpZM0pwY0hSdmNpQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOXdjbTl3WlhKMGVTMWtaWE5qSnlsY2JpQWdMQ0J6WlhSVWIxTjBjbWx1WjFSaFp5QTlJSEpsY1hWcGNtVW9KeTR2WDNObGRDMTBieTF6ZEhKcGJtY3RkR0ZuSnlsY2JpQWdMQ0JKZEdWeVlYUnZjbEJ5YjNSdmRIbHdaU0E5SUh0OU8xeHVYRzR2THlBeU5TNHhMakl1TVM0eElDVkpkR1Z5WVhSdmNsQnliM1J2ZEhsd1pTVmJRRUJwZEdWeVlYUnZjbDBvS1Z4dWNtVnhkV2x5WlNnbkxpOWZhR2xrWlNjcEtFbDBaWEpoZEc5eVVISnZkRzkwZVhCbExDQnlaWEYxYVhKbEtDY3VMMTkzYTNNbktTZ25hWFJsY21GMGIzSW5LU3dnWm5WdVkzUnBiMjRvS1hzZ2NtVjBkWEp1SUhSb2FYTTdJSDBwTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUtFTnZibk4wY25WamRHOXlMQ0JPUVUxRkxDQnVaWGgwS1h0Y2JpQWdRMjl1YzNSeWRXTjBiM0l1Y0hKdmRHOTBlWEJsSUQwZ1kzSmxZWFJsS0VsMFpYSmhkRzl5VUhKdmRHOTBlWEJsTENCN2JtVjRkRG9nWkdWelkzSnBjSFJ2Y2lneExDQnVaWGgwS1gwcE8xeHVJQ0J6WlhSVWIxTjBjbWx1WjFSaFp5aERiMjV6ZEhKMVkzUnZjaXdnVGtGTlJTQXJJQ2NnU1hSbGNtRjBiM0luS1R0Y2JuMDdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5cGRHVnlMV055WldGMFpTNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdOak5jYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SURRZ05TSXNJbTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNG9aRzl1WlN3Z2RtRnNkV1VwZTF4dUlDQnlaWFIxY200Z2UzWmhiSFZsT2lCMllXeDFaU3dnWkc5dVpUb2dJU0ZrYjI1bGZUdGNibjA3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXBkR1Z5TFhOMFpYQXVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJRFkwWEc0dkx5QnRiMlIxYkdVZ1kyaDFibXR6SUQwZ01DQXhJRElnTXlBMElEVWlMQ0oyWVhJZ1pGQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTl2WW1wbFkzUXRaSEFuS1Z4dUlDQXNJR0Z1VDJKcVpXTjBJRDBnY21WeGRXbHlaU2duTGk5ZllXNHRiMkpxWldOMEp5bGNiaUFnTENCblpYUkxaWGx6SUNBOUlISmxjWFZwY21Vb0p5NHZYMjlpYW1WamRDMXJaWGx6SnlrN1hHNWNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdjbVZ4ZFdseVpTZ25MaTlmWkdWelkzSnBjSFJ2Y25NbktTQS9JRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowYVdWeklEb2dablZ1WTNScGIyNGdaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aFBMQ0JRY205d1pYSjBhV1Z6S1h0Y2JpQWdZVzVQWW1wbFkzUW9UeWs3WEc0Z0lIWmhjaUJyWlhseklDQWdQU0JuWlhSTFpYbHpLRkJ5YjNCbGNuUnBaWE1wWEc0Z0lDQWdMQ0JzWlc1bmRHZ2dQU0JyWlhsekxteGxibWQwYUZ4dUlDQWdJQ3dnYVNBOUlEQmNiaUFnSUNBc0lGQTdYRzRnSUhkb2FXeGxLR3hsYm1kMGFDQStJR2twWkZBdVppaFBMQ0JRSUQwZ2EyVjVjMXRwS3l0ZExDQlFjbTl3WlhKMGFXVnpXMUJkS1R0Y2JpQWdjbVYwZFhKdUlFODdYRzU5TzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZiMkpxWldOMExXUndjeTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTmpWY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklEUWdOU0lzSWk4dklERTVMakV1TWk0M0lDOGdNVFV1TWk0ekxqUWdUMkpxWldOMExtZGxkRTkzYmxCeWIzQmxjblI1VG1GdFpYTW9UeWxjYm5aaGNpQWthMlY1Y3lBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmIySnFaV04wTFd0bGVYTXRhVzUwWlhKdVlXd25LVnh1SUNBc0lHaHBaR1JsYmt0bGVYTWdQU0J5WlhGMWFYSmxLQ2N1TDE5bGJuVnRMV0oxWnkxclpYbHpKeWt1WTI5dVkyRjBLQ2RzWlc1bmRHZ25MQ0FuY0hKdmRHOTBlWEJsSnlrN1hHNWNibVY0Y0c5eWRITXVaaUE5SUU5aWFtVmpkQzVuWlhSUGQyNVFjbTl3WlhKMGVVNWhiV1Z6SUh4OElHWjFibU4wYVc5dUlHZGxkRTkzYmxCeWIzQmxjblI1VG1GdFpYTW9UeWw3WEc0Z0lISmxkSFZ5YmlBa2EyVjVjeWhQTENCb2FXUmtaVzVMWlhsektUdGNibjA3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXZZbXBsWTNRdFoyOXdiaTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTmpaY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklpd2lkbUZ5SUhSdlNXNTBaV2RsY2lBOUlISmxjWFZwY21Vb0p5NHZYM1J2TFdsdWRHVm5aWEluS1Z4dUlDQXNJR1JsWm1sdVpXUWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgyUmxabWx1WldRbktUdGNiaTh2SUhSeWRXVWdJQzArSUZOMGNtbHVaeU5oZEZ4dUx5OGdabUZzYzJVZ0xUNGdVM1J5YVc1bkkyTnZaR1ZRYjJsdWRFRjBYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVLRlJQWDFOVVVrbE9SeWw3WEc0Z0lISmxkSFZ5YmlCbWRXNWpkR2x2YmloMGFHRjBMQ0J3YjNNcGUxeHVJQ0FnSUhaaGNpQnpJRDBnVTNSeWFXNW5LR1JsWm1sdVpXUW9kR2hoZENrcFhHNGdJQ0FnSUNBc0lHa2dQU0IwYjBsdWRHVm5aWElvY0c5ektWeHVJQ0FnSUNBZ0xDQnNJRDBnY3k1c1pXNW5kR2hjYmlBZ0lDQWdJQ3dnWVN3Z1lqdGNiaUFnSUNCcFppaHBJRHdnTUNCOGZDQnBJRDQ5SUd3cGNtVjBkWEp1SUZSUFgxTlVVa2xPUnlBL0lDY25JRG9nZFc1a1pXWnBibVZrTzF4dUlDQWdJR0VnUFNCekxtTm9ZWEpEYjJSbFFYUW9hU2s3WEc0Z0lDQWdjbVYwZFhKdUlHRWdQQ0F3ZUdRNE1EQWdmSHdnWVNBK0lEQjRaR0ptWmlCOGZDQnBJQ3NnTVNBOVBUMGdiQ0I4ZkNBb1lpQTlJSE11WTJoaGNrTnZaR1ZCZENocElDc2dNU2twSUR3Z01IaGtZekF3SUh4OElHSWdQaUF3ZUdSbVptWmNiaUFnSUNBZ0lEOGdWRTlmVTFSU1NVNUhJRDhnY3k1amFHRnlRWFFvYVNrZ09pQmhYRzRnSUNBZ0lDQTZJRlJQWDFOVVVrbE9SeUEvSUhNdWMyeHBZMlVvYVN3Z2FTQXJJRElwSURvZ0tHRWdMU0F3ZUdRNE1EQWdQRHdnTVRBcElDc2dLR0lnTFNBd2VHUmpNREFwSUNzZ01IZ3hNREF3TUR0Y2JpQWdmVHRjYm4wN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTl6ZEhKcGJtY3RZWFF1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURZM1hHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015QTBJRFVpTENKMllYSWdZM1I0SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZlkzUjRKeWxjYmlBZ0xDQnBiblp2YTJVZ0lDQWdJQ0FnSUNBZ0lDQWdQU0J5WlhGMWFYSmxLQ2N1TDE5cGJuWnZhMlVuS1Z4dUlDQXNJR2gwYld3Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgyaDBiV3duS1Z4dUlDQXNJR05sYkNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgyUnZiUzFqY21WaGRHVW5LVnh1SUNBc0lHZHNiMkpoYkNBZ0lDQWdJQ0FnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJkc2IySmhiQ2NwWEc0Z0lDd2djSEp2WTJWemN5QWdJQ0FnSUNBZ0lDQWdJRDBnWjJ4dlltRnNMbkJ5YjJObGMzTmNiaUFnTENCelpYUlVZWE5ySUNBZ0lDQWdJQ0FnSUNBZ1BTQm5iRzlpWVd3dWMyVjBTVzF0WldScFlYUmxYRzRnSUN3Z1kyeGxZWEpVWVhOcklDQWdJQ0FnSUNBZ0lEMGdaMnh2WW1Gc0xtTnNaV0Z5U1cxdFpXUnBZWFJsWEc0Z0lDd2dUV1Z6YzJGblpVTm9ZVzV1Wld3Z0lDQWdJRDBnWjJ4dlltRnNMazFsYzNOaFoyVkRhR0Z1Ym1Wc1hHNGdJQ3dnWTI5MWJuUmxjaUFnSUNBZ0lDQWdJQ0FnSUQwZ01GeHVJQ0FzSUhGMVpYVmxJQ0FnSUNBZ0lDQWdJQ0FnSUNBOUlIdDlYRzRnSUN3Z1QwNVNSVUZFV1ZOVVFWUkZRMGhCVGtkRklEMGdKMjl1Y21WaFpIbHpkR0YwWldOb1lXNW5aU2RjYmlBZ0xDQmtaV1psY2l3Z1kyaGhibTVsYkN3Z2NHOXlkRHRjYm5aaGNpQnlkVzRnUFNCbWRXNWpkR2x2YmlncGUxeHVJQ0IyWVhJZ2FXUWdQU0FyZEdocGN6dGNiaUFnYVdZb2NYVmxkV1V1YUdGelQzZHVVSEp2Y0dWeWRIa29hV1FwS1h0Y2JpQWdJQ0IyWVhJZ1ptNGdQU0J4ZFdWMVpWdHBaRjA3WEc0Z0lDQWdaR1ZzWlhSbElIRjFaWFZsVzJsa1hUdGNiaUFnSUNCbWJpZ3BPMXh1SUNCOVhHNTlPMXh1ZG1GeUlHeHBjM1JsYm1WeUlEMGdablZ1WTNScGIyNG9aWFpsYm5RcGUxeHVJQ0J5ZFc0dVkyRnNiQ2hsZG1WdWRDNWtZWFJoS1R0Y2JuMDdYRzR2THlCT2IyUmxMbXB6SURBdU9Tc2dKaUJKUlRFd0t5Qm9ZWE1nYzJWMFNXMXRaV1JwWVhSbExDQnZkR2hsY25kcGMyVTZYRzVwWmlnaGMyVjBWR0Z6YXlCOGZDQWhZMnhsWVhKVVlYTnJLWHRjYmlBZ2MyVjBWR0Z6YXlBOUlHWjFibU4wYVc5dUlITmxkRWx0YldWa2FXRjBaU2htYmlsN1hHNGdJQ0FnZG1GeUlHRnlaM01nUFNCYlhTd2dhU0E5SURFN1hHNGdJQ0FnZDJocGJHVW9ZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQStJR2twWVhKbmN5NXdkWE5vS0dGeVozVnRaVzUwYzF0cEt5dGRLVHRjYmlBZ0lDQnhkV1YxWlZzcksyTnZkVzUwWlhKZElEMGdablZ1WTNScGIyNG9LWHRjYmlBZ0lDQWdJR2x1ZG05clpTaDBlWEJsYjJZZ1ptNGdQVDBnSjJaMWJtTjBhVzl1SnlBL0lHWnVJRG9nUm5WdVkzUnBiMjRvWm00cExDQmhjbWR6S1R0Y2JpQWdJQ0I5TzF4dUlDQWdJR1JsWm1WeUtHTnZkVzUwWlhJcE8xeHVJQ0FnSUhKbGRIVnliaUJqYjNWdWRHVnlPMXh1SUNCOU8xeHVJQ0JqYkdWaGNsUmhjMnNnUFNCbWRXNWpkR2x2YmlCamJHVmhja2x0YldWa2FXRjBaU2hwWkNsN1hHNGdJQ0FnWkdWc1pYUmxJSEYxWlhWbFcybGtYVHRjYmlBZ2ZUdGNiaUFnTHk4Z1RtOWtaUzVxY3lBd0xqZ3RYRzRnSUdsbUtISmxjWFZwY21Vb0p5NHZYMk52WmljcEtIQnliMk5sYzNNcElEMDlJQ2R3Y205alpYTnpKeWw3WEc0Z0lDQWdaR1ZtWlhJZ1BTQm1kVzVqZEdsdmJpaHBaQ2w3WEc0Z0lDQWdJQ0J3Y205alpYTnpMbTVsZUhSVWFXTnJLR04wZUNoeWRXNHNJR2xrTENBeEtTazdYRzRnSUNBZ2ZUdGNiaUFnTHk4Z1FuSnZkM05sY25NZ2QybDBhQ0JOWlhOellXZGxRMmhoYm01bGJDd2dhVzVqYkhWa1pYTWdWMlZpVjI5eWEyVnljMXh1SUNCOUlHVnNjMlVnYVdZb1RXVnpjMkZuWlVOb1lXNXVaV3dwZTF4dUlDQWdJR05vWVc1dVpXd2dQU0J1WlhjZ1RXVnpjMkZuWlVOb1lXNXVaV3c3WEc0Z0lDQWdjRzl5ZENBZ0lDQTlJR05vWVc1dVpXd3VjRzl5ZERJN1hHNGdJQ0FnWTJoaGJtNWxiQzV3YjNKME1TNXZibTFsYzNOaFoyVWdQU0JzYVhOMFpXNWxjanRjYmlBZ0lDQmtaV1psY2lBOUlHTjBlQ2h3YjNKMExuQnZjM1JOWlhOellXZGxMQ0J3YjNKMExDQXhLVHRjYmlBZ0x5OGdRbkp2ZDNObGNuTWdkMmwwYUNCd2IzTjBUV1Z6YzJGblpTd2djMnRwY0NCWFpXSlhiM0pyWlhKelhHNGdJQzh2SUVsRk9DQm9ZWE1nY0c5emRFMWxjM05oWjJVc0lHSjFkQ0JwZENkeklITjVibU1nSmlCMGVYQmxiMllnYVhSeklIQnZjM1JOWlhOellXZGxJR2x6SUNkdlltcGxZM1FuWEc0Z0lIMGdaV3h6WlNCcFppaG5iRzlpWVd3dVlXUmtSWFpsYm5STWFYTjBaVzVsY2lBbUppQjBlWEJsYjJZZ2NHOXpkRTFsYzNOaFoyVWdQVDBnSjJaMWJtTjBhVzl1SnlBbUppQWhaMnh2WW1Gc0xtbHRjRzl5ZEZOamNtbHdkSE1wZTF4dUlDQWdJR1JsWm1WeUlEMGdablZ1WTNScGIyNG9hV1FwZTF4dUlDQWdJQ0FnWjJ4dlltRnNMbkJ2YzNSTlpYTnpZV2RsS0dsa0lDc2dKeWNzSUNjcUp5azdYRzRnSUNBZ2ZUdGNiaUFnSUNCbmJHOWlZV3d1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduYldWemMyRm5aU2NzSUd4cGMzUmxibVZ5TENCbVlXeHpaU2s3WEc0Z0lDOHZJRWxGT0MxY2JpQWdmU0JsYkhObElHbG1LRTlPVWtWQlJGbFRWRUZVUlVOSVFVNUhSU0JwYmlCalpXd29KM05qY21sd2RDY3BLWHRjYmlBZ0lDQmtaV1psY2lBOUlHWjFibU4wYVc5dUtHbGtLWHRjYmlBZ0lDQWdJR2gwYld3dVlYQndaVzVrUTJocGJHUW9ZMlZzS0NkelkzSnBjSFFuS1NsYlQwNVNSVUZFV1ZOVVFWUkZRMGhCVGtkRlhTQTlJR1oxYm1OMGFXOXVLQ2w3WEc0Z0lDQWdJQ0FnSUdoMGJXd3VjbVZ0YjNabFEyaHBiR1FvZEdocGN5azdYRzRnSUNBZ0lDQWdJSEoxYmk1allXeHNLR2xrS1R0Y2JpQWdJQ0FnSUgwN1hHNGdJQ0FnZlR0Y2JpQWdMeThnVW1WemRDQnZiR1FnWW5KdmQzTmxjbk5jYmlBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0JrWldabGNpQTlJR1oxYm1OMGFXOXVLR2xrS1h0Y2JpQWdJQ0FnSUhObGRGUnBiV1Z2ZFhRb1kzUjRLSEoxYml3Z2FXUXNJREVwTENBd0tUdGNiaUFnSUNCOU8xeHVJQ0I5WEc1OVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlIdGNiaUFnYzJWME9pQWdJSE5sZEZSaGMyc3NYRzRnSUdOc1pXRnlPaUJqYkdWaGNsUmhjMnRjYm4wN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTkwWVhOckxtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQTJPRnh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQTBJRFVpTENKMllYSWdkRzlKYm5SbFoyVnlJRDBnY21WeGRXbHlaU2duTGk5ZmRHOHRhVzUwWldkbGNpY3BYRzRnSUN3Z2JXRjRJQ0FnSUNBZ0lEMGdUV0YwYUM1dFlYaGNiaUFnTENCdGFXNGdJQ0FnSUNBZ1BTQk5ZWFJvTG0xcGJqdGNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNG9hVzVrWlhnc0lHeGxibWQwYUNsN1hHNGdJR2x1WkdWNElEMGdkRzlKYm5SbFoyVnlLR2x1WkdWNEtUdGNiaUFnY21WMGRYSnVJR2x1WkdWNElEd2dNQ0EvSUcxaGVDaHBibVJsZUNBcklHeGxibWQwYUN3Z01Da2dPaUJ0YVc0b2FXNWtaWGdzSUd4bGJtZDBhQ2s3WEc1OU8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmZEc4dGFXNWtaWGd1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURZNVhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015QTBJRFVpTENJbmRYTmxJSE4wY21samRDYzdYRzUyWVhJZ1lXUmtWRzlWYm5OamIzQmhZbXhsY3lBOUlISmxjWFZwY21Vb0p5NHZYMkZrWkMxMGJ5MTFibk5qYjNCaFlteGxjeWNwWEc0Z0lDd2djM1JsY0NBZ0lDQWdJQ0FnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJsMFpYSXRjM1JsY0NjcFhHNGdJQ3dnU1hSbGNtRjBiM0p6SUNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgybDBaWEpoZEc5eWN5Y3BYRzRnSUN3Z2RHOUpUMkpxWldOMElDQWdJQ0FnSUNBOUlISmxjWFZwY21Vb0p5NHZYM1J2TFdsdlltcGxZM1FuS1R0Y2JseHVMeThnTWpJdU1TNHpMalFnUVhKeVlYa3VjSEp2ZEc5MGVYQmxMbVZ1ZEhKcFpYTW9LVnh1THk4Z01qSXVNUzR6TGpFeklFRnljbUY1TG5CeWIzUnZkSGx3WlM1clpYbHpLQ2xjYmk4dklESXlMakV1TXk0eU9TQkJjbkpoZVM1d2NtOTBiM1I1Y0dVdWRtRnNkV1Z6S0NsY2JpOHZJREl5TGpFdU15NHpNQ0JCY25KaGVTNXdjbTkwYjNSNWNHVmJRRUJwZEdWeVlYUnZjbDBvS1Z4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCeVpYRjFhWEpsS0NjdUwxOXBkR1Z5TFdSbFptbHVaU2NwS0VGeWNtRjVMQ0FuUVhKeVlYa25MQ0JtZFc1amRHbHZiaWhwZEdWeVlYUmxaQ3dnYTJsdVpDbDdYRzRnSUhSb2FYTXVYM1FnUFNCMGIwbFBZbXBsWTNRb2FYUmxjbUYwWldRcE95QXZMeUIwWVhKblpYUmNiaUFnZEdocGN5NWZhU0E5SURBN0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJRzVsZUhRZ2FXNWtaWGhjYmlBZ2RHaHBjeTVmYXlBOUlHdHBibVE3SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUd0cGJtUmNiaTh2SURJeUxqRXVOUzR5TGpFZ0pVRnljbUY1U1hSbGNtRjBiM0pRY205MGIzUjVjR1VsTG01bGVIUW9LVnh1ZlN3Z1puVnVZM1JwYjI0b0tYdGNiaUFnZG1GeUlFOGdJQ0FnSUQwZ2RHaHBjeTVmZEZ4dUlDQWdJQ3dnYTJsdVpDQWdQU0IwYUdsekxsOXJYRzRnSUNBZ0xDQnBibVJsZUNBOUlIUm9hWE11WDJrckt6dGNiaUFnYVdZb0lVOGdmSHdnYVc1a1pYZ2dQajBnVHk1c1pXNW5kR2dwZTF4dUlDQWdJSFJvYVhNdVgzUWdQU0IxYm1SbFptbHVaV1E3WEc0Z0lDQWdjbVYwZFhKdUlITjBaWEFvTVNrN1hHNGdJSDFjYmlBZ2FXWW9hMmx1WkNBOVBTQW5hMlY1Y3ljZ0lDbHlaWFIxY200Z2MzUmxjQ2d3TENCcGJtUmxlQ2s3WEc0Z0lHbG1LR3RwYm1RZ1BUMGdKM1poYkhWbGN5Y3BjbVYwZFhKdUlITjBaWEFvTUN3Z1QxdHBibVJsZUYwcE8xeHVJQ0J5WlhSMWNtNGdjM1JsY0Nnd0xDQmJhVzVrWlhnc0lFOWJhVzVrWlhoZFhTazdYRzU5TENBbmRtRnNkV1Z6SnlrN1hHNWNiaTh2SUdGeVozVnRaVzUwYzB4cGMzUmJRRUJwZEdWeVlYUnZjbDBnYVhNZ0pVRnljbUY1VUhKdmRHOWZkbUZzZFdWekpTQW9PUzQwTGpRdU5pd2dPUzQwTGpRdU55bGNia2wwWlhKaGRHOXljeTVCY21kMWJXVnVkSE1nUFNCSmRHVnlZWFJ2Y25NdVFYSnlZWGs3WEc1Y2JtRmtaRlJ2Vlc1elkyOXdZV0pzWlhNb0oydGxlWE1uS1R0Y2JtRmtaRlJ2Vlc1elkyOXdZV0pzWlhNb0ozWmhiSFZsY3ljcE8xeHVZV1JrVkc5VmJuTmpiM0JoWW14bGN5Z25aVzUwY21sbGN5Y3BPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5bGN6WXVZWEp5WVhrdWFYUmxjbUYwYjNJdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlEY3dYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUEwSURVaUxDSXZLaXBjY2x4dUtpQkRiM0I1Y21sbmFIUWdNakF4TmlCUVZDQkpibTkyWWNPbnc2TnZJR1VnVTJsemRHVnRZWE1nVTBGY2NseHVLaUJEYjNCNWNtbG5hSFFnTWpBeE5pQkpUa1ZUUXkxSlJGeHlYRzRxSUVOdmNIbHlhV2RvZENBeU1ERTJJRkZWVDBKSlV5Qk9SVlJYVDFKTFV5QlRURnh5WEc0cUlFTnZjSGx5YVdkb2RDQXlNREUySUVaU1FWVk9TRTlHUlZJdFIwVlRSVXhNVTBOSVFVWlVJRnBWVWlCR1QwVlNSRVZTVlU1SElFUkZVaUJCVGtkRlYwRk9SRlJGVGlCR1QxSlRRMGhWVGtjZ1JTNVdYSEpjYmlvZ1EyOXdlWEpwWjJoMElESXdNVFlnVDFKQlRrZEZJRk5CWEhKY2Jpb2dRMjl3ZVhKcFoyaDBJREl3TVRZZ1JHVjFkSE5qYUdVZ1ZHVnNaV3R2YlNCQlIxeHlYRzRxSUVOdmNIbHlhV2RvZENBeU1ERTJJRUZ3YVhwbFpWeHlYRzRxSUVOdmNIbHlhV2RvZENBeU1ERTJJRlJGUTBoT1NWTkRTRVVnVlU1SlZrVlNVMGxVUVZRZ1FrVlNURWxPWEhKY2JpcGNjbHh1S2lCTWFXTmxibk5sWkNCMWJtUmxjaUIwYUdVZ1FYQmhZMmhsSUV4cFkyVnVjMlVzSUZabGNuTnBiMjRnTWk0d0lDaDBhR1VnWENKTWFXTmxibk5sWENJcE8xeHlYRzRxSUhsdmRTQnRZWGtnYm05MElIVnpaU0IwYUdseklHWnBiR1VnWlhoalpYQjBJR2x1SUdOdmJYQnNhV0Z1WTJVZ2QybDBhQ0IwYUdVZ1RHbGpaVzV6WlM1Y2NseHVLaUJaYjNVZ2JXRjVJRzlpZEdGcGJpQmhJR052Y0hrZ2IyWWdkR2hsSUV4cFkyVnVjMlVnWVhSY2NseHVLbHh5WEc0cUlDQWdhSFIwY0RvdkwzZDNkeTVoY0dGamFHVXViM0puTDJ4cFkyVnVjMlZ6TDB4SlEwVk9VMFV0TWk0d1hISmNiaXBjY2x4dUtpQlZibXhsYzNNZ2NtVnhkV2x5WldRZ1lua2dZWEJ3YkdsallXSnNaU0JzWVhjZ2IzSWdZV2R5WldWa0lIUnZJR2x1SUhkeWFYUnBibWNzSUhOdlpuUjNZWEpsWEhKY2Jpb2daR2x6ZEhKcFluVjBaV1FnZFc1a1pYSWdkR2hsSUV4cFkyVnVjMlVnYVhNZ1pHbHpkSEpwWW5WMFpXUWdiMjRnWVc0Z1hDSkJVeUJKVTF3aUlFSkJVMGxUTEZ4eVhHNHFJRmRKVkVoUFZWUWdWMEZTVWtGT1ZFbEZVeUJQVWlCRFQwNUVTVlJKVDA1VElFOUdJRUZPV1NCTFNVNUVMQ0JsYVhSb1pYSWdaWGh3Y21WemN5QnZjaUJwYlhCc2FXVmtMbHh5WEc0cUlGTmxaU0IwYUdVZ1RHbGpaVzV6WlNCbWIzSWdkR2hsSUhOd1pXTnBabWxqSUd4aGJtZDFZV2RsSUdkdmRtVnlibWx1WnlCd1pYSnRhWE56YVc5dWN5QmhibVJjY2x4dUtpQnNhVzFwZEdGMGFXOXVjeUIxYm1SbGNpQjBhR1VnVEdsalpXNXpaUzVjY2x4dUtpb3ZYSEpjYmk4cUtseHlYRzRnS2lCVGRYQndiM0owSUcxdlpIVnNaU0IzYVhSb0lITnZiV1VnWm5WdVkzUnBiMjV6SUhkcGJHd2dZbVVnZFhObFpuVnNYSEpjYmlBcUlFQnRiMlIxYkdVZ2RYUnBiSE5jY2x4dUlDb3ZYSEpjYmx4eVhHNHZLaXBjY2x4dUlDb2dRSFI1Y0dWa1pXWWdaR2wyYVdSbFZWSk1YSEpjYmlBcUlFQjBlWEJsSUU5aWFtVmpkRnh5WEc0Z0tpQkFjSEp2Y0dWeWRIa2dlM04wY21sdVozMGdkSGx3WlNCVWFHVWdkSGx3WlNCdlppQlZVa3hjY2x4dUlDb2dRSEJ5YjNCbGNuUjVJSHR6ZEhKcGJtZDlJR1J2YldGcGJpQlVhR1VnWkc5dFlXbHVJRzltSUZWU1RGeHlYRzRnS2lCQWNISnZjR1Z5ZEhrZ2UzTjBjbWx1WjMwZ2FXUmxiblJwZEhrZ1ZHaGxJR2xrWlc1MGFYUjVJRzltSUZWU1RGeHlYRzRnS2k5Y2NseHVYSEpjYmk4cUtseHlYRzRnS2lCRWFYWnBaR1VnWVc0Z2RYSnNJR2x1SUhSNWNHVXNJR1J2YldGcGJpQmhibVFnYVdSbGJuUnBkSGxjY2x4dUlDb2dRSEJoY21GdElDQjdWVkpNTGxWU1RIMGdkWEpzSUMwZ2RYSnNJR0ZrWkhKbGMzTmNjbHh1SUNvZ1FISmxkSFZ5YmlCN1pHbDJhV1JsVlZKTWZTQjBhR1VnY21WemRXeDBJRzltSUdScGRtbGtaVlZTVEZ4eVhHNGdLaTljY2x4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdScGRtbGtaVlZTVENoMWNtd3BJSHRjY2x4dVhISmNiaUFnYVdZZ0tDRjFjbXdwSUhSb2NtOTNJRVZ5Y205eUtDZFZVa3dnYVhNZ2JtVmxaR1ZrSUhSdklITndiR2wwSnlrN1hISmNibHh5WEc1Y2RHWjFibU4wYVc5dUlISmxZM1Z5YzJVb2RtRnNkV1VwSUh0Y2NseHVYSFJjZEdOdmJuTjBJSEpsWjJWNElEMGdMeWhiWVMxNlFTMWFMVjBxS1NnNlhGd3ZYRnd2S0Q4NlhGd3VLVDk4T2lrb1d5MWhMWHBCTFZvd0xUbEFPaVV1WDF4Y0szNGpQVjE3TWl3eU5UWjlLU2hiTFdFdGVrRXRXakF0T1VBNkpTNWZYRndyZmlNOVhGd3ZYU29wTDJkcE8xeHlYRzRnSUNBZ1kyOXVjM1FnYzNWaWMzUWdQU0FuSkRFc0pETXNKRFFuTzF4eVhHNWNkQ0FnYkdWMElIQmhjblJ6SUQwZ2RtRnNkV1V1Y21Wd2JHRmpaU2h5WldkbGVDd2djM1ZpYzNRcExuTndiR2wwS0Njc0p5azdYSEpjYmx4MFhIUnlaWFIxY200Z2NHRnlkSE03WEhKY2JseDBmVnh5WEc1Y2NseHVYSFJzWlhRZ2NHRnlkSE1nUFNCeVpXTjFjbk5sS0hWeWJDazdYSEpjYmx4eVhHNGdJQzh2SUVsbUlIUm9aU0IxY213Z2FHRnpJRzV2SUhOamFHVnRaVnh5WEc0Z0lHbG1JQ2h3WVhKMGMxc3dYU0E5UFQwZ2RYSnNJQ1ltSUNGd1lYSjBjMXN3WFM1cGJtTnNkV1JsY3lnblFDY3BLU0I3WEhKY2JseHlYRzRnSUNBZ2JHVjBJSEpsYzNWc2RDQTlJSHRjY2x4dUlDQWdJQ0FnZEhsd1pUb2dYQ0pjSWl4Y2NseHVJQ0FnSUNBZ1pHOXRZV2x1T2lCMWNtd3NYSEpjYmlBZ0lDQWdJR2xrWlc1MGFYUjVPaUJjSWx3aVhISmNiaUFnSUNCOU8xeHlYRzVjY2x4dUlDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0oxdEVhWFpwWkdWVlVreGRJRVJwZG1sa1pWVlNUQ0JrYjI1Y1hDZDBJSE4xY0hCdmNuUWdkWEpzSUhkcGRHaHZkWFFnYzJOb1pXMWxMaUJRYkdWaGMyVWdjbVYyYVdWM0lIbHZkWElnZFhKc0lHRmtaSEpsYzNNbkxDQjFjbXdwTzF4eVhHNWNjbHh1SUNBZ0lISmxkSFZ5YmlCeVpYTjFiSFE3WEhKY2JpQWdmVnh5WEc1Y2NseHVYSFF2THlCamFHVmpheUJwWmlCMGFHVWdkWEpzSUdoaGN5QjBhR1VnYzJOb1pXMWxJR0Z1WkNCcGJtTnNkV1JsY3lCaGJpQkFYSEpjYmx4MGFXWWdLSEJoY25Seld6QmRJRDA5UFNCMWNtd2dKaVlnY0dGeWRITmJNRjB1YVc1amJIVmtaWE1vSjBBbktTa2dlMXh5WEc1Y2RGeDBiR1YwSUhOamFHVnRaU0E5SUhCaGNuUnpXekJkSUQwOVBTQjFjbXdnUHlBbmMyMTBjQ2NnT2lCd1lYSjBjMXN3WFR0Y2NseHVYSFJjZEhCaGNuUnpJRDBnY21WamRYSnpaU2h6WTJobGJXVWdLeUFuT2k4dkp5QXJJSEJoY25Seld6QmRLVHRjY2x4dVhIUjlYSEpjYmx4eVhHNWNkQzh2SUdsbUlIUm9aU0JrYjIxaGFXNGdhVzVqYkhWa1pYTWdZVzRnUUN3Z1pHbDJhV1JsSUdsMElIUnZJR1J2YldGcGJpQmhibVFnYVdSbGJuUnBkSGtnY21WemNHVmpkR2wyWld4NVhISmNibHgwYVdZZ0tIQmhjblJ6V3pGZExtbHVZMngxWkdWektDZEFKeWtwSUh0Y2NseHVYSFJjZEhCaGNuUnpXekpkSUQwZ2NHRnlkSE5iTUYwZ0t5QW5PaTh2SnlBcklIQmhjblJ6V3pGZE8xeHlYRzVjZEZ4MGNHRnlkSE5iTVYwZ1BTQndZWEowYzFzeFhTNXpkV0p6ZEhJb2NHRnlkSE5iTVYwdWFXNWtaWGhQWmlnblFDY3BJQ3NnTVNsY2NseHVJQ0FnSUgwZ1hIUXZLbVZzYzJVZ2FXWWdLSEJoY25Seld6SmRMbWx1WTJ4MVpHVnpLQ2N2SnlrcElIdGNjbHh1SUNBZ0lIQmhjblJ6V3pKZElEMGdjR0Z5ZEhOYk1sMHVjM1ZpYzNSeUtIQmhjblJ6V3pKZExteGhjM1JKYm1SbGVFOW1LQ2N2Snlrck1TazdYSEpjYmlBZ2ZTb3ZYSEpjYmx4eVhHNGdJR3hsZENCeVpYTjFiSFFnUFNCN1hISmNiaUFnSUNCMGVYQmxPaUJ3WVhKMGMxc3dYU3hjY2x4dUlDQWdJR1J2YldGcGJqb2djR0Z5ZEhOYk1WMHNYSEpjYmlBZ0lDQnBaR1Z1ZEdsMGVUb2djR0Z5ZEhOYk1sMWNjbHh1SUNCOU8xeHlYRzVjY2x4dUlDQnlaWFIxY200Z2NtVnpkV3gwTzF4eVhHNTlYSEpjYmx4eVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1pHbDJhV1JsUlcxaGFXd29aVzFoYVd3cElIdGNjbHh1SUNCc1pYUWdhVzVrWlhoUFprRjBJRDBnWlcxaGFXd3VhVzVrWlhoUFppZ25RQ2NwTzF4eVhHNWNjbHh1SUNCc1pYUWdjbVZ6ZFd4MElEMGdlMXh5WEc0Z0lDQWdkWE5sY201aGJXVTZJR1Z0WVdsc0xuTjFZbk4wY21sdVp5Z3dMQ0JwYm1SbGVFOW1RWFFwTEZ4eVhHNGdJQ0FnWkc5dFlXbHVPaUJsYldGcGJDNXpkV0p6ZEhKcGJtY29hVzVrWlhoUFprRjBJQ3NnTVN3Z1pXMWhhV3d1YkdWdVozUm9LVnh5WEc0Z0lIMDdYSEpjYmx4eVhHNGdJSEpsZEhWeWJpQnlaWE4xYkhRN1hISmNibjFjY2x4dVhISmNiaThxS2x4eVhHNGdLaUJEYUdWamF5QnBaaUJoYmlCUFltcGxZM1FnYVhNZ1pXMXdkSGxjY2x4dUlDb2dRSEJoY21GdElDQjdUMkpxWldOMGZTQnZZbXBsWTNRZ1QySnFaV04wSUhSdklHSmxJR05vWldOclpXUmNjbHh1SUNvZ1FISmxkSFZ5YmlCN1FtOXZiR1ZoYm4wZ0lDQWdJQ0FnYzNSaGRIVnpJRzltSUU5aWFtVmpkQ3dnWlcxd2RIa2diM0lnYm05MElDaDBjblZsZkdaaGJITmxLVHRjY2x4dUlDb3ZYSEpjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJsYlhCMGVVOWlhbVZqZENodlltcGxZM1FwSUh0Y2NseHVJQ0J5WlhSMWNtNGdUMkpxWldOMExtdGxlWE1vYjJKcVpXTjBLUzVzWlc1bmRHZ2dQaUF3SUQ4Z1ptRnNjMlVnT2lCMGNuVmxPMXh5WEc1OVhISmNibHh5WEc0dktpcGNjbHh1SUNvZ1RXRnJaU0JoSUVOUFVGa2diMllnZEdobElHOXlhV2RwYm1Gc0lHUmhkR0ZjY2x4dUlDb2dRSEJoY21GdElDQjdUMkpxWldOMGZTQWdiMkpxSUMwZ2IySnFaV04wSUhSdklHSmxJR05zYjI1bFpGeHlYRzRnS2lCQWNtVjBkWEp1SUh0UFltcGxZM1I5WEhKY2JpQXFMMXh5WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWkdWbGNFTnNiMjVsS0c5aWFpa2dlMXh5WEc0Z0lDOHZWRTlFVHpvZ2MybHRjR3hsSUdKMWRDQnBibVZtWm1samFXVnVkQ0JLVTA5T0lHUmxaWEFnWTJ4dmJtVXVMaTVjY2x4dUlDQnBaaUFvYjJKcUtTQnlaWFIxY200Z1NsTlBUaTV3WVhKelpTaEtVMDlPTG5OMGNtbHVaMmxtZVNodlltb3BLVHRjY2x4dWZWeHlYRzVjY2x4dUx5b3FYSEpjYmlBcUlFOWlkR0ZwYm5NZ2RHaGxJSFZ6WlhJZ1ZWSk1JSFJvWVhRZ1kyOXljbVZ6Y0c5dVpITWdkRzhnWVNCbmFYWmxiaUJsYldGcGJGeHlYRzRnS2lCQWNHRnlZVzBnSUh0emRISnBibWQ5SUhWelpYSkZiV0ZwYkNCVWFHVWdkWE5sY2lCbGJXRnBiRnh5WEc0Z0tpQkFjbVYwZFhKdUlIdFZVa3d1VlZKTWZTQjFjMlZ5VlZKTUlGUm9aU0IxYzJWeUlGVlNURnh5WEc0Z0tpOWNjbHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR2RsZEZWelpYSlZVa3hHY205dFJXMWhhV3dvZFhObGNrVnRZV2xzS1NCN1hISmNiaUFnYkdWMElHbHVaR1Y0VDJaQmRDQTlJSFZ6WlhKRmJXRnBiQzVwYm1SbGVFOW1LQ2RBSnlrN1hISmNiaUFnY21WMGRYSnVJQ2QxYzJWeU9pOHZKeUFySUhWelpYSkZiV0ZwYkM1emRXSnpkSEpwYm1jb2FXNWtaWGhQWmtGMElDc2dNU3dnZFhObGNrVnRZV2xzTG14bGJtZDBhQ2tnS3lBbkx5Y2dLeUIxYzJWeVJXMWhhV3d1YzNWaWMzUnlhVzVuS0RBc0lHbHVaR1Y0VDJaQmRDazdYSEpjYm4xY2NseHVYSEpjYmk4cUtseHlYRzRnS2lCUFluUmhhVzV6SUhSb1pTQjFjMlZ5SUdWdFlXbHNJSFJvWVhRZ1kyOXljbVZ6Y0c5dVpITWdkRzhnWVNCbmFYWmxiaUJWVWt4Y2NseHVJQ29nUUhCaGNtRnRJQ0I3VlZKTUxsVlNUSDBnZFhObGNsVlNUQ0JVYUdVZ2RYTmxjaUJWVWt4Y2NseHVJQ29nUUhKbGRIVnliaUI3YzNSeWFXNW5mU0IxYzJWeVJXMWhhV3dnVkdobElIVnpaWElnWlcxaGFXeGNjbHh1SUNvdlhISmNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQm5aWFJWYzJWeVJXMWhhV3hHY205dFZWSk1LSFZ6WlhKVlVrd3BJSHRjY2x4dUlDQnNaWFFnZFhKc0lEMGdaR2wyYVdSbFZWSk1LSFZ6WlhKVlVrd3BPMXh5WEc0Z0lISmxkSFZ5YmlCMWNtd3VhV1JsYm5ScGRIa3VjbVZ3YkdGalpTZ25MeWNzSUNjbktTQXJJQ2RBSnlBcklIVnliQzVrYjIxaGFXNDdJQzh2SUdsa1pXNTBhWFI1SUdacFpXeGtJR2hoY3lBbkwyVjRZVzF3YkdWSlJDY2dhVzV6ZEdWaFpDQnZaaUFuWlhoaGJYQnNaVWxFSjF4eVhHNTlYSEpjYmx4eVhHNWNjbHh1THlvcVhISmNiaUFxSUVOb1pXTnJJR2xtSUhSb1pTQjFjMlZ5SUdsa1pXNTBhV1pwWlhJZ2FYTWdZV3h5WldGa2VTQnBiaUIwYUdVZ1ZWSk1JR1p2Y20xaGRDd2dhV1lnYm05MExDQmpiMjUyWlhKMElIUnZJRlZTVENCbWIzSnRZWFJjY2x4dUlDb2dRSEJoY21GdElDQjdjM1J5YVc1bmZTQWdJR2xrWlc1MGFXWnBaWElnSUhWelpYSWdhV1JsYm5ScFptbGxjbHh5WEc0Z0tpQkFjbVYwZFhKdUlIdHpkSEpwYm1kOUlDQWdkWE5sY2xWU1RDQWdJQ0IwYUdVZ2RYTmxjaUJWVWt4Y2NseHVJQ292WEhKY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamIyNTJaWEowVkc5VmMyVnlWVkpNS0dsa1pXNTBhV1pwWlhJcElIdGNjbHh1WEhKY2JpQWdMeThnWTJobFkyc2dhV1lnZEdobElHbGtaVzUwYVdacFpYSWdhWE1nWVd4eVpXRmtlU0JwYmlCMGFHVWdkWEpzSUdadmNtMWhkRnh5WEc0Z0lHbG1JQ2hwWkdWdWRHbG1hV1Z5TG5OMVluTjBjbWx1Wnlnd0xDQTNLU0E5UFQwZ0ozVnpaWEk2THk4bktTQjdYSEpjYmlBZ0lDQnNaWFFnWkdsMmFXUmxaRlZTVENBOUlHUnBkbWxrWlZWU1RDaHBaR1Z1ZEdsbWFXVnlLVHRjY2x4dVhISmNiaUFnSUNBdkwyTm9aV05ySUdsbUlIUm9aU0IxY213Z2FYTWdkMlZzYkNCbWIzSnRZWFJsWkZ4eVhHNGdJQ0FnYVdZZ0tHUnBkbWxrWldSVlVrd3VaRzl0WVdsdUlDWW1JR1JwZG1sa1pXUlZVa3d1YVdSbGJuUnBkSGtwSUh0Y2NseHVJQ0FnSUNBZ2NtVjBkWEp1SUdsa1pXNTBhV1pwWlhJN1hISmNiaUFnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNCMGFISnZkeUFuZFhObGNsVlNUQ0IzYVhSb0lIZHliMjVuSUdadmNtMWhkQ2M3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUM4dmFXWWdibTkwTENCamIyNTJaWEowSUhSb1pTQjFjMlZ5SUdWdFlXbHNJSFJ2SUZWU1RDQm1iM0p0WVhSY2NseHVJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdjbVYwZFhKdUlHZGxkRlZ6WlhKVlVreEdjbTl0UlcxaGFXd29hV1JsYm5ScFptbGxjaWs3WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTJobFkydEJkSFJ5YVdKMWRHVW9jR0YwYUNrZ2UxeHlYRzVjY2x4dUlDQnNaWFFnY21WblpYZ2dQU0F2S0Nnb1cyRXRla0V0V2wwcktUcGNYQzljWEM4b1d6QXRPV0V0ZWtFdFdsMWJMVnhjZDEwcVd6QXRPV0V0ZWtFdFdsMWNYQzRwSzF0aExYcEJMVnBkZXpJc09YMHBYRnd2VzJFdGVrRXRXakF0T1Z4Y0xsMHJRRnRoTFhwQkxWb3dMVGxkS3loY1hDMHBQMXRoTFhwQkxWb3dMVGxkS3loY1hDNHBQMXRoTFhwQkxWb3dMVGxkZXpJc01UQjlQMXhjTGx0aExYcEJMVnBkZXpJc01UQjlLU2d1S3lnL1BTNXBaR1Z1ZEdsMGVTa3BQeTluYlR0Y2NseHVYSEpjYmlBZ2JHVjBJR3hwYzNRZ1BTQmJYVHRjY2x4dUlDQnNaWFFnWm1sdVlXd2dQU0JiWFR0Y2NseHVJQ0JzWlhRZ2RHVnpkQ0E5SUhCaGRHZ3ViV0YwWTJnb2NtVm5aWGdwTzF4eVhHNWNjbHh1SUNCcFppQW9kR1Z6ZENBOVBTQnVkV3hzS1NCN1hISmNiaUFnSUNCbWFXNWhiQ0E5SUhCaGRHZ3VjM0JzYVhRb0p5NG5LVHRjY2x4dUlDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ2JHVjBJRzA3WEhKY2JpQWdJQ0IzYUdsc1pTQW9LRzBnUFNCeVpXZGxlQzVsZUdWaktIQmhkR2dwS1NBaFBUMGdiblZzYkNrZ2UxeHlYRzRnSUNBZ0lDQXZMeUJVYUdseklHbHpJRzVsWTJWemMyRnllU0IwYnlCaGRtOXBaQ0JwYm1acGJtbDBaU0JzYjI5d2N5QjNhWFJvSUhwbGNtOHRkMmxrZEdnZ2JXRjBZMmhsYzF4eVhHNGdJQ0FnSUNCcFppQW9iUzVwYm1SbGVDQTlQVDBnY21WblpYZ3ViR0Z6ZEVsdVpHVjRLU0I3WEhKY2JpQWdJQ0FnSUNBZ2NtVm5aWGd1YkdGemRFbHVaR1Y0S3lzN1hISmNiaUFnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUM4dklGUm9aU0J5WlhOMWJIUWdZMkZ1SUdKbElHRmpZMlZ6YzJWa0lIUm9jbTkxWjJnZ2RHaGxJR0J0WUMxMllYSnBZV0pzWlM1Y2NseHVJQ0FnSUNBZ2JTNW1iM0pGWVdOb0tDaHRZWFJqYUN3Z1ozSnZkWEJKYm1SbGVDa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2huY205MWNFbHVaR1Y0SUQwOVBTQXdLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQnNhWE4wTG5CMWMyZ29iV0YwWTJncE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnZlNrN1hISmNiaUFnSUNCOVhISmNiaUFnSUNCc1pYUWdjbVZ6ZFd4ME8xeHlYRzRnSUNBZ2JHbHpkQzVtYjNKRllXTm9LQ2gxY213cElEMCtJSHRjY2x4dUlDQWdJQ0FnY21WemRXeDBJRDBnY0dGMGFDNXlaWEJzWVdObEtIVnliQ3dnSnlvcktpY3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ1ptbHVZV3dnUFNCeVpYTjFiSFF1YzNCc2FYUW9KeTRuS1M1dFlYQW9LR2wwWlcwcElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9hWFJsYlNBOVBUMGdKeW9yS2ljcElIc2djbVYwZFhKdUlIVnliRHNnZlZ4eVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGRHVnRPMXh5WEc0Z0lDQWdJQ0I5S1R0Y2NseHVYSEpjYmlBZ0lDQjlLVHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJR052Ym5OdmJHVXViRzluS0NkYlUyVnlkbWxqWlVaeVlXMWxkMjl5YXk1VmRHbHNjeTVqYUdWamEwRjBkSEpwWW5WMFpWMG5MQ0JtYVc1aGJDazdYSEpjYmlBZ2NtVjBkWEp1SUdacGJtRnNPMXh5WEc1OVhISmNibHh5WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnY0dGeWMyVkJkSFJ5YVdKMWRHVnpLSEJoZEdncElIdGNjbHh1SUNCc1pYUWdjbVZuWlhnZ1BTQXZLRnN3TFRsaExYcEJMVnBkV3kxY1hIZGRLaWs2WEZ3dlhGd3ZMMmM3WEhKY2JseHlYRzRnSUd4bGRDQnpkSEpwYm1jeklEMGdKMmxrWlc1MGFYUjVKenRjY2x4dVhISmNiaUFnYVdZZ0tDRndZWFJvTG1sdVkyeDFaR1Z6S0NjNkx5OG5LU2tnZTF4eVhHNGdJQ0FnY21WMGRYSnVJQ2h3WVhSb0xuTndiR2wwS0NjdUp5a3BPMXh5WEc0Z0lIMGdaV3h6WlNCN1hISmNiaUFnSUNCc1pYUWdjM1J5YVc1bk1TQTlJSEJoZEdndWMzQnNhWFFvY21WblpYZ3BXekJkTzF4eVhHNWNjbHh1SUNBZ0lHeGxkQ0JoY25KaGVURWdQU0J6ZEhKcGJtY3hMbk53YkdsMEtDY3VKeWs3WEhKY2JseHlYRzRnSUNBZ2JHVjBJSE4wY21sdVp6SWdQU0J3WVhSb0xuSmxjR3hoWTJVb2MzUnlhVzVuTVN3Z0p5Y3BPMXh5WEc1Y2NseHVJQ0FnSUdsbUlDaHdZWFJvTG1sdVkyeDFaR1Z6S0hOMGNtbHVaek1wS1NCN1hISmNibHh5WEc0Z0lDQWdJQ0JzWlhRZ1lYSnlZWGt5SUQwZ2MzUnlhVzVuTWk1emNHeHBkQ2h6ZEhKcGJtY3pJQ3NnSnk0bktUdGNjbHh1WEhKY2JpQWdJQ0FnSUdOdmJuTnZiR1V1Ykc5bktDZGhjbkpoZVRJZ0p5QXJJR0Z5Y21GNU1pazdYSEpjYmx4eVhHNGdJQ0FnSUNCemRISnBibWN5SUQwZ1lYSnlZWGt5V3pCZExuTnNhV05sS0NjdUp5d2dMVEVwTzF4eVhHNWNjbHh1SUNBZ0lDQWdZWEp5WVhreUlEMGdZWEp5WVhreVd6RmRMbk53YkdsMEtDY3VKeWs3WEhKY2JseHlYRzRnSUNBZ0lDQmhjbkpoZVRFdWNIVnphQ2h6ZEhKcGJtY3lMQ0J6ZEhKcGJtY3pLVHRjY2x4dVhISmNiaUFnSUNBZ0lHRnljbUY1TVNBOUlHRnljbUY1TVM1amIyNWpZWFFvWVhKeVlYa3lLVHRjY2x4dVhISmNiaUFnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNCaGNuSmhlVEV1Y0hWemFDaHpkSEpwYm1jeUtUdGNjbHh1WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2NtVjBkWEp1SUNoaGNuSmhlVEV1Wm1sc2RHVnlLRUp2YjJ4bFlXNHBLVHRjY2x4dVhISmNiaUFnZlZ4eVhHNTlYSEpjYmx4dVhHNWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNJQzh2WEc0dkx5QXVMM055WXk5MWRHbHNjeTkxZEdsc2N5NXFjeUlzSW0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnZXlCY0ltUmxabUYxYkhSY0lqb2djbVZ4ZFdseVpTaGNJbU52Y21VdGFuTXZiR2xpY21GeWVTOW1iaTl3Y205dGFYTmxYQ0lwTENCZlgyVnpUVzlrZFd4bE9pQjBjblZsSUgwN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJKaFltVnNMWEoxYm5ScGJXVXZZMjl5WlMxcWN5OXdjbTl0YVhObExtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQTNNbHh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ01TQTBJRFVpTENKMllYSWdUVVZVUVNBZ0lDQWdQU0J5WlhGMWFYSmxLQ2N1TDE5MWFXUW5LU2duYldWMFlTY3BYRzRnSUN3Z2FYTlBZbXBsWTNRZ1BTQnlaWEYxYVhKbEtDY3VMMTlwY3kxdlltcGxZM1FuS1Z4dUlDQXNJR2hoY3lBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmFHRnpKeWxjYmlBZ0xDQnpaWFJFWlhOaklDQTlJSEpsY1hWcGNtVW9KeTR2WDI5aWFtVmpkQzFrY0NjcExtWmNiaUFnTENCcFpDQWdJQ0FnSUNBOUlEQTdYRzUyWVhJZ2FYTkZlSFJsYm5OcFlteGxJRDBnVDJKcVpXTjBMbWx6UlhoMFpXNXphV0pzWlNCOGZDQm1kVzVqZEdsdmJpZ3BlMXh1SUNCeVpYUjFjbTRnZEhKMVpUdGNibjA3WEc1MllYSWdSbEpGUlZwRklEMGdJWEpsY1hWcGNtVW9KeTR2WDJaaGFXeHpKeWtvWm5WdVkzUnBiMjRvS1h0Y2JpQWdjbVYwZFhKdUlHbHpSWGgwWlc1emFXSnNaU2hQWW1wbFkzUXVjSEpsZG1WdWRFVjRkR1Z1YzJsdmJuTW9lMzBwS1R0Y2JuMHBPMXh1ZG1GeUlITmxkRTFsZEdFZ1BTQm1kVzVqZEdsdmJpaHBkQ2w3WEc0Z0lITmxkRVJsYzJNb2FYUXNJRTFGVkVFc0lIdDJZV3gxWlRvZ2UxeHVJQ0FnSUdrNklDZFBKeUFySUNzcmFXUXNJQzh2SUc5aWFtVmpkQ0JKUkZ4dUlDQWdJSGM2SUh0OUlDQWdJQ0FnSUNBZ0lDOHZJSGRsWVdzZ1kyOXNiR1ZqZEdsdmJuTWdTVVJ6WEc0Z0lIMTlLVHRjYm4wN1hHNTJZWElnWm1GemRFdGxlU0E5SUdaMWJtTjBhVzl1S0dsMExDQmpjbVZoZEdVcGUxeHVJQ0F2THlCeVpYUjFjbTRnY0hKcGJXbDBhWFpsSUhkcGRHZ2djSEpsWm1sNFhHNGdJR2xtS0NGcGMwOWlhbVZqZENocGRDa3BjbVYwZFhKdUlIUjVjR1Z2WmlCcGRDQTlQU0FuYzNsdFltOXNKeUEvSUdsMElEb2dLSFI1Y0dWdlppQnBkQ0E5UFNBbmMzUnlhVzVuSnlBL0lDZFRKeUE2SUNkUUp5a2dLeUJwZER0Y2JpQWdhV1lvSVdoaGN5aHBkQ3dnVFVWVVFTa3BlMXh1SUNBZ0lDOHZJR05oYmlkMElITmxkQ0J0WlhSaFpHRjBZU0IwYnlCMWJtTmhkV2RvZENCbWNtOTZaVzRnYjJKcVpXTjBYRzRnSUNBZ2FXWW9JV2x6UlhoMFpXNXphV0pzWlNocGRDa3BjbVYwZFhKdUlDZEdKenRjYmlBZ0lDQXZMeUJ1YjNRZ2JtVmpaWE56WVhKNUlIUnZJR0ZrWkNCdFpYUmhaR0YwWVZ4dUlDQWdJR2xtS0NGamNtVmhkR1VwY21WMGRYSnVJQ2RGSnp0Y2JpQWdJQ0F2THlCaFpHUWdiV2x6YzJsdVp5QnRaWFJoWkdGMFlWeHVJQ0FnSUhObGRFMWxkR0VvYVhRcE8xeHVJQ0F2THlCeVpYUjFjbTRnYjJKcVpXTjBJRWxFWEc0Z0lIMGdjbVYwZFhKdUlHbDBXMDFGVkVGZExtazdYRzU5TzF4dWRtRnlJR2RsZEZkbFlXc2dQU0JtZFc1amRHbHZiaWhwZEN3Z1kzSmxZWFJsS1h0Y2JpQWdhV1lvSVdoaGN5aHBkQ3dnVFVWVVFTa3BlMXh1SUNBZ0lDOHZJR05oYmlkMElITmxkQ0J0WlhSaFpHRjBZU0IwYnlCMWJtTmhkV2RvZENCbWNtOTZaVzRnYjJKcVpXTjBYRzRnSUNBZ2FXWW9JV2x6UlhoMFpXNXphV0pzWlNocGRDa3BjbVYwZFhKdUlIUnlkV1U3WEc0Z0lDQWdMeThnYm05MElHNWxZMlZ6YzJGeWVTQjBieUJoWkdRZ2JXVjBZV1JoZEdGY2JpQWdJQ0JwWmlnaFkzSmxZWFJsS1hKbGRIVnliaUJtWVd4elpUdGNiaUFnSUNBdkx5QmhaR1FnYldsemMybHVaeUJ0WlhSaFpHRjBZVnh1SUNBZ0lITmxkRTFsZEdFb2FYUXBPMXh1SUNBdkx5QnlaWFIxY200Z2FHRnphQ0IzWldGcklHTnZiR3hsWTNScGIyNXpJRWxFYzF4dUlDQjlJSEpsZEhWeWJpQnBkRnROUlZSQlhTNTNPMXh1ZlR0Y2JpOHZJR0ZrWkNCdFpYUmhaR0YwWVNCdmJpQm1jbVZsZW1VdFptRnRhV3g1SUcxbGRHaHZaSE1nWTJGc2JHbHVaMXh1ZG1GeUlHOXVSbkpsWlhwbElEMGdablZ1WTNScGIyNG9hWFFwZTF4dUlDQnBaaWhHVWtWRldrVWdKaVlnYldWMFlTNU9SVVZFSUNZbUlHbHpSWGgwWlc1emFXSnNaU2hwZENrZ0ppWWdJV2hoY3locGRDd2dUVVZVUVNrcGMyVjBUV1YwWVNocGRDazdYRzRnSUhKbGRIVnliaUJwZER0Y2JuMDdYRzUyWVhJZ2JXVjBZU0E5SUcxdlpIVnNaUzVsZUhCdmNuUnpJRDBnZTF4dUlDQkxSVms2SUNBZ0lDQWdUVVZVUVN4Y2JpQWdUa1ZGUkRvZ0lDQWdJR1poYkhObExGeHVJQ0JtWVhOMFMyVjVPaUFnWm1GemRFdGxlU3hjYmlBZ1oyVjBWMlZoYXpvZ0lHZGxkRmRsWVdzc1hHNGdJRzl1Um5KbFpYcGxPaUJ2YmtaeVpXVjZaVnh1ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMjFsZEdFdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlEY3pYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUlzSW5aaGNpQmpiR0Z6YzI5bUlDQWdQU0J5WlhGMWFYSmxLQ2N1TDE5amJHRnpjMjltSnlsY2JpQWdMQ0JKVkVWU1FWUlBVaUFnUFNCeVpYRjFhWEpsS0NjdUwxOTNhM01uS1NnbmFYUmxjbUYwYjNJbktWeHVJQ0FzSUVsMFpYSmhkRzl5Y3lBOUlISmxjWFZwY21Vb0p5NHZYMmwwWlhKaGRHOXljeWNwTzF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCeVpYRjFhWEpsS0NjdUwxOWpiM0psSnlrdVoyVjBTWFJsY21GMGIzSk5aWFJvYjJRZ1BTQm1kVzVqZEdsdmJpaHBkQ2w3WEc0Z0lHbG1LR2wwSUNFOUlIVnVaR1ZtYVc1bFpDbHlaWFIxY200Z2FYUmJTVlJGVWtGVVQxSmRYRzRnSUNBZ2ZId2dhWFJiSjBCQWFYUmxjbUYwYjNJblhWeHVJQ0FnSUh4OElFbDBaWEpoZEc5eWMxdGpiR0Z6YzI5bUtHbDBLVjA3WEc1OU8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlqYjNKbExtZGxkQzFwZEdWeVlYUnZjaTF0WlhSb2IyUXVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJRGMwWEc0dkx5QnRiMlIxYkdVZ1kyaDFibXR6SUQwZ01DQXhJRFFnTlNJc0ltMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ2V5QmNJbVJsWm1GMWJIUmNJam9nY21WeGRXbHlaU2hjSW1OdmNtVXRhbk12YkdsaWNtRnllUzltYmk5dlltcGxZM1F2WTNKbFlYUmxYQ0lwTENCZlgyVnpUVzlrZFd4bE9pQjBjblZsSUgwN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJKaFltVnNMWEoxYm5ScGJXVXZZMjl5WlMxcWN5OXZZbXBsWTNRdlkzSmxZWFJsTG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBM05WeHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBeUlETWlMQ0p0YjJSMWJHVXVaWGh3YjNKMGN5QTlJSHNnWENKa1pXWmhkV3gwWENJNklISmxjWFZwY21Vb1hDSmpiM0psTFdwekwyeHBZbkpoY25rdlptNHZiMkpxWldOMEwzTmxkQzF3Y205MGIzUjVjR1V0YjJaY0lpa3NJRjlmWlhOTmIyUjFiR1U2SUhSeWRXVWdmVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZbUZpWld3dGNuVnVkR2x0WlM5amIzSmxMV3B6TDI5aWFtVmpkQzl6WlhRdGNISnZkRzkwZVhCbExXOW1MbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0EzTmx4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWdNU0F5SURNaUxDSnRiMlIxYkdVdVpYaHdiM0owY3lBOUlIc2dYQ0prWldaaGRXeDBYQ0k2SUhKbGNYVnBjbVVvWENKamIzSmxMV3B6TDJ4cFluSmhjbmt2Wm00dmMzbHRZbTlzWENJcExDQmZYMlZ6VFc5a2RXeGxPaUIwY25WbElIMDdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wySmhZbVZzTFhKMWJuUnBiV1V2WTI5eVpTMXFjeTl6ZVcxaWIyd3Vhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJRGMzWEc0dkx5QnRiMlIxYkdVZ1kyaDFibXR6SUQwZ01DQXhJRElnTXlJc0ltMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ2V5QmNJbVJsWm1GMWJIUmNJam9nY21WeGRXbHlaU2hjSW1OdmNtVXRhbk12YkdsaWNtRnllUzltYmk5emVXMWliMnd2YVhSbGNtRjBiM0pjSWlrc0lGOWZaWE5OYjJSMWJHVTZJSFJ5ZFdVZ2ZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlltRmlaV3d0Y25WdWRHbHRaUzlqYjNKbExXcHpMM041YldKdmJDOXBkR1Z5WVhSdmNpNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdOemhjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SWl3aWNtVnhkV2x5WlNnbkxpNHZMaTR2Ylc5a2RXeGxjeTlsY3pZdWIySnFaV04wTG1OeVpXRjBaU2NwTzF4dWRtRnlJQ1JQWW1wbFkzUWdQU0J5WlhGMWFYSmxLQ2N1TGk4dUxpOXRiMlIxYkdWekwxOWpiM0psSnlrdVQySnFaV04wTzF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlCamNtVmhkR1VvVUN3Z1JDbDdYRzRnSUhKbGRIVnliaUFrVDJKcVpXTjBMbU55WldGMFpTaFFMQ0JFS1R0Y2JuMDdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5bWJpOXZZbXBsWTNRdlkzSmxZWFJsTG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBM09WeHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBeUlETWlMQ0p5WlhGMWFYSmxLQ2N1TGk4dUxpOXRiMlIxYkdWekwyVnpOaTV2WW1wbFkzUXVaMlYwTFhCeWIzUnZkSGx3WlMxdlppY3BPMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0J5WlhGMWFYSmxLQ2N1TGk4dUxpOXRiMlIxYkdWekwxOWpiM0psSnlrdVQySnFaV04wTG1kbGRGQnliM1J2ZEhsd1pVOW1PMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdlptNHZiMkpxWldOMEwyZGxkQzF3Y205MGIzUjVjR1V0YjJZdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlEZ3dYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElESWdNeUlzSW5KbGNYVnBjbVVvSnk0dUx5NHVMMjF2WkhWc1pYTXZaWE0yTG05aWFtVmpkQzVyWlhsekp5azdYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJSEpsY1hWcGNtVW9KeTR1THk0dUwyMXZaSFZzWlhNdlgyTnZjbVVuS1M1UFltcGxZM1F1YTJWNWN6dGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDJadUwyOWlhbVZqZEM5clpYbHpMbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0E0TVZ4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWdNaUEwSURVaUxDSnlaWEYxYVhKbEtDY3VMaTh1TGk5dGIyUjFiR1Z6TDJWek5pNXZZbXBsWTNRdWMyVjBMWEJ5YjNSdmRIbHdaUzF2WmljcE8xeHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQnlaWEYxYVhKbEtDY3VMaTh1TGk5dGIyUjFiR1Z6TDE5amIzSmxKeWt1VDJKcVpXTjBMbk5sZEZCeWIzUnZkSGx3WlU5bU8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Wm00dmIySnFaV04wTDNObGRDMXdjbTkwYjNSNWNHVXRiMll1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURneVhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015SXNJbkpsY1hWcGNtVW9KeTR1TDIxdlpIVnNaWE12WlhNMkxtOWlhbVZqZEM1MGJ5MXpkSEpwYm1jbktUdGNibkpsY1hWcGNtVW9KeTR1TDIxdlpIVnNaWE12WlhNMkxuTjBjbWx1Wnk1cGRHVnlZWFJ2Y2ljcE8xeHVjbVZ4ZFdseVpTZ25MaTR2Ylc5a2RXeGxjeTkzWldJdVpHOXRMbWwwWlhKaFlteGxKeWs3WEc1eVpYRjFhWEpsS0NjdUxpOXRiMlIxYkdWekwyVnpOaTV3Y205dGFYTmxKeWs3WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUhKbGNYVnBjbVVvSnk0dUwyMXZaSFZzWlhNdlgyTnZjbVVuS1M1UWNtOXRhWE5sTzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZabTR2Y0hKdmJXbHpaUzVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnT0ROY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTkNBMUlpd2ljbVZ4ZFdseVpTZ25MaTR2TGk0dmJXOWtkV3hsY3k5bGN6WXVjM2x0WW05c0p5azdYRzV5WlhGMWFYSmxLQ2N1TGk4dUxpOXRiMlIxYkdWekwyVnpOaTV2WW1wbFkzUXVkRzh0YzNSeWFXNW5KeWs3WEc1eVpYRjFhWEpsS0NjdUxpOHVMaTl0YjJSMWJHVnpMMlZ6Tnk1emVXMWliMnd1WVhONWJtTXRhWFJsY21GMGIzSW5LVHRjYm5KbGNYVnBjbVVvSnk0dUx5NHVMMjF2WkhWc1pYTXZaWE0zTG5ONWJXSnZiQzV2WW5ObGNuWmhZbXhsSnlrN1hHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlISmxjWFZwY21Vb0p5NHVMeTR1TDIxdlpIVnNaWE12WDJOdmNtVW5LUzVUZVcxaWIydzdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5bWJpOXplVzFpYjJ3dmFXNWtaWGd1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURnMFhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015SXNJbkpsY1hWcGNtVW9KeTR1THk0dUwyMXZaSFZzWlhNdlpYTTJMbk4wY21sdVp5NXBkR1Z5WVhSdmNpY3BPMXh1Y21WeGRXbHlaU2duTGk0dkxpNHZiVzlrZFd4bGN5OTNaV0l1Wkc5dExtbDBaWEpoWW14bEp5azdYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJSEpsY1hWcGNtVW9KeTR1THk0dUwyMXZaSFZzWlhNdlgzZHJjeTFsZUhRbktTNW1LQ2RwZEdWeVlYUnZjaWNwTzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZabTR2YzNsdFltOXNMMmwwWlhKaGRHOXlMbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0E0TlZ4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWdNU0F5SURNaUxDSnRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUtHbDBMQ0JEYjI1emRISjFZM1J2Y2l3Z2JtRnRaU3dnWm05eVltbGtaR1Z1Um1sbGJHUXBlMXh1SUNCcFppZ2hLR2wwSUdsdWMzUmhibU5sYjJZZ1EyOXVjM1J5ZFdOMGIzSXBJSHg4SUNobWIzSmlhV1JrWlc1R2FXVnNaQ0FoUFQwZ2RXNWtaV1pwYm1Wa0lDWW1JR1p2Y21KcFpHUmxia1pwWld4a0lHbHVJR2wwS1NsN1hHNGdJQ0FnZEdoeWIzY2dWSGx3WlVWeWNtOXlLRzVoYldVZ0t5QW5PaUJwYm1OdmNuSmxZM1FnYVc1MmIyTmhkR2x2YmlFbktUdGNiaUFnZlNCeVpYUjFjbTRnYVhRN1hHNTlPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5ZllXNHRhVzV6ZEdGdVkyVXVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJRGcyWEc0dkx5QnRiMlIxYkdVZ1kyaDFibXR6SUQwZ01DQXhJRFFnTlNJc0lpOHZJR0ZzYkNCbGJuVnRaWEpoWW14bElHOWlhbVZqZENCclpYbHpMQ0JwYm1Oc2RXUmxjeUJ6ZVcxaWIyeHpYRzUyWVhJZ1oyVjBTMlY1Y3lBOUlISmxjWFZwY21Vb0p5NHZYMjlpYW1WamRDMXJaWGx6SnlsY2JpQWdMQ0JuVDFCVElDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmIySnFaV04wTFdkdmNITW5LVnh1SUNBc0lIQkpSU0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTl2WW1wbFkzUXRjR2xsSnlrN1hHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUtHbDBLWHRjYmlBZ2RtRnlJSEpsYzNWc2RDQWdJQ0FnUFNCblpYUkxaWGx6S0dsMEtWeHVJQ0FnSUN3Z1oyVjBVM2x0WW05c2N5QTlJR2RQVUZNdVpqdGNiaUFnYVdZb1oyVjBVM2x0WW05c2N5bDdYRzRnSUNBZ2RtRnlJSE41YldKdmJITWdQU0JuWlhSVGVXMWliMnh6S0dsMEtWeHVJQ0FnSUNBZ0xDQnBjMFZ1ZFcwZ0lEMGdjRWxGTG1aY2JpQWdJQ0FnSUN3Z2FTQWdJQ0FnSUNBOUlEQmNiaUFnSUNBZ0lDd2dhMlY1TzF4dUlDQWdJSGRvYVd4bEtITjViV0p2YkhNdWJHVnVaM1JvSUQ0Z2FTbHBaaWhwYzBWdWRXMHVZMkZzYkNocGRDd2dhMlY1SUQwZ2MzbHRZbTlzYzF0cEt5dGRLU2x5WlhOMWJIUXVjSFZ6YUNoclpYa3BPMXh1SUNCOUlISmxkSFZ5YmlCeVpYTjFiSFE3WEc1OU8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmWlc1MWJTMXJaWGx6TG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBNE4xeHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBeUlETWlMQ0oyWVhJZ1kzUjRJQ0FnSUNBZ0lDQWdQU0J5WlhGMWFYSmxLQ2N1TDE5amRIZ25LVnh1SUNBc0lHTmhiR3dnSUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmFYUmxjaTFqWVd4c0p5bGNiaUFnTENCcGMwRnljbUY1U1hSbGNpQTlJSEpsY1hWcGNtVW9KeTR2WDJsekxXRnljbUY1TFdsMFpYSW5LVnh1SUNBc0lHRnVUMkpxWldOMElDQWdJRDBnY21WeGRXbHlaU2duTGk5ZllXNHRiMkpxWldOMEp5bGNiaUFnTENCMGIweGxibWQwYUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDNSdkxXeGxibWQwYUNjcFhHNGdJQ3dnWjJWMFNYUmxja1p1SUNBZ1BTQnlaWEYxYVhKbEtDY3VMMk52Y21VdVoyVjBMV2wwWlhKaGRHOXlMVzFsZEdodlpDY3BYRzRnSUN3Z1FsSkZRVXNnSUNBZ0lDQWdQU0I3ZlZ4dUlDQXNJRkpGVkZWU1RpQWdJQ0FnSUQwZ2UzMDdYRzUyWVhJZ1pYaHdiM0owY3lBOUlHMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0b2FYUmxjbUZpYkdVc0lHVnVkSEpwWlhNc0lHWnVMQ0IwYUdGMExDQkpWRVZTUVZSUFVpbDdYRzRnSUhaaGNpQnBkR1Z5Um00Z1BTQkpWRVZTUVZSUFVpQS9JR1oxYm1OMGFXOXVLQ2w3SUhKbGRIVnliaUJwZEdWeVlXSnNaVHNnZlNBNklHZGxkRWwwWlhKR2JpaHBkR1Z5WVdKc1pTbGNiaUFnSUNBc0lHWWdJQ0FnSUNBOUlHTjBlQ2htYml3Z2RHaGhkQ3dnWlc1MGNtbGxjeUEvSURJZ09pQXhLVnh1SUNBZ0lDd2dhVzVrWlhnZ0lEMGdNRnh1SUNBZ0lDd2diR1Z1WjNSb0xDQnpkR1Z3TENCcGRHVnlZWFJ2Y2l3Z2NtVnpkV3gwTzF4dUlDQnBaaWgwZVhCbGIyWWdhWFJsY2tadUlDRTlJQ2RtZFc1amRHbHZiaWNwZEdoeWIzY2dWSGx3WlVWeWNtOXlLR2wwWlhKaFlteGxJQ3NnSnlCcGN5QnViM1FnYVhSbGNtRmliR1VoSnlrN1hHNGdJQzh2SUdaaGMzUWdZMkZ6WlNCbWIzSWdZWEp5WVhseklIZHBkR2dnWkdWbVlYVnNkQ0JwZEdWeVlYUnZjbHh1SUNCcFppaHBjMEZ5Y21GNVNYUmxjaWhwZEdWeVJtNHBLV1p2Y2loc1pXNW5kR2dnUFNCMGIweGxibWQwYUNocGRHVnlZV0pzWlM1c1pXNW5kR2dwT3lCc1pXNW5kR2dnUGlCcGJtUmxlRHNnYVc1a1pYZ3JLeWw3WEc0Z0lDQWdjbVZ6ZFd4MElEMGdaVzUwY21sbGN5QS9JR1lvWVc1UFltcGxZM1FvYzNSbGNDQTlJR2wwWlhKaFlteGxXMmx1WkdWNFhTbGJNRjBzSUhOMFpYQmJNVjBwSURvZ1ppaHBkR1Z5WVdKc1pWdHBibVJsZUYwcE8xeHVJQ0FnSUdsbUtISmxjM1ZzZENBOVBUMGdRbEpGUVVzZ2ZId2djbVZ6ZFd4MElEMDlQU0JTUlZSVlVrNHBjbVYwZFhKdUlISmxjM1ZzZER0Y2JpQWdmU0JsYkhObElHWnZjaWhwZEdWeVlYUnZjaUE5SUdsMFpYSkdiaTVqWVd4c0tHbDBaWEpoWW14bEtUc2dJU2h6ZEdWd0lEMGdhWFJsY21GMGIzSXVibVY0ZENncEtTNWtiMjVsT3lBcGUxeHVJQ0FnSUhKbGMzVnNkQ0E5SUdOaGJHd29hWFJsY21GMGIzSXNJR1lzSUhOMFpYQXVkbUZzZFdVc0lHVnVkSEpwWlhNcE8xeHVJQ0FnSUdsbUtISmxjM1ZzZENBOVBUMGdRbEpGUVVzZ2ZId2djbVZ6ZFd4MElEMDlQU0JTUlZSVlVrNHBjbVYwZFhKdUlISmxjM1ZzZER0Y2JpQWdmVnh1ZlR0Y2JtVjRjRzl5ZEhNdVFsSkZRVXNnSUQwZ1FsSkZRVXM3WEc1bGVIQnZjblJ6TGxKRlZGVlNUaUE5SUZKRlZGVlNUanRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgyWnZjaTF2Wmk1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ09EaGNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SURFZ05DQTFJaXdpTHk4Z1ptRnpkQ0JoY0hCc2VTd2dhSFIwY0RvdkwycHpjR1Z5Wmk1c2JtdHBkQzVqYjIwdlptRnpkQzFoY0hCc2VTODFYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVLR1p1TENCaGNtZHpMQ0IwYUdGMEtYdGNiaUFnZG1GeUlIVnVJRDBnZEdoaGRDQTlQVDBnZFc1a1pXWnBibVZrTzF4dUlDQnpkMmwwWTJnb1lYSm5jeTVzWlc1bmRHZ3BlMXh1SUNBZ0lHTmhjMlVnTURvZ2NtVjBkWEp1SUhWdUlEOGdabTRvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRG9nWm00dVkyRnNiQ2gwYUdGMEtUdGNiaUFnSUNCallYTmxJREU2SUhKbGRIVnliaUIxYmlBL0lHWnVLR0Z5WjNOYk1GMHBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ09pQm1iaTVqWVd4c0tIUm9ZWFFzSUdGeVozTmJNRjBwTzF4dUlDQWdJR05oYzJVZ01qb2djbVYwZFhKdUlIVnVJRDhnWm00b1lYSm5jMXN3WFN3Z1lYSm5jMXN4WFNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E2SUdadUxtTmhiR3dvZEdoaGRDd2dZWEpuYzFzd1hTd2dZWEpuYzFzeFhTazdYRzRnSUNBZ1kyRnpaU0F6T2lCeVpYUjFjbTRnZFc0Z1B5Qm1iaWhoY21keld6QmRMQ0JoY21keld6RmRMQ0JoY21keld6SmRLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEb2dabTR1WTJGc2JDaDBhR0YwTENCaGNtZHpXekJkTENCaGNtZHpXekZkTENCaGNtZHpXekpkS1R0Y2JpQWdJQ0JqWVhObElEUTZJSEpsZEhWeWJpQjFiaUEvSUdadUtHRnlaM05iTUYwc0lHRnlaM05iTVYwc0lHRnlaM05iTWwwc0lHRnlaM05iTTEwcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnT2lCbWJpNWpZV3hzS0hSb1lYUXNJR0Z5WjNOYk1GMHNJR0Z5WjNOYk1WMHNJR0Z5WjNOYk1sMHNJR0Z5WjNOYk0xMHBPMXh1SUNCOUlISmxkSFZ5YmlBZ0lDQWdJQ0FnSUNBZ0lDQWdabTR1WVhCd2JIa29kR2hoZEN3Z1lYSm5jeWs3WEc1OU8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlmYVc1MmIydGxMbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0E0T1Z4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWdNU0EwSURVaUxDSXZMeUJqYUdWamF5QnZiaUJrWldaaGRXeDBJRUZ5Y21GNUlHbDBaWEpoZEc5eVhHNTJZWElnU1hSbGNtRjBiM0p6SUNBOUlISmxjWFZwY21Vb0p5NHZYMmwwWlhKaGRHOXljeWNwWEc0Z0lDd2dTVlJGVWtGVVQxSWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgzZHJjeWNwS0NkcGRHVnlZWFJ2Y2ljcFhHNGdJQ3dnUVhKeVlYbFFjbTkwYnlBOUlFRnljbUY1TG5CeWIzUnZkSGx3WlR0Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpaHBkQ2w3WEc0Z0lISmxkSFZ5YmlCcGRDQWhQVDBnZFc1a1pXWnBibVZrSUNZbUlDaEpkR1Z5WVhSdmNuTXVRWEp5WVhrZ1BUMDlJR2wwSUh4OElFRnljbUY1VUhKdmRHOWJTVlJGVWtGVVQxSmRJRDA5UFNCcGRDazdYRzU5TzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWZhWE10WVhKeVlYa3RhWFJsY2k1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ09UQmNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SURFZ05DQTFJaXdpTHk4Z055NHlMaklnU1hOQmNuSmhlU2hoY21kMWJXVnVkQ2xjYm5aaGNpQmpiMllnUFNCeVpYRjFhWEpsS0NjdUwxOWpiMlluS1R0Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1FYSnlZWGt1YVhOQmNuSmhlU0I4ZkNCbWRXNWpkR2x2YmlCcGMwRnljbUY1S0dGeVp5bDdYRzRnSUhKbGRIVnliaUJqYjJZb1lYSm5LU0E5UFNBblFYSnlZWGtuTzF4dWZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WDJsekxXRnljbUY1TG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBNU1WeHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBeUlETWlMQ0l2THlCallXeHNJSE52YldWMGFHbHVaeUJ2YmlCcGRHVnlZWFJ2Y2lCemRHVndJSGRwZEdnZ2MyRm1aU0JqYkc5emFXNW5JRzl1SUdWeWNtOXlYRzUyWVhJZ1lXNVBZbXBsWTNRZ1BTQnlaWEYxYVhKbEtDY3VMMTloYmkxdlltcGxZM1FuS1R0Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0b2FYUmxjbUYwYjNJc0lHWnVMQ0IyWVd4MVpTd2daVzUwY21sbGN5bDdYRzRnSUhSeWVTQjdYRzRnSUNBZ2NtVjBkWEp1SUdWdWRISnBaWE1nUHlCbWJpaGhiazlpYW1WamRDaDJZV3gxWlNsYk1GMHNJSFpoYkhWbFd6RmRLU0E2SUdadUtIWmhiSFZsS1R0Y2JpQWdMeThnTnk0MExqWWdTWFJsY21GMGIzSkRiRzl6WlNocGRHVnlZWFJ2Y2l3Z1kyOXRjR3hsZEdsdmJpbGNiaUFnZlNCallYUmphQ2hsS1h0Y2JpQWdJQ0IyWVhJZ2NtVjBJRDBnYVhSbGNtRjBiM0piSjNKbGRIVnliaWRkTzF4dUlDQWdJR2xtS0hKbGRDQWhQVDBnZFc1a1pXWnBibVZrS1dGdVQySnFaV04wS0hKbGRDNWpZV3hzS0dsMFpYSmhkRzl5S1NrN1hHNGdJQ0FnZEdoeWIzY2daVHRjYmlBZ2ZWeHVmVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlgybDBaWEl0WTJGc2JDNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdPVEpjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdOQ0ExSWl3aWRtRnlJRWxVUlZKQlZFOVNJQ0FnSUNBOUlISmxjWFZwY21Vb0p5NHZYM2RyY3ljcEtDZHBkR1Z5WVhSdmNpY3BYRzRnSUN3Z1UwRkdSVjlEVEU5VFNVNUhJRDBnWm1Gc2MyVTdYRzVjYm5SeWVTQjdYRzRnSUhaaGNpQnlhWFJsY2lBOUlGczNYVnRKVkVWU1FWUlBVbDBvS1R0Y2JpQWdjbWwwWlhKYkozSmxkSFZ5YmlkZElEMGdablZ1WTNScGIyNG9LWHNnVTBGR1JWOURURTlUU1U1SElEMGdkSEoxWlRzZ2ZUdGNiaUFnUVhKeVlYa3Vabkp2YlNoeWFYUmxjaXdnWm5WdVkzUnBiMjRvS1hzZ2RHaHliM2NnTWpzZ2ZTazdYRzU5SUdOaGRHTm9LR1VwZXlBdktpQmxiWEIwZVNBcUx5QjlYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRvWlhobFl5d2djMnRwY0VOc2IzTnBibWNwZTF4dUlDQnBaaWdoYzJ0cGNFTnNiM05wYm1jZ0ppWWdJVk5CUmtWZlEweFBVMGxPUnlseVpYUjFjbTRnWm1Gc2MyVTdYRzRnSUhaaGNpQnpZV1psSUQwZ1ptRnNjMlU3WEc0Z0lIUnllU0I3WEc0Z0lDQWdkbUZ5SUdGeWNpQWdQU0JiTjExY2JpQWdJQ0FnSUN3Z2FYUmxjaUE5SUdGeWNsdEpWRVZTUVZSUFVsMG9LVHRjYmlBZ0lDQnBkR1Z5TG01bGVIUWdQU0JtZFc1amRHbHZiaWdwZXlCeVpYUjFjbTRnZTJSdmJtVTZJSE5oWm1VZ1BTQjBjblZsZlRzZ2ZUdGNiaUFnSUNCaGNuSmJTVlJGVWtGVVQxSmRJRDBnWm5WdVkzUnBiMjRvS1hzZ2NtVjBkWEp1SUdsMFpYSTdJSDA3WEc0Z0lDQWdaWGhsWXloaGNuSXBPMXh1SUNCOUlHTmhkR05vS0dVcGV5QXZLaUJsYlhCMGVTQXFMeUI5WEc0Z0lISmxkSFZ5YmlCellXWmxPMXh1ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMmwwWlhJdFpHVjBaV04wTG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBNU0xeHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBMElEVWlMQ0oyWVhJZ1oyVjBTMlY1Y3lBZ0lEMGdjbVZ4ZFdseVpTZ25MaTlmYjJKcVpXTjBMV3RsZVhNbktWeHVJQ0FzSUhSdlNVOWlhbVZqZENBOUlISmxjWFZwY21Vb0p5NHZYM1J2TFdsdlltcGxZM1FuS1R0Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0b2IySnFaV04wTENCbGJDbDdYRzRnSUhaaGNpQlBJQ0FnSUNBZ1BTQjBiMGxQWW1wbFkzUW9iMkpxWldOMEtWeHVJQ0FnSUN3Z2EyVjVjeUFnSUQwZ1oyVjBTMlY1Y3loUEtWeHVJQ0FnSUN3Z2JHVnVaM1JvSUQwZ2EyVjVjeTVzWlc1bmRHaGNiaUFnSUNBc0lHbHVaR1Y0SUNBOUlEQmNiaUFnSUNBc0lHdGxlVHRjYmlBZ2QyaHBiR1VvYkdWdVozUm9JRDRnYVc1a1pYZ3BhV1lvVDF0clpYa2dQU0JyWlhselcybHVaR1Y0S3l0ZFhTQTlQVDBnWld3cGNtVjBkWEp1SUd0bGVUdGNibjA3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXJaWGx2Wmk1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ09UUmNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SURFZ01pQXpJaXdpZG1GeUlHZHNiMkpoYkNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJkc2IySmhiQ2NwWEc0Z0lDd2diV0ZqY205MFlYTnJJRDBnY21WeGRXbHlaU2duTGk5ZmRHRnpheWNwTG5ObGRGeHVJQ0FzSUU5aWMyVnlkbVZ5SUNBOUlHZHNiMkpoYkM1TmRYUmhkR2x2Yms5aWMyVnlkbVZ5SUh4OElHZHNiMkpoYkM1WFpXSkxhWFJOZFhSaGRHbHZiazlpYzJWeWRtVnlYRzRnSUN3Z2NISnZZMlZ6Y3lBZ0lEMGdaMnh2WW1Gc0xuQnliMk5sYzNOY2JpQWdMQ0JRY205dGFYTmxJQ0FnUFNCbmJHOWlZV3d1VUhKdmJXbHpaVnh1SUNBc0lHbHpUbTlrWlNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJOdlppY3BLSEJ5YjJObGMzTXBJRDA5SUNkd2NtOWpaWE56Snp0Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpZ3BlMXh1SUNCMllYSWdhR1ZoWkN3Z2JHRnpkQ3dnYm05MGFXWjVPMXh1WEc0Z0lIWmhjaUJtYkhWemFDQTlJR1oxYm1OMGFXOXVLQ2w3WEc0Z0lDQWdkbUZ5SUhCaGNtVnVkQ3dnWm00N1hHNGdJQ0FnYVdZb2FYTk9iMlJsSUNZbUlDaHdZWEpsYm5RZ1BTQndjbTlqWlhOekxtUnZiV0ZwYmlrcGNHRnlaVzUwTG1WNGFYUW9LVHRjYmlBZ0lDQjNhR2xzWlNob1pXRmtLWHRjYmlBZ0lDQWdJR1p1SUNBZ1BTQm9aV0ZrTG1adU8xeHVJQ0FnSUNBZ2FHVmhaQ0E5SUdobFlXUXVibVY0ZER0Y2JpQWdJQ0FnSUhSeWVTQjdYRzRnSUNBZ0lDQWdJR1p1S0NrN1hHNGdJQ0FnSUNCOUlHTmhkR05vS0dVcGUxeHVJQ0FnSUNBZ0lDQnBaaWhvWldGa0tXNXZkR2xtZVNncE8xeHVJQ0FnSUNBZ0lDQmxiSE5sSUd4aGMzUWdQU0IxYm1SbFptbHVaV1E3WEc0Z0lDQWdJQ0FnSUhSb2NtOTNJR1U3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU0JzWVhOMElEMGdkVzVrWldacGJtVmtPMXh1SUNBZ0lHbG1LSEJoY21WdWRDbHdZWEpsYm5RdVpXNTBaWElvS1R0Y2JpQWdmVHRjYmx4dUlDQXZMeUJPYjJSbExtcHpYRzRnSUdsbUtHbHpUbTlrWlNsN1hHNGdJQ0FnYm05MGFXWjVJRDBnWm5WdVkzUnBiMjRvS1h0Y2JpQWdJQ0FnSUhCeWIyTmxjM011Ym1WNGRGUnBZMnNvWm14MWMyZ3BPMXh1SUNBZ0lIMDdYRzRnSUM4dklHSnliM2R6WlhKeklIZHBkR2dnVFhWMFlYUnBiMjVQWW5ObGNuWmxjbHh1SUNCOUlHVnNjMlVnYVdZb1QySnpaWEoyWlhJcGUxeHVJQ0FnSUhaaGNpQjBiMmRuYkdVZ1BTQjBjblZsWEc0Z0lDQWdJQ0FzSUc1dlpHVWdJQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVlJsZUhST2IyUmxLQ2NuS1R0Y2JpQWdJQ0J1WlhjZ1QySnpaWEoyWlhJb1pteDFjMmdwTG05aWMyVnlkbVVvYm05a1pTd2dlMk5vWVhKaFkzUmxja1JoZEdFNklIUnlkV1Y5S1RzZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJHbHVaU0J1YnkxdVpYZGNiaUFnSUNCdWIzUnBabmtnUFNCbWRXNWpkR2x2YmlncGUxeHVJQ0FnSUNBZ2JtOWtaUzVrWVhSaElEMGdkRzluWjJ4bElEMGdJWFJ2WjJkc1pUdGNiaUFnSUNCOU8xeHVJQ0F2THlCbGJuWnBjbTl1YldWdWRITWdkMmwwYUNCdFlYbGlaU0J1YjI0dFkyOXRjR3hsZEdWc2VTQmpiM0p5WldOMExDQmlkWFFnWlhocGMzUmxiblFnVUhKdmJXbHpaVnh1SUNCOUlHVnNjMlVnYVdZb1VISnZiV2x6WlNBbUppQlFjbTl0YVhObExuSmxjMjlzZG1VcGUxeHVJQ0FnSUhaaGNpQndjbTl0YVhObElEMGdVSEp2YldselpTNXlaWE52YkhabEtDazdYRzRnSUNBZ2JtOTBhV1o1SUQwZ1puVnVZM1JwYjI0b0tYdGNiaUFnSUNBZ0lIQnliMjFwYzJVdWRHaGxiaWhtYkhWemFDazdYRzRnSUNBZ2ZUdGNiaUFnTHk4Z1ptOXlJRzkwYUdWeUlHVnVkbWx5YjI1dFpXNTBjeUF0SUcxaFkzSnZkR0Z6YXlCaVlYTmxaQ0J2YmpwY2JpQWdMeThnTFNCelpYUkpiVzFsWkdsaGRHVmNiaUFnTHk4Z0xTQk5aWE56WVdkbFEyaGhibTVsYkZ4dUlDQXZMeUF0SUhkcGJtUnZkeTV3YjNOMFRXVnpjMkZuWEc0Z0lDOHZJQzBnYjI1eVpXRmtlWE4wWVhSbFkyaGhibWRsWEc0Z0lDOHZJQzBnYzJWMFZHbHRaVzkxZEZ4dUlDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUc1dmRHbG1lU0E5SUdaMWJtTjBhVzl1S0NsN1hHNGdJQ0FnSUNBdkx5QnpkSEpoYm1kbElFbEZJQ3NnZDJWaWNHRmpheUJrWlhZZ2MyVnlkbVZ5SUdKMVp5QXRJSFZ6WlNBdVkyRnNiQ2huYkc5aVlXd3BYRzRnSUNBZ0lDQnRZV055YjNSaGMyc3VZMkZzYkNobmJHOWlZV3dzSUdac2RYTm9LVHRjYmlBZ0lDQjlPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJR1oxYm1OMGFXOXVLR1p1S1h0Y2JpQWdJQ0IyWVhJZ2RHRnpheUE5SUh0bWJqb2dabTRzSUc1bGVIUTZJSFZ1WkdWbWFXNWxaSDA3WEc0Z0lDQWdhV1lvYkdGemRDbHNZWE4wTG01bGVIUWdQU0IwWVhOck8xeHVJQ0FnSUdsbUtDRm9aV0ZrS1h0Y2JpQWdJQ0FnSUdobFlXUWdQU0IwWVhOck8xeHVJQ0FnSUNBZ2JtOTBhV1o1S0NrN1hHNGdJQ0FnZlNCc1lYTjBJRDBnZEdGemF6dGNiaUFnZlR0Y2JuMDdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDE5dGFXTnliM1JoYzJzdWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlEazFYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElEUWdOU0lzSWk4dklHWmhiR3hpWVdOcklHWnZjaUJKUlRFeElHSjFaMmQ1SUU5aWFtVmpkQzVuWlhSUGQyNVFjbTl3WlhKMGVVNWhiV1Z6SUhkcGRHZ2dhV1p5WVcxbElHRnVaQ0IzYVc1a2IzZGNiblpoY2lCMGIwbFBZbXBsWTNRZ1BTQnlaWEYxYVhKbEtDY3VMMTkwYnkxcGIySnFaV04wSnlsY2JpQWdMQ0JuVDFCT0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOXZZbXBsWTNRdFoyOXdiaWNwTG1aY2JpQWdMQ0IwYjFOMGNtbHVaeUFnUFNCN2ZTNTBiMU4wY21sdVp6dGNibHh1ZG1GeUlIZHBibVJ2ZDA1aGJXVnpJRDBnZEhsd1pXOW1JSGRwYm1SdmR5QTlQU0FuYjJKcVpXTjBKeUFtSmlCM2FXNWtiM2NnSmlZZ1QySnFaV04wTG1kbGRFOTNibEJ5YjNCbGNuUjVUbUZ0WlhOY2JpQWdQeUJQWW1wbFkzUXVaMlYwVDNkdVVISnZjR1Z5ZEhsT1lXMWxjeWgzYVc1a2IzY3BJRG9nVzEwN1hHNWNiblpoY2lCblpYUlhhVzVrYjNkT1lXMWxjeUE5SUdaMWJtTjBhVzl1S0dsMEtYdGNiaUFnZEhKNUlIdGNiaUFnSUNCeVpYUjFjbTRnWjA5UVRpaHBkQ2s3WEc0Z0lIMGdZMkYwWTJnb1pTbDdYRzRnSUNBZ2NtVjBkWEp1SUhkcGJtUnZkMDVoYldWekxuTnNhV05sS0NrN1hHNGdJSDFjYm4wN1hHNWNibTF2WkhWc1pTNWxlSEJ2Y25SekxtWWdQU0JtZFc1amRHbHZiaUJuWlhSUGQyNVFjbTl3WlhKMGVVNWhiV1Z6S0dsMEtYdGNiaUFnY21WMGRYSnVJSGRwYm1SdmQwNWhiV1Z6SUNZbUlIUnZVM1J5YVc1bkxtTmhiR3dvYVhRcElEMDlJQ2RiYjJKcVpXTjBJRmRwYm1SdmQxMG5JRDhnWjJWMFYybHVaRzkzVG1GdFpYTW9hWFFwSURvZ1owOVFUaWgwYjBsUFltcGxZM1FvYVhRcEtUdGNibjA3WEc1Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYMjlpYW1WamRDMW5iM0J1TFdWNGRDNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdPVFpjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lERWdNaUF6SWl3aWRtRnlJR2hwWkdVZ1BTQnlaWEYxYVhKbEtDY3VMMTlvYVdSbEp5azdYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVLSFJoY21kbGRDd2djM0pqTENCellXWmxLWHRjYmlBZ1ptOXlLSFpoY2lCclpYa2dhVzRnYzNKaktYdGNiaUFnSUNCcFppaHpZV1psSUNZbUlIUmhjbWRsZEZ0clpYbGRLWFJoY21kbGRGdHJaWGxkSUQwZ2MzSmpXMnRsZVYwN1hHNGdJQ0FnWld4elpTQm9hV1JsS0hSaGNtZGxkQ3dnYTJWNUxDQnpjbU5iYTJWNVhTazdYRzRnSUgwZ2NtVjBkWEp1SUhSaGNtZGxkRHRjYm4wN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTl5WldSbFptbHVaUzFoYkd3dWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlEazNYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNBeElEUWdOU0lzSWk4dklGZHZjbXR6SUhkcGRHZ2dYMTl3Y205MGIxOWZJRzl1YkhrdUlFOXNaQ0IyT0NCallXNG5kQ0IzYjNKcklIZHBkR2dnYm5Wc2JDQndjbTkwYnlCdlltcGxZM1J6TGx4dUx5b2daWE5zYVc1MExXUnBjMkZpYkdVZ2JtOHRjSEp2ZEc4Z0tpOWNiblpoY2lCcGMwOWlhbVZqZENBOUlISmxjWFZwY21Vb0p5NHZYMmx6TFc5aWFtVmpkQ2NwWEc0Z0lDd2dZVzVQWW1wbFkzUWdQU0J5WlhGMWFYSmxLQ2N1TDE5aGJpMXZZbXBsWTNRbktUdGNiblpoY2lCamFHVmpheUE5SUdaMWJtTjBhVzl1S0U4c0lIQnliM1J2S1h0Y2JpQWdZVzVQWW1wbFkzUW9UeWs3WEc0Z0lHbG1LQ0ZwYzA5aWFtVmpkQ2h3Y205MGJ5a2dKaVlnY0hKdmRHOGdJVDA5SUc1MWJHd3BkR2h5YjNjZ1ZIbHdaVVZ5Y205eUtIQnliM1J2SUNzZ1hDSTZJR05oYmlkMElITmxkQ0JoY3lCd2NtOTBiM1I1Y0dVaFhDSXBPMXh1ZlR0Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ2UxeHVJQ0J6WlhRNklFOWlhbVZqZEM1elpYUlFjbTkwYjNSNWNHVlBaaUI4ZkNBb0oxOWZjSEp2ZEc5Zlh5Y2dhVzRnZTMwZ1B5QXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXNhVzVsWEc0Z0lDQWdablZ1WTNScGIyNG9kR1Z6ZEN3Z1luVm5aM2tzSUhObGRDbDdYRzRnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNCelpYUWdQU0J5WlhGMWFYSmxLQ2N1TDE5amRIZ25LU2hHZFc1amRHbHZiaTVqWVd4c0xDQnlaWEYxYVhKbEtDY3VMMTl2WW1wbFkzUXRaMjl3WkNjcExtWW9UMkpxWldOMExuQnliM1J2ZEhsd1pTd2dKMTlmY0hKdmRHOWZYeWNwTG5ObGRDd2dNaWs3WEc0Z0lDQWdJQ0FnSUhObGRDaDBaWE4wTENCYlhTazdYRzRnSUNBZ0lDQWdJR0oxWjJkNUlEMGdJU2gwWlhOMElHbHVjM1JoYm1ObGIyWWdRWEp5WVhrcE8xeHVJQ0FnSUNBZ2ZTQmpZWFJqYUNobEtYc2dZblZuWjNrZ1BTQjBjblZsT3lCOVhHNGdJQ0FnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnYzJWMFVISnZkRzkwZVhCbFQyWW9UeXdnY0hKdmRHOHBlMXh1SUNBZ0lDQWdJQ0JqYUdWamF5aFBMQ0J3Y205MGJ5azdYRzRnSUNBZ0lDQWdJR2xtS0dKMVoyZDVLVTh1WDE5d2NtOTBiMTlmSUQwZ2NISnZkRzg3WEc0Z0lDQWdJQ0FnSUdWc2MyVWdjMlYwS0U4c0lIQnliM1J2S1R0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUU4N1hHNGdJQ0FnSUNCOU8xeHVJQ0FnSUgwb2UzMHNJR1poYkhObEtTQTZJSFZ1WkdWbWFXNWxaQ2tzWEc0Z0lHTm9aV05yT2lCamFHVmphMXh1ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYM05sZEMxd2NtOTBieTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnT1RoY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklpd2lKM1Z6WlNCemRISnBZM1FuTzF4dWRtRnlJR2RzYjJKaGJDQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZaMnh2WW1Gc0p5bGNiaUFnTENCamIzSmxJQ0FnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJOdmNtVW5LVnh1SUNBc0lHUlFJQ0FnSUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmIySnFaV04wTFdSd0p5bGNiaUFnTENCRVJWTkRVa2xRVkU5U1V5QTlJSEpsY1hWcGNtVW9KeTR2WDJSbGMyTnlhWEIwYjNKekp5bGNiaUFnTENCVFVFVkRTVVZUSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDNkcmN5Y3BLQ2R6Y0dWamFXVnpKeWs3WEc1Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0b1MwVlpLWHRjYmlBZ2RtRnlJRU1nUFNCMGVYQmxiMllnWTI5eVpWdExSVmxkSUQwOUlDZG1kVzVqZEdsdmJpY2dQeUJqYjNKbFcwdEZXVjBnT2lCbmJHOWlZV3hiUzBWWlhUdGNiaUFnYVdZb1JFVlRRMUpKVUZSUFVsTWdKaVlnUXlBbUppQWhRMXRUVUVWRFNVVlRYU2xrVUM1bUtFTXNJRk5RUlVOSlJWTXNJSHRjYmlBZ0lDQmpiMjVtYVdkMWNtRmliR1U2SUhSeWRXVXNYRzRnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwZXlCeVpYUjFjbTRnZEdocGN6c2dmVnh1SUNCOUtUdGNibjA3WEc1Y2JseHVMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZYRzR2THlCWFJVSlFRVU5MSUVaUFQxUkZVbHh1THk4Z0xpOStMMk52Y21VdGFuTXZiR2xpY21GeWVTOXRiMlIxYkdWekwxOXpaWFF0YzNCbFkybGxjeTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnT1RsY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTkNBMUlpd2lMeThnTnk0ekxqSXdJRk53WldOcFpYTkRiMjV6ZEhKMVkzUnZjaWhQTENCa1pXWmhkV3gwUTI5dWMzUnlkV04wYjNJcFhHNTJZWElnWVc1UFltcGxZM1FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZZVzR0YjJKcVpXTjBKeWxjYmlBZ0xDQmhSblZ1WTNScGIyNGdQU0J5WlhGMWFYSmxLQ2N1TDE5aExXWjFibU4wYVc5dUp5bGNiaUFnTENCVFVFVkRTVVZUSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTkzYTNNbktTZ25jM0JsWTJsbGN5Y3BPMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaWhQTENCRUtYdGNiaUFnZG1GeUlFTWdQU0JoYms5aWFtVmpkQ2hQS1M1amIyNXpkSEoxWTNSdmNpd2dVenRjYmlBZ2NtVjBkWEp1SUVNZ1BUMDlJSFZ1WkdWbWFXNWxaQ0I4ZkNBb1V5QTlJR0Z1VDJKcVpXTjBLRU1wVzFOUVJVTkpSVk5kS1NBOVBTQjFibVJsWm1sdVpXUWdQeUJFSURvZ1lVWjFibU4wYVc5dUtGTXBPMXh1ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WTI5eVpTMXFjeTlzYVdKeVlYSjVMMjF2WkhWc1pYTXZYM053WldOcFpYTXRZMjl1YzNSeWRXTjBiM0l1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURFd01GeHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBMElEVWlMQ0oyWVhJZ0pHVjRjRzl5ZENBOUlISmxjWFZwY21Vb0p5NHZYMlY0Y0c5eWRDY3BYRzR2THlBeE9TNHhMakl1TWlBdklERTFMakl1TXk0MUlFOWlhbVZqZEM1amNtVmhkR1VvVHlCYkxDQlFjbTl3WlhKMGFXVnpYU2xjYmlSbGVIQnZjblFvSkdWNGNHOXlkQzVUTENBblQySnFaV04wSnl3Z2UyTnlaV0YwWlRvZ2NtVnhkV2x5WlNnbkxpOWZiMkpxWldOMExXTnlaV0YwWlNjcGZTazdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDJWek5pNXZZbXBsWTNRdVkzSmxZWFJsTG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBeE1ERmNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SURFZ01pQXpJaXdpTHk4Z01Ua3VNUzR5TGprZ1QySnFaV04wTG1kbGRGQnliM1J2ZEhsd1pVOW1LRThwWEc1MllYSWdkRzlQWW1wbFkzUWdJQ0FnSUNBZ0lEMGdjbVZ4ZFdseVpTZ25MaTlmZEc4dGIySnFaV04wSnlsY2JpQWdMQ0FrWjJWMFVISnZkRzkwZVhCbFQyWWdQU0J5WlhGMWFYSmxLQ2N1TDE5dlltcGxZM1F0WjNCdkp5azdYRzVjYm5KbGNYVnBjbVVvSnk0dlgyOWlhbVZqZEMxellYQW5LU2duWjJWMFVISnZkRzkwZVhCbFQyWW5MQ0JtZFc1amRHbHZiaWdwZTF4dUlDQnlaWFIxY200Z1puVnVZM1JwYjI0Z1oyVjBVSEp2ZEc5MGVYQmxUMllvYVhRcGUxeHVJQ0FnSUhKbGRIVnliaUFrWjJWMFVISnZkRzkwZVhCbFQyWW9kRzlQWW1wbFkzUW9hWFFwS1R0Y2JpQWdmVHRjYm4wcE8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlsY3pZdWIySnFaV04wTG1kbGRDMXdjbTkwYjNSNWNHVXRiMll1YW5OY2JpOHZJRzF2WkhWc1pTQnBaQ0E5SURFd01seHVMeThnYlc5a2RXeGxJR05vZFc1cmN5QTlJREFnTVNBeUlETWlMQ0l2THlBeE9TNHhMakl1TVRRZ1QySnFaV04wTG10bGVYTW9UeWxjYm5aaGNpQjBiMDlpYW1WamRDQTlJSEpsY1hWcGNtVW9KeTR2WDNSdkxXOWlhbVZqZENjcFhHNGdJQ3dnSkd0bGVYTWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOXZZbXBsWTNRdGEyVjVjeWNwTzF4dVhHNXlaWEYxYVhKbEtDY3VMMTl2WW1wbFkzUXRjMkZ3Snlrb0oydGxlWE1uTENCbWRXNWpkR2x2YmlncGUxeHVJQ0J5WlhSMWNtNGdablZ1WTNScGIyNGdhMlY1Y3locGRDbDdYRzRnSUNBZ2NtVjBkWEp1SUNSclpYbHpLSFJ2VDJKcVpXTjBLR2wwS1NrN1hHNGdJSDA3WEc1OUtUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlkyOXlaUzFxY3k5c2FXSnlZWEo1TDIxdlpIVnNaWE12WlhNMkxtOWlhbVZqZEM1clpYbHpMbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0F4TUROY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJRElnTkNBMUlpd2lMeThnTVRrdU1TNHpMakU1SUU5aWFtVmpkQzV6WlhSUWNtOTBiM1I1Y0dWUFppaFBMQ0J3Y205MGJ5bGNiblpoY2lBa1pYaHdiM0owSUQwZ2NtVnhkV2x5WlNnbkxpOWZaWGh3YjNKMEp5azdYRzRrWlhod2IzSjBLQ1JsZUhCdmNuUXVVeXdnSjA5aWFtVmpkQ2NzSUh0elpYUlFjbTkwYjNSNWNHVlBaam9nY21WeGRXbHlaU2duTGk5ZmMyVjBMWEJ5YjNSdkp5a3VjMlYwZlNrN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMlZ6Tmk1dlltcGxZM1F1YzJWMExYQnliM1J2ZEhsd1pTMXZaaTVxYzF4dUx5OGdiVzlrZFd4bElHbGtJRDBnTVRBMFhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015SXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JuWmhjaUJNU1VKU1FWSlpJQ0FnSUNBZ0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOXNhV0p5WVhKNUp5bGNiaUFnTENCbmJHOWlZV3dnSUNBZ0lDQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTluYkc5aVlXd25LVnh1SUNBc0lHTjBlQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJOMGVDY3BYRzRnSUN3Z1kyeGhjM052WmlBZ0lDQWdJQ0FnSUNBZ0lEMGdjbVZ4ZFdseVpTZ25MaTlmWTJ4aGMzTnZaaWNwWEc0Z0lDd2dKR1Y0Y0c5eWRDQWdJQ0FnSUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZlpYaHdiM0owSnlsY2JpQWdMQ0JwYzA5aWFtVmpkQ0FnSUNBZ0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOXBjeTF2WW1wbFkzUW5LVnh1SUNBc0lHRkdkVzVqZEdsdmJpQWdJQ0FnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJFdFpuVnVZM1JwYjI0bktWeHVJQ0FzSUdGdVNXNXpkR0Z1WTJVZ0lDQWdJQ0FnSUNBOUlISmxjWFZwY21Vb0p5NHZYMkZ1TFdsdWMzUmhibU5sSnlsY2JpQWdMQ0JtYjNKUFppQWdJQ0FnSUNBZ0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOW1iM0l0YjJZbktWeHVJQ0FzSUhOd1pXTnBaWE5EYjI1emRISjFZM1J2Y2lBOUlISmxjWFZwY21Vb0p5NHZYM053WldOcFpYTXRZMjl1YzNSeWRXTjBiM0luS1Z4dUlDQXNJSFJoYzJzZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgzUmhjMnNuS1M1elpYUmNiaUFnTENCdGFXTnliM1JoYzJzZ0lDQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTl0YVdOeWIzUmhjMnNuS1NncFhHNGdJQ3dnVUZKUFRVbFRSU0FnSUNBZ0lDQWdJQ0FnSUQwZ0oxQnliMjFwYzJVblhHNGdJQ3dnVkhsd1pVVnljbTl5SUNBZ0lDQWdJQ0FnSUQwZ1oyeHZZbUZzTGxSNWNHVkZjbkp2Y2x4dUlDQXNJSEJ5YjJObGMzTWdJQ0FnSUNBZ0lDQWdJQ0E5SUdkc2IySmhiQzV3Y205alpYTnpYRzRnSUN3Z0pGQnliMjFwYzJVZ0lDQWdJQ0FnSUNBZ0lEMGdaMnh2WW1Gc1cxQlNUMDFKVTBWZFhHNGdJQ3dnY0hKdlkyVnpjeUFnSUNBZ0lDQWdJQ0FnSUQwZ1oyeHZZbUZzTG5CeWIyTmxjM05jYmlBZ0xDQnBjMDV2WkdVZ0lDQWdJQ0FnSUNBZ0lDQWdQU0JqYkdGemMyOW1LSEJ5YjJObGMzTXBJRDA5SUNkd2NtOWpaWE56SjF4dUlDQXNJR1Z0Y0hSNUlDQWdJQ0FnSUNBZ0lDQWdJQ0E5SUdaMWJtTjBhVzl1S0NsN0lDOHFJR1Z0Y0hSNUlDb3ZJSDFjYmlBZ0xDQkpiblJsY201aGJDd2dSMlZ1WlhKcFkxQnliMjFwYzJWRFlYQmhZbWxzYVhSNUxDQlhjbUZ3Y0dWeU8xeHVYRzUyWVhJZ1ZWTkZYMDVCVkVsV1JTQTlJQ0VoWm5WdVkzUnBiMjRvS1h0Y2JpQWdkSEo1SUh0Y2JpQWdJQ0F2THlCamIzSnlaV04wSUhOMVltTnNZWE56YVc1bklIZHBkR2dnUUVCemNHVmphV1Z6SUhOMWNIQnZjblJjYmlBZ0lDQjJZWElnY0hKdmJXbHpaU0FnSUNBZ1BTQWtVSEp2YldselpTNXlaWE52YkhabEtERXBYRzRnSUNBZ0lDQXNJRVpoYTJWUWNtOXRhWE5sSUQwZ0tIQnliMjFwYzJVdVkyOXVjM1J5ZFdOMGIzSWdQU0I3ZlNsYmNtVnhkV2x5WlNnbkxpOWZkMnR6Snlrb0ozTndaV05wWlhNbktWMGdQU0JtZFc1amRHbHZiaWhsZUdWaktYc2daWGhsWXlobGJYQjBlU3dnWlcxd2RIa3BPeUI5TzF4dUlDQWdJQzh2SUhWdWFHRnVaR3hsWkNCeVpXcGxZM1JwYjI1eklIUnlZV05yYVc1bklITjFjSEJ2Y25Rc0lFNXZaR1ZLVXlCUWNtOXRhWE5sSUhkcGRHaHZkWFFnYVhRZ1ptRnBiSE1nUUVCemNHVmphV1Z6SUhSbGMzUmNiaUFnSUNCeVpYUjFjbTRnS0dselRtOWtaU0I4ZkNCMGVYQmxiMllnVUhKdmJXbHpaVkpsYW1WamRHbHZia1YyWlc1MElEMDlJQ2RtZFc1amRHbHZiaWNwSUNZbUlIQnliMjFwYzJVdWRHaGxiaWhsYlhCMGVTa2dhVzV6ZEdGdVkyVnZaaUJHWVd0bFVISnZiV2x6WlR0Y2JpQWdmU0JqWVhSamFDaGxLWHNnTHlvZ1pXMXdkSGtnS2k4Z2ZWeHVmU2dwTzF4dVhHNHZMeUJvWld4d1pYSnpYRzUyWVhJZ2MyRnRaVU52Ym5OMGNuVmpkRzl5SUQwZ1puVnVZM1JwYjI0b1lTd2dZaWw3WEc0Z0lDOHZJSGRwZEdnZ2JHbGljbUZ5ZVNCM2NtRndjR1Z5SUhOd1pXTnBZV3dnWTJGelpWeHVJQ0J5WlhSMWNtNGdZU0E5UFQwZ1lpQjhmQ0JoSUQwOVBTQWtVSEp2YldselpTQW1KaUJpSUQwOVBTQlhjbUZ3Y0dWeU8xeHVmVHRjYm5aaGNpQnBjMVJvWlc1aFlteGxJRDBnWm5WdVkzUnBiMjRvYVhRcGUxeHVJQ0IyWVhJZ2RHaGxianRjYmlBZ2NtVjBkWEp1SUdselQySnFaV04wS0dsMEtTQW1KaUIwZVhCbGIyWWdLSFJvWlc0Z1BTQnBkQzUwYUdWdUtTQTlQU0FuWm5WdVkzUnBiMjRuSUQ4Z2RHaGxiaUE2SUdaaGJITmxPMXh1ZlR0Y2JuWmhjaUJ1WlhkUWNtOXRhWE5sUTJGd1lXSnBiR2wwZVNBOUlHWjFibU4wYVc5dUtFTXBlMXh1SUNCeVpYUjFjbTRnYzJGdFpVTnZibk4wY25WamRHOXlLQ1JRY205dGFYTmxMQ0JES1Z4dUlDQWdJRDhnYm1WM0lGQnliMjFwYzJWRFlYQmhZbWxzYVhSNUtFTXBYRzRnSUNBZ09pQnVaWGNnUjJWdVpYSnBZMUJ5YjIxcGMyVkRZWEJoWW1sc2FYUjVLRU1wTzF4dWZUdGNiblpoY2lCUWNtOXRhWE5sUTJGd1lXSnBiR2wwZVNBOUlFZGxibVZ5YVdOUWNtOXRhWE5sUTJGd1lXSnBiR2wwZVNBOUlHWjFibU4wYVc5dUtFTXBlMXh1SUNCMllYSWdjbVZ6YjJ4MlpTd2djbVZxWldOME8xeHVJQ0IwYUdsekxuQnliMjFwYzJVZ1BTQnVaWGNnUXlobWRXNWpkR2x2Ymlna0pISmxjMjlzZG1Vc0lDUWtjbVZxWldOMEtYdGNiaUFnSUNCcFppaHlaWE52YkhabElDRTlQU0IxYm1SbFptbHVaV1FnZkh3Z2NtVnFaV04wSUNFOVBTQjFibVJsWm1sdVpXUXBkR2h5YjNjZ1ZIbHdaVVZ5Y205eUtDZENZV1FnVUhKdmJXbHpaU0JqYjI1emRISjFZM1J2Y2ljcE8xeHVJQ0FnSUhKbGMyOXNkbVVnUFNBa0pISmxjMjlzZG1VN1hHNGdJQ0FnY21WcVpXTjBJQ0E5SUNRa2NtVnFaV04wTzF4dUlDQjlLVHRjYmlBZ2RHaHBjeTV5WlhOdmJIWmxJRDBnWVVaMWJtTjBhVzl1S0hKbGMyOXNkbVVwTzF4dUlDQjBhR2x6TG5KbGFtVmpkQ0FnUFNCaFJuVnVZM1JwYjI0b2NtVnFaV04wS1R0Y2JuMDdYRzUyWVhJZ2NHVnlabTl5YlNBOUlHWjFibU4wYVc5dUtHVjRaV01wZTF4dUlDQjBjbmtnZTF4dUlDQWdJR1Y0WldNb0tUdGNiaUFnZlNCallYUmphQ2hsS1h0Y2JpQWdJQ0J5WlhSMWNtNGdlMlZ5Y205eU9pQmxmVHRjYmlBZ2ZWeHVmVHRjYm5aaGNpQnViM1JwWm5rZ1BTQm1kVzVqZEdsdmJpaHdjbTl0YVhObExDQnBjMUpsYW1WamRDbDdYRzRnSUdsbUtIQnliMjFwYzJVdVgyNHBjbVYwZFhKdU8xeHVJQ0J3Y205dGFYTmxMbDl1SUQwZ2RISjFaVHRjYmlBZ2RtRnlJR05vWVdsdUlEMGdjSEp2YldselpTNWZZenRjYmlBZ2JXbGpjbTkwWVhOcktHWjFibU4wYVc5dUtDbDdYRzRnSUNBZ2RtRnlJSFpoYkhWbElEMGdjSEp2YldselpTNWZkbHh1SUNBZ0lDQWdMQ0J2YXlBZ0lDQTlJSEJ5YjIxcGMyVXVYM01nUFQwZ01WeHVJQ0FnSUNBZ0xDQnBJQ0FnSUNBOUlEQTdYRzRnSUNBZ2RtRnlJSEoxYmlBOUlHWjFibU4wYVc5dUtISmxZV04wYVc5dUtYdGNiaUFnSUNBZ0lIWmhjaUJvWVc1a2JHVnlJRDBnYjJzZ1B5QnlaV0ZqZEdsdmJpNXZheUE2SUhKbFlXTjBhVzl1TG1aaGFXeGNiaUFnSUNBZ0lDQWdMQ0J5WlhOdmJIWmxJRDBnY21WaFkzUnBiMjR1Y21WemIyeDJaVnh1SUNBZ0lDQWdJQ0FzSUhKbGFtVmpkQ0FnUFNCeVpXRmpkR2x2Ymk1eVpXcGxZM1JjYmlBZ0lDQWdJQ0FnTENCa2IyMWhhVzRnSUQwZ2NtVmhZM1JwYjI0dVpHOXRZV2x1WEc0Z0lDQWdJQ0FnSUN3Z2NtVnpkV3gwTENCMGFHVnVPMXh1SUNBZ0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ2FXWW9hR0Z1Wkd4bGNpbDdYRzRnSUNBZ0lDQWdJQ0FnYVdZb0lXOXJLWHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LSEJ5YjIxcGMyVXVYMmdnUFQwZ01pbHZia2hoYm1Sc1pWVnVhR0Z1Wkd4bFpDaHdjbTl0YVhObEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCeWIyMXBjMlV1WDJnZ1BTQXhPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQnBaaWhvWVc1a2JHVnlJRDA5UFNCMGNuVmxLWEpsYzNWc2RDQTlJSFpoYkhWbE8xeHVJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZb1pHOXRZV2x1S1dSdmJXRnBiaTVsYm5SbGNpZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVnpkV3gwSUQwZ2FHRnVaR3hsY2loMllXeDFaU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaWhrYjIxaGFXNHBaRzl0WVdsdUxtVjRhWFFvS1R0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnYVdZb2NtVnpkV3gwSUQwOVBTQnlaV0ZqZEdsdmJpNXdjbTl0YVhObEtYdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGFtVmpkQ2hVZVhCbFJYSnliM0lvSjFCeWIyMXBjMlV0WTJoaGFXNGdZM2xqYkdVbktTazdYRzRnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtS0hSb1pXNGdQU0JwYzFSb1pXNWhZbXhsS0hKbGMzVnNkQ2twZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hsYmk1allXeHNLSEpsYzNWc2RDd2djbVZ6YjJ4MlpTd2djbVZxWldOMEtUdGNiaUFnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdjbVZ6YjJ4MlpTaHlaWE4xYkhRcE8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2NtVnFaV04wS0haaGJIVmxLVHRjYmlBZ0lDQWdJSDBnWTJGMFkyZ29aU2w3WEc0Z0lDQWdJQ0FnSUhKbGFtVmpkQ2hsS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5TzF4dUlDQWdJSGRvYVd4bEtHTm9ZV2x1TG14bGJtZDBhQ0ErSUdrcGNuVnVLR05vWVdsdVcya3JLMTBwT3lBdkx5QjJZWEpwWVdKc1pTQnNaVzVuZEdnZ0xTQmpZVzRuZENCMWMyVWdabTl5UldGamFGeHVJQ0FnSUhCeWIyMXBjMlV1WDJNZ1BTQmJYVHRjYmlBZ0lDQndjbTl0YVhObExsOXVJRDBnWm1Gc2MyVTdYRzRnSUNBZ2FXWW9hWE5TWldwbFkzUWdKaVlnSVhCeWIyMXBjMlV1WDJncGIyNVZibWhoYm1Sc1pXUW9jSEp2YldselpTazdYRzRnSUgwcE8xeHVmVHRjYm5aaGNpQnZibFZ1YUdGdVpHeGxaQ0E5SUdaMWJtTjBhVzl1S0hCeWIyMXBjMlVwZTF4dUlDQjBZWE5yTG1OaGJHd29aMnh2WW1Gc0xDQm1kVzVqZEdsdmJpZ3BlMXh1SUNBZ0lIWmhjaUIyWVd4MVpTQTlJSEJ5YjIxcGMyVXVYM1pjYmlBZ0lDQWdJQ3dnWVdKeWRYQjBMQ0JvWVc1a2JHVnlMQ0JqYjI1emIyeGxPMXh1SUNBZ0lHbG1LR2x6Vlc1b1lXNWtiR1ZrS0hCeWIyMXBjMlVwS1h0Y2JpQWdJQ0FnSUdGaWNuVndkQ0E5SUhCbGNtWnZjbTBvWm5WdVkzUnBiMjRvS1h0Y2JpQWdJQ0FnSUNBZ2FXWW9hWE5PYjJSbEtYdGNiaUFnSUNBZ0lDQWdJQ0J3Y205alpYTnpMbVZ0YVhRb0ozVnVhR0Z1Wkd4bFpGSmxhbVZqZEdsdmJpY3NJSFpoYkhWbExDQndjbTl0YVhObEtUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1LR2hoYm1Sc1pYSWdQU0JuYkc5aVlXd3ViMjUxYm1oaGJtUnNaV1J5WldwbFkzUnBiMjRwZTF4dUlDQWdJQ0FnSUNBZ0lHaGhibVJzWlhJb2UzQnliMjFwYzJVNklIQnliMjFwYzJVc0lISmxZWE52YmpvZ2RtRnNkV1Y5S1R0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUtDaGpiMjV6YjJ4bElEMGdaMnh2WW1Gc0xtTnZibk52YkdVcElDWW1JR052Ym5OdmJHVXVaWEp5YjNJcGUxeHVJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0oxVnVhR0Z1Wkd4bFpDQndjbTl0YVhObElISmxhbVZqZEdsdmJpY3NJSFpoYkhWbEtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0F2THlCQ2NtOTNjMlZ5Y3lCemFHOTFiR1FnYm05MElIUnlhV2RuWlhJZ1lISmxhbVZqZEdsdmJraGhibVJzWldSZ0lHVjJaVzUwSUdsbUlHbDBJSGRoY3lCb1lXNWtiR1ZrSUdobGNtVXNJRTV2WkdWS1V5QXRJSE5vYjNWc1pGeHVJQ0FnSUNBZ2NISnZiV2x6WlM1ZmFDQTlJR2x6VG05a1pTQjhmQ0JwYzFWdWFHRnVaR3hsWkNod2NtOXRhWE5sS1NBL0lESWdPaUF4TzF4dUlDQWdJSDBnY0hKdmJXbHpaUzVmWVNBOUlIVnVaR1ZtYVc1bFpEdGNiaUFnSUNCcFppaGhZbkoxY0hRcGRHaHliM2NnWVdKeWRYQjBMbVZ5Y205eU8xeHVJQ0I5S1R0Y2JuMDdYRzUyWVhJZ2FYTlZibWhoYm1Sc1pXUWdQU0JtZFc1amRHbHZiaWh3Y205dGFYTmxLWHRjYmlBZ2FXWW9jSEp2YldselpTNWZhQ0E5UFNBeEtYSmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ2RtRnlJR05vWVdsdUlEMGdjSEp2YldselpTNWZZU0I4ZkNCd2NtOXRhWE5sTGw5alhHNGdJQ0FnTENCcElDQWdJQ0E5SURCY2JpQWdJQ0FzSUhKbFlXTjBhVzl1TzF4dUlDQjNhR2xzWlNoamFHRnBiaTVzWlc1bmRHZ2dQaUJwS1h0Y2JpQWdJQ0J5WldGamRHbHZiaUE5SUdOb1lXbHVXMmtySzEwN1hHNGdJQ0FnYVdZb2NtVmhZM1JwYjI0dVptRnBiQ0I4ZkNBaGFYTlZibWhoYm1Sc1pXUW9jbVZoWTNScGIyNHVjSEp2YldselpTa3BjbVYwZFhKdUlHWmhiSE5sTzF4dUlDQjlJSEpsZEhWeWJpQjBjblZsTzF4dWZUdGNiblpoY2lCdmJraGhibVJzWlZWdWFHRnVaR3hsWkNBOUlHWjFibU4wYVc5dUtIQnliMjFwYzJVcGUxeHVJQ0IwWVhOckxtTmhiR3dvWjJ4dlltRnNMQ0JtZFc1amRHbHZiaWdwZTF4dUlDQWdJSFpoY2lCb1lXNWtiR1Z5TzF4dUlDQWdJR2xtS0dselRtOWtaU2w3WEc0Z0lDQWdJQ0J3Y205alpYTnpMbVZ0YVhRb0ozSmxhbVZqZEdsdmJraGhibVJzWldRbkxDQndjbTl0YVhObEtUdGNiaUFnSUNCOUlHVnNjMlVnYVdZb2FHRnVaR3hsY2lBOUlHZHNiMkpoYkM1dmJuSmxhbVZqZEdsdmJtaGhibVJzWldRcGUxeHVJQ0FnSUNBZ2FHRnVaR3hsY2loN2NISnZiV2x6WlRvZ2NISnZiV2x6WlN3Z2NtVmhjMjl1T2lCd2NtOXRhWE5sTGw5MmZTazdYRzRnSUNBZ2ZWeHVJQ0I5S1R0Y2JuMDdYRzUyWVhJZ0pISmxhbVZqZENBOUlHWjFibU4wYVc5dUtIWmhiSFZsS1h0Y2JpQWdkbUZ5SUhCeWIyMXBjMlVnUFNCMGFHbHpPMXh1SUNCcFppaHdjbTl0YVhObExsOWtLWEpsZEhWeWJqdGNiaUFnY0hKdmJXbHpaUzVmWkNBOUlIUnlkV1U3WEc0Z0lIQnliMjFwYzJVZ1BTQndjbTl0YVhObExsOTNJSHg4SUhCeWIyMXBjMlU3SUM4dklIVnVkM0poY0Z4dUlDQndjbTl0YVhObExsOTJJRDBnZG1Gc2RXVTdYRzRnSUhCeWIyMXBjMlV1WDNNZ1BTQXlPMXh1SUNCcFppZ2hjSEp2YldselpTNWZZU2x3Y205dGFYTmxMbDloSUQwZ2NISnZiV2x6WlM1Zll5NXpiR2xqWlNncE8xeHVJQ0J1YjNScFpua29jSEp2YldselpTd2dkSEoxWlNrN1hHNTlPMXh1ZG1GeUlDUnlaWE52YkhabElEMGdablZ1WTNScGIyNG9kbUZzZFdVcGUxeHVJQ0IyWVhJZ2NISnZiV2x6WlNBOUlIUm9hWE5jYmlBZ0lDQXNJSFJvWlc0N1hHNGdJR2xtS0hCeWIyMXBjMlV1WDJRcGNtVjBkWEp1TzF4dUlDQndjbTl0YVhObExsOWtJRDBnZEhKMVpUdGNiaUFnY0hKdmJXbHpaU0E5SUhCeWIyMXBjMlV1WDNjZ2ZId2djSEp2YldselpUc2dMeThnZFc1M2NtRndYRzRnSUhSeWVTQjdYRzRnSUNBZ2FXWW9jSEp2YldselpTQTlQVDBnZG1Gc2RXVXBkR2h5YjNjZ1ZIbHdaVVZ5Y205eUtGd2lVSEp2YldselpTQmpZVzRuZENCaVpTQnlaWE52YkhabFpDQnBkSE5sYkdaY0lpazdYRzRnSUNBZ2FXWW9kR2hsYmlBOUlHbHpWR2hsYm1GaWJHVW9kbUZzZFdVcEtYdGNiaUFnSUNBZ0lHMXBZM0p2ZEdGemF5aG1kVzVqZEdsdmJpZ3BlMXh1SUNBZ0lDQWdJQ0IyWVhJZ2QzSmhjSEJsY2lBOUlIdGZkem9nY0hKdmJXbHpaU3dnWDJRNklHWmhiSE5sZlRzZ0x5OGdkM0poY0Z4dUlDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUhSb1pXNHVZMkZzYkNoMllXeDFaU3dnWTNSNEtDUnlaWE52YkhabExDQjNjbUZ3Y0dWeUxDQXhLU3dnWTNSNEtDUnlaV3BsWTNRc0lIZHlZWEJ3WlhJc0lERXBLVHRjYmlBZ0lDQWdJQ0FnZlNCallYUmphQ2hsS1h0Y2JpQWdJQ0FnSUNBZ0lDQWtjbVZxWldOMExtTmhiR3dvZDNKaGNIQmxjaXdnWlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMHBPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCd2NtOXRhWE5sTGw5MklEMGdkbUZzZFdVN1hHNGdJQ0FnSUNCd2NtOXRhWE5sTGw5eklEMGdNVHRjYmlBZ0lDQWdJRzV2ZEdsbWVTaHdjbTl0YVhObExDQm1ZV3h6WlNrN1hHNGdJQ0FnZlZ4dUlDQjlJR05oZEdOb0tHVXBlMXh1SUNBZ0lDUnlaV3BsWTNRdVkyRnNiQ2g3WDNjNklIQnliMjFwYzJVc0lGOWtPaUJtWVd4elpYMHNJR1VwT3lBdkx5QjNjbUZ3WEc0Z0lIMWNibjA3WEc1Y2JpOHZJR052Ym5OMGNuVmpkRzl5SUhCdmJIbG1hV3hzWEc1cFppZ2hWVk5GWDA1QlZFbFdSU2w3WEc0Z0lDOHZJREkxTGpRdU15NHhJRkJ5YjIxcGMyVW9aWGhsWTNWMGIzSXBYRzRnSUNSUWNtOXRhWE5sSUQwZ1puVnVZM1JwYjI0Z1VISnZiV2x6WlNobGVHVmpkWFJ2Y2lsN1hHNGdJQ0FnWVc1SmJuTjBZVzVqWlNoMGFHbHpMQ0FrVUhKdmJXbHpaU3dnVUZKUFRVbFRSU3dnSjE5b0p5azdYRzRnSUNBZ1lVWjFibU4wYVc5dUtHVjRaV04xZEc5eUtUdGNiaUFnSUNCSmJuUmxjbTVoYkM1allXeHNLSFJvYVhNcE8xeHVJQ0FnSUhSeWVTQjdYRzRnSUNBZ0lDQmxlR1ZqZFhSdmNpaGpkSGdvSkhKbGMyOXNkbVVzSUhSb2FYTXNJREVwTENCamRIZ29KSEpsYW1WamRDd2dkR2hwY3l3Z01Ta3BPMXh1SUNBZ0lIMGdZMkYwWTJnb1pYSnlLWHRjYmlBZ0lDQWdJQ1J5WldwbFkzUXVZMkZzYkNoMGFHbHpMQ0JsY25JcE8xeHVJQ0FnSUgxY2JpQWdmVHRjYmlBZ1NXNTBaWEp1WVd3Z1BTQm1kVzVqZEdsdmJpQlFjbTl0YVhObEtHVjRaV04xZEc5eUtYdGNiaUFnSUNCMGFHbHpMbDlqSUQwZ1cxMDdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklEd3RJR0YzWVdsMGFXNW5JSEpsWVdOMGFXOXVjMXh1SUNBZ0lIUm9hWE11WDJFZ1BTQjFibVJsWm1sdVpXUTdJQ0FnSUNBZ0x5OGdQQzBnWTJobFkydGxaQ0JwYmlCcGMxVnVhR0Z1Wkd4bFpDQnlaV0ZqZEdsdmJuTmNiaUFnSUNCMGFHbHpMbDl6SUQwZ01Ec2dJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklEd3RJSE4wWVhSbFhHNGdJQ0FnZEdocGN5NWZaQ0E5SUdaaGJITmxPeUFnSUNBZ0lDQWdJQ0F2THlBOExTQmtiMjVsWEc0Z0lDQWdkR2hwY3k1ZmRpQTlJSFZ1WkdWbWFXNWxaRHNnSUNBZ0lDQXZMeUE4TFNCMllXeDFaVnh1SUNBZ0lIUm9hWE11WDJnZ1BTQXdPeUFnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdQQzBnY21WcVpXTjBhVzl1SUhOMFlYUmxMQ0F3SUMwZ1pHVm1ZWFZzZEN3Z01TQXRJR2hoYm1Sc1pXUXNJRElnTFNCMWJtaGhibVJzWldSY2JpQWdJQ0IwYUdsekxsOXVJRDBnWm1Gc2MyVTdJQ0FnSUNBZ0lDQWdJQzh2SUR3dElHNXZkR2xtZVZ4dUlDQjlPMXh1SUNCSmJuUmxjbTVoYkM1d2NtOTBiM1I1Y0dVZ1BTQnlaWEYxYVhKbEtDY3VMMTl5WldSbFptbHVaUzFoYkd3bktTZ2tVSEp2YldselpTNXdjbTkwYjNSNWNHVXNJSHRjYmlBZ0lDQXZMeUF5TlM0MExqVXVNeUJRY205dGFYTmxMbkJ5YjNSdmRIbHdaUzUwYUdWdUtHOXVSblZzWm1sc2JHVmtMQ0J2YmxKbGFtVmpkR1ZrS1Z4dUlDQWdJSFJvWlc0NklHWjFibU4wYVc5dUlIUm9aVzRvYjI1R2RXeG1hV3hzWldRc0lHOXVVbVZxWldOMFpXUXBlMXh1SUNBZ0lDQWdkbUZ5SUhKbFlXTjBhVzl1SUNBZ0lEMGdibVYzVUhKdmJXbHpaVU5oY0dGaWFXeHBkSGtvYzNCbFkybGxjME52Ym5OMGNuVmpkRzl5S0hSb2FYTXNJQ1JRY205dGFYTmxLU2s3WEc0Z0lDQWdJQ0J5WldGamRHbHZiaTV2YXlBZ0lDQWdQU0IwZVhCbGIyWWdiMjVHZFd4bWFXeHNaV1FnUFQwZ0oyWjFibU4wYVc5dUp5QS9JRzl1Um5Wc1ptbHNiR1ZrSURvZ2RISjFaVHRjYmlBZ0lDQWdJSEpsWVdOMGFXOXVMbVpoYVd3Z0lDQTlJSFI1Y0dWdlppQnZibEpsYW1WamRHVmtJRDA5SUNkbWRXNWpkR2x2YmljZ0ppWWdiMjVTWldwbFkzUmxaRHRjYmlBZ0lDQWdJSEpsWVdOMGFXOXVMbVJ2YldGcGJpQTlJR2x6VG05a1pTQS9JSEJ5YjJObGMzTXVaRzl0WVdsdUlEb2dkVzVrWldacGJtVmtPMXh1SUNBZ0lDQWdkR2hwY3k1Zll5NXdkWE5vS0hKbFlXTjBhVzl1S1R0Y2JpQWdJQ0FnSUdsbUtIUm9hWE11WDJFcGRHaHBjeTVmWVM1d2RYTm9LSEpsWVdOMGFXOXVLVHRjYmlBZ0lDQWdJR2xtS0hSb2FYTXVYM01wYm05MGFXWjVLSFJvYVhNc0lHWmhiSE5sS1R0Y2JpQWdJQ0FnSUhKbGRIVnliaUJ5WldGamRHbHZiaTV3Y205dGFYTmxPMXh1SUNBZ0lIMHNYRzRnSUNBZ0x5OGdNalV1TkM0MUxqRWdVSEp2YldselpTNXdjbTkwYjNSNWNHVXVZMkYwWTJnb2IyNVNaV3BsWTNSbFpDbGNiaUFnSUNBblkyRjBZMmduT2lCbWRXNWpkR2x2YmlodmJsSmxhbVZqZEdWa0tYdGNiaUFnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblJvWlc0b2RXNWtaV1pwYm1Wa0xDQnZibEpsYW1WamRHVmtLVHRjYmlBZ0lDQjlYRzRnSUgwcE8xeHVJQ0JRY205dGFYTmxRMkZ3WVdKcGJHbDBlU0E5SUdaMWJtTjBhVzl1S0NsN1hHNGdJQ0FnZG1GeUlIQnliMjFwYzJVZ0lEMGdibVYzSUVsdWRHVnlibUZzTzF4dUlDQWdJSFJvYVhNdWNISnZiV2x6WlNBOUlIQnliMjFwYzJVN1hHNGdJQ0FnZEdocGN5NXlaWE52YkhabElEMGdZM1I0S0NSeVpYTnZiSFpsTENCd2NtOXRhWE5sTENBeEtUdGNiaUFnSUNCMGFHbHpMbkpsYW1WamRDQWdQU0JqZEhnb0pISmxhbVZqZEN3Z2NISnZiV2x6WlN3Z01TazdYRzRnSUgwN1hHNTlYRzVjYmlSbGVIQnZjblFvSkdWNGNHOXlkQzVISUNzZ0pHVjRjRzl5ZEM1WElDc2dKR1Y0Y0c5eWRDNUdJQ29nSVZWVFJWOU9RVlJKVmtVc0lIdFFjbTl0YVhObE9pQWtVSEp2YldselpYMHBPMXh1Y21WeGRXbHlaU2duTGk5ZmMyVjBMWFJ2TFhOMGNtbHVaeTEwWVdjbktTZ2tVSEp2YldselpTd2dVRkpQVFVsVFJTazdYRzV5WlhGMWFYSmxLQ2N1TDE5elpYUXRjM0JsWTJsbGN5Y3BLRkJTVDAxSlUwVXBPMXh1VjNKaGNIQmxjaUE5SUhKbGNYVnBjbVVvSnk0dlgyTnZjbVVuS1Z0UVVrOU5TVk5GWFR0Y2JseHVMeThnYzNSaGRHbGpjMXh1SkdWNGNHOXlkQ2drWlhod2IzSjBMbE1nS3lBa1pYaHdiM0owTGtZZ0tpQWhWVk5GWDA1QlZFbFdSU3dnVUZKUFRVbFRSU3dnZTF4dUlDQXZMeUF5TlM0MExqUXVOU0JRY205dGFYTmxMbkpsYW1WamRDaHlLVnh1SUNCeVpXcGxZM1E2SUdaMWJtTjBhVzl1SUhKbGFtVmpkQ2h5S1h0Y2JpQWdJQ0IyWVhJZ1kyRndZV0pwYkdsMGVTQTlJRzVsZDFCeWIyMXBjMlZEWVhCaFltbHNhWFI1S0hSb2FYTXBYRzRnSUNBZ0lDQXNJQ1FrY21WcVpXTjBJQ0FnUFNCallYQmhZbWxzYVhSNUxuSmxhbVZqZER0Y2JpQWdJQ0FrSkhKbGFtVmpkQ2h5S1R0Y2JpQWdJQ0J5WlhSMWNtNGdZMkZ3WVdKcGJHbDBlUzV3Y205dGFYTmxPMXh1SUNCOVhHNTlLVHRjYmlSbGVIQnZjblFvSkdWNGNHOXlkQzVUSUNzZ0pHVjRjRzl5ZEM1R0lDb2dLRXhKUWxKQlVsa2dmSHdnSVZWVFJWOU9RVlJKVmtVcExDQlFVazlOU1ZORkxDQjdYRzRnSUM4dklESTFMalF1TkM0MklGQnliMjFwYzJVdWNtVnpiMngyWlNoNEtWeHVJQ0J5WlhOdmJIWmxPaUJtZFc1amRHbHZiaUJ5WlhOdmJIWmxLSGdwZTF4dUlDQWdJQzh2SUdsdWMzUmhibU5sYjJZZ2FXNXpkR1ZoWkNCdlppQnBiblJsY201aGJDQnpiRzkwSUdOb1pXTnJJR0psWTJGMWMyVWdkMlVnYzJodmRXeGtJR1pwZUNCcGRDQjNhWFJvYjNWMElISmxjR3hoWTJWdFpXNTBJRzVoZEdsMlpTQlFjbTl0YVhObElHTnZjbVZjYmlBZ0lDQnBaaWg0SUdsdWMzUmhibU5sYjJZZ0pGQnliMjFwYzJVZ0ppWWdjMkZ0WlVOdmJuTjBjblZqZEc5eUtIZ3VZMjl1YzNSeWRXTjBiM0lzSUhSb2FYTXBLWEpsZEhWeWJpQjRPMXh1SUNBZ0lIWmhjaUJqWVhCaFltbHNhWFI1SUQwZ2JtVjNVSEp2YldselpVTmhjR0ZpYVd4cGRIa29kR2hwY3lsY2JpQWdJQ0FnSUN3Z0pDUnlaWE52YkhabElDQTlJR05oY0dGaWFXeHBkSGt1Y21WemIyeDJaVHRjYmlBZ0lDQWtKSEpsYzI5c2RtVW9lQ2s3WEc0Z0lDQWdjbVYwZFhKdUlHTmhjR0ZpYVd4cGRIa3VjSEp2YldselpUdGNiaUFnZlZ4dWZTazdYRzRrWlhod2IzSjBLQ1JsZUhCdmNuUXVVeUFySUNSbGVIQnZjblF1UmlBcUlDRW9WVk5GWDA1QlZFbFdSU0FtSmlCeVpYRjFhWEpsS0NjdUwxOXBkR1Z5TFdSbGRHVmpkQ2NwS0daMWJtTjBhVzl1S0dsMFpYSXBlMXh1SUNBa1VISnZiV2x6WlM1aGJHd29hWFJsY2lsYkoyTmhkR05vSjEwb1pXMXdkSGtwTzF4dWZTa3BMQ0JRVWs5TlNWTkZMQ0I3WEc0Z0lDOHZJREkxTGpRdU5DNHhJRkJ5YjIxcGMyVXVZV3hzS0dsMFpYSmhZbXhsS1Z4dUlDQmhiR3c2SUdaMWJtTjBhVzl1SUdGc2JDaHBkR1Z5WVdKc1pTbDdYRzRnSUNBZ2RtRnlJRU1nSUNBZ0lDQWdJQ0FnUFNCMGFHbHpYRzRnSUNBZ0lDQXNJR05oY0dGaWFXeHBkSGtnUFNCdVpYZFFjbTl0YVhObFEyRndZV0pwYkdsMGVTaERLVnh1SUNBZ0lDQWdMQ0J5WlhOdmJIWmxJQ0FnSUQwZ1kyRndZV0pwYkdsMGVTNXlaWE52YkhabFhHNGdJQ0FnSUNBc0lISmxhbVZqZENBZ0lDQWdQU0JqWVhCaFltbHNhWFI1TG5KbGFtVmpkRHRjYmlBZ0lDQjJZWElnWVdKeWRYQjBJRDBnY0dWeVptOXliU2htZFc1amRHbHZiaWdwZTF4dUlDQWdJQ0FnZG1GeUlIWmhiSFZsY3lBZ0lDQTlJRnRkWEc0Z0lDQWdJQ0FnSUN3Z2FXNWtaWGdnSUNBZ0lEMGdNRnh1SUNBZ0lDQWdJQ0FzSUhKbGJXRnBibWx1WnlBOUlERTdYRzRnSUNBZ0lDQm1iM0pQWmlocGRHVnlZV0pzWlN3Z1ptRnNjMlVzSUdaMWJtTjBhVzl1S0hCeWIyMXBjMlVwZTF4dUlDQWdJQ0FnSUNCMllYSWdKR2x1WkdWNElDQWdJQ0FnSUNBOUlHbHVaR1Y0S3l0Y2JpQWdJQ0FnSUNBZ0lDQXNJR0ZzY21WaFpIbERZV3hzWldRZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0FnSUNBZ2RtRnNkV1Z6TG5CMWMyZ29kVzVrWldacGJtVmtLVHRjYmlBZ0lDQWdJQ0FnY21WdFlXbHVhVzVuS3lzN1hHNGdJQ0FnSUNBZ0lFTXVjbVZ6YjJ4MlpTaHdjbTl0YVhObEtTNTBhR1Z1S0daMWJtTjBhVzl1S0haaGJIVmxLWHRjYmlBZ0lDQWdJQ0FnSUNCcFppaGhiSEpsWVdSNVEyRnNiR1ZrS1hKbGRIVnlianRjYmlBZ0lDQWdJQ0FnSUNCaGJISmxZV1I1UTJGc2JHVmtJQ0E5SUhSeWRXVTdYRzRnSUNBZ0lDQWdJQ0FnZG1Gc2RXVnpXeVJwYm1SbGVGMGdQU0IyWVd4MVpUdGNiaUFnSUNBZ0lDQWdJQ0F0TFhKbGJXRnBibWx1WnlCOGZDQnlaWE52YkhabEtIWmhiSFZsY3lrN1hHNGdJQ0FnSUNBZ0lIMHNJSEpsYW1WamRDazdYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJQzB0Y21WdFlXbHVhVzVuSUh4OElISmxjMjlzZG1Vb2RtRnNkV1Z6S1R0Y2JpQWdJQ0I5S1R0Y2JpQWdJQ0JwWmloaFluSjFjSFFwY21WcVpXTjBLR0ZpY25Wd2RDNWxjbkp2Y2lrN1hHNGdJQ0FnY21WMGRYSnVJR05oY0dGaWFXeHBkSGt1Y0hKdmJXbHpaVHRjYmlBZ2ZTeGNiaUFnTHk4Z01qVXVOQzQwTGpRZ1VISnZiV2x6WlM1eVlXTmxLR2wwWlhKaFlteGxLVnh1SUNCeVlXTmxPaUJtZFc1amRHbHZiaUJ5WVdObEtHbDBaWEpoWW14bEtYdGNiaUFnSUNCMllYSWdReUFnSUNBZ0lDQWdJQ0E5SUhSb2FYTmNiaUFnSUNBZ0lDd2dZMkZ3WVdKcGJHbDBlU0E5SUc1bGQxQnliMjFwYzJWRFlYQmhZbWxzYVhSNUtFTXBYRzRnSUNBZ0lDQXNJSEpsYW1WamRDQWdJQ0FnUFNCallYQmhZbWxzYVhSNUxuSmxhbVZqZER0Y2JpQWdJQ0IyWVhJZ1lXSnlkWEIwSUQwZ2NHVnlabTl5YlNobWRXNWpkR2x2YmlncGUxeHVJQ0FnSUNBZ1ptOXlUMllvYVhSbGNtRmliR1VzSUdaaGJITmxMQ0JtZFc1amRHbHZiaWh3Y205dGFYTmxLWHRjYmlBZ0lDQWdJQ0FnUXk1eVpYTnZiSFpsS0hCeWIyMXBjMlVwTG5Sb1pXNG9ZMkZ3WVdKcGJHbDBlUzV5WlhOdmJIWmxMQ0J5WldwbFkzUXBPMXh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdmU2s3WEc0Z0lDQWdhV1lvWVdKeWRYQjBLWEpsYW1WamRDaGhZbkoxY0hRdVpYSnliM0lwTzF4dUlDQWdJSEpsZEhWeWJpQmpZWEJoWW1sc2FYUjVMbkJ5YjIxcGMyVTdYRzRnSUgxY2JuMHBPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdmJXOWtkV3hsY3k5bGN6WXVjSEp2YldselpTNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdNVEExWEc0dkx5QnRiMlIxYkdVZ1kyaDFibXR6SUQwZ01DQXhJRFFnTlNJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmk4dklFVkRUVUZUWTNKcGNIUWdOaUJ6ZVcxaWIyeHpJSE5vYVcxY2JuWmhjaUJuYkc5aVlXd2dJQ0FnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDJkc2IySmhiQ2NwWEc0Z0lDd2dhR0Z6SUNBZ0lDQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTlvWVhNbktWeHVJQ0FzSUVSRlUwTlNTVkJVVDFKVElDQWdJRDBnY21WeGRXbHlaU2duTGk5ZlpHVnpZM0pwY0hSdmNuTW5LVnh1SUNBc0lDUmxlSEJ2Y25RZ0lDQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZaWGh3YjNKMEp5bGNiaUFnTENCeVpXUmxabWx1WlNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgzSmxaR1ZtYVc1bEp5bGNiaUFnTENCTlJWUkJJQ0FnSUNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgyMWxkR0VuS1M1TFJWbGNiaUFnTENBa1ptRnBiSE1nSUNBZ0lDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgyWmhhV3h6SnlsY2JpQWdMQ0J6YUdGeVpXUWdJQ0FnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDNOb1lYSmxaQ2NwWEc0Z0lDd2djMlYwVkc5VGRISnBibWRVWVdjZ1BTQnlaWEYxYVhKbEtDY3VMMTl6WlhRdGRHOHRjM1J5YVc1bkxYUmhaeWNwWEc0Z0lDd2dkV2xrSUNBZ0lDQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTkxYVdRbktWeHVJQ0FzSUhkcmN5QWdJQ0FnSUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmQydHpKeWxjYmlBZ0xDQjNhM05GZUhRZ0lDQWdJQ0FnSUNBOUlISmxjWFZwY21Vb0p5NHZYM2RyY3kxbGVIUW5LVnh1SUNBc0lIZHJjMFJsWm1sdVpTQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZkMnR6TFdSbFptbHVaU2NwWEc0Z0lDd2dhMlY1VDJZZ0lDQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTlyWlhsdlppY3BYRzRnSUN3Z1pXNTFiVXRsZVhNZ0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOWxiblZ0TFd0bGVYTW5LVnh1SUNBc0lHbHpRWEp5WVhrZ0lDQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZhWE10WVhKeVlYa25LVnh1SUNBc0lHRnVUMkpxWldOMElDQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZZVzR0YjJKcVpXTjBKeWxjYmlBZ0xDQjBiMGxQWW1wbFkzUWdJQ0FnSUNBOUlISmxjWFZwY21Vb0p5NHZYM1J2TFdsdlltcGxZM1FuS1Z4dUlDQXNJSFJ2VUhKcGJXbDBhWFpsSUNBZ0lEMGdjbVZ4ZFdseVpTZ25MaTlmZEc4dGNISnBiV2wwYVhabEp5bGNiaUFnTENCamNtVmhkR1ZFWlhOaklDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgzQnliM0JsY25SNUxXUmxjMk1uS1Z4dUlDQXNJRjlqY21WaGRHVWdJQ0FnSUNBZ0lEMGdjbVZ4ZFdseVpTZ25MaTlmYjJKcVpXTjBMV055WldGMFpTY3BYRzRnSUN3Z1owOVFUa1Y0ZENBZ0lDQWdJQ0FnUFNCeVpYRjFhWEpsS0NjdUwxOXZZbXBsWTNRdFoyOXdiaTFsZUhRbktWeHVJQ0FzSUNSSFQxQkVJQ0FnSUNBZ0lDQWdJRDBnY21WeGRXbHlaU2duTGk5ZmIySnFaV04wTFdkdmNHUW5LVnh1SUNBc0lDUkVVQ0FnSUNBZ0lDQWdJQ0FnSUQwZ2NtVnhkV2x5WlNnbkxpOWZiMkpxWldOMExXUndKeWxjYmlBZ0xDQWthMlY1Y3lBZ0lDQWdJQ0FnSUNBOUlISmxjWFZwY21Vb0p5NHZYMjlpYW1WamRDMXJaWGx6SnlsY2JpQWdMQ0JuVDFCRUlDQWdJQ0FnSUNBZ0lDQTlJQ1JIVDFCRUxtWmNiaUFnTENCa1VDQWdJQ0FnSUNBZ0lDQWdJQ0E5SUNSRVVDNW1YRzRnSUN3Z1owOVFUaUFnSUNBZ0lDQWdJQ0FnUFNCblQxQk9SWGgwTG1aY2JpQWdMQ0FrVTNsdFltOXNJQ0FnSUNBZ0lDQTlJR2RzYjJKaGJDNVRlVzFpYjJ4Y2JpQWdMQ0FrU2xOUFRpQWdJQ0FnSUNBZ0lDQTlJR2RzYjJKaGJDNUtVMDlPWEc0Z0lDd2dYM04wY21sdVoybG1lU0FnSUNBZ1BTQWtTbE5QVGlBbUppQWtTbE5QVGk1emRISnBibWRwWm5sY2JpQWdMQ0JRVWs5VVQxUlpVRVVnSUNBZ0lDQTlJQ2R3Y205MGIzUjVjR1VuWEc0Z0lDd2dTRWxFUkVWT0lDQWdJQ0FnSUNBZ1BTQjNhM01vSjE5b2FXUmtaVzRuS1Z4dUlDQXNJRlJQWDFCU1NVMUpWRWxXUlNBZ0lEMGdkMnR6S0NkMGIxQnlhVzFwZEdsMlpTY3BYRzRnSUN3Z2FYTkZiblZ0SUNBZ0lDQWdJQ0FnUFNCN2ZTNXdjbTl3WlhKMGVVbHpSVzUxYldWeVlXSnNaVnh1SUNBc0lGTjViV0p2YkZKbFoybHpkSEo1SUQwZ2MyaGhjbVZrS0NkemVXMWliMnd0Y21WbmFYTjBjbmtuS1Z4dUlDQXNJRUZzYkZONWJXSnZiSE1nSUNBZ0lEMGdjMmhoY21Wa0tDZHplVzFpYjJ4ekp5bGNiaUFnTENCUFVGTjViV0p2YkhNZ0lDQWdJQ0E5SUhOb1lYSmxaQ2duYjNBdGMzbHRZbTlzY3ljcFhHNGdJQ3dnVDJKcVpXTjBVSEp2ZEc4Z0lDQWdQU0JQWW1wbFkzUmJVRkpQVkU5VVdWQkZYVnh1SUNBc0lGVlRSVjlPUVZSSlZrVWdJQ0FnSUQwZ2RIbHdaVzltSUNSVGVXMWliMndnUFQwZ0oyWjFibU4wYVc5dUoxeHVJQ0FzSUZGUFltcGxZM1FnSUNBZ0lDQWdJRDBnWjJ4dlltRnNMbEZQWW1wbFkzUTdYRzR2THlCRWIyNG5kQ0IxYzJVZ2MyVjBkR1Z5Y3lCcGJpQlJkQ0JUWTNKcGNIUXNJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzk2Ykc5cGNtOWpheTlqYjNKbExXcHpMMmx6YzNWbGN5OHhOek5jYm5aaGNpQnpaWFIwWlhJZ1BTQWhVVTlpYW1WamRDQjhmQ0FoVVU5aWFtVmpkRnRRVWs5VVQxUlpVRVZkSUh4OElDRlJUMkpxWldOMFcxQlNUMVJQVkZsUVJWMHVabWx1WkVOb2FXeGtPMXh1WEc0dkx5Qm1ZV3hzWW1GamF5Qm1iM0lnYjJ4a0lFRnVaSEp2YVdRc0lHaDBkSEJ6T2k4dlkyOWtaUzVuYjI5bmJHVXVZMjl0TDNBdmRqZ3ZhWE56ZFdWekwyUmxkR0ZwYkQ5cFpEMDJPRGRjYm5aaGNpQnpaWFJUZVcxaWIyeEVaWE5qSUQwZ1JFVlRRMUpKVUZSUFVsTWdKaVlnSkdaaGFXeHpLR1oxYm1OMGFXOXVLQ2w3WEc0Z0lISmxkSFZ5YmlCZlkzSmxZWFJsS0dSUUtIdDlMQ0FuWVNjc0lIdGNiaUFnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2w3SUhKbGRIVnliaUJrVUNoMGFHbHpMQ0FuWVNjc0lIdDJZV3gxWlRvZ04zMHBMbUU3SUgxY2JpQWdmU2twTG1FZ0lUMGdOenRjYm4wcElEOGdablZ1WTNScGIyNG9hWFFzSUd0bGVTd2dSQ2w3WEc0Z0lIWmhjaUJ3Y205MGIwUmxjMk1nUFNCblQxQkVLRTlpYW1WamRGQnliM1J2TENCclpYa3BPMXh1SUNCcFppaHdjbTkwYjBSbGMyTXBaR1ZzWlhSbElFOWlhbVZqZEZCeWIzUnZXMnRsZVYwN1hHNGdJR1JRS0dsMExDQnJaWGtzSUVRcE8xeHVJQ0JwWmlod2NtOTBiMFJsYzJNZ0ppWWdhWFFnSVQwOUlFOWlhbVZqZEZCeWIzUnZLV1JRS0U5aWFtVmpkRkJ5YjNSdkxDQnJaWGtzSUhCeWIzUnZSR1Z6WXlrN1hHNTlJRG9nWkZBN1hHNWNiblpoY2lCM2NtRndJRDBnWm5WdVkzUnBiMjRvZEdGbktYdGNiaUFnZG1GeUlITjViU0E5SUVGc2JGTjViV0p2YkhOYmRHRm5YU0E5SUY5amNtVmhkR1VvSkZONWJXSnZiRnRRVWs5VVQxUlpVRVZkS1R0Y2JpQWdjM2x0TGw5cklEMGdkR0ZuTzF4dUlDQnlaWFIxY200Z2MzbHRPMXh1ZlR0Y2JseHVkbUZ5SUdselUzbHRZbTlzSUQwZ1ZWTkZYMDVCVkVsV1JTQW1KaUIwZVhCbGIyWWdKRk41YldKdmJDNXBkR1Z5WVhSdmNpQTlQU0FuYzNsdFltOXNKeUEvSUdaMWJtTjBhVzl1S0dsMEtYdGNiaUFnY21WMGRYSnVJSFI1Y0dWdlppQnBkQ0E5UFNBbmMzbHRZbTlzSnp0Y2JuMGdPaUJtZFc1amRHbHZiaWhwZENsN1hHNGdJSEpsZEhWeWJpQnBkQ0JwYm5OMFlXNWpaVzltSUNSVGVXMWliMnc3WEc1OU8xeHVYRzUyWVhJZ0pHUmxabWx1WlZCeWIzQmxjblI1SUQwZ1puVnVZM1JwYjI0Z1pHVm1hVzVsVUhKdmNHVnlkSGtvYVhRc0lHdGxlU3dnUkNsN1hHNGdJR2xtS0dsMElEMDlQU0JQWW1wbFkzUlFjbTkwYnlra1pHVm1hVzVsVUhKdmNHVnlkSGtvVDFCVGVXMWliMnh6TENCclpYa3NJRVFwTzF4dUlDQmhiazlpYW1WamRDaHBkQ2s3WEc0Z0lHdGxlU0E5SUhSdlVISnBiV2wwYVhabEtHdGxlU3dnZEhKMVpTazdYRzRnSUdGdVQySnFaV04wS0VRcE8xeHVJQ0JwWmlob1lYTW9RV3hzVTNsdFltOXNjeXdnYTJWNUtTbDdYRzRnSUNBZ2FXWW9JVVF1Wlc1MWJXVnlZV0pzWlNsN1hHNGdJQ0FnSUNCcFppZ2hhR0Z6S0dsMExDQklTVVJFUlU0cEtXUlFLR2wwTENCSVNVUkVSVTRzSUdOeVpXRjBaVVJsYzJNb01Td2dlMzBwS1R0Y2JpQWdJQ0FnSUdsMFcwaEpSRVJGVGwxYmEyVjVYU0E5SUhSeWRXVTdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUdsbUtHaGhjeWhwZEN3Z1NFbEVSRVZPS1NBbUppQnBkRnRJU1VSRVJVNWRXMnRsZVYwcGFYUmJTRWxFUkVWT1hWdHJaWGxkSUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0JFSUQwZ1gyTnlaV0YwWlNoRUxDQjdaVzUxYldWeVlXSnNaVG9nWTNKbFlYUmxSR1Z6WXlnd0xDQm1ZV3h6WlNsOUtUdGNiaUFnSUNCOUlISmxkSFZ5YmlCelpYUlRlVzFpYjJ4RVpYTmpLR2wwTENCclpYa3NJRVFwTzF4dUlDQjlJSEpsZEhWeWJpQmtVQ2hwZEN3Z2EyVjVMQ0JFS1R0Y2JuMDdYRzUyWVhJZ0pHUmxabWx1WlZCeWIzQmxjblJwWlhNZ1BTQm1kVzVqZEdsdmJpQmtaV1pwYm1WUWNtOXdaWEowYVdWektHbDBMQ0JRS1h0Y2JpQWdZVzVQWW1wbFkzUW9hWFFwTzF4dUlDQjJZWElnYTJWNWN5QTlJR1Z1ZFcxTFpYbHpLRkFnUFNCMGIwbFBZbXBsWTNRb1VDa3BYRzRnSUNBZ0xDQnBJQ0FnSUQwZ01GeHVJQ0FnSUN3Z2JDQTlJR3RsZVhNdWJHVnVaM1JvWEc0Z0lDQWdMQ0JyWlhrN1hHNGdJSGRvYVd4bEtHd2dQaUJwS1NSa1pXWnBibVZRY205d1pYSjBlU2hwZEN3Z2EyVjVJRDBnYTJWNWMxdHBLeXRkTENCUVcydGxlVjBwTzF4dUlDQnlaWFIxY200Z2FYUTdYRzU5TzF4dWRtRnlJQ1JqY21WaGRHVWdQU0JtZFc1amRHbHZiaUJqY21WaGRHVW9hWFFzSUZBcGUxeHVJQ0J5WlhSMWNtNGdVQ0E5UFQwZ2RXNWtaV1pwYm1Wa0lEOGdYMk55WldGMFpTaHBkQ2tnT2lBa1pHVm1hVzVsVUhKdmNHVnlkR2xsY3loZlkzSmxZWFJsS0dsMEtTd2dVQ2s3WEc1OU8xeHVkbUZ5SUNSd2NtOXdaWEowZVVselJXNTFiV1Z5WVdKc1pTQTlJR1oxYm1OMGFXOXVJSEJ5YjNCbGNuUjVTWE5GYm5WdFpYSmhZbXhsS0d0bGVTbDdYRzRnSUhaaGNpQkZJRDBnYVhORmJuVnRMbU5oYkd3b2RHaHBjeXdnYTJWNUlEMGdkRzlRY21sdGFYUnBkbVVvYTJWNUxDQjBjblZsS1NrN1hHNGdJR2xtS0hSb2FYTWdQVDA5SUU5aWFtVmpkRkJ5YjNSdklDWW1JR2hoY3loQmJHeFRlVzFpYjJ4ekxDQnJaWGtwSUNZbUlDRm9ZWE1vVDFCVGVXMWliMnh6TENCclpYa3BLWEpsZEhWeWJpQm1ZV3h6WlR0Y2JpQWdjbVYwZFhKdUlFVWdmSHdnSVdoaGN5aDBhR2x6TENCclpYa3BJSHg4SUNGb1lYTW9RV3hzVTNsdFltOXNjeXdnYTJWNUtTQjhmQ0JvWVhNb2RHaHBjeXdnU0VsRVJFVk9LU0FtSmlCMGFHbHpXMGhKUkVSRlRsMWJhMlY1WFNBL0lFVWdPaUIwY25WbE8xeHVmVHRjYm5aaGNpQWtaMlYwVDNkdVVISnZjR1Z5ZEhsRVpYTmpjbWx3ZEc5eUlEMGdablZ1WTNScGIyNGdaMlYwVDNkdVVISnZjR1Z5ZEhsRVpYTmpjbWx3ZEc5eUtHbDBMQ0JyWlhrcGUxeHVJQ0JwZENBZ1BTQjBiMGxQWW1wbFkzUW9hWFFwTzF4dUlDQnJaWGtnUFNCMGIxQnlhVzFwZEdsMlpTaHJaWGtzSUhSeWRXVXBPMXh1SUNCcFppaHBkQ0E5UFQwZ1QySnFaV04wVUhKdmRHOGdKaVlnYUdGektFRnNiRk41YldKdmJITXNJR3RsZVNrZ0ppWWdJV2hoY3loUFVGTjViV0p2YkhNc0lHdGxlU2twY21WMGRYSnVPMXh1SUNCMllYSWdSQ0E5SUdkUFVFUW9hWFFzSUd0bGVTazdYRzRnSUdsbUtFUWdKaVlnYUdGektFRnNiRk41YldKdmJITXNJR3RsZVNrZ0ppWWdJU2hvWVhNb2FYUXNJRWhKUkVSRlRpa2dKaVlnYVhSYlNFbEVSRVZPWFZ0clpYbGRLU2xFTG1WdWRXMWxjbUZpYkdVZ1BTQjBjblZsTzF4dUlDQnlaWFIxY200Z1JEdGNibjA3WEc1MllYSWdKR2RsZEU5M2JsQnliM0JsY25SNVRtRnRaWE1nUFNCbWRXNWpkR2x2YmlCblpYUlBkMjVRY205d1pYSjBlVTVoYldWektHbDBLWHRjYmlBZ2RtRnlJRzVoYldWeklDQTlJR2RQVUU0b2RHOUpUMkpxWldOMEtHbDBLU2xjYmlBZ0lDQXNJSEpsYzNWc2RDQTlJRnRkWEc0Z0lDQWdMQ0JwSUNBZ0lDQWdQU0F3WEc0Z0lDQWdMQ0JyWlhrN1hHNGdJSGRvYVd4bEtHNWhiV1Z6TG14bGJtZDBhQ0ErSUdrcGUxeHVJQ0FnSUdsbUtDRm9ZWE1vUVd4c1UzbHRZbTlzY3l3Z2EyVjVJRDBnYm1GdFpYTmJhU3NyWFNrZ0ppWWdhMlY1SUNFOUlFaEpSRVJGVGlBbUppQnJaWGtnSVQwZ1RVVlVRU2x5WlhOMWJIUXVjSFZ6YUNoclpYa3BPMXh1SUNCOUlISmxkSFZ5YmlCeVpYTjFiSFE3WEc1OU8xeHVkbUZ5SUNSblpYUlBkMjVRY205d1pYSjBlVk41YldKdmJITWdQU0JtZFc1amRHbHZiaUJuWlhSUGQyNVFjbTl3WlhKMGVWTjViV0p2YkhNb2FYUXBlMXh1SUNCMllYSWdTVk5mVDFBZ0lEMGdhWFFnUFQwOUlFOWlhbVZqZEZCeWIzUnZYRzRnSUNBZ0xDQnVZVzFsY3lBZ1BTQm5UMUJPS0VsVFgwOVFJRDhnVDFCVGVXMWliMnh6SURvZ2RHOUpUMkpxWldOMEtHbDBLU2xjYmlBZ0lDQXNJSEpsYzNWc2RDQTlJRnRkWEc0Z0lDQWdMQ0JwSUNBZ0lDQWdQU0F3WEc0Z0lDQWdMQ0JyWlhrN1hHNGdJSGRvYVd4bEtHNWhiV1Z6TG14bGJtZDBhQ0ErSUdrcGUxeHVJQ0FnSUdsbUtHaGhjeWhCYkd4VGVXMWliMnh6TENCclpYa2dQU0J1WVcxbGMxdHBLeXRkS1NBbUppQW9TVk5mVDFBZ1B5Qm9ZWE1vVDJKcVpXTjBVSEp2ZEc4c0lHdGxlU2tnT2lCMGNuVmxLU2x5WlhOMWJIUXVjSFZ6YUNoQmJHeFRlVzFpYjJ4elcydGxlVjBwTzF4dUlDQjlJSEpsZEhWeWJpQnlaWE4xYkhRN1hHNTlPMXh1WEc0dkx5QXhPUzQwTGpFdU1TQlRlVzFpYjJ3b1cyUmxjMk55YVhCMGFXOXVYU2xjYm1sbUtDRlZVMFZmVGtGVVNWWkZLWHRjYmlBZ0pGTjViV0p2YkNBOUlHWjFibU4wYVc5dUlGTjViV0p2YkNncGUxeHVJQ0FnSUdsbUtIUm9hWE1nYVc1emRHRnVZMlZ2WmlBa1UzbHRZbTlzS1hSb2NtOTNJRlI1Y0dWRmNuSnZjaWduVTNsdFltOXNJR2x6SUc1dmRDQmhJR052Ym5OMGNuVmpkRzl5SVNjcE8xeHVJQ0FnSUhaaGNpQjBZV2NnUFNCMWFXUW9ZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQStJREFnUHlCaGNtZDFiV1Z1ZEhOYk1GMGdPaUIxYm1SbFptbHVaV1FwTzF4dUlDQWdJSFpoY2lBa2MyVjBJRDBnWm5WdVkzUnBiMjRvZG1Gc2RXVXBlMXh1SUNBZ0lDQWdhV1lvZEdocGN5QTlQVDBnVDJKcVpXTjBVSEp2ZEc4cEpITmxkQzVqWVd4c0tFOVFVM2x0WW05c2N5d2dkbUZzZFdVcE8xeHVJQ0FnSUNBZ2FXWW9hR0Z6S0hSb2FYTXNJRWhKUkVSRlRpa2dKaVlnYUdGektIUm9hWE5iU0VsRVJFVk9YU3dnZEdGbktTbDBhR2x6VzBoSlJFUkZUbDFiZEdGblhTQTlJR1poYkhObE8xeHVJQ0FnSUNBZ2MyVjBVM2x0WW05c1JHVnpZeWgwYUdsekxDQjBZV2NzSUdOeVpXRjBaVVJsYzJNb01Td2dkbUZzZFdVcEtUdGNiaUFnSUNCOU8xeHVJQ0FnSUdsbUtFUkZVME5TU1ZCVVQxSlRJQ1ltSUhObGRIUmxjaWx6WlhSVGVXMWliMnhFWlhOaktFOWlhbVZqZEZCeWIzUnZMQ0IwWVdjc0lIdGpiMjVtYVdkMWNtRmliR1U2SUhSeWRXVXNJSE5sZERvZ0pITmxkSDBwTzF4dUlDQWdJSEpsZEhWeWJpQjNjbUZ3S0hSaFp5azdYRzRnSUgwN1hHNGdJSEpsWkdWbWFXNWxLQ1JUZVcxaWIyeGJVRkpQVkU5VVdWQkZYU3dnSjNSdlUzUnlhVzVuSnl3Z1puVnVZM1JwYjI0Z2RHOVRkSEpwYm1jb0tYdGNiaUFnSUNCeVpYUjFjbTRnZEdocGN5NWZhenRjYmlBZ2ZTazdYRzVjYmlBZ0pFZFBVRVF1WmlBOUlDUm5aWFJQZDI1UWNtOXdaWEowZVVSbGMyTnlhWEIwYjNJN1hHNGdJQ1JFVUM1bUlDQWdQU0FrWkdWbWFXNWxVSEp2Y0dWeWRIazdYRzRnSUhKbGNYVnBjbVVvSnk0dlgyOWlhbVZqZEMxbmIzQnVKeWt1WmlBOUlHZFBVRTVGZUhRdVppQTlJQ1JuWlhSUGQyNVFjbTl3WlhKMGVVNWhiV1Z6TzF4dUlDQnlaWEYxYVhKbEtDY3VMMTl2WW1wbFkzUXRjR2xsSnlrdVppQWdQU0FrY0hKdmNHVnlkSGxKYzBWdWRXMWxjbUZpYkdVN1hHNGdJSEpsY1hWcGNtVW9KeTR2WDI5aWFtVmpkQzFuYjNCekp5a3VaaUE5SUNSblpYUlBkMjVRY205d1pYSjBlVk41YldKdmJITTdYRzVjYmlBZ2FXWW9SRVZUUTFKSlVGUlBVbE1nSmlZZ0lYSmxjWFZwY21Vb0p5NHZYMnhwWW5KaGNua25LU2w3WEc0Z0lDQWdjbVZrWldacGJtVW9UMkpxWldOMFVISnZkRzhzSUNkd2NtOXdaWEowZVVselJXNTFiV1Z5WVdKc1pTY3NJQ1J3Y205d1pYSjBlVWx6Ulc1MWJXVnlZV0pzWlN3Z2RISjFaU2s3WEc0Z0lIMWNibHh1SUNCM2EzTkZlSFF1WmlBOUlHWjFibU4wYVc5dUtHNWhiV1VwZTF4dUlDQWdJSEpsZEhWeWJpQjNjbUZ3S0hkcmN5aHVZVzFsS1NrN1hHNGdJSDFjYm4xY2JseHVKR1Y0Y0c5eWRDZ2taWGh3YjNKMExrY2dLeUFrWlhod2IzSjBMbGNnS3lBa1pYaHdiM0owTGtZZ0tpQWhWVk5GWDA1QlZFbFdSU3dnZTFONWJXSnZiRG9nSkZONWJXSnZiSDBwTzF4dVhHNW1iM0lvZG1GeUlITjViV0p2YkhNZ1BTQW9YRzRnSUM4dklERTVMalF1TWk0eUxDQXhPUzQwTGpJdU15d2dNVGt1TkM0eUxqUXNJREU1TGpRdU1pNDJMQ0F4T1M0MExqSXVPQ3dnTVRrdU5DNHlMamtzSURFNUxqUXVNaTR4TUN3Z01Ua3VOQzR5TGpFeExDQXhPUzQwTGpJdU1USXNJREU1TGpRdU1pNHhNeXdnTVRrdU5DNHlMakUwWEc0Z0lDZG9ZWE5KYm5OMFlXNWpaU3hwYzBOdmJtTmhkRk53Y21WaFpHRmliR1VzYVhSbGNtRjBiM0lzYldGMFkyZ3NjbVZ3YkdGalpTeHpaV0Z5WTJnc2MzQmxZMmxsY3l4emNHeHBkQ3gwYjFCeWFXMXBkR2wyWlN4MGIxTjBjbWx1WjFSaFp5eDFibk5qYjNCaFlteGxjeWRjYmlrdWMzQnNhWFFvSnl3bktTd2dhU0E5SURBN0lITjViV0p2YkhNdWJHVnVaM1JvSUQ0Z2FUc2dLWGRyY3loemVXMWliMnh6VzJrcksxMHBPMXh1WEc1bWIzSW9kbUZ5SUhONWJXSnZiSE1nUFNBa2EyVjVjeWgzYTNNdWMzUnZjbVVwTENCcElEMGdNRHNnYzNsdFltOXNjeTVzWlc1bmRHZ2dQaUJwT3lBcGQydHpSR1ZtYVc1bEtITjViV0p2YkhOYmFTc3JYU2s3WEc1Y2JpUmxlSEJ2Y25Rb0pHVjRjRzl5ZEM1VElDc2dKR1Y0Y0c5eWRDNUdJQ29nSVZWVFJWOU9RVlJKVmtVc0lDZFRlVzFpYjJ3bkxDQjdYRzRnSUM4dklERTVMalF1TWk0eElGTjViV0p2YkM1bWIzSW9hMlY1S1Z4dUlDQW5abTl5SnpvZ1puVnVZM1JwYjI0b2EyVjVLWHRjYmlBZ0lDQnlaWFIxY200Z2FHRnpLRk41YldKdmJGSmxaMmx6ZEhKNUxDQnJaWGtnS3owZ0p5Y3BYRzRnSUNBZ0lDQS9JRk41YldKdmJGSmxaMmx6ZEhKNVcydGxlVjFjYmlBZ0lDQWdJRG9nVTNsdFltOXNVbVZuYVhOMGNubGJhMlY1WFNBOUlDUlRlVzFpYjJ3b2EyVjVLVHRjYmlBZ2ZTeGNiaUFnTHk4Z01Ua3VOQzR5TGpVZ1UzbHRZbTlzTG10bGVVWnZjaWh6ZVcwcFhHNGdJR3RsZVVadmNqb2dablZ1WTNScGIyNGdhMlY1Um05eUtHdGxlU2w3WEc0Z0lDQWdhV1lvYVhOVGVXMWliMndvYTJWNUtTbHlaWFIxY200Z2EyVjVUMllvVTNsdFltOXNVbVZuYVhOMGNua3NJR3RsZVNrN1hHNGdJQ0FnZEdoeWIzY2dWSGx3WlVWeWNtOXlLR3RsZVNBcklDY2dhWE1nYm05MElHRWdjM2x0WW05c0lTY3BPMXh1SUNCOUxGeHVJQ0IxYzJWVFpYUjBaWEk2SUdaMWJtTjBhVzl1S0NsN0lITmxkSFJsY2lBOUlIUnlkV1U3SUgwc1hHNGdJSFZ6WlZOcGJYQnNaVG9nWm5WdVkzUnBiMjRvS1hzZ2MyVjBkR1Z5SUQwZ1ptRnNjMlU3SUgxY2JuMHBPMXh1WEc0a1pYaHdiM0owS0NSbGVIQnZjblF1VXlBcklDUmxlSEJ2Y25RdVJpQXFJQ0ZWVTBWZlRrRlVTVlpGTENBblQySnFaV04wSnl3Z2UxeHVJQ0F2THlBeE9TNHhMakl1TWlCUFltcGxZM1F1WTNKbFlYUmxLRThnV3l3Z1VISnZjR1Z5ZEdsbGMxMHBYRzRnSUdOeVpXRjBaVG9nSkdOeVpXRjBaU3hjYmlBZ0x5OGdNVGt1TVM0eUxqUWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0U4c0lGQXNJRUYwZEhKcFluVjBaWE1wWEc0Z0lHUmxabWx1WlZCeWIzQmxjblI1T2lBa1pHVm1hVzVsVUhKdmNHVnlkSGtzWEc0Z0lDOHZJREU1TGpFdU1pNHpJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowYVdWektFOHNJRkJ5YjNCbGNuUnBaWE1wWEc0Z0lHUmxabWx1WlZCeWIzQmxjblJwWlhNNklDUmtaV1pwYm1WUWNtOXdaWEowYVdWekxGeHVJQ0F2THlBeE9TNHhMakl1TmlCUFltcGxZM1F1WjJWMFQzZHVVSEp2Y0dWeWRIbEVaWE5qY21sd2RHOXlLRThzSUZBcFhHNGdJR2RsZEU5M2JsQnliM0JsY25SNVJHVnpZM0pwY0hSdmNqb2dKR2RsZEU5M2JsQnliM0JsY25SNVJHVnpZM0pwY0hSdmNpeGNiaUFnTHk4Z01Ua3VNUzR5TGpjZ1QySnFaV04wTG1kbGRFOTNibEJ5YjNCbGNuUjVUbUZ0WlhNb1R5bGNiaUFnWjJWMFQzZHVVSEp2Y0dWeWRIbE9ZVzFsY3pvZ0pHZGxkRTkzYmxCeWIzQmxjblI1VG1GdFpYTXNYRzRnSUM4dklERTVMakV1TWk0NElFOWlhbVZqZEM1blpYUlBkMjVRY205d1pYSjBlVk41YldKdmJITW9UeWxjYmlBZ1oyVjBUM2R1VUhKdmNHVnlkSGxUZVcxaWIyeHpPaUFrWjJWMFQzZHVVSEp2Y0dWeWRIbFRlVzFpYjJ4elhHNTlLVHRjYmx4dUx5OGdNalF1TXk0eUlFcFRUMDR1YzNSeWFXNW5hV1o1S0haaGJIVmxJRnNzSUhKbGNHeGhZMlZ5SUZzc0lITndZV05sWFYwcFhHNGtTbE5QVGlBbUppQWtaWGh3YjNKMEtDUmxlSEJ2Y25RdVV5QXJJQ1JsZUhCdmNuUXVSaUFxSUNnaFZWTkZYMDVCVkVsV1JTQjhmQ0FrWm1GcGJITW9ablZ1WTNScGIyNG9LWHRjYmlBZ2RtRnlJRk1nUFNBa1UzbHRZbTlzS0NrN1hHNGdJQzh2SUUxVElFVmtaMlVnWTI5dWRtVnlkSE1nYzNsdFltOXNJSFpoYkhWbGN5QjBieUJLVTA5T0lHRnpJSHQ5WEc0Z0lDOHZJRmRsWWt0cGRDQmpiMjUyWlhKMGN5QnplVzFpYjJ3Z2RtRnNkV1Z6SUhSdklFcFRUMDRnWVhNZ2JuVnNiRnh1SUNBdkx5QldPQ0IwYUhKdmQzTWdiMjRnWW05NFpXUWdjM2x0WW05c2MxeHVJQ0J5WlhSMWNtNGdYM04wY21sdVoybG1lU2hiVTEwcElDRTlJQ2RiYm5Wc2JGMG5JSHg4SUY5emRISnBibWRwWm5rb2UyRTZJRk45S1NBaFBTQW5lMzBuSUh4OElGOXpkSEpwYm1kcFpua29UMkpxWldOMEtGTXBLU0FoUFNBbmUzMG5PMXh1ZlNrcExDQW5TbE5QVGljc0lIdGNiaUFnYzNSeWFXNW5hV1o1T2lCbWRXNWpkR2x2YmlCemRISnBibWRwWm5rb2FYUXBlMXh1SUNBZ0lHbG1LR2wwSUQwOVBTQjFibVJsWm1sdVpXUWdmSHdnYVhOVGVXMWliMndvYVhRcEtYSmxkSFZ5YmpzZ0x5OGdTVVU0SUhKbGRIVnlibk1nYzNSeWFXNW5JRzl1SUhWdVpHVm1hVzVsWkZ4dUlDQWdJSFpoY2lCaGNtZHpJRDBnVzJsMFhWeHVJQ0FnSUNBZ0xDQnBJQ0FnSUQwZ01WeHVJQ0FnSUNBZ0xDQnlaWEJzWVdObGNpd2dKSEpsY0d4aFkyVnlPMXh1SUNBZ0lIZG9hV3hsS0dGeVozVnRaVzUwY3k1c1pXNW5kR2dnUGlCcEtXRnlaM011Y0hWemFDaGhjbWQxYldWdWRITmJhU3NyWFNrN1hHNGdJQ0FnY21Wd2JHRmpaWElnUFNCaGNtZHpXekZkTzF4dUlDQWdJR2xtS0hSNWNHVnZaaUJ5WlhCc1lXTmxjaUE5UFNBblpuVnVZM1JwYjI0bktTUnlaWEJzWVdObGNpQTlJSEpsY0d4aFkyVnlPMXh1SUNBZ0lHbG1LQ1J5WlhCc1lXTmxjaUI4ZkNBaGFYTkJjbkpoZVNoeVpYQnNZV05sY2lrcGNtVndiR0ZqWlhJZ1BTQm1kVzVqZEdsdmJpaHJaWGtzSUhaaGJIVmxLWHRjYmlBZ0lDQWdJR2xtS0NSeVpYQnNZV05sY2lsMllXeDFaU0E5SUNSeVpYQnNZV05sY2k1allXeHNLSFJvYVhNc0lHdGxlU3dnZG1Gc2RXVXBPMXh1SUNBZ0lDQWdhV1lvSVdselUzbHRZbTlzS0haaGJIVmxLU2x5WlhSMWNtNGdkbUZzZFdVN1hHNGdJQ0FnZlR0Y2JpQWdJQ0JoY21keld6RmRJRDBnY21Wd2JHRmpaWEk3WEc0Z0lDQWdjbVYwZFhKdUlGOXpkSEpwYm1kcFpua3VZWEJ3Ykhrb0pFcFRUMDRzSUdGeVozTXBPMXh1SUNCOVhHNTlLVHRjYmx4dUx5OGdNVGt1TkM0ekxqUWdVM2x0WW05c0xuQnliM1J2ZEhsd1pWdEFRSFJ2VUhKcGJXbDBhWFpsWFNob2FXNTBLVnh1SkZONWJXSnZiRnRRVWs5VVQxUlpVRVZkVzFSUFgxQlNTVTFKVkVsV1JWMGdmSHdnY21WeGRXbHlaU2duTGk5ZmFHbGtaU2NwS0NSVGVXMWliMnhiVUZKUFZFOVVXVkJGWFN3Z1ZFOWZVRkpKVFVsVVNWWkZMQ0FrVTNsdFltOXNXMUJTVDFSUFZGbFFSVjB1ZG1Gc2RXVlBaaWs3WEc0dkx5QXhPUzQwTGpNdU5TQlRlVzFpYjJ3dWNISnZkRzkwZVhCbFcwQkFkRzlUZEhKcGJtZFVZV2RkWEc1elpYUlViMU4wY21sdVoxUmhaeWdrVTNsdFltOXNMQ0FuVTNsdFltOXNKeWs3WEc0dkx5QXlNQzR5TGpFdU9TQk5ZWFJvVzBCQWRHOVRkSEpwYm1kVVlXZGRYRzV6WlhSVWIxTjBjbWx1WjFSaFp5aE5ZWFJvTENBblRXRjBhQ2NzSUhSeWRXVXBPMXh1THk4Z01qUXVNeTR6SUVwVFQwNWJRRUIwYjFOMGNtbHVaMVJoWjExY2JuTmxkRlJ2VTNSeWFXNW5WR0ZuS0dkc2IySmhiQzVLVTA5T0xDQW5TbE5QVGljc0lIUnlkV1VwTzF4dVhHNWNiaTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVkpjYmk4dklDNHZmaTlqYjNKbExXcHpMMnhwWW5KaGNua3ZiVzlrZFd4bGN5OWxjell1YzNsdFltOXNMbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0F4TURaY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklpd2ljbVZ4ZFdseVpTZ25MaTlmZDJ0ekxXUmxabWx1WlNjcEtDZGhjM2x1WTBsMFpYSmhkRzl5SnlrN1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMlZ6Tnk1emVXMWliMnd1WVhONWJtTXRhWFJsY21GMGIzSXVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJREV3TjF4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWdNU0F5SURNaUxDSnlaWEYxYVhKbEtDY3VMMTkzYTNNdFpHVm1hVzVsSnlrb0oyOWljMlZ5ZG1GaWJHVW5LVHRjYmx4dVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNYRzR2THlBdUwzNHZZMjl5WlMxcWN5OXNhV0p5WVhKNUwyMXZaSFZzWlhNdlpYTTNMbk41YldKdmJDNXZZbk5sY25aaFlteGxMbXB6WEc0dkx5QnRiMlIxYkdVZ2FXUWdQU0F4TURoY2JpOHZJRzF2WkhWc1pTQmphSFZ1YTNNZ1BTQXdJREVnTWlBeklpd2liVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQjdJRndpWkdWbVlYVnNkRndpT2lCeVpYRjFhWEpsS0Z3aVkyOXlaUzFxY3k5c2FXSnlZWEo1TDJadUwyOWlhbVZqZEM5aGMzTnBaMjVjSWlrc0lGOWZaWE5OYjJSMWJHVTZJSFJ5ZFdVZ2ZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlltRmlaV3d0Y25WdWRHbHRaUzlqYjNKbExXcHpMMjlpYW1WamRDOWhjM05wWjI0dWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlERXhPRnh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBaUxDSXZMeUFnSUNBZ2NISnZlSGt0YjJKelpYSjJaU0IyTUM0d0xqRTRYSEpjYmk4dklDQWdJQ0JEYjNCNWNtbG5hSFFnS0dNcElESXdNVFVzSURJd01UWWdVMmx0YjI0Z1dTNGdRbXhoWTJ0M1pXeHNMQ0JCYm5sWGFHbGphRmRoZVZ4eVhHNHZMeUFnSUNBZ1RVbFVJRXhwWTJWdWMyVWdMU0JvZEhSd09pOHZiM0JsYm5OdmRYSmpaUzV2Y21jdmJHbGpaVzV6WlhNdmJXbDBMV3hwWTJWdWMyVXVjR2h3WEhKY2JpaG1kVzVqZEdsdmJpZ3BJSHRjY2x4dVhIUmNJblZ6WlNCemRISnBZM1JjSWp0Y2NseHVYSFF2THlCRGNtVmhkR1Z6SUdGdVpDQnlaWFIxY201eklHRWdVSEp2ZUhrZ2QzSmhjSEJwYm1jZ1lTQjBZWEpuWlhRZ2MyOGdkR2hoZENCaGJHd2dZMmhoYm1kbGN5QmpZVzRnWW1VZ2RISmhjSEJsWkNCaGJtUWdabTl5ZDJGeVpHVmtJSFJ2WEhKY2JseDBMeThnWVNCallXeHNZbUZqYXk0Z1ZHaGxJR05oYkd4aVlXTnJJSFJoYTJWeklHRnVJR0Z5Y21GNUlHOW1JR05vWVc1blpYTWdhblZ6ZENCc2FXdGxJSFJvWlNCMGNtRmthWFJwYjI1aGJDQnZjbWxuYVc1aGJDQkRhSEp2YldVZ1QySnFaV04wTG05aWMyVnlkbVZjY2x4dVhIUXZMeUI3YjJKcVpXTjBPanh2WW1wbFkzUWdZMmhoYm1kbFpENHNibUZ0WlRvOFptbGxiR1FnWTJoaGJtZGxaRDRzZEhsd1pUcGhaR1I4ZFhCa1lYUmxmR1JsYkdWMFpYeHlaV052Ym1acFozVnlaWHh3Y21WMlpXNTBSWGgwWlc1emFXOXVjM3h6WlhSUWNtOTBiM1I1Y0dVc2IyeGtWbUZzZFdVNlBHOXNaQ0IyWVd4MVpTQnBaaUIxY0dSaGRHVWdmQ0JrWld4bGRHVStmVnh5WEc1Y2RDOHZJRlJvWlNCaFkyTmxjSFJzYVhOMElHTmhiaUJpWlNCaFpHUjhkWEJrWVhSbGZHUmxiR1YwWlh4eVpXTnZibVpwWjNWeVpYeHdjbVYyWlc1MFJYaDBaVzV6YVc5dWMzeHpaWFJRY205MGIzUjVjR1V1WEhKY2JseDBMeThnZGlBd0xqQXVNVEFnZEc4Z2MzVndjRzl5ZENCd1lYVnphVzVuSUdGdVpDQnlaWE4wWVhKMGFXNW5JRzlpYzJWeWRtRjBhVzl1SUhSM2J5QmhaR1JwZEdsdmJtRnNJR052Ym5OMGNuVmpkRzl5SUdGeVozVnRaVzUwY3lCaGNtVWdZWFpoYVd4aFlteGxJSFJ2SUU5aWFtVmpkQzV2WW5ObGNuWmxPbHh5WEc1Y2RDOHZJSEJoZFhOaFlteGxJQzBnWTNKbFlYUmxJSFJvWlNCUFluTmxjblpsY2lCemJ5QnBkQ0JqWVc0Z1ltVWdjR0YxYzJWa1hISmNibHgwTHk4Z2NHRjFjMlVnTFNCamNtVmhkR1VnYjJKelpYSjJaWElnYVc0Z2NHRjFjMlZrSUhOMFlYUmxYSEpjYmx4MEx5OGdhV1lnY0dGMWMyRmliR1VnYVhNZ2RISjFaU0IwYUdWdUlHRnVJR0ZrWkdsMGFXOXVZV3dnYldWMGFHOWtJR1JsYkdsMlpYSW9hV2R1YjNKbFVISmxkbWx2ZFhNcElHbHpJR0YyWVdsc1lXSnNaU0IwYnlCemRHRnlkQ0JrWld4cGRtVnllVnh5WEc1Y2RDOHZJSFJ2SUhCaGRYTmxJR1JsYkdsMlpYSjVJSE5sZENCaElIQnliM0JsY25SNUlHTmhiR3hsWkNCd1lYVnpaU0J2YmlCMGFHVWdablZ1WTNScGIyNGdaR1ZzYVhabGNpQjBieUIwY25WbFhISmNibHgwTHk4Z2NHRjFjMkZpYkdVZ2FYTWdiM0IwYVc5dVlXd2dkRzhnY21Wa2RXTmxJSFJvWlNCamFHRnVZMlVnYjJZZ2MyaGhaRzkzYVc1bklHRWdjSEp2Y0dWeWRIa2diM0lnYldWMGFHOWtJRzl1SUdGdWVTQmxlR2x6ZEdsdVp5QmpiMlJsSUdOaGJHeGxaQ0JrWld4cGRtVnlYSEpjYmx4MGFXWW9JVTlpYW1WamRDNXZZbk5sY25abElDWW1JSFI1Y0dWdlppaFFjbTk0ZVNrOVBUMWNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2NseHVYSFJjZEdaMWJtTjBhVzl1SUU5aWMyVnlkbVZ5S0hSaGNtZGxkQ3hqWVd4c1ltRmpheXhoWTJObGNIUnNhWE4wTEhCaGRYTmhZbXhsTEhCaGRYTmxMR1JsYkdGNUtTQjdYSEpjYmx4MElDQWdJRngwZG1GeUlHMWxJRDBnZEdocGN5d2djSEp2ZUhrN1hISmNibHgwSUNBZ0lGeDBablZ1WTNScGIyNGdaR1ZzYVhabGNpaHBaMjV2Y21WUWNtVjJhVzkxY3l4a1pXeGhlU2tnZTF4eVhHNWNkQ0FnSUNCY2RGeDBaR1ZzYVhabGNpNWtaV3hoZVNBOUlHUmxiR0Y1TzF4eVhHNWNkQ0FnSUNCY2RGeDBhV1lvSVdSbGJHbDJaWEl1Y0dGMWMyVXBJSHRjY2x4dVhIUWdJQ0FnSUNBZ0lGeDBYSFJwWmlodFpTNWphR0Z1WjJWelpYUXViR1Z1WjNSb1BqQXBJSHRjY2x4dVhIUWdJQ0FnSUNBZ0lGeDBYSFJjZEdsbUtDRnBaMjV2Y21WUWNtVjJhVzkxY3lrZ2UxeHlYRzVjZEZ4MElDQWdJRngwSUNBZ0lGeDBYSFIyWVhJZ1kyaGhibWRsY3lBOUlHMWxMbU5vWVc1blpYTmxkQzVtYVd4MFpYSW9ablZ1WTNScGIyNG9ZMmhoYm1kbEtTQjdJSEpsZEhWeWJpQWhZV05qWlhCMGJHbHpkQ0I4ZkNCaFkyTmxjSFJzYVhOMExtbHVaR1Y0VDJZb1kyaGhibWRsTG5SNWNHVXBQajB3T3lCOUtUdGNjbHh1WEhSY2RDQWdJQ0FnSUNBZ1hIUmNkRngwYVdZb1kyaGhibWRsY3k1c1pXNW5kR2crTUNrZ2UxeHlYRzVjZEZ4MElDQWdJQ0FnSUNCY2RGeDBYSFJjZEdOaGJHeGlZV05yS0dOb1lXNW5aWE1wTzF4eVhHNWNkRngwSUNBZ0lDQWdJQ0JjZEZ4MFhIUjlYSEpjYmx4MElDQWdJQ0FnSUNCY2RGeDBYSFI5WEhKY2JseDBJQ0FnSUNBZ0lDQmNkRngwWEhSdFpTNWphR0Z1WjJWelpYUWdQU0JiWFR0Y2NseHVYSFFnSUNBZ0lDQWdJRngwWEhSOVhISmNibHgwSUNBZ0lGeDBYSFI5WEhKY2JseDBJQ0FnSUZ4MGZWeHlYRzVjZENBZ0lDQmNkR1JsYkdsMlpYSXVjR0YxYzJVZ1BTQndZWFZ6WlR0Y2NseHVYSFFnSUNBZ1hIUmtaV3hwZG1WeUxtUmxiR0Y1SUQwZ1pHVnNZWGs3WEhKY2JseDBYSFFnSUNBZ2JXVXVaMlYwSUQwZ1puVnVZM1JwYjI0b2RHRnlaMlYwTENCd2NtOXdaWEowZVNrZ2UxeHlYRzVjZEZ4MElDQWdJRngwYVdZb2NISnZjR1Z5ZEhrOVBUMWNJbDlmYjJKelpYSjJaWEpmWDF3aUtTQjdYSEpjYmx4MFhIUWdJQ0FnWEhSY2RISmxkSFZ5YmlCdFpUdGNjbHh1WEhSY2RDQWdJQ0JjZEgxY2NseHVYSFJjZENBZ0lDQmNkR2xtS0hCeWIzQmxjblI1UFQwOVhDSjFibTlpYzJWeWRtVmNJaWtnZTF4eVhHNWNkRngwSUNBZ0lGeDBYSFJ5WlhSMWNtNGdablZ1WTNScGIyNG9LU0I3WEhKY2JseDBYSFFnSUNBZ1hIUmNkRngwVDJKcVpXTjBMblZ1YjJKelpYSjJaU2gwWVhKblpYUXBPMXh5WEc1Y2RGeDBJQ0FnSUZ4MFhIUmNkSEpsZEhWeWJpQjBZWEpuWlhRN1hISmNibHgwWEhRZ0lDQWdYSFJjZEgwN1hISmNibHgwWEhRZ0lDQWdYSFI5WEhKY2JseDBYSFFnSUNBZ1hIUnBaaWh3Y205d1pYSjBlVDA5UFZ3aVpHVnNhWFpsY2x3aUtTQjdYSEpjYmx4MFhIUWdJQ0FnWEhSY2RISmxkSFZ5YmlCa1pXeHBkbVZ5TzF4eVhHNWNkRngwSUNBZ0lGeDBmVnh5WEc1Y2RGeDBJQ0FnSUZ4MGNtVjBkWEp1SUhSaGNtZGxkRnR3Y205d1pYSjBlVjA3WEhKY2JseDBYSFFnSUNBZ2ZWeHlYRzVjZENBZ0lDQmNkRzFsTG5SaGNtZGxkQ0E5SUhSaGNtZGxkRHRjY2x4dVhIUWdJQ0FnWEhSdFpTNWphR0Z1WjJWelpYUWdQU0JiWFR0Y2NseHVYSFFnSUNBZ1hIUnBaaWdoYldVdWRHRnlaMlYwTGw5ZmIySnpaWEoyWlhKRFlXeHNZbUZqYTNOZlh5a2dlMXh5WEc1Y2RDQWdJQ0JjZEZ4MEx5OGdYMTl2WW5ObGNuWmxja05oYkd4aVlXTnJjMTlmSUdseklIVnpaV1FnWVhNZ1lXNGdhVzVrWlhnZ2RHOGdaMlYwSUdGMElIUm9aU0J3Y205NGVTQjNhR2xqYUNCcGN5QjBhR1VnYjJKelpYSjJaWElzSUhOdklIZGxJR05oYmlCMWJtOWljMlZ5ZG1WY2NseHVYSFFnSUNBZ1hIUmNkRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoMFlYSm5aWFFzWENKZlgyOWljMlZ5ZG1WeVEyRnNiR0poWTJ0elgxOWNJaXg3Wlc1MWJXVnlZV0pzWlRwbVlXeHpaU3hqYjI1bWFXZDFjbUZpYkdVNmRISjFaU3gzY21sMFlXSnNaVHBtWVd4elpTeDJZV3gxWlRwYlhYMHBPMXh5WEc1Y2RDQWdJQ0JjZEZ4MFQySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJoY21kbGRDeGNJbDlmYjJKelpYSjJaWEp6WDE5Y0lpeDdaVzUxYldWeVlXSnNaVHBtWVd4elpTeGpiMjVtYVdkMWNtRmliR1U2ZEhKMVpTeDNjbWwwWVdKc1pUcG1ZV3h6WlN4MllXeDFaVHBiWFgwcE8xeHlYRzVjZENBZ0lDQmNkSDFjY2x4dVhIUWdJQ0FnWEhSdFpTNTBZWEpuWlhRdVgxOXZZbk5sY25abGNrTmhiR3hpWVdOcmMxOWZMbkIxYzJnb1kyRnNiR0poWTJzcE8xeHlYRzVjZENBZ0lDQmNkRzFsTG5SaGNtZGxkQzVmWDI5aWMyVnlkbVZ5YzE5ZkxuQjFjMmdvZEdocGN5azdYSEpjYmx4MElDQWdJRngwY0hKdmVIa2dQU0J1WlhjZ1VISnZlSGtvZEdGeVoyVjBMRzFsS1R0Y2NseHVYSFFnSUNBZ1hIUmtaV3hwZG1WeUtHWmhiSE5sTEdSbGJHRjVLVHRjY2x4dVhIUWdJQ0FnWEhSeVpYUjFjbTRnY0hKdmVIazdYSEpjYmx4MElDQWdJSDFjY2x4dVhIUmNkRTlpYzJWeWRtVnlMbkJ5YjNSdmRIbHdaUzVrWld4cGRtVnlJRDBnWm5WdVkzUnBiMjRvS1NCN1hISmNibHgwWEhSY2RISmxkSFZ5YmlCMGFHbHpMbWRsZENodWRXeHNMRndpWkdWc2FYWmxjbHdpS1R0Y2NseHVYSFJjZEgxY2NseHVYSFFnSUNBZ1QySnpaWEoyWlhJdWNISnZkRzkwZVhCbExuTmxkQ0E5SUdaMWJtTjBhVzl1S0hSaGNtZGxkQ3dnY0hKdmNHVnlkSGtzSUhaaGJIVmxLU0I3SUM4dklDd2djbVZqWldsMlpYSmNjbHh1WEhRZ0lDQWdYSFIyWVhJZ2IyeGtkbUZzZFdVZ1BTQjBZWEpuWlhSYmNISnZjR1Z5ZEhsZE8xeHlYRzVjZENBZ0lDQmNkSFpoY2lCMGVYQmxJRDBnS0c5c1pIWmhiSFZsUFQwOWRXNWtaV1pwYm1Wa0lEOGdYQ0poWkdSY0lpQTZJRndpZFhCa1lYUmxYQ0lwTzF4eVhHNWNkQ0FnSUNCY2RIUmhjbWRsZEZ0d2NtOXdaWEowZVYwZ1BTQjJZV3gxWlR0Y2NseHVYSFFnSUNBZ1hIUnBaaWgwWVhKblpYUXVYMTl2WW5ObGNuWmxjbk5mWHk1cGJtUmxlRTltS0hSb2FYTXBQajB3SUNZbUlDZ2hkR2hwY3k1aFkyTmxjSFJzYVhOMElIeDhJSFJvYVhNdVlXTmpaWEIwYkdsemRDNXBibVJsZUU5bUtIUjVjR1VwUGowd0tTa2dlMXh5WEc1Y2RDQWdJQ0FnSUNBZ1hIUjJZWElnWTJoaGJtZGxJRDBnZTI5aWFtVmpkRHAwWVhKblpYUXNibUZ0WlRwd2NtOXdaWEowZVN4MGVYQmxPblI1Y0dWOUxGeHlYRzVjZENBZ0lDQWdJQ0FnWEhSY2RITjBZWEowSUQwZ2RHaHBjeTVqYUdGdVoyVnpaWFF1YkdWdVozUm9JRDA5UFNBd0xGeHlYRzVjZENBZ0lDQWdJQ0FnWEhSY2RHUmxiR2wyWlhJZ1BTQjBhR2x6TG1SbGJHbDJaWElvS1R0Y2NseHVYSFFnSUNBZ0lDQWdJRngwYVdZb2RIbHdaVDA5UFZ3aWRYQmtZWFJsWENJcElIdGNjbHh1WEhRZ0lDQWdJQ0FnSUZ4MFhIUmphR0Z1WjJVdWIyeGtWbUZzZFdVZ1BTQnZiR1IyWVd4MVpUdGNjbHh1WEhRZ0lDQWdJQ0FnSUZ4MGZWeHlYRzVjZENBZ0lDQWdJQ0FnWEhSMGFHbHpMbU5vWVc1blpYTmxkQzV3ZFhOb0tHTm9ZVzVuWlNrN1hISmNibHgwSUNBZ0lDQWdJQ0JjZEdsbUtITjBZWEowS1NCN1hISmNibHgwSUNBZ0lDQWdJQ0JjZEZ4MFpHVnNhWFpsY2lobVlXeHpaU3dvZEhsd1pXOW1LR1JsYkdsMlpYSXVaR1ZzWVhrcFBUMDlYQ0p1ZFcxaVpYSmNJaUEvSUdSbGJHbDJaWEl1WkdWc1lYa2dPaUF4TUNrcE8xeHlYRzVjZENBZ0lDQWdJQ0FnWEhSOVhISmNibHgwSUNBZ0lGeDBmVnh5WEc1Y2RDQWdJQ0JjZEhKbGRIVnliaUIwY25WbE8xeHlYRzVjZENBZ0lDQjlPMXh5WEc1Y2RDQWdJQ0JQWW5ObGNuWmxjaTV3Y205MGIzUjVjR1V1WkdWc1pYUmxVSEp2Y0dWeWRIa2dQU0JtZFc1amRHbHZiaWgwWVhKblpYUXNJSEJ5YjNCbGNuUjVLU0I3WEhKY2JseDBJQ0FnSUZ4MGRtRnlJRzlzWkhaaGJIVmxJRDBnZEdGeVoyVjBXM0J5YjNCbGNuUjVYVHRjY2x4dVhIUWdJQ0FnWEhRdkwybG1LSFI1Y0dWdlppaHZiR1IyWVd4MVpTa2hQVDFjSW5WdVpHVm1hVzVsWkZ3aUtTQjdYSEpjYmx4MFhIUWdJQ0FnWEhSa1pXeGxkR1VnZEdGeVoyVjBXM0J5YjNCbGNuUjVYVHRjY2x4dVhIUmNkQ0FnSUNCY2RHbG1LSFJoY21kbGRDNWZYMjlpYzJWeWRtVnljMTlmTG1sdVpHVjRUMllvZEdocGN5aytQVEFnSmlZZ0lYUm9hWE11WVdOalpYQjBiR2x6ZENCOGZDQjBhR2x6TG1GalkyVndkR3hwYzNRdWFXNWtaWGhQWmloY0ltUmxiR1YwWlZ3aUtUNDlNQ2tnZTF4eVhHNWNkRngwSUNBZ0lDQWdJQ0JjZEhaaGNpQmphR0Z1WjJVZ1BTQjdiMkpxWldOME9uUmhjbWRsZEN4dVlXMWxPbkJ5YjNCbGNuUjVMSFI1Y0dVNlhDSmtaV3hsZEdWY0lpeHZiR1JXWVd4MVpUcHZiR1IyWVd4MVpYMHNYSEpjYmx4MFhIUWdJQ0FnSUNBZ0lGeDBYSFJ6ZEdGeWRDQTlJSFJvYVhNdVkyaGhibWRsYzJWMExteGxibWQwYUNBOVBUMGdNQ3hjY2x4dVhIUmNkQ0FnSUNBZ0lDQWdYSFJjZEdSbGJHbDJaWElnUFNCMGFHbHpMbVJsYkdsMlpYSW9LVHRjY2x4dVhIUmNkQ0FnSUNBZ0lDQWdYSFIwYUdsekxtTm9ZVzVuWlhObGRDNXdkWE5vS0dOb1lXNW5aU2s3WEhKY2JseDBYSFFnSUNBZ0lDQWdJRngwYVdZb2MzUmhjblFwSUh0Y2NseHVYSFJjZENBZ0lDQWdJQ0FnWEhSY2RHUmxiR2wyWlhJb1ptRnNjMlVzS0hSNWNHVnZaaWhrWld4cGRtVnlMbVJsYkdGNUtUMDlQVndpYm5WdFltVnlYQ0lnUHlCa1pXeHBkbVZ5TG1SbGJHRjVJRG9nTVRBcEtUdGNjbHh1WEhSY2RDQWdJQ0FnSUNBZ1hIUjlYSEpjYmx4MFhIUWdJQ0FnWEhSOVhISmNibHgwSUNBZ0lGeDBMeTk5WEhKY2JseDBJQ0FnSUZ4MGNtVjBkWEp1SUhSeWRXVTdYSEpjYmx4MElDQWdJSDA3WEhKY2JseDBJQ0FnSUU5aWMyVnlkbVZ5TG5CeWIzUnZkSGx3WlM1a1pXWnBibVZRY205d1pYSjBlU0E5SUdaMWJtTjBhVzl1S0hSaGNtZGxkQ3dnY0hKdmNHVnlkSGtzSUdSbGMyTnlhWEIwYjNJcElIdGNjbHh1WEhRZ0lDQWdYSFJQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2RHRnlaMlYwTENCd2NtOXdaWEowZVN3Z1pHVnpZM0pwY0hSdmNpazdYSEpjYmx4MElDQWdJRngwYVdZb2RHRnlaMlYwTGw5ZmIySnpaWEoyWlhKelgxOHVhVzVrWlhoUFppaDBhR2x6S1Q0OU1DQW1KaUFoZEdocGN5NWhZMk5sY0hSc2FYTjBJSHg4SUhSb2FYTXVZV05qWlhCMGJHbHpkQzVwYm1SbGVFOW1LRndpY21WamIyNW1hV2QxY21WY0lpaytQVEFwSUh0Y2NseHVYSFFnSUNBZ0lDQWdJRngwZG1GeUlHTm9ZVzVuWlNBOUlIdHZZbXBsWTNRNmRHRnlaMlYwTEc1aGJXVTZjSEp2Y0dWeWRIa3NkSGx3WlRwY0luSmxZMjl1Wm1sbmRYSmxYQ0o5TEZ4eVhHNGdJQ0FnSUNBZ0lGeDBYSFJjZEhOMFlYSjBJRDBnZEdocGN5NWphR0Z1WjJWelpYUXViR1Z1WjNSb0lEMDlQU0F3TEZ4eVhHNGdJQ0FnSUNBZ0lGeDBYSFJjZEdSbGJHbDJaWElnUFNCMGFHbHpMbVJsYkdsMlpYSW9LVHRjY2x4dVhIUWdJQ0FnSUNBZ0lGeDBkR2hwY3k1amFHRnVaMlZ6WlhRdWNIVnphQ2hqYUdGdVoyVXBPMXh5WEc1Y2RDQWdJQ0FnSUNBZ1hIUnBaaWh6ZEdGeWRDa2dlMXh5WEc1Y2RDQWdJQ0FnSUNBZ1hIUmNkR1JsYkdsMlpYSW9abUZzYzJVc0tIUjVjR1Z2Wmloa1pXeHBkbVZ5TG1SbGJHRjVLVDA5UFZ3aWJuVnRZbVZ5WENJZ1B5QmtaV3hwZG1WeUxtUmxiR0Y1SURvZ01UQXBLVHRjY2x4dVhIUWdJQ0FnSUNBZ0lGeDBmVnh5WEc1Y2RDQWdJQ0JjZEgxY2NseHVYSFFnSUNBZ1hIUnlaWFIxY200Z2RISjFaVHRjY2x4dVhIUWdJQ0FnZlR0Y2NseHVYSFFnSUNBZ1QySnpaWEoyWlhJdWNISnZkRzkwZVhCbExuTmxkRkJ5YjNSdmRIbHdaVTltSUQwZ1puVnVZM1JwYjI0b2RHRnlaMlYwTENCd2NtOTBiM1I1Y0dVcElIdGNjbHh1WEhRZ0lDQWdYSFIyWVhJZ2IyeGtkbUZzZFdVZ1BTQlBZbXBsWTNRdVoyVjBVSEp2ZEc5MGVYQmxUMllvZEdGeVoyVjBLVHRjY2x4dVhIUWdJQ0FnWEhSUFltcGxZM1F1YzJWMFVISnZkRzkwZVhCbFQyWW9kR0Z5WjJWMExDQndjbTkwYjNSNWNHVXBPMXh5WEc1Y2RDQWdJQ0JjZEdsbUtIUmhjbWRsZEM1ZlgyOWljMlZ5ZG1WeWMxOWZMbWx1WkdWNFQyWW9kR2hwY3lrK1BUQWdKaVlnSVhSb2FYTXVZV05qWlhCMGJHbHpkQ0I4ZkNCMGFHbHpMbUZqWTJWd2RHeHBjM1F1YVc1a1pYaFBaaWhjSW5ObGRGQnliM1J2ZEhsd1pWd2lLVDQ5TUNrZ2UxeHlYRzVjZENBZ0lDQWdJQ0FnWEhSMllYSWdZMmhoYm1kbElEMGdlMjlpYW1WamREcDBZWEpuWlhRc2JtRnRaVHBjSWw5ZmNISnZkRzlmWDF3aUxIUjVjR1U2WENKelpYUlFjbTkwYjNSNWNHVmNJaXh2YkdSV1lXeDFaVHB2YkdSMllXeDFaWDBzWEhKY2JpQWdJQ0JjZEZ4MFhIUmNkSE4wWVhKMElEMGdkR2hwY3k1amFHRnVaMlZ6WlhRdWJHVnVaM1JvSUQwOVBTQXdMRnh5WEc0Z0lDQWdYSFJjZEZ4MFhIUmtaV3hwZG1WeUlEMGdkR2hwY3k1a1pXeHBkbVZ5S0NrN1hISmNibHgwSUNBZ0lDQWdJQ0JjZEhSb2FYTXVZMmhoYm1kbGMyVjBMbkIxYzJnb1kyaGhibWRsS1R0Y2NseHVYSFFnSUNBZ0lDQWdJRngwYVdZb2MzUmhjblFwSUh0Y2NseHVYSFFnSUNBZ0lDQWdJRngwWEhSa1pXeHBkbVZ5S0daaGJITmxMQ2gwZVhCbGIyWW9aR1ZzYVhabGNpNWtaV3hoZVNrOVBUMWNJbTUxYldKbGNsd2lJRDhnWkdWc2FYWmxjaTVrWld4aGVTQTZJREV3S1NrN1hISmNibHgwSUNBZ0lDQWdJQ0JjZEgxY2NseHVYSFFnSUNBZ1hIUjlYSEpjYmx4MElDQWdJRngwY21WMGRYSnVJSFJ5ZFdVN1hISmNibHgwSUNBZ0lIMDdYSEpjYmx4MElDQWdJRTlpYzJWeWRtVnlMbkJ5YjNSdmRIbHdaUzV3Y21WMlpXNTBSWGgwWlc1emFXOXVjeUE5SUdaMWJtTjBhVzl1S0hSaGNtZGxkQ2tnZTF4eVhHNWNkQ0FnSUNBZ0lDQWdUMkpxWldOMExuQnlaWFpsYm5SRmVIUmxibk5wYjI1ektIUmhjbWRsZENrN1hISmNibHgwSUNBZ0lGeDBhV1lvZEdGeVoyVjBMbDlmYjJKelpYSjJaWEp6WDE4dWFXNWtaWGhQWmloMGFHbHpLVDQ5TUNBbUppQWhkR2hwY3k1aFkyTmxjSFJzYVhOMElIeDhJSFJvYVhNdVlXTmpaWEIwYkdsemRDNXBibVJsZUU5bUtGd2ljSEpsZG1WdWRFVjRkR1Z1YzJsdmJuTmNJaWsrUFRBcElIdGNjbHh1WEhRZ0lDQWdJQ0FnSUZ4MGRtRnlJR05vWVc1blpTQTlJSHR2WW1wbFkzUTZkR0Z5WjJWMExIUjVjR1U2WENKd2NtVjJaVzUwUlhoMFpXNXphVzl1YzF3aWZTeGNjbHh1WEhSY2RGeDBYSFJjZEhOMFlYSjBJRDBnZEdocGN5NWphR0Z1WjJWelpYUXViR1Z1WjNSb0lEMDlQU0F3TEZ4eVhHNWNkRngwWEhSY2RGeDBaR1ZzYVhabGNpQTlJSFJvYVhNdVpHVnNhWFpsY2lncE8xeHlYRzVjZENBZ0lDQWdJQ0FnWEhSMGFHbHpMbU5vWVc1blpYTmxkQzV3ZFhOb0tHTm9ZVzVuWlNrN1hISmNibHgwSUNBZ0lDQWdJQ0JjZEdsbUtITjBZWEowS1NCN1hISmNibHgwSUNBZ0lDQWdJQ0JjZEZ4MFpHVnNhWFpsY2lobVlXeHpaU3dvZEhsd1pXOW1LR1JsYkdsMlpYSXVaR1ZzWVhrcFBUMDlYQ0p1ZFcxaVpYSmNJaUEvSUdSbGJHbDJaWEl1WkdWc1lYa2dPaUF4TUNrcE8xeHlYRzVjZENBZ0lDQWdJQ0FnWEhSOVhISmNibHgwSUNBZ0lGeDBmVnh5WEc1Y2RDQWdJQ0JjZEhKbGRIVnliaUIwY25WbE8xeHlYRzVjZENBZ0lDQjlPMXh5WEc1Y2RDQWdJQ0JQWW1wbFkzUXViMkp6WlhKMlpTQTlJR1oxYm1OMGFXOXVLRzlpYW1WamRDeGpZV3hzWW1GamF5eGhZMk5sY0hSc2FYTjBMSEJoZFhOaFlteGxMSEJoZFhObExHUmxiR0Y1S1NCN1hISmNibHgwSUNBZ0lGeDBjbVYwZFhKdUlHNWxkeUJQWW5ObGNuWmxjaWh2WW1wbFkzUXNZMkZzYkdKaFkyc3NZV05qWlhCMGJHbHpkQ3h3WVhWellXSnNaU3h3WVhWelpTeGtaV3hoZVNrN1hISmNibHgwSUNBZ0lIMDdYSEpjYmx4MElDQWdJRTlpYW1WamRDNTFibTlpYzJWeWRtVWdQU0JtZFc1amRHbHZiaWh2WW1wbFkzUXNZMkZzYkdKaFkyc3BJSHRjY2x4dVhIUWdJQ0FnWEhScFppaHZZbXBsWTNRdVgxOXZZbk5sY25abGNrTmhiR3hpWVdOcmMxOWZLU0I3WEhKY2JseDBJQ0FnSUZ4MFhIUnBaaWdoWTJGc2JHSmhZMnNwSUh0Y2NseHVYSFFnSUNBZ1hIUmNkRngwYjJKcVpXTjBMbDlmYjJKelpYSjJaWEpEWVd4c1ltRmphM05mWHk1emNHeHBZMlVvTUN4dlltcGxZM1F1WDE5dlluTmxjblpsY2tOaGJHeGlZV05yYzE5ZkxteGxibWQwYUNrN1hISmNibHgwSUNBZ0lGeDBYSFJjZEc5aWFtVmpkQzVmWDI5aWMyVnlkbVZ5YzE5ZkxuTndiR2xqWlNnd0xHOWlhbVZqZEM1ZlgyOWljMlZ5ZG1WeWMxOWZMbXhsYm1kMGFDazdYSEpjYmx4MElDQWdJRngwWEhSY2RISmxkSFZ5Ymp0Y2NseHVYSFFnSUNBZ1hIUmNkSDFjY2x4dVhIUWdJQ0FnWEhSY2RHOWlhbVZqZEM1ZlgyOWljMlZ5ZG1WeVEyRnNiR0poWTJ0elgxOHVabTl5UldGamFDaG1kVzVqZEdsdmJpaHZZbk5sY25abGNtTmhiR3hpWVdOckxHa3BJSHRjY2x4dVhIUWdJQ0FnWEhSY2RGeDBhV1lvWTJGc2JHSmhZMnM5UFQxdlluTmxjblpsY21OaGJHeGlZV05yS1NCN1hISmNibHgwSUNBZ0lGeDBYSFJjZEZ4MGIySnFaV04wTGw5ZmIySnpaWEoyWlhKRFlXeHNZbUZqYTNOZlh5NXpjR3hwWTJVb2FTd3hLVHRjY2x4dVhIUWdJQ0FnWEhSY2RGeDBYSFJrWld4bGRHVWdiMkpxWldOMExsOWZiMkp6WlhKMlpYSnpYMTliYVYwdVkyRnNiR0poWTJzN1hISmNibHgwSUNBZ0lGeDBYSFJjZEZ4MGIySnFaV04wTGw5ZmIySnpaWEoyWlhKelgxOHVjM0JzYVdObEtHa3NNU2s3WEhKY2JseDBJQ0FnSUZ4MFhIUmNkSDFjY2x4dVhIUWdJQ0FnWEhSY2RIMHBPMXh5WEc1Y2RDQWdJQ0JjZEgxY2NseHVYSFFnSUNBZ2ZUdGNjbHh1WEhRZ0lDQWdRWEp5WVhrdWIySnpaWEoyWlNBOUlHWjFibU4wYVc5dUtHOWlhbVZqZEN4allXeHNZbUZqYXl4aFkyTmxjSFJzYVhOMExIQmhkWE5oWW14bExIQmhkWE5sTEdSbGJHRjVLU0I3WEhKY2JseDBJQ0FnSUZ4MGFXWW9JU2h2WW1wbFkzUWdhVzV6ZEdGdVkyVnZaaUJCY25KaGVTa2dKaVlnSVVGeWNtRjVMbWx6UVhKeVlYa29iMkpxWldOMEtTa2dlMXh5WEc1Y2RDQWdJQ0JjZEZ4MGRHaHliM2NnYm1WM0lGUjVjR1ZGY25KdmNpaGNJa1pwY25OMElHRnlaM1Z0Wlc1MElIUnZJRUZ5Y21GNUxtOWljMlZ5ZG1WeUlHbHpJRzV2ZENCaGJpQkJjbkpoZVZ3aUtUdGNjbHh1WEhRZ0lDQWdYSFI5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRngwWVdOalpYQjBiR2x6ZENBOUlHRmpZMlZ3ZEd4cGMzUWdmSHdnVzF3aVlXUmtYQ0lzSUZ3aWRYQmtZWFJsWENJc0lGd2laR1ZzWlhSbFhDSXNJRndpYzNCc2FXTmxYQ0pkTzF4eVhHNWNkQ0FnSUNCY2RIWmhjaUJoY25KaGVYQnliM2g1SUQwZ2JtVjNJRkJ5YjNoNUtHOWlhbVZqZEN4N1oyVjBPaUJtZFc1amRHbHZiaWgwWVhKblpYUXNjSEp2Y0dWeWRIa3BJSHRjY2x4dVhIUWdJQ0FnWEhSY2RHbG1LSEJ5YjNCbGNuUjVQVDA5WENKMWJtOWljMlZ5ZG1WY0lpa2dlMXh5WEc1Y2RGeDBJQ0FnSUZ4MFhIUnlaWFIxY200Z1puVnVZM1JwYjI0b1kyRnNiR0poWTJzcElIdGNjbHh1WEhSY2RDQWdJQ0JjZEZ4MFhIUnBaaWhqWVd4c1ltRmpheWtnZTF4eVhHNWNkRngwSUNBZ0lGeDBYSFJjZEZ4MGNtVjBkWEp1SUU5aWFtVmpkQzUxYm05aWMyVnlkbVVvZEdGeVoyVjBMR05oYkd4aVlXTnJLVHRjY2x4dVhIUmNkQ0FnSUNCY2RGeDBYSFI5WEhKY2JseDBYSFFnSUNBZ1hIUmNkRngwY21WMGRYSnVJSFJoY21kbGRDNTFibTlpYzJWeWRtVW9LVHRjY2x4dVhIUmNkQ0FnSUNCY2RGeDBmVHRjY2x4dVhIUmNkQ0FnSUNCY2RIMWNjbHh1WEhRZ0lDQWdYSFJjZEdsbUtIQnliM0JsY25SNVBUMDlYQ0p6Y0d4cFkyVmNJaWtnZTF4eVhHNWNkQ0FnSUNCY2RGeDBYSFJ5WlhSMWNtNGdablZ1WTNScGIyNG9jM1JoY25Rc1pXNWtLU0I3WEhKY2JseDBJQ0FnSUZ4MFhIUmNkRngwYVdZb2RIbHdaVzltS0hOMFlYSjBLU0U5UFZ3aWJuVnRZbVZ5WENJZ2ZId2dkSGx3Wlc5bUtHVnVaQ2toUFQxY0ltNTFiV0psY2x3aUtTQjdYSEpjYmx4MElDQWdJRngwWEhSY2RGeDBYSFIwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0Z3aVJtbHljM1FnZEhkdklHRnlaM1Z0Wlc1MGN5QjBieUJCY25KaGVTQnpjR3hwWTJVZ1lYSmxJRzV2ZENCdWRXMWlaWElzSUc1MWJXSmxjbHdpS1R0Y2NseHVYSFFnSUNBZ1hIUmNkRngwWEhSOVhISmNibHgwSUNBZ0lGeDBJQ0FnSUZ4MFhIUjJZWElnY21WdGIzWmxaQ0E5SUhSb2FYTXVjMnhwWTJVb2MzUmhjblFzYzNSaGNuUXJaVzVrS1N4Y2NseHVYSFFnSUNBZ1hIUWdJQ0FnWEhSY2RGeDBZV1JrWldSRGIzVnVkQ0E5SUNoaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQ0Z01TQS9JR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ3RNaUE2SURBcExGeHlYRzVjZENBZ0lDQmNkQ0FnSUNCY2RGeDBYSFJqYUdGdVoyVWdQU0FnZTI5aWFtVmpkRHB2WW1wbFkzUXNkSGx3WlRwY0luTndiR2xqWlZ3aUxHbHVaR1Y0T25OMFlYSjBMSEpsYlc5MlpXUTZjbVZ0YjNabFpDeGhaR1JsWkVOdmRXNTBPbUZrWkdWa1EyOTFiblI5TzF4eVhHNWNkQ0FnSUNCY2RDQWdJQ0JjZEZ4MGRHRnlaMlYwTG5Od2JHbGpaUzVoY0hCc2VTaDBZWEpuWlhRc1lYSm5kVzFsYm5SektUdGNjbHh1WEhRZ0lDQWdYSFFnSUNBZ1hIUmNkR2xtS0dGalkyVndkR3hwYzNRdWFXNWtaWGhQWmloY0luTndiR2xqWlZ3aUtUNDlNQ2tnZTF4eVhHNWNkQ0FnSUNCY2RDQWdJQ0JjZEZ4MFhIUjJZWElnYzNSaGNuUWdQU0J3Y205NGVTNWZYMjlpYzJWeWRtVnlYMTh1WTJoaGJtZGxjMlYwTG14bGJtZDBhQ0E5UFQwZ01DeGNjbHh1WEhRZ0lDQWdYSFFnSUNBZ0lDQWdJRngwWEhSY2RHUmxiR2wyWlhJZ1BTQndjbTk0ZVM1ZlgyOWljMlZ5ZG1WeVgxOHVaR1ZzYVhabGNpZ3BPMXh5WEc1Y2RDQWdJQ0JjZENBZ0lDQmNkRngwWEhSd2NtOTRlUzVmWDI5aWMyVnlkbVZ5WDE4dVkyaGhibWRsYzJWMExuQjFjMmdvWTJoaGJtZGxLVHRjY2x4dVhIUWdJQ0FnWEhRZ0lDQWdYSFJjZEZ4MGFXWW9jM1JoY25RcElIdGNjbHh1WEhRZ0lDQWdYSFJjZENBZ0lDQWdJQ0FnWEhSY2RHUmxiR2wyWlhJb1ptRnNjMlVzS0hSNWNHVnZaaWhrWld4cGRtVnlMbVJsYkdGNUtUMDlQVndpYm5WdFltVnlYQ0lnUHlCa1pXeHBkbVZ5TG1SbGJHRjVJRG9nTVRBcEtUdGNjbHh1WEhRZ0lDQWdYSFJjZENBZ0lDQWdJQ0FnWEhSOVhISmNibHgwSUNBZ0lGeDBJQ0FnSUZ4MFhIUjlYSEpjYmx4MElDQWdJRngwSUNBZ0lGeDBmVnh5WEc1Y2RDQWdJQ0JjZEZ4MGZWeHlYRzVjZENBZ0lDQmNkRngwYVdZb2NISnZjR1Z5ZEhrOVBUMWNJbkIxYzJoY0lpa2dlMXh5WEc1Y2RDQWdJQ0JjZEZ4MFhIUWdjbVYwZFhKdUlHWjFibU4wYVc5dUtHbDBaVzBwSUh0Y2NseHVYSFFnSUNBZ1hIUmNkQ0FnSUNCY2RISmxkSFZ5YmlCMGFHbHpMbk53YkdsalpTaDBhR2x6TG14bGJtZDBhQ3d3TEdsMFpXMHBPMXh5WEc1Y2RDQWdJQ0JjZEZ4MElDQWdJSDFjY2x4dVhIUWdJQ0FnWEhSY2RIMWNjbHh1WEhRZ0lDQWdYSFJjZEdsbUtIQnliM0JsY25SNVBUMDlYQ0p3YjNCY0lpa2dlMXh5WEc1Y2RDQWdJQ0JjZEZ4MFhIUWdjbVYwZFhKdUlHWjFibU4wYVc5dUtDa2dlMXh5WEc1Y2RDQWdJQ0JjZEZ4MElDQWdJRngwY21WMGRYSnVJSFJvYVhNdWMzQnNhV05sS0hSb2FYTXViR1Z1WjNSb0xURXNNU2s3WEhKY2JseDBJQ0FnSUZ4MFhIUWdJQ0FnZlZ4eVhHNWNkQ0FnSUNCY2RGeDBmVnh5WEc1Y2RDQWdJQ0JjZEZ4MGFXWW9jSEp2Y0dWeWRIazlQVDFjSW5WdWMyaHBablJjSWlrZ2UxeHlYRzVjZENBZ0lDQmNkRngwWEhRZ2NtVjBkWEp1SUdaMWJtTjBhVzl1S0dsMFpXMHBJSHRjY2x4dUlDQWdJRngwWEhRZ0lDQWdYSFJjZEhKbGRIVnliaUIwYUdsekxuTndiR2xqWlNnd0xEQXNhWFJsYlNrN1hISmNiaUFnSUNCY2RGeDBJQ0FnSUZ4MGZWeHlYRzVjZENBZ0lDQmNkRngwZlZ4eVhHNWNkQ0FnSUNCY2RGeDBhV1lvY0hKdmNHVnlkSGs5UFQxY0luTm9hV1owWENJcElIdGNjbHh1WEhRZ0lDQWdYSFJjZEZ4MGNtVjBkWEp1SUdaMWJtTjBhVzl1S0NrZ2UxeHlYRzVjZENBZ0lDQmNkQ0FnSUNCY2RGeDBjbVYwZFhKdUlIUm9hWE11YzNCc2FXTmxLREFzTVNrN1hISmNibHgwSUNBZ0lGeDBJQ0FnSUZ4MGZWeHlYRzVjZENBZ0lDQmNkRngwZlZ4eVhHNWNkQ0FnSUNCY2RGeDBjbVYwZFhKdUlIUmhjbWRsZEZ0d2NtOXdaWEowZVYwN1hISmNibHgwSUNBZ0lGeDBmWDBwTzF4eVhHNWNkQ0FnSUNCY2RIWmhjaUJ3Y205NGVTQTlJRTlpYW1WamRDNXZZbk5sY25abEtHRnljbUY1Y0hKdmVIa3NablZ1WTNScGIyNG9ZMmhoYm1kbGMyVjBLU0I3SUZ4eVhHNWNkQ0FnSUNCY2RGeDBkbUZ5SUdOb1lXNW5aWE1nUFNCamFHRnVaMlZ6WlhRdVptbHNkR1Z5S0daMWJtTjBhVzl1S0dOb1lXNW5aU2tnZXlCeVpYUjFjbTRnWTJoaGJtZGxMbTVoYldVaFBUMWNJbXhsYm1kMGFGd2lJQ1ltSUdOb1lXNW5aUzV1WVcxbElUMDlYQ0poWkdSY0lpQW1KaUFvSVdGalkyVndkR3hwYzNRZ2ZId2dZV05qWlhCMGJHbHpkQzVwYm1SbGVFOW1LR05vWVc1blpTNTBlWEJsS1Q0OU1DazdJSDBwTzF4eVhHNWNkQ0FnSUNCY2RGeDBhV1lvWTJoaGJtZGxjeTVzWlc1bmRHZytNQ2tnZTF4eVhHNWNkQ0FnSUNCY2RGeDBYSFJqWVd4c1ltRmpheWhqYUdGdVoyVnpLVHRjY2x4dVhIUWdJQ0FnWEhSY2RIMWNjbHh1WEhRZ0lDQWdYSFI5TEdGalkyVndkR3hwYzNRc2NHRjFjMkZpYkdVc2NHRjFjMlVzWkdWc1lYa3BPMXh5WEc1Y2RDQWdJQ0JjZEhKbGRIVnliaUJ3Y205NGVUdGNjbHh1WEhRZ0lDQWdmVHRjY2x4dVhIUWdJQ0FnUVhKeVlYa3VkVzV2WW5ObGNuWmxJRDBnWm5WdVkzUnBiMjRvYjJKcVpXTjBMR05oYkd4aVlXTnJLU0I3WEhKY2JseDBYSFFnSUhKbGRIVnliaUJ2WW1wbFkzUXVkVzV2WW5ObGNuWmxLR05oYkd4aVlXTnJLVHRjY2x4dVhIUWdJQ0FnZlZ4eVhHNWNkSDFjY2x4dVhIUlBZbXBsWTNRdVpHVmxjRTlpYzJWeWRtVWdQU0JtZFc1amRHbHZiaWh2WW1wbFkzUXNZMkZzYkdKaFkyc3NjR0Z5ZEhNcElIdGNjbHh1WEhKY2JseDBYSFJ3WVhKMGN5QTlJQ2h3WVhKMGN5QS9JSEJoY25SeklEb2dXMTBwTzF4eVhHNWNjbHh1WEhSY2RIWmhjaUIwYjFSNWNHVk9ZVzFsSUQwZ1puVnVZM1JwYjI0b2IySnFLU0I3WEhKY2JseDBYSFJjZEhKbGRIVnliaUFvZTMwcExuUnZVM1J5YVc1bkxtTmhiR3dvYjJKcUtTNXRZWFJqYUNndlhGeHpLRnRoTFhwQkxWcGRLeWt2S1ZzeFhTNTBiMHh2ZDJWeVEyRnpaU2dwWEhKY2JseDBYSFI5WEhKY2JseHlYRzVjZEZ4MFpuVnVZM1JwYjI0Z2NtVnZZbk5sY25abEtIWmhiSFZsTENCd1lYSjBjeWtnZTF4eVhHNWNkRngwWEhSMllYSWdhMlY1Y3lBOUlFOWlhbVZqZEM1clpYbHpLSFpoYkhWbEtUdGNjbHh1WEhSY2RGeDBhMlY1Y3k1bWIzSkZZV05vS0daMWJtTjBhVzl1S0d0bGVTa2dlMXh5WEc1Y2RGeDBYSFJjZEdsbUtDaDBiMVI1Y0dWT1lXMWxLSFpoYkhWbFcydGxlVjBwSUQwOVBTQW5iMkpxWldOMEp5QjhmQ0IwYjFSNWNHVk9ZVzFsS0haaGJIVmxXMnRsZVYwcElEMDlQU0FuWVhKeVlYa25LU0FtSmlBaGRtRnNkV1ZiYTJWNVhTNW9ZWE5QZDI1UWNtOXdaWEowZVNnblgxOXZZbk5sY25abGNuTmZYeWNwS1NCN1hISmNibHgwWEhSY2RGeDBYSFIyWVhJZ2JtVjNjR0Z5ZEhNZ1BTQndZWEowY3k1emJHbGpaU2d3S1R0Y2NseHVYSFJjZEZ4MFhIUmNkRzVsZDNCaGNuUnpMbkIxYzJnb2EyVjVLVHRjY2x4dVhIUmNkRngwWEhSY2RIWmhiSFZsVzJ0bGVWMGdQU0JQWW1wbFkzUXVaR1ZsY0U5aWMyVnlkbVVvZG1Gc2RXVmJhMlY1WFN4allXeHNZbUZqYXl4dVpYZHdZWEowY3lrN1hISmNibHgwWEhSY2RGeDBmVnh5WEc1Y2RGeDBYSFI5S1R0Y2NseHVYSFJjZEgxY2NseHVYSEpjYmx4MFhIUnlaVzlpYzJWeWRtVW9iMkpxWldOMExDQndZWEowY3lrN1hISmNibHh5WEc1Y2RGeDBkbUZ5SUc5aWMyVnlkbVZrSUQwZ1QySnFaV04wTG05aWMyVnlkbVVvYjJKcVpXTjBMR1oxYm1OMGFXOXVLR05vWVc1blpYTmxkQ2tnZTF4eVhHNWNkRngwWEhSMllYSWdZMmhoYm1kbGN5QTlJRnRkTzF4eVhHNWNkRngwWEhSbWRXNWpkR2x2YmlCeVpXTjFjbk5sS0c1aGJXVXNjbTl2ZEU5aWFtVmpkQ3h2YkdSUFltcGxZM1FzYm1WM1QySnFaV04wTEhCaGRHZ3BJSHRjY2x4dVhIUmNkRngwWEhScFppaHVaWGRQWW1wbFkzUWdhVzV6ZEdGdVkyVnZaaUJQWW1wbFkzUXBJSHRjY2x4dVhIUmNkRngwWEhSY2RIWmhjaUJ1WlhkclpYbHpJRDBnVDJKcVpXTjBMbXRsZVhNb2JtVjNUMkpxWldOMEtUdGNjbHh1WEhSY2RGeDBYSFJjZEc1bGQydGxlWE11Wm05eVJXRmphQ2htZFc1amRHbHZiaWhyWlhrcElIdGNjbHh1WEhSY2RGeDBYSFJjZEZ4MGFXWW9JVzlzWkU5aWFtVmpkQ0I4ZkNBb2IyeGtUMkpxWldOMFcydGxlVjBoUFQxdVpYZFBZbXBsWTNSYmEyVjVYU2twSUh0Y2NseHVYSFJjZEZ4MFhIUmNkRngwWEhSMllYSWdiMnhrZG1Gc2RXVWdQU0FvYjJ4a1QySnFaV04wSUNZbUlHOXNaRTlpYW1WamRGdHJaWGxkSVQwOWRXNWtaV1pwYm1Wa0lEOGdiMnhrVDJKcVpXTjBXMnRsZVYwZ09pQjFibVJsWm1sdVpXUXBMRnh5WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWTJoaGJtZGxJRDBnS0c5c1pIWmhiSFZsUFQwOWRXNWtaV1pwYm1Wa0lEOGdYQ0poWkdSY0lpQTZJRndpZFhCa1lYUmxYQ0lwTEZ4eVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGEyVjVjR0YwYUNBOUlIQmhkR2dnS3lCY0lpNWNJaUFySUd0bGVUdGNjbHh1WEhKY2JseDBYSFJjZEZ4MFhIUmNkRngwWTJoaGJtZGxjeTV3ZFhOb0tIdHVZVzFsT201aGJXVXNiMkpxWldOME9uSnZiM1JQWW1wbFkzUXNkSGx3WlRwamFHRnVaMlVzYjJ4a1ZtRnNkV1U2YjJ4a2RtRnNkV1VzYm1WM1ZtRnNkV1U2Ym1WM1QySnFaV04wVzJ0bGVWMHNhMlY1Y0dGMGFEcHJaWGx3WVhSb2ZTazdYSEpjYmx4MFhIUmNkRngwWEhSY2RGeDBjbVZqZFhKelpTaHVZVzFsTEhKdmIzUlBZbXBsWTNRc2IyeGtkbUZzZFdVc2JtVjNUMkpxWldOMFcydGxlVjBzYTJWNWNHRjBhQ2s3WEhKY2JseDBYSFJjZEZ4MFhIUmNkSDFjY2x4dVhIUmNkRngwWEhSY2RIMHBPMXh5WEc1Y2RGeDBYSFJjZEgwZ1pXeHpaU0JwWmlodmJHUlBZbXBsWTNRZ2FXNXpkR0Z1WTJWdlppQlBZbXBsWTNRcElIdGNjbHh1WEhSY2RGeDBYSFJjZEhaaGNpQnZiR1JyWlhseklEMGdUMkpxWldOMExtdGxlWE1vYjJ4a1QySnFaV04wS1R0Y2NseHVYSFJjZEZ4MFhIUmNkRzlzWkd0bGVYTXVabTl5UldGamFDaG1kVzVqZEdsdmJpaHJaWGtwSUh0Y2NseHVYSFJjZEZ4MFhIUmNkRngwZG1GeUlHTm9ZVzVuWlNBOUlDaHVaWGRQWW1wbFkzUTlQVDF1ZFd4c0lEOGdYQ0oxY0dSaGRHVmNJaUE2SUZ3aVpHVnNaWFJsWENJcExGeHlYRzVjZEZ4MFhIUmNkRngwWEhSY2RHdGxlWEJoZEdnZ1BTQndZWFJvSUNzZ1hDSXVYQ0lnS3lCclpYazdYSEpjYmx4MFhIUmNkRngwWEhSY2RGeDBYSEpjYmx4MFhIUmNkRngwWEhSY2RHTm9ZVzVuWlhNdWNIVnphQ2g3Ym1GdFpUcHVZVzFsTEc5aWFtVmpkRHB5YjI5MFQySnFaV04wTEhSNWNHVTZZMmhoYm1kbExHOXNaRlpoYkhWbE9tOXNaRTlpYW1WamRGdHJaWGxkTEc1bGQxWmhiSFZsT201bGQwOWlhbVZqZEN4clpYbHdZWFJvT210bGVYQmhkR2g5S1R0Y2NseHVYSFJjZEZ4MFhIUmNkRngwY21WamRYSnpaU2h1WVcxbExISnZiM1JQWW1wbFkzUXNiMnhrVDJKcVpXTjBXMnRsZVYwc2RXNWtaV1pwYm1Wa0xHdGxlWEJoZEdncE8xeHlYRzVjZEZ4MFhIUmNkRngwZlNrN1hISmNibHgwWEhSY2RGeDBmVnh5WEc1Y2RGeDBYSFI5WEhKY2JseDBYSFJjZEdOb1lXNW5aWE5sZEM1bWIzSkZZV05vS0daMWJtTjBhVzl1S0dOb1lXNW5aU2tnZTF4eVhHNWNkRngwWEhSY2RIWmhjaUJyWlhsd1lYUm9JRDBnS0hCaGNuUnpMbXhsYm1kMGFENHdJRDhnY0dGeWRITXVhbTlwYmloY0lpNWNJaWtnS3lCY0lpNWNJaUE2SUZ3aVhDSXBJQ3NnWTJoaGJtZGxMbTVoYldVN1hISmNibHh5WEc1Y2RGeDBYSFJjZEdsbUlDaGphR0Z1WjJVdWRIbHdaU0E5UFQwZ1hDSjFjR1JoZEdWY0lpQjhmQ0JqYUdGdVoyVXVkSGx3WlNBOVBUMGdYQ0poWkdSY0lpa2dleUJjY2x4dVhIUmNkRngwWEhSY2RISmxiMkp6WlhKMlpTaGphR0Z1WjJVdWIySnFaV04wTENCd1lYSjBjeWs3WEhKY2JseDBYSFJjZEZ4MGZWeHlYRzVjY2x4dVhIUmNkRngwWEhSamFHRnVaMlZ6TG5CMWMyZ29lMjVoYldVNlkyaGhibWRsTG01aGJXVXNiMkpxWldOME9tTm9ZVzVuWlM1dlltcGxZM1FzZEhsd1pUcGphR0Z1WjJVdWRIbHdaU3h2YkdSV1lXeDFaVHBqYUdGdVoyVXViMnhrVm1Gc2RXVXNibVYzVm1Gc2RXVTZZMmhoYm1kbExtOWlhbVZqZEZ0amFHRnVaMlV1Ym1GdFpWMHNhMlY1Y0dGMGFEcHJaWGx3WVhSb2ZTazdYSEpjYmx4MFhIUmNkRngwY21WamRYSnpaU2hqYUdGdVoyVXVibUZ0WlN4amFHRnVaMlV1YjJKcVpXTjBMR05vWVc1blpTNXZiR1JXWVd4MVpTeGphR0Z1WjJVdWIySnFaV04wVzJOb1lXNW5aUzV1WVcxbFhTeHJaWGx3WVhSb0tUdGNjbHh1WEhSY2RGeDBmU2s3WEhKY2JseDBYSFJjZEdOaGJHeGlZV05yS0dOb1lXNW5aWE1wTzF4eVhHNWNkRngwZlNrN1hISmNibHgwWEhSeVpYUjFjbTRnYjJKelpYSjJaV1E3WEhKY2JseDBmVHRjY2x4dWZTa29LVHRjY2x4dVhHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDNCeWIzaDVMVzlpYzJWeWRtVXZhVzVrWlhndWFuTmNiaTh2SUcxdlpIVnNaU0JwWkNBOUlERXhPVnh1THk4Z2JXOWtkV3hsSUdOb2RXNXJjeUE5SURBZ055SXNJaThxS2x4eVhHNHFJRU52Y0hseWFXZG9kQ0F5TURFMklGQlVJRWx1YjNaaHc2ZkRvMjhnWlNCVGFYTjBaVzFoY3lCVFFWeHlYRzRxSUVOdmNIbHlhV2RvZENBeU1ERTJJRWxPUlZORExVbEVYSEpjYmlvZ1EyOXdlWEpwWjJoMElESXdNVFlnVVZWUFFrbFRJRTVGVkZkUFVrdFRJRk5NWEhKY2Jpb2dRMjl3ZVhKcFoyaDBJREl3TVRZZ1JsSkJWVTVJVDBaRlVpMUhSVk5GVEV4VFEwaEJSbFFnV2xWU0lFWlBSVkpFUlZKVlRrY2dSRVZTSUVGT1IwVlhRVTVFVkVWT0lFWlBVbE5EU0ZWT1J5QkZMbFpjY2x4dUtpQkRiM0I1Y21sbmFIUWdNakF4TmlCUFVrRk9SMFVnVTBGY2NseHVLaUJEYjNCNWNtbG5hSFFnTWpBeE5pQkVaWFYwYzJOb1pTQlVaV3hsYTI5dElFRkhYSEpjYmlvZ1EyOXdlWEpwWjJoMElESXdNVFlnUVhCcGVtVmxYSEpjYmlvZ1EyOXdlWEpwWjJoMElESXdNVFlnVkVWRFNFNUpVME5JUlNCVlRrbFdSVkpUU1ZSQlZDQkNSVkpNU1U1Y2NseHVLbHh5WEc0cUlFeHBZMlZ1YzJWa0lIVnVaR1Z5SUhSb1pTQkJjR0ZqYUdVZ1RHbGpaVzV6WlN3Z1ZtVnljMmx2YmlBeUxqQWdLSFJvWlNCY0lreHBZMlZ1YzJWY0lpazdYSEpjYmlvZ2VXOTFJRzFoZVNCdWIzUWdkWE5sSUhSb2FYTWdabWxzWlNCbGVHTmxjSFFnYVc0Z1kyOXRjR3hwWVc1alpTQjNhWFJvSUhSb1pTQk1hV05sYm5ObExseHlYRzRxSUZsdmRTQnRZWGtnYjJKMFlXbHVJR0VnWTI5d2VTQnZaaUIwYUdVZ1RHbGpaVzV6WlNCaGRGeHlYRzRxWEhKY2Jpb2dJQ0JvZEhSd09pOHZkM2QzTG1Gd1lXTm9aUzV2Y21jdmJHbGpaVzV6WlhNdlRFbERSVTVUUlMweUxqQmNjbHh1S2x4eVhHNHFJRlZ1YkdWemN5QnlaWEYxYVhKbFpDQmllU0JoY0hCc2FXTmhZbXhsSUd4aGR5QnZjaUJoWjNKbFpXUWdkRzhnYVc0Z2QzSnBkR2x1Wnl3Z2MyOW1kSGRoY21WY2NseHVLaUJrYVhOMGNtbGlkWFJsWkNCMWJtUmxjaUIwYUdVZ1RHbGpaVzV6WlNCcGN5QmthWE4wY21saWRYUmxaQ0J2YmlCaGJpQmNJa0ZUSUVsVFhDSWdRa0ZUU1ZNc1hISmNiaW9nVjBsVVNFOVZWQ0JYUVZKU1FVNVVTVVZUSUU5U0lFTlBUa1JKVkVsUFRsTWdUMFlnUVU1WklFdEpUa1FzSUdWcGRHaGxjaUJsZUhCeVpYTnpJRzl5SUdsdGNHeHBaV1F1WEhKY2Jpb2dVMlZsSUhSb1pTQk1hV05sYm5ObElHWnZjaUIwYUdVZ2MzQmxZMmxtYVdNZ2JHRnVaM1ZoWjJVZ1oyOTJaWEp1YVc1bklIQmxjbTFwYzNOcGIyNXpJR0Z1WkZ4eVhHNHFJR3hwYldsMFlYUnBiMjV6SUhWdVpHVnlJSFJvWlNCTWFXTmxibk5sTGx4eVhHNHFLaTljY2x4dVhISmNibWx0Y0c5eWRDQjdJR1JsWlhCRGJHOXVaU0I5SUdaeWIyMGdKeTR1TDNWMGFXeHpMM1YwYVd4ekp6dGNjbHh1YVcxd2IzSjBJRVJoZEdGUFltcGxZM1FnWm5KdmJTQW5MaTlFWVhSaFQySnFaV04wSnp0Y2NseHVYSEpjYm14bGRDQkdhV3gwWlhKVWVYQmxJRDBnZTBGT1dUb2dKMkZ1ZVNjc0lGTlVRVkpVT2lBbmMzUmhjblFuTENCRldFRkRWRG9nSjJWNFlXTjBKMzA3WEhKY2JseHlYRzR2S2lwY2NseHVJQ29nVkdobElHTnNZWE56SUhKbGRIVnlibVZrSUdaeWIyMGdkR2hsSUZONWJtTm9aWElnYzNWaWMyTnlhV0psSUdOaGJHd3VYSEpjYmlBcUlGUnZJR0psSUhWelpXUWdZWE1nWVc0Z2IySnpaWEoyWVhScGIyNGdjRzlwYm5RZ1puSnZiU0JoSUVSaGRHRlBZbXBsWTNSU1pYQnZjblJsY2lCamFHRnVaMlV1WEhKY2JpQXFMMXh5WEc1amJHRnpjeUJFWVhSaFQySnFaV04wVDJKelpYSjJaWElnWlhoMFpXNWtjeUJFWVhSaFQySnFaV04wSUM4cUlHbHRjR3hsYldWdWRITWdVM2x1WTFOMFlYUjFjeUFxTHlCN1hISmNiaUFnTHlvZ2NISnBkbUYwWlZ4eVhHNGdJRjlqYUdGdVoyVk1hWE4wWlc1bGNqb2dUWE5uVEdsemRHVnVaWEpjY2x4dVhISmNiaUFnTFMwdExXVjJaVzUwSUdoaGJtUnNaWEp6TFMwdExWeHlYRzRnSUY5bWFXeDBaWEp6T2lCN1BHWnBiSFJsY2o0NklIdDBlWEJsT2lBOGMzUmhjblFzSUdWNFlXTjBQaXdnWTJGc2JHSmhZMnM2SUR4bWRXNWpkR2x2Ymo1OUlIMWNjbHh1SUNBcUwxeHlYRzVjY2x4dUlDQXZLaXBjY2x4dUlDQWdLaUJBYVdkdWIzSmxYSEpjYmlBZ0lDb2dVMmh2ZFd4a0lHNXZkQ0JpWlNCMWMyVmtJR1JwY21WamRHeDVJR0o1SUVoNWNHVnlkR2xsY3k0Z1NYUW5jeUJqWVd4c1pXUWdZbmtnZEdobElGTjVibU5vWlhJdWMzVmljMk55YVdKbElHMWxkR2h2WkZ4eVhHNGdJQ0FxTDF4eVhHNWNjbHh1SUNBdkwxUlBSRTg2SUVadmNpQkdkWEowYUdWeUlGTjBkV1I1WEhKY2JpQWdZMjl1YzNSeWRXTjBiM0lvYVc1d2RYUXBJSHRjY2x4dUlDQWdJQzh2ZEc5a2J6b2dZMmhsWTJzZ2QyaDVYSEpjYmlBZ0lDQXZMMmx1Y0hWMExtbHVhWFJwWVd4RVlYUmhJRDBnYVc1d2RYUXVhVzVwZEdsaGJFUmhkR0V1WkdGMFlUdGNjbHh1WEhKY2JpQWdJQ0J6ZFhCbGNpaHBibkIxZENrN1hISmNibHh5WEc0Z0lDQWdiR1YwSUY5MGFHbHpJRDBnZEdocGN6dGNjbHh1WEhKY2JpQWdJQ0JmZEdocGN5NWZkbVZ5YzJsdmJpQTlJR2x1Y0hWMExuWmxjbk5wYjI0N1hISmNiaUFnSUNCZmRHaHBjeTVmWm1sc2RHVnljeUE5SUh0OU8xeHlYRzVjY2x4dUlDQWdJRjkwYUdsekxsOXplVzVqVDJKcUxtOWljMlZ5ZG1Vb0tHVjJaVzUwS1NBOVBpQjdYSEpjYmlBZ0lDQWdJRjkwYUdsekxsOXZia1pwYkhSbGNpaGxkbVZ1ZENrN1hISmNiaUFnSUNCOUtUdGNjbHh1WEhKY2JseHlYRzRnSUNBZ1gzUm9hWE11WDJGc2JHOWpZWFJsVEdsemRHVnVaWEp6S0NrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdktpcGNjbHh1SUNBZ0tpQlRlVzVqSUVSaGRHRWdUMkpxWldOMElFOWljMlZ5ZG1WeUlIZHBkR2dnYkdGemRDQjJaWEp6YVc5dUlHOW1JRVJoZEdFZ1QySnFaV04wSUZKbGNHOXlkR1Z5TGlCVmMyVm1kV3dnWm05eUlGSmxjM1Z0WlhOY2NseHVJQ0FnS2k5Y2NseHVJQ0J6ZVc1aktDa2dlMXh5WEc1Y2NseHVJQ0FnSUd4bGRDQmZkR2hwY3lBOUlIUm9hWE03WEhKY2JpQWdJQ0JqYjI1emIyeGxMbWx1Wm04b0oxdEVZWFJoVDJKcVpXTjBUMkp6WlhKMlpYSmZjM2x1WTEwZ2MzbHVZMmh5YjI1cGMybHVaeUFuS1R0Y2NseHVYSEpjYmlBZ0lDQmZkR2hwY3k1ZmMzbHVZMmhsY2k1eVpXRmtLRjkwYUdsekxsOXRaWFJoWkdGMFlTNTFjbXdwTG5Sb1pXNG9LSFpoYkhWbEtUMCtlMXh5WEc0Z0lDQWdJQ0JqYjI1emIyeGxMbWx1Wm04b0oxdEVZWFJoVDJKcVpXTjBUMkp6WlhKMlpYSmZjM2x1WTEwZ2RtRnNkV1VnZEc4Z2MzbHVZem9nSnl3Z2RtRnNkV1VwTzF4eVhHNWNjbHh1SUNBZ0lDQWdUMkpxWldOMExtRnpjMmxuYmloZmRHaHBjeTVrWVhSaExDQmtaV1Z3UTJ4dmJtVW9kbUZzZFdVdVpHRjBZU2twTzF4eVhHNWNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgzWmxjbk5wYjI0Z1BTQjJZV3gxWlM1MlpYSnphVzl1TzF4eVhHNWNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgyMWxkR0ZrWVhSaExteGhjM1JOYjJScFptbGxaQ0E5SUhaaGJIVmxMbXhoYzNSTmIyUnBabWxsWkR0Y2NseHVYSEpjYmlBZ0lDQWdJQzhxYVdZZ0tIWmhiSFZsTG5abGNuTnBiMjRnSVQwZ1gzUm9hWE11WDNabGNuTnBiMjRwSUh0Y2NseHVJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtbHVabThvSjF0RVlYUmhUMkpxWldOMFQySnpaWEoyWlhKZmMzbHVZMTBnZFhCa1lYUnBibWNnWlhocGMzUnBibWNnWkdGMFlUb2dKeXdnWDNSb2FYTXVaR0YwWVNrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUU5aWFtVmpkQzVoYzNOcFoyNG9YM1JvYVhNdVpHRjBZU0I4ZkNCN2ZTd2daR1ZsY0VOc2IyNWxLSFpoYkhWbExtUmhkR0VwS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWDNSb2FYTXVYMjFsZEdGa1lYUmhJRDBnWkdWbGNFTnNiMjVsS0haaGJIVmxLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdaR1ZzWlhSbElGOTBhR2x6TGw5dFpYUmhaR0YwWVM1a1lYUmhPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQmZkR2hwY3k1ZmRtVnljMmx2YmlBOUlIWmhiSFZsTG5abGNuTnBiMjQ3WEhKY2JseHlYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJR052Ym5OdmJHVXVhVzVtYnlnblcwUmhkR0ZQWW1wbFkzUlBZbk5sY25abGNsOXplVzVqWFNCbGVHbHpkR2x1WnlCa1lYUmhJR2x6SUhWd1pHRjBaV1E2SUNjc0lIWmhiSFZsS1R0Y2NseHVJQ0FnSUNBZ2ZTb3ZYSEpjYmx4eVhHNGdJQ0FnZlNrdVkyRjBZMmdvS0hKbFlYTnZiaWtnUFQ0Z2UxeHlYRzRnSUNBZ0lDQmpiMjV6YjJ4bExtbHVabThvSjF0RVlYUmhUMkpxWldOMFQySnpaWEoyWlhKZmMzbHVZMTBnYzNsdVl5Qm1ZV2xzWldRNklDY3NJSEpsWVhOdmJpazdYSEpjYmlBZ0lDQjlLVHRjY2x4dVhISmNiaUFnZlZ4eVhHNWNjbHh1SUNCZllXeHNiMk5oZEdWTWFYTjBaVzVsY25Nb0tTQjdYSEpjYmlBZ0lDQnpkWEJsY2k1ZllXeHNiMk5oZEdWTWFYTjBaVzVsY25Nb0tUdGNjbHh1SUNBZ0lHeGxkQ0JmZEdocGN5QTlJSFJvYVhNN1hISmNibHh5WEc0Z0lDQWdYM1JvYVhNdVgyTm9ZVzVuWlV4cGMzUmxibVZ5SUQwZ1gzUm9hWE11WDJKMWN5NWhaR1JNYVhOMFpXNWxjaWhmZEdocGN5NWZkWEpzSUNzZ0p5OWphR0Z1WjJWekp5d2dLRzF6WnlrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0JwWmlBb2JYTm5MblI1Y0dVZ1BUMDlJQ2QxY0dSaGRHVW5LU0I3WEhKY2JpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29KMFJoZEdGUFltcGxZM1JQWW5ObGNuWmxjaTBuSUNzZ1gzUm9hWE11WDNWeWJDQXJJQ2N0VWtOV09pQW5MQ0J0YzJjcE8xeHlYRzRnSUNBZ0lDQWdJRjkwYUdsekxsOWphR0Z1WjJWUFltcGxZM1FvWDNSb2FYTXVYM041Ym1OUFltb3NJRzF6WnlrN1hISmNiaUFnSUNBZ0lIMWNjbHh1SUNBZ0lIMHBPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdYM0psYkdWaGMyVk1hWE4wWlc1bGNuTW9LU0I3WEhKY2JpQWdJQ0J6ZFhCbGNpNWZjbVZzWldGelpVeHBjM1JsYm1WeWN5Z3BPMXh5WEc0Z0lDQWdiR1YwSUY5MGFHbHpJRDBnZEdocGN6dGNjbHh1WEhKY2JpQWdJQ0JmZEdocGN5NWZZMmhoYm1kbFRHbHpkR1Z1WlhJdWNtVnRiM1psS0NrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdktpcGNjbHh1SUNBZ0tpQlNaV3hsWVhObElHRnVaQ0JrWld4bGRHVWdiMkpxWldOMElHUmhkR0ZjY2x4dUlDQWdLaTljY2x4dUlDQmtaV3hsZEdVb0tTQjdYSEpjYmlBZ0lDQnNaWFFnWDNSb2FYTWdQU0IwYUdsek8xeHlYRzVjY2x4dUlDQWdJRjkwYUdsekxuVnVjM1ZpYzJOeWFXSmxLQ2s3WEhKY2JpQWdJQ0JmZEdocGN5NWZjbVZzWldGelpVeHBjM1JsYm1WeWN5Z3BPMXh5WEc0Z0lDQWdaR1ZzWlhSbElGOTBhR2x6TGw5emVXNWphR1Z5TGw5dlluTmxjblpsY25OYlgzUm9hWE11WDNWeWJGMDdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQXZLaXBjY2x4dUlDQWdLaUJTWld4bFlYTmxJR0Z1WkNCa1pXeGxkR1VnYjJKcVpXTjBJR1JoZEdGY2NseHVJQ0FnS2k5Y2NseHVJQ0IxYm5OMVluTmpjbWxpWlNncElIdGNjbHh1SUNBZ0lHeGxkQ0JmZEdocGN5QTlJSFJvYVhNN1hISmNibHh5WEc0Z0lDQWdMeTlHVEU5WExVOVZWRG9nZEdocGN5QnRaWE56WVdkbElIZHBiR3dnWW1VZ2MyVnVkQ0IwYnlCMGFHVWdjblZ1ZEdsdFpTQnBibk4wWVc1alpTQnZaaUJUZVc1amFHVnlUV0Z1WVdkbGNpQXRQaUJmYjI1TWIyTmhiRlZ1VTNWaWMyTnlhV0psWEhKY2JpQWdJQ0JzWlhRZ2RXNVRkV0p6WTNKcFltVk5jMmNnUFNCN1hISmNiaUFnSUNBZ0lIUjVjR1U2SUNkMWJuTjFZbk5qY21saVpTY3NJR1p5YjIwNklGOTBhR2x6TGw5dmQyNWxjaXdnZEc4NklGOTBhR2x6TGw5emVXNWphR1Z5TGw5emRXSlZVa3dzWEhKY2JpQWdJQ0FnSUdKdlpIazZJSHNnY21WemIzVnlZMlU2SUY5MGFHbHpMbDkxY213Z2ZWeHlYRzRnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0JmZEdocGN5NWZZblZ6TG5CdmMzUk5aWE56WVdkbEtIVnVVM1ZpYzJOeWFXSmxUWE5uTENBb2NtVndiSGtwSUQwK0lIdGNjbHh1SUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvSjBSaGRHRlBZbXBsWTNSUFluTmxjblpsY2kxVlRsTlZRbE5EVWtsQ1JUb2dKeXdnY21Wd2JIa3BPMXh5WEc0Z0lDQWdJQ0JwWmlBb2NtVndiSGt1WW05a2VTNWpiMlJsSUQwOVBTQXlNREFwSUh0Y2NseHVJQ0FnSUNBZ0lDQmZkR2hwY3k1ZmNtVnNaV0Z6WlV4cGMzUmxibVZ5Y3lncE8xeHlYRzRnSUNBZ0lDQWdJR1JsYkdWMFpTQmZkR2hwY3k1ZmMzbHVZMmhsY2k1ZmIySnpaWEoyWlhKelcxOTBhR2x6TGw5MWNteGRPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JpQWdJQ0I5S1R0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4cUtseHlYRzRnSUNBcUlGSmxaMmx6ZEdWeUlIUm9aU0JqYUdGdVoyVWdiR2x6ZEdWdVpYSnpJSE5sYm5RZ1lua2dkR2hsSUhKbGNHOXlkR1Z5WEhKY2JpQWdJQ29nUUhCaGNtRnRJSHR6ZEhKcGJtZDlJR1pwYkhSbGNpQXRJRVpwYkhSbGNpQjBhR0YwSUdsa1pXNTBhV1pwWlhNZ2RHaGxJR1pwWld4a0lDaHpaWEJoY21GMFpXUWdaRzkwSUhCaGRHZ3BMaUJCWTJObGNIUnpJQ29nWVhRZ2RHaGxJR1Z1WkNCbWIzSWdZU0J0YjNKbElIVnVjbVZ6ZEhKcFkzUmxaQ0JtYVd4MFpYSnBibWN1WEhKY2JpQWdJQ29nUUhCaGNtRnRJSHRtZFc1amRHbHZiaWhsZG1WdWREb2dUWE5uUlhabGJuUXBmU0JqWVd4c1ltRmphMXh5WEc0Z0lDQXFMMXh5WEc0Z0lHOXVRMmhoYm1kbEtHWnBiSFJsY2l3Z1kyRnNiR0poWTJzcElIdGNjbHh1SUNBZ0lHeGxkQ0JyWlhrZ1BTQm1hV3gwWlhJN1hISmNiaUFnSUNCc1pYUWdabWxzZEdWeVQySnFJRDBnZTF4eVhHNGdJQ0FnSUNCMGVYQmxPaUJHYVd4MFpYSlVlWEJsTGtWWVFVTlVMRnh5WEc0Z0lDQWdJQ0JqWVd4c1ltRmphem9nWTJGc2JHSmhZMnRjY2x4dUlDQWdJSDA3WEhKY2JseHlYRzRnSUNBZ2JHVjBJR2xrZUNBOUlHWnBiSFJsY2k1cGJtUmxlRTltS0NjcUp5azdYSEpjYmlBZ0lDQnBaaUFvYVdSNElEMDlQU0JtYVd4MFpYSXViR1Z1WjNSb0lDMGdNU2tnZTF4eVhHNGdJQ0FnSUNCcFppQW9hV1I0SUQwOVBTQXdLU0I3WEhKY2JpQWdJQ0FnSUNBZ1ptbHNkR1Z5VDJKcUxuUjVjR1VnUFNCR2FXeDBaWEpVZVhCbExrRk9XVHRjY2x4dUlDQWdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnSUNCbWFXeDBaWEpQWW1vdWRIbHdaU0E5SUVacGJIUmxjbFI1Y0dVdVUxUkJVbFE3WEhKY2JpQWdJQ0FnSUNBZ2EyVjVJRDBnWm1sc2RHVnlMbk4xWW5OMGNpZ3dMQ0JtYVd4MFpYSXViR1Z1WjNSb0lDMGdNU2s3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQjBhR2x6TGw5bWFXeDBaWEp6VzJ0bGVWMGdQU0JtYVd4MFpYSlBZbW83WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JmYjI1R2FXeDBaWElvWlhabGJuUXBJSHRjY2x4dUlDQWdJR3hsZENCZmRHaHBjeUE5SUhSb2FYTTdYSEpjYmx4eVhHNGdJQ0FnVDJKcVpXTjBMbXRsZVhNb1gzUm9hWE11WDJacGJIUmxjbk1wTG1admNrVmhZMmdvS0d0bGVTa2dQVDRnZTF4eVhHNGdJQ0FnSUNCc1pYUWdabWxzZEdWeUlEMGdYM1JvYVhNdVgyWnBiSFJsY25OYmEyVjVYVHRjY2x4dUlDQWdJQ0FnYVdZZ0tHWnBiSFJsY2k1MGVYQmxJRDA5UFNCR2FXeDBaWEpVZVhCbExrRk9XU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDOHZiV0YwWTJnZ1lXNTVkR2hwYm1kY2NseHVJQ0FnSUNBZ0lDQm1hV3gwWlhJdVkyRnNiR0poWTJzb1pYWmxiblFwTzF4eVhHNGdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHWnBiSFJsY2k1MGVYQmxJRDA5UFNCR2FXeDBaWEpVZVhCbExsTlVRVkpVS1NCN1hISmNiaUFnSUNBZ0lDQWdMeTlwWmlCemRHRnlkSE1nZDJsMGFDQm1hV3gwWlhJdUxpNWNjbHh1SUNBZ0lDQWdJQ0JwWmlBb1pYWmxiblF1Wm1sbGJHUXVhVzVrWlhoUFppaHJaWGtwSUQwOVBTQXdLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQm1hV3gwWlhJdVkyRnNiR0poWTJzb1pYWmxiblFwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdmU0JsYkhObElHbG1JQ2htYVd4MFpYSXVkSGx3WlNBOVBUMGdSbWxzZEdWeVZIbHdaUzVGV0VGRFZDa2dlMXh5WEc0Z0lDQWdJQ0FnSUM4dlpYaGhZM1FnYldGMFkyaGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb1pYWmxiblF1Wm1sbGJHUWdQVDA5SUd0bGVTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ1ptbHNkR1Z5TG1OaGJHeGlZV05yS0dWMlpXNTBLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lIMWNjbHh1SUNBZ0lIMHBPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdiMjVFYVhOamIyNXVaV04wWldRb1kyRnNiR0poWTJzcElIdGNjbHh1WEhKY2JpQWdJQ0J5WlhSMWNtNGdibVYzSUZCeWIyMXBjMlVvS0hKbGMyOXNkbVVzSUhKbGFtVmpkQ2tnUFQ0Z2UxeHlYRzVjY2x4dUlDQWdJQ0FnZEdocGN5NWZjM1ZpYzJOeWFXSmxVbVZuYVhOMGNtRjBhVzl1S0NsY2NseHVJQ0FnSUNBZ0xuUm9aVzRvS0NrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMjl1UkdselkyOXVibVZqZEdWa0lEMGdZMkZzYkdKaFkyczdYSEpjYmlBZ0lDQWdJQ0FnY21WemIyeDJaU2dwTzF4eVhHNGdJQ0FnSUNCOUtWeHlYRzRnSUNBZ0lDQXVZMkYwWTJnb0tHVnljaWtnUFQ0Z2NtVnFaV04wS0dWeWNpa3BPMXh5WEc0Z0lDQWdmU2s3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JmYzNWaWMyTnlhV0psVW1WbmFYTjBjbUYwYVc5dUtDa2dlMXh5WEc1Y2NseHVJQ0FnSUdOdmJuTjBJRzF6WnlBOUlIdGNjbHh1SUNBZ0lDQWdkSGx3WlRvZ0ozTjFZbk5qY21saVpTY3NYSEpjYmlBZ0lDQWdJR1p5YjIwNklIUm9hWE11WDI5M2JtVnlMRnh5WEc0Z0lDQWdJQ0IwYnpvZ2RHaHBjeTVmYzNsdVkyaGxjaTVmY25WdWRHbHRaVlZ5YkNBcklDY3ZjM1ZpYzJOeWFYQjBhVzl1Y3ljc1hISmNiaUFnSUNBZ0lHSnZaSGs2SUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWE52ZFhKalpYTTZJRnQwYUdsekxsOTFjbXdnS3lBbkwzSmxaMmx6ZEhKaGRHbHZiaWRkWEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2NseHVYSEpjYmlBZ0lDQWdJSFJvYVhNdVgySjFjeTV3YjNOMFRXVnpjMkZuWlNodGMyY3NJQ2h5WlhCc2VTa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lHTnZibk52YkdVdWJHOW5LR0JiUkdGMFlVOWlhbVZqZEU5aWMyVnlkbVZ5TGw5emRXSnpZM0pwWW1WU1pXZHBjM1J5WVhScGIyNWRJQ1I3ZEdocGN5NWZkWEpzZlNCeVkzWmxaQ0J5WlhCc2VTQmdMQ0J5WlhCc2VTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2h5WlhCc2VTNWliMlI1TG1OdlpHVWdQVDA5SURJd01Da2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTVmWjJWdVpYSmhkR1ZNYVhOMFpXNWxjaWgwYUdsekxsOTFjbXdnS3lBbkwzSmxaMmx6ZEhKaGRHbHZiaWNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdjbVZ6YjJ4MlpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NkRmNuSnZjaUJ6ZFdKelkzSnBZbWx1WnlCeVpXZHBjM1J5WVhScGIyNGdjM1JoZEhWeklHWnZjaUFuTENCMGFHbHpMbDkxY213cE8xeHlYRzRnSUNBZ0lDQWdJQ0FnY21WcVpXTjBLQ2RGY25KdmNpQnpkV0p6WTNKcFltbHVaeUJ5WldkcGMzUnlZWFJwYjI0Z2MzUmhkSFZ6SUdadmNpQW5JQ3NnZEdocGN5NWZkWEpzS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnZlNrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNCZloyVnVaWEpoZEdWTWFYTjBaVzVsY2lodWIzUnBabWxqWVhScGIyNVZVa3dwSUh0Y2NseHVJQ0FnSUd4bGRDQmZkR2hwY3lBOUlIUm9hWE03WEhKY2JseHlYRzRnSUNBZ1gzUm9hWE11WDJKMWN5NWhaR1JNYVhOMFpXNWxjaWh1YjNScFptbGpZWFJwYjI1VlVrd3NJQ2h0YzJjcElEMCtJSHRjY2x4dUlDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb1lGdEVZWFJoVDJKcVpXTjBUMkp6WlhKMlpYSXVjbVZuYVhOMGNtRjBhVzl1VG05MGFXWnBZMkYwYVc5dVhTQWtlMTkwYUdsekxsOTFjbXg5T2lCZ0xDQnRjMmNwTzF4eVhHNGdJQ0FnSUNCcFppQW9iWE5uTG1KdlpIa3VkbUZzZFdVZ0ppWWdiWE5uTG1KdlpIa3VkbUZzZFdVZ1BUMDlJQ2RrYVhOamIyNXVaV04wWldRbklDWW1JRjkwYUdsekxsOXZia1JwYzJOdmJtNWxZM1JsWkNrZ2UxeHlYRzRnSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0dCYlJHRjBZVTlpYW1WamRFOWljMlZ5ZG1WeVhTQWtlMTkwYUdsekxsOTFjbXg5T2lCM1lYTWdaR2x6WTI5dWJtVmpkR1ZrSUdBc0lHMXpaeWs3WEhKY2JpQWdJQ0FnSUNBZ1gzUm9hWE11WDI5dVJHbHpZMjl1Ym1WamRHVmtLQ2s3WEhKY2JpQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQjlLVHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzhxS2x4eVhHNGdJQ0FxSUZKbGNYVmxjM1J6SUhSb1pTQnlaWEJ2Y25SbGNpQjBieUJsZUdWamRYUmxJR0VnYldWMGFHOWtJRzl1SUhSb1pTQmtZWFJoSUc5aWFtVmpkRnh5WEc0Z0lDQXFJRUJ3WVhKaGJTQjdjM1J5YVc1bmZTQnRaWFJvYjJRZ0xTQk9ZVzFsSUc5bUlIUm9aU0JtZFc1amRHbHZiaUIwYnlCaVpTQmxlR1ZqZFhSbFpDNWNjbHh1SUNBZ0tpQkFjR0Z5WVcwZ2UyRnljbUY1ZlNCd1lYSmhiWE1nTFNCaGNuSmhlU0J2WmlCd1lYSmhiV1YwWlhKeklHWnZjaUIwYUdVZ2NtVnhkV1Z6ZEdWa0lHWjFibU4wYVc5dVhISmNiaUFnSUNvZ1FISmxkSFZ5YmlCN2NISnZiV2x6WlgxY2NseHVJQ0FnS2k5Y2NseHVYSEpjYmlBZ1pYaGxZM1YwWlNodFpYUm9iMlFzSUhCaGNtRnRjeWtnZTF4eVhHNGdJQ0FnYkdWMElGOTBhR2x6SUQwZ2RHaHBjenRjY2x4dVhISmNiaUFnSUNCeVpYUjFjbTRnYm1WM0lGQnliMjFwYzJVb0tISmxjMjlzZG1Vc0lISmxhbVZqZENrZ1BUNGdlMXh5WEc1Y2NseHVJQ0FnSUNBZ1kyOXVjM1FnYlhObklEMGdlMXh5WEc0Z0lDQWdJQ0FnSUhSNWNHVTZJQ2RsZUdWamRYUmxKeXhjY2x4dUlDQWdJQ0FnSUNCbWNtOXRPaUIwYUdsekxsOXZkMjVsY2l4Y2NseHVJQ0FnSUNBZ0lDQjBiem9nWDNSb2FYTXVYM1Z5YkN4Y2NseHVJQ0FnSUNBZ0lDQmliMlI1T2lCN1hISmNiaUFnSUNBZ0lDQWdJQ0J0WlhSb2IyUTZJRzFsZEdodlpDeGNjbHh1SUNBZ0lDQWdJQ0FnSUhCaGNtRnRjem9nY0dGeVlXMXpYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNCOU8xeHlYRzVjY2x4dUlDQWdJQ0FnWDNSb2FYTXVYMkoxY3k1d2IzTjBUV1Z6YzJGblpTaHRjMmNzSUNoeVpYQnNlU2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0dCYlJHRjBZVTlpYW1WamRFOWljMlZ5ZG1WeUxtVjRaV04xZEdWZElDUjdYM1JvYVhNdVgzVnliSDBnY21OMlpXUWdjbVZ3YkhrZ1lDd2djbVZ3YkhrcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCcFppQW9jbVZ3YkhrdVltOWtlUzVqYjJSbElEMDlQU0F5TURBcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUhKbGMyOXNkbVVvS1R0Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdWFXNW5LR0JiUkdGMFlVOWlhbVZqZEU5aWMyVnlkbVZ5TG1WNFpXTjFkR1ZkSUdWNFpXTjFkR2x2YmlCdlppQnRaWFJvYjJRZ0pIdHRaWFJvYjJSOUlIZGhjeUJ5WldwbFkzUWdZbmtnY21Wd2IzSjBaWEpnS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJSEpsYW1WamRDaGdXMFJoZEdGUFltcGxZM1JQWW5ObGNuWmxjaTVsZUdWamRYUmxYU0JsZUdWamRYUnBiMjRnYjJZZ2JXVjBhRzlrSUNSN2JXVjBhRzlrZlNCM1lYTWdjbVZxWldOMElHSjVJSEpsY0c5eWRHVnlZQ2s3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJSDBwTzF4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdSbFptRjFiSFFnUkdGMFlVOWlhbVZqZEU5aWMyVnlkbVZ5TzF4eVhHNWNibHh1WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWlBdkwxeHVMeThnTGk5emNtTXZjM2x1WTJobGNpOUVZWFJoVDJKcVpXTjBUMkp6WlhKMlpYSXVhbk1pTENJdktpcGNjbHh1S2lCRGIzQjVjbWxuYUhRZ01qQXhOaUJRVkNCSmJtOTJZY09udzZOdklHVWdVMmx6ZEdWdFlYTWdVMEZjY2x4dUtpQkRiM0I1Y21sbmFIUWdNakF4TmlCSlRrVlRReTFKUkZ4eVhHNHFJRU52Y0hseWFXZG9kQ0F5TURFMklGRlZUMEpKVXlCT1JWUlhUMUpMVXlCVFRGeHlYRzRxSUVOdmNIbHlhV2RvZENBeU1ERTJJRVpTUVZWT1NFOUdSVkl0UjBWVFJVeE1VME5JUVVaVUlGcFZVaUJHVDBWU1JFVlNWVTVISUVSRlVpQkJUa2RGVjBGT1JGUkZUaUJHVDFKVFEwaFZUa2NnUlM1V1hISmNiaW9nUTI5d2VYSnBaMmgwSURJd01UWWdUMUpCVGtkRklGTkJYSEpjYmlvZ1EyOXdlWEpwWjJoMElESXdNVFlnUkdWMWRITmphR1VnVkdWc1pXdHZiU0JCUjF4eVhHNHFJRU52Y0hseWFXZG9kQ0F5TURFMklFRndhWHBsWlZ4eVhHNHFJRU52Y0hseWFXZG9kQ0F5TURFMklGUkZRMGhPU1ZORFNFVWdWVTVKVmtWU1UwbFVRVlFnUWtWU1RFbE9YSEpjYmlwY2NseHVLaUJNYVdObGJuTmxaQ0IxYm1SbGNpQjBhR1VnUVhCaFkyaGxJRXhwWTJWdWMyVXNJRlpsY25OcGIyNGdNaTR3SUNoMGFHVWdYQ0pNYVdObGJuTmxYQ0lwTzF4eVhHNHFJSGx2ZFNCdFlYa2dibTkwSUhWelpTQjBhR2x6SUdacGJHVWdaWGhqWlhCMElHbHVJR052YlhCc2FXRnVZMlVnZDJsMGFDQjBhR1VnVEdsalpXNXpaUzVjY2x4dUtpQlpiM1VnYldGNUlHOWlkR0ZwYmlCaElHTnZjSGtnYjJZZ2RHaGxJRXhwWTJWdWMyVWdZWFJjY2x4dUtseHlYRzRxSUNBZ2FIUjBjRG92TDNkM2R5NWhjR0ZqYUdVdWIzSm5MMnhwWTJWdWMyVnpMMHhKUTBWT1UwVXRNaTR3WEhKY2JpcGNjbHh1S2lCVmJteGxjM01nY21WeGRXbHlaV1FnWW5rZ1lYQndiR2xqWVdKc1pTQnNZWGNnYjNJZ1lXZHlaV1ZrSUhSdklHbHVJSGR5YVhScGJtY3NJSE52Wm5SM1lYSmxYSEpjYmlvZ1pHbHpkSEpwWW5WMFpXUWdkVzVrWlhJZ2RHaGxJRXhwWTJWdWMyVWdhWE1nWkdsemRISnBZblYwWldRZ2IyNGdZVzRnWENKQlV5QkpVMXdpSUVKQlUwbFRMRnh5WEc0cUlGZEpWRWhQVlZRZ1YwRlNVa0ZPVkVsRlV5QlBVaUJEVDA1RVNWUkpUMDVUSUU5R0lFRk9XU0JMU1U1RUxDQmxhWFJvWlhJZ1pYaHdjbVZ6Y3lCdmNpQnBiWEJzYVdWa0xseHlYRzRxSUZObFpTQjBhR1VnVEdsalpXNXpaU0JtYjNJZ2RHaGxJSE53WldOcFptbGpJR3hoYm1kMVlXZGxJR2R2ZG1WeWJtbHVaeUJ3WlhKdGFYTnphVzl1Y3lCaGJtUmNjbHh1S2lCc2FXMXBkR0YwYVc5dWN5QjFibVJsY2lCMGFHVWdUR2xqWlc1elpTNWNjbHh1S2lvdlhISmNibHh5WEc1cGJYQnZjblFnUkdGMFlVOWlhbVZqZENCbWNtOXRJQ2N1TDBSaGRHRlBZbXBsWTNRbk8xeHlYRzVjY2x4dWFXMXdiM0owSUhzZ1pHVmxjRU5zYjI1bExDQmthWFpwWkdWVlVrd2dmU0JtY205dElDY3VMaTkxZEdsc2N5OTFkR2xzY3k1cWN5YzdYSEpjYmx4eVhHNHZLaXBjY2x4dUlDb2dWR2hsSUdOc1lYTnpJSEpsZEhWeWJtVmtJR1p5YjIwZ2RHaGxJRk41Ym1Ob1pYSWdZM0psWVhSbElHTmhiR3d1WEhKY2JpQXFJRlJ2SUdKbElIVnpaV1FnWVhNZ1lTQnlaWEJ2Y25SbGNpQndiMmx1ZEN3Z1kyaGhibWRsY3lCM2FXeHNJR0psSUhOMVltMXBkR1ZrSUhSdklFUmhkR0ZQWW1wbFkzUlBZbk5sY25abGNpQnBibk4wWVc1alpYTXVYSEpjYmlBcUwxeHlYRzVqYkdGemN5QkVZWFJoVDJKcVpXTjBVbVZ3YjNKMFpYSWdaWGgwWlc1a2N5QkVZWFJoVDJKcVpXTjBJQzhxSUdsdGNHeGxiV1Z1ZEhNZ1UzbHVZMU4wWVhSMWN5QXFMeUI3WEhKY2JpQWdMeW9nY0hKcGRtRjBaVnh5WEc0Z0lGOXpkV0p6WTNKcGNIUnBiMjV6T2lBOGFIbHdaWEowZVZWeWJEb2dleUJ6ZEdGMGRYTTZJSE4wY21sdVp5QjlJSDArWEhKY2JseHlYRzRnSUMwdExTMWxkbVZ1ZENCb1lXNWtiR1Z5Y3kwdExTMWNjbHh1SUNCZmIyNVRkV0p6WTNKcGNIUnBiMjVJWVc1a2JHVnlPaUFvWlhabGJuUXBJRDArSUhadmFXUmNjbHh1SUNCZmIyNVNaWE53YjI1elpVaGhibVJzWlhJNklDaGxkbVZ1ZENrZ1BUNGdkbTlwWkZ4eVhHNGdJRjl2YmxKbFlXUklZVzVrYkdWeU9pQW9aWFpsYm5RcElEMCtJSFp2YVdSY2NseHVJQ0FxTDF4eVhHNWNjbHh1SUNBdktpcGNjbHh1SUNBZ0tpQkFhV2R1YjNKbFhISmNiaUFnSUNvZ1UyaHZkV3hrSUc1dmRDQmlaU0IxYzJWa0lHUnBjbVZqZEd4NUlHSjVJRWg1Y0dWeWRHbGxjeTRnU1hRbmN5QmpZV3hzWldRZ1lua2dkR2hsSUZONWJtTm9aWEl1WTNKbFlYUmxJRzFsZEdodlpGeHlYRzRnSUNBcUwxeHlYRzVjY2x4dUlDQWdMeTlqYjI1emRISjFZM1J2Y2loemVXNWphR1Z5TENCMWNtd3NJR055WldGMFpXUXNJSEpsY0c5eWRHVnlMQ0J5ZFc1MGFXMWxMQ0J6WTJobGJXRXNJRzVoYldVc0lHbHVhWFJwWVd4VGRHRjBkWE1zSUdsdWFYUnBZV3hFWVhSaExDQmphR2xzWkhKbGJuTXNJRzExZEhWaGJDQTlJSFJ5ZFdVc0lISmxjM1Z0WldRZ1BTQm1ZV3h6WlN3Z1pHVnpZM0pwY0hScGIyNHNJSFJoWjNNc0lISmxjMjkxY21ObGN5d2diMkp6WlhKMlpYSlRkRzl5WVdkbExDQndkV0pzYVdOUFluTmxjblpoZEdsdmJpa2dlMXh5WEc0Z0lHTnZibk4wY25WamRHOXlLR2x1Y0hWMEtTQjdYSEpjYmx4eVhHNGdJQ0FnYzNWd1pYSW9hVzV3ZFhRcE8xeHlYRzRnSUNBZ2JHVjBJRjkwYUdseklEMGdkR2hwY3p0Y2NseHVYSEpjYmlBZ0lDQmZkR2hwY3k1ZmMzVmljMk55YVhCMGFXOXVjeUE5SUh0OU8xeHlYRzVjY2x4dUlDQWdJRjkwYUdsekxsOXplVzVqVDJKcUxtOWljMlZ5ZG1Vb0tHVjJaVzUwS1NBOVBpQjdYSEpjYmlBZ0lDQWdJR052Ym5OdmJHVXViRzluS0NkYlUzbHVZMmhsY2k1RVlYUmhUMkpxWldOMFVtVndiM0owWlhKZElDY2dLeUJmZEdocGN5NTFjbXdnS3lBbklIQjFZbXhwYzJnZ1kyaGhibWRsT2lBbkxDQmxkbVZ1ZENrN1hISmNiaUFnSUNBZ0lGOTBhR2x6TGw5dmJrTm9ZVzVuWlNobGRtVnVkQ2s3WEhKY2JpQWdJQ0I5S1R0Y2NseHVYSEpjYmlBZ0lDQmZkR2hwY3k1ZllXeHNiMk5oZEdWTWFYTjBaVzVsY25Nb0tUdGNjbHh1WEhKY2JpQWdJQ0JmZEdocGN5NWZhVzUyYVhSaGRHbHZibk1nUFNCYlhUdGNjbHh1SUNCOVhISmNibHh5WEc0Z0lGOWhiR3h2WTJGMFpVeHBjM1JsYm1WeWN5Z3BJSHRjY2x4dUlDQWdJSE4xY0dWeUxsOWhiR3h2WTJGMFpVeHBjM1JsYm1WeWN5Z3BPMXh5WEc0Z0lDQWdiR1YwSUY5MGFHbHpJRDBnZEdocGN6dGNjbHh1WEhKY2JpQWdJQ0JmZEdocGN5NWZiMkpxWldOMFRHbHpkR1Z1WlhJZ1BTQmZkR2hwY3k1ZlluVnpMbUZrWkV4cGMzUmxibVZ5S0Y5MGFHbHpMbDkxY213c0lDaHRjMmNwSUQwK0lIdGNjbHh1SUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvSjF0VGVXNWphR1Z5TGtSaGRHRlBZbXBsWTNSU1pYQnZjblJsY2wwZ2JHbHpkR1Z1WlhJZ0p5QXJJRjkwYUdsekxsOTFjbXdnS3lBbklGSmxZMlZwZG1Wa09pQW5MQ0J0YzJjcE8xeHlYRzRnSUNBZ0lDQnpkMmwwWTJnZ0tHMXpaeTUwZVhCbEtTQjdYSEpjYmlBZ0lDQWdJQ0FnWTJGelpTQW5jbVZ6Y0c5dWMyVW5PaUJmZEdocGN5NWZiMjVTWlhOd2IyNXpaU2h0YzJjcE95QmljbVZoYXp0Y2NseHVJQ0FnSUNBZ0lDQmpZWE5sSUNkeVpXRmtKem9nWDNSb2FYTXVYMjl1VW1WaFpDaHRjMmNwT3lCaWNtVmhhenRjY2x4dUlDQWdJQ0FnSUNCallYTmxJQ2RsZUdWamRYUmxKem9nWDNSb2FYTXVYMjl1UlhobFkzVjBaU2h0YzJjcE95QmljbVZoYXp0Y2NseHVJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZTazdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQmZjbVZzWldGelpVeHBjM1JsYm1WeWN5Z3BJSHRjY2x4dUlDQWdJSE4xY0dWeUxsOXlaV3hsWVhObFRHbHpkR1Z1WlhKektDazdYSEpjYmlBZ0lDQnNaWFFnWDNSb2FYTWdQU0IwYUdsek8xeHlYRzVjY2x4dUlDQWdJRjkwYUdsekxsOXZZbXBsWTNSTWFYTjBaVzVsY2k1eVpXMXZkbVVvS1R0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4cUtseHlYRzRnSUNBcUlGTmxibVFnYVc1MmFYUmhkR2x2Ym5NZ0tHTnlaV0YwWlNCdFpYTnpZV2RsY3lrZ2RHOGdhSGx3WlhKMGFXVnpMQ0J2WW5ObGNuWmxjbk1nYkdsemRDNWNjbHh1SUNBZ0tpQkFjR0Z5WVcwZ0lIdEllWEJsY25SNVZWSk1XMTE5SUc5aWMyVnlkbVZ5Y3lCTWFYTjBJRzltSUVoNWNHVnlkSGtnVlZKTUozTmNjbHh1SUNBZ0tpOWNjbHh1SUNCcGJuWnBkR1ZQWW5ObGNuWmxjbk1vYjJKelpYSjJaWEp6S1NCN1hISmNiaUFnSUNCc1pYUWdYM1JvYVhNZ1BTQjBhR2x6TzF4eVhHNWNjbHh1WEhKY2JpQWdJQ0F2TDBaTVQxY3RUMVZVT2lCMGFHbHpJRzFsYzNOaFoyVWdkMmxzYkNCaVpTQnpaVzUwSUhSdklIUm9aU0J5ZFc1MGFXMWxJR2x1YzNSaGJtTmxJRzltSUZONWJtTm9aWEpOWVc1aFoyVnlJQzArSUY5dmJrTnlaV0YwWlZ4eVhHNGdJQ0FnTHk4Z1ZFOUVUem9nY21WdGIzWmxJSFpoYkhWbElHRnVaQ0JoWkdRZ2NtVnpiM1Z5WTJWelB5QnphRzkxYkdRZ2MybHRhV3hoY2lCMGJ5QXhjM1FnWTNKbFlYUmxYSEpjYmx4eVhHNGdJQ0FnYkdWMElIUnZTVzUyYVhSbElEMGdXMTA3WEhKY2JseHlYRzRnSUNBZ2IySnpaWEoyWlhKekxtWnZja1ZoWTJnb0tHOWljMlZ5ZG1WeUtUMCtJSHRjY2x4dUlDQWdJQ0FnYVdZZ0tDRmZkR2hwY3k1ZmFXNTJhWFJoZEdsdmJuTmJiMkp6WlhKMlpYSmRLU0I3WEhKY2JpQWdJQ0FnSUNBZ2RHOUpiblpwZEdVdWNIVnphQ2h2WW5ObGNuWmxjaWs3WEhKY2JpQWdJQ0FnSUNBZ1gzUm9hWE11WDJsdWRtbDBZWFJwYjI1elcyOWljMlZ5ZG1WeVhTQTlJRzlpYzJWeWRtVnlPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JpQWdJQ0I5S1R0Y2NseHVYSEpjYmlBZ0lDQnBaaUFvZEc5SmJuWnBkR1V1YkdWdVozUm9JRDRnTUNrZ2UxeHlYRzRnSUNBZ0lDQmpiMjV6YjJ4bExteHZaeWduVzFONWJtTm9aWEl1UkdGMFlVOWlhbVZqZEZKbGNHOXlkR1Z5WFNCSmJuWnBkR1ZQWW5ObGNuWmxjbk1nSnl3Z2RHOUpiblpwZEdVc0lGOTBhR2x6TGw5dFpYUmhaR0YwWVNrN1hISmNibHh5WEc0Z0lDQWdJQ0JzWlhRZ2FXNTJhWFJsVFhObklEMGdlMXh5WEc0Z0lDQWdJQ0FnSUhSNWNHVTZJQ2RqY21WaGRHVW5MQ0JtY205dE9pQmZkR2hwY3k1ZmMzbHVZMmhsY2k1ZmIzZHVaWElzSUhSdk9pQmZkR2hwY3k1ZmMzbHVZMmhsY2k1ZmMzVmlWVkpNTEZ4eVhHNGdJQ0FnSUNBZ0lHSnZaSGs2SUhzZ2NtVnpkVzFsT2lCbVlXeHpaU3dnY21WemIzVnlZMlU2SUY5MGFHbHpMbDkxY213c0lITmphR1Z0WVRvZ1gzUm9hWE11WDNOamFHVnRZU3dnZG1Gc2RXVTZJRjkwYUdsekxsOXRaWFJoWkdGMFlTd2dZWFYwYUc5eWFYTmxPaUIwYjBsdWRtbDBaU0I5WEhKY2JpQWdJQ0FnSUgwN1hISmNibHh5WEc0Z0lDQWdJQ0JmZEdocGN5NWZZblZ6TG5CdmMzUk5aWE56WVdkbEtHbHVkbWwwWlUxelp5azdYSEpjYmx4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dVhISmNiaUFnTHlvcVhISmNiaUFnSUNvZ1VtVnNaV0Z6WlNCaGJtUWdaR1ZzWlhSbElHOWlhbVZqZENCa1lYUmhYSEpjYmlBZ0lDb3ZYSEpjYmlBZ1pHVnNaWFJsS0NrZ2UxeHlYRzRnSUNBZ2JHVjBJRjkwYUdseklEMGdkR2hwY3p0Y2NseHVYSEpjYmlBZ0lDQXZMMFpNVDFjdFQxVlVPaUIwYUdseklHMWxjM05oWjJVZ2QybHNiQ0JpWlNCelpXNTBJSFJ2SUhSb1pTQnlkVzUwYVcxbElHbHVjM1JoYm1ObElHOW1JRk41Ym1Ob1pYSk5ZVzVoWjJWeUlDMCtJRjl2YmtSbGJHVjBaVnh5WEc0Z0lDQWdiR1YwSUdSbGJHVjBaVTF6WnlBOUlIdGNjbHh1SUNBZ0lDQWdkSGx3WlRvZ0oyUmxiR1YwWlNjc0lHWnliMjA2SUY5MGFHbHpMbDl2ZDI1bGNpd2dkRzg2SUY5MGFHbHpMbDl6ZVc1amFHVnlMbDl6ZFdKVlVrd3NYSEpjYmlBZ0lDQWdJR0p2WkhrNklIc2djbVZ6YjNWeVkyVTZJRjkwYUdsekxsOTFjbXdnZlZ4eVhHNGdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQmZkR2hwY3k1ZlluVnpMbkJ2YzNSTlpYTnpZV2RsS0dSbGJHVjBaVTF6Wnl3Z0tISmxjR3g1S1NBOVBpQjdYSEpjYmlBZ0lDQWdJR052Ym5OdmJHVXViRzluS0NkRVlYUmhUMkpxWldOMFVtVndiM0owWlhJdFJFVk1SVlJGT2lBbkxDQnlaWEJzZVNrN1hISmNiaUFnSUNBZ0lHbG1JQ2h5WlhCc2VTNWliMlI1TG1OdlpHVWdQVDA5SURJd01Da2dlMXh5WEc0Z0lDQWdJQ0FnSUY5MGFHbHpMbDl5Wld4bFlYTmxUR2x6ZEdWdVpYSnpLQ2s3WEhKY2JpQWdJQ0FnSUNBZ1pHVnNaWFJsSUY5MGFHbHpMbDl6ZVc1amFHVnlMbDl5WlhCdmNuUmxjbk5iWDNSb2FYTXVYM1Z5YkYwN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dlgzUm9hWE11WDNONWJtTlBZbW91ZFc1dlluTmxjblpsS0NrN1hISmNiaUFnSUNBZ0lDQWdYM1JvYVhNdVgzTjVibU5QWW1vZ1BTQjdmVHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlNrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdktpcGNjbHh1SUNBZ0tpQlRkV0p6WTNKcGNIUnBiMjV6SUhKbGNYVmxjM1JsWkNCaGJtUWdZV05qWlhCMFpXUWdkRzhnZEdocGN5QnlaWEJ2Y25SbGNseHlYRzRnSUNBcUlFQjBlWEJsSUh0UFltcGxZM1E4U0hsd1pYSjBlVlZTVEN3Z1UzbHVZMU4xWW5OamNtbHdkR2x2Ymo1OVhISmNiaUFnSUNvdlhISmNiaUFnWjJWMElITjFZbk5qY21sd2RHbHZibk1vS1NCN0lISmxkSFZ5YmlCMGFHbHpMbDl6ZFdKelkzSnBjSFJwYjI1ek95QjlYSEpjYmx4eVhHNGdJQzhxS2x4eVhHNGdJQ0FxSUZObGRIVndJSFJvWlNCallXeHNZbUZqYXlCMGJ5QndjbTlqWlhOeklITjFZbk5qY21saVpTQmhibVFnZFc1emRXSnpZM0pwWW1VZ2JtOTBhV1pwWTJGMGFXOXVjMXh5WEc0Z0lDQXFJRUJ3WVhKaGJTQjdablZ1WTNScGIyNG9aWFpsYm5RNklFMXpaMFYyWlc1MEtYMGdZMkZzYkdKaFkyc2dablZ1WTNScGIyNGdkRzhnY21WalpXbDJaU0JsZG1WdWRITmNjbHh1SUNBZ0tpOWNjbHh1SUNCdmJsTjFZbk5qY21sd2RHbHZiaWhqWVd4c1ltRmpheWtnZTF4eVhHNGdJQ0FnZEdocGN5NWZiMjVUZFdKelkzSnBjSFJwYjI1SVlXNWtiR1Z5SUQwZ1kyRnNiR0poWTJzN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdktpcGNjbHh1SUNBZ0tpQlRaWFIxY0NCMGFHVWdZMkZzYkdKaFkyc2dkRzhnY0hKdlkyVnpjeUJ5WlhOd2IyNXpaU0J1YjNScFptbGpZWFJwYjI1eklHOW1JSFJvWlNCamNtVmhkR1VuYzF4eVhHNGdJQ0FxSUVCd1lYSmhiU0I3Wm5WdVkzUnBiMjRvWlhabGJuUTZJRTF6WjBWMlpXNTBLWDBnWTJGc2JHSmhZMnNnWm5WdVkzUnBiMjRnZEc4Z2NtVmpaV2wyWlNCbGRtVnVkSE5jY2x4dUlDQWdLaTljY2x4dUlDQnZibEpsYzNCdmJuTmxLR05oYkd4aVlXTnJLU0I3WEhKY2JpQWdJQ0IwYUdsekxsOXZibEpsYzNCdmJuTmxTR0Z1Wkd4bGNpQTlJR05oYkd4aVlXTnJPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeW9xWEhKY2JpQWdJQ29nVTJWMGRYQWdkR2hsSUdOaGJHeGlZV05ySUhSdklIQnliMk5sYzNNZ2NtVmhaQ0J1YjNScFptbGpZWFJwYjI1elhISmNiaUFnSUNvZ1FIQmhjbUZ0SUh0bWRXNWpkR2x2YmlobGRtVnVkRG9nVFhOblJYWmxiblFwZlNCallXeHNZbUZqYTF4eVhHNGdJQ0FxTDF4eVhHNWNjbHh1SUNCdmJsSmxZV1FvWTJGc2JHSmhZMnNwSUh0Y2NseHVJQ0FnSUhSb2FYTXVYMjl1VW1WaFpFaGhibVJzWlhJZ1BTQmpZV3hzWW1GamF6dGNjbHh1SUNCOVhISmNibHh5WEc0Z0lDOHFLbHh5WEc0Z0lDQXFJRk5sZEhWd0lIUm9aU0JqWVd4c1ltRmpheUIwYnlCd2NtOWpaWE56SUdWNFpXTjFkR1VnYm05MGFXWnBZMkYwYVc5dWMxeHlYRzRnSUNBcUlFQndZWEpoYlNCN1puVnVZM1JwYjI0b1pYWmxiblE2SUUxelowVjJaVzUwS1gwZ1kyRnNiR0poWTJ0Y2NseHVJQ0FnS2k5Y2NseHVYSEpjYmlBZ2IyNUZlR1ZqZFhSbEtHTmhiR3hpWVdOcktTQjdYSEpjYmlBZ0lDQjBhR2x6TGw5dmJrVjRaV04xZEdWSVlXNWtiR1Z5SUQwZ1kyRnNiR0poWTJzN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdkwwWk1UMWN0U1U0NklHMWxjM05oWjJVZ2NtVmpaV2wyWldRZ1puSnZiU0J3WVhKbGJuUWdVM2x1WTJobGNpQXRQaUJmYjI1R2IzSjNZWEprWEhKY2JpQWdYMjl1Um05eWQyRnlaQ2h0YzJjcElIdGNjbHh1SUNBZ0lHeGxkQ0JmZEdocGN5QTlJSFJvYVhNN1hISmNibHh5WEc0Z0lDQWdZMjl1YzI5c1pTNXNiMmNvSjBSaGRHRlBZbXBsWTNSU1pYQnZjblJsY2kxU1ExWTZJQ2NzSUcxelp5azdYSEpjYmlBZ0lDQnpkMmwwWTJnZ0tHMXpaeTVpYjJSNUxuUjVjR1VwSUh0Y2NseHVJQ0FnSUNBZ1kyRnpaU0FuYzNWaWMyTnlhV0psSnpvZ1gzUm9hWE11WDI5dVUzVmljMk55YVdKbEtHMXpaeWs3SUdKeVpXRnJPMXh5WEc0Z0lDQWdJQ0JqWVhObElDZDFibk4xWW5OamNtbGlaU2M2SUY5MGFHbHpMbDl2YmxWdVUzVmljMk55YVdKbEtHMXpaeWs3SUdKeVpXRnJPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeTlHVEU5WExVbE9PaUJ0WlhOellXZGxJSEpsWTJWcGRtVmtJR1p5YjIwZ2RHaHBjeUF0UGlCZmIyNUdiM0ozWVhKa09pQmxiV2wwZEdWa0lHSjVJR0VnY21WdGIzUmxJRk41Ym1Ob1pYSWdMVDRnYzNWaWMyTnlhV0psWEhKY2JpQWdYMjl1VTNWaWMyTnlhV0psS0cxelp5a2dlMXh5WEc0Z0lDQWdiR1YwSUY5MGFHbHpJRDBnZEdocGN6dGNjbHh1SUNBZ0lHeGxkQ0JvZVhCbGNuUjVWWEpzSUQwZ2JYTm5MbUp2WkhrdVpuSnZiVHRjY2x4dUlDQWdJR3hsZENCa2FYWnBaR1ZrVlZKTUlEMGdaR2wyYVdSbFZWSk1LR2g1Y0dWeWRIbFZjbXdwTzF4eVhHNGdJQ0FnYkdWMElHUnZiV0ZwYmlBOUlHUnBkbWxrWldSVlVrd3VaRzl0WVdsdU8xeHlYRzVjY2x4dUlDQWdJR052Ym5OdmJHVXViRzluS0NkYlJHRjBZVTlpYW1WamRGSmxjRzl5ZEdWeUxsOXZibE4xWW5OamNtbGlaVjBuTENCdGMyY3NJR1J2YldGcGJpd2daR2wyYVdSbFpGVlNUQ2s3WEhKY2JseHlYRzRnSUNBZ2JHVjBJR1YyWlc1MElEMGdlMXh5WEc0Z0lDQWdJQ0IwZVhCbE9pQnRjMmN1WW05a2VTNTBlWEJsTEZ4eVhHNGdJQ0FnSUNCMWNtdzZJR2g1Y0dWeWRIbFZjbXdzWEhKY2JseHlYRzRnSUNBZ0lDQmtiMjFoYVc0NklHUnZiV0ZwYml4Y2NseHVYSEpjYmlBZ0lDQWdJR2xrWlc1MGFYUjVPaUJ0YzJjdVltOWtlUzVwWkdWdWRHbDBlU3hjY2x4dVhISmNiaUFnSUNBZ0lHRmpZMlZ3ZERvZ0tDa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lDOHZZM0psWVhSbElHNWxkeUJ6ZFdKelkzSnBjSFJwYjI1Y2NseHVJQ0FnSUNBZ0lDQnNaWFFnYzNWaUlEMGdleUIxY213NklHaDVjR1Z5ZEhsVmNtd3NJSE4wWVhSMWN6b2dKMnhwZG1VbklIMDdYSEpjYmlBZ0lDQWdJQ0FnWDNSb2FYTXVYM04xWW5OamNtbHdkR2x2Ym5OYmFIbHdaWEowZVZWeWJGMGdQU0J6ZFdJN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0Y5MGFHbHpMbTFsZEdGa1lYUmhMbk4xWW5OamNtbHdkR2x2Ym5NcElIc2dYM1JvYVhNdWJXVjBZV1JoZEdFdWMzVmljMk55YVhCMGFXOXVjeTV3ZFhOb0tITjFZaTUxY213cE95QjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHeGxkQ0J0YzJkV1lXeDFaU0E5SUY5MGFHbHpMbDl0WlhSaFpHRjBZVHRjY2x4dUlDQWdJQ0FnSUNCdGMyZFdZV3gxWlM1a1lYUmhJRDBnWkdWbGNFTnNiMjVsS0Y5MGFHbHpMbVJoZEdFcE8xeHlYRzRnSUNBZ0lDQWdJRzF6WjFaaGJIVmxMblpsY25OcGIyNGdQU0JmZEdocGN5NWZkbVZ5YzJsdmJqdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0x5OXdjbTlqWlhOeklHRnVaQ0J6Wlc1a0lHTm9hV3hrY21WdWN5QmtZWFJoWEhKY2JpQWdJQ0FnSUNBZ0x5OGdiR1YwSUdOb2FXeGtjbVZ1Vm1Gc2RXVnpJRDBnZTMwN1hISmNiaUFnSUNBZ0lDQWdMeTljY2x4dUlDQWdJQ0FnSUNBdkx5QnBaaUFvWDNSb2FYTXVYMk5vYVd4a2NtVnVUMkpxWldOMGN5a2dlMXh5WEc0Z0lDQWdJQ0FnSUM4dklDQWdUMkpxWldOMExtdGxlWE1vWDNSb2FYTXVYMk5vYVd4a2NtVnVUMkpxWldOMGN5a3VabTl5UldGamFDZ29ZMmhwYkdSeVpXNUpaQ2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQzh2SUNBZ0lDQnNaWFFnWTJocGJHUnlaVzVFWVhSaElEMGdYM1JvYVhNdVgyTm9hV3hrY21WdVQySnFaV04wYzF0amFHbHNaSEpsYmtsa1hUdGNjbHh1SUNBZ0lDQWdJQ0F2THlBZ0lDQWdZMmhwYkdSeVpXNVdZV3gxWlhOYlkyaHBiR1J5Wlc1SlpGMGdQU0JrWldWd1EyeHZibVVvWTJocGJHUnlaVzVFWVhSaEtUdGNjbHh1SUNBZ0lDQWdJQ0F2THlBZ0lIMHBPMXh5WEc0Z0lDQWdJQ0FnSUM4dklDQWdiWE5uVm1Gc2RXVXVZMmhwYkdSeVpXNVBZbXBsWTNSeklEMGdZMmhwYkdSeVpXNVdZV3gxWlhNN1hISmNiaUFnSUNBZ0lDQWdMeThnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JzWlhRZ2MyVnVaRTF6WnlBOUlIdGNjbHh1SUNBZ0lDQWdJQ0FnSUdsa09pQnRjMmN1YVdRc0lIUjVjR1U2SUNkeVpYTndiMjV6WlNjc0lHWnliMjA2SUcxelp5NTBieXdnZEc4NklHMXpaeTVtY205dExGeHlYRzRnSUNBZ0lDQWdJQ0FnWW05a2VUb2dleUJqYjJSbE9pQXlNREFzSUhOamFHVnRZVG9nWDNSb2FYTXVYM05qYUdWdFlTd2dkbUZzZFdVNklHMXpaMVpoYkhWbElIMWNjbHh1SUNBZ0lDQWdJQ0I5TzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0F2TDFSUFJFODZJRVp2Y2lCR2RYSjBhR1Z5SUZOMGRXUjVYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tHMXpaeTVpYjJSNUxtaGhjMDkzYmxCeWIzQmxjblI1S0NkdGRYUjFZV3hCZFhSb1pXNTBhV05oZEdsdmJpY3BJQ1ltSUNGdGMyY3VZbTlrZVM1dGRYUjFZV3hCZFhSb1pXNTBhV05oZEdsdmJpa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ2MyVnVaRTF6Wnk1aWIyUjVMbTExZEhWaGJFRjFkR2hsYm5ScFkyRjBhVzl1SUQwZ2RHaHBjeTVmYlhWMGRXRnNRWFYwYUdWdWRHbGpZWFJwYjI0N1hISmNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxsOXRkWFIxWVd4QmRYUm9aVzUwYVdOaGRHbHZiaUE5SUcxelp5NWliMlI1TG0xMWRIVmhiRUYxZEdobGJuUnBZMkYwYVc5dU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdMeTl6Wlc1a0lHOXJJSEpsYzNCdmJuTmxJRzFsYzNOaFoyVmNjbHh1SUNBZ0lDQWdJQ0JmZEdocGN5NWZZblZ6TG5CdmMzUk5aWE56WVdkbEtITmxibVJOYzJjcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWaU8xeHlYRzRnSUNBZ0lDQjlMRnh5WEc1Y2NseHVJQ0FnSUNBZ2NtVnFaV04wT2lBb2NtVmhjMjl1S1NBOVBpQjdYSEpjYmlBZ0lDQWdJQ0FnTHk5elpXNWtJSEpsYW1WamRDQnlaWE53YjI1elpTQnRaWE56WVdkbFhISmNiaUFnSUNBZ0lDQWdYM1JvYVhNdVgySjFjeTV3YjNOMFRXVnpjMkZuWlNoN1hISmNiaUFnSUNBZ0lDQWdJQ0JwWkRvZ2JYTm5MbWxrTENCMGVYQmxPaUFuY21WemNHOXVjMlVuTENCbWNtOXRPaUJ0YzJjdWRHOHNJSFJ2T2lCdGMyY3Vabkp2YlN4Y2NseHVJQ0FnSUNBZ0lDQWdJR0p2WkhrNklIc2dZMjlrWlRvZ05EQXpMQ0JrWlhOak9pQnlaV0Z6YjI0Z2ZWeHlYRzRnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOU8xeHlYRzVjY2x4dUlDQWdJR2xtSUNoZmRHaHBjeTVmYjI1VGRXSnpZM0pwY0hScGIyNUlZVzVrYkdWeUtTQjdYSEpjYmlBZ0lDQWdJR052Ym5OdmJHVXViRzluS0NkVFZVSlRRMUpKVUZSSlQwNHRSVlpGVGxRNklDY3NJR1YyWlc1MEtUdGNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgyOXVVM1ZpYzJOeWFYQjBhVzl1U0dGdVpHeGxjaWhsZG1WdWRDazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQXZMMFpNVDFjdFNVNDZJRzFsYzNOaFoyVWdjbVZqWldsMlpXUWdabkp2YlNCMGFHbHpJQzArSUY5dmJrWnZjbmRoY21RNklHVnRhWFIwWldRZ1lua2dZU0J5WlcxdmRHVWdSR0YwWVU5aWFtVmpkRTlpYzJWeWRtVnlJQzArSUhWdWMzVmljMk55YVdKbFhISmNiaUFnWDI5dVZXNVRkV0p6WTNKcFltVW9iWE5uS1NCN1hISmNiaUFnSUNCc1pYUWdYM1JvYVhNZ1BTQjBhR2x6TzF4eVhHNGdJQ0FnYkdWMElHaDVjR1Z5ZEhsVmNtd2dQU0J0YzJjdVltOWtlUzVtY205dE8xeHlYRzRnSUNBZ2JHVjBJR1JwZG1sa1pXUlZVa3dnUFNCa2FYWnBaR1ZWVWt3b2FIbHdaWEowZVZWeWJDazdYSEpjYmlBZ0lDQnNaWFFnWkc5dFlXbHVJRDBnWkdsMmFXUmxaRlZTVEM1a2IyMWhhVzQ3WEhKY2JseHlYRzRnSUNBZ1kyOXVjMjlzWlM1c2IyY29KMXRFWVhSaFQySnFaV04wVW1Wd2IzSjBaWEl1WDI5dVZXNVRkV0p6WTNKcFltVmRKeXdnYlhObkxDQmtiMjFoYVc0c0lHUnBkbWxrWldSVlVrd3BPMXh5WEc1Y2NseHVJQ0FnSUM4dmJHVjBJSE4xWWlBOUlGOTBhR2x6TGw5emRXSnpZM0pwY0hScGIyNXpXMmg1Y0dWeWRIbFZjbXhkTzF4eVhHNGdJQ0FnWkdWc1pYUmxJRjkwYUdsekxsOXpkV0p6WTNKcGNIUnBiMjV6VzJoNWNHVnlkSGxWY214ZE8xeHlYRzRnSUNBZ1pHVnNaWFJsSUY5MGFHbHpMbDlwYm5acGRHRjBhVzl1YzF0b2VYQmxjblI1VlhKc1hUdGNjbHh1WEhKY2JpQWdJQ0JzWlhRZ1pYWmxiblFnUFNCN1hISmNiaUFnSUNBZ0lIUjVjR1U2SUcxelp5NWliMlI1TG5SNWNHVXNYSEpjYmlBZ0lDQWdJSFZ5YkRvZ2FIbHdaWEowZVZWeWJDeGNjbHh1SUNBZ0lDQWdaRzl0WVdsdU9pQmtiMjFoYVc0c1hISmNiaUFnSUNBZ0lHbGtaVzUwYVhSNU9pQnRjMmN1WW05a2VTNXBaR1Z1ZEdsMGVWeHlYRzRnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0F2THlCVVQwUlBPaUJqYUdWamF5QnBaaUIwYUdVZ1gyOXVVM1ZpYzJOeWFYQjBhVzl1U0dGdVpHeGxjaUJwZENCcGN5QjBhR1VnYzJGdFpTQnZaaUIwYUdVZ2MzVmljMk55YVhCMGFXOXVjejgvUDF4eVhHNGdJQ0FnYVdZZ0tGOTBhR2x6TGw5dmJsTjFZbk5qY21sd2RHbHZia2hoYm1Sc1pYSXBJSHRjY2x4dUlDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0oxVk9MVk5WUWxORFVrbFFWRWxQVGkxRlZrVk9WRG9nSnl3Z1pYWmxiblFwTzF4eVhHNGdJQ0FnSUNCZmRHaHBjeTVmYjI1VGRXSnpZM0pwY0hScGIyNUlZVzVrYkdWeUtHVjJaVzUwS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4dlJreFBWeTFKVGpvZ2JXVnpjMkZuWlNCeVpXTmxhWFpsWkNCbWNtOXRJRkpsY0c5eWRHVnlWVkpNSUdGa1pISmxjM002SUdWdGFYUmxaQ0JpZVNCaElISmxiVzkwWlNCVGVXNWphR1Z5SUMwK0lGOXZibEpsYlc5MFpVTnlaV0YwWlNBdFBpQmxkbVZ1ZEM1aFkydGNjbHh1SUNCZmIyNVNaWE53YjI1elpTaHRjMmNwSUh0Y2NseHVJQ0FnSUd4bGRDQmZkR2hwY3lBOUlIUm9hWE03WEhKY2JseHlYRzRnSUNBZ2JHVjBJR1YyWlc1MElEMGdlMXh5WEc0Z0lDQWdJQ0IwZVhCbE9pQnRjMmN1ZEhsd1pTeGNjbHh1SUNBZ0lDQWdkWEpzT2lCdGMyY3Vabkp2YlN4Y2NseHVJQ0FnSUNBZ1kyOWtaVG9nYlhObkxtSnZaSGt1WTI5a1pWeHlYRzRnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0JwWmlBb1gzUm9hWE11WDI5dVVtVnpjRzl1YzJWSVlXNWtiR1Z5S1NCN1hISmNiaUFnSUNBZ0lHTnZibk52YkdVdWJHOW5LQ2RTUlZOUVQwNVRSUzFGVmtWT1ZEb2dKeXdnWlhabGJuUXBPMXh5WEc0Z0lDQWdJQ0JmZEdocGN5NWZiMjVTWlhOd2IyNXpaVWhoYm1Sc1pYSW9aWFpsYm5RcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0x5OUdURTlYTFVsT09pQnRaWE56WVdkbElISmxZMlZwZG1Wa0lHWnliMjBnVW1Wd2IzSjBaWEpWVWt3Z1lXUmtjbVZ6Y3pvZ1pXMXBkR1ZrSUdKNUlHRWdjbVZ0YjNSbElGTjVibU5vWlhJZ0xUNGdjbVZoWkZ4eVhHNGdJRjl2YmxKbFlXUW9iWE5uS1NCN1hISmNiaUFnSUNCc1pYUWdYM1JvYVhNZ1BTQjBhR2x6TzF4eVhHNGdJQ0FnYkdWMElHOWlhbVZqZEZaaGJIVmxJRDBnWkdWbGNFTnNiMjVsS0Y5MGFHbHpMbTFsZEdGa1lYUmhLVHRjY2x4dUlDQWdJRzlpYW1WamRGWmhiSFZsTG1SaGRHRWdQU0JrWldWd1EyeHZibVVvWDNSb2FYTXVaR0YwWVNrN1hISmNiaUFnSUNCdlltcGxZM1JXWVd4MVpTNTJaWEp6YVc5dUlEMGdYM1JvYVhNdVgzWmxjbk5wYjI0N1hISmNibHh5WEc0Z0lDQWdiR1YwSUhKbGMzQnZibk5sSUQwZ2UxeHlYRzRnSUNBZ0lDQnBaRG9nYlhObkxtbGtMQ0IwZVhCbE9pQW5jbVZ6Y0c5dWMyVW5MQ0JtY205dE9pQnRjMmN1ZEc4c0lIUnZPaUJ0YzJjdVpuSnZiU3hjY2x4dUlDQWdJQ0FnWW05a2VUb2dleUJqYjJSbE9pQXlNREFzSUhaaGJIVmxPaUJ2WW1wbFkzUldZV3gxWlNCOVhISmNiaUFnSUNCOU8xeHlYRzVjY2x4dUlDQWdJR3hsZENCbGRtVnVkQ0E5SUh0Y2NseHVJQ0FnSUNBZ2RIbHdaVG9nYlhObkxuUjVjR1VzWEhKY2JpQWdJQ0FnSUhWeWJEb2diWE5uTG1aeWIyMHNYSEpjYmx4eVhHNGdJQ0FnSUNCaFkyTmxjSFE2SUNncElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNCZmRHaHBjeTVmWW5WekxuQnZjM1JOWlhOellXZGxLSEpsYzNCdmJuTmxLVHRjY2x4dUlDQWdJQ0FnZlN4Y2NseHVYSEpjYmlBZ0lDQWdJSEpsYW1WamREb2dLSEpsWVhOdmJpa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lGOTBhR2x6TGw5aWRYTXVjRzl6ZEUxbGMzTmhaMlVvZTF4eVhHNGdJQ0FnSUNBZ0lDQWdhV1E2SUcxelp5NXBaQ3dnZEhsd1pUb2dKM0psYzNCdmJuTmxKeXdnWm5KdmJUb2diWE5uTG5SdkxDQjBiem9nYlhObkxtWnliMjBzWEhKY2JpQWdJQ0FnSUNBZ0lDQmliMlI1T2lCN0lHTnZaR1U2SURRd01Td2daR1Z6WXpvZ2NtVmhjMjl1SUgxY2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQXZMeUJwWmlCMGFHVWdjbVZ4ZFdWemRHVnlJR2x6SUdGdUlHRjFkR2h2Y21selpXUWdiMkp6WlhKMlpYSXNJSFJvWlNCa1lYUmhJRzlpYW1WamRDQnBjeUJ5WlhOd2IyNWtaV1FnYjNSb1pYSjNhWE5sSUdGdUlHVjJaVzUwSUdseklIUnlhV2RuWlhKbFpGeHlYRzRnSUNBZ2JHVjBJSE4xWW5OamNtbHdkR2x2Ym5NZ1BTQmJYVHRjY2x4dVhISmNiaUFnSUNCcFppQW9YM1JvYVhNdWJXVjBZV1JoZEdFdWMzVmljMk55YVhCMGFXOXVjeWtnZTF4eVhHNGdJQ0FnSUNCemRXSnpZM0pwY0hScGIyNXpJRDBnWDNSb2FYTXViV1YwWVdSaGRHRXVjM1ZpYzJOeWFYQjBhVzl1Y3p0Y2NseHVJQ0FnSUgwZ1pXeHpaU0JwWmlBb1gzUm9hWE11WDNOMVluTmpjbWx3ZEdsdmJuTXBJSHRjY2x4dUlDQWdJQ0FnYzNWaWMyTnlhWEIwYVc5dWN5QTlJRTlpYW1WamRDNXJaWGx6S0Y5MGFHbHpMbDl6ZFdKelkzSnBjSFJwYjI1ektTNXRZWEFvWm5WdVkzUnBiMjRvYTJWNUtTQjdJSEpsZEhWeWJpQmZkR2hwY3k1ZmMzVmljMk55YVhCMGFXOXVjMXRyWlhsZExuVnliRHNnZlNrN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdhV1lnS0hOMVluTmpjbWx3ZEdsdmJuTXVhVzVrWlhoUFppaHRjMmN1Wm5KdmJTa2dJVDBnTFRFcElIdGNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgySjFjeTV3YjNOMFRXVnpjMkZuWlNoeVpYTndiMjV6WlNrN1hISmNiaUFnSUNCOUlHVnNjMlVnYVdZZ0tGOTBhR2x6TGw5dmJsSmxZV1JJWVc1a2JHVnlLU0I3WEhKY2JpQWdJQ0FnSUdOdmJuTnZiR1V1Ykc5bktDZFNSVUZFTFVWV1JVNVVPaUFuTENCbGRtVnVkQ2s3WEhKY2JpQWdJQ0FnSUY5MGFHbHpMbDl2YmxKbFlXUklZVzVrYkdWeUtHVjJaVzUwS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4dklFVjRaV04xZEdVZ2NtVnhkV1Z6ZENCeVpXTmxhWFpsWkZ4eVhHNGdJRjl2YmtWNFpXTjFkR1VvYlhObktTQjdYSEpjYmlBZ0lDQnNaWFFnWDNSb2FYTWdQU0IwYUdsek8xeHlYRzVjY2x4dUlDQWdJR2xtSUNnaGJYTm5MbUp2WkhrdWJXVjBhRzlrS1NCMGFISnZkeUFuVzBSaGRHRlBZbXBsWTNSU1pYQnZjblJsY2k1ZmIyNUZlR1ZqZFhSbFhTQnRaWFJvYjJRZ2JXbHpjMmx1WnlBbkxDQnRjMmM3WEhKY2JseHlYRzRnSUNBZ2JHVjBJSEpsYzNCdmJuTmxJRDBnZTF4eVhHNGdJQ0FnSUNCcFpEb2diWE5uTG1sa0xDQjBlWEJsT2lBbmNtVnpjRzl1YzJVbkxDQm1jbTl0T2lCdGMyY3VkRzhzSUhSdk9pQnRjMmN1Wm5KdmJTeGNjbHh1SUNBZ0lDQWdZbTlrZVRvZ2V5QmpiMlJsT2lBeU1EQWdmVnh5WEc0Z0lDQWdmVHRjY2x4dVhISmNiaUFnSUNCc1pYUWdaWFpsYm5RZ1BTQjdYSEpjYmlBZ0lDQWdJSFI1Y0dVNklHMXpaeTUwZVhCbExGeHlYRzRnSUNBZ0lDQjFjbXc2SUcxelp5NW1jbTl0TEZ4eVhHNGdJQ0FnSUNCdFpYUm9iMlE2SUcxelp5NWliMlI1TG0xbGRHaHZaQ3hjY2x4dUlDQWdJQ0FnY0dGeVlXMXpPaUJ0YzJjdVltOWtlUzV3WVhKaGJYTXNYSEpjYmx4eVhHNGdJQ0FnSUNCaFkyTmxjSFE2SUNncElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNCZmRHaHBjeTVmWW5WekxuQnZjM1JOWlhOellXZGxLSEpsYzNCdmJuTmxLVHRjY2x4dUlDQWdJQ0FnZlN4Y2NseHVYSEpjYmlBZ0lDQWdJSEpsYW1WamREb2dLSEpsWVhOdmJpa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lGOTBhR2x6TGw5aWRYTXVjRzl6ZEUxbGMzTmhaMlVvZTF4eVhHNGdJQ0FnSUNBZ0lDQWdhV1E2SUcxelp5NXBaQ3dnZEhsd1pUb2dKM0psYzNCdmJuTmxKeXdnWm5KdmJUb2diWE5uTG5SdkxDQjBiem9nYlhObkxtWnliMjBzWEhKY2JpQWdJQ0FnSUNBZ0lDQmliMlI1T2lCN0lHTnZaR1U2SURRd01Td2daR1Z6WXpvZ2NtVmhjMjl1SUgxY2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQnBaaUFvWDNSb2FYTXVYMjl1UlhobFkzVjBaVWhoYm1Sc1pYSXBJSHRjY2x4dUlDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0oxdEVZWFJoVDJKcVpXTjBVbVZ3YjNKMFpYSmRJRVZZUlVOVlZFVXRSVlpGVGxRNklDY3NJR1YyWlc1MEtUdGNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgyOXVSWGhsWTNWMFpVaGhibVJzWlhJb1pYWmxiblFwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dVhISmNibjFjY2x4dVhISmNibVY0Y0c5eWRDQmtaV1poZFd4MElFUmhkR0ZQWW1wbFkzUlNaWEJ2Y25SbGNqdGNjbHh1WEc1Y2JseHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSWdMeTljYmk4dklDNHZjM0pqTDNONWJtTm9aWEl2UkdGMFlVOWlhbVZqZEZKbGNHOXlkR1Z5TG1weklpd2lMeW9xWEhKY2Jpb2dRMjl3ZVhKcFoyaDBJREl3TVRZZ1VGUWdTVzV2ZG1IRHA4T2pieUJsSUZOcGMzUmxiV0Z6SUZOQlhISmNiaW9nUTI5d2VYSnBaMmgwSURJd01UWWdTVTVGVTBNdFNVUmNjbHh1S2lCRGIzQjVjbWxuYUhRZ01qQXhOaUJSVlU5Q1NWTWdUa1ZVVjA5U1MxTWdVMHhjY2x4dUtpQkRiM0I1Y21sbmFIUWdNakF4TmlCR1VrRlZUa2hQUmtWU0xVZEZVMFZNVEZORFNFRkdWQ0JhVlZJZ1JrOUZVa1JGVWxWT1J5QkVSVklnUVU1SFJWZEJUa1JVUlU0Z1JrOVNVME5JVlU1SElFVXVWbHh5WEc0cUlFTnZjSGx5YVdkb2RDQXlNREUySUU5U1FVNUhSU0JUUVZ4eVhHNHFJRU52Y0hseWFXZG9kQ0F5TURFMklFUmxkWFJ6WTJobElGUmxiR1ZyYjIwZ1FVZGNjbHh1S2lCRGIzQjVjbWxuYUhRZ01qQXhOaUJCY0dsNlpXVmNjbHh1S2lCRGIzQjVjbWxuYUhRZ01qQXhOaUJVUlVOSVRrbFRRMGhGSUZWT1NWWkZVbE5KVkVGVUlFSkZVa3hKVGx4eVhHNHFYSEpjYmlvZ1RHbGpaVzV6WldRZ2RXNWtaWElnZEdobElFRndZV05vWlNCTWFXTmxibk5sTENCV1pYSnphVzl1SURJdU1DQW9kR2hsSUZ3aVRHbGpaVzV6WlZ3aUtUdGNjbHh1S2lCNWIzVWdiV0Y1SUc1dmRDQjFjMlVnZEdocGN5Qm1hV3hsSUdWNFkyVndkQ0JwYmlCamIyMXdiR2xoYm1ObElIZHBkR2dnZEdobElFeHBZMlZ1YzJVdVhISmNiaW9nV1c5MUlHMWhlU0J2WW5SaGFXNGdZU0JqYjNCNUlHOW1JSFJvWlNCTWFXTmxibk5sSUdGMFhISmNiaXBjY2x4dUtpQWdJR2gwZEhBNkx5OTNkM2N1WVhCaFkyaGxMbTl5Wnk5c2FXTmxibk5sY3k5TVNVTkZUbE5GTFRJdU1GeHlYRzRxWEhKY2Jpb2dWVzVzWlhOeklISmxjWFZwY21Wa0lHSjVJR0Z3Y0d4cFkyRmliR1VnYkdGM0lHOXlJR0ZuY21WbFpDQjBieUJwYmlCM2NtbDBhVzVuTENCemIyWjBkMkZ5WlZ4eVhHNHFJR1JwYzNSeWFXSjFkR1ZrSUhWdVpHVnlJSFJvWlNCTWFXTmxibk5sSUdseklHUnBjM1J5YVdKMWRHVmtJRzl1SUdGdUlGd2lRVk1nU1ZOY0lpQkNRVk5KVXl4Y2NseHVLaUJYU1ZSSVQxVlVJRmRCVWxKQlRsUkpSVk1nVDFJZ1EwOU9SRWxVU1U5T1V5QlBSaUJCVGxrZ1MwbE9SQ3dnWldsMGFHVnlJR1Y0Y0hKbGMzTWdiM0lnYVcxd2JHbGxaQzVjY2x4dUtpQlRaV1VnZEdobElFeHBZMlZ1YzJVZ1ptOXlJSFJvWlNCemNHVmphV1pwWXlCc1lXNW5kV0ZuWlNCbmIzWmxjbTVwYm1jZ2NHVnliV2x6YzJsdmJuTWdZVzVrWEhKY2Jpb2diR2x0YVhSaGRHbHZibk1nZFc1a1pYSWdkR2hsSUV4cFkyVnVjMlV1WEhKY2Jpb3FMMXh5WEc1Y2NseHVhVzF3YjNKMElGTjVibU5QWW1wbFkzUXNJSHREYUdGdVoyVlVlWEJsTENCUFltcGxZM1JVZVhCbGZTQm1jbTl0SUNjdUwxQnliM2g1VDJKcVpXTjBKenRjY2x4dWFXMXdiM0owSUVSaGRHRlBZbXBsWTNSRGFHbHNaQ0JtY205dElDY3VMMFJoZEdGUFltcGxZM1JEYUdsc1pDYzdYSEpjYm1sdGNHOXlkQ0I3WkdWbGNFTnNiMjVsZlNCbWNtOXRJQ2N1TGk5MWRHbHNjeTkxZEdsc2N5NXFjeWM3WEhKY2JseHlYRzR2S2lwY2NseHVJQ29nVFdGcGJpQmxlSFJsYm5OcGIyNGdZMnhoYzNNZ1ptOXlJRzlpYzJWeWRtVnljeUJoYm1RZ2NtVndiM0owWlhKekxDQjNhWFJvSUdOdmJXMXZiaUJ3Y205d1pYSjBhV1Z6SUdGdVpDQnRaWFJvYjJSekxseHlYRzRnS2lCRGFHbHNaSEpsYmlCdFlXNWhaMlZ0Wlc1MElHbHpJR052YlcxdmJpQm1iM0lnYjJKelpYSjJaWEp6SUdGdVpDQnlaWEJ2Y25SbGNuTXVYSEpjYmlBcUwxeHlYRzVqYkdGemN5QkVZWFJoVDJKcVpXTjBJSHRjY2x4dUlDQXZLaUJ3Y21sMllYUmxYSEpjYmlBZ1gzWmxjbk5wYjI0NklHNTFiV0psY2x4eVhHNWNjbHh1SUNCZmIzZHVaWEk2SUVoNWNHVnlkSGxWVWt4Y2NseHVJQ0JmZFhKc09pQlBZbXBsWTNSVlVreGNjbHh1SUNCZmMyTm9aVzFoT2lCVFkyaGxiV0ZjY2x4dUlDQmZZblZ6T2lCTmFXNXBRblZ6WEhKY2JpQWdYM04wWVhSMWN6b2diMjRnZkNCd1lYVnpaV1JjY2x4dUlDQmZjM2x1WTA5aWFqb2dVM2x1WTBSaGRHRmNjbHh1WEhKY2JpQWdYMk5vYVd4a2NtVnVPaUI3SUdsa09pQkVZWFJoVDJKcVpXTjBRMmhwYkdRZ2ZWeHlYRzRnSUY5amFHbHNaSEpsYmt4cGMzUmxibVZ5Y3pvZ1cwMXpaMHhwYzNSbGJtVnlYVnh5WEc1Y2NseHVJQ0F0TFMwdFpYWmxiblFnYUdGdVpHeGxjbk10TFMwdFhISmNiaUFnWDI5dVFXUmtRMmhwYkdSSVlXNWtiR1Z5T2lBb1pYWmxiblFwSUQwK0lIWnZhV1JjY2x4dUlDQXFMMXh5WEc1Y2NseHVJQ0F2S2lwY2NseHVJQ0FnS2lCQWFXZHViM0psWEhKY2JpQWdJQ29nVTJodmRXeGtJRzV2ZENCaVpTQjFjMlZrSUdScGNtVmpkR3g1SUdKNUlFaDVjR1Z5ZEdsbGN5NGdTWFFuY3lCallXeHNaV1FnWW5rZ2RHaGxJRk41Ym1Ob1pYSWdZM0psWVhSbElHOXlJSE4xWW5OamNtbGlaU0J0WlhSb2IyUW5jMXh5WEc0Z0lDQXFMMXh5WEc0Z0lDOHZZMjl1YzNSeWRXTjBiM0lvYzNsdVkyaGxjaXdnZFhKc0xDQmpjbVZoZEdWa0xDQnlaWEJ2Y25SbGNpd2djblZ1ZEdsdFpTd2djMk5vWlcxaExDQnVZVzFsTENCcGJtbDBhV0ZzVTNSaGRIVnpMQ0JwYm1sMGFXRnNSR0YwWVN3Z1kyaHBiR1J5Wlc1ekxDQnRkWFIxWVd3Z1BTQjBjblZsTENCeVpYTjFiV1ZrSUQwZ1ptRnNjMlVzSUdSbGMyTnlhWEIwYVc5dUxDQjBZV2R6TENCeVpYTnZkWEpqWlhNc0lHOWljMlZ5ZG1WeVUzUnZjbUZuWlN3Z2NIVmliR2xqVDJKelpYSjJZWFJwYjI0cElIdGNjbHh1SUNCamIyNXpkSEoxWTNSdmNpaHBibkIxZENrZ2UxeHlYRzRnSUNBZ2JHVjBJRjkwYUdseklEMGdkR2hwY3p0Y2NseHVYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQjBhSEp2ZDAxaGJtUmhkRzl5ZVZCaGNtMU5hWE56YVc1blJYSnliM0lvY0dGeUtTQjdYSEpjYmlBZ0lDQWdJSFJvY205M0lDZGJSR0YwWVU5aWFtVmpkRjBnSnlBcklIQmhjaUFySUNjZ2JXRnVaR0YwYjNKNUlIQmhjbUZ0WlhSbGNpQnBjeUJ0YVhOemFXNW5KenRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCcGJuQjFkQzV6ZVc1amFHVnlJRDhnWDNSb2FYTXVYM041Ym1Ob1pYSWdQU0JwYm5CMWRDNXplVzVqYUdWeUlEb2dkR2h5YjNkTllXNWtZWFJ2Y25sUVlYSnRUV2x6YzJsdVowVnljbTl5S0NkemVXNWphR1Z5SnlrN1hISmNiaUFnSUNCcGJuQjFkQzUxY213Z1B5QWdYM1JvYVhNdVgzVnliQ0E5SUdsdWNIVjBMblZ5YkNBNklIUm9jbTkzVFdGdVpHRjBiM0o1VUdGeWJVMXBjM05wYm1kRmNuSnZjaWduZFhKc0p5azdYSEpjYmlBZ0lDQnBibkIxZEM1amNtVmhkR1ZrSUQ4Z1gzUm9hWE11WDJOeVpXRjBaV1FnUFNCcGJuQjFkQzVqY21WaGRHVmtJRG9nZEdoeWIzZE5ZVzVrWVhSdmNubFFZWEp0VFdsemMybHVaMFZ5Y205eUtDZGpjbVZoZEdWa0p5azdYSEpjYmlBZ0lDQnBibkIxZEM1eVpYQnZjblJsY2lBL0lGOTBhR2x6TGw5eVpYQnZjblJsY2lBOUlHbHVjSFYwTG5KbGNHOXlkR1Z5SURvZ2RHaHliM2ROWVc1a1lYUnZjbmxRWVhKdFRXbHpjMmx1WjBWeWNtOXlLQ2R5WlhCdmNuUmxjaWNwTzF4eVhHNGdJQ0FnYVc1d2RYUXVjblZ1ZEdsdFpTQS9JRjkwYUdsekxsOXlkVzUwYVcxbElEMGdhVzV3ZFhRdWNuVnVkR2x0WlNBNklIUm9jbTkzVFdGdVpHRjBiM0o1VUdGeWJVMXBjM05wYm1kRmNuSnZjaWduY25WdWRHbHRaU2NwTzF4eVhHNGdJQ0FnYVc1d2RYUXVjMk5vWlcxaElEOGdYM1JvYVhNdVgzTmphR1Z0WVNBOUlHbHVjSFYwTG5OamFHVnRZU0E2SUhSb2NtOTNUV0Z1WkdGMGIzSjVVR0Z5YlUxcGMzTnBibWRGY25KdmNpZ25jMk5vWlcxaEp5azdYSEpjYmlBZ0lDQnBibkIxZEM1dVlXMWxJRDhnWDNSb2FYTXVYMjVoYldVZ1BTQnBibkIxZEM1dVlXMWxJRG9nZEdoeWIzZE5ZVzVrWVhSdmNubFFZWEp0VFdsemMybHVaMFZ5Y205eUtDZHVZVzFsSnlrN1hISmNibHh5WEc1Y2NseHVJQ0FnSUY5MGFHbHpMbDl6ZEdGMGRYTWdQU0JwYm5CMWRDNXpkR0YwZFhNN1hISmNibHh5WEc0Z0lDQWdhV1lnS0dsdWNIVjBMbVJoZEdFcElIdGNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgzTjVibU5QWW1vZ1BTQnVaWGNnVTNsdVkwOWlhbVZqZENocGJuQjFkQzVrWVhSaEtUdGNjbHh1SUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lGOTBhR2x6TGw5emVXNWpUMkpxSUQwZ2JtVjNJRk41Ym1OUFltcGxZM1FvZTMwcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ1gzUm9hWE11WDJOb2FXeGtjbVZ1Y3lBOUlHbHVjSFYwTG1Ob2FXeGtjbVZ1Y3p0Y2NseHVYSEpjYmlBZ0lDQXZMMVJQUkU4NklFWnZjaUJHZFhKMGFHVnlJRk4wZFdSNVhISmNiaUFnSUNCZmRHaHBjeTVmYlhWMGRXRnNRWFYwYUdWdWRHbGpZWFJwYjI0Z1BTQnBibkIxZEM1dGRYUjFZV3c3WEhKY2JseHlYRzRnSUNBZ1gzUm9hWE11WDNabGNuTnBiMjRnUFNBd08xeHlYRzRnSUNBZ1gzUm9hWE11WDJOb2FXeGtTV1FnUFNBd08xeHlYRzRnSUNBZ1gzUm9hWE11WDJOb2FXeGtjbVZ1VEdsemRHVnVaWEp6SUQwZ1cxMDdYSEpjYmx4eVhHNGdJQ0FnWDNSb2FYTXVYM0psYzNWdFpXUWdQU0JwYm5CMWRDNXlaWE4xYldVN1hISmNibHh5WEc0Z0lDQWdhV1lnS0dsdWNIVjBMbkpsYzNWdFpTa2dleUJmZEdocGN5NWZkbVZ5YzJsdmJpQTlJR2x1Y0hWMExuWmxjbk5wYjI0N0lIMWNjbHh1WEhKY2JpQWdJQ0JmZEdocGN5NWZiM2R1WlhJZ1BTQnBibkIxZEM1emVXNWphR1Z5TGw5dmQyNWxjanRjY2x4dUlDQWdJRjkwYUdsekxsOWlkWE1nUFNCcGJuQjFkQzV6ZVc1amFHVnlMbDlpZFhNN1hISmNibHh5WEc0Z0lDQWdhV1lnS0dsdWNIVjBMbVJsYzJOeWFYQjBhVzl1S1NCZmRHaHBjeTVmWkdWelkzSnBjSFJwYjI0Z1BTQnBibkIxZEM1a1pYTmpjbWx3ZEdsdmJqdGNjbHh1SUNBZ0lHbG1JQ2hwYm5CMWRDNTBZV2R6S1NCZmRHaHBjeTVmZEdGbmN5QTlJR2x1Y0hWMExuUmhaM003WEhKY2JpQWdJQ0JwWmlBb2FXNXdkWFF1Y21WemIzVnlZMlZ6S1NCZmRHaHBjeTVmY21WemIzVnlZMlZ6SUQwZ2FXNXdkWFF1Y21WemIzVnlZMlZ6TzF4eVhHNGdJQ0FnYVdZZ0tHbHVjSFYwTG05aWMyVnlkbVZ5VTNSdmNtRm5aU2tnWDNSb2FYTXVYMjlpYzJWeWRtVnlVM1J2Y21GblpTQTlJR2x1Y0hWMExtOWljMlZ5ZG1WeVUzUnZjbUZuWlR0Y2NseHVJQ0FnSUdsbUlDaHBibkIxZEM1d2RXSnNhV05QWW5ObGNuWmhkR2x2YmlrZ1gzUm9hWE11WDNCMVlteHBZMDlpYzJWeWRtRjBhVzl1SUQwZ2FXNXdkWFF1Y0hWaWJHbGpUMkp6WlhKMllYUnBiMjQ3WEhKY2JseHlYRzRnSUNBZ1gzUm9hWE11WDIxbGRHRmtZWFJoSUQwZ1QySnFaV04wTG1GemMybG5iaWhwYm5CMWRDazdYSEpjYmlBZ0lDQmZkR2hwY3k1ZmJXVjBZV1JoZEdFdWJHRnpkRTF2WkdsbWFXVmtJRDBnWDNSb2FYTXVYMjFsZEdGa1lYUmhMbU55WldGMFpXUTdYSEpjYmx4eVhHNGdJQ0FnWkdWc1pYUmxJRjkwYUdsekxsOXRaWFJoWkdGMFlTNWtZWFJoTzF4eVhHNGdJQ0FnWkdWc1pYUmxJRjkwYUdsekxsOXRaWFJoWkdGMFlTNXplVzVqYUdWeU8xeHlYRzRnSUNBZ1pHVnNaWFJsSUY5MGFHbHpMbDl0WlhSaFpHRjBZUzVoZFhSb2IzSnBjMlU3WEhKY2JseHlYRzRnSUgxY2NseHVYSEpjYmlBZ1gyZGxkRXhoYzNSRGFHbHNaRWxrS0NrZ2UxeHlYRzRnSUNBZ2JHVjBJRjkwYUdseklEMGdkR2hwY3p0Y2NseHVYSEpjYmlBZ0lDQnNaWFFnWTJocGJHUkpaRWx1ZENBOUlEQTdYSEpjYmlBZ0lDQnNaWFFnWTJocGJHUkpaRk4wY21sdVp5QTlJRjkwYUdsekxsOXZkMjVsY2lBcklDY2pKeUFySUdOb2FXeGtTV1JKYm5RN1hISmNibHh5WEc1Y2NseHVJQ0FnSUU5aWFtVmpkQzVyWlhsektGOTBhR2x6TGw5amFHbHNaSEpsYm5NcExtWnBiSFJsY2lnb2EyVjVLU0E5UGlCN1hISmNiaUFnSUNBZ0lHbG1JQ2hmZEdocGN5NWZZMmhwYkdSeVpXNXpXMnRsZVYwdVkyaHBiR1JKWkNBK0lHTm9hV3hrU1dSVGRISnBibWNwSUh0Y2NseHVJQ0FnSUNBZ0lDQmphR2xzWkVsa1UzUnlhVzVuSUQwZ1gzUm9hWE11WDJOb2FXeGtjbVZ1YzF0clpYbGRMbU5vYVd4a1NXUTdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDBwTzF4eVhHNWNjbHh1SUNBZ0lISmxkSFZ5YmlCamFHbHNaRWxrU1c1MElEMGdUblZ0WW1WeUtHTm9hV3hrU1dSVGRISnBibWN1YzNCc2FYUW9KeU1uS1ZzeFhTazdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQmZZV3hzYjJOaGRHVk1hWE4wWlc1bGNuTW9LU0I3WEhKY2JpQWdJQ0JzWlhRZ1gzUm9hWE1nUFNCMGFHbHpPMXh5WEc1Y2NseHVJQ0FnSUd4bGRDQmphR2xzWkVKaGMyVlZVa3dnUFNCZmRHaHBjeTVmZFhKc0lDc2dKeTlqYUdsc1pISmxiaThuTzF4eVhHNGdJQ0FnWTI5dWMyOXNaUzVzYjJjb0oxdEVZWFJoSUU5aWFtVmpkQ0F0SUVGc2JHOWpZWFJsVEdsemRHVnVaWEp6WFNBdElDY3NJRjkwYUdsekxsOWphR2xzWkhKbGJuTXBPMXh5WEc0Z0lDQWdhV1lnS0Y5MGFHbHpMbDlqYUdsc1pISmxibk1wSUh0Y2NseHVJQ0FnSUNBZ1gzUm9hWE11WDJOb2FXeGtjbVZ1Y3k1bWIzSkZZV05vS0NoamFHbHNaQ2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJR3hsZENCamFHbHNaRlZTVENBOUlHTm9hV3hrUW1GelpWVlNUQ0FySUdOb2FXeGtPMXh5WEc0Z0lDQWdJQ0FnSUd4bGRDQnNhWE4wWlc1bGNpQTlJRjkwYUdsekxsOWlkWE11WVdSa1RHbHpkR1Z1WlhJb1kyaHBiR1JWVWt3c0lDaHRjMmNwSUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUM4dmFXZHViM0psSUcxelp5QnpaVzUwSUdKNUlHaHBiWE5sYkdaY2NseHVJQ0FnSUNBZ0lDQWdJR2xtSUNodGMyY3Vabkp2YlNBaFBUMGdkR2hwY3k1ZmIzZHVaWElwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0owUmhkR0ZQWW1wbFkzUXRRMmhwYkdSeVpXNHRVa05XT2lBbkxDQnRjMmNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6ZDJsMFkyZ2dLRzF6Wnk1MGVYQmxLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQW5ZM0psWVhSbEp6b2dYM1JvYVhNdVgyOXVRMmhwYkdSRGNtVmhkR1VvYlhObktUc2dZbkpsWVdzN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FuWkdWc1pYUmxKem9nWTI5dWMyOXNaUzVzYjJjb2JYTm5LVHNnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb2dYM1JvYVhNdVgyTm9ZVzVuWlVOb2FXeGtjbVZ1S0cxelp5azdJR0p5WldGck8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lGOTBhR2x6TGw5amFHbHNaSEpsYmt4cGMzUmxibVZ5Y3k1d2RYTm9LR3hwYzNSbGJtVnlLVHRjY2x4dUlDQWdJQ0FnZlNrN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNWNjbHh1SUNCZmNtVnNaV0Z6WlV4cGMzUmxibVZ5Y3lncElIdGNjbHh1SUNBZ0lHeGxkQ0JmZEdocGN5QTlJSFJvYVhNN1hISmNibHh5WEc0Z0lDQWdYM1JvYVhNdVgyTm9hV3hrY21WdVRHbHpkR1Z1WlhKekxtWnZja1ZoWTJnb0tHeHBjM1JsYm1WeUtTQTlQaUI3WEhKY2JpQWdJQ0FnSUd4cGMzUmxibVZ5TG5KbGJXOTJaU2dwTzF4eVhHNGdJQ0FnZlNrN1hISmNibHh5WEc0Z0lDQWdhV1lnS0Y5MGFHbHpMbDlqYUdsc1pISmxiazlpYW1WamRITXBJSHRjY2x4dUlDQWdJQ0FnVDJKcVpXTjBMbXRsZVhNb1gzUm9hWE11WDJOb2FXeGtjbVZ1VDJKcVpXTjBjeWt1Wm05eVJXRmphQ2dvYTJWNUtTQTlQaUI3WEhKY2JpQWdJQ0FnSUNBZ1gzUm9hWE11WDJOb2FXeGtjbVZ1VDJKcVpXTjBjMXRyWlhsZExsOXlaV3hsWVhObFRHbHpkR1Z1WlhKektDazdYSEpjYmlBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dVhISmNiaUFnTHlvcVhISmNiaUFnSUNwY2NseHVJQ0FnS2k5Y2NseHVJQ0J5WlhOMWJXVkRhR2xzWkhKbGJuTW9ZMmhwYkdSeVpXNXpLU0I3WEhKY2JpQWdJQ0JzWlhRZ1gzUm9hWE1nUFNCMGFHbHpPMXh5WEc1Y2NseHVJQ0FnSUd4bGRDQmphR2xzWkVsa1UzUnlhVzVuSUQwZ2RHaHBjeTVmYjNkdVpYSWdLeUFuSXljZ0t5QjBhR2x6TGw5amFHbHNaRWxrTzF4eVhHNWNjbHh1SUNBZ0lHbG1JQ2hqYUdsc1pISmxibk1nSmlZZ0lWOTBhR2x6TGw5amFHbHNaSEpsYms5aWFtVmpkSE1wSUh0Y2NseHVJQ0FnSUNBZ1gzUm9hWE11WDJOb2FXeGtjbVZ1VDJKcVpXTjBjeUE5SUh0OU8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzh2YzJWMGRYQWdZMmhwYkdSeVpXNXpJR1JoZEdFZ1puSnZiU0J6ZFdKelkzSnBjSFJwYjI1Y2NseHVJQ0FnSUU5aWFtVmpkQzVyWlhsektHTm9hV3hrY21WdWN5a3VabTl5UldGamFDZ29ZMmhwYkdSeVpXNVNaWE52ZFhKalpTa2dQVDRnZTF4eVhHNGdJQ0FnSUNCc1pYUWdZMmhwYkdSeVpXNGdQU0JqYUdsc1pISmxibk5iWTJocGJHUnlaVzVTWlhOdmRYSmpaVjA3WEhKY2JseHlYRzRnSUNBZ0lDQlBZbXBsWTNRdWEyVjVjeWhqYUdsc1pISmxiaWt1Wm05eVJXRmphQ2dvWTJocGJHUkpaQ2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJR3hsZENCamFHbHNaRWx1Y0hWMElEMGdZMmhwYkdSeVpXNWJZMmhwYkdSSlpGMHVkbUZzZFdVN1hISmNiaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvSjF0RVlYUmhUMkpxWldOMExuSmxjM1Z0WlVOb2FXeGtjbVZ1YzEwZ2JtVjNJRVJoZEdGUFltcGxZM1JEYUdsc1pEb2dKeXdnWTJocGJHUnlaVzVTWlhOdmRYSmpaU3dnWTJocGJHUnlaVzRzSUdOb2FXeGtTVzV3ZFhRcE8xeHlYRzRnSUNBZ0lDQWdJR05vYVd4a1NXNXdkWFF1Y0dGeVpXNTBUMkpxWldOMElEMGdYM1JvYVhNN1hISmNiaUFnSUNBZ0lDQWdZMmhwYkdSSmJuQjFkQzV3WVhKbGJuUWdQU0JmZEdocGN5NWZkWEpzTzF4eVhHNGdJQ0FnSUNBZ0lGOTBhR2x6TGw5amFHbHNaSEpsYms5aWFtVmpkSE5iWTJocGJHUkpaRjBnUFNCdVpYY2dSR0YwWVU5aWFtVmpkRU5vYVd4a0tHTm9hV3hrU1c1d2RYUXBPMXh5WEc0Z0lDQWdJQ0FnSUY5MGFHbHpMbDlqYUdsc1pISmxiazlpYW1WamRITmJZMmhwYkdSSlpGMHVhV1JsYm5ScGRIa2dQU0JqYUdsc1pISmxibHRqYUdsc1pFbGtYUzVwWkdWdWRHbDBlVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdhV1lnS0dOb2FXeGtTV1FnUGlCamFHbHNaRWxrVTNSeWFXNW5LU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQmphR2xzWkVsa1UzUnlhVzVuSUQwZ1kyaHBiR1JKWkR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHTnZibk52YkdVdWJHOW5LQ2RiUkdGMFlVOWlhbVZqZEZKbGNHOXlkR1Z5TG5KbGMzVnRaVU5vYVd4a2NtVnVjMTBnTFNCeVpYTjFiV1ZrT2lBbkxDQjBhR2x6TGw5amFHbHNaSEpsYms5aWFtVmpkSE5iWTJocGJHUkpaRjBwTzF4eVhHNGdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lIMHBPMXh5WEc1Y2NseHVJQ0FnSUhSb2FYTXVYMk5vYVd4a1NXUWdQU0JPZFcxaVpYSW9ZMmhwYkdSSlpGTjBjbWx1Wnk1emNHeHBkQ2duSXljcFd6RmRLVHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzhxS2x4eVhHNGdJQ0FxSUVGc2JDQk5aWFJoWkdGMFlTQmhZbTkxZENCMGFHVWdSR0YwWVNCUFltcGxZM1JjY2x4dUlDQWdLaUJBZEhsd1pTQjdUMkpxWldOMGZTQXRYSEpjYmlBZ0lDb3ZYSEpjYmx4eVhHNGdJR2RsZENCdFpYUmhaR0YwWVNncElIc2djbVYwZFhKdUlIUm9hWE11WDIxbGRHRmtZWFJoT3lCOVhISmNibHh5WEc0Z0lDOHFLbHh5WEc0Z0lDQXFJRTlpYW1WamRDQlZVa3dnYjJZZ2NtVndiM0owWlhJZ2IzSWdiMkp6WlhKMlpYSmNjbHh1SUNBZ0tpQkFkSGx3WlNCN1QySnFaV04wVlZKTWZWeHlYRzRnSUNBcUwxeHlYRzRnSUdkbGRDQjFjbXdvS1NCN0lISmxkSFZ5YmlCMGFHbHpMbDkxY213N0lIMWNjbHh1WEhKY2JpQWdMeW9xWEhKY2JpQWdJQ29nVDJKcVpXTjBJSE5qYUdWdFlTQlZVa3dnS0hSb2FYTWdabWxsYkdRZ2FYTWdibTkwSUhsbGRDQnpkR0ZpYkdVc0lHRnVaQ0JwY3lCemRXSnphbVZqZENCMGJ5QmphR0Z1WjJVcFhISmNiaUFnSUNvZ1FIUjVjR1VnZTFOamFHVnRZVlZTVEgxY2NseHVJQ0FnS2k5Y2NseHVJQ0JuWlhRZ2MyTm9aVzFoS0NrZ2V5QnlaWFIxY200Z2RHaHBjeTVmYzJOb1pXMWhPeUI5WEhKY2JseHlYRzRnSUM4cUtseHlYRzRnSUNBcUlGTjBZWFIxY3lCdlppQjBhR1VnY21Wd2IzSjBaWElnYjNJZ2IySnpaWEoyWlhJZ1kyOXVibVZqZEdsdmJpQW9kR2hwY3lCbWFXVnNaQ0JwY3lCdWIzUWdlV1YwSUhOMFlXSnNaU3dnWVc1a0lHbHpJSE4xWW5OcVpXTjBJSFJ2SUdOb1lXNW5aU2xjY2x4dUlDQWdLaUJBZEhsd1pTQjdVM1JoZEhWemZTQXRJRVZ1ZFcwZ2IyWTZJRzl1SUh3Z2NHRjFjMlZrWEhKY2JpQWdJQ292WEhKY2JpQWdaMlYwSUhOMFlYUjFjeWdwSUhzZ2NtVjBkWEp1SUhSb2FYTXVYM04wWVhSMWN6c2dmVnh5WEc1Y2NseHVJQ0F2S2lwY2NseHVJQ0FnS2lCRVlYUmhJSE4wY25WamRIVnlaU0IwYnlCaVpTQnplVzVqYUhKdmJtbDZaV1F1WEhKY2JpQWdJQ29nUUhSNWNHVWdlMHBUVDA1OUlDMGdTbE5QVGlCemRISjFZM1IxY21VZ2RHaGhkQ0J6YUc5MWJHUWdabTlzYkc5M0lIUm9aU0JrWldacGJtVmtJSE5qYUdWdFlTd2dhV1lnWVc1NUxseHlYRzRnSUNBcUwxeHlYRzRnSUdkbGRDQmtZWFJoS0NrZ2V5QnlaWFIxY200Z2RHaHBjeTVmYzNsdVkwOWlhaTVrWVhSaE95QjlYSEpjYmx4eVhHNGdJQzhxS2x4eVhHNGdJQ0FxSUVGc2JDQmpjbVZoZEdWa0lHTm9hV3hrY21WdUozTWdjMmx1WTJVZ2RHaGxJSE4xWW5OamNtbHdkR2x2Yml3Z1pHOWxjMjRuZENCamIyNTBZV2x1SUdGc2JDQmphR2xzWkhKbGJpZHpJSE5wYm1ObElISmxjRzl5ZEdWeUlHTnlaV0YwYVc5dUxseHlYRzRnSUNBcUlFQjBlWEJsSUh0UFltcGxZM1E4UTJocGJHUkpaQ3dnUkdGMFlVOWlhbVZqZEVOb2FXeGtQbjFjY2x4dUlDQWdLaTljY2x4dUlDQm5aWFFnWTJocGJHUnlaVzV6S0NrZ2V5QnlaWFIxY200Z2RHaHBjeTVmWTJocGJHUnlaVzVQWW1wbFkzUnpPeUI5WEhKY2JseHlYRzRnSUM4cUtseHlYRzRnSUNBcUlFQnBaMjV2Y21WY2NseHVJQ0FnS2k5Y2NseHVJQ0J3WVhWelpTZ3BJSHRjY2x4dUlDQWdJQzh2VkU5RVR6b2dkR2hwY3lCbVpXRjBkWEpsSUc1bFpXUnpJRzF2Y21VZ1lXNWhiR2x6WlZ4eVhHNGdJQ0FnZEdoeWIzY2dKMDV2ZENCcGJYQnNaVzFsYm5SbFpDYzdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQXZLaXBjY2x4dUlDQWdLaUJBYVdkdWIzSmxYSEpjYmlBZ0lDb3ZYSEpjYmlBZ2NtVnpkVzFsS0NrZ2UxeHlYRzRnSUNBZ0x5OVVUMFJQT2lCMGFHbHpJR1psWVhSMWNtVWdibVZsWkhNZ2JXOXlaU0JoYm1Gc2FYTmxYSEpjYmlBZ0lDQjBhSEp2ZHlBblRtOTBJR2x0Y0d4bGJXVnVkR1ZrSnp0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4cUtseHlYRzRnSUNBcUlFQnBaMjV2Y21WY2NseHVJQ0FnS2k5Y2NseHVJQ0J6ZEc5d0tDa2dlMXh5WEc0Z0lDQWdMeTlVVDBSUE9pQnphRzkxYkdRZ2NtVnRiM1psSUhSb1pTQnpkV0p6WTNKcGNIUnBiMjRnWVc1a0lITmxibVFnYldWemMyRm5aU0IxYm5OMVluTmpjbWxpWlQ5Y2NseHVJQ0FnSUhSb2NtOTNJQ2RPYjNRZ2FXMXdiR1Z0Wlc1MFpXUW5PMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeW9xWEhKY2JpQWdJQ29nUTNKbFlYUmxJR0Z1WkNCaFpHUWdZU0JFWVhSaFQySnFaV04wUTJocGJHUWdkRzhnWVNCamFHbHNaSEpsYmlCamIyeHNaV04wYVc5dUxseHlYRzRnSUNBcUlFQndZWEpoYlNCN1UzUnlhVzVuZlNCamFHbHNaSEpsYmlBdElFTm9hV3hrY21WdUlHNWhiV1VnZDJobGNtVWdkR2hsSUdOb2FXeGtJR2x6SUdGa1pHVmtMbHh5WEc0Z0lDQXFJRUJ3WVhKaGJTQjdTbE5QVG4wZ2FXNXBkR2xoYkVSaGRHRWdMU0JKYm1sMGFXRnNJR1JoZEdFZ2IyWWdkR2hsSUdOb2FXeGtYSEpjYmlBZ0lDb2dRSEJoY21GdElDQjdUV1Z6YzJGblpVSnZaSGxKWkdWdWRHbDBlWDBnYVdSbGJuUnBkSGtnTFNBb2IzQjBhVzl1WVd3cElHbGtaVzUwYVhSNUlHUmhkR0VnZEc4Z1ltVWdZV1JrWldRZ2RHOGdhV1JsYm5ScGRIa2dkR2hsSUhWelpYSWdjbVZ3YjNKMFpYSXVJRlJ2SUdKbElIVnpaV1FnWm05eUlHeGxaMkZqZVNCcFpHVnVkR2wwYVdWekxseHlYRzRnSUNBcUlFQndZWEpoYlNBZ2UxTjVibU5EYUdsc1pFMWxkR0ZrWVhSaGZTQnBibkIxZENBdElDaHZjSFJwYjI1aGJDa2dRV3hzSUdGa1pHbDBhVzl1WVd3Z2JXVjBZV1JoZEdFZ1lXSnZkWFFnZEdobElFUmhkR0ZQWW1wbFkzUkRhR2xzWkM1Y2NseHVJQ0FnS2lCQWNtVjBkWEp1SUh0UWNtOXRhWE5sUEVSaGRHRlBZbXBsWTNSRGFHbHNaRDU5SUMwZ1VtVjBkWEp1SUZCeWIyMXBjMlVnZEc4Z1lTQnVaWGNnUkdGMFlVOWlhbVZqZEVOb2FXeGtMbHh5WEc0Z0lDQXFMMXh5WEc1Y2NseHVJQ0JoWkdSRGFHbHNaQ2hqYUdsc1pISmxiaXdnYVc1cGRHbGhiRVJoZEdFc0lHbGtaVzUwYVhSNUxDQnBibkIxZENrZ2UxeHlYRzRnSUNBZ2JHVjBJRjkwYUdseklEMGdkR2hwY3p0Y2NseHVYSEpjYmlBZ0lDQXZMM0psZEhWeWJuTWdjSEp2YldselpTd2dhVzRnZEdobElHWjFkSFZ5WlN3Z2RHaGxJRUZRU1NCdFlYa2dZMmhoYm1kbElIUnZJR0Z6ZVc1amFISnZibTkxY3lCallXeHNYSEpjYmlBZ0lDQnlaWFIxY200Z2JtVjNJRkJ5YjIxcGMyVW9LSEpsYzI5c2RtVXBJRDArSUh0Y2NseHVYSEpjYmlBZ0lDQWdJR3hsZENCamFHbHNaRWx1Y0hWMElDQTlJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJR2x1Y0hWMEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUM4dlkzSmxZWFJsSUc1bGR5QmphR2xzWkNCMWJtbHhkV1VnU1VRc0lHSmhjMlZrSUc5dUlHaDVjR1Z5ZEhsVlVreGNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgyTm9hV3hrU1dRckt6dGNjbHh1SUNBZ0lDQWdZMmhwYkdSSmJuQjFkQzUxY213Z1BTQmZkR2hwY3k1ZmIzZHVaWElnS3lBbkl5Y2dLeUJmZEdocGN5NWZZMmhwYkdSSlpEdGNjbHh1SUNBZ0lDQWdiR1YwSUcxelowTm9hV3hrVUdGMGFDQTlJRjkwYUdsekxsOTFjbXdnS3lBbkwyTm9hV3hrY21WdUx5Y2dLeUJqYUdsc1pISmxianRjY2x4dVhISmNiaUFnSUNBZ0lHTm9hV3hrU1c1d2RYUXVjR0Z5Wlc1MFQySnFaV04wSUQwZ1gzUm9hWE03WEhKY2JpQWdJQ0FnSUdOb2FXeGtTVzV3ZFhRdVpHRjBZU0E5SUdsdWFYUnBZV3hFWVhSaE8xeHlYRzRnSUNBZ0lDQmphR2xzWkVsdWNIVjBMbkpsY0c5eWRHVnlJRDBnWDNSb2FYTXVYMjkzYm1WeU8xeHlYRzRnSUNBZ0lDQmphR2xzWkVsdWNIVjBMbU55WldGMFpXUWdQU0FvYm1WM0lFUmhkR1VwTG5SdlNWTlBVM1J5YVc1bktDazdYSEpjYmlBZ0lDQWdJR05vYVd4a1NXNXdkWFF1Y25WdWRHbHRaU0E5SUY5MGFHbHpMbDl5ZFc1MGFXMWxPMXh5WEc0Z0lDQWdJQ0JqYUdsc1pFbHVjSFYwTG5OamFHVnRZU0E5SUY5MGFHbHpMbDl6WTJobGJXRTdYSEpjYmlBZ0lDQWdJR05vYVd4a1NXNXdkWFF1Y0dGeVpXNTBJRDBnWDNSb2FYTXVkWEpzTzF4eVhHNWNjbHh1SUNBZ0lDQWdiR1YwSUc1bGQwTm9hV3hrSUQwZ2JtVjNJRVJoZEdGUFltcGxZM1JEYUdsc1pDaGphR2xzWkVsdWNIVjBLVHRjY2x4dVhISmNiaUFnSUNBZ0lHeGxkQ0JpYjJSNVZtRnNkV1VnUFNCdVpYZERhR2xzWkM1dFpYUmhaR0YwWVR0Y2NseHVJQ0FnSUNBZ1ltOWtlVlpoYkhWbExtUmhkR0VnUFNCcGJtbDBhV0ZzUkdGMFlUdGNjbHh1WEhKY2JpQWdJQ0FnSUM4dlJreFBWeTFQVlZRNklIUm9hWE1nYldWemMyRm5aU0IzYVd4c0lHSmxJSE5sYm5RZ1pHbHlaV04wYkhrZ2RHOGdZU0J5WlhOdmRYSmpaU0JqYUdsc1pDQmhaR1J5WlhOek9pQk5aWE56WVdkbFFuVnpYSEpjYmlBZ0lDQWdJR3hsZENCeVpYRjFaWE4wVFhObklEMGdlMXh5WEc0Z0lDQWdJQ0FnSUhSNWNHVTZJQ2RqY21WaGRHVW5MQ0JtY205dE9pQmZkR2hwY3k1ZmIzZHVaWElzSUhSdk9pQnRjMmREYUdsc1pGQmhkR2dzWEhKY2JpQWdJQ0FnSUNBZ1ltOWtlVG9nZXlCeVpYTnZkWEpqWlRvZ1kyaHBiR1JKYm5CMWRDNTFjbXdzSUhaaGJIVmxPaUJpYjJSNVZtRnNkV1VnZlZ4eVhHNGdJQ0FnSUNCOU8xeHlYRzVjY2x4dUlDQWdJQ0FnYVdZZ0tHbGtaVzUwYVhSNUtTQWdJQ0FnSUh0Y2NseHVJQ0FnSUNBZ0lDQnVaWGREYUdsc1pDNXBaR1Z1ZEdsMGVTQTlJR2xrWlc1MGFYUjVPMXh5WEc0Z0lDQWdJQ0FnSUhKbGNYVmxjM1JOYzJjdVltOWtlUzVwWkdWdWRHbDBlU0E5SUdsa1pXNTBhWFI1TzF4eVhHNGdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0F2TDFSUFJFODZJRVp2Y2lCR2RYSjBhR1Z5SUZOMGRXUjVYSEpjYmlBZ0lDQWdJR2xtSUNnaFgzUm9hWE11WDIxMWRIVmhiRUYxZEdobGJuUnBZMkYwYVc5dUtTQnlaWEYxWlhOMFRYTm5MbUp2WkhrdWJYVjBkV0ZzUVhWMGFHVnVkR2xqWVhScGIyNGdQU0JmZEdocGN5NWZiWFYwZFdGc1FYVjBhR1Z1ZEdsallYUnBiMjQ3WEhKY2JseHlYRzRnSUNBZ0lDQnNaWFFnYlhOblNXUWdQU0JmZEdocGN5NWZZblZ6TG5CdmMzUk5aWE56WVdkbEtISmxjWFZsYzNSTmMyY3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29KMXRFWVhSaFQySnFaV04wTG1Ga1pFTm9hV3hrWFNCaFpHUmxaQ0FuTENCdVpYZERhR2xzWkN3Z2JYTm5TV1FzSUdKdlpIbFdZV3gxWlNrN1hISmNibHh5WEc0Z0lDQWdJQ0J1WlhkRGFHbHNaQzV2YmtOb1lXNW5aU2dvWlhabGJuUXBJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQmZkR2hwY3k1ZmIyNURhR0Z1WjJVb1pYWmxiblFzSUhzZ2NHRjBhRG9nYlhOblEyaHBiR1JRWVhSb0xDQmphR2xzWkVsa09pQmphR2xzWkVsdWNIVjBMblZ5YkNCOUtUdGNjbHh1SUNBZ0lDQWdmU2s3WEhKY2JseHlYRzRnSUNBZ0lDQnBaaUFvSVY5MGFHbHpMbDlqYUdsc1pISmxiazlpYW1WamRITXBJSHNnWDNSb2FYTXVYMk5vYVd4a2NtVnVUMkpxWldOMGN5QTlJSHQ5T3lCOVhISmNibHh5WEc0Z0lDQWdJQ0JmZEdocGN5NWZZMmhwYkdSeVpXNVBZbXBsWTNSelcyTm9hV3hrU1c1d2RYUXVkWEpzWFNBOUlHNWxkME5vYVd4a08xeHlYRzVjY2x4dUlDQWdJQ0FnY21WemIyeDJaU2h1WlhkRGFHbHNaQ2s3WEhKY2JpQWdJQ0I5S1R0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4cUtseHlYRzRnSUNBcUlGTmxkSFZ3SUhSb1pTQmpZV3hzWW1GamF5QjBieUJ3Y205alpYTnpJR055WldGMFpTQmhibVFnWkdWc1pYUmxJRzltSUdOb2FXeGtjbVZ1Y3k1Y2NseHVJQ0FnS2lCQWNHRnlZVzBnZTJaMWJtTjBhVzl1S0dWMlpXNTBPaUJOYzJkRmRtVnVkQ2w5SUdOaGJHeGlZV05yWEhKY2JpQWdJQ292WEhKY2JpQWdiMjVCWkdSRGFHbHNaQ2hqWVd4c1ltRmpheWtnZTF4eVhHNGdJQ0FnZEdocGN5NWZiMjVCWkdSRGFHbHNaSEpsYmtoaGJtUnNaWElnUFNCallXeHNZbUZqYXp0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4dlJreFBWeTFKVGpvZ2JXVnpjMkZuWlNCeVpXTmxhWFpsWkNCbWNtOXRJR0VnY21WdGIzUmxJRVJoZEdGUFltcGxZM1FnTFQ0Z1lXUmtRMmhwYkdSY2NseHVJQ0JmYjI1RGFHbHNaRU55WldGMFpTaHRjMmNwSUh0Y2NseHVJQ0FnSUd4bGRDQmZkR2hwY3lBOUlIUm9hWE03WEhKY2JpQWdJQ0JzWlhRZ1kyaHBiR1JKYm5CMWRDQTlJR1JsWlhCRGJHOXVaU2h0YzJjdVltOWtlUzUyWVd4MVpTazdYSEpjYmlBZ0lDQmphR2xzWkVsdWNIVjBMbkJoY21WdWRFOWlhbVZqZENBOUlGOTBhR2x6TzF4eVhHNWNjbHh1SUNBZ0lHTnZibk52YkdVdWJHOW5LQ2RiUkdGMFlVOWlhbVZqZEM1ZmIyNURhR2xzWkVOeVpXRjBaVjBnY21WalpXbDJaV1JDZVNBbklDc2dYM1JvYVhNdVgyOTNibVZ5SUNzZ0p5QTZJQ2NzSUcxelp5azdYSEpjYmlBZ0lDQnNaWFFnYm1WM1EyaHBiR1FnUFNCdVpYY2dSR0YwWVU5aWFtVmpkRU5vYVd4a0tHTm9hV3hrU1c1d2RYUXBPMXh5WEc0Z0lDQWdibVYzUTJocGJHUXVhV1JsYm5ScGRIa2dQU0J0YzJjdVltOWtlUzVwWkdWdWRHbDBlVHRjY2x4dVhISmNiaUFnSUNCcFppQW9JVjkwYUdsekxsOWphR2xzWkhKbGJrOWlhbVZqZEhNcElIc2dYM1JvYVhNdVgyTm9hV3hrY21WdVQySnFaV04wY3lBOUlIdDlPeUI5WEhKY2JseHlYRzRnSUNBZ1gzUm9hWE11WDJOb2FXeGtjbVZ1VDJKcVpXTjBjMXRqYUdsc1pFbHVjSFYwTG5WeWJGMGdQU0J1WlhkRGFHbHNaRHRjY2x4dVhISmNiaUFnSUNBdkwzUnZaRzg2SUhKbGJXOTJaU0J5WlhOd2IyNXpaU0JpWld4dmQxeHlYRzRnSUNBZ2MyVjBWR2x0Wlc5MWRDZ29LU0E5UGlCN1hISmNiaUFnSUNBZ0lDOHZSa3hQVnkxUFZWUTZJSGRwYkd3Z1pteHZkeUIwYnlCRVlYUmhUMkpxWldOMFEyaHBiR1FnTFQ0Z1gyOXVVbVZ6Y0c5dWMyVmNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgySjFjeTV3YjNOMFRXVnpjMkZuWlNoN1hISmNiaUFnSUNBZ0lDQWdhV1E2SUcxelp5NXBaQ3dnZEhsd1pUb2dKM0psYzNCdmJuTmxKeXdnWm5KdmJUb2diWE5uTG5SdkxDQjBiem9nYlhObkxtWnliMjBzWEhKY2JpQWdJQ0FnSUNBZ1ltOWtlVG9nZXlCamIyUmxPaUF5TURBc0lITnZkWEpqWlRvZ1gzUm9hWE11WDI5M2JtVnlJSDFjY2x4dUlDQWdJQ0FnZlNrN1hISmNiaUFnSUNCOUtUdGNjbHh1WEhKY2JpQWdJQ0JzWlhRZ1pYWmxiblFnUFNCN1hISmNiaUFnSUNBZ0lIUjVjR1U2SUcxelp5NTBlWEJsTEZ4eVhHNGdJQ0FnSUNCbWNtOXRPaUJ0YzJjdVpuSnZiU3hjY2x4dUlDQWdJQ0FnZFhKc09pQnRjMmN1ZEc4c1hISmNiaUFnSUNBZ0lIWmhiSFZsT2lCdGMyY3VZbTlrZVM1MllXeDFaUzVrWVhSaExGeHlYRzRnSUNBZ0lDQmphR2xzWkVsa09pQmphR2xzWkVsdWNIVjBMblZ5YkN4Y2NseHVJQ0FnSUNBZ2FXUmxiblJwZEhrNklHMXpaeTVpYjJSNUxtbGtaVzUwYVhSNVhISmNiaUFnSUNCOU8xeHlYRzVjY2x4dUlDQWdJR2xtSUNoZmRHaHBjeTVmYjI1QlpHUkRhR2xzWkhKbGJraGhibVJzWlhJcElIdGNjbHh1SUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvSjBGRVJDMURTRWxNUkZKRlRpMUZWa1ZPVkRvZ0p5d2daWFpsYm5RcE8xeHlYRzRnSUNBZ0lDQmZkR2hwY3k1ZmIyNUJaR1JEYUdsc1pISmxia2hoYm1Sc1pYSW9aWFpsYm5RcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0x5OXpaVzVrSUdSbGJIUmhJRzFsYzNOaFoyVnpJSFJ2SUhOMVluTmpjbWx3ZEdsdmJuTmNjbHh1SUNCZmIyNURhR0Z1WjJVb1pYWmxiblFzSUdOb2FXeGtTVzVtYnlrZ2UxeHlYRzRnSUNBZ2JHVjBJRjkwYUdseklEMGdkR2hwY3p0Y2NseHVYSEpjYmlBZ0lDQmZkR2hwY3k1ZmJXVjBZV1JoZEdFdWJHRnpkRTF2WkdsbWFXVmtJRDBnS0c1bGR5QkVZWFJsS1M1MGIwbFRUMU4wY21sdVp5Z3BPMXh5WEc1Y2NseHVJQ0FnSUY5MGFHbHpMbDkyWlhKemFXOXVLeXM3WEhKY2JseHlYRzRnSUNBZ2FXWWdLRjkwYUdsekxsOXpkR0YwZFhNZ1BUMDlJQ2RzYVhabEp5a2dlMXh5WEc0Z0lDQWdJQ0F2TDBaTVQxY3RUMVZVT2lCMGFHbHpJRzFsYzNOaFoyVWdkMmxzYkNCaVpTQnpaVzUwSUdScGNtVmpkR3g1SUhSdklHRWdjbVZ6YjNWeVkyVWdZMmhoYm1kbGN5QmhaR1J5WlhOek9pQk5aWE56WVdkbFFuVnpYSEpjYmlBZ0lDQWdJR3hsZENCamFHRnVaMlZOYzJjZ1BTQjdYSEpjYmlBZ0lDQWdJQ0FnZEhsd1pUb2dKM1Z3WkdGMFpTY3NJR1p5YjIwNklGOTBhR2x6TGw5MWNtd3NJSFJ2T2lCZmRHaHBjeTVmZFhKc0lDc2dKeTlqYUdGdVoyVnpKeXhjY2x4dUlDQWdJQ0FnSUNCaWIyUjVPaUI3SUhabGNuTnBiMjQ2SUY5MGFHbHpMbDkyWlhKemFXOXVMQ0J6YjNWeVkyVTZJRjkwYUdsekxsOXZkMjVsY2l3Z1lYUjBjbWxpZFhSbE9pQmxkbVZ1ZEM1bWFXVnNaQ3dnYkdGemRFMXZaR2xtYVdWa09pQmZkR2hwY3k1ZmJXVjBZV1JoZEdFdWJHRnpkRTF2WkdsbWFXVmtJSDFjY2x4dUlDQWdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQWdJR052Ym5OdmJHVXViRzluS0NkYlJHRjBZVTlpYW1WamRDQXRJRjl2YmtOb1lXNW5aVjBnTFNBbkxDQmxkbVZ1ZEN3Z1kyaHBiR1JKYm1adkxDQmphR0Z1WjJWTmMyY3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ2FXWWdLR1YyWlc1MExtOVVlWEJsSUQwOVBTQlBZbXBsWTNSVWVYQmxMazlDU2tWRFZDa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDaGxkbVZ1ZEM1alZIbHdaU0FoUFQwZ1EyaGhibWRsVkhsd1pTNVNSVTFQVmtVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUdOb1lXNW5aVTF6Wnk1aWIyUjVMblpoYkhWbElEMGdaWFpsYm5RdVpHRjBZVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdZMmhoYm1kbFRYTm5MbUp2WkhrdVlYUjBjbWxpZFhSbFZIbHdaU0E5SUdWMlpXNTBMbTlVZVhCbE8xeHlYRzRnSUNBZ0lDQWdJR05vWVc1blpVMXpaeTVpYjJSNUxuWmhiSFZsSUQwZ1pYWmxiblF1WkdGMFlUdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb1pYWmxiblF1WTFSNWNHVWdJVDA5SUVOb1lXNW5aVlI1Y0dVdVZWQkVRVlJGS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0JqYUdGdVoyVk5jMmN1WW05a2VTNXZjR1Z5WVhScGIyNGdQU0JsZG1WdWRDNWpWSGx3WlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDOHZZMmhwYkdSSmJtWnZJRzExYzNRZ2FHRjJaU0FvY0dGMGFDd2dZMmhwYkdSSlpDbGNjbHh1SUNBZ0lDQWdhV1lnS0dOb2FXeGtTVzVtYnlrZ2UxeHlYRzRnSUNBZ0lDQWdJR05vWVc1blpVMXpaeTUwYnlBOUlHTm9hV3hrU1c1bWJ5NXdZWFJvTzF4eVhHNGdJQ0FnSUNBZ0lHTm9ZVzVuWlUxelp5NWliMlI1TG5KbGMyOTFjbU5sSUQwZ1kyaHBiR1JKYm1adkxtTm9hV3hrU1dRN1hISmNiaUFnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUM4dlZFOUVUem9nUm05eUlFWjFjblJvWlhJZ1UzUjFaSGxjY2x4dUlDQWdJQ0FnYVdZZ0tDRmZkR2hwY3k1ZmJYVjBkV0ZzUVhWMGFHVnVkR2xqWVhScGIyNHBJR05vWVc1blpVMXpaeTVpYjJSNUxtMTFkSFZoYkVGMWRHaGxiblJwWTJGMGFXOXVJRDBnWDNSb2FYTXVYMjExZEhWaGJFRjFkR2hsYm5ScFkyRjBhVzl1TzF4eVhHNWNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgySjFjeTV3YjNOMFRXVnpjMkZuWlNoamFHRnVaMlZOYzJjcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0x5OUdURTlYTFVsT09pQmtaV3gwWVNCdFpYTnpZV2RsSUhKbFkyVnBkbVZrSUdaeWIyMGdZU0J5WlcxdmRHVWdSR0YwWVU5aWFtVmpkRkpsY0c5eWRHVnlJRzl5SUVSaGRHRlBZbXBsWTNSRGFHbHNaQ0IzYUdWdUlHTm9ZVzVuYVc1bklHUmhkR0ZjY2x4dUlDQmZZMmhoYm1kbFQySnFaV04wS0hONWJtTlBZbW9zSUcxelp5a2dlMXh5WEc0Z0lDQWdiR1YwSUY5MGFHbHpJRDBnZEdocGN6dGNjbHh1WEhKY2JpQWdJQ0F2TDFSUFJFODZJSFZ3WkdGMFpTQjJaWEp6YVc5dUlEOWNjbHh1SUNBZ0lDOHZhRzkzSUhSdklHaGhibVJzWlNCaGJpQnBibU52Y25KbFkzUWdkbVZ5YzJsdmJpQS9JRVY0WVcxd2JHVTZJSEpsWTJWcGRtVWdZU0IyWlhKemFXOXVJRE1nZDJobGJpQjBhR1VnYjJKelpYSjJaWElnYVhNZ2FXNGdkbVZ5YzJsdmJpQXhMQ0IzYUdWeVpTQnBjeUIwYUdVZ2RtVnljMmx2YmlBeUlEOWNjbHh1SUNBZ0lDOHZkMmxzYkNCM1pTQnVaV1ZrSUhSdklHTnZibVpwY20wZ2RHaGxJSEpsWTJWd2RHbHZiaUEvWEhKY2JpQWdJQ0JwWmlBb1gzUm9hWE11WDNabGNuTnBiMjRnS3lBeElEdzlJRzF6Wnk1aWIyUjVMblpsY25OcGIyNHBJSHRjY2x4dUlDQWdJQ0FnWDNSb2FYTXVYM1psY25OcGIyNGdQU0J0YzJjdVltOWtlUzUyWlhKemFXOXVPMXh5WEc0Z0lDQWdJQ0JzWlhRZ2NHRjBhQ0E5SUcxelp5NWliMlI1TG1GMGRISnBZblYwWlR0Y2NseHVJQ0FnSUNBZ2JHVjBJSFpoYkhWbElEMGdaR1ZsY0VOc2IyNWxLRzF6Wnk1aWIyUjVMblpoYkhWbEtUdGNjbHh1SUNBZ0lDQWdiR1YwSUdacGJtUlNaWE4xYkhRZ1BTQnplVzVqVDJKcUxtWnBibVJDWldadmNtVW9jR0YwYUNrN1hISmNibHh5WEc0Z0lDQWdJQ0JwWmlBb2JYTm5MbUp2WkhrdWJHRnpkRTF2WkdsbWFXVmtLU0I3WEhKY2JpQWdJQ0FnSUNBZ1gzUm9hWE11WDIxbGRHRmtZWFJoTG14aGMzUk5iMlJwWm1sbFpDQTlJRzF6Wnk1aWIyUjVMbXhoYzNSTmIyUnBabWxsWkR0Y2NseHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQmZkR2hwY3k1ZmJXVjBZV1JoZEdFdWJHRnpkRTF2WkdsbWFXVmtJRDBnS0c1bGR5QkVZWFJsS1M1MGIwbFRUMU4wY21sdVp5Z3BPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQnBaaUFvYlhObkxtSnZaSGt1WVhSMGNtbGlkWFJsVkhsd1pTQTlQVDBnVDJKcVpXTjBWSGx3WlM1QlVsSkJXU2tnZTF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2h0YzJjdVltOWtlUzV2Y0dWeVlYUnBiMjRnUFQwOUlFTm9ZVzVuWlZSNWNHVXVRVVJFS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0JzWlhRZ1lYSnlJRDBnWm1sdVpGSmxjM1ZzZEM1dlltbzdYSEpjYmlBZ0lDQWdJQ0FnSUNCc1pYUWdhVzVrWlhnZ1BTQm1hVzVrVW1WemRXeDBMbXhoYzNRN1hISmNiaUFnSUNBZ0lDQWdJQ0JCY25KaGVTNXdjbTkwYjNSNWNHVXVjM0JzYVdObExtRndjR3g1S0dGeWNpd2dXMmx1WkdWNExDQXdYUzVqYjI1allYUW9kbUZzZFdVcEtUdGNjbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0cxelp5NWliMlI1TG05d1pYSmhkR2x2YmlBOVBUMGdRMmhoYm1kbFZIbHdaUzVTUlUxUFZrVXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lHeGxkQ0JoY25JZ1BTQm1hVzVrVW1WemRXeDBMbTlpYWp0Y2NseHVJQ0FnSUNBZ0lDQWdJR3hsZENCcGJtUmxlQ0E5SUdacGJtUlNaWE4xYkhRdWJHRnpkRHRjY2x4dUlDQWdJQ0FnSUNBZ0lHRnljaTV6Y0d4cFkyVW9hVzVrWlhnc0lIWmhiSFZsS1R0Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnWm1sdVpGSmxjM1ZzZEM1dlltcGJabWx1WkZKbGMzVnNkQzVzWVhOMFhTQTlJSFpoYkhWbE95QXZMeUJWVUVSQlZFVmNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLRzF6Wnk1aWIyUjVMblpoYkhWbEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCbWFXNWtVbVZ6ZFd4MExtOWlhbHRtYVc1a1VtVnpkV3gwTG14aGMzUmRJRDBnZG1Gc2RXVTdJQzh2SUZWUVJFRlVSU0J2Y2lCQlJFUmNjbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUdacGJtUlNaWE4xYkhRdWIySnFXMlpwYm1SU1pYTjFiSFF1YkdGemRGMDdJQzh2SUZKRlRVOVdSVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0x5OVVUMFJQT2lCb2IzY2dkRzhnYUdGdVpHeGxJSFZ1YzNsdVkyaHliMjVwZW1Wa0lIWmxjbk5wYjI1elAxeHlYRzRnSUNBZ0lDQmpiMjV6YjJ4bExteHZaeWduVlU1VFdVNURTRkpQVGtsYVJVUWdWa1ZTVTBsUFRqb2dLR1JoZEdFZ1BUNGdKeUFySUY5MGFHbHpMbDkyWlhKemFXOXVJQ3NnSnl3Z2JYTm5JRDArSUNjZ0t5QnRjMmN1WW05a2VTNTJaWEp6YVc5dUlDc2dKeWtuS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4dlJreFBWeTFKVGpvZ2JXVnpjMkZuWlNCeVpXTmxhWFpsWkNCbWNtOXRJR0VnY21WdGIzUmxJRVJoZEdGUFltcGxZM1JEYUdsc1pDQjNhR1Z1SUdOb1lXNW5hVzVuSUdSaGRHRmNjbHh1SUNCZlkyaGhibWRsUTJocGJHUnlaVzRvYlhObktTQjdYSEpjYmlBZ0lDQnNaWFFnWDNSb2FYTWdQU0IwYUdsek8xeHlYRzRnSUNBZ1kyOXVjMjlzWlM1c2IyY29KME5vWVc1blpTQmphR2xzWkhKbGJqb2dKeXdnWDNSb2FYTXVYMjkzYm1WeUxDQnRjMmNwTzF4eVhHNWNjbHh1SUNBZ0lHeGxkQ0JqYUdsc1pFbGtJRDBnYlhObkxtSnZaSGt1Y21WemIzVnlZMlU3WEhKY2JpQWdJQ0JzWlhRZ1kyaHBiR1J5Wlc0Z1BTQmZkR2hwY3k1ZlkyaHBiR1J5Wlc1UFltcGxZM1J6VzJOb2FXeGtTV1JkTzF4eVhHNWNjbHh1SUNBZ0lHbG1JQ2hqYUdsc1pISmxiaWtnZTF4eVhHNGdJQ0FnSUNCZmRHaHBjeTVmWTJoaGJtZGxUMkpxWldOMEtHTm9hV3hrY21WdUxsOXplVzVqVDJKcUxDQnRjMmNwTzF4eVhHNGdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0owNXZJR05vYVd4a2NtVnVJR1p2ZFc1a0lHWnZjam9nSnl3Z1kyaHBiR1JKWkNrN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNWNjbHh1ZlZ4eVhHNWNjbHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdSR0YwWVU5aWFtVmpkRHRjY2x4dVhHNWNibHh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVklnTHk5Y2JpOHZJQzR2YzNKakwzTjVibU5vWlhJdlJHRjBZVTlpYW1WamRDNXFjeUlzSW1sdGNHOXlkQ0FuY0hKdmVIa3RiMkp6WlhKMlpTYzdYSEpjYm1sdGNHOXlkQ0I3Y0dGeWMyVkJkSFJ5YVdKMWRHVnpmU0JtY205dElDY3VMaTkxZEdsc2N5OTFkR2xzY3ljN1hISmNibHh5WEc1amIyNXpkQ0J2WW1wbFkzUlVlWEJsSUQwZ2UwRlNVa0ZaT2lBblcyOWlhbVZqZENCQmNuSmhlVjBuTENCUFFrcEZRMVE2SUNkYmIySnFaV04wSUU5aWFtVmpkRjBuSUgwN1hISmNibHh5WEc0dktpcGNjbHh1SUNvZ1FHRmpZMlZ6Y3lCd2NtbDJZWFJsWEhKY2JpQXFJRTFoYVc0Z1kyeGhjM01nZEdoaGRDQnRZV2x1ZEdGcGJuTWdZU0JLVTA5T0lHOWlhbVZqZEN3Z1lXNWtJRzlpYzJWeWRtVnpJR05vWVc1blpYTWdhVzRnZEdocGN5QnZZbXBsWTNRc0lISmxZM1Z5YzJsMlpXeDVMbHh5WEc0Z0tpQkpiblJsY201aGJDQnZZbXBsWTNSeklHRnVaQ0JoY25KaGVYTWdZWEpsSUdGc2MyOGdiMkp6WlhKMlpXUXVYSEpjYmlBcUwxeHlYRzVqYkdGemN5QlRlVzVqVDJKcVpXTjBJSHRjY2x4dVhISmNiaUFnWTI5dWMzUnlkV04wYjNJb2FXNXBkR2xoYkVSaGRHRXBJSHRjY2x4dUlDQWdJR3hsZENCZmRHaHBjeUE5SUhSb2FYTTdYSEpjYmx4eVhHNGdJQ0FnWDNSb2FYTXVYMjlpYzJWeWRtVnljeUE5SUZ0ZE8xeHlYRzRnSUNBZ1gzUm9hWE11WDJacGJIUmxjbk1nUFNCN2ZUdGNjbHh1WEhKY2JpQWdJQ0IwYUdsekxsOWtZWFJoSUQwZ2FXNXBkR2xoYkVSaGRHRWdmSHdnZTMwN1hISmNibHh5WEc0Z0lDQWdkR2hwY3k1ZmFXNTBaWEp1WVd4UFluTmxjblpsS0hSb2FYTXVYMlJoZEdFcE8xeHlYRzRnSUgxY2NseHVYSEpjYmlBZ1oyVjBJR1JoZEdFb0tTQjdJSEpsZEhWeWJpQjBhR2x6TGw5a1lYUmhPeUI5WEhKY2JseHlYRzRnSUc5aWMyVnlkbVVvWTJGc2JHSmhZMnNwSUh0Y2NseHVJQ0FnSUhSb2FYTXVYMjlpYzJWeWRtVnljeTV3ZFhOb0tHTmhiR3hpWVdOcktUdGNjbHh1SUNCOVhISmNibHh5WEc0Z0lHWnBibVFvY0dGMGFDa2dlMXh5WEc0Z0lDQWdiR1YwSUd4cGMzUWdQU0J3WVhKelpVRjBkSEpwWW5WMFpYTW9jR0YwYUNrN1hISmNibHh5WEc0Z0lDQWdjbVYwZFhKdUlIUm9hWE11WDJacGJtUlhhWFJvVTNCc2FYUW9iR2x6ZENrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNCbWFXNWtRbVZtYjNKbEtIQmhkR2dwSUh0Y2NseHVJQ0FnSUd4bGRDQnlaWE4xYkhRZ1BTQjdmVHRjY2x4dUlDQWdJR3hsZENCc2FYTjBJRDBnY0dGeWMyVkJkSFJ5YVdKMWRHVnpLSEJoZEdncE8xeHlYRzRnSUNBZ2NtVnpkV3gwTG14aGMzUWdQU0JzYVhOMExuQnZjQ2dwTzF4eVhHNGdJQ0FnY21WemRXeDBMbTlpYWlBOUlIUm9hWE11WDJacGJtUlhhWFJvVTNCc2FYUW9iR2x6ZENrN1hISmNibHh5WEc0Z0lDQWdjbVYwZFhKdUlISmxjM1ZzZER0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUY5bWFXNWtWMmwwYUZOd2JHbDBLR3hwYzNRcElIdGNjbHh1SUNBZ0lHeGxkQ0J2WW1vZ1BTQjBhR2x6TGw5a1lYUmhPMXh5WEc0Z0lDQWdiR2x6ZEM1bWIzSkZZV05vS0NoMllXeDFaU2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQnZZbW9nUFNCdlltcGJkbUZzZFdWZE8xeHlYRzRnSUNBZ2ZTazdYSEpjYmx4eVhHNGdJQ0FnY21WMGRYSnVJRzlpYWp0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUY5cGJuUmxjbTVoYkU5aWMyVnlkbVVvYjJKcVpXTjBLU0I3WEhKY2JseHlYRzRnSUNBZ2JHVjBJR2hoYm1Sc1pYSWdQU0FvWTJoaGJtZGxjMlYwS1NBOVBpQjdYSEpjYmx4eVhHNGdJQ0FnSUNCamFHRnVaMlZ6WlhRdVpYWmxjbmtvS0dOb1lXNW5aU2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyOXVRMmhoYm1kbGN5aGphR0Z1WjJVcE8xeHlYRzRnSUNBZ0lDQjlLVHRjY2x4dVhISmNiaUFnSUNCOU8xeHlYRzVjY2x4dUlDQWdJSFJvYVhNdVgyUmhkR0VnUFNCUFltcGxZM1F1WkdWbGNFOWljMlZ5ZG1Vb2IySnFaV04wTENCb1lXNWtiR1Z5S1R0Y2NseHVYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQmZabWx5WlVWMlpXNTBLR1YyWlc1MEtTQjdYSEpjYmlBZ0lDQjBhR2x6TGw5dlluTmxjblpsY25NdVptOXlSV0ZqYUNnb1kyRnNiR0poWTJzcElEMCtJSHRjY2x4dUlDQWdJQ0FnWTJGc2JHSmhZMnNvWlhabGJuUXBPMXh5WEc0Z0lDQWdmU2s3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JmYjI1RGFHRnVaMlZ6S0dOb1lXNW5aU2tnZTF4eVhHNWNjbHh1SUNBZ0lHeGxkQ0J2WW1vZ1BTQmphR0Z1WjJVdWIySnFaV04wTzF4eVhHNGdJQ0FnYkdWMElHOWlhbFI1Y0dVN1hISmNibHh5WEc0Z0lDQWdhV1lnS0c5aWFpNWpiMjV6ZEhKMVkzUnZjaUE5UFQwZ1QySnFaV04wS1NCN1hISmNiaUFnSUNBZ0lHOWlhbFI1Y0dVZ1BTQlBZbXBsWTNSVWVYQmxMazlDU2tWRFZEdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JwWmlBb2IySnFMbU52Ym5OMGNuVmpkRzl5SUQwOVBTQkJjbkpoZVNrZ2UxeHlYRzRnSUNBZ0lDQnZZbXBVZVhCbElEMGdUMkpxWldOMFZIbHdaUzVCVWxKQldUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0JzWlhRZ1ptbGxiR1JUZEhKcGJtY2dQU0JqYUdGdVoyVXVhMlY1Y0dGMGFEdGNjbHh1WEhKY2JpQWdJQ0F2THlCamIyNXpiMnhsTG14dlp5Z25SbWxsYkdRNkp5d2dabWxsYkdSVGRISnBibWNwTzF4eVhHNGdJQ0FnTHk4Z1kyOXVjMjlzWlM1c2IyY29KM1I1Y0dVNkp5d2dZMmhoYm1kbExuUjVjR1VwTzF4eVhHNWNjbHh1SUNBZ0lDOHZiR1YwSUc5c1pGWmhiSFZsSUQwZ1kyaGhibWRsTG05c1pGWmhiSFZsTzF4eVhHNGdJQ0FnYkdWMElHNWxkMVpoYkhWbElEMGdiMkpxVzJOb1lXNW5aUzV1WVcxbFhUdGNjbHh1WEhKY2JpQWdJQ0F2THlCamIyNXpiMnhsTG1sdVptOG9ZMmhoYm1kbExuUjVjR1VnS3lBbklId2dSbWxsYkdRNklDY2dLeUJtYVdWc1pGTjBjbWx1WnlBcklDY2dmQ0JPWlhjZ1ZtRnNkV1U2Snl3Z1NsTlBUaTV6ZEhKcGJtZHBabmtvYm1WM1ZtRnNkV1VwTENCbWFXVnNaRk4wY21sdVp5NXBibU5zZFdSbGN5Z25iR1Z1WjNSb0p5a3BPMXh5WEc1Y2NseHVJQ0FnSUdsbUlDaGphR0Z1WjJVdWRIbHdaU0E5UFQwZ0ozVndaR0YwWlNjZ0ppWWdJV1pwWld4a1UzUnlhVzVuTG1sdVkyeDFaR1Z6S0NjdWJHVnVaM1JvSnlrcElIdGNjbHh1SUNBZ0lDQWdkR2hwY3k1ZlptbHlaVVYyWlc1MEtIdGNjbHh1SUNBZ0lDQWdJQ0JqVkhsd1pUb2dRMmhoYm1kbFZIbHdaUzVWVUVSQlZFVXNYSEpjYmlBZ0lDQWdJQ0FnYjFSNWNHVTZJRzlpYWxSNWNHVXNYSEpjYmlBZ0lDQWdJQ0FnWm1sbGJHUTZJR1pwWld4a1UzUnlhVzVuTEZ4eVhHNGdJQ0FnSUNBZ0lHUmhkR0U2SUc1bGQxWmhiSFZsWEhKY2JpQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR2xtSUNoamFHRnVaMlV1ZEhsd1pTQTlQVDBnSjJGa1pDY3BJSHRjY2x4dUlDQWdJQ0FnZEdocGN5NWZabWx5WlVWMlpXNTBLSHRjY2x4dUlDQWdJQ0FnSUNCalZIbHdaVG9nUTJoaGJtZGxWSGx3WlM1QlJFUXNYSEpjYmlBZ0lDQWdJQ0FnYjFSNWNHVTZJRzlpYWxSNWNHVXNYSEpjYmlBZ0lDQWdJQ0FnWm1sbGJHUTZJR1pwWld4a1UzUnlhVzVuTEZ4eVhHNGdJQ0FnSUNBZ0lHUmhkR0U2SUc1bGQxWmhiSFZsWEhKY2JpQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJR2xtSUNoamFHRnVaMlV1ZEhsd1pTQTlQVDBnSjJSbGJHVjBaU2NwSUh0Y2NseHVJQ0FnSUNBZ2RHaHBjeTVmWm1seVpVVjJaVzUwS0h0Y2NseHVJQ0FnSUNBZ0lDQmpWSGx3WlRvZ1EyaGhibWRsVkhsd1pTNVNSVTFQVmtVc1hISmNiaUFnSUNBZ0lDQWdiMVI1Y0dVNklHOWlhbFI1Y0dVc1hISmNiaUFnSUNBZ0lDQWdabWxsYkdRNklHWnBaV3hrVTNSeWFXNW5YSEpjYmlBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dVhISmNibjFjY2x4dVhISmNibVY0Y0c5eWRDQnNaWFFnUTJoaGJtZGxWSGx3WlNBOUlIdFZVRVJCVkVVNklDZDFjR1JoZEdVbkxDQkJSRVE2SUNkaFpHUW5MQ0JTUlUxUFZrVTZJQ2R5WlcxdmRtVW5mVHRjY2x4dVpYaHdiM0owSUd4bGRDQlBZbXBsWTNSVWVYQmxJRDBnZTA5Q1NrVkRWRG9nSjI5aWFtVmpkQ2NzSUVGU1VrRlpPaUFuWVhKeVlYa25mVHRjY2x4dVpYaHdiM0owSUdSbFptRjFiSFFnVTNsdVkwOWlhbVZqZER0Y2NseHVYRzVjYmx4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZJZ0x5OWNiaTh2SUM0dmMzSmpMM041Ym1Ob1pYSXZVSEp2ZUhsUFltcGxZM1F1YW5NaUxDSmNJblZ6WlNCemRISnBZM1JjSWp0Y2JseHVaWGh3YjNKMGN5NWZYMlZ6VFc5a2RXeGxJRDBnZEhKMVpUdGNibHh1ZG1GeUlGOW5aWFJRY205MGIzUjVjR1ZQWmlBOUlISmxjWFZwY21Vb1hDSXVMaTlqYjNKbExXcHpMMjlpYW1WamRDOW5aWFF0Y0hKdmRHOTBlWEJsTFc5bVhDSXBPMXh1WEc1MllYSWdYMmRsZEZCeWIzUnZkSGx3WlU5bU1pQTlJRjlwYm5SbGNtOXdVbVZ4ZFdseVpVUmxabUYxYkhRb1gyZGxkRkJ5YjNSdmRIbHdaVTltS1R0Y2JseHVkbUZ5SUY5blpYUlBkMjVRY205d1pYSjBlVVJsYzJOeWFYQjBiM0lnUFNCeVpYRjFhWEpsS0Z3aUxpNHZZMjl5WlMxcWN5OXZZbXBsWTNRdloyVjBMVzkzYmkxd2NtOXdaWEowZVMxa1pYTmpjbWx3ZEc5eVhDSXBPMXh1WEc1MllYSWdYMmRsZEU5M2JsQnliM0JsY25SNVJHVnpZM0pwY0hSdmNqSWdQU0JmYVc1MFpYSnZjRkpsY1hWcGNtVkVaV1poZFd4MEtGOW5aWFJQZDI1UWNtOXdaWEowZVVSbGMyTnlhWEIwYjNJcE8xeHVYRzVtZFc1amRHbHZiaUJmYVc1MFpYSnZjRkpsY1hWcGNtVkVaV1poZFd4MEtHOWlhaWtnZXlCeVpYUjFjbTRnYjJKcUlDWW1JRzlpYWk1ZlgyVnpUVzlrZFd4bElEOGdiMkpxSURvZ2V5QmtaV1poZFd4ME9pQnZZbW9nZlRzZ2ZWeHVYRzVsZUhCdmNuUnpMbVJsWm1GMWJIUWdQU0JtZFc1amRHbHZiaUJuWlhRb2IySnFaV04wTENCd2NtOXdaWEowZVN3Z2NtVmpaV2wyWlhJcElIdGNiaUFnYVdZZ0tHOWlhbVZqZENBOVBUMGdiblZzYkNrZ2IySnFaV04wSUQwZ1JuVnVZM1JwYjI0dWNISnZkRzkwZVhCbE8xeHVJQ0IyWVhJZ1pHVnpZeUE5SUNnd0xDQmZaMlYwVDNkdVVISnZjR1Z5ZEhsRVpYTmpjbWx3ZEc5eU1pNWtaV1poZFd4MEtTaHZZbXBsWTNRc0lIQnliM0JsY25SNUtUdGNibHh1SUNCcFppQW9aR1Z6WXlBOVBUMGdkVzVrWldacGJtVmtLU0I3WEc0Z0lDQWdkbUZ5SUhCaGNtVnVkQ0E5SUNnd0xDQmZaMlYwVUhKdmRHOTBlWEJsVDJZeUxtUmxabUYxYkhRcEtHOWlhbVZqZENrN1hHNWNiaUFnSUNCcFppQW9jR0Z5Wlc1MElEMDlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2RXNWtaV1pwYm1Wa08xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdaMlYwS0hCaGNtVnVkQ3dnY0hKdmNHVnlkSGtzSUhKbFkyVnBkbVZ5S1R0Y2JpQWdJQ0I5WEc0Z0lIMGdaV3h6WlNCcFppQW9YQ0oyWVd4MVpWd2lJR2x1SUdSbGMyTXBJSHRjYmlBZ0lDQnlaWFIxY200Z1pHVnpZeTUyWVd4MVpUdGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQjJZWElnWjJWMGRHVnlJRDBnWkdWell5NW5aWFE3WEc1Y2JpQWdJQ0JwWmlBb1oyVjBkR1Z5SUQwOVBTQjFibVJsWm1sdVpXUXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQjFibVJsWm1sdVpXUTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUdkbGRIUmxjaTVqWVd4c0tISmxZMlZwZG1WeUtUdGNiaUFnZlZ4dWZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlltRmlaV3d0Y25WdWRHbHRaUzlvWld4d1pYSnpMMmRsZEM1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ01USTFYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNJc0lpOHFLbHh5WEc0cUlFTnZjSGx5YVdkb2RDQXlNREUySUZCVUlFbHViM1podzZmRG8yOGdaU0JUYVhOMFpXMWhjeUJUUVZ4eVhHNHFJRU52Y0hseWFXZG9kQ0F5TURFMklFbE9SVk5ETFVsRVhISmNiaW9nUTI5d2VYSnBaMmgwSURJd01UWWdVVlZQUWtsVElFNUZWRmRQVWt0VElGTk1YSEpjYmlvZ1EyOXdlWEpwWjJoMElESXdNVFlnUmxKQlZVNUlUMFpGVWkxSFJWTkZURXhUUTBoQlJsUWdXbFZTSUVaUFJWSkVSVkpWVGtjZ1JFVlNJRUZPUjBWWFFVNUVWRVZPSUVaUFVsTkRTRlZPUnlCRkxsWmNjbHh1S2lCRGIzQjVjbWxuYUhRZ01qQXhOaUJQVWtGT1IwVWdVMEZjY2x4dUtpQkRiM0I1Y21sbmFIUWdNakF4TmlCRVpYVjBjMk5vWlNCVVpXeGxhMjl0SUVGSFhISmNiaW9nUTI5d2VYSnBaMmgwSURJd01UWWdRWEJwZW1WbFhISmNiaW9nUTI5d2VYSnBaMmgwSURJd01UWWdWRVZEU0U1SlUwTklSU0JWVGtsV1JWSlRTVlJCVkNCQ1JWSk1TVTVjY2x4dUtseHlYRzRxSUV4cFkyVnVjMlZrSUhWdVpHVnlJSFJvWlNCQmNHRmphR1VnVEdsalpXNXpaU3dnVm1WeWMybHZiaUF5TGpBZ0tIUm9aU0JjSWt4cFkyVnVjMlZjSWlrN1hISmNiaW9nZVc5MUlHMWhlU0J1YjNRZ2RYTmxJSFJvYVhNZ1ptbHNaU0JsZUdObGNIUWdhVzRnWTI5dGNHeHBZVzVqWlNCM2FYUm9JSFJvWlNCTWFXTmxibk5sTGx4eVhHNHFJRmx2ZFNCdFlYa2diMkowWVdsdUlHRWdZMjl3ZVNCdlppQjBhR1VnVEdsalpXNXpaU0JoZEZ4eVhHNHFYSEpjYmlvZ0lDQm9kSFJ3T2k4dmQzZDNMbUZ3WVdOb1pTNXZjbWN2YkdsalpXNXpaWE12VEVsRFJVNVRSUzB5TGpCY2NseHVLbHh5WEc0cUlGVnViR1Z6Y3lCeVpYRjFhWEpsWkNCaWVTQmhjSEJzYVdOaFlteGxJR3hoZHlCdmNpQmhaM0psWldRZ2RHOGdhVzRnZDNKcGRHbHVaeXdnYzI5bWRIZGhjbVZjY2x4dUtpQmthWE4wY21saWRYUmxaQ0IxYm1SbGNpQjBhR1VnVEdsalpXNXpaU0JwY3lCa2FYTjBjbWxpZFhSbFpDQnZiaUJoYmlCY0lrRlRJRWxUWENJZ1FrRlRTVk1zWEhKY2Jpb2dWMGxVU0U5VlZDQlhRVkpTUVU1VVNVVlRJRTlTSUVOUFRrUkpWRWxQVGxNZ1QwWWdRVTVaSUV0SlRrUXNJR1ZwZEdobGNpQmxlSEJ5WlhOeklHOXlJR2x0Y0d4cFpXUXVYSEpjYmlvZ1UyVmxJSFJvWlNCTWFXTmxibk5sSUdadmNpQjBhR1VnYzNCbFkybG1hV01nYkdGdVozVmhaMlVnWjI5MlpYSnVhVzVuSUhCbGNtMXBjM05wYjI1eklHRnVaRnh5WEc0cUlHeHBiV2wwWVhScGIyNXpJSFZ1WkdWeUlIUm9aU0JNYVdObGJuTmxMbHh5WEc0cUtpOWNjbHh1YVcxd2IzSjBJSHNnWkdWbGNFTnNiMjVsTENCa2FYWnBaR1ZWVWt3Z2ZTQm1jbTl0SUNjdUxpOTFkR2xzY3k5MWRHbHNjeWM3WEhKY2JseHlYRzVwYlhCdmNuUWdSR0YwWVU5aWFtVmpkRkpsY0c5eWRHVnlJR1p5YjIwZ0p5NHZSR0YwWVU5aWFtVmpkRkpsY0c5eWRHVnlKenRjY2x4dWFXMXdiM0owSUVSaGRHRlBZbXBsWTNSUFluTmxjblpsY2lCbWNtOXRJQ2N1TDBSaGRHRlBZbXBsWTNSUFluTmxjblpsY2ljN1hISmNibWx0Y0c5eWRDQkVZWFJoVUhKdmRtbHphVzl1WVd3Z1puSnZiU0FuTGk5RVlYUmhVSEp2ZG1semFXOXVZV3duTzF4eVhHNWNjbHh1THlvcVhISmNiaW9nVkdobElHMWhhVzRnWTJ4aGMzTWdabTl5SUhSb1pTQnplVzVqYUdWeUlIQmhZMnRoWjJVdVhISmNiaW9nVkdobElGTjVibU5vWlhJZ2FYTWdZU0J6YVc1bmJHVjBiMjRnWTJ4aGMzTWdjR1Z5SUVoNWNHVnlkSGt2VlZKTUlHRnVaQ0JwZENCcGN5QjBhR1VnYjNkdVpYSWdiMllnWVd4c0lHTnlaV0YwWldRZ1JHRjBZU0JUZVc1aklFOWlhbVZqZEhNZ1lXTmpiM0prYVc1bklIUnZJSFJvWlNCU1pYQnZjblJsY2lBdElFOWljMlZ5ZG1WeUlIQmhkSFJsY200dVhISmNiaW9nVFdGcGJpQm1kVzVqZEdsdmJtRnNhWFI1SUdseklIUnZJR055WldGMFpTQnlaWEJ2Y25SbGNuTWdZVzVrSUhSdklITjFZbk5qY21saVpTQjBieUJsZUdsemRHbHVaeUJ2Ym1WekxseHlYRzRxTDF4eVhHNWpiR0Z6Y3lCVGVXNWphR1Z5SUh0Y2NseHVJQ0F2S2lCd2NtbDJZWFJsWEhKY2JpQWdYMjkzYm1WeU9pQlZVa3hjY2x4dUlDQmZZblZ6T2lCTmFXNXBRblZ6WEhKY2JseHlYRzRnSUY5emRXSlZVa3c2SUZWU1RGeHlYRzVjY2x4dUlDQmZjbVZ3YjNKMFpYSnpPaUE4ZFhKc09pQkVZWFJoVDJKcVpXTjBVbVZ3YjNKMFpYSStYSEpjYmlBZ1gyOWljMlZ5ZG1WeWN6b2dQSFZ5YkRvZ1JHRjBZVTlpYW1WamRFOWljMlZ5ZG1WeVBseHlYRzRnSUY5d2NtOTJhWE5wYjI1aGJITTZJRHgxY213NklFUmhkR0ZRY205MmFYTnBiMjVoYkQ1Y2NseHVYSEpjYmlBZ0xTMHRMV1YyWlc1MElHaGhibVJzWlhKekxTMHRMVnh5WEc0Z0lGOXZiazV2ZEdsbWFXTmhkR2x2YmtoaGJtUnNaWEk2SUNobGRtVnVkQ2tnUFQ0Z2RtOXBaRnh5WEc0Z0lGOXZibEpsYzNWdFpUb2dLR1YyWlc1MEtTQTlQaUIyYjJsa1hISmNiaUFnS2k5Y2NseHVYSEpjYmlBZ0x5b3FYSEpjYmlBZ0tpQkRiMjV6ZEhKMVkzUnZjaUIwYUdGMElITm9iM1ZzWkNCaVpTQjFjMlZrSUdKNUlIUm9aU0JJZVhCbGNuUjVJRzkzYm1WeVhISmNiaUFnS2lCQWNHRnlZVzBnZTBoNWNHVnlkSGxWVWt4OUlHOTNibVZ5SUMwZ1NIbHdaWEowZVNCVlVrd2diM2R1WlhJdUlFRnVJRlZTVENCaGJHeHZZMkYwWldRZ1lua2dkR2hsSUhKMWJuUnBiV1VnZEdoaGRDQjFibWx4ZFdWc2VTQnBaR1Z1ZEdsbWFXVnpJSFJvWlNCSWVYQmxjblI1TGx4eVhHNGdJQ29nUUhCaGNtRnRJSHROYVc1cFFuVnpmU0JpZFhNZ0xTQkJiaUJwYm5OMFlXNWpaU0J2WmlCMGFHVWdUV2x1YVVKMWN5QndjbTkyYVdSbFpDQnBiaUIwYUdVZ2MyRnVaR0p2ZUM0Z1YyaGxiaUJoYmlCdlltcGxZM1FnS0ZKbGNHOXlkR1Z5SUc5eUlFOWljMlZ5ZG1Wa0tTQnBjeUJqY21WaGRHVmtMQ0IwYUdVZ1UzbHVZMmhsY2sxaGJtRm5aWElnZDJsc2JDQmhaR1FnWVNCc2FYTjBaVzVsY2lCcGJpQjBhR1VnVFdsdWFVSjFjeUIwYnlCeVpXTmxhWFpsTDNObGJtUWdUV1Z6YzJGblpYTWdiMllnZEdoaGRDQnZZbXBsWTNRdVhISmNiaUFnS2lCQWNHRnlZVzBnZTBwVFQwNTlJR052Ym1acFp5QXRJRU52Ym1acFozVnlZWFJwYjI0Z1pHRjBZUzRnVkdobElHOXViSGtnY21WeGRXbHlaV1FnWm1sbGJHUWdabTl5SUc1dmR5QnBjeUIwYUdVZ2NuVnVkR2x0WlZWU1RDNWNjbHh1SUNBcUwxeHlYRzRnSUdOdmJuTjBjblZqZEc5eUtHOTNibVZ5TENCaWRYTXNJR052Ym1acFp5a2dlMXh5WEc0Z0lDQWdiR1YwSUY5MGFHbHpJRDBnZEdocGN6dGNjbHh1WEhKY2JpQWdJQ0JmZEdocGN5NWZiM2R1WlhJZ1BTQnZkMjVsY2p0Y2NseHVJQ0FnSUY5MGFHbHpMbDlpZFhNZ1BTQmlkWE03WEhKY2JseHlYRzRnSUNBZ1gzUm9hWE11WDNOMVlsVlNUQ0E5SUdOdmJtWnBaeTV5ZFc1MGFXMWxWVkpNSUNzZ0p5OXpiU2M3WEhKY2JpQWdJQ0JmZEdocGN5NWZjblZ1ZEdsdFpWVnliQ0E5SUdOdmJtWnBaeTV5ZFc1MGFXMWxWVkpNTzF4eVhHNWNjbHh1SUNBZ0lGOTBhR2x6TGw5eVpYQnZjblJsY25NZ1BTQjdmVHRjY2x4dUlDQWdJRjkwYUdsekxsOXZZbk5sY25abGNuTWdQU0I3ZlR0Y2NseHVJQ0FnSUY5MGFHbHpMbDl3Y205MmFYTnBiMjVoYkhNZ1BTQjdmVHRjY2x4dVhISmNiaUFnSUNCaWRYTXVZV1JrVEdsemRHVnVaWElvYjNkdVpYSXNJQ2h0YzJjcElEMCtJSHRjY2x4dUlDQWdJQ0FnTHk5cFoyNXZjbVVnYlhObklITmxiblFnWW5rZ2FHbHRjMlZzWmx4eVhHNGdJQ0FnSUNCcFppQW9iWE5uTG1aeWIyMGdJVDA5SUc5M2JtVnlLU0I3WEhKY2JpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1cGJtWnZLQ2RiVTNsdVkyaGxjbDBnVTNsdVkyaGxjaTFTUTFZNklDY3NJRzF6Wnl3Z1gzUm9hWE1wTzF4eVhHNGdJQ0FnSUNBZ0lITjNhWFJqYUNBb2JYTm5MblI1Y0dVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUdOaGMyVWdKMlp2Y25kaGNtUW5PaUJmZEdocGN5NWZiMjVHYjNKM1lYSmtLRzF6WnlrN0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdZMkZ6WlNBblkzSmxZWFJsSnpvZ1gzUm9hWE11WDI5dVVtVnRiM1JsUTNKbFlYUmxLRzF6WnlrN0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdZMkZ6WlNBblpHVnNaWFJsSnpvZ1gzUm9hWE11WDI5dVVtVnRiM1JsUkdWc1pYUmxLRzF6WnlrN0lHSnlaV0ZyTzF4eVhHNGdJQ0FnSUNBZ0lDQWdZMkZ6WlNBblpYaGxZM1YwWlNjNklGOTBhR2x6TGw5dmJrVjRaV04xZEdVb2JYTm5LVHNnWW5KbFlXczdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOUtUdGNjbHh1SUNCOVhISmNibHh5WEc0Z0lDOHFLbHh5WEc0Z0lDb2dWR2hsSUc5M2JtVnlJRzltSUhSb1pTQlRlVzVqYUdWeUlHRnVaQ0JoYkd3Z1kzSmxZWFJsWkNCeVpYQnZjblJsY25NdVhISmNiaUFnS2lCQWRIbHdaU0I3U0hsd1pYSjBlVlZTVEgxY2NseHVJQ0FxTDF4eVhHNGdJR2RsZENCdmQyNWxjaWdwSUhzZ2NtVjBkWEp1SUhSb2FYTXVYMjkzYm1WeU95QjlYSEpjYmx4eVhHNGdJQzhxS2x4eVhHNGdJQ29nUVd4c0lHOTNibVZrSUhKbGNHOXlkR1Z5Y3l3Z2RHaGxJRzl1WlhNZ2RHaGhkQ0IzWlhKbElHTnlaV0YwWldRZ1lua2dZU0JqY21WaGRHVmNjbHh1SUNBcUlFQjBlWEJsSUh0UFltcGxZM1E4VlZKTUxDQkVZWFJoVDJKcVpXTjBVbVZ3YjNKMFpYSStmVnh5WEc0Z0lDb3ZYSEpjYmlBZ1oyVjBJSEpsY0c5eWRHVnljeWdwSUhzZ2NtVjBkWEp1SUhSb2FYTXVYM0psY0c5eWRHVnljenNnZlZ4eVhHNWNjbHh1SUNBdktpcGNjbHh1SUNBcUlFRnNiQ0J2ZDI1bFpDQnZZbk5sY25abGNuTXNJSFJvWlNCdmJtVnpJSFJvWVhRZ2QyVnlaU0JqY21WaGRHVmtJR0o1SUdFZ2JHOWpZV3dnYzNWaWMyTnlhWEIwYVc5dVhISmNiaUFnS2lCQWRIbHdaU0I3VDJKcVpXTjBQRlZTVEN3Z1JHRjBZVTlpYW1WamRFOWljMlZ5ZG1WeVBuMWNjbHh1SUNBcUwxeHlYRzRnSUdkbGRDQnZZbk5sY25abGNuTW9LU0I3SUhKbGRIVnliaUIwYUdsekxsOXZZbk5sY25abGNuTTdJSDFjY2x4dVhISmNiaUFnTHlvcVhISmNiaUFnS2lCU1pYRjFaWE4wSUdFZ1JHRjBZVTlpYW1WamRGSmxjRzl5ZEdWeUlHTnlaV0YwYVc5dUxpQlVhR1VnVlZKTUlIZHBiR3dnWW1VZ1ltVWdjbVZ4ZFdWemRHVmtJR0o1SUhSb1pTQmhiR3h2WTJGMGFXOXVJRzFsWTJoaGJtbHpiUzVjY2x4dUlDQXFJRUJ3WVhKaGJTQWdlMU5qYUdWdFlWVlNUSDBnYzJOb1pXMWhJQzBnU0hsd1pYSjBlU0JEWVhSaGJHOW5kV1VnVlZKTUlHRmtaSEpsYzNNZ2RHaGhkQ0JqWVc0Z1ltVWdkWE5sWkNCMGJ5QnlaWFJ5YVdWMlpTQjBhR1VnU2xOUFRpMVRZMmhsYldFZ1pHVnpZM0pwWW1sdVp5QjBhR1VnUkdGMFlTQlBZbXBsWTNRZ2MyTm9aVzFoWEhKY2JpQWdLaUJBY0dGeVlXMGdJSHRJZVhCbGNuUjVWVkpNVzExOUlHOWljMlZ5ZG1WeWN5QXRJRXhwYzNRZ2IyWWdhSGx3WlhKMGFXVnpJSFJvWVhRZ1lYSmxJSEJ5WlMxaGRYUm9iM0pwZW1Wa0lHWnZjaUJ6ZFdKelkzSnBjSFJwYjI1Y2NseHVJQ0FxSUVCd1lYSmhiU0FnZTBwVFQwNTlJR2x1YVhScFlXeEVZWFJoSUMwZ1NXNXBkR2xoYkNCa1lYUmhJRzltSUhSb1pTQnlaWEJ2Y25SbGNseHlYRzRnSUNvZ1FIQmhjbUZ0SUNCN1ltOXZiR1ZoYm4wZ2MzUnZjbVVnTFNBb1QzQjBhVzl1WVd3cElHbG1JSFJ5ZFdVc0lHOWlhbVZqZENCM2FXeHNJR0psSUhOMGIzSmxaQ0JpZVNCMGFHVWdjblZ1ZEdsdFpWeHlYRzRnSUNvZ1FIQmhjbUZ0SUNCN1ltOXZiR1ZoYm4wZ2NESndJQzBnS0U5d2RHbHZibUZzS1NCcFppQjBjblZsTENCa1lYUmhJSE41Ym1Ob2NtOXVhWE5oZEdsdmJpQnpkSEpsWVcwZ2QybHNiQ0IxYzJVZ2NESndJR052Ym01bFkzUnBiMjRnWVhNZ2JYVmphQ0JoY3lCd2IzTnphV0pzWlZ4eVhHNGdJQ29nUUhCaGNtRnRJQ0I3YzNSeWFXNW5mU0J1WVcxbElDMGdLRTl3ZEdsdmJtRnNLU0IwYUdVZ2JtRnRaU0J2WmlCMGFHVWdaR0YwWVc5aWFtVmpkRnh5WEc0Z0lDb2dRSEJoY21GdElDQjdUV1Z6YzJGblpVSnZaSGxKWkdWdWRHbDBlWDBnYVdSbGJuUnBkSGtnTFNBb2IzQjBhVzl1WVd3cElHbGtaVzUwYVhSNUlHUmhkR0VnZEc4Z1ltVWdZV1JrWldRZ2RHOGdhV1JsYm5ScGRIa2dkR2hsSUhWelpYSWdjbVZ3YjNKMFpYSXVJRlJ2SUdKbElIVnpaV1FnWm05eUlHeGxaMkZqZVNCcFpHVnVkR2wwYVdWekxseHlYRzRnSUNvZ1FIQmhjbUZ0SUNCN1UzbHVZMDFsZEdGa1lYUmhmU0JwYm5CMWRDQXRJQ2h2Y0hScGIyNWhiQ2tnWVd4c0lHMWxkR0ZrWVhSaElISmxjWFZwY21Wa0lIUnZJSE4xYm1NZ2RHaGxJRVJoZEdFZ1QySnFaV04wTGx4eVhHNGdJQ29nUUhKbGRIVnliaUI3VUhKdmJXbHpaVHhFWVhSaFQySnFaV04wVW1Wd2IzSjBaWEkrZlNCU1pYUjFjbTRnVUhKdmJXbHpaU0IwYnlCaElHNWxkeUJTWlhCdmNuUmxjaTRnVkdobElISmxjRzl5ZEdWeUlHTmhiaUJpWlNCaFkyTmxjSFJsWkNCdmNpQnlaV3BsWTNSbFpDQmllU0IwYUdVZ1VFVlFYSEpjYmlBZ0tpOWNjbHh1SUNCamNtVmhkR1VvYzJOb1pXMWhMQ0J2WW5ObGNuWmxjbk1zSUdsdWFYUnBZV3hFWVhSaExDQnpkRzl5WlNBOUlHWmhiSE5sTENCd01uQWdQU0JtWVd4elpTd2dibUZ0WlNBOUlDZHVieUJ1WVcxbEp5d2dhV1JsYm5ScGRIa3NJR2x1Y0hWMEtTQjdYSEpjYmx4eVhHNGdJQ0FnYVdZZ0tDRnpZMmhsYldFcElIUm9jbTkzSUVWeWNtOXlLQ2RiVTNsdVkyaGxjaUF0SUVOeVpXRjBaVjBnTFNCWmIzVWdibVZsWkNCemNHVmphV1o1SUhSb1pTQmtZWFJoSUc5aWFtVmpkQ0J6WTJobGJXRW5LVHRjY2x4dUlDQWdJR2xtSUNnaGIySnpaWEoyWlhKektTQjBhSEp2ZHlCRmNuSnZjaWduVzFONWJtTm9aWElnTFNCRGNtVmhkR1ZkSUMxVWFHVWdiMkp6WlhKMlpYSnpJSE5vYjNWc1pDQmlaU0JrWldacGJtVmtKeWs3WEhKY2JseHlYRzRnSUNBZ2JHVjBJRjkwYUdseklEMGdkR2hwY3p0Y2NseHVJQ0FnSUd4bGRDQmpjbVZoZEdWSmJuQjFkQ0FnUFNCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCcGJuQjFkQ2s3WEhKY2JseHlYRzRnSUNBZ1kzSmxZWFJsU1c1d2RYUXVjREp3SUQwZ2NESndPMXh5WEc0Z0lDQWdZM0psWVhSbFNXNXdkWFF1YzNSdmNtVWdQU0J6ZEc5eVpUdGNjbHh1SUNBZ0lHTnlaV0YwWlVsdWNIVjBMbk5qYUdWdFlTQTlJSE5qYUdWdFlUdGNjbHh1SUNBZ0lHTnlaV0YwWlVsdWNIVjBMbUYxZEdodmNtbHpaU0E5SUc5aWMyVnlkbVZ5Y3p0Y2NseHVJQ0FnSUNocGJtbDBhV0ZzUkdGMFlTa2dQeUJqY21WaGRHVkpibkIxZEM1a1lYUmhJRDBnWkdWbGNFTnNiMjVsS0dsdWFYUnBZV3hFWVhSaEtTQTZJR055WldGMFpVbHVjSFYwTG1SaGRHRWdQU0I3ZlR0Y2NseHVJQ0FnSUdOeVpXRjBaVWx1Y0hWMExtNWhiV1VnUFNCdVlXMWxMbXhsYm1kMGFDQTlQVDBnTUNBL0lDZHVieUJ1WVcxbEp5QTZJRzVoYldVN1hISmNiaUFnSUNCamNtVmhkR1ZKYm5CMWRDNXlaWEJ2Y25SbGNpQTlJRjkwYUdsekxsOXZkMjVsY2p0Y2NseHVJQ0FnSUdOeVpXRjBaVWx1Y0hWMExuSmxjM1Z0WlNBOUlHWmhiSE5sTzF4eVhHNGdJQ0FnYVdZZ0tHbHVjSFYwS1NCN1hISmNiaUFnSUNBZ0lHTnlaV0YwWlVsdWNIVjBMbTExZEhWaGJDQTlJR2x1Y0hWMExtMTFkSFZoYkNBL0lHbHVjSFYwTG0xMWRIVmhiQ0E2SUhSeWRXVTdYSEpjYmlBZ0lDQWdJR055WldGMFpVbHVjSFYwTG01aGJXVWdQU0JwYm5CMWRDNXVZVzFsSUQ4Z2FXNXdkWFF1Ym1GdFpTQTZJR055WldGMFpVbHVjSFYwTG01aGJXVTdYSEpjYmlBZ0lDQjlJR1ZzYzJVZ2V5QmpjbVZoZEdWSmJuQjFkQzV0ZFhSMVlXd2dQU0IwY25WbE95QjlYSEpjYmx4eVhHNGdJQ0FnYVdZZ0tHbGtaVzUwYVhSNUtTQWdJQ0FnSUhzZ1kzSmxZWFJsU1c1d2RYUXVhV1JsYm5ScGRIa2dQU0JwWkdWdWRHbDBlVHNnZlZ4eVhHNWNjbHh1SUNBZ0lDOHZUMkpxWldOMExtRnpjMmxuYmloamNtVmhkR1ZKYm5CMWRDd2dlM0psYzNWdFpUb2dabUZzYzJWOUtUdGNjbHh1WEhKY2JpQWdJQ0JqYjI1emIyeGxMbXh2WnlnblczTjVibU5vWlhJZ0xTQmpjbVZoZEdWZElDMGdZM0psWVhSbElGSmxjRzl5ZEdWeUlDMGdZM0psWVhSbFNXNXdkWFE2SUNjc0lHTnlaV0YwWlVsdWNIVjBLVHRjY2x4dVhISmNiaUFnSUNCeVpYUjFjbTRnWDNSb2FYTXVYMk55WldGMFpTaGpjbVZoZEdWSmJuQjFkQ2s3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F2S2lwY2NseHVJQ0FxSUZKbGNYVmxjM1FnWVNCRVlYUmhUMkpxWldOMFVtVndiM0owWlhJZ1kzSmxZWFJwYjI0dUlGUm9aU0JWVWt3Z2QybHNiQ0JpWlNCaVpTQnlaWEYxWlhOMFpXUWdZbmtnZEdobElHRnNiRzlqWVhScGIyNGdiV1ZqYUdGdWFYTnRMbHh5WEc0Z0lDb2dRSEJoY21GdElDQjdUMkpxWldOMGZTQmpjbWwwWlhKcFlTQXRJQ2h2Y0hScGIyNWhiQ2tnYVdSbGJuUnBkSGtnWkdGMFlTQjBieUJpWlNCaFpHUmxaQ0IwYnlCcFpHVnVkR2wwZVNCMGFHVWdkWE5sY2lCeVpYQnZjblJsY2k0Z1ZHOGdZbVVnZFhObFpDQm1iM0lnYkdWbllXTjVJR2xrWlc1MGFYUnBaWE11WEhKY2JpQWdLaUJBY21WMGRYSnVJSHRRY205dGFYTmxQRVJoZEdGUFltcGxZM1JTWlhCdmNuUmxjajViWFgwZ1VtVjBkWEp1SUdFZ2NISnZiV2x6WlNCM2FYUm9JR0VnYkdsemRDQnZaaUJFWVhSaFQySnFaV04wVW1Wd2IzSjBaWElnZEc4Z1ltVWdjbVZ6ZFcxbFpEdGNjbHh1SUNBcUwxeHlYRzRnSUhKbGMzVnRaVkpsY0c5eWRHVnljeWhqY21sMFpYSnBZU2tnZTF4eVhHNGdJQ0FnYkdWMElGOTBhR2x6SUQwZ2RHaHBjenRjY2x4dUlDQWdJR052Ym5OdmJHVXViRzluS0NkYmMzbHVZMmhsY2lBdElHTnlaV0YwWlYwZ0xTQnlaWE4xYldVZ1VtVndiM0owWlhJZ0xTQmpjbWwwWlhKcFlUb2dKeXdnWTNKcGRHVnlhV0VwTzF4eVhHNWNjbHh1SUNBZ0lFOWlhbVZqZEM1aGMzTnBaMjRvWTNKcGRHVnlhV0VzSUh0eVpYTjFiV1U2SUhSeWRXVjlLVHRjY2x4dVhISmNiaUFnSUNCeVpYUjFjbTRnWDNSb2FYTXVYM0psYzNWdFpVTnlaV0YwWlNoamNtbDBaWEpwWVNrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdktpcGNjbHh1SUNBcUlGSmxjWFZsYzNRZ1lTQnpkV0p6WTNKcGNIUnBiMjRnZEc4Z1lXNGdaWGhwYzNSbGJuUWdjbVZ3YjNKMFpYSWdiMkpxWldOMExseHlYRzRnSUNvZ1FIQmhjbUZ0SUh0VFkyaGxiV0ZWVWt4OUlITmphR1Z0WVNBdElFaDVjR1Z5ZEhrZ1EyRjBZV3h2WjNWbElGVlNUQ0JoWkdSeVpYTnpJSFJvWVhRZ1kyRnVJR0psSUhWelpXUWdkRzhnY21WMGNtbGxkbVVnZEdobElFcFRUMDR0VTJOb1pXMWhJR1JsYzJOeWFXSnBibWNnZEdobElFUmhkR0VnVDJKcVpXTjBJSE5qYUdWdFlWeHlYRzRnSUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1JWVWt4OUlHOWlhbFZTVENBdElFRmtaSEpsYzNNZ2IyWWdkR2hsSUdWNGFYTjBaVzUwSUhKbGNHOXlkR1Z5SUc5aWFtVmpkQ0IwYnlCaVpTQnZZbk5sY25abFpGeHlYRzRnSUNvZ1FIQmhjbUZ0SUh0Q2IyOXNaV0Z1ZlNCYmMzUnZjbVU5Wm1Gc2MyVmRJQzBnVTJGMlpTQjBhR1VnYzNWaWMyTnlhWEIwYVc5dUlHOXVJSFJvWlNCVGVXNWphR1Z5SUUxaGJtRm5aWElnWm05eUlHWjFjblJvWlhJZ2NtVnpkVzFsSUNoRVpXWmhkV3gwSUdseklHWmhiSE5sS1Z4eVhHNGdJQ29nUUhCaGNtRnRJSHRDYjI5c1pXRnVmU0JiY0RKd1BXWmhiSE5sWFNBdElFbHVabThnWVdKdmRYUWdhV1lnYzJodmRXeGtJSFZ6WlNCd01uQWdZMjl1Ym1WamRHbHZiaUFvUkdWbVlYVnNkQ0JwY3lCbVlXeHpaU2xjY2x4dUlDQXFJRUJ3WVhKaGJTQjdRbTl2YkdWaGJuMGdXMjExZEhWaGJEMTBjblZsWFNBdElFbHVabThnWVdKdmRYUWdhV1lnYldWemMyRm5aWE1nYjJZZ2RHaHBjeUJ2WW1wbFkzUWdjMmh2ZFd4a0lHSmxJR1Z1WTNKNWNIUmxaQ0FvUkdWbVlYVnNkQ0JwY3lCMGNuVmxLVnh5WEc0Z0lDb2dRSEJoY21GdElDQjdUV1Z6YzJGblpVSnZaSGxKWkdWdWRHbDBlWDBnYVdSbGJuUnBkSGtnTFNBb2IzQjBhVzl1WVd3cElHbGtaVzUwYVhSNUlHUmhkR0VnZEc4Z1ltVWdZV1JrWldRZ2RHOGdhV1JsYm5ScGRIa2dkR2hsSUhWelpYSWdjbVZ3YjNKMFpYSXVJRlJ2SUdKbElIVnpaV1FnWm05eUlHeGxaMkZqZVNCcFpHVnVkR2wwYVdWekxseHlYRzRnSUNvZ1FISmxkSFZ5YmlCN1VISnZiV2x6WlR4RVlYUmhUMkpxWldOMFQySnpaWEoyWlhJK2ZTQlNaWFIxY200Z1VISnZiV2x6WlNCMGJ5QmhJRzVsZHlCdlluTmxjblpsY2k0Z1NYUW5jeUJoYzNOdlkybGhkR1ZrSUhkcGRHZ2dkR2hsSUhKbGNHOXlkR1Z5TGx4eVhHNGdJQ292WEhKY2JpQWdjM1ZpYzJOeWFXSmxLSE5qYUdWdFlTd2diMkpxVlZKTUxDQnpkRzl5WlNBOUlHWmhiSE5sTENCd01uQWdQU0JtWVd4elpTd2diWFYwZFdGc0lEMGdkSEoxWlN3Z2FXUmxiblJwZEhrcElIdGNjbHh1SUNBZ0lHeGxkQ0JmZEdocGN5QTlJSFJvYVhNN1hISmNiaUFnSUNCc1pYUWdZM0pwZEdWeWFXRWdQU0I3ZlR0Y2NseHVYSEpjYmlBZ0lDQmpjbWwwWlhKcFlTNXdNbkFnUFNCd01uQTdYSEpjYmlBZ0lDQmpjbWwwWlhKcFlTNXpkRzl5WlNBOUlITjBiM0psTzF4eVhHNGdJQ0FnWTNKcGRHVnlhV0V1YzJOb1pXMWhJRDBnYzJOb1pXMWhPMXh5WEc1Y2NseHVJQ0FnSUdOeWFYUmxjbWxoTG5KbGMyOTFjbU5sSUQwZ2IySnFWVkpNTzF4eVhHNGdJQ0FnYVdZZ0tHbGtaVzUwYVhSNUtTQWdJQ0FnSUhzZ1kzSnBkR1Z5YVdFdWFXUmxiblJwZEhrZ1BTQnBaR1Z1ZEdsMGVUc2dmVnh5WEc1Y2NseHVJQ0FnSUM4dlZFOUVUem9nUm05eUlFWjFjblJvWlhJZ1UzUjFaSGxjY2x4dUlDQWdJR055YVhSbGNtbGhMbTExZEhWaGJDQTlJRzExZEhWaGJEdGNjbHh1WEhKY2JpQWdJQ0JqYjI1emIyeGxMbXh2WnlnblczTjVibU5vWlhJZ0xTQnpkV0p6WTNKcFltVmRJQzBnYzNWaWMyTnlhV0psSUdOeWFYUmxjbWxoT2lBbkxDQmpjbWwwWlhKcFlTazdYSEpjYmx4eVhHNGdJQ0FnVDJKcVpXTjBMbUZ6YzJsbmJpaGpjbWwwWlhKcFlTd2dlM0psYzNWdFpUb2dabUZzYzJWOUtUdGNjbHh1WEhKY2JpQWdJQ0J5WlhSMWNtNGdYM1JvYVhNdVgzTjFZbk5qY21saVpTaGpjbWwwWlhKcFlTazdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQXZLaXBjY2x4dUlDQXFJRkpsY1hWbGMzUWdZU0J6ZFdKelkzSnBjSFJwYjI0Z2RHOGdZVzRnWlhocGMzUmxiblFnY21Wd2IzSjBaWElnYjJKcVpXTjBMbHh5WEc0Z0lDb2dRSEJoY21GdElIdGpjbWwwWlhKcFlYMGdZM0pwZEdWeWFXRWdMU0JKYm1admNtMWhkR2x2YmlCMGJ5QmthWE5qYjNabGNua2dkR2hsSUc5aWMyVnlkbVZ5SUc5aWFtVmpkRnh5WEc0Z0lDb2dRSEpsZEhWeWJpQjdVSEp2YldselpUeEVZWFJoVDJKcVpXTjBUMkp6WlhKMlpYSStmU0JTWlhSMWNtNGdVSEp2YldselpTQjBieUJoSUc1bGR5QnZZbk5sY25abGNpNGdTWFFuY3lCaGMzTnZZMmxoZEdWa0lIZHBkR2dnZEdobElISmxjRzl5ZEdWeUxseHlYRzRnSUNvdlhISmNiaUFnY21WemRXMWxUMkp6WlhKMlpYSnpLR055YVhSbGNtbGhLU0I3WEhKY2JpQWdJQ0JzWlhRZ1gzUm9hWE1nUFNCMGFHbHpPMXh5WEc0Z0lDQWdiR1YwSUY5amNtbDBaWEpwWVNBOUlHTnlhWFJsY21saElIeDhJSHQ5TzF4eVhHNWNjbHh1SUNBZ0lFOWlhbVZqZEM1aGMzTnBaMjRvWDJOeWFYUmxjbWxoTENCN2NtVnpkVzFsT2lCMGNuVmxmU2s3WEhKY2JseHlYRzRnSUNBZ2NtVjBkWEp1SUY5MGFHbHpMbDl5WlhOMWJXVlRkV0p6WTNKcFltVW9YMk55YVhSbGNtbGhLVHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzhxS2x4eVhHNGdJQ29nVW1WeGRXVnpkQ0JoSUhKbFlXUWdZV04wYVc5dUlHOXVJSFJvWlNCeVpYQnZjblJsY2lCdlltcGxZM1JjY2x4dUlDQXFJRUJ3WVhKaGJTQjdUMkpxWldOMFZWSk1mU0J2WW1wVlVrd2dMU0JWVWt3Z2IyWWdkR2hsSUhKbGNHOXlkR1Z5SUc5aWFtVmpkQ0IwYnlCaVpTQnlaV0ZrWEhKY2JpQWdLaUJBY21WMGRYSnVJSHRRY205dGFYTmxQRTlpYW1WamRENTlJRkpsZEhWeWJpQlFjbTl0YVhObElIUnZJR3hoYzNRZ1lYWmhhV3hoWW14bElHUmhkR0VnYjJZZ2RHaGxJSEpsY0c5eWRHVnlYSEpjYmlBZ0tpOWNjbHh1SUNCeVpXRmtLRzlpYWxWU1RDa2dlMXh5WEc0Z0lDQWdiR1YwSUY5MGFHbHpJRDBnZEdocGN6dGNjbHh1WEhKY2JpQWdJQ0F2TDBaTVQxY3RUMVZVT2lCMGFHbHpJRzFsYzNOaFoyVWdkMmxzYkNCaVpTQnpaVzUwSUdScGNtVmpkR3g1SUhSdklISmxjRzl5ZEdWeUlHOWlhbVZqZENBb2JXRjVZbVVnZEdobGNtVWdhWE1nYm04Z2JHbHpkR1Z1WlhJZ1lYWmhhV3hoWW14bExDQnpieUJwZENCM2FXeHNJR0psSUhKbGMyOXNkbVZrSUhkcGRHZ2dUV1Z6YzJGblpVSjFjeUF0UGlCeVpYTnZiSFpsS1Z4eVhHNGdJQ0FnTHk5M2FXeHNJSEpsWVdOb0lIUm9aU0J5WlcxdmRHVWdiMkpxWldOMElHbHVJRVJoZEdGUFltcGxZM1JTWlhCdmNuUmxjaUF0UGlCZmIyNVNaV0ZrWEhKY2JpQWdJQ0JzWlhRZ2NtVmhaRTF6WnlBOUlIdGNjbHh1SUNBZ0lDQWdkSGx3WlRvZ0ozSmxZV1FuTENCbWNtOXRPaUJmZEdocGN5NWZiM2R1WlhJc0lIUnZPaUJ2WW1wVlVreGNjbHh1SUNBZ0lIMDdYSEpjYmx4eVhHNGdJQ0FnY21WMGRYSnVJRzVsZHlCUWNtOXRhWE5sS0NoeVpYTnZiSFpsTENCeVpXcGxZM1FwSUQwK0lIdGNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgySjFjeTV3YjNOMFRXVnpjMkZuWlNoeVpXRmtUWE5uTENBb2NtVndiSGtwSUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0JqYjI1emIyeGxMbXh2WnlnbmNtVmhaQzF5WlhOd2IyNXpaVG9nSnl3Z2NtVndiSGtwTzF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2h5WlhCc2VTNWliMlI1TG1OdlpHVWdQVDA5SURJd01Da2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ2NtVnpiMngyWlNoeVpYQnNlUzVpYjJSNUxuWmhiSFZsS1R0Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnY21WcVpXTjBLSEpsY0d4NUxtSnZaSGt1WkdWell5azdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lIMHBPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeW9xWEhKY2JpQWdLaUJUWlhSMWNDQjBhR1VnWTJGc2JHSmhZMnNnZEc4Z2NISnZZMlZ6Y3lCamNtVmhkR1VnWVc1a0lHUmxiR1YwWlNCbGRtVnVkSE1nYjJZZ2NtVnRiM1psSUZKbGNHOXlkR1Z5SUc5aWFtVmpkSE11WEhKY2JpQWdLaUJVYUdseklHbHpJSEpsYkdWaGRHVmtJSFJ2SUhSb1pTQnRaWE56WVdkbGJuTWdjMlZ1ZENCaWVTQmpjbVZoZEdVZ2RHOGdkR2hsSUc5aWMyVnlkbVZ5Y3lCSWVYQmxjblI1SUdGeWNtRjVMbHh5WEc0Z0lDb2dRSEJoY21GdElIdG1kVzVqZEdsdmJpaGxkbVZ1ZERvZ1RYTm5SWFpsYm5RcGZTQmpZV3hzWW1GamExeHlYRzRnSUNvdlhISmNiaUFnYjI1T2IzUnBabWxqWVhScGIyNG9ZMkZzYkdKaFkyc3BJSHRjY2x4dUlDQWdJSFJvYVhNdVgyOXVUbTkwYVdacFkyRjBhVzl1U0dGdVpHeGxjaUE5SUdOaGJHeGlZV05yTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnTHlvcVhISmNiaUFnS2lCVFpYUjFjQ0IwYUdVZ1kyRnNiR0poWTJzZ2RHOGdjSEp2WTJWemN5QmpiRzl6WlNCbGRtVnVkSE1nWm5KdmJTQjBhR1VnY25WdWRHbHRaUzVjY2x4dUlDQXFJRUJ3WVhKaGJTQjdablZ1WTNScGIyNG9aWFpsYm5RNklFMXpaMFYyWlc1MEtYMGdZMkZzYkdKaFkydGNjbHh1SUNBcUwxeHlYRzRnSUc5dVEyeHZjMlVvWTJGc2JHSmhZMnNwSUh0Y2NseHVJQ0FnSUhSb2FYTXVYMjl1UTJ4dmMyVWdQU0JqWVd4c1ltRmphenRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJRjlqY21WaGRHVW9hVzV3ZFhRcElIdGNjbHh1SUNBZ0lHeGxkQ0JmZEdocGN5QTlJSFJvYVhNN1hISmNibHh5WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2NseHVYSEpjYmlBZ0lDQWdJR3hsZENCeVpYQnZjblJsY2tsdWNIVjBJQ0E5SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdsdWNIVjBLVHRjY2x4dVhISmNiaUFnSUNBZ0lHeGxkQ0J5WlhOMWJXVWdQU0JwYm5CMWRDNXlaWE4xYldVN1hISmNibHh5WEc0Z0lDQWdJQ0J5WlhCdmNuUmxja2x1Y0hWMExtTnlaV0YwWldRZ1BTQW9ibVYzSUVSaGRHVXBMblJ2U1ZOUFUzUnlhVzVuS0NrN1hISmNiaUFnSUNBZ0lISmxjRzl5ZEdWeVNXNXdkWFF1Y25WdWRHbHRaU0E5SUY5MGFHbHpMbDl5ZFc1MGFXMWxWWEpzTzF4eVhHNWNjbHh1SUNBZ0lDQWdiR1YwSUhKbGNYVmxjM1JXWVd4MVpTQTlJR1JsWlhCRGJHOXVaU2h5WlhCdmNuUmxja2x1Y0hWMEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUdSbGJHVjBaU0J5WlhGMVpYTjBWbUZzZFdVdWNESndPMXh5WEc0Z0lDQWdJQ0JrWld4bGRHVWdjbVZ4ZFdWemRGWmhiSFZsTG5OMGIzSmxPMXh5WEc0Z0lDQWdJQ0JrWld4bGRHVWdjbVZ4ZFdWemRGWmhiSFZsTG05aWMyVnlkbVZ5Y3p0Y2NseHVJQ0FnSUNBZ1pHVnNaWFJsSUhKbGNYVmxjM1JXWVd4MVpTNXBaR1Z1ZEdsMGVUdGNjbHh1WEhKY2JpQWdJQ0FnSUM4dlJreFBWeTFQVlZRNklIUm9hWE1nYldWemMyRm5aU0IzYVd4c0lHSmxJSE5sYm5RZ2RHOGdkR2hsSUhKMWJuUnBiV1VnYVc1emRHRnVZMlVnYjJZZ1UzbHVZMmhsY2sxaGJtRm5aWElnTFQ0Z1gyOXVRM0psWVhSbFhISmNiaUFnSUNBZ0lHeGxkQ0J5WlhGMVpYTjBUWE5uSUQwZ2UxeHlYRzRnSUNBZ0lDQWdJSFI1Y0dVNklDZGpjbVZoZEdVbkxDQm1jbTl0T2lCZmRHaHBjeTVmYjNkdVpYSXNJSFJ2T2lCZmRHaHBjeTVmYzNWaVZWSk1MRnh5WEc0Z0lDQWdJQ0FnSUdKdlpIazZJSHNnY21WemRXMWxPaUJ5WlhOMWJXVXNJSFpoYkhWbE9pQnlaWEYxWlhOMFZtRnNkV1VnSUgxY2NseHVJQ0FnSUNBZ2ZUdGNjbHh1WEhKY2JseHlYRzRnSUNBZ0lDQnlaWEYxWlhOMFRYTm5MbUp2WkhrdWMyTm9aVzFoSUQwZ2NtVndiM0owWlhKSmJuQjFkQzV6WTJobGJXRTdYSEpjYmx4eVhHNGdJQ0FnSUNCcFppQW9jbVZ3YjNKMFpYSkpibkIxZEM1d01uQXBJSEpsY1hWbGMzUk5jMmN1WW05a2VTNXdNbkFnUFNCeVpYQnZjblJsY2tsdWNIVjBMbkF5Y0R0Y2NseHVJQ0FnSUNBZ2FXWWdLSEpsY0c5eWRHVnlTVzV3ZFhRdWMzUnZjbVVwSUhKbGNYVmxjM1JOYzJjdVltOWtlUzV6ZEc5eVpTQTlJSEpsY0c5eWRHVnlTVzV3ZFhRdWMzUnZjbVU3WEhKY2JpQWdJQ0FnSUdsbUlDaHlaWEJ2Y25SbGNrbHVjSFYwTG1sa1pXNTBhWFI1S1NCeVpYRjFaWE4wVFhObkxtSnZaSGt1YVdSbGJuUnBkSGtnUFNCeVpYQnZjblJsY2tsdWNIVjBMbWxrWlc1MGFYUjVPMXh5WEc1Y2NseHVJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29KMXR6ZVc1amFHVnlMbDlqY21WaGRHVmRPaUFuTENCeVpYQnZjblJsY2tsdWNIVjBMQ0J5WlhGMVpYTjBUWE5uS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQzh2Y21WeGRXVnpkQ0JqY21WaGRHVWdkRzhnZEdobElHRnNiRzlqWVhScGIyNGdjM2x6ZEdWdExpQkRZVzRnWW1VZ2NtVnFaV04wWldRZ1lua2dkR2hsSUZCdmJHbGplVVZ1WjJsdVpTNWNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgySjFjeTV3YjNOMFRXVnpjMkZuWlNoeVpYRjFaWE4wVFhObkxDQW9jbVZ3YkhrcElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5Z25XM041Ym1Ob1pYSWdMU0JqY21WaGRHVmRJQzBnWTNKbFlYUmxMWEpsYzNCdmJuTmxPaUFuTENCeVpYQnNlU2s3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSEpsY0d4NUxtSnZaSGt1WTI5a1pTQTlQVDBnTWpBd0tTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBdkwzSmxjRzl5ZEdWeUlHTnlaV0YwYVc5dUlHRmpZMlZ3ZEdWa1hISmNiaUFnSUNBZ0lDQWdJQ0J5WlhCdmNuUmxja2x1Y0hWMExuVnliQ0E5SUhKbGNHeDVMbUp2WkhrdWNtVnpiM1Z5WTJVN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ2NtVndiM0owWlhKSmJuQjFkQzV6ZEdGMGRYTWdQU0FuYkdsMlpTYzdMeThnY0dOb09pQmtieUIzWlNCdVpXUWdkR2hwY3o5Y2NseHVJQ0FnSUNBZ0lDQWdJSEpsY0c5eWRHVnlTVzV3ZFhRdWMzbHVZMmhsY2lBOUlGOTBhR2x6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdjbVZ3YjNKMFpYSkpibkIxZEM1amFHbHNaSEpsYm5NZ1BTQnlaWEJzZVM1aWIyUjVMbU5vYVd4a2NtVnVVbVZ6YjNWeVkyVnpPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJR3hsZENCdVpYZFBZbW9nUFNCZmRHaHBjeTVmY21Wd2IzSjBaWEp6VzNKbGNHOXlkR1Z5U1c1d2RYUXVkWEpzWFR0Y2NseHVJQ0FnSUNBZ0lDQWdJR2xtSUNnaGJtVjNUMkpxS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUc1bGQwOWlhaUE5SUc1bGR5QkVZWFJoVDJKcVpXTjBVbVZ3YjNKMFpYSW9jbVZ3YjNKMFpYSkpibkIxZENrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUY5MGFHbHpMbDl5WlhCdmNuUmxjbk5iY21Wd2IzSjBaWEpKYm5CMWRDNTFjbXhkSUQwZ2JtVjNUMkpxTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J1WlhkUFltb3VhVzUyYVhSbFQySnpaWEoyWlhKektHbHVjSFYwTG1GMWRHaHZjbWx6WlNrN1hISmNiaUFnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnY21WemIyeDJaU2h1WlhkUFltb3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnTHk5eVpYQnZjblJsY2lCamNtVmhkR2x2YmlCeVpXcGxZM1JsWkZ4eVhHNGdJQ0FnSUNBZ0lDQWdjbVZxWldOMEtISmxjR3g1TG1KdlpIa3VaR1Z6WXlrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0I5S1R0Y2NseHVJQ0FnSUgwcE8xeHlYRzVjY2x4dUlDQjlYSEpjYmx4eVhHNGdJRjl5WlhOMWJXVkRjbVZoZEdVb1kzSnBkR1Z5YVdFcElIdGNjbHh1SUNBZ0lHeGxkQ0JmZEdocGN5QTlJSFJvYVhNN1hISmNibHh5WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2NseHVJQ0FnSUNBZ2JHVjBJSEpsYzNWdFpTQTlJR055YVhSbGNtbGhMbkpsYzNWdFpUdGNjbHh1WEhKY2JpQWdJQ0FnSUM4dlJreFBWeTFQVlZRNklIUm9hWE1nYldWemMyRm5aU0IzYVd4c0lHSmxJSE5sYm5RZ2RHOGdkR2hsSUhKMWJuUnBiV1VnYVc1emRHRnVZMlVnYjJZZ1UzbHVZMmhsY2sxaGJtRm5aWElnTFQ0Z1gyOXVRM0psWVhSbFhISmNiaUFnSUNBZ0lHeGxkQ0J5WlhGMVpYTjBUWE5uSUQwZ2UxeHlYRzRnSUNBZ0lDQWdJSFI1Y0dVNklDZGpjbVZoZEdVbkxDQm1jbTl0T2lCZmRHaHBjeTVmYjNkdVpYSXNJSFJ2T2lCZmRHaHBjeTVmYzNWaVZWSk1MRnh5WEc0Z0lDQWdJQ0FnSUdKdlpIazZJSHNnY21WemRXMWxPaUJ5WlhOMWJXVWdmVnh5WEc0Z0lDQWdJQ0I5TzF4eVhHNWNjbHh1SUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvSjF0emVXNWphR1Z5SUMwZ1kzSmxZWFJsWFRvZ0p5d2dZM0pwZEdWeWFXRXNJSEpsY1hWbGMzUk5jMmNwTzF4eVhHNWNjbHh1SUNBZ0lDQWdhV1lnS0dOeWFYUmxjbWxoS1NCN1hISmNiaUFnSUNBZ0lDQWdjbVZ4ZFdWemRFMXpaeTVpYjJSNUxuWmhiSFZsSUQwZ1kzSnBkR1Z5YVdFN1hISmNiaUFnSUNBZ0lDQWdjbVZ4ZFdWemRFMXpaeTVpYjJSNUxuWmhiSFZsTG5KbGNHOXlkR1Z5SUQwZ1gzUm9hWE11WDI5M2JtVnlPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQnBaaUFvWTNKcGRHVnlhV0V1Y0RKd0tTQnlaWEYxWlhOMFRYTm5MbUp2WkhrdWNESndJRDBnWTNKcGRHVnlhV0V1Y0RKd08xeHlYRzRnSUNBZ0lDQnBaaUFvWTNKcGRHVnlhV0V1YzNSdmNtVXBJSEpsY1hWbGMzUk5jMmN1WW05a2VTNXpkRzl5WlNBOUlHTnlhWFJsY21saExuTjBiM0psTzF4eVhHNGdJQ0FnSUNCcFppQW9ZM0pwZEdWeWFXRXViMkp6WlhKMlpYSnpLU0J5WlhGMVpYTjBUWE5uTG1KdlpIa3VZWFYwYUc5eWFYTmxJRDBnWTNKcGRHVnlhV0V1YjJKelpYSjJaWEp6TzF4eVhHNGdJQ0FnSUNCcFppQW9ZM0pwZEdWeWFXRXVhV1JsYm5ScGRIa3BJSEpsY1hWbGMzUk5jMmN1WW05a2VTNXBaR1Z1ZEdsMGVTQTlJR055YVhSbGNtbGhMbWxrWlc1MGFYUjVPMXh5WEc1Y2NseHVJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29KMXR6ZVc1amFHVnlMbDl5WlhOMWJXVkRjbVZoZEdWZElDMGdjbVZ6ZFcxbElHMWxjM05oWjJVNklDY3NJSEpsY1hWbGMzUk5jMmNwTzF4eVhHNWNjbHh1SUNBZ0lDQWdMeTl5WlhGMVpYTjBJR055WldGMFpTQjBieUIwYUdVZ1lXeHNiMk5oZEdsdmJpQnplWE4wWlcwdUlFTmhiaUJpWlNCeVpXcGxZM1JsWkNCaWVTQjBhR1VnVUc5c2FXTjVSVzVuYVc1bExseHlYRzRnSUNBZ0lDQmZkR2hwY3k1ZlluVnpMbkJ2YzNSTlpYTnpZV2RsS0hKbGNYVmxjM1JOYzJjc0lDaHlaWEJzZVNrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUdOdmJuTnZiR1V1Ykc5bktDZGJjM2x1WTJobGNpNWZjbVZ6ZFcxbFEzSmxZWFJsWFNBdElHTnlaV0YwWlMxeVpYTjFiV1ZrTFhKbGMzQnZibk5sT2lBbkxDQnlaWEJzZVNrN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0hKbGNHeDVMbUp2WkhrdVkyOWtaU0E5UFQwZ01qQXdLU0I3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnYkdWMElHeHBjM1JQWmxKbGNHOXlkR1Z5Y3lBOUlISmxjR3g1TG1KdlpIa3VkbUZzZFdVN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ1ptOXlJQ2hzWlhRZ2FXNWtaWGdnYVc0Z2JHbHpkRTltVW1Wd2IzSjBaWEp6S1NCN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkdGMFlVOWlhbVZqZENBOUlHeHBjM1JQWmxKbGNHOXlkR1Z5YzF0cGJtUmxlRjA3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdkwzSmxjRzl5ZEdWeUlHTnlaV0YwYVc5dUlHRmpZMlZ3ZEdWa1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtZWFJoVDJKcVpXTjBMbVJoZEdFZ1BTQmtaV1Z3UTJ4dmJtVW9aR0YwWVU5aWFtVmpkQzVrWVhSaEtTQjhmQ0I3ZlR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrWVhSaFQySnFaV04wTG1Ob2FXeGtjbVZ1VDJKcVpXTjBjeWtnZXlCa1lYUmhUMkpxWldOMExtTm9hV3hrY21WdVQySnFaV04wY3lBOUlHUmxaWEJEYkc5dVpTaGtZWFJoVDJKcVpXTjBMbU5vYVd4a2NtVnVUMkpxWldOMGN5azdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdSaGRHRlBZbXBsWTNRdWJYVjBkV0ZzSUQwZ1ptRnNjMlU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdGUFltcGxZM1F1Y21WemRXMWxJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVTlpYW1WamRDNXpkR0YwZFhNZ1BTQW5iR2wyWlNjN0x5OGdjR05vT2lCa2J5QjNaU0J1WldRZ2RHaHBjejljY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaR0YwWVU5aWFtVmpkQzV6ZVc1amFHVnlJRDBnWDNSb2FYTTdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbXh2WnlnblczTjVibU5vWlhJdVgzSmxjM1Z0WlVOeVpXRjBaVjBnTFNCamNtVmhkR1V0Y21WemRXMWxaQzFrWVhSaFQySnFaV04wVW1Wd2IzSjBaWEluTENCa1lYUmhUMkpxWldOMEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdVpYZFBZbW9nUFNCdVpYY2dSR0YwWVU5aWFtVmpkRkpsY0c5eWRHVnlLR1JoZEdGUFltcGxZM1FwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1JoZEdGUFltcGxZM1F1WTJocGJHUnlaVzVQWW1wbFkzUnpLU0I3SUc1bGQwOWlhaTV5WlhOMWJXVkRhR2xzWkhKbGJuTW9aR0YwWVU5aWFtVmpkQzVqYUdsc1pISmxiazlpYW1WamRITXBPeUI5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRjkwYUdsekxsOXlaWEJ2Y25SbGNuTmJaR0YwWVU5aWFtVmpkQzUxY214ZElEMGdibVYzVDJKcU8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQnlaWE52YkhabEtGOTBhR2x6TGw5eVpYQnZjblJsY25NcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WDI5dVVtVndiM0owWlhKelVtVnpkVzFsS1NCMGFHbHpMbDl2YmxKbGNHOXlkR1Z5YzFKbGMzVnRaU2gwYUdsekxsOXlaWEJ2Y25SbGNuTXBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSEpsY0d4NUxtSnZaSGt1WTI5a1pTQTlQVDBnTkRBMEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCeVpYTnZiSFpsS0h0OUtUdGNjbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0x5OXlaWEJ2Y25SbGNpQmpjbVZoZEdsdmJpQnlaV3BsWTNSbFpGeHlYRzRnSUNBZ0lDQWdJQ0FnY21WcVpXTjBLSEpsY0d4NUxtSnZaSGt1WkdWell5azdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lIMHBPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdYM04xWW5OamNtbGlaU2hwYm5CMWRDa2dlMXh5WEc0Z0lDQWdiR1YwSUY5MGFHbHpJRDBnZEdocGN6dGNjbHh1WEhKY2JpQWdJQ0J5WlhSMWNtNGdibVYzSUZCeWIyMXBjMlVvS0hKbGMyOXNkbVVzSUhKbGFtVmpkQ2tnUFQ0Z2UxeHlYRzVjY2x4dUlDQWdJQ0FnTHk5R1RFOVhMVTlWVkRvZ2RHaHBjeUJ0WlhOellXZGxJSGRwYkd3Z1ltVWdjMlZ1ZENCMGJ5QjBhR1VnY25WdWRHbHRaU0JwYm5OMFlXNWpaU0J2WmlCVGVXNWphR1Z5VFdGdVlXZGxjaUF0UGlCZmIyNU1iMk5oYkZOMVluTmpjbWxpWlZ4eVhHNGdJQ0FnSUNCc1pYUWdjM1ZpYzJOeWFXSmxUWE5uSUQwZ2UxeHlYRzRnSUNBZ0lDQWdJSFI1Y0dVNklDZHpkV0p6WTNKcFltVW5MQ0JtY205dE9pQmZkR2hwY3k1ZmIzZHVaWElzSUhSdk9pQmZkR2hwY3k1ZmMzVmlWVkpNTEZ4eVhHNGdJQ0FnSUNBZ0lHSnZaSGs2SUh0OVhISmNiaUFnSUNBZ0lIMDdYSEpjYmx4eVhHNGdJQ0FnSUNBdkx5QkllWEJsY25SNUlISmxjWFZsYzNRZ2RHOGdZbVVnWVc0Z1QySnpaWEoyWlhKY2NseHVJQ0FnSUNBZ0x5OGdhSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM0psVkVoSlRrc3RjSEp2YW1WamRDOXpjR1ZqY3k5aWJHOWlMMjFoYzNSbGNpOXRaWE56WVdkbGN5OWtZWFJoTFhONWJtTXRiV1Z6YzJGblpYTXViV1FqYUhsd1pYSjBlUzF5WlhGMVpYTjBMWFJ2TFdKbExXRnVMVzlpYzJWeWRtVnlYSEpjYmx4eVhHNGdJQ0FnSUNBdkx5QlNaWE4xYldVZ1UzVmljMk55YVhCMGFXOXVjeUJtYjNJZ2RHaGxJSE5oYldVZ1NIbHdaWEowZVNCVlVreGNjbHh1SUNBZ0lDQWdMeThnYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNKbFZFaEpUa3N0Y0hKdmFtVmpkQzl6Y0dWamN5OWliRzlpTDIxaGMzUmxjaTl0WlhOellXZGxjeTlrWVhSaExYTjVibU10YldWemMyRm5aWE11YldRamNtVnpkVzFsTFhOMVluTmpjbWx3ZEdsdmJuTXRabTl5TFhSb1pTMXpZVzFsTFdoNWNHVnlkSGt0ZFhKc1hISmNibHh5WEc0Z0lDQWdJQ0F2THlCU1pYTjFiV1VnVTNWaWMyTnlhWEIwYVc5dWN5Qm1iM0lnWVNCalpYSjBZV2x1SUhWelpYSWdZVzVrSUdSaGRHRWdjMk5vWlcxaElHbHVaR1Z3Wlc1a1pXNTBiSGtnYjJZZ2RHaGxJRWg1Y0dWeWRIa2dWVkpNTGx4eVhHNGdJQ0FnSUNBdkx5Qm9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZjbVZVU0VsT1N5MXdjbTlxWldOMEwzTndaV056TDJKc2IySXZiV0Z6ZEdWeUwyMWxjM05oWjJWekwyUmhkR0V0YzNsdVl5MXRaWE56WVdkbGN5NXRaQ055WlhOMWJXVXRjM1ZpYzJOeWFYQjBhVzl1Y3kxbWIzSXRZUzFqWlhKMFlXbHVMWFZ6WlhJdFlXNWtMV1JoZEdFdGMyTm9aVzFoTFdsdVpHVndaVzVrWlc1MGJIa3RiMll0ZEdobExXaDVjR1Z5ZEhrdGRYSnNYSEpjYmlBZ0lDQWdJR2xtSUNocGJuQjFkQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2hwYm5CMWRDNW9ZWE5QZDI1UWNtOXdaWEowZVNnbmNESndKeWtwSUhOMVluTmpjbWxpWlUxelp5NWliMlI1TG5BeWNDQTlJR2x1Y0hWMExuQXljRHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9hVzV3ZFhRdWFHRnpUM2R1VUhKdmNHVnlkSGtvSjNOMGIzSmxKeWtwSUhOMVluTmpjbWxpWlUxelp5NWliMlI1TG5OMGIzSmxJRDBnYVc1d2RYUXVjM1J2Y21VN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0dsdWNIVjBMbWhoYzA5M2JsQnliM0JsY25SNUtDZHpZMmhsYldFbktTa2djM1ZpYzJOeWFXSmxUWE5uTG1KdlpIa3VjMk5vWlcxaElEMGdhVzV3ZFhRdWMyTm9aVzFoTzF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2hwYm5CMWRDNW9ZWE5QZDI1UWNtOXdaWEowZVNnbmFXUmxiblJwZEhrbktTa2djM1ZpYzJOeWFXSmxUWE5uTG1KdlpIa3VhV1JsYm5ScGRIa2dQU0JwYm5CMWRDNXBaR1Z1ZEdsMGVUdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2FXNXdkWFF1YUdGelQzZHVVSEp2Y0dWeWRIa29KM0psYzI5MWNtTmxKeWtwSUhOMVluTmpjbWxpWlUxelp5NWliMlI1TG5KbGMyOTFjbU5sSUQwZ2FXNXdkWFF1Y21WemIzVnlZMlU3WEhKY2JpQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJSE4xWW5OamNtbGlaVTF6Wnk1aWIyUjVMbkpsYzNWdFpTQTlJR2x1Y0hWMExuSmxjM1Z0WlR0Y2NseHVYSEpjYmlBZ0lDQWdJQzh2VkU5RVR6b2dSbTl5SUVaMWNuUm9aWElnVTNSMVpIbGNjbHh1SUNBZ0lDQWdhV1lnS0dsdWNIVjBMbWhoYzA5M2JsQnliM0JsY25SNUtDZHRkWFIxWVd3bktTa2djM1ZpYzJOeWFXSmxUWE5uTG1KdlpIa3ViWFYwZFdGc1FYVjBhR1Z1ZEdsallYUnBiMjRnUFNCcGJuQjFkQzV0ZFhSMVlXdzdYSEpjYmx4eVhHNGdJQ0FnSUNCamIyNXpiMnhsTG14dlp5Z25XM041Ym1Ob1pYSmZjM1ZpYzJOeWFXSmxYU0F0SUhOMVluTmpjbWxpWlNCdFpYTnpZV2RsT2lBbkxDQnBibkIxZEN3Z2MzVmljMk55YVdKbFRYTm5LVHRjY2x4dVhISmNiaUFnSUNBZ0lDOHZjbVZ4ZFdWemRDQnpkV0p6WTNKcGNIUnBiMjVjY2x4dUlDQWdJQ0FnTHk5UWNtOTJhWE5wYjI1aGJDQmtZWFJoSUdseklHRndjR3hwWldRZ2RHOGdkR2hsSUVSaGRHRlBZbXBsWTNSUFluTmxjblpsY2lCaFpuUmxjaUJqYjI1bWFYSnRZWFJwYjI0dUlFOXlJR1JwYzJOaGNtUmxaQ0JwWmlCMGFHVnlaU0JwY3lCdWJ5QmpiMjVtYVhKdFlYUnBiMjR1WEhKY2JpQWdJQ0FnSUM4dlptOXlJRzF2Y21VZ2FXNW1ieUJ6WldVZ2RHaGxJRVJoZEdGUWNtOTJhWE5wYjI1aGJDQmpiR0Z6Y3lCa2IyTjFiV1Z1ZEdGMGFXOXVMbHh5WEc0Z0lDQWdJQ0JmZEdocGN5NWZZblZ6TG5CdmMzUk5aWE56WVdkbEtITjFZbk5qY21saVpVMXpaeXdnS0hKbGNHeDVLU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvSjF0emVXNWphR1Z5WFNBdElITjFZbk5qY21saVpTMXlaWE53YjI1elpUb2dKeXdnY21Wd2JIa3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQnNaWFFnYjJKcVZWSk1JRDBnY21Wd2JIa3VZbTlrZVM1eVpYTnZkWEpqWlR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnYkdWMElHNWxkMUJ5YjNacGMybHZibUZzSUQwZ1gzUm9hWE11WDNCeWIzWnBjMmx2Ym1Gc2MxdHZZbXBWVWt4ZE8xeHlYRzRnSUNBZ0lDQWdJR1JsYkdWMFpTQmZkR2hwY3k1ZmNISnZkbWx6YVc5dVlXeHpXMjlpYWxWU1RGMDdYSEpjYmlBZ0lDQWdJQ0FnYVdZZ0tHNWxkMUJ5YjNacGMybHZibUZzS1NCdVpYZFFjbTkyYVhOcGIyNWhiQzVmY21Wc1pXRnpaVXhwYzNSbGJtVnljeWdwTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2NtVndiSGt1WW05a2VTNWpiMlJsSUR3Z01qQXdLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExteHZaeWduVzNONWJtTm9aWEpkSUMwZ2JtVjNJRVJoZEdGUWNtOTJhWE5wYjI1aGJEb2dKeXdnY21Wd2JIa3VZbTlrZVM1amFHbHNaSEpsYmxKbGMyOTFjbU5sY3l3Z2IySnFWVkpNS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJRzVsZDFCeWIzWnBjMmx2Ym1Gc0lEMGdibVYzSUVSaGRHRlFjbTkyYVhOcGIyNWhiQ2hmZEdocGN5NWZiM2R1WlhJc0lHOWlhbFZTVEN3Z1gzUm9hWE11WDJKMWN5d2djbVZ3YkhrdVltOWtlUzVqYUdsc1pISmxibEpsYzI5MWNtTmxjeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQmZkR2hwY3k1ZmNISnZkbWx6YVc5dVlXeHpXMjlpYWxWU1RGMGdQU0J1WlhkUWNtOTJhWE5wYjI1aGJEdGNjbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hKbGNHeDVMbUp2WkhrdVkyOWtaU0E5UFQwZ01qQXdLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExteHZaeWduVzNONWJtTm9aWEpkSUMwZ2JtVjNJRVJoZEdFZ1QySnFaV04wSUU5aWMyVnlkbVZ5T2lBbkxDQnlaWEJzZVN3Z1gzUm9hWE11WDNCeWIzWnBjMmx2Ym1Gc2N5azdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdiR1YwSUc5aWMyVnlkbVZ5U1c1d2RYUWdQU0J5WlhCc2VTNWliMlI1TG5aaGJIVmxPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJRzlpYzJWeWRtVnlTVzV3ZFhRdWMzbHVZMmhsY2lBOUlGOTBhR2x6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdiMkp6WlhKMlpYSkpibkIxZEM1d01uQWdQU0JwYm5CMWRDNXdNbkE3WEhKY2JpQWdJQ0FnSUNBZ0lDQnZZbk5sY25abGNrbHVjSFYwTG5OMGIzSmxJRDBnYVc1d2RYUXVjM1J2Y21VN1hISmNiaUFnSUNBZ0lDQWdJQ0J2WW5ObGNuWmxja2x1Y0hWMExtbGtaVzUwYVhSNUlEMGdhVzV3ZFhRdWFXUmxiblJwZEhrN1hISmNiaUFnSUNBZ0lDQWdJQ0J2WW5ObGNuWmxja2x1Y0hWMExuSmxjM1Z0WlNBOUlHWmhiSE5sTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUM4dklIUnZaRzg2SUVadmNpQkdkWEowYUdWeUlGTjBkV1I1WEhKY2JpQWdJQ0FnSUNBZ0lDQnZZbk5sY25abGNrbHVjSFYwTG0xMWRIVmhiQ0E5SUdsdWNIVjBMbTExZEhWaGJEdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQXZMMjlpYzJWeWRtVnlTVzV3ZFhRdVkyaHBiR1J5Wlc0Z1BTQnVaWGRRY205MmFYTnBiMjVoYkM1amFHbHNaSEpsYmp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBdkwxUlBSRTg2SUcxMWRIVmhiRUYxZEdobGJuUnBZMkYwYVc5dUlFWnZjaUJHZFhKMGFHVnlJRk4wZFdSNVhISmNiaUFnSUNBZ0lDQWdJQ0JzWlhRZ2JtVjNUMkpxSUQwZ1gzUm9hWE11WDI5aWMyVnlkbVZ5YzF0dlltcFZVa3hkTzF4eVhHNGdJQ0FnSUNBZ0lDQWdhV1lnS0NGdVpYZFBZbW9wSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYm1WM1QySnFJRDBnYm1WM0lFUmhkR0ZQWW1wbFkzUlBZbk5sY25abGNpaHZZbk5sY25abGNrbHVjSFYwS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWDNSb2FYTXVYMjlpYzJWeWRtVnljMXR2WW1wVlVreGRJRDBnYm1WM1QySnFPMXh5WEc0Z0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYm1WM1QySnFMbk41Ym1Nb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5Z25XM041Ym1Ob1pYSmRJQzBnYm1WM0lFUmhkR0VnVDJKcVpXTjBJRTlpYzJWeWRtVnlJR0ZzY21WaFpIa2daWGhwYzNRNklDY3NJRzVsZDA5aWFpazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdjbVZ6YjJ4MlpTaHVaWGRQWW1vcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2h1WlhkUWNtOTJhWE5wYjI1aGJDa2dleUJ1WlhkUWNtOTJhWE5wYjI1aGJDNWhjSEJzZVNodVpYZFBZbW9wT3lCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQnlaV3BsWTNRb2NtVndiSGt1WW05a2VTNWtaWE5qS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnZlNrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNCZmNtVnpkVzFsVTNWaWMyTnlhV0psS0dOeWFYUmxjbWxoS1NCN1hISmNiaUFnSUNCc1pYUWdYM1JvYVhNZ1BTQjBhR2x6TzF4eVhHNWNjbHh1SUNBZ0lISmxkSFZ5YmlCdVpYY2dVSEp2YldselpTZ29jbVZ6YjJ4MlpTd2djbVZxWldOMEtTQTlQaUI3WEhKY2JseHlYRzRnSUNBZ0lDQXZMMFpNVDFjdFQxVlVPaUIwYUdseklHMWxjM05oWjJVZ2QybHNiQ0JpWlNCelpXNTBJSFJ2SUhSb1pTQnlkVzUwYVcxbElHbHVjM1JoYm1ObElHOW1JRk41Ym1Ob1pYSk5ZVzVoWjJWeUlDMCtJRjl2Ymt4dlkyRnNVM1ZpYzJOeWFXSmxYSEpjYmlBZ0lDQWdJR3hsZENCemRXSnpZM0pwWW1WTmMyY2dQU0I3WEhKY2JpQWdJQ0FnSUNBZ2RIbHdaVG9nSjNOMVluTmpjbWxpWlNjc0lHWnliMjA2SUY5MGFHbHpMbDl2ZDI1bGNpd2dkRzg2SUY5MGFHbHpMbDl6ZFdKVlVrd3NYSEpjYmlBZ0lDQWdJQ0FnWW05a2VUb2dlMzFjY2x4dUlDQWdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQWdJQzh2SUVoNWNHVnlkSGtnY21WeGRXVnpkQ0IwYnlCaVpTQmhiaUJQWW5ObGNuWmxjbHh5WEc0Z0lDQWdJQ0F2THlCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmNtVlVTRWxPU3kxd2NtOXFaV04wTDNOd1pXTnpMMkpzYjJJdmJXRnpkR1Z5TDIxbGMzTmhaMlZ6TDJSaGRHRXRjM2x1WXkxdFpYTnpZV2RsY3k1dFpDTm9lWEJsY25SNUxYSmxjWFZsYzNRdGRHOHRZbVV0WVc0dGIySnpaWEoyWlhKY2NseHVYSEpjYmlBZ0lDQWdJQzh2SUZKbGMzVnRaU0JUZFdKelkzSnBjSFJwYjI1eklHWnZjaUIwYUdVZ2MyRnRaU0JJZVhCbGNuUjVJRlZTVEZ4eVhHNGdJQ0FnSUNBdkx5Qm9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZjbVZVU0VsT1N5MXdjbTlxWldOMEwzTndaV056TDJKc2IySXZiV0Z6ZEdWeUwyMWxjM05oWjJWekwyUmhkR0V0YzNsdVl5MXRaWE56WVdkbGN5NXRaQ055WlhOMWJXVXRjM1ZpYzJOeWFYQjBhVzl1Y3kxbWIzSXRkR2hsTFhOaGJXVXRhSGx3WlhKMGVTMTFjbXhjY2x4dVhISmNiaUFnSUNBZ0lDOHZJRkpsYzNWdFpTQlRkV0p6WTNKcGNIUnBiMjV6SUdadmNpQmhJR05sY25SaGFXNGdkWE5sY2lCaGJtUWdaR0YwWVNCelkyaGxiV0VnYVc1a1pYQmxibVJsYm5Sc2VTQnZaaUIwYUdVZ1NIbHdaWEowZVNCVlVrd3VYSEpjYmlBZ0lDQWdJQzh2SUdoMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5eVpWUklTVTVMTFhCeWIycGxZM1F2YzNCbFkzTXZZbXh2WWk5dFlYTjBaWEl2YldWemMyRm5aWE12WkdGMFlTMXplVzVqTFcxbGMzTmhaMlZ6TG0xa0kzSmxjM1Z0WlMxemRXSnpZM0pwY0hScGIyNXpMV1p2Y2kxaExXTmxjblJoYVc0dGRYTmxjaTFoYm1RdFpHRjBZUzF6WTJobGJXRXRhVzVrWlhCbGJtUmxiblJzZVMxdlppMTBhR1V0YUhsd1pYSjBlUzExY214Y2NseHVJQ0FnSUNBZ2FXWWdLR055YVhSbGNtbGhLU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLR055YVhSbGNtbGhMbWhoYzA5M2JsQnliM0JsY25SNUtDZHdNbkFuS1NrZ2MzVmljMk55YVdKbFRYTm5MbUp2WkhrdWNESndJRDBnWTNKcGRHVnlhV0V1Y0RKd08xeHlYRzRnSUNBZ0lDQWdJR2xtSUNoamNtbDBaWEpwWVM1b1lYTlBkMjVRY205d1pYSjBlU2duYzNSdmNtVW5LU2tnYzNWaWMyTnlhV0psVFhObkxtSnZaSGt1YzNSdmNtVWdQU0JqY21sMFpYSnBZUzV6ZEc5eVpUdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb1kzSnBkR1Z5YVdFdWFHRnpUM2R1VUhKdmNHVnlkSGtvSjNOamFHVnRZU2NwS1NCemRXSnpZM0pwWW1WTmMyY3VZbTlrZVM1elkyaGxiV0VnUFNCamNtbDBaWEpwWVM1elkyaGxiV0U3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLR055YVhSbGNtbGhMbWhoYzA5M2JsQnliM0JsY25SNUtDZHBaR1Z1ZEdsMGVTY3BLU0J6ZFdKelkzSnBZbVZOYzJjdVltOWtlUzVwWkdWdWRHbDBlU0E5SUdOeWFYUmxjbWxoTG1sa1pXNTBhWFI1TzF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2hqY21sMFpYSnBZUzVvWVhOUGQyNVFjbTl3WlhKMGVTZ25jbVZ6YjNWeVkyVW5LU2tnYzNWaWMyTnlhV0psVFhObkxtSnZaSGt1Y21WemIzVnlZMlVnUFNCamNtbDBaWEpwWVM1MWNtdzdYSEpjYmlBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lITjFZbk5qY21saVpVMXpaeTVpYjJSNUxuSmxjM1Z0WlNBOUlHTnlhWFJsY21saExuSmxjM1Z0WlR0Y2NseHVYSEpjYmlBZ0lDQWdJQzh2VkU5RVR6b2dSbTl5SUVaMWNuUm9aWElnVTNSMVpIbGNjbHh1SUNBZ0lDQWdiR1YwSUcxMWRIVmhiRUYxZEdobGJuUnBZMkYwYVc5dUlEMGdZM0pwZEdWeWFXRXViWFYwZFdGc08xeHlYRzRnSUNBZ0lDQnBaaUFvWTNKcGRHVnlhV0V1YUdGelQzZHVVSEp2Y0dWeWRIa29KMjExZEhWaGJDY3BLU0J6ZFdKelkzSnBZbVZOYzJjdVltOWtlUzV0ZFhSMVlXeEJkWFJvWlc1MGFXTmhkR2x2YmlBOUlHMTFkSFZoYkVGMWRHaGxiblJwWTJGMGFXOXVPMXh5WEc1Y2NseHVJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29KMXR6ZVc1amFHVnlYU0F0SUhOMVluTmpjbWxpWlNCdFpYTnpZV2RsT2lBbkxDQmpjbWwwWlhKcFlTd2djM1ZpYzJOeWFXSmxUWE5uS1R0Y2NseHVYSEpjYmlBZ0lDQWdJQzh2Y21WeGRXVnpkQ0J6ZFdKelkzSnBjSFJwYjI1Y2NseHVJQ0FnSUNBZ0x5OVFjbTkyYVhOcGIyNWhiQ0JrWVhSaElHbHpJR0Z3Y0d4cFpXUWdkRzhnZEdobElFUmhkR0ZQWW1wbFkzUlBZbk5sY25abGNpQmhablJsY2lCamIyNW1hWEp0WVhScGIyNHVJRTl5SUdScGMyTmhjbVJsWkNCcFppQjBhR1Z5WlNCcGN5QnVieUJqYjI1bWFYSnRZWFJwYjI0dVhISmNiaUFnSUNBZ0lDOHZabTl5SUcxdmNtVWdhVzVtYnlCelpXVWdkR2hsSUVSaGRHRlFjbTkyYVhOcGIyNWhiQ0JqYkdGemN5QmtiMk4xYldWdWRHRjBhVzl1TGx4eVhHNGdJQ0FnSUNCZmRHaHBjeTVmWW5WekxuQnZjM1JOWlhOellXZGxLSE4xWW5OamNtbGlaVTF6Wnl3Z0tISmxjR3g1S1NBOVBpQjdYSEpjYmlBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0oxdHplVzVqYUdWeVhTQXRJSE4xWW5OamNtbGlaUzF5WlhOMWJXVmtMWEpsYzNCdmJuTmxPaUFuTENCeVpYQnNlU2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJR3hsZENCdlltcFZVa3dnUFNCeVpYQnNlUzVpYjJSNUxuSmxjMjkxY21ObE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCc1pYUWdibVYzVUhKdmRtbHphVzl1WVd3Z1BTQmZkR2hwY3k1ZmNISnZkbWx6YVc5dVlXeHpXMjlpYWxWU1RGMDdYSEpjYmlBZ0lDQWdJQ0FnWkdWc1pYUmxJRjkwYUdsekxsOXdjbTkyYVhOcGIyNWhiSE5iYjJKcVZWSk1YVHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9ibVYzVUhKdmRtbHphVzl1WVd3cElHNWxkMUJ5YjNacGMybHZibUZzTGw5eVpXeGxZWE5sVEdsemRHVnVaWEp6S0NrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUdsbUlDaHlaWEJzZVM1aWIyUjVMbU52WkdVZ1BDQXlNREFwSUhzZ0x5OGdkRzlrYnpvZ1kyaGxZMnNnYVdZZ2RHaHBjeUJwY3lCdVpXVmtaV1FnWm05eUlIUm9aU0J5WlhOMWJXVmNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExteHZaeWduVzNONWJtTm9aWEpkSUMwZ2NtVnpkVzFsSUc1bGR5QkVZWFJoVUhKdmRtbHphVzl1WVd3NklDY3NJSEpsY0d4NUxDQnZZbXBWVWt3cE8xeHlYRzRnSUNBZ0lDQWdJQ0FnYm1WM1VISnZkbWx6YVc5dVlXd2dQU0J1WlhjZ1JHRjBZVkJ5YjNacGMybHZibUZzS0Y5MGFHbHpMbDl2ZDI1bGNpd2diMkpxVlZKTUxDQmZkR2hwY3k1ZlluVnpMQ0J5WlhCc2VTNWliMlI1TG1Ob2FXeGtjbVZ1VW1WemIzVnlZMlZ6S1R0Y2NseHVJQ0FnSUNBZ0lDQWdJRjkwYUdsekxsOXdjbTkyYVhOcGIyNWhiSE5iYjJKcVZWSk1YU0E5SUc1bGQxQnliM1pwYzJsdmJtRnNPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSEpsY0d4NUxtSnZaSGt1WTI5a1pTQTlQVDBnTWpBd0tTQjdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdiR1YwSUd4cGMzUlBaazlpYzJWeWRtVnljeUE5SUhKbGNHeDVMbUp2WkhrdWRtRnNkV1U3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnWm05eUlDaHNaWFFnYVc1a1pYZ2dhVzRnYkdsemRFOW1UMkp6WlhKMlpYSnpLU0I3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaR0YwWVU5aWFtVmpkQ0E5SUd4cGMzUlBaazlpYzJWeWRtVnljMXRwYm1SbGVGMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWJHOW5LQ2RiYzNsdVkyaGxjbDBnTFNCU1pYTjFiV1VnVDJKcVpXTjBJRTlpYzJWeWRtVnlPaUFuTENCeVpYQnNlU3dnWkdGMFlVOWlhbVZqZEN3Z1gzUm9hWE11WDNCeWIzWnBjMmx2Ym1Gc2N5azdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pHRjBZVTlpYW1WamRDNWphR2xzWkhKbGJrOWlhbVZqZEhNcElIc2daR0YwWVU5aWFtVmpkQzVqYUdsc1pISmxiazlpYW1WamRITWdQU0JrWldWd1EyeHZibVVvWkdGMFlVOWlhbVZqZEM1amFHbHNaSEpsYms5aWFtVmpkSE1wT3lCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtZWFJoVDJKcVpXTjBMbVJoZEdFZ1BTQmtaV1Z3UTJ4dmJtVW9aR0YwWVU5aWFtVmpkQzVrWVhSaEtTQjhmQ0I3ZlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlVOWlhbVZqZEM1eVpYTjFiV1VnUFNCMGNuVmxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtZWFJoVDJKcVpXTjBMbk41Ym1Ob1pYSWdQU0JmZEdocGN6dGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2VkU5RVR6b2diWFYwZFdGc1FYVjBhR1Z1ZEdsallYUnBiMjRnUm05eUlFWjFjblJvWlhJZ1UzUjFaSGxjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvSjF0emVXNWphR1Z5TGw5eVpYTjFiV1ZUZFdKelkzSnBZbVZkSUMwZ1kzSmxZWFJsSUc1bGR5QmtZWFJoVDJKcVpXTjBPaUFuTENCa1lYUmhUMkpxWldOMEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzVsZDA5aWFpQTlJRzVsZHlCRVlYUmhUMkpxWldOMFQySnpaWEoyWlhJb1pHRjBZVTlpYW1WamRDazdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pHRjBZVTlpYW1WamRDNWphR2xzWkhKbGJrOWlhbVZqZEhNcElIc2dibVYzVDJKcUxuSmxjM1Z0WlVOb2FXeGtjbVZ1Y3loa1lYUmhUMkpxWldOMExtTm9hV3hrY21WdVQySnFaV04wY3lrN0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29KMXR6ZVc1amFHVnlMbDl5WlhOMWJXVlRkV0p6WTNKcFltVmRJQzBnYm1WM0lHUmhkR0ZQWW1wbFkzUW5MQ0J1WlhkUFltb3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmZkR2hwY3k1ZmIySnpaWEoyWlhKelcyNWxkMDlpYWk1MWNteGRJRDBnYm1WM1QySnFPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGOTBhR2x6TGw5d2NtOTJhWE5wYjI1aGJITmJibVYzVDJKcUxuVnliRjBwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCZmRHaHBjeTVmY0hKdmRtbHphVzl1WVd4elcyNWxkMDlpYWk1MWNteGRMbUZ3Y0d4NUtHNWxkMDlpYWlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZiR1YwY3lCemVXNWpJSGRwZEdnZ1VtVndiM0owWlhKY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2FYUWdkMkZ6SUdOdmJXMWxiblJsWkNCMGJ5QnNaWFFnYUhsd1pYSjBhV1Z6SUdSbFkybGtaU0IzYUdWdUlIUnZJSE41Ym1OY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk5dVpYZFBZbW91YzNsdVl5Z3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lISmxjMjlzZG1Vb1gzUm9hWE11WDI5aWMyVnlkbVZ5Y3lrN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgyOXVUMkp6WlhKMlpYSnpVbVZ6ZFcxbEtTQjBhR2x6TGw5dmJrOWljMlZ5ZG1WeWMxSmxjM1Z0WlNoZmRHaHBjeTVmYjJKelpYSjJaWEp6S1R0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoeVpYQnNlUzVpYjJSNUxtTnZaR1VnUFQwOUlEUXdOQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdjbVZ6YjJ4MlpTaDdmU2s3WEhKY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJSEpsYW1WamRDaHlaWEJzZVM1aWIyUjVMbVJsYzJNcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnZlNrN1hISmNiaUFnSUNCOUtUdGNjbHh1WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F2TDBaTVQxY3RTVTQ2SUcxbGMzTmhaMlVnY21WalpXbDJaV1FnWm5KdmJTQmhJR3h2WTJGc0lISjFiblJwYldVZ1VtVndiM0owWlhKUFltcGxZM1FnTFQ0Z1gyOXVVbVZ0YjNSbFUzVmljMk55YVdKbFhISmNiaUFnWDI5dVJtOXlkMkZ5WkNodGMyY3BJSHRjY2x4dUlDQWdJR3hsZENCZmRHaHBjeUE5SUhSb2FYTTdYSEpjYmx4eVhHNGdJQ0FnYkdWMElISmxjRzl5ZEdWeUlEMGdYM1JvYVhNdVgzSmxjRzl5ZEdWeWMxdHRjMmN1WW05a2VTNTBiMTA3WEhKY2JpQWdJQ0J5WlhCdmNuUmxjaTVmYjI1R2IzSjNZWEprS0cxelp5azdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQXZMMFpNVDFjdFNVNDZJRzFsYzNOaFoyVWdjbVZqWldsMlpXUWdabkp2YlNCaElISmxiVzkwWlNCVGVXNWphR1Z5SUMwK0lHTnlaV0YwWlNBb2RHaHBjeUJwY3lCaFkzUjFZV3hzZVNCaGJpQnBiblpwZEdGMGFXOXVJSFJ2SUhOMVluTmpjbWxpWlNsY2NseHVJQ0JmYjI1U1pXMXZkR1ZEY21WaGRHVW9iWE5uS1NCN1hISmNiaUFnSUNCc1pYUWdYM1JvYVhNZ1BTQjBhR2x6TzF4eVhHNGdJQ0FnYkdWMElISmxjMjkxY21ObElEMGdiWE5uTG1aeWIyMHVjMnhwWTJVb01Dd2dMVEV6S1RzZ0x5OXlaVzF2ZG1VZ1hDSXZjM1ZpYzJOeWFYQjBhVzl1WENJZ1puSnZiU0IwYUdVZ1ZWSk1YSEpjYmlBZ0lDQnNaWFFnWkdsMmFXUmxaRlZTVENBOUlHUnBkbWxrWlZWU1RDaHlaWE52ZFhKalpTazdYSEpjYmlBZ0lDQnNaWFFnWkc5dFlXbHVJRDBnWkdsMmFXUmxaRlZTVEM1a2IyMWhhVzQ3WEhKY2JseHlYRzRnSUNBZ2JHVjBJR1YyWlc1MElEMGdlMXh5WEc0Z0lDQWdJQ0IwZVhCbE9pQnRjMmN1ZEhsd1pTeGNjbHh1SUNBZ0lDQWdabkp2YlRvZ2JYTm5MbUp2WkhrdWMyOTFjbU5sTEZ4eVhHNGdJQ0FnSUNCMWNtdzZJSEpsYzI5MWNtTmxMRnh5WEc0Z0lDQWdJQ0JrYjIxaGFXNDZJR1J2YldGcGJpeGNjbHh1SUNBZ0lDQWdjMk5vWlcxaE9pQnRjMmN1WW05a2VTNXpZMmhsYldFc1hISmNiaUFnSUNBZ0lIWmhiSFZsT2lCdGMyY3VZbTlrZVM1MllXeDFaU3hjY2x4dUlDQWdJQ0FnYVdSbGJuUnBkSGs2SUcxelp5NWliMlI1TG1sa1pXNTBhWFI1TEZ4eVhHNWNjbHh1SUNBZ0lDQWdZV05yT2lBb2RIbHdaU2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJR3hsZENCc1ZIbHdaU0E5SURJd01EdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2RIbHdaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdiRlI1Y0dVZ1BTQjBlWEJsTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBdkwzTmxibVFnWVdOcklISmxjM0J2Ym5ObElHMWxjM05oWjJWY2NseHVJQ0FnSUNBZ0lDQmZkR2hwY3k1ZlluVnpMbkJ2YzNSTlpYTnpZV2RsS0h0Y2NseHVJQ0FnSUNBZ0lDQWdJR2xrT2lCdGMyY3VhV1FzSUhSNWNHVTZJQ2R5WlhOd2IyNXpaU2NzSUdaeWIyMDZJRzF6Wnk1MGJ5d2dkRzg2SUcxelp5NW1jbTl0TEZ4eVhHNGdJQ0FnSUNBZ0lDQWdZbTlrZVRvZ2V5QmpiMlJsT2lCc1ZIbHdaU0I5WEhKY2JpQWdJQ0FnSUNBZ2ZTazdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDA3WEhKY2JseHlYRzRnSUNBZ2FXWWdLRjkwYUdsekxsOXZiazV2ZEdsbWFXTmhkR2x2YmtoaGJtUnNaWElwSUh0Y2NseHVJQ0FnSUNBZ1kyOXVjMjlzWlM1cGJtWnZLQ2RiVTNsdVkyaGxjbDBnVGs5VVNVWkpRMEZVU1U5T0xVVldSVTVVT2lBbkxDQmxkbVZ1ZENrN1hISmNiaUFnSUNBZ0lGOTBhR2x6TGw5dmJrNXZkR2xtYVdOaGRHbHZia2hoYm1Sc1pYSW9aWFpsYm5RcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0x5OUdURTlYTFVsT09pQnRaWE56WVdkbElISmxZMlZwZG1Wa0lHWnliMjBnWVNCeVpXMXZkR1VnUkdGMFlVOWlhbVZqZEZKbGNHOXlkR1Z5SUMwK0lHUmxiR1YwWlZ4eVhHNGdJRjl2YmxKbGJXOTBaVVJsYkdWMFpTaHRjMmNwSUh0Y2NseHVJQ0FnSUd4bGRDQmZkR2hwY3lBOUlIUm9hWE03WEhKY2JseHlYRzRnSUNBdkwzSmxiVzkyWlNCY0lpOXpkV0p6WTNKcGNIUnBiMjVjSWlCbWNtOXRJSFJvWlNCVlVreGNjbHh1SUNBZ0lHeGxkQ0J5WlhOdmRYSmpaU0E5SUcxelp5NWliMlI1TG5KbGMyOTFjbU5sTzF4eVhHNWNjbHh1SUNBZ0lHeGxkQ0J2WW1wbFkzUWdQU0JmZEdocGN5NWZiMkp6WlhKMlpYSnpXM0psYzI5MWNtTmxYVHRjY2x4dVhISmNiaUFnSUNCc1pYUWdkVzV6ZFdKelkzSnBZbVVnUFNCN1hISmNiaUFnSUNBZ0lHWnliMjA2SUY5MGFHbHpMbTkzYm1WeUxGeHlYRzRnSUNBZ0lDQjBiem9nWDNSb2FYTXVYM04xWWxWU1RDeGNjbHh1SUNBZ0lDQWdhV1E2SUcxelp5NXBaQ3hjY2x4dUlDQWdJQ0FnZEhsd1pUb2dKM1Z1YzNWaWMyTnlhV0psSnl4Y2NseHVJQ0FnSUNBZ1ltOWtlVG9nZXlCeVpYTnZkWEpqWlRvZ2JYTm5MbUp2WkhrdWNtVnpiM1Z5WTJVZ2ZWeHlYRzRnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0JmZEdocGN5NWZZblZ6TG5CdmMzUk5aWE56WVdkbEtIVnVjM1ZpYzJOeWFXSmxLVHRjY2x4dVhISmNiaUFnSUNCa1pXeGxkR1VnWDNSb2FYTXVYMjlpYzJWeWRtVnljMXR5WlhOdmRYSmpaVjA3WEhKY2JseHlYRzRnSUNBZ2FXWWdLRzlpYW1WamRDa2dlMXh5WEc0Z0lDQWdJQ0JzWlhRZ1pYWmxiblFnUFNCN1hISmNiaUFnSUNBZ0lDQWdkSGx3WlRvZ2JYTm5MblI1Y0dVc1hISmNiaUFnSUNBZ0lDQWdkWEpzT2lCeVpYTnZkWEpqWlN4Y2NseHVJQ0FnSUNBZ0lDQnBaR1Z1ZEdsMGVUb2diWE5uTG1KdlpIa3VhV1JsYm5ScGRIa3NYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHRmphem9nS0hSNWNHVXBJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJR3hsZENCc1ZIbHdaU0E5SURJd01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUdsbUlDaDBlWEJsS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4VWVYQmxJRDBnZEhsd1pUdGNjbHh1SUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUM4dlZFOUVUem9nWVc1NUlHOTBhR1Z5SUdScFptWmxjbVZ1ZENCdmNIUnBiMjV6SUdadmNpQjBhR1VnY21Wc1pXRnpaU0J3Y205alpYTnpMQ0JzYVd0bElHRmpZMlZ3ZENCaWRYUWdibTl5SUhKbGJHVmhjMlVnYkc5allXdy9YSEpjYmlBZ0lDQWdJQ0FnSUNCcFppQW9iRlI1Y0dVZ1BUMDlJREl3TUNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1F1WkdWc1pYUmxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdMeTl6Wlc1a0lHRmpheUJ5WlhOd2IyNXpaU0J0WlhOellXZGxYSEpjYmlBZ0lDQWdJQ0FnSUNCZmRHaHBjeTVmWW5WekxuQnZjM1JOWlhOellXZGxLSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1E2SUcxelp5NXBaQ3dnZEhsd1pUb2dKM0psYzNCdmJuTmxKeXdnWm5KdmJUb2diWE5uTG5SdkxDQjBiem9nYlhObkxtWnliMjBzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0p2WkhrNklIc2dZMjlrWlRvZ2JGUjVjR1VzSUhOdmRYSmpaVG9nWDNSb2FYTXVYMjkzYm1WeUlIMWNjbHh1SUNBZ0lDQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnZlR0Y2NseHVYSEpjYmlBZ0lDQWdJR2xtSUNoZmRHaHBjeTVmYjI1T2IzUnBabWxqWVhScGIyNUlZVzVrYkdWeUtTQjdYSEpjYmlBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0owNVBWRWxHU1VOQlZFbFBUaTFGVmtWT1ZEb2dKeXdnWlhabGJuUXBPMXh5WEc0Z0lDQWdJQ0FnSUY5MGFHbHpMbDl2Yms1dmRHbG1hV05oZEdsdmJraGhibVJzWlhJb1pYWmxiblFwTzF4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNCZmRHaHBjeTVmWW5WekxuQnZjM1JOWlhOellXZGxLSHRjY2x4dUlDQWdJQ0FnSUNCcFpEb2diWE5uTG1sa0xDQjBlWEJsT2lBbmNtVnpjRzl1YzJVbkxDQm1jbTl0T2lCdGMyY3VkRzhzSUhSdk9pQnRjMmN1Wm5KdmJTeGNjbHh1SUNBZ0lDQWdJQ0JpYjJSNU9pQjdJR052WkdVNklEUXdOQ3dnYzI5MWNtTmxPaUJmZEdocGN5NWZiM2R1WlhJZ2ZWeHlYRzRnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzh2SUdOc2IzTmxJR1YyWlc1MElISmxZMlZwZG1Wa0lHWnliMjBnY25WdWRHbHRaU0J5WldkcGMzUnllVnh5WEc0Z0lGOXZia1Y0WldOMWRHVW9iWE5uS1NCN1hISmNiaUFnSUNCc1pYUWdYM1JvYVhNZ1BTQjBhR2x6TzF4eVhHNWNjbHh1SUNBZ0lHeGxkQ0J5WlhCc2VTQTlJSHRjY2x4dUlDQWdJQ0FnYVdRNklHMXpaeTVwWkN3Z2RIbHdaVG9nSjNKbGMzQnZibk5sSnl3Z1puSnZiVG9nYlhObkxuUnZMQ0IwYnpvZ2JYTm5MbVp5YjIwc1hISmNiaUFnSUNBZ0lHSnZaSGs2SUhzZ1kyOWtaVG9nTWpBd0lIMWNjbHh1SUNBZ0lIMDdYSEpjYmx4eVhHNGdJQ0FnYVdZZ0tDaHRjMmN1Wm5KdmJTQTlQVDBnWDNSb2FYTXVYM0oxYm5ScGJXVlZjbXdnS3lBbkwzSmxaMmx6ZEhKNUx5Y2dmSHdnYlhObkxtWnliMjBnUFQwOUlGOTBhR2x6TGw5eWRXNTBhVzFsVlhKc0lDc2dKeTl5WldkcGMzUnllU2NwSUNZbUlHMXpaeTVpYjJSNUlDWW1JRzF6Wnk1aWIyUjVMbTFsZEdodlpDQW1KaUJ0YzJjdVltOWtlUzV0WlhSb2IyUWdQVDA5SUNkamJHOXpaU2NnSmlZZ1gzUm9hWE11WDI5dVEyeHZjMlVwSUh0Y2NseHVJQ0FnSUNBZ2JHVjBJR1YyWlc1MElEMGdlMXh5WEc0Z0lDQWdJQ0FnSUhSNWNHVTZJQ2RqYkc5elpTY3NYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lHRmphem9nS0hSNWNHVXBJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJR2xtSUNoMGVYQmxLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsY0d4NUxtSnZaSGt1WTI5a1pTQTlJSFI1Y0dVN1hISmNiaUFnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0F2TDNObGJtUWdZV05ySUhKbGMzQnZibk5sSUcxbGMzTmhaMlZjY2x4dUlDQWdJQ0FnSUNBZ0lGOTBhR2x6TGw5aWRYTXVjRzl6ZEUxbGMzTmhaMlVvY21Wd2JIa3BPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ2ZUdGNjbHh1WEhKY2JpQWdJQ0FnSUdOdmJuTnZiR1V1YVc1bWJ5Z25XMU41Ym1Ob1pYSmRJRU5zYjNObExVVldSVTVVT2lBbkxDQmxkbVZ1ZENrN1hISmNiaUFnSUNBZ0lGOTBhR2x6TGw5dmJrTnNiM05sS0dWMlpXNTBLVHRjY2x4dVhISmNiaUFnSUNCOUlHVnNjMlVnZTF4eVhHNGdJQ0FnSUNCZmRHaHBjeTVmWW5WekxuQnZjM1JOWlhOellXZGxLSEpsY0d4NUtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F2S2lwY2NseHVJQ0FxSUVOaGJHeGlZV05ySUhONWMzUmxiU0IwYnlCMGNtbG5aMlZ5SUhSb1pTQnlaWE4xYldWa0lISmxjRzl5ZEdWeWMxeHlYRzRnSUNvZ1FIQmhjbUZ0SUNCN1JuVnVZM1JwYjI1OUlHTmhiR3hpWVdOcklDMGdablZ1WTNScGIyNGdZMkZzYkdKaFkyc2dkMmhwWTJnZ2QybHNiQ0JpWlNCcGJuWnZhMlZrWEhKY2JpQWdLaUJBY21WMGRYSnVJSHRQWW1wbFkzUThWVkpNTENCRVlYUmhUMkpxWldOMFVtVndiM0owWlhJK2ZTQlNaWFIxY200Z2IyNWxJRzlpYW1WamRDQjNhWFJvSUdGc2JDQnlaWE4xYldWa0lISmxjRzl5ZEdWeWN6dGNjbHh1SUNBcUwxeHlYRzRnSUc5dVVtVndiM0owWlhKelVtVnpkVzFsS0dOaGJHeGlZV05yS1NCN1hISmNiaUFnSUNCMGFHbHpMbDl2YmxKbGNHOXlkR1Z5YzFKbGMzVnRaU0E5SUdOaGJHeGlZV05yTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnTHlvcVhISmNiaUFnS2lCRFlXeHNZbUZqYXlCemVYTjBaVzBnZEc4Z2RISnBaMmRsY2lCMGFHVWdjbVZ6ZFcxbFpDQnZZbk5sY25abGNuTmNjbHh1SUNBcUlFQndZWEpoYlNBZ2UwWjFibU4wYVc5dWZTQmpZV3hzWW1GamF5QXRJR1oxYm1OMGFXOXVJR05oYkd4aVlXTnJJSGRvYVdOb0lIZHBiR3dnWW1VZ2FXNTJiMnRsWkZ4eVhHNGdJQ29nUUhKbGRIVnliaUI3VDJKcVpXTjBQRlZTVEN3Z1JHRjBZVTlpYW1WamRFOWljMlZ5ZG1WeVBuMGdVbVYwZFhKdUlHOXVaU0J2WW1wbFkzUWdkMmwwYUNCaGJHd2djbVZ6ZFcxbFpDQnZZbk5sY25abGNuTTdYSEpjYmlBZ0tpOWNjbHh1SUNCdmJrOWljMlZ5ZG1WeWMxSmxjM1Z0WlNoallXeHNZbUZqYXlrZ2UxeHlYRzRnSUNBZ2RHaHBjeTVmYjI1UFluTmxjblpsY25OU1pYTjFiV1VnUFNCallXeHNZbUZqYXp0Y2NseHVJQ0I5WEhKY2JseHlYRzU5WEhKY2JseHlYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQlRlVzVqYUdWeU8xeHlYRzVjYmx4dVhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVpQXZMMXh1THk4Z0xpOXpjbU12YzNsdVkyaGxjaTlUZVc1amFHVnlMbXB6SWl3aWFXMXdiM0owSUZONWJtTm9aWElnWm5KdmJTQW5MaTl6ZVc1amFHVnlMMU41Ym1Ob1pYSW5PMXh5WEc1cGJYQnZjblFnUkdGMFlVOWlhbVZqZEZKbGNHOXlkR1Z5SUdaeWIyMGdKeTR2YzNsdVkyaGxjaTlFWVhSaFQySnFaV04wVW1Wd2IzSjBaWEluTzF4eVhHNXBiWEJ2Y25RZ1JHRjBZVTlpYW1WamRFOWljMlZ5ZG1WeUlHWnliMjBnSnk0dmMzbHVZMmhsY2k5RVlYUmhUMkpxWldOMFQySnpaWEoyWlhJbk8xeHlYRzVjY2x4dVpYaHdiM0owSUh0VGVXNWphR1Z5TENCRVlYUmhUMkpxWldOMFVtVndiM0owWlhJc0lFUmhkR0ZQWW1wbFkzUlBZbk5sY25abGNuMDdYSEpjYmx4dVhHNWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNJQzh2WEc0dkx5QXVMM055WXk5VGVXNWphR1Z5TG1weklpd2lMeW9xWEhKY2Jpb2dRMjl3ZVhKcFoyaDBJREl3TVRZZ1VGUWdTVzV2ZG1IRHA4T2pieUJsSUZOcGMzUmxiV0Z6SUZOQlhISmNiaW9nUTI5d2VYSnBaMmgwSURJd01UWWdTVTVGVTBNdFNVUmNjbHh1S2lCRGIzQjVjbWxuYUhRZ01qQXhOaUJSVlU5Q1NWTWdUa1ZVVjA5U1MxTWdVMHhjY2x4dUtpQkRiM0I1Y21sbmFIUWdNakF4TmlCR1VrRlZUa2hQUmtWU0xVZEZVMFZNVEZORFNFRkdWQ0JhVlZJZ1JrOUZVa1JGVWxWT1J5QkVSVklnUVU1SFJWZEJUa1JVUlU0Z1JrOVNVME5JVlU1SElFVXVWbHh5WEc0cUlFTnZjSGx5YVdkb2RDQXlNREUySUU5U1FVNUhSU0JUUVZ4eVhHNHFJRU52Y0hseWFXZG9kQ0F5TURFMklFUmxkWFJ6WTJobElGUmxiR1ZyYjIwZ1FVZGNjbHh1S2lCRGIzQjVjbWxuYUhRZ01qQXhOaUJCY0dsNlpXVmNjbHh1S2lCRGIzQjVjbWxuYUhRZ01qQXhOaUJVUlVOSVRrbFRRMGhGSUZWT1NWWkZVbE5KVkVGVUlFSkZVa3hKVGx4eVhHNHFYSEpjYmlvZ1RHbGpaVzV6WldRZ2RXNWtaWElnZEdobElFRndZV05vWlNCTWFXTmxibk5sTENCV1pYSnphVzl1SURJdU1DQW9kR2hsSUZ3aVRHbGpaVzV6WlZ3aUtUdGNjbHh1S2lCNWIzVWdiV0Y1SUc1dmRDQjFjMlVnZEdocGN5Qm1hV3hsSUdWNFkyVndkQ0JwYmlCamIyMXdiR2xoYm1ObElIZHBkR2dnZEdobElFeHBZMlZ1YzJVdVhISmNiaW9nV1c5MUlHMWhlU0J2WW5SaGFXNGdZU0JqYjNCNUlHOW1JSFJvWlNCTWFXTmxibk5sSUdGMFhISmNiaXBjY2x4dUtpQWdJR2gwZEhBNkx5OTNkM2N1WVhCaFkyaGxMbTl5Wnk5c2FXTmxibk5sY3k5TVNVTkZUbE5GTFRJdU1GeHlYRzRxWEhKY2Jpb2dWVzVzWlhOeklISmxjWFZwY21Wa0lHSjVJR0Z3Y0d4cFkyRmliR1VnYkdGM0lHOXlJR0ZuY21WbFpDQjBieUJwYmlCM2NtbDBhVzVuTENCemIyWjBkMkZ5WlZ4eVhHNHFJR1JwYzNSeWFXSjFkR1ZrSUhWdVpHVnlJSFJvWlNCTWFXTmxibk5sSUdseklHUnBjM1J5YVdKMWRHVmtJRzl1SUdGdUlGd2lRVk1nU1ZOY0lpQkNRVk5KVXl4Y2NseHVLaUJYU1ZSSVQxVlVJRmRCVWxKQlRsUkpSVk1nVDFJZ1EwOU9SRWxVU1U5T1V5QlBSaUJCVGxrZ1MwbE9SQ3dnWldsMGFHVnlJR1Y0Y0hKbGMzTWdiM0lnYVcxd2JHbGxaQzVjY2x4dUtpQlRaV1VnZEdobElFeHBZMlZ1YzJVZ1ptOXlJSFJvWlNCemNHVmphV1pwWXlCc1lXNW5kV0ZuWlNCbmIzWmxjbTVwYm1jZ2NHVnliV2x6YzJsdmJuTWdZVzVrWEhKY2Jpb2diR2x0YVhSaGRHbHZibk1nZFc1a1pYSWdkR2hsSUV4cFkyVnVjMlV1WEhKY2Jpb3FMMXh5WEc1Y2NseHVhVzF3YjNKMElGTjVibU5QWW1wbFkzUWdabkp2YlNBbkxpOVFjbTk0ZVU5aWFtVmpkQ2M3WEhKY2JseHlYRzR2TDJsdGNHOXlkQ0I3SUdSbFpYQkRiRzl1WlNCOUlHWnliMjBnSnk0dUwzVjBhV3h6TDNWMGFXeHpMbXB6Snp0Y2NseHVYSEpjYmk4cUtseHlYRzRnS2lCVWFHVWdZMnhoYzNNZ2NtVjBkWEp1WldRZ1puSnZiU0IwYUdVZ1JHRjBZVTlpYW1WamRDQmhaR1JEYUdsc1pISmxiaUJqWVd4c0lHOXlJR1p5YjIwZ2IyNUJaR1JEYUdsc1pISmxiaUJwWmlCeVpXMXZkR1ZzZVNCamNtVmhkR1ZrTGx4eVhHNGdLaTljY2x4dVkyeGhjM01nUkdGMFlVOWlhbVZqZEVOb2FXeGtJQzhxSUdsdGNHeGxiV1Z1ZEhNZ1UzbHVZMU4wWVhSMWN5QXFMeUI3WEhKY2JpQWdMeW9nY0hKcGRtRjBaVnh5WEc1Y2NseHVJQ0F0TFMwdFpYWmxiblFnYUdGdVpHeGxjbk10TFMwdFhISmNiaUFnWDI5dVVtVnpjRzl1YzJWSVlXNWtiR1Z5T2lBb1pYWmxiblFwSUQwK0lIWnZhV1JjY2x4dUlDQXFMMXh5WEc1Y2NseHVJQ0F2S2lwY2NseHVJQ0FnS2lCQWFXZHViM0psWEhKY2JpQWdJQ29nVTJodmRXeGtJRzV2ZENCaVpTQjFjMlZrSUdScGNtVmpkR3g1SUdKNUlFaDVjR1Z5ZEdsbGN5NGdTWFFuY3lCallXeHNaV1FnWW5rZ2RHaGxJRVJoZEdGUFltcGxZM1F1WVdSa1EyaHBiR1J5Wlc1Y2NseHVJQ0FnS2k5Y2NseHVJQ0JqYjI1emRISjFZM1J2Y2locGJuQjFkQ2tnZTF4eVhHNGdJQ0FnYkdWMElGOTBhR2x6SUQwZ2RHaHBjenRjY2x4dVhISmNiaUFnSUNCbWRXNWpkR2x2YmlCMGFISnZkMDFoYm1SaGRHOXllVkJoY20xTmFYTnphVzVuUlhKeWIzSW9jR0Z5S1NCN1hISmNiaUFnSUNBZ0lIUm9jbTkzSUNkYlJHRjBZVTlpYW1WamRFTm9hV3hrWFNBbklDc2djR0Z5SUNzZ0p5QnRZVzVrWVhSdmNua2djR0Z5WVcxbGRHVnlJR2x6SUcxcGMzTnBibWNuTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHbHVjSFYwTG5CaGNtVnVkQ0EvSUNCZmRHaHBjeTVmY0dGeVpXNTBJRDBnYVc1d2RYUXVjR0Z5Wlc1MElEb2dkR2h5YjNkTllXNWtZWFJ2Y25sUVlYSnRUV2x6YzJsdVowVnljbTl5S0Nkd1lYSmxiblFuS1R0Y2NseHVJQ0FnSUdsdWNIVjBMblZ5YkNBL0lDQmZkR2hwY3k1ZmRYSnNJRDBnYVc1d2RYUXVkWEpzSURvZ2RHaHliM2ROWVc1a1lYUnZjbmxRWVhKdFRXbHpjMmx1WjBWeWNtOXlLQ2QxY213bktUdGNjbHh1SUNBZ0lHbHVjSFYwTG1OeVpXRjBaV1FnUHlCZmRHaHBjeTVmWTNKbFlYUmxaQ0E5SUdsdWNIVjBMbU55WldGMFpXUWdPaUIwYUhKdmQwMWhibVJoZEc5eWVWQmhjbTFOYVhOemFXNW5SWEp5YjNJb0oyTnlaV0YwWldRbktUdGNjbHh1SUNBZ0lHbHVjSFYwTG5KbGNHOXlkR1Z5SUQ4Z1gzUm9hWE11WDNKbGNHOXlkR1Z5SUQwZ2FXNXdkWFF1Y21Wd2IzSjBaWElnT2lCMGFISnZkMDFoYm1SaGRHOXllVkJoY20xTmFYTnphVzVuUlhKeWIzSW9KM0psY0c5eWRHVnlKeWs3WEhKY2JpQWdJQ0JwYm5CMWRDNXlkVzUwYVcxbElEOGdYM1JvYVhNdVgzSjFiblJwYldVZ1BTQnBibkIxZEM1eWRXNTBhVzFsSURvZ2RHaHliM2ROWVc1a1lYUnZjbmxRWVhKdFRXbHpjMmx1WjBWeWNtOXlLQ2R5ZFc1MGFXMWxKeWs3WEhKY2JpQWdJQ0JwYm5CMWRDNXpZMmhsYldFZ1B5QmZkR2hwY3k1ZmMyTm9aVzFoSUQwZ2FXNXdkWFF1YzJOb1pXMWhJRG9nZEdoeWIzZE5ZVzVrWVhSdmNubFFZWEp0VFdsemMybHVaMFZ5Y205eUtDZHpZMmhsYldFbktUdGNjbHh1SUNBZ0lHbHVjSFYwTG5CaGNtVnVkRTlpYW1WamRDQS9JRjkwYUdsekxsOXdZWEpsYm5SUFltcGxZM1FnUFNCcGJuQjFkQzV3WVhKbGJuUlBZbXBsWTNRZ09pQjBhSEp2ZDAxaGJtUmhkRzl5ZVZCaGNtMU5hWE56YVc1blJYSnliM0lvSjNCaGNtVnVkRTlpYW1WamRDY3BPMXh5WEc1Y2NseHVJQ0FnSUdsbUlDaHBibkIxZEM1dVlXMWxLU0JmZEdocGN5NWZibUZ0WlNBOUlHbHVjSFYwTG01aGJXVTdYSEpjYmlBZ0lDQnBaaUFvYVc1d2RYUXVaR1Z6WTNKcGNIUnBiMjRwSUY5MGFHbHpMbDlrWlhOamNtbHdkR2x2YmlBOUlHbHVjSFYwTG1SbGMyTnlhWEIwYVc5dU8xeHlYRzRnSUNBZ2FXWWdLR2x1Y0hWMExuUmhaM01wSUY5MGFHbHpMbDkwWVdkeklEMGdhVzV3ZFhRdWRHRm5jenRjY2x4dUlDQWdJR2xtSUNocGJuQjFkQzV5WlhOdmRYSmpaWE1wSUY5MGFHbHpMbDl5WlhOdmRYSmpaWE1nUFNCcGJuQjFkQzV5WlhOdmRYSmpaWE03WEhKY2JpQWdJQ0JwWmlBb2FXNXdkWFF1YjJKelpYSjJaWEpUZEc5eVlXZGxLU0JmZEdocGN5NWZiMkp6WlhKMlpYSlRkRzl5WVdkbElEMGdhVzV3ZFhRdWIySnpaWEoyWlhKVGRHOXlZV2RsTzF4eVhHNGdJQ0FnYVdZZ0tHbHVjSFYwTG5CMVlteHBZMDlpYzJWeWRtRjBhVzl1S1NCZmRHaHBjeTVmY0hWaWJHbGpUMkp6WlhKMllYUnBiMjRnUFNCcGJuQjFkQzV3ZFdKc2FXTlBZbk5sY25aaGRHbHZianRjY2x4dVhISmNiaUFnSUNCcFppQW9hVzV3ZFhRdVpHRjBZU2tnZTF4eVhHNGdJQ0FnSUNCZmRHaHBjeTVmYzNsdVkwOWlhaUE5SUc1bGR5QlRlVzVqVDJKcVpXTjBLR2x1Y0hWMExtUmhkR0VwTzF4eVhHNGdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnWDNSb2FYTXVYM041Ym1OUFltb2dQU0J1WlhjZ1UzbHVZMDlpYW1WamRDaDdmU2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1kyOXVjMjlzWlM1c2IyY29KMXRFWVhSaFQySnFaV04wUTJocGJHUWdMU0FnUTI5dWMzUnlkV04wYjNKZElDMGdKeXdnWDNSb2FYTXVYM041Ym1OUFltb3BPMXh5WEc1Y2NseHVJQ0FnSUY5MGFHbHpMbDlpZFhNZ1BTQmZkR2hwY3k1ZmNHRnlaVzUwVDJKcVpXTjBMbDlpZFhNN1hISmNiaUFnSUNCZmRHaHBjeTVmYjNkdVpYSWdQU0JmZEdocGN5NWZjR0Z5Wlc1MFQySnFaV04wTGw5dmQyNWxjanRjY2x4dVhISmNiaUFnSUNCZmRHaHBjeTVmWVd4c2IyTmhkR1ZNYVhOMFpXNWxjbk1vS1R0Y2NseHVYSEpjYmlBZ0lDQmZkR2hwY3k1ZmJXVjBZV1JoZEdFZ1BTQnBibkIxZER0Y2NseHVYSEpjYmlBZ0lDQXZMeUJrWld4bGRHVWdYM1JvYVhNdVgyMWxkR0ZrWVhSaExtUmhkR0U3WEhKY2JpQWdJQ0JrWld4bGRHVWdYM1JvYVhNdVgyMWxkR0ZrWVhSaExuQmhjbVZ1ZEU5aWFtVmpkRHRjY2x4dVhISmNiaUFnZlZ4eVhHNWNjbHh1SUNCZllXeHNiMk5oZEdWTWFYTjBaVzVsY25Nb0tTQjdYSEpjYmlBZ0lDQnNaWFFnWDNSb2FYTWdQU0IwYUdsek8xeHlYRzVjY2x4dUlDQWdJQzh2ZEdocGN5QnBjeUJ2Ym14NUlHNWxaV1JsWkNCbWIzSWdZMmhwYkdSeVpXNGdjbVZ3YjNKMFpYSnpYSEpjYmlBZ0lDQnBaaUFvWDNSb2FYTXVYM0psY0c5eWRHVnlJRDA5UFNCZmRHaHBjeTVmYjNkdVpYSXBJSHRjY2x4dUlDQWdJQ0FnWDNSb2FYTXVYMnhwYzNSbGJtVnlJRDBnWDNSb2FYTXVYMkoxY3k1aFpHUk1hWE4wWlc1bGNpaGZkR2hwY3k1ZmNtVndiM0owWlhJc0lDaHRjMmNwSUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2JYTm5MblI1Y0dVZ1BUMDlJQ2R5WlhOd2IyNXpaU2NnSmlZZ2JYTm5MbWxrSUQwOVBTQmZkR2hwY3k1ZmJYTm5TV1FwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0NkRVlYUmhUMkpxWldOMFEyaHBiR1F1YjI1U1pYTndiMjV6WlRvbkxDQnRjMmNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdYM1JvYVhNdVgyOXVVbVZ6Y0c5dWMyVW9iWE5uS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dVhISmNiaUFnWDNKbGJHVmhjMlZNYVhOMFpXNWxjbk1vS1NCN1hISmNiaUFnSUNCc1pYUWdYM1JvYVhNZ1BTQjBhR2x6TzF4eVhHNWNjbHh1SUNBZ0lHbG1JQ2hmZEdocGN5NWZiR2x6ZEdWdVpYSXBJSHRjY2x4dUlDQWdJQ0FnWDNSb2FYTXVYMnhwYzNSbGJtVnlMbkpsYlc5MlpTZ3BPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeW9xWEhKY2JpQWdJQ29nVW1Wc1pXRnpaU0JoYm1RZ1pHVnNaWFJsSUc5aWFtVmpkQ0JrWVhSaFhISmNiaUFnSUNvdlhISmNiaUFnWkdWc1pYUmxLQ2tnZTF4eVhHNGdJQ0FnYkdWMElGOTBhR2x6SUQwZ2RHaHBjenRjY2x4dVhISmNibHh5WEc0Z0lDQWdYM1JvYVhNdVgzSmxiR1ZoYzJWTWFYTjBaVzVsY25Nb0tUdGNjbHh1WEhKY2JpQWdJQ0F2TDFSUFJFODZJSE5sYm1RZ1pHVnNaWFJsSUcxbGMzTmhaMlVnUDF4eVhHNGdJSDFjY2x4dVhISmNiaUFnTHlvcVhISmNiaUFnSUNvZ1FXeHNJRTFsZEdGa1lYUmhJR0ZpYjNWMElIUm9aU0JEYUdsc1pDQkVZWFJoSUU5aWFtVmpkRnh5WEc0Z0lDQXFJRUIwZVhCbElIdFBZbXBsWTNSOUlDMWNjbHh1SUNBZ0tpOWNjbHh1SUNCblpYUWdiV1YwWVdSaGRHRW9LU0I3SUhKbGRIVnliaUIwYUdsekxsOXRaWFJoWkdGMFlUc2dmVnh5WEc1Y2NseHVJQ0F2S2lwY2NseHVJQ0FnS2lCRGFHbHNaSEpsYmlCSlJDQm5aVzVsY21GMFpXUWdiMjRnWVdSa1EyaHBiR1J5Wlc0dUlGVnVhWEYxWlNCcFpHVnVkR2xtYVdWeVhISmNiaUFnSUNvZ1FIUjVjR1VnZTFWU1RIMGdMU0JWVWt3Z2IyWWdkR2hsSUdadmNtMWhkQ0E4U0hsd1pYSjBlVlZTVEQ0alBHNTFiV1Z5YVdNdGMyVnhkV1Z1WTJVK1hISmNiaUFnSUNvdlhISmNiaUFnWjJWMElHTm9hV3hrU1dRb0tTQjdJSEpsZEhWeWJpQjBhR2x6TGw5amFHbHNaRWxrT3lCOVhISmNibHh5WEc0Z0lDOHFLbHh5WEc0Z0lDQXFJRVJoZEdFZ1UzUnlkV04wZFhKbElIUnZJR0psSUhONWJtTm9jbTl1YVhwbFpDNWNjbHh1SUNBZ0tpQkFkSGx3WlNCN1NsTlBUbjBnTFNCS1UwOU9JSE4wY25WamRIVnlaU0IwYUdGMElITm9iM1ZzWkNCbWIyeHNiM2NnZEdobElHUmxabWx1WldRZ2MyTm9aVzFoTENCcFppQmhibmt1WEhKY2JpQWdJQ292WEhKY2JpQWdaMlYwSUdSaGRHRW9LU0I3SUhKbGRIVnliaUIwYUdsekxsOXplVzVqVDJKcUxtUmhkR0U3SUgxY2NseHVYSEpjYmlBZ0x5b3FYSEpjYmlBZ0lDb2dVMlYwSUdadmNpQjBhR2x6SUdSaGRHRlBZbXBsWTNSRGFHbHNaQ0JoYmlCcFpHVnVkR2wwZVZ4eVhHNGdJQ0FxSUVCdFpYUm9iMlFnYVdSbGJuUnBkSGxjY2x4dUlDQWdLaUJBY0dGeVlXMGdJSHRKWkdWdWRHbDBlWDBnYVdSbGJuUnBkSGtnYVdSbGJuUnBkSGtnWm5KdmJTQjNhRzhnWTNKbFlYUmxaQ0IwYUdVZ2JXVnpjMkZuWlZ4eVhHNGdJQ0FxTDF4eVhHNGdJSE5sZENCcFpHVnVkR2wwZVNocFpHVnVkR2wwZVNrZ2V5QjBhR2x6TGw5cFpHVnVkR2wwZVNBOUlHbGtaVzUwYVhSNU95QjlYSEpjYmx4eVhHNGdJQzhxS2x4eVhHNGdJQ0FxSUVkbGRDQm1iM0lnZEdocGN5QmtZWFJoVDJKcVpXTjBRMmhwYkdRZ1lXNGdhV1JsYm5ScGRIbGNjbHh1SUNBZ0tpQkFiV1YwYUc5a0lHbGtaVzUwYVhSNVhISmNiaUFnSUNvZ1FISmxkSFZ5YmlCN1NXUmxiblJwZEhsOUlHbGtaVzUwYVhSNUlHWnliMjBnZDJodklHTnlaV0YwWldRZ2RHaGxJRzFsYzNOaFoyVmNjbHh1SUNBZ0tpOWNjbHh1SUNCblpYUWdhV1JsYm5ScGRIa29LU0I3SUhKbGRIVnliaUIwYUdsekxsOXBaR1Z1ZEdsMGVUc2dmVnh5WEc1Y2NseHVJQ0F2S2lwY2NseHVJQ0FnS2lCU1pXZHBjM1JsY2lCMGFHVWdZMmhoYm1kbElHeHBjM1JsYm1WeWN5QnpaVzUwSUdKNUlIUm9aU0J5WlhCdmNuUmxjaUJqYUdsc1pGeHlYRzRnSUNBcUlFQndZWEpoYlNCN1puVnVZM1JwYjI0b1pYWmxiblE2SUUxelowVjJaVzUwS1gwZ1kyRnNiR0poWTJ0Y2NseHVJQ0FnS2k5Y2NseHVJQ0J2YmtOb1lXNW5aU2hqWVd4c1ltRmpheWtnZTF4eVhHNGdJQ0FnZEdocGN5NWZjM2x1WTA5aWFpNXZZbk5sY25abEtDaGxkbVZ1ZENrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0JqYjI1emIyeGxMbXh2WnlnblcwUmhkR0ZQWW1wbFkzUkRhR2xzWkNBdElHOWljMlZ5ZG1WeVhTQXRJQ2NzSUdWMlpXNTBLVHRjY2x4dUlDQWdJQ0FnWTJGc2JHSmhZMnNvWlhabGJuUXBPMXh5WEc0Z0lDQWdmU2s3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F2S2lwY2NseHVJQ0FnS2lCVFpYUjFjQ0IwYUdVZ1kyRnNiR0poWTJzZ2RHOGdjSEp2WTJWemN5QnlaWE53YjI1elpTQnViM1JwWm1sallYUnBiMjV6SUc5bUlIUm9aU0JqY21WaGRHVnpYSEpjYmlBZ0lDb2dRSEJoY21GdElIdG1kVzVqZEdsdmJpaGxkbVZ1ZERvZ1RYTm5SWFpsYm5RcGZTQmpZV3hzWW1GamExeHlYRzRnSUNBcUwxeHlYRzRnSUc5dVVtVnpjRzl1YzJVb1kyRnNiR0poWTJzcElIdGNjbHh1SUNBZ0lIUm9hWE11WDI5dVVtVnpjRzl1YzJWSVlXNWtiR1Z5SUQwZ1kyRnNiR0poWTJzN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdkwwWk1UMWN0U1U0NklHMWxjM05oWjJVZ2NtVmpaV2wyWldRZ1puSnZiU0JoSUhKbGJXOTBaU0JFWVhSaFQySnFaV04wSUMwK0lGOXZia05vYVd4a1EzSmxZWFJsWEhKY2JpQWdYMjl1VW1WemNHOXVjMlVvYlhObktTQjdYSEpjYmlBZ0lDQnNaWFFnWDNSb2FYTWdQU0IwYUdsek8xeHlYRzVjY2x4dUlDQWdJR3hsZENCbGRtVnVkQ0E5SUh0Y2NseHVJQ0FnSUNBZ2RIbHdaVG9nYlhObkxuUjVjR1VzWEhKY2JpQWdJQ0FnSUhWeWJEb2diWE5uTG1KdlpIa3VjMjkxY21ObExGeHlYRzRnSUNBZ0lDQmpiMlJsT2lCdGMyY3VZbTlrZVM1amIyUmxYSEpjYmlBZ0lDQjlPMXh5WEc1Y2NseHVJQ0FnSUdsbUlDaGZkR2hwY3k1ZmIyNVNaWE53YjI1elpVaGhibVJzWlhJcElIdGNjbHh1SUNBZ0lDQWdYM1JvYVhNdVgyOXVVbVZ6Y0c5dWMyVklZVzVrYkdWeUtHVjJaVzUwS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzU5WEhKY2JseHlYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQkVZWFJoVDJKcVpXTjBRMmhwYkdRN1hISmNibHh1WEc1Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU0lDOHZYRzR2THlBdUwzTnlZeTl6ZVc1amFHVnlMMFJoZEdGUFltcGxZM1JEYUdsc1pDNXFjeUlzSWk4cUtseHlYRzRxSUVOdmNIbHlhV2RvZENBeU1ERTJJRkJVSUVsdWIzWmh3NmZEbzI4Z1pTQlRhWE4wWlcxaGN5QlRRVnh5WEc0cUlFTnZjSGx5YVdkb2RDQXlNREUySUVsT1JWTkRMVWxFWEhKY2Jpb2dRMjl3ZVhKcFoyaDBJREl3TVRZZ1VWVlBRa2xUSUU1RlZGZFBVa3RUSUZOTVhISmNiaW9nUTI5d2VYSnBaMmgwSURJd01UWWdSbEpCVlU1SVQwWkZVaTFIUlZORlRFeFRRMGhCUmxRZ1dsVlNJRVpQUlZKRVJWSlZUa2NnUkVWU0lFRk9SMFZYUVU1RVZFVk9JRVpQVWxORFNGVk9SeUJGTGxaY2NseHVLaUJEYjNCNWNtbG5hSFFnTWpBeE5pQlBVa0ZPUjBVZ1UwRmNjbHh1S2lCRGIzQjVjbWxuYUhRZ01qQXhOaUJFWlhWMGMyTm9aU0JVWld4bGEyOXRJRUZIWEhKY2Jpb2dRMjl3ZVhKcFoyaDBJREl3TVRZZ1FYQnBlbVZsWEhKY2Jpb2dRMjl3ZVhKcFoyaDBJREl3TVRZZ1ZFVkRTRTVKVTBOSVJTQlZUa2xXUlZKVFNWUkJWQ0JDUlZKTVNVNWNjbHh1S2x4eVhHNHFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlIUm9aU0JCY0dGamFHVWdUR2xqWlc1elpTd2dWbVZ5YzJsdmJpQXlMakFnS0hSb1pTQmNJa3hwWTJWdWMyVmNJaWs3WEhKY2Jpb2dlVzkxSUcxaGVTQnViM1FnZFhObElIUm9hWE1nWm1sc1pTQmxlR05sY0hRZ2FXNGdZMjl0Y0d4cFlXNWpaU0IzYVhSb0lIUm9aU0JNYVdObGJuTmxMbHh5WEc0cUlGbHZkU0J0WVhrZ2IySjBZV2x1SUdFZ1kyOXdlU0J2WmlCMGFHVWdUR2xqWlc1elpTQmhkRnh5WEc0cVhISmNiaW9nSUNCb2RIUndPaTh2ZDNkM0xtRndZV05vWlM1dmNtY3ZiR2xqWlc1elpYTXZURWxEUlU1VFJTMHlMakJjY2x4dUtseHlYRzRxSUZWdWJHVnpjeUJ5WlhGMWFYSmxaQ0JpZVNCaGNIQnNhV05oWW14bElHeGhkeUJ2Y2lCaFozSmxaV1FnZEc4Z2FXNGdkM0pwZEdsdVp5d2djMjltZEhkaGNtVmNjbHh1S2lCa2FYTjBjbWxpZFhSbFpDQjFibVJsY2lCMGFHVWdUR2xqWlc1elpTQnBjeUJrYVhOMGNtbGlkWFJsWkNCdmJpQmhiaUJjSWtGVElFbFRYQ0lnUWtGVFNWTXNYSEpjYmlvZ1YwbFVTRTlWVkNCWFFWSlNRVTVVU1VWVElFOVNJRU5QVGtSSlZFbFBUbE1nVDBZZ1FVNVpJRXRKVGtRc0lHVnBkR2hsY2lCbGVIQnlaWE56SUc5eUlHbHRjR3hwWldRdVhISmNiaW9nVTJWbElIUm9aU0JNYVdObGJuTmxJR1p2Y2lCMGFHVWdjM0JsWTJsbWFXTWdiR0Z1WjNWaFoyVWdaMjkyWlhKdWFXNW5JSEJsY20xcGMzTnBiMjV6SUdGdVpGeHlYRzRxSUd4cGJXbDBZWFJwYjI1eklIVnVaR1Z5SUhSb1pTQk1hV05sYm5ObExseHlYRzRxS2k5Y2NseHVYSEpjYmk4cUtseHlYRzRnS2lCQVlXTmpaWE56SUhCeWFYWmhkR1ZjY2x4dUlDb2dWR2hwY3lCamJHRnpjeUJwY3lCeVpYTndiMjV6YVdKc1pTQm1iM0lnWTI5c2JHVmpkR2x1WnlCa1pXeDBZU0JqYUdGdVoyVnpJR2x1SUhKbGJXOTBaU0J2WW1wbFkzUnpMQ0JpWldadmNtVWdkR2hsSUhKbGMzQnZibk5sSUc5bUlITjFZbk5qY21sd2RHbHZiaUJ5WldGamFDQjBhR1VnYjJKelpYSjJaWEl1WEhKY2JpQXFJRWwwSjNNZ2RYTmxaQ0JwYmlCVGVXNWphR1Z5SUMwK0lITjFZbk5qY21saVpTNGdWR2hsSUdac2IzY2dhWE1nWkdWbWFXNWxaQ0JoY3pwY2NseHVJQ29nTVM0Z0tHOWljMlZ5ZG1WeUtTQXRMWE4xWW5OamNtbGlaUzB0UGlBb2NtVndiM0owWlhJcFhISmNiaUFxSURJdUlDaHZZbk5sY25abGNpa2dQQzB0WkdWc2RHRWdkWEJrWVhSbGN5MHRJQ2h5WlhCdmNuUmxjaWxjY2x4dUlDb2dNeTRnS0c5aWMyVnlkbVZ5S1NBOExTMXpkV0p6WTNKcFltVWdjbVZ6Y0c5dWMyVXRMU0FvY21Wd2IzSjBaWElwWEhKY2JpQXFJRlJvYVhNZ2JXVmhibk1nZEdoaGRDQjBhR1Z5WlNCamIzVnNaQ0JpWlNCa1pXeDBZU0IxY0dSaGRHVnpJSFJ5WVc1elptVnljbVZrSUdKbFptOXlaU0IwYUdVZ2MzVmljMk55YVhCMGFXOXVJR052Ym1acGNtMWhkR2x2Ymk1Y2NseHVJQ29nVTJsdVkyVWdkR2hsY21VZ2FYTWdibThnUkdGMFlVOWlhbVZqZEU5aWMyVnlkbVZ5SUdKbFptOXlaU0IwYUdVZ2RXSnpZM0pwY0hScGIyNGdZMjl1Wm1seWJXRjBhVzl1TENCMGFHVnlaU0J6YUc5MWJHUWdZbVVnYzI5dFpTQnZkR2hsY2lCdlltcGxZM1FnWTI5c2JHVmpkR2x1WnlCMGFHVWdkWEJrWVhSbGN5NWNjbHh1SUNvZ1VISnZkbWx6YVc5dVlXd2daR0YwWVNCcGN5QmhjSEJzYVdWa0lIUnZJSFJvWlNCRVlYUmhUMkpxWldOMFQySnpaWEoyWlhJZ1lXWjBaWElnWTI5dVptbHliV0YwYVc5dUxpQlBjaUJrYVhOallYSmtaV1FnYVdZZ2RHaGxjbVVnYVhNZ2JtOGdZMjl1Wm1seWJXRjBhVzl1TGx4eVhHNGdLaTljY2x4dVkyeGhjM01nUkdGMFlWQnliM1pwYzJsdmJtRnNJSHRjY2x4dUlDQXZLaUJ3Y21sMllYUmxYSEpjYmlBZ1gyTm9hV3hrY21WdVRHbHpkR1Z1WlhKek9pQmJUWE5uVEdsemRHVnVaWEpkWEhKY2JpQWdYMnhwYzNSbGJtVnlPaUJOYzJkTWFYTjBaVzVsY2x4eVhHNWNjbHh1SUNCZlkyaGhibWRsY3pvZ1cxMWNjbHh1SUNBcUwxeHlYRzVjY2x4dUlDQmpiMjV6ZEhKMVkzUnZjaWh2ZDI1bGNpd2dkWEpzTENCaWRYTXNJR05vYVd4a2NtVnVLU0I3WEhKY2JpQWdJQ0JzWlhRZ1gzUm9hWE1nUFNCMGFHbHpPMXh5WEc1Y2NseHVJQ0FnSUY5MGFHbHpMbDl2ZDI1bGNpQTlJRzkzYm1WeU8xeHlYRzRnSUNBZ1gzUm9hWE11WDNWeWJDQTlJSFZ5YkR0Y2NseHVJQ0FnSUY5MGFHbHpMbDlpZFhNZ1BTQmlkWE03WEhKY2JpQWdJQ0JmZEdocGN5NWZZMmhwYkdSeVpXNGdQU0JqYUdsc1pISmxianRjY2x4dVhISmNiaUFnSUNCZmRHaHBjeTVmWTJoaGJtZGxjeUE5SUZ0ZE8xeHlYRzRnSUNBZ1gzUm9hWE11WDJGc2JHOWpZWFJsVEdsemRHVnVaWEp6S0NrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNCZllXeHNiMk5oZEdWTWFYTjBaVzVsY25Nb0tTQjdYSEpjYmlBZ0lDQnNaWFFnWDNSb2FYTWdQU0IwYUdsek8xeHlYRzVjY2x4dUlDQWdJRjkwYUdsekxsOXNhWE4wWlc1bGNpQTlJRjkwYUdsekxsOWlkWE11WVdSa1RHbHpkR1Z1WlhJb1gzUm9hWE11WDNWeWJDd2dLRzF6WnlrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0JqYjI1emIyeGxMbXh2WnlnblJHRjBZVkJ5YjNacGMybHZibUZzTFNjZ0t5QmZkR2hwY3k1ZmRYSnNJQ3NnSnkxU1ExWTZJQ2NzSUcxelp5azdYSEpjYmlBZ0lDQWdJRjkwYUdsekxsOWphR0Z1WjJWekxuQjFjMmdvYlhObktUdGNjbHh1SUNBZ0lIMHBPMXh5WEc1Y2NseHVJQ0FnSUM4cVhISmNiaUFnSUNCZmRHaHBjeTVmWTJocGJHUnlaVzVNYVhOMFpXNWxjbk1nUFNCYlhUdGNjbHh1SUNBZ0lHbG1JQ2hmZEdocGN5NWZZMmhwYkdSeVpXNHBJSHRjY2x4dUlDQWdJQ0FnYkdWMElHTm9hV3hrUW1GelpWVlNUQ0E5SUhWeWJDQXJJQ2N2WTJocGJHUnlaVzR2Snp0Y2NseHVJQ0FnSUNBZ1gzUm9hWE11WDJOb2FXeGtjbVZ1TG1admNrVmhZMmdvS0dOb2FXeGtLU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUdOb2FXeGtWVkpNSUQwZ1kyaHBiR1JDWVhObFZWSk1JQ3NnWTJocGJHUTdYSEpjYmlBZ0lDQWdJQ0FnYkdWMElHeHBjM1JsYm1WeUlEMGdYM1JvYVhNdVgySjFjeTVoWkdSTWFYTjBaVzVsY2loamFHbHNaRlZTVEN3Z0tHMXpaeWtnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnTHk5cFoyNXZjbVVnYlhObklITmxiblFnWW5rZ2FHbHRjMlZzWmx4eVhHNGdJQ0FnSUNBZ0lDQWdhV1lnS0cxelp5NW1jbTl0SUNFOVBTQnZkMjVsY2lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5aHRjMmNwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNCZmRHaHBjeTVmWTJocGJHUnlaVzVNYVhOMFpXNWxjbk11Y0hWemFDaHNhWE4wWlc1bGNpazdYSEpjYmlBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnZlNvdlhISmNiaUFnZlZ4eVhHNWNjbHh1SUNCZmNtVnNaV0Z6WlV4cGMzUmxibVZ5Y3lncElIdGNjbHh1SUNBZ0lHeGxkQ0JmZEdocGN5QTlJSFJvYVhNN1hISmNibHh5WEc0Z0lDQWdYM1JvYVhNdVgyeHBjM1JsYm1WeUxuSmxiVzkyWlNncE8xeHlYRzVjY2x4dUlDQWdJQzhxWDNSb2FYTXVYMk5vYVd4a2NtVnVUR2x6ZEdWdVpYSnpMbVp2Y2tWaFkyZ29LR3hwYzNSbGJtVnlLU0E5UGlCN1hISmNiaUFnSUNBZ0lHeHBjM1JsYm1WeUxuSmxiVzkyWlNncE8xeHlYRzRnSUNBZ2ZTazdLaTljY2x4dUlDQjlYSEpjYmx4eVhHNGdJR2RsZENCamFHbHNaSEpsYmlncElIc2djbVYwZFhKdUlIUm9hWE11WDJOb2FXeGtjbVZ1T3lCOVhISmNibHh5WEc0Z0lHRndjR3g1S0c5aWMyVnlkbVZ5S1NCN1hISmNiaUFnSUNCc1pYUWdYM1JvYVhNZ1BTQjBhR2x6TzF4eVhHNGdJQ0FnWDNSb2FYTXVYMk5vWVc1blpYTXVabTl5UldGamFDZ29ZMmhoYm1kbEtTQTlQaUI3WEhKY2JpQWdJQ0FnSUc5aWMyVnlkbVZ5TGw5amFHRnVaMlZQWW1wbFkzUW9iMkp6WlhKMlpYSXVYM041Ym1OUFltb3NJR05vWVc1blpTazdYSEpjYmlBZ0lDQjlLVHRjY2x4dUlDQjlYSEpjYm4xY2NseHVYSEpjYm1WNGNHOXlkQ0JrWldaaGRXeDBJRVJoZEdGUWNtOTJhWE5wYjI1aGJEdGNjbHh1WEc1Y2JseHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSWdMeTljYmk4dklDNHZjM0pqTDNONWJtTm9aWEl2UkdGMFlWQnliM1pwYzJsdmJtRnNMbXB6SWl3aWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCN0lGd2laR1ZtWVhWc2RGd2lPaUJ5WlhGMWFYSmxLRndpWTI5eVpTMXFjeTlzYVdKeVlYSjVMMlp1TDI5aWFtVmpkQzluWlhRdGIzZHVMWEJ5YjNCbGNuUjVMV1JsYzJOeWFYQjBiM0pjSWlrc0lGOWZaWE5OYjJSMWJHVTZJSFJ5ZFdVZ2ZUdGNibHh1WEc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk5Y2JpOHZJRmRGUWxCQlEwc2dSazlQVkVWU1hHNHZMeUF1TDM0dlltRmlaV3d0Y25WdWRHbHRaUzlqYjNKbExXcHpMMjlpYW1WamRDOW5aWFF0YjNkdUxYQnliM0JsY25SNUxXUmxjMk55YVhCMGIzSXVhbk5jYmk4dklHMXZaSFZzWlNCcFpDQTlJREUxTkZ4dUx5OGdiVzlrZFd4bElHTm9kVzVyY3lBOUlEQWlMQ0p5WlhGMWFYSmxLQ2N1TGk4dUxpOXRiMlIxYkdWekwyVnpOaTV2WW1wbFkzUXVZWE56YVdkdUp5azdYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJSEpsY1hWcGNtVW9KeTR1THk0dUwyMXZaSFZzWlhNdlgyTnZjbVVuS1M1UFltcGxZM1F1WVhOemFXZHVPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdlptNHZiMkpxWldOMEwyRnpjMmxuYmk1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ01UVTVYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNJc0luSmxjWFZwY21Vb0p5NHVMeTR1TDIxdlpIVnNaWE12WlhNMkxtOWlhbVZqZEM1blpYUXRiM2R1TFhCeWIzQmxjblI1TFdSbGMyTnlhWEIwYjNJbktUdGNiblpoY2lBa1QySnFaV04wSUQwZ2NtVnhkV2x5WlNnbkxpNHZMaTR2Ylc5a2RXeGxjeTlmWTI5eVpTY3BMazlpYW1WamREdGNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNGdaMlYwVDNkdVVISnZjR1Z5ZEhsRVpYTmpjbWx3ZEc5eUtHbDBMQ0JyWlhrcGUxeHVJQ0J5WlhSMWNtNGdKRTlpYW1WamRDNW5aWFJQZDI1UWNtOXdaWEowZVVSbGMyTnlhWEIwYjNJb2FYUXNJR3RsZVNrN1hHNTlPMXh1WEc1Y2JpOHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSmNiaTh2SUM0dmZpOWpiM0psTFdwekwyeHBZbkpoY25rdlptNHZiMkpxWldOMEwyZGxkQzF2ZDI0dGNISnZjR1Z5ZEhrdFpHVnpZM0pwY0hSdmNpNXFjMXh1THk4Z2JXOWtkV3hsSUdsa0lEMGdNVFl4WEc0dkx5QnRiMlIxYkdVZ1kyaDFibXR6SUQwZ01DSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JpOHZJREU1TGpFdU1pNHhJRTlpYW1WamRDNWhjM05wWjI0b2RHRnlaMlYwTENCemIzVnlZMlVzSUM0dUxpbGNiblpoY2lCblpYUkxaWGx6SUNBOUlISmxjWFZwY21Vb0p5NHZYMjlpYW1WamRDMXJaWGx6SnlsY2JpQWdMQ0JuVDFCVElDQWdJQ0E5SUhKbGNYVnBjbVVvSnk0dlgyOWlhbVZqZEMxbmIzQnpKeWxjYmlBZ0xDQndTVVVnSUNBZ0lDQTlJSEpsY1hWcGNtVW9KeTR2WDI5aWFtVmpkQzF3YVdVbktWeHVJQ0FzSUhSdlQySnFaV04wSUQwZ2NtVnhkV2x5WlNnbkxpOWZkRzh0YjJKcVpXTjBKeWxjYmlBZ0xDQkpUMkpxWldOMElDQTlJSEpsY1hWcGNtVW9KeTR2WDJsdlltcGxZM1FuS1Z4dUlDQXNJQ1JoYzNOcFoyNGdJRDBnVDJKcVpXTjBMbUZ6YzJsbmJqdGNibHh1THk4Z2MyaHZkV3hrSUhkdmNtc2dkMmwwYUNCemVXMWliMnh6SUdGdVpDQnphRzkxYkdRZ2FHRjJaU0JrWlhSbGNtMXBibWx6ZEdsaklIQnliM0JsY25SNUlHOXlaR1Z5SUNoV09DQmlkV2NwWEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUNFa1lYTnphV2R1SUh4OElISmxjWFZwY21Vb0p5NHZYMlpoYVd4ekp5a29ablZ1WTNScGIyNG9LWHRjYmlBZ2RtRnlJRUVnUFNCN2ZWeHVJQ0FnSUN3Z1FpQTlJSHQ5WEc0Z0lDQWdMQ0JUSUQwZ1UzbHRZbTlzS0NsY2JpQWdJQ0FzSUVzZ1BTQW5ZV0pqWkdWbVoyaHBhbXRzYlc1dmNIRnljM1FuTzF4dUlDQkJXMU5kSUQwZ056dGNiaUFnU3k1emNHeHBkQ2duSnlrdVptOXlSV0ZqYUNobWRXNWpkR2x2YmlocktYc2dRbHRyWFNBOUlHczdJSDBwTzF4dUlDQnlaWFIxY200Z0pHRnpjMmxuYmloN2ZTd2dRU2xiVTEwZ0lUMGdOeUI4ZkNCUFltcGxZM1F1YTJWNWN5Z2tZWE56YVdkdUtIdDlMQ0JDS1NrdWFtOXBiaWduSnlrZ0lUMGdTenRjYm4wcElEOGdablZ1WTNScGIyNGdZWE56YVdkdUtIUmhjbWRsZEN3Z2MyOTFjbU5sS1hzZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJHbHVaU0J1YnkxMWJuVnpaV1F0ZG1GeWMxeHVJQ0IyWVhJZ1ZDQWdJQ0FnUFNCMGIwOWlhbVZqZENoMFlYSm5aWFFwWEc0Z0lDQWdMQ0JoVEdWdUlDQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHaGNiaUFnSUNBc0lHbHVaR1Y0SUQwZ01WeHVJQ0FnSUN3Z1oyVjBVM2x0WW05c2N5QTlJR2RQVUZNdVpseHVJQ0FnSUN3Z2FYTkZiblZ0SUNBZ0lDQTlJSEJKUlM1bU8xeHVJQ0IzYUdsc1pTaGhUR1Z1SUQ0Z2FXNWtaWGdwZTF4dUlDQWdJSFpoY2lCVElDQWdJQ0FnUFNCSlQySnFaV04wS0dGeVozVnRaVzUwYzF0cGJtUmxlQ3NyWFNsY2JpQWdJQ0FnSUN3Z2EyVjVjeUFnSUQwZ1oyVjBVM2x0WW05c2N5QS9JR2RsZEV0bGVYTW9VeWt1WTI5dVkyRjBLR2RsZEZONWJXSnZiSE1vVXlrcElEb2daMlYwUzJWNWN5aFRLVnh1SUNBZ0lDQWdMQ0JzWlc1bmRHZ2dQU0JyWlhsekxteGxibWQwYUZ4dUlDQWdJQ0FnTENCcUlDQWdJQ0FnUFNBd1hHNGdJQ0FnSUNBc0lHdGxlVHRjYmlBZ0lDQjNhR2xzWlNoc1pXNW5kR2dnUGlCcUtXbG1LR2x6Ulc1MWJTNWpZV3hzS0ZNc0lHdGxlU0E5SUd0bGVYTmJhaXNyWFNrcFZGdHJaWGxkSUQwZ1UxdHJaWGxkTzF4dUlDQjlJSEpsZEhWeWJpQlVPMXh1ZlNBNklDUmhjM05wWjI0N1hHNWNibHh1THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2WEc0dkx5QlhSVUpRUVVOTElFWlBUMVJGVWx4dUx5OGdMaTkrTDJOdmNtVXRhbk12YkdsaWNtRnllUzl0YjJSMWJHVnpMMTl2WW1wbFkzUXRZWE56YVdkdUxtcHpYRzR2THlCdGIyUjFiR1VnYVdRZ1BTQXhOakpjYmk4dklHMXZaSFZzWlNCamFIVnVhM01nUFNBd0lpd2lMeThnTVRrdU1TNHpMakVnVDJKcVpXTjBMbUZ6YzJsbmJpaDBZWEpuWlhRc0lITnZkWEpqWlNsY2JuWmhjaUFrWlhod2IzSjBJRDBnY21WeGRXbHlaU2duTGk5ZlpYaHdiM0owSnlrN1hHNWNiaVJsZUhCdmNuUW9KR1Y0Y0c5eWRDNVRJQ3NnSkdWNGNHOXlkQzVHTENBblQySnFaV04wSnl3Z2UyRnpjMmxuYmpvZ2NtVnhkV2x5WlNnbkxpOWZiMkpxWldOMExXRnpjMmxuYmljcGZTazdYRzVjYmx4dUx5OHZMeTh2THk4dkx5OHZMeTh2THk4dlhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVseHVMeThnTGk5K0wyTnZjbVV0YW5NdmJHbGljbUZ5ZVM5dGIyUjFiR1Z6TDJWek5pNXZZbXBsWTNRdVlYTnphV2R1TG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBeE5qVmNiaTh2SUcxdlpIVnNaU0JqYUhWdWEzTWdQU0F3SWl3aUx5OGdNVGt1TVM0eUxqWWdUMkpxWldOMExtZGxkRTkzYmxCeWIzQmxjblI1UkdWelkzSnBjSFJ2Y2loUExDQlFLVnh1ZG1GeUlIUnZTVTlpYW1WamRDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BTQnlaWEYxYVhKbEtDY3VMMTkwYnkxcGIySnFaV04wSnlsY2JpQWdMQ0FrWjJWMFQzZHVVSEp2Y0dWeWRIbEVaWE5qY21sd2RHOXlJRDBnY21WeGRXbHlaU2duTGk5ZmIySnFaV04wTFdkdmNHUW5LUzVtTzF4dVhHNXlaWEYxYVhKbEtDY3VMMTl2WW1wbFkzUXRjMkZ3Snlrb0oyZGxkRTkzYmxCeWIzQmxjblI1UkdWelkzSnBjSFJ2Y2ljc0lHWjFibU4wYVc5dUtDbDdYRzRnSUhKbGRIVnliaUJtZFc1amRHbHZiaUJuWlhSUGQyNVFjbTl3WlhKMGVVUmxjMk55YVhCMGIzSW9hWFFzSUd0bGVTbDdYRzRnSUNBZ2NtVjBkWEp1SUNSblpYUlBkMjVRY205d1pYSjBlVVJsYzJOeWFYQjBiM0lvZEc5SlQySnFaV04wS0dsMEtTd2dhMlY1S1R0Y2JpQWdmVHRjYm4wcE8xeHVYRzVjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4dUx5OGdWMFZDVUVGRFN5QkdUMDlVUlZKY2JpOHZJQzR2Zmk5amIzSmxMV3B6TDJ4cFluSmhjbmt2Ylc5a2RXeGxjeTlsY3pZdWIySnFaV04wTG1kbGRDMXZkMjR0Y0hKdmNHVnlkSGt0WkdWelkzSnBjSFJ2Y2k1cWMxeHVMeThnYlc5a2RXeGxJR2xrSUQwZ01UWTNYRzR2THlCdGIyUjFiR1VnWTJoMWJtdHpJRDBnTUNKZExDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvU3luY2hlci5qc1xuLy8gbW9kdWxlIGlkID0gMTc5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8vIHZlcnNpb246IDAuNy4xXG4vLyBkYXRlOiBTYXQgSnVsIDIyIDIwMTcgMjA6MTc6NDkgR01UKzAxMDAgKEdNVCBEYXlsaWdodCBUaW1lKVxuLy8gbGljZW5jZTogXG4vKipcbiogQ29weXJpZ2h0IDIwMTYgUFQgSW5vdmHDp8OjbyBlIFNpc3RlbWFzIFNBXG4qIENvcHlyaWdodCAyMDE2IElORVNDLUlEXG4qIENvcHlyaWdodCAyMDE2IFFVT0JJUyBORVRXT1JLUyBTTFxuKiBDb3B5cmlnaHQgMjAxNiBGUkFVTkhPRkVSLUdFU0VMTFNDSEFGVCBaVVIgRk9FUkRFUlVORyBERVIgQU5HRVdBTkRURU4gRk9SU0NIVU5HIEUuVlxuKiBDb3B5cmlnaHQgMjAxNiBPUkFOR0UgU0FcbiogQ29weXJpZ2h0IDIwMTYgRGV1dHNjaGUgVGVsZWtvbSBBR1xuKiBDb3B5cmlnaHQgMjAxNiBBcGl6ZWVcbiogQ29weXJpZ2h0IDIwMTYgVEVDSE5JU0NIRSBVTklWRVJTSVRBVCBCRVJMSU5cbipcbiogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbipcbiogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbipcbiogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4qIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4qIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKiovXG5cblxuKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoXCJJZGVudGl0eUZhY3RvcnlcIiwgW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiSWRlbnRpdHlGYWN0b3J5XCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcIlwiXSA9IHJvb3RbXCJcIl0gfHwge30sIHJvb3RbXCJcIl1bXCJJZGVudGl0eUZhY3RvcnlcIl0gPSBmYWN0b3J5KCk7XG59KSh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAvKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gaWRlbnRpdHkgZnVuY3Rpb24gZm9yIGNhbGxpbmcgaGFybW9ueSBpbXBvcnRzIHdpdGggdGhlIGNvcnJlY3QgY29udGV4dFxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmkgPSBmdW5jdGlvbih2YWx1ZSkgeyByZXR1cm4gdmFsdWU7IH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4vKioqKioqLyBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbi8qKioqKiovIFx0XHRcdFx0Y29uZmlndXJhYmxlOiBmYWxzZSxcbi8qKioqKiovIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbi8qKioqKiovIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbi8qKioqKiovIFx0XHRcdH0pO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuLyoqKioqKi8gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4vKioqKioqLyBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuLyoqKioqKi8gXHRcdHJldHVybiBnZXR0ZXI7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLyoqKioqKi8gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxMzcpO1xuLyoqKioqKi8gfSlcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyAoe1xuXG4vKioqLyAxMjA6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY2xhc3NDYWxsQ2hlY2syID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcblxudmFyIF9jbGFzc0NhbGxDaGVjazMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiogVGhlIFVzZXJQcm9maWxlIGFjY29yZGluZyB0byBVc2VyIElkZW50aXR5IERhdGEgTW9kZWxcbiovXG5cbnZhciBVc2VyUHJvZmlsZSA9IGZ1bmN0aW9uIFVzZXJQcm9maWxlKHVzZXJuYW1lLCB1c2VyVVJMLCBhdmF0YXIsIGNuLCBsb2NhbGUpIHtcbiAgKDAsIF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcywgVXNlclByb2ZpbGUpO1xuXG5cbiAgaWYgKHVzZXJuYW1lKSB7XG4gICAgdGhpcy51c2VybmFtZSA9IHVzZXJuYW1lO1xuICB9XG4gIGlmIChhdmF0YXIpIHtcbiAgICB0aGlzLmF2YXRhciA9IGF2YXRhcjtcbiAgfVxuICBpZiAoY24pIHtcbiAgICB0aGlzLmNuID0gY247XG4gIH1cbiAgaWYgKGxvY2FsZSkge1xuICAgIHRoaXMubG9jYWxlID0gbG9jYWxlO1xuICB9XG4gIGlmICh1c2VyVVJMKSB7XG4gICAgdGhpcy51c2VyVVJMID0gdXNlclVSTDtcbiAgfVxufTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gVXNlclByb2ZpbGU7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gMTI5OlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY2xhc3NDYWxsQ2hlY2syID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcblxudmFyIF9jbGFzc0NhbGxDaGVjazMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO1xuXG52YXIgX1VzZXJQcm9maWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMjApO1xuXG52YXIgX1VzZXJQcm9maWxlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1VzZXJQcm9maWxlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIE1lc3NhZ2VCb2R5SWRlbnRpdHkgPSBmdW5jdGlvbiBNZXNzYWdlQm9keUlkZW50aXR5KHVzZXJuYW1lLCB1c2VyVVJMLCBhdmF0YXIsIGNuLCBsb2NhbGUsIGlkcCwgYXNzZXJ0aW9uKSB7XG4gICAgKDAsIF9jbGFzc0NhbGxDaGVjazMuZGVmYXVsdCkodGhpcywgTWVzc2FnZUJvZHlJZGVudGl0eSk7XG5cblxuICAgIGlmICghaWRwKSB0aHJvdyBuZXcgRXJyb3IoJ0lEUCBzaG91bGQgYmUgYSBwYXJhbWV0ZXInKTtcbiAgICBpZiAoIXVzZXJuYW1lKSB0aHJvdyBuZXcgRXJyb3IoJ3VzZXJuYW1lIHNob3VsZCBiZSBhIHBhcmFtZXRlcicpO1xuXG4gICAgdGhpcy5pZHAgPSBpZHA7XG5cbiAgICBpZiAoYXNzZXJ0aW9uKSB7XG4gICAgICAgIHRoaXMuYXNzZXJ0aW9uID0gYXNzZXJ0aW9uO1xuICAgIH1cbiAgICB0aGlzLnVzZXJQcm9maWxlID0gbmV3IF9Vc2VyUHJvZmlsZTIuZGVmYXVsdCh1c2VybmFtZSwgdXNlclVSTCwgYXZhdGFyLCBjbiwgbG9jYWxlKTtcbn07IC8qKlxuICAgKiBUaGUgSWRlbnRpdHkgaW5mbyB0byBiZSBhZGRlZCB0byBNZXNzYWdlLkJvZHkuSWRlbnRpdHlcbiAgICovXG5cbmV4cG9ydHMuZGVmYXVsdCA9IE1lc3NhZ2VCb2R5SWRlbnRpdHk7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDEzNzpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuVXNlclByb2ZpbGUgPSB1bmRlZmluZWQ7XG5cbnZhciBfVXNlclByb2ZpbGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyMCk7XG5cbnZhciBfVXNlclByb2ZpbGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVXNlclByb2ZpbGUpO1xuXG52YXIgX01lc3NhZ2VCb2R5SWRlbnRpdHkgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyOSk7XG5cbnZhciBfTWVzc2FnZUJvZHlJZGVudGl0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9NZXNzYWdlQm9keUlkZW50aXR5KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5Vc2VyUHJvZmlsZSA9IF9Vc2VyUHJvZmlsZTIuZGVmYXVsdDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9NZXNzYWdlQm9keUlkZW50aXR5Mi5kZWZhdWx0O1xuXG4vKioqLyB9KSxcblxuLyoqKi8gODpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn07XG5cbi8qKiovIH0pXG5cbi8qKioqKiovIH0pO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbmRsWW5CaFkyczZMeTh2ZDJWaWNHRmpheTkxYm1sMlpYSnpZV3hOYjJSMWJHVkVaV1pwYm1sMGFXOXVQelZqWVRZcUtpb3FLaW9xS2lvaUxDSjNaV0p3WVdOck9pOHZMM2RsWW5CaFkyc3ZZbTl2ZEhOMGNtRndJR015TkdJM01HRXhPRE5pTjJJM016UXpOV1V3UDJNd09XUXFLaW9xS2lvcUtpb2lMQ0ozWldKd1lXTnJPaTh2THk0dmMzSmpMMmxrWlc1MGFYUjVMMVZ6WlhKUWNtOW1hV3hsTG1weklpd2lkMlZpY0dGamF6b3ZMeTh1TDNOeVl5OXBaR1Z1ZEdsMGVTOU5aWE56WVdkbFFtOWtlVWxrWlc1MGFYUjVMbXB6SWl3aWQyVmljR0ZqYXpvdkx5OHVMM055WXk5SlpHVnVkR2wwZVVaaFkzUnZjbmt1YW5NaUxDSjNaV0p3WVdOck9pOHZMeTR2Zmk5aVlXSmxiQzF5ZFc1MGFXMWxMMmhsYkhCbGNuTXZZMnhoYzNORFlXeHNRMmhsWTJzdWFuTS9NakZoWmlvcUtpb3FLaW9xS2lKZExDSnVZVzFsY3lJNld5SlZjMlZ5VUhKdlptbHNaU0lzSW5WelpYSnVZVzFsSWl3aWRYTmxjbFZTVENJc0ltRjJZWFJoY2lJc0ltTnVJaXdpYkc5allXeGxJaXdpVFdWemMyRm5aVUp2WkhsSlpHVnVkR2wwZVNJc0ltbGtjQ0lzSW1GemMyVnlkR2x2YmlJc0lrVnljbTl5SWl3aWRYTmxjbEJ5YjJacGJHVWlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN3eVFrRkJNa0k3UVVGRE0wSXNRMEZCUXp0QlFVTkVMRTg3UVVOV1FUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN08wRkJSMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzYlVSQlFUSkRMR05CUVdNN08wRkJSWHBFTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzWVVGQlN6dEJRVU5NTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzYlVOQlFUSkNMREJDUVVFd1FpeEZRVUZGTzBGQlEzWkVMSGxEUVVGcFF5eGxRVUZsTzBGQlEyaEVPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTERoRVFVRnpSQ3dyUkVGQkswUTdPMEZCUlhKSU8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN096czdPenM3T3pzN096czdPenM3T3pzN08wRkRhRVZCT3pzN08wbEJTMDFCTEZjc1IwRkZTaXh4UWtGQldVTXNVVUZCV2l4RlFVRnpRa01zVDBGQmRFSXNSVUZCSzBKRExFMUJRUzlDTEVWQlFYVkRReXhGUVVGMlF5eEZRVUV5UTBNc1RVRkJNME1zUlVGQmJVUTdRVUZCUVRzN08wRkJSV3BFTEUxQlFVbEtMRkZCUVVvc1JVRkJZenRCUVVGRkxGTkJRVXRCTEZGQlFVd3NSMEZCWjBKQkxGRkJRV2hDTzBGQlFUSkNPMEZCUXpORExFMUJRVWxGTEUxQlFVb3NSVUZCV1R0QlFVRkZMRk5CUVV0QkxFMUJRVXdzUjBGQlkwRXNUVUZCWkR0QlFVRjFRanRCUVVOeVF5eE5RVUZKUXl4RlFVRktMRVZCUVZFN1FVRkJSU3hUUVVGTFFTeEZRVUZNTEVkQlFWVkJMRVZCUVZZN1FVRkJaVHRCUVVONlFpeE5RVUZKUXl4TlFVRktMRVZCUVZrN1FVRkJSU3hUUVVGTFFTeE5RVUZNTEVkQlFXTkJMRTFCUVdRN1FVRkJkVUk3UVVGRGNrTXNUVUZCU1Vnc1QwRkJTaXhGUVVGaE8wRkJRVVVzVTBGQlMwRXNUMEZCVEN4SFFVRmxRU3hQUVVGbU8wRkJRWGxDTzBGQlJYcERMRU03TzJ0Q1FVZFpSaXhYT3pzN096czdPenM3T3pzN096czdPenM3TzBGRFpHWTdPenM3T3p0SlFVVk5UU3h0UWl4SFFVVktMRFpDUVVGWlRDeFJRVUZhTEVWQlFYTkNReXhQUVVGMFFpeEZRVUVyUWtNc1RVRkJMMElzUlVGQmRVTkRMRVZCUVhaRExFVkJRVEpEUXl4TlFVRXpReXhGUVVGdFJFVXNSMEZCYmtRc1JVRkJkMFJETEZOQlFYaEVMRVZCUVcxRk8wRkJRVUU3T3p0QlFVVnFSU3hSUVVGSkxFTkJRVU5FTEVkQlFVd3NSVUZCVlN4TlFVRk5MRWxCUVVsRkxFdEJRVW9zUTBGQlZTd3lRa0ZCVml4RFFVRk9PMEZCUTFZc1VVRkJTU3hEUVVGRFVpeFJRVUZNTEVWQlFXVXNUVUZCVFN4SlFVRkpVU3hMUVVGS0xFTkJRVlVzWjBOQlFWWXNRMEZCVGpzN1FVRkZaaXhUUVVGTFJpeEhRVUZNTEVkQlFWZEJMRWRCUVZnN08wRkJSVUVzVVVGQlNVTXNVMEZCU2l4RlFVRnZRanRCUVVGRkxHRkJRVXRCTEZOQlFVd3NSMEZCYVVKQkxGTkJRV3BDTzBGQlFUWkNPMEZCUTI1RUxGTkJRVXRGTEZkQlFVd3NSMEZCYlVJc01FSkJRV2RDVkN4UlFVRm9RaXhGUVVFd1FrTXNUMEZCTVVJc1JVRkJiVU5ETEUxQlFXNURMRVZCUVRKRFF5eEZRVUV6UXl4RlFVRXJRME1zVFVGQkwwTXNRMEZCYmtJN1FVRkZSQ3hETEVWQmJFSklPenM3TzJ0Q1FYVkNaVU1zYlVJN096czdPenM3T3pzN096czdPenM3UVVOMlFtWTdPenM3UVVGRFFUczdPenM3TzFGQlJWTk9MRmM3T3pzN096czdPenRCUTBoVU96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlNJc0ltWnBiR1VpT2lKSlpHVnVkR2wwZVVaaFkzUnZjbmt1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW9ablZ1WTNScGIyNGdkMlZpY0dGamExVnVhWFpsY25OaGJFMXZaSFZzWlVSbFptbHVhWFJwYjI0b2NtOXZkQ3dnWm1GamRHOXllU2tnZTF4dVhIUnBaaWgwZVhCbGIyWWdaWGh3YjNKMGN5QTlQVDBnSjI5aWFtVmpkQ2NnSmlZZ2RIbHdaVzltSUcxdlpIVnNaU0E5UFQwZ0oyOWlhbVZqZENjcFhHNWNkRngwYlc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtWVdOMGIzSjVLQ2s3WEc1Y2RHVnNjMlVnYVdZb2RIbHdaVzltSUdSbFptbHVaU0E5UFQwZ0oyWjFibU4wYVc5dUp5QW1KaUJrWldacGJtVXVZVzFrS1Z4dVhIUmNkR1JsWm1sdVpTaGNJa2xrWlc1MGFYUjVSbUZqZEc5eWVWd2lMQ0JiWFN3Z1ptRmpkRzl5ZVNrN1hHNWNkR1ZzYzJVZ2FXWW9kSGx3Wlc5bUlHVjRjRzl5ZEhNZ1BUMDlJQ2R2WW1wbFkzUW5LVnh1WEhSY2RHVjRjRzl5ZEhOYlhDSkpaR1Z1ZEdsMGVVWmhZM1J2Y25sY0lsMGdQU0JtWVdOMGIzSjVLQ2s3WEc1Y2RHVnNjMlZjYmx4MFhIUnliMjkwVzF3aVhDSmRJRDBnY205dmRGdGNJbHdpWFNCOGZDQjdmU3dnY205dmRGdGNJbHdpWFZ0Y0lrbGtaVzUwYVhSNVJtRmpkRzl5ZVZ3aVhTQTlJR1poWTNSdmNua29LVHRjYm4wcEtIUm9hWE1zSUdaMWJtTjBhVzl1S0NrZ2UxeHVjbVYwZFhKdUlGeHVYRzVjYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTSUM4dlhHNHZMeUIzWldKd1lXTnJMM1Z1YVhabGNuTmhiRTF2WkhWc1pVUmxabWx1YVhScGIyNGlMQ0lnWEhRdkx5QlVhR1VnYlc5a2RXeGxJR05oWTJobFhHNGdYSFIyWVhJZ2FXNXpkR0ZzYkdWa1RXOWtkV3hsY3lBOUlIdDlPMXh1WEc0Z1hIUXZMeUJVYUdVZ2NtVnhkV2x5WlNCbWRXNWpkR2x2Ymx4dUlGeDBablZ1WTNScGIyNGdYMTkzWldKd1lXTnJYM0psY1hWcGNtVmZYeWh0YjJSMWJHVkpaQ2tnZTF4dVhHNGdYSFJjZEM4dklFTm9aV05ySUdsbUlHMXZaSFZzWlNCcGN5QnBiaUJqWVdOb1pWeHVJRngwWEhScFppaHBibk4wWVd4c1pXUk5iMlIxYkdWelcyMXZaSFZzWlVsa1hTa2dlMXh1SUZ4MFhIUmNkSEpsZEhWeWJpQnBibk4wWVd4c1pXUk5iMlIxYkdWelcyMXZaSFZzWlVsa1hTNWxlSEJ2Y25Sek8xeHVJRngwWEhSOVhHNGdYSFJjZEM4dklFTnlaV0YwWlNCaElHNWxkeUJ0YjJSMWJHVWdLR0Z1WkNCd2RYUWdhWFFnYVc1MGJ5QjBhR1VnWTJGamFHVXBYRzRnWEhSY2RIWmhjaUJ0YjJSMWJHVWdQU0JwYm5OMFlXeHNaV1JOYjJSMWJHVnpXMjF2WkhWc1pVbGtYU0E5SUh0Y2JpQmNkRngwWEhScE9pQnRiMlIxYkdWSlpDeGNiaUJjZEZ4MFhIUnNPaUJtWVd4elpTeGNiaUJjZEZ4MFhIUmxlSEJ2Y25Sek9pQjdmVnh1SUZ4MFhIUjlPMXh1WEc0Z1hIUmNkQzh2SUVWNFpXTjFkR1VnZEdobElHMXZaSFZzWlNCbWRXNWpkR2x2Ymx4dUlGeDBYSFJ0YjJSMWJHVnpXMjF2WkhWc1pVbGtYUzVqWVd4c0tHMXZaSFZzWlM1bGVIQnZjblJ6TENCdGIyUjFiR1VzSUcxdlpIVnNaUzVsZUhCdmNuUnpMQ0JmWDNkbFluQmhZMnRmY21WeGRXbHlaVjlmS1R0Y2JseHVJRngwWEhRdkx5QkdiR0ZuSUhSb1pTQnRiMlIxYkdVZ1lYTWdiRzloWkdWa1hHNGdYSFJjZEcxdlpIVnNaUzVzSUQwZ2RISjFaVHRjYmx4dUlGeDBYSFF2THlCU1pYUjFjbTRnZEdobElHVjRjRzl5ZEhNZ2IyWWdkR2hsSUcxdlpIVnNaVnh1SUZ4MFhIUnlaWFIxY200Z2JXOWtkV3hsTG1WNGNHOXlkSE03WEc0Z1hIUjlYRzVjYmx4dUlGeDBMeThnWlhod2IzTmxJSFJvWlNCdGIyUjFiR1Z6SUc5aWFtVmpkQ0FvWDE5M1pXSndZV05yWDIxdlpIVnNaWE5mWHlsY2JpQmNkRjlmZDJWaWNHRmphMTl5WlhGMWFYSmxYMTh1YlNBOUlHMXZaSFZzWlhNN1hHNWNiaUJjZEM4dklHVjRjRzl6WlNCMGFHVWdiVzlrZFd4bElHTmhZMmhsWEc0Z1hIUmZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZMbU1nUFNCcGJuTjBZV3hzWldSTmIyUjFiR1Z6TzF4dVhHNGdYSFF2THlCcFpHVnVkR2wwZVNCbWRXNWpkR2x2YmlCbWIzSWdZMkZzYkdsdVp5Qm9ZWEp0YjI1NUlHbHRjRzl5ZEhNZ2QybDBhQ0IwYUdVZ1kyOXljbVZqZENCamIyNTBaWGgwWEc0Z1hIUmZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZMbWtnUFNCbWRXNWpkR2x2YmloMllXeDFaU2tnZXlCeVpYUjFjbTRnZG1Gc2RXVTdJSDA3WEc1Y2JpQmNkQzh2SUdSbFptbHVaU0JuWlhSMFpYSWdablZ1WTNScGIyNGdabTl5SUdoaGNtMXZibmtnWlhod2IzSjBjMXh1SUZ4MFgxOTNaV0p3WVdOclgzSmxjWFZwY21WZlh5NWtJRDBnWm5WdVkzUnBiMjRvWlhod2IzSjBjeXdnYm1GdFpTd2daMlYwZEdWeUtTQjdYRzRnWEhSY2RHbG1LQ0ZmWDNkbFluQmhZMnRmY21WeGRXbHlaVjlmTG04b1pYaHdiM0owY3l3Z2JtRnRaU2twSUh0Y2JpQmNkRngwWEhSUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29aWGh3YjNKMGN5d2dibUZ0WlN3Z2UxeHVJRngwWEhSY2RGeDBZMjl1Wm1sbmRYSmhZbXhsT2lCbVlXeHpaU3hjYmlCY2RGeDBYSFJjZEdWdWRXMWxjbUZpYkdVNklIUnlkV1VzWEc0Z1hIUmNkRngwWEhSblpYUTZJR2RsZEhSbGNseHVJRngwWEhSY2RIMHBPMXh1SUZ4MFhIUjlYRzRnWEhSOU8xeHVYRzRnWEhRdkx5Qm5aWFJFWldaaGRXeDBSWGh3YjNKMElHWjFibU4wYVc5dUlHWnZjaUJqYjIxd1lYUnBZbWxzYVhSNUlIZHBkR2dnYm05dUxXaGhjbTF2Ym5rZ2JXOWtkV3hsYzF4dUlGeDBYMTkzWldKd1lXTnJYM0psY1hWcGNtVmZYeTV1SUQwZ1puVnVZM1JwYjI0b2JXOWtkV3hsS1NCN1hHNGdYSFJjZEhaaGNpQm5aWFIwWlhJZ1BTQnRiMlIxYkdVZ0ppWWdiVzlrZFd4bExsOWZaWE5OYjJSMWJHVWdQMXh1SUZ4MFhIUmNkR1oxYm1OMGFXOXVJR2RsZEVSbFptRjFiSFFvS1NCN0lISmxkSFZ5YmlCdGIyUjFiR1ZiSjJSbFptRjFiSFFuWFRzZ2ZTQTZYRzRnWEhSY2RGeDBablZ1WTNScGIyNGdaMlYwVFc5a2RXeGxSWGh3YjNKMGN5Z3BJSHNnY21WMGRYSnVJRzF2WkhWc1pUc2dmVHRjYmlCY2RGeDBYMTkzWldKd1lXTnJYM0psY1hWcGNtVmZYeTVrS0dkbGRIUmxjaXdnSjJFbkxDQm5aWFIwWlhJcE8xeHVJRngwWEhSeVpYUjFjbTRnWjJWMGRHVnlPMXh1SUZ4MGZUdGNibHh1SUZ4MEx5OGdUMkpxWldOMExuQnliM1J2ZEhsd1pTNW9ZWE5QZDI1UWNtOXdaWEowZVM1allXeHNYRzRnWEhSZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZkxtOGdQU0JtZFc1amRHbHZiaWh2WW1wbFkzUXNJSEJ5YjNCbGNuUjVLU0I3SUhKbGRIVnliaUJQWW1wbFkzUXVjSEp2ZEc5MGVYQmxMbWhoYzA5M2JsQnliM0JsY25SNUxtTmhiR3dvYjJKcVpXTjBMQ0J3Y205d1pYSjBlU2s3SUgwN1hHNWNiaUJjZEM4dklGOWZkMlZpY0dGamExOXdkV0pzYVdOZmNHRjBhRjlmWEc0Z1hIUmZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZMbkFnUFNCY0lsd2lPMXh1WEc0Z1hIUXZMeUJNYjJGa0lHVnVkSEo1SUcxdlpIVnNaU0JoYm1RZ2NtVjBkWEp1SUdWNGNHOXlkSE5jYmlCY2RISmxkSFZ5YmlCZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZktGOWZkMlZpY0dGamExOXlaWEYxYVhKbFgxOHVjeUE5SURFek55azdYRzVjYmx4dVhHNHZMeUJYUlVKUVFVTkxJRVpQVDFSRlVpQXZMMXh1THk4Z2QyVmljR0ZqYXk5aWIyOTBjM1J5WVhBZ1l6STBZamN3WVRFNE0ySTNZamN6TkRNMVpUQWlMQ0l2S2lwY2NseHVLaUJVYUdVZ1ZYTmxjbEJ5YjJacGJHVWdZV05qYjNKa2FXNW5JSFJ2SUZWelpYSWdTV1JsYm5ScGRIa2dSR0YwWVNCTmIyUmxiRnh5WEc0cUwxeHlYRzVjY2x4dVhISmNibU5zWVhOeklGVnpaWEpRY205bWFXeGxJSHRjY2x4dVhISmNiaUFnWTI5dWMzUnlkV04wYjNJb2RYTmxjbTVoYldVc0lIVnpaWEpWVWt3c0lHRjJZWFJoY2l3Z1kyNHNJR3h2WTJGc1pTa2dlMXh5WEc1Y2NseHVJQ0FnSUdsbUlDaDFjMlZ5Ym1GdFpTa2dleUIwYUdsekxuVnpaWEp1WVcxbElEMGdkWE5sY201aGJXVTdJSDFjY2x4dUlDQWdJR2xtSUNoaGRtRjBZWElwSUhzZ2RHaHBjeTVoZG1GMFlYSWdQU0JoZG1GMFlYSTdJSDFjY2x4dUlDQWdJR2xtSUNoamJpa2dleUIwYUdsekxtTnVJRDBnWTI0N0lIMWNjbHh1SUNBZ0lHbG1JQ2hzYjJOaGJHVXBJSHNnZEdocGN5NXNiMk5oYkdVZ1BTQnNiMk5oYkdVN0lIMWNjbHh1SUNBZ0lHbG1JQ2gxYzJWeVZWSk1LU0I3SUhSb2FYTXVkWE5sY2xWU1RDQTlJSFZ6WlhKVlVrdzdJSDFjY2x4dVhISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCVmMyVnlVSEp2Wm1sc1pUdGNjbHh1WEc1Y2JseHVMeThnVjBWQ1VFRkRTeUJHVDA5VVJWSWdMeTljYmk4dklDNHZjM0pqTDJsa1pXNTBhWFI1TDFWelpYSlFjbTltYVd4bExtcHpJaXdpTHlvcVhISmNiaW9nVkdobElFbGtaVzUwYVhSNUlHbHVabThnZEc4Z1ltVWdZV1JrWldRZ2RHOGdUV1Z6YzJGblpTNUNiMlI1TGtsa1pXNTBhWFI1WEhKY2Jpb3ZYSEpjYmx4eVhHNXBiWEJ2Y25RZ1ZYTmxjbEJ5YjJacGJHVWdabkp2YlNBbkxpOVZjMlZ5VUhKdlptbHNaU2M3WEhKY2JseHlYRzVqYkdGemN5Qk5aWE56WVdkbFFtOWtlVWxrWlc1MGFYUjVJSHRjY2x4dVhISmNiaUFnWTI5dWMzUnlkV04wYjNJb2RYTmxjbTVoYldVc0lIVnpaWEpWVWt3c0lHRjJZWFJoY2l3Z1kyNHNJR3h2WTJGc1pTd2dhV1J3TENCaGMzTmxjblJwYjI0cElIdGNjbHh1WEhKY2JpQWdJQ0JwWmlBb0lXbGtjQ2tnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ2RKUkZBZ2MyaHZkV3hrSUdKbElHRWdjR0Z5WVcxbGRHVnlKeWs3WEhKY2JpQWdJQ0JwWmlBb0lYVnpaWEp1WVcxbEtTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0ozVnpaWEp1WVcxbElITm9iM1ZzWkNCaVpTQmhJSEJoY21GdFpYUmxjaWNwTzF4eVhHNWNjbHh1SUNBZ0lIUm9hWE11YVdSd0lEMGdhV1J3TzF4eVhHNWNjbHh1SUNBZ0lHbG1JQ2hoYzNObGNuUnBiMjRwSUNBZ0lDQWdleUIwYUdsekxtRnpjMlZ5ZEdsdmJpQTlJR0Z6YzJWeWRHbHZianNnZlZ4eVhHNGdJQ0FnZEdocGN5NTFjMlZ5VUhKdlptbHNaU0E5SUc1bGR5QlZjMlZ5VUhKdlptbHNaU2gxYzJWeWJtRnRaU3dnZFhObGNsVlNUQ3dnWVhaaGRHRnlMQ0JqYml3Z2JHOWpZV3hsS1R0Y2NseHVYSEpjYmlBZ2ZWeHlYRzVjY2x4dWZWeHlYRzVjY2x4dVhISmNibVY0Y0c5eWRDQmtaV1poZFd4MElFMWxjM05oWjJWQ2IyUjVTV1JsYm5ScGRIazdYSEpjYmx4dVhHNWNiaTh2SUZkRlFsQkJRMHNnUms5UFZFVlNJQzh2WEc0dkx5QXVMM055WXk5cFpHVnVkR2wwZVM5TlpYTnpZV2RsUW05a2VVbGtaVzUwYVhSNUxtcHpJaXdpYVcxd2IzSjBJRlZ6WlhKUWNtOW1hV3hsSUdaeWIyMGdKeTR2YVdSbGJuUnBkSGt2VlhObGNsQnliMlpwYkdVbk8xeHlYRzVwYlhCdmNuUWdUV1Z6YzJGblpVSnZaSGxKWkdWdWRHbDBlU0JtY205dElDY3VMMmxrWlc1MGFYUjVMMDFsYzNOaFoyVkNiMlI1U1dSbGJuUnBkSGtuTzF4eVhHNWNjbHh1Wlhod2IzSjBJSHNnVlhObGNsQnliMlpwYkdVZ2ZUdGNjbHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdUV1Z6YzJGblpVSnZaSGxKWkdWdWRHbDBlVHRjY2x4dVhHNWNibHh1THk4Z1YwVkNVRUZEU3lCR1QwOVVSVklnTHk5Y2JpOHZJQzR2YzNKakwwbGtaVzUwYVhSNVJtRmpkRzl5ZVM1cWN5SXNJbHdpZFhObElITjBjbWxqZEZ3aU8xeHVYRzVsZUhCdmNuUnpMbDlmWlhOTmIyUjFiR1VnUFNCMGNuVmxPMXh1WEc1bGVIQnZjblJ6TG1SbFptRjFiSFFnUFNCbWRXNWpkR2x2YmlBb2FXNXpkR0Z1WTJVc0lFTnZibk4wY25WamRHOXlLU0I3WEc0Z0lHbG1JQ2doS0dsdWMzUmhibU5sSUdsdWMzUmhibU5sYjJZZ1EyOXVjM1J5ZFdOMGIzSXBLU0I3WEc0Z0lDQWdkR2h5YjNjZ2JtVjNJRlI1Y0dWRmNuSnZjaWhjSWtOaGJtNXZkQ0JqWVd4c0lHRWdZMnhoYzNNZ1lYTWdZU0JtZFc1amRHbHZibHdpS1R0Y2JpQWdmVnh1ZlR0Y2JseHVYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljYmk4dklGZEZRbEJCUTBzZ1JrOVBWRVZTWEc0dkx5QXVMMzR2WW1GaVpXd3RjblZ1ZEdsdFpTOW9aV3h3WlhKekwyTnNZWE56UTJGc2JFTm9aV05yTG1welhHNHZMeUJ0YjJSMWJHVWdhV1FnUFNBNFhHNHZMeUJ0YjJSMWJHVWdZMmgxYm10eklEMGdNQ0F4SURJZ015QTBJRFVnTmlBM0lEZ2dPU0F4TUNKZExDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL2Rldi1wcm90b3N0dWJzL3NyYy9wcm90b3N0dWIvc2xhY2svbm9kZV9tb2R1bGVzL3NlcnZpY2UtZnJhbWV3b3JrL2Rpc3QvSWRlbnRpdHlGYWN0b3J5LmpzXG4vLyBtb2R1bGUgaWQgPSAxODBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==",
      "sourceCodeClassname": "SlackProtoStub",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "cguid": "4-bca08574-d873-aec8-02eb-a5b69ac9862c0",
    "version": 2.0000000000000004,
    "description": "Description of SlackProtoStub",
    "language": "javascript",
    "type": "ProtoStubs",
    "constraints": {
      "browser": true
    },
    "objectName": "slack.slack.com",
    "configuration": {},
    "messageSchemas": "",
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  }
}