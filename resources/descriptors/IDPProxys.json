{
  "EdpIdpProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "edpdistribuicao.pt",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy for EDP Distribuição IDP",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "58c9e486c9a492fd9f1e0d5d3f5dd39f6",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "edpdistribuicao.pt",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "FacebookIdpProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "facebook.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy for Facebook idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "50ef75417b00e8340d1ddf496be07274a",
    "constraints": {
      "browser": true
    },
    "objectName": "facebook.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "GoogleIdpProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "google.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy for google idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "5fe88c210039898a45c75f6de8c56f417",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "google.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "NodejsProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "google.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy for node idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "52c91699f84b479f34e9f7abce2255fff",
    "constraints": {
      "node": true,
      "onlyIdAssertionValidation": true
    },
    "objectName": "google.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "MicrosoftProxyStub": {
    "sourcePackage": {
      "sourceCode": "IWZ1bmN0aW9uKGUsdCl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYib2JqZWN0Ij09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoImFjdGl2YXRlIixbXSx0KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hY3RpdmF0ZT10KCk6ZS5hY3RpdmF0ZT10KCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gbihvKXtpZih0W29dKXJldHVybiB0W29dLmV4cG9ydHM7dmFyIHI9dFtvXT17aTpvLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbb10uY2FsbChyLmV4cG9ydHMscixyLmV4cG9ydHMsbiksci5sPSEwLHIuZXhwb3J0c31yZXR1cm4gbi5tPWUsbi5jPXQsbi5kPWZ1bmN0aW9uKGUsdCxvKXtuLm8oZSx0KXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om99KX0sbi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCwiYSIsdCksdH0sbi5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSxuLnA9IiIsbihuLnM9MCl9KFtmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIG89dFtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG8ua2V5LG8pfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksdC5kZWZhdWx0PWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm57bmFtZToiTWljcm9zb2Z0UHJveHlTdHViIixpbnN0YW5jZTpuZXcgYShlLHQsbil9fTt2YXIgcj17Y2xpZW50SUQ6IjAwMDAwMDAwNEMxODM5MUYiLHJlZGlyZWN0VVJJOmxvY2F0aW9uLm9yaWdpbix0b2tlbkVuZHBvaW50OiJodHRwczovL2xvZ2luLmxpdmUuY29tL29hdXRoMjBfYXV0aG9yaXplLnNyZj8iLHR5cGU6InRva2VuIixzY29wZToid2wuc2lnbmluLHdsLmJhc2ljIixtb2RlOiJmcmFnbWVudCJ9LGk9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24odCxuKXt2YXIgbz1KU09OLnBhcnNlKGF0b2IoZSkpO3Qoe2lkZW50aXR5Om8uZW1haWwsY29udGVudHM6by5ub25jZX0pfSl9LHM9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbih0LG8pe2lmKG4pe3ZhciBpPW4uc3BsaXQoIi8iKVszXS5zcGxpdCgiLiIpLHM9SlNPTi5wYXJzZShhdG9iKGlbMV0pKTt0KHthc3NlcnRpb246aVsxXSxpZHA6e2RvbWFpbjoibWljcm9zb2Z0LmNvbSIscHJvdG9jb2w6Ik9JREMifSxpbmZvVG9rZW46c30pfWVsc2V7byh7bmFtZToiSWRQTG9naW5FcnJvciIsbG9naW5Vcmw6ci50b2tlbkVuZHBvaW50KyJyZXNwb25zZV90eXBlPSIrci50eXBlKyImY2xpZW50X2lkPSIrci5jbGllbnRJRCsiJnNjb3BlPSIrci5zY29wZSsiJm5vbmNlPSIrZSsiJnJlc3BvbnNlX21vZGU9IityLm1vZGUrIiZyZWRpcmVjdF91cmk9IityLnJlZGlyZWN0VVJJfSl9fSl9LGE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQsbixvKXshZnVuY3Rpb24oZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKX0odGhpcyxlKTt2YXIgcj10aGlzO3IucnVudGltZVByb3RvU3R1YlVSTD10LHIubWVzc2FnZUJ1cz1uLHIuY29uZmlnPW8sci5tZXNzYWdlQnVzLmFkZExpc3RlbmVyKCIqIixmdW5jdGlvbihlKXsiZG9tYWluLWlkcDovL21pY3Jvc29mdC5jb20iPT09ZS50byYmci5yZXF1ZXN0VG9JZHAoZSl9KSxyLl9zZW5kU3RhdHVzKCJjcmVhdGVkIil9cmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXt0JiZvKGUucHJvdG90eXBlLHQpLG4mJm8oZSxuKX0oZSxbe2tleToicmVxdWVzdFRvSWRwIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLG49ZS5ib2R5LnBhcmFtcztzd2l0Y2goZS5ib2R5Lm1ldGhvZCl7Y2FzZSJnZW5lcmF0ZUFzc2VydGlvbiI6cyhuLmNvbnRlbnRzLG4ub3JpZ2luLG4udXNlcm5hbWVIaW50KS50aGVuKGZ1bmN0aW9uKG4pe3QucmVwbHlNZXNzYWdlKGUsbil9LGZ1bmN0aW9uKG4pe3QucmVwbHlNZXNzYWdlKGUsbil9KTticmVhaztjYXNlInZhbGlkYXRlQXNzZXJ0aW9uIjppKG4uYXNzZXJ0aW9uLG4ub3JpZ2luKS50aGVuKGZ1bmN0aW9uKG4pe3QucmVwbHlNZXNzYWdlKGUsbil9LGZ1bmN0aW9uKG4pe3QucmVwbHlNZXNzYWdlKGUsbil9KX19fSx7a2V5OiJyZXBseU1lc3NhZ2UiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dmFyIG49e2lkOmUuaWQsdHlwZToicmVzcG9uc2UiLHRvOmUuZnJvbSxmcm9tOmUudG8sYm9keTp7Y29kZToyMDAsdmFsdWU6dH19O3RoaXMubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShuKX19LHtrZXk6Il9zZW5kU3RhdHVzIix2YWx1ZTpmdW5jdGlvbihlLHQpe2NvbnNvbGUubG9nKCJbR29vZ2xlSWRwUHJveHkuc2VuZFN0YXR1c10gIixlKSx0aGlzLl9zdGF0ZT1lO3ZhciBuPXt0eXBlOiJ1cGRhdGUiLGZyb206dGhpcy5ydW50aW1lUHJvdG9TdHViVVJMLHRvOnRoaXMucnVudGltZVByb3RvU3R1YlVSTCsiL3N0YXR1cyIsYm9keTp7dmFsdWU6ZX19O3QmJihuLmJvZHkuZGVzYz10KSx0aGlzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2Uobil9fV0pLGV9KCl9XSkuZGVmYXVsdH0pOw==",
      "sourceCodeClassname": "microsoft.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy for microsoft idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "546e0f62b1aa6b322a17c85cf925e1dba",
    "constraints": {
      "browser": true
    },
    "objectName": "microsoft.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "MobieIdpProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "mobie.pt",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy for Mobi.e plataform",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "59f507ef6489fb23385c0d18eaa5aa4bf",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "mobie.pt",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "FakeNodejsForBrowserProxyStub": {
    "sourcePackage": {
      "sourceCode": "IWZ1bmN0aW9uKGUsdCl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYib2JqZWN0Ij09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoImFjdGl2YXRlIixbXSx0KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hY3RpdmF0ZT10KCk6ZS5hY3RpdmF0ZT10KCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gbihvKXtpZih0W29dKXJldHVybiB0W29dLmV4cG9ydHM7dmFyIHM9dFtvXT17aTpvLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbb10uY2FsbChzLmV4cG9ydHMscyxzLmV4cG9ydHMsbikscy5sPSEwLHMuZXhwb3J0c31yZXR1cm4gbi5tPWUsbi5jPXQsbi5kPWZ1bmN0aW9uKGUsdCxvKXtuLm8oZSx0KXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om99KX0sbi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCwiYSIsdCksdH0sbi5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSxuLnA9IiIsbihuLnM9MCl9KFtmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8oZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIG89dFtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG8ua2V5LG8pfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksdC5kZWZhdWx0PWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm57bmFtZToiTm9kZWpzUHJveHlTdHViIixpbnN0YW5jZTpuZXcgaShlLHQsbil9fTt2YXIgcz1mdW5jdGlvbihlLHQpe3JldHVybiBjb25zb2xlLmxvZygidmFsaWRhdGVBc3NlcnRpb25Qcm94eU5PREVKU0ZBS0VCcm93c2VyOmFzc2VydGlvbiIsZSksbmV3IFByb21pc2UoZnVuY3Rpb24odCxuKXt2YXIgbz1hdG9iKGUpLHM9SlNPTi5wYXJzZShvKS50b2tlbklELnNwbGl0KCIuIikscj1KU09OLnBhcnNlKGF0b2Ioc1sxXSkpO3Qoe2lkZW50aXR5OnIuZW1haWwsY29udGVudHM6ci5ub25jZX0pfSl9LHI9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBjb25zb2xlLmxvZygiW0lEUFJPWFkuZ2VuZXJhdGVBc3NlcnRpb25GQUtFX0JST1dTRVI6Y29udGVudHNdIixlKSxjb25zb2xlLmxvZygiW0lEUFJPWFkuZ2VuZXJhdGVBc3NlcnRpb25GQUtFX0JST1dTRVI6b3JpZ2luXSIsdCksY29uc29sZS5sb2coIltJRFBST1hZLmdlbmVyYXRlQXNzZXJ0aW9uRkFLRV9CUk9XU0VSOmhpbnRdIixuKSxuZXcgUHJvbWlzZShmdW5jdGlvbihlLHQpe3JldHVybiBjb25zb2xlLmxvZygiZ2VuZXJhdGVNZXNzYWdlUmVzcG9uc2U6IiksZShnZW5lcmF0ZU1lc3NhZ2VSZXNwb25zZSl9KX0saT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxuLG8peyFmdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfSh0aGlzLGUpLGNvbnNvbGUubG9nKCJGQUtFIE5PREVKUyBjb25zdHJ1Y3RvciIpO3ZhciBzPXRoaXM7cy5ydW50aW1lUHJvdG9TdHViVVJMPXQscy5tZXNzYWdlQnVzPW4scy5jb25maWc9byxzLm1lc3NhZ2VCdXMuYWRkTGlzdGVuZXIoIioiLGZ1bmN0aW9uKGUpeyJkb21haW4taWRwOi8vbm9kZWpzLWlkcCI9PT1lLnRvJiZzLnJlcXVlc3RUb0lkcChlKX0pLHMuX3NlbmRTdGF0dXMoImNyZWF0ZWQiKX1yZXR1cm4gZnVuY3Rpb24oZSx0LG4pe3QmJm8oZS5wcm90b3R5cGUsdCksbiYmbyhlLG4pfShlLFt7a2V5OiJyZXF1ZXN0VG9JZHAiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsbj1lLmJvZHkucGFyYW1zO3N3aXRjaChlLmJvZHkubWV0aG9kKXtjYXNlImdlbmVyYXRlQXNzZXJ0aW9uIjpyKG4uY29udGVudHMsbi5vcmlnaW4sbi51c2VybmFtZUhpbnQpLnRoZW4oZnVuY3Rpb24obil7dC5yZXBseU1lc3NhZ2UoZSxuKX0sZnVuY3Rpb24obil7dC5yZXBseU1lc3NhZ2UoZSxuKX0pO2JyZWFrO2Nhc2UidmFsaWRhdGVBc3NlcnRpb24iOnMobi5hc3NlcnRpb24sbi5vcmlnaW4pLnRoZW4oZnVuY3Rpb24obil7dC5yZXBseU1lc3NhZ2UoZSxuKX0sZnVuY3Rpb24obil7dC5yZXBseU1lc3NhZ2UoZSxuKX0pfX19LHtrZXk6InJlcGx5TWVzc2FnZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj17aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsdG86ZS5mcm9tLGZyb206ZS50byxib2R5Ontjb2RlOjIwMCx2YWx1ZTp0fX07dGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG4pfX0se2tleToiX3NlbmRTdGF0dXMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7Y29uc29sZS5sb2coIltOb2RlSlMuc2VuZFN0YXR1c10gIixlKSx0aGlzLl9zdGF0ZT1lO3ZhciBuPXt0eXBlOiJ1cGRhdGUiLGZyb206dGhpcy5ydW50aW1lUHJvdG9TdHViVVJMLHRvOnRoaXMucnVudGltZVByb3RvU3R1YlVSTCsiL3N0YXR1cyIsYm9keTp7dmFsdWU6ZX19O3QmJihuLmJvZHkuZGVzYz10KSx0aGlzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2Uobil9fV0pLGV9KCl9XSkuZGVmYXVsdH0pOw==",
      "sourceCodeClassname": "nodejs-idp",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy for browser idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "5d2606fd332d71526cafc4c13d80437b4",
    "constraints": {
      "browser": true,
      "onlyIdAssertionValidation": true
    },
    "objectName": "nodejs-idp",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "FakeNodejsProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "nodejs-idp",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy for node idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "57378b186a1ba1a7af6d8190014c85afc",
    "constraints": {
      "node": true
    },
    "objectName": "nodejs-idp",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "IMSIWProxyStub": {
    "sourcePackage": {
      "sourceCode": "IWZ1bmN0aW9uKGUsdCl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYib2JqZWN0Ij09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoImFjdGl2YXRlIixbXSx0KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hY3RpdmF0ZT10KCk6ZS5hY3RpdmF0ZT10KCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gbyhuKXtpZih0W25dKXJldHVybiB0W25dLmV4cG9ydHM7dmFyIHI9dFtuXT17aTpuLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbbl0uY2FsbChyLmV4cG9ydHMscixyLmV4cG9ydHMsbyksci5sPSEwLHIuZXhwb3J0c31yZXR1cm4gby5tPWUsby5jPXQsby5kPWZ1bmN0aW9uKGUsdCxuKXtvLm8oZSx0KXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om59KX0sby5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBvLmQodCwiYSIsdCksdH0sby5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSxvLnA9IiIsbyhvLnM9MCl9KFtmdW5jdGlvbihlLHQsbyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oZSx0KXtmb3IodmFyIG89MDtvPHQubGVuZ3RoO28rKyl7dmFyIG49dFtvXTtuLmVudW1lcmFibGU9bi5lbnVtZXJhYmxlfHwhMSxuLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG4ua2V5LG4pfX1PYmplY3QuZGVmaW5lUHJvcGVydHkodCwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSksdC5kZWZhdWx0PWZ1bmN0aW9uKGUsdCxvKXtyZXR1cm57bmFtZToiSU1TSVdQcm94eVN0dWIiLGluc3RhbmNlOm5ldyBpKGUsdCxvKX19O3ZhciByPSJyZXRoaW5rLXByb2plY3QuZXUiLGk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKHQsbyxuKXt2YXIgaT10aGlzOyFmdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfSh0aGlzLGUpLHRoaXMucnVudGltZVByb3RvU3R1YlVSTD10LHRoaXMubWVzc2FnZUJ1cz1vLHRoaXMuY29uZmlnPW4sdGhpcy5tZXNzYWdlQnVzLmFkZExpc3RlbmVyKCIqIixmdW5jdGlvbihlKXtlLnRvPT09ImRvbWFpbi1pZHA6Ly8iLmNvbmNhdChyKSYmaS5yZXF1ZXN0VG9JZHAoZSl9KSx0aGlzLl9zZW5kU3RhdHVzKCJjcmVhdGVkIil9cmV0dXJuIGZ1bmN0aW9uKGUsdCxvKXt0JiZuKGUucHJvdG90eXBlLHQpLG8mJm4oZSxvKX0oZSxbe2tleToiX3NlbmRTdGF0dXMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7Y29uc29sZS5sb2coIltTbGFjayBJZHAgUHJveHkgc3RhdHVzIGNoYW5nZWRdIHRvICIsZSksdGhpcy5fc3RhdGU9ZTt2YXIgbz17dHlwZToidXBkYXRlIixmcm9tOnRoaXMucnVudGltZVByb3RvU3R1YlVSTCx0bzp0aGlzLnJ1bnRpbWVQcm90b1N0dWJVUkwrIi9zdGF0dXMiLGJvZHk6e3ZhbHVlOmV9fTt0JiYoby5ib2R5LmRlc2M9dCksdGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG8pfX0se2tleToicmVxdWVzdFRvSWRwIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLG89ZS5ib2R5LnBhcmFtcztzd2l0Y2goZS5ib2R5Lm1ldGhvZCl7Y2FzZSJnZW5lcmF0ZUFzc2VydGlvbiI6dGhpcy5nZW5lcmF0ZUFzc2VydGlvbihvLmNvbnRlbnRzLG8ub3JpZ2luLG8udXNlcm5hbWVIaW50KS50aGVuKGZ1bmN0aW9uKG8pe3JldHVybiB0LnJlcGx5TWVzc2FnZShlLG8pfSkuY2F0Y2goZnVuY3Rpb24obyl7cmV0dXJuIHQucmVwbHlNZXNzYWdlKGUsbyl9KTticmVhaztjYXNlInZhbGlkYXRlQXNzZXJ0aW9uIjp0aGlzLnJlcGx5TWVzc2FnZShlLHtpZGVudGl0eToiaWRlbnRpdHlAaWRwLmNvbSIsY29udGVudHM6ImNvbnRlbnQifSl9fX0se2tleToiZ2VuZXJhdGVBc3NlcnRpb24iLHZhbHVlOmZ1bmN0aW9uKGUsdCxvKXt2YXIgbj10aGlzO3JldHVybiBjb25zb2xlLmxvZygiY29udGVudHMtPiIsZSksY29uc29sZS5sb2coIm9yaWdpbi0+Iix0KSxjb25zb2xlLmxvZygiaGludC0+IixvKSxuZXcgUHJvbWlzZShmdW5jdGlvbihlLHQpe2lmKG8pe3ZhciBpPW4uX3VybFBhcnNlcihvLCJhY2Nlc3NfdG9rZW4iKSxzPU1hdGguZmxvb3IoRGF0ZS5ub3coKS8xZTMpK24uX3VybFBhcnNlcihvLCJleHBpcmVzX2luIik7ZmV0Y2goImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS91c2VyaW5mbz9hY2Nlc3NfdG9rZW49Ii5jb25jYXQoaSkpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIGUuanNvbigpfSkudGhlbihmdW5jdGlvbih0KXt2YXIgbz17cGljdHVyZTp0LnBpY3R1cmUsZW1haWw6dC5lbWFpbCxmYW1pbHlfbmFtZTp0LmZhbWlseV9uYW1lLGdpdmVuX25hbWU6dC5naXZlbl9uYW1lfSxuPWJ0b2EoSlNPTi5zdHJpbmdpZnkoe3Rva2VuSUQ6aSxlbWFpbDp0LmVtYWlsLGlkOnQuaWR9KSksYT17aW5mbzp7ZXhwaXJlczpzfSxhc3NlcnRpb246bixpZHA6e2RvbWFpbjpyLHByb3RvY29sOiJPQXV0aCAyLjAifSxpbmZvVG9rZW46byxpbnRlcndvcmtpbmc6e2FjY2Vzc190b2tlbjppLGRvbWFpbjpyfX07Y29uc29sZS5sb2coIlJFU09MVklORyBUSElTIE9CSkVDVCIsYSksZShhKX0pLmNhdGNoKHQpfWVsc2V7dmFyIGE9Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi92Mi9hdXRoP3Njb3BlPWVtYWlsJTIwcHJvZmlsZSZzdGF0ZT0lMkZwcm9maWxlJnJlZGlyZWN0X3VyaT0iLmNvbmNhdChsb2NhdGlvbi5wcm90b2NvbCwiLy8iKS5jb25jYXQobG9jYXRpb24uaG9zdG5hbWUsIiZyZXNwb25zZV90eXBlPXRva2VuJmNsaWVudF9pZD04MDgzMjk1NjYwMTItdHFyOHFvaDExMTk0MmdkMmtnMDA3dDBzOGYyNzdyb2kuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iKTtjb25zb2xlLmxvZygiZmlyc3QgdXJsICIsYSwiZG9uZSIpLHQoe25hbWU6IklkUExvZ2luRXJyb3IiLGxvZ2luVXJsOmF9KX19KX19LHtrZXk6Il91cmxQYXJzZXIiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dD10LnJlcGxhY2UoL1tcW10vLCJcXFsiKS5yZXBsYWNlKC9bXF1dLywiXFxdIik7dmFyIG89bmV3IFJlZ0V4cCgiW1xcIyY/XSIrdCsiPShbXiYjXSopIikuZXhlYyhlKTtyZXR1cm4gbnVsbD09PW8/IiI6b1sxXX19LHtrZXk6InJlcGx5TWVzc2FnZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbz17aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsdG86ZS5mcm9tLGZyb206ZS50byxib2R5Ontjb2RlOjIwMCx2YWx1ZTp0fX07dGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG8pfX1dKSxlfSgpfV0pLmRlZmF1bHR9KTs=",
      "sourceCodeClassname": "rethink-project.eu",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy rethink-project.eu description",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "51d1a6bc8ef00faacd2f8f98218d99c6b",
    "constraints": {
      "browser": true,
      "onlyAccessToken": true
    },
    "interworking": true,
    "objectName": "rethink-project.eu",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "SlackProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "slack.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "4.00",
    "description": "IDPProxy slack description",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "54c3d276bb3c7038dad08fd45a4b3b706",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "slack.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "StravaIdpProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "strava.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "1.90",
    "description": "IDPProxy for Strava athletes plataform",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "5c9ceed0a3894683a4329d0351b19a7b3",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "strava.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  }
}