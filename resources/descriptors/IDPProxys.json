{
  "EdpIdpProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "edpdistribuicao.pt",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy for EDP Distribuição IDP",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "58c9e486c9a492fd9f1e0d5d3f5dd39f6",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "edpdistribuicao.pt",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "FacebookIdpProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "facebook.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy for Facebook idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "50ef75417b00e8340d1ddf496be07274a",
    "constraints": {
      "browser": true
    },
    "objectName": "facebook.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "GoogleIdpProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "google.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy for google idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "5fe88c210039898a45c75f6de8c56f417",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "google.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "NodejsProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "google.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy for node idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "52c91699f84b479f34e9f7abce2255fff",
    "constraints": {
      "node": true,
      "onlyIdAssertionValidation": true
    },
    "objectName": "google.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "MicrosoftProxyStub": {
    "sourcePackage": {
      "sourceCode": "IWZ1bmN0aW9uKGUsdCl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYib2JqZWN0Ij09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoImFjdGl2YXRlIixbXSx0KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hY3RpdmF0ZT10KCk6ZS5hY3RpdmF0ZT10KCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gbihvKXtpZih0W29dKXJldHVybiB0W29dLmV4cG9ydHM7dmFyIHI9dFtvXT17aTpvLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbb10uY2FsbChyLmV4cG9ydHMscixyLmV4cG9ydHMsbiksci5sPSEwLHIuZXhwb3J0c31yZXR1cm4gbi5tPWUsbi5jPXQsbi5kPWZ1bmN0aW9uKGUsdCxvKXtuLm8oZSx0KXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om99KX0sbi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCwiYSIsdCksdH0sbi5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSxuLnA9IiIsbihuLnM9MCl9KFtmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIG89dFtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG8ua2V5LG8pfX1yZXR1cm4gZnVuY3Rpb24odCxuLG8pe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLG8mJmUodCxvKSx0fX0oKTt0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0LG4pe3JldHVybntuYW1lOiJNaWNyb3NvZnRQcm94eVN0dWIiLGluc3RhbmNlOm5ldyBhKGUsdCxuKX19O3ZhciByPXtjbGllbnRJRDoiMDAwMDAwMDA0QzE4MzkxRiIscmVkaXJlY3RVUkk6bG9jYXRpb24ub3JpZ2luLHRva2VuRW5kcG9pbnQ6Imh0dHBzOi8vbG9naW4ubGl2ZS5jb20vb2F1dGgyMF9hdXRob3JpemUuc3JmPyIsdHlwZToidG9rZW4iLHNjb3BlOiJ3bC5zaWduaW4sd2wuYmFzaWMiLG1vZGU6ImZyYWdtZW50In0saT1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbih0LG4pe3ZhciBvPUpTT04ucGFyc2UoYXRvYihlKSk7dCh7aWRlbnRpdHk6by5lbWFpbCxjb250ZW50czpvLm5vbmNlfSl9KX0scz1mdW5jdGlvbihlLHQsbil7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQsbyl7aWYobil7dmFyIGk9bi5zcGxpdCgiLyIpWzNdLnNwbGl0KCIuIikscz1KU09OLnBhcnNlKGF0b2IoaVsxXSkpO3Qoe2Fzc2VydGlvbjppWzFdLGlkcDp7ZG9tYWluOiJtaWNyb3NvZnQuY29tIixwcm90b2NvbDoiT0lEQyJ9LGluZm9Ub2tlbjpzfSl9ZWxzZXtvKHtuYW1lOiJJZFBMb2dpbkVycm9yIixsb2dpblVybDpyLnRva2VuRW5kcG9pbnQrInJlc3BvbnNlX3R5cGU9IityLnR5cGUrIiZjbGllbnRfaWQ9IityLmNsaWVudElEKyImc2NvcGU9IityLnNjb3BlKyImbm9uY2U9IitlKyImcmVzcG9uc2VfbW9kZT0iK3IubW9kZSsiJnJlZGlyZWN0X3VyaT0iK3IucmVkaXJlY3RVUkl9KX19KX0sYT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxuLG8peyFmdW5jdGlvbihlLHQpe2lmKCEoZSBpbnN0YW5jZW9mIHQpKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpfSh0aGlzLGUpO3ZhciByPXRoaXM7ci5ydW50aW1lUHJvdG9TdHViVVJMPXQsci5tZXNzYWdlQnVzPW4sci5jb25maWc9byxyLm1lc3NhZ2VCdXMuYWRkTGlzdGVuZXIoIioiLGZ1bmN0aW9uKGUpeyJkb21haW4taWRwOi8vbWljcm9zb2Z0LmNvbSI9PT1lLnRvJiZyLnJlcXVlc3RUb0lkcChlKX0pLHIuX3NlbmRTdGF0dXMoImNyZWF0ZWQiKX1yZXR1cm4gbyhlLFt7a2V5OiJyZXF1ZXN0VG9JZHAiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsbj1lLmJvZHkucGFyYW1zO3N3aXRjaChlLmJvZHkubWV0aG9kKXtjYXNlImdlbmVyYXRlQXNzZXJ0aW9uIjpzKG4uY29udGVudHMsbi5vcmlnaW4sbi51c2VybmFtZUhpbnQpLnRoZW4oZnVuY3Rpb24obil7dC5yZXBseU1lc3NhZ2UoZSxuKX0sZnVuY3Rpb24obil7dC5yZXBseU1lc3NhZ2UoZSxuKX0pO2JyZWFrO2Nhc2UidmFsaWRhdGVBc3NlcnRpb24iOmkobi5hc3NlcnRpb24sbi5vcmlnaW4pLnRoZW4oZnVuY3Rpb24obil7dC5yZXBseU1lc3NhZ2UoZSxuKX0sZnVuY3Rpb24obil7dC5yZXBseU1lc3NhZ2UoZSxuKX0pfX19LHtrZXk6InJlcGx5TWVzc2FnZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj17aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsdG86ZS5mcm9tLGZyb206ZS50byxib2R5Ontjb2RlOjIwMCx2YWx1ZTp0fX07dGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG4pfX0se2tleToiX3NlbmRTdGF0dXMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7Y29uc29sZS5sb2coIltHb29nbGVJZHBQcm94eS5zZW5kU3RhdHVzXSAiLGUpLHRoaXMuX3N0YXRlPWU7dmFyIG49e3R5cGU6InVwZGF0ZSIsZnJvbTp0aGlzLnJ1bnRpbWVQcm90b1N0dWJVUkwsdG86dGhpcy5ydW50aW1lUHJvdG9TdHViVVJMKyIvc3RhdHVzIixib2R5Ont2YWx1ZTplfX07dCYmKG4uYm9keS5kZXNjPXQpLHRoaXMubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShuKX19XSksZX0oKX1dKS5kZWZhdWx0fSk7",
      "sourceCodeClassname": "microsoft.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy for microsoft idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "546e0f62b1aa6b322a17c85cf925e1dba",
    "constraints": {
      "browser": true
    },
    "objectName": "microsoft.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "MobieIdpProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "mobie.pt",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy for Mobi.e plataform",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "59f507ef6489fb23385c0d18eaa5aa4bf",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "mobie.pt",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "FakeNodejsForBrowserProxyStub": {
    "sourcePackage": {
      "sourceCode": "IWZ1bmN0aW9uKGUsdCl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYib2JqZWN0Ij09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoImFjdGl2YXRlIixbXSx0KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hY3RpdmF0ZT10KCk6ZS5hY3RpdmF0ZT10KCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gbihvKXtpZih0W29dKXJldHVybiB0W29dLmV4cG9ydHM7dmFyIHI9dFtvXT17aTpvLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbb10uY2FsbChyLmV4cG9ydHMscixyLmV4cG9ydHMsbiksci5sPSEwLHIuZXhwb3J0c31yZXR1cm4gbi5tPWUsbi5jPXQsbi5kPWZ1bmN0aW9uKGUsdCxvKXtuLm8oZSx0KXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om99KX0sbi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCwiYSIsdCksdH0sbi5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSxuLnA9IiIsbihuLnM9MCl9KFtmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIG89dFtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG8ua2V5LG8pfX1yZXR1cm4gZnVuY3Rpb24odCxuLG8pe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLG8mJmUodCxvKSx0fX0oKTt0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0LG4pe3JldHVybntuYW1lOiJOb2RlanNQcm94eVN0dWIiLGluc3RhbmNlOm5ldyBpKGUsdCxuKX19O3ZhciByPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGNvbnNvbGUubG9nKCJ2YWxpZGF0ZUFzc2VydGlvblByb3h5Tk9ERUpTRkFLRUJyb3dzZXI6YXNzZXJ0aW9uIixlKSxuZXcgUHJvbWlzZShmdW5jdGlvbih0LG4pe3ZhciBvPWF0b2IoZSkscj1KU09OLnBhcnNlKG8pLnRva2VuSUQuc3BsaXQoIi4iKSxzPUpTT04ucGFyc2UoYXRvYihyWzFdKSk7dCh7aWRlbnRpdHk6cy5lbWFpbCxjb250ZW50czpzLm5vbmNlfSl9KX0scz1mdW5jdGlvbihlLHQsbil7cmV0dXJuIGNvbnNvbGUubG9nKCJbSURQUk9YWS5nZW5lcmF0ZUFzc2VydGlvbkZBS0VfQlJPV1NFUjpjb250ZW50c10iLGUpLGNvbnNvbGUubG9nKCJbSURQUk9YWS5nZW5lcmF0ZUFzc2VydGlvbkZBS0VfQlJPV1NFUjpvcmlnaW5dIix0KSxjb25zb2xlLmxvZygiW0lEUFJPWFkuZ2VuZXJhdGVBc3NlcnRpb25GQUtFX0JST1dTRVI6aGludF0iLG4pLG5ldyBQcm9taXNlKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGNvbnNvbGUubG9nKCJnZW5lcmF0ZU1lc3NhZ2VSZXNwb25zZToiKSxlKGdlbmVyYXRlTWVzc2FnZVJlc3BvbnNlKX0pfSxpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LG4sbyl7IWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9KHRoaXMsZSksY29uc29sZS5sb2coIkZBS0UgTk9ERUpTIGNvbnN0cnVjdG9yIik7dmFyIHI9dGhpcztyLnJ1bnRpbWVQcm90b1N0dWJVUkw9dCxyLm1lc3NhZ2VCdXM9bixyLmNvbmZpZz1vLHIubWVzc2FnZUJ1cy5hZGRMaXN0ZW5lcigiKiIsZnVuY3Rpb24oZSl7ImRvbWFpbi1pZHA6Ly9ub2RlanMtaWRwIj09PWUudG8mJnIucmVxdWVzdFRvSWRwKGUpfSksci5fc2VuZFN0YXR1cygiY3JlYXRlZCIpfXJldHVybiBvKGUsW3trZXk6InJlcXVlc3RUb0lkcCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxuPWUuYm9keS5wYXJhbXM7c3dpdGNoKGUuYm9keS5tZXRob2Qpe2Nhc2UiZ2VuZXJhdGVBc3NlcnRpb24iOnMobi5jb250ZW50cyxuLm9yaWdpbixuLnVzZXJuYW1lSGludCkudGhlbihmdW5jdGlvbihuKXt0LnJlcGx5TWVzc2FnZShlLG4pfSxmdW5jdGlvbihuKXt0LnJlcGx5TWVzc2FnZShlLG4pfSk7YnJlYWs7Y2FzZSJ2YWxpZGF0ZUFzc2VydGlvbiI6cihuLmFzc2VydGlvbixuLm9yaWdpbikudGhlbihmdW5jdGlvbihuKXt0LnJlcGx5TWVzc2FnZShlLG4pfSxmdW5jdGlvbihuKXt0LnJlcGx5TWVzc2FnZShlLG4pfSl9fX0se2tleToicmVwbHlNZXNzYWdlIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXtpZDplLmlkLHR5cGU6InJlc3BvbnNlIix0bzplLmZyb20sZnJvbTplLnRvLGJvZHk6e2NvZGU6MjAwLHZhbHVlOnR9fTt0aGlzLm1lc3NhZ2VCdXMucG9zdE1lc3NhZ2Uobil9fSx7a2V5OiJfc2VuZFN0YXR1cyIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtjb25zb2xlLmxvZygiW05vZGVKUy5zZW5kU3RhdHVzXSAiLGUpLHRoaXMuX3N0YXRlPWU7dmFyIG49e3R5cGU6InVwZGF0ZSIsZnJvbTp0aGlzLnJ1bnRpbWVQcm90b1N0dWJVUkwsdG86dGhpcy5ydW50aW1lUHJvdG9TdHViVVJMKyIvc3RhdHVzIixib2R5Ont2YWx1ZTplfX07dCYmKG4uYm9keS5kZXNjPXQpLHRoaXMubWVzc2FnZUJ1cy5wb3N0TWVzc2FnZShuKX19XSksZX0oKX1dKS5kZWZhdWx0fSk7",
      "sourceCodeClassname": "nodejs-idp",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy for browser idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "5d2606fd332d71526cafc4c13d80437b4",
    "constraints": {
      "browser": true,
      "onlyIdAssertionValidation": true
    },
    "objectName": "nodejs-idp",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "FakeNodejsProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "nodejs-idp",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy for node idp",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "57378b186a1ba1a7af6d8190014c85afc",
    "constraints": {
      "node": true
    },
    "objectName": "nodejs-idp",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "IMSIWProxyStub": {
    "sourcePackage": {
      "sourceCode": "IWZ1bmN0aW9uKGUsdCl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYib2JqZWN0Ij09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoImFjdGl2YXRlIixbXSx0KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5hY3RpdmF0ZT10KCk6ZS5hY3RpdmF0ZT10KCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9e307ZnVuY3Rpb24gbihvKXtpZih0W29dKXJldHVybiB0W29dLmV4cG9ydHM7dmFyIHI9dFtvXT17aTpvLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIGVbb10uY2FsbChyLmV4cG9ydHMscixyLmV4cG9ydHMsbiksci5sPSEwLHIuZXhwb3J0c31yZXR1cm4gbi5tPWUsbi5jPXQsbi5kPWZ1bmN0aW9uKGUsdCxvKXtuLm8oZSx0KXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om99KX0sbi5uPWZ1bmN0aW9uKGUpe3ZhciB0PWUmJmUuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiBlLmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIGV9O3JldHVybiBuLmQodCwiYSIsdCksdH0sbi5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSxuLnA9IiIsbihuLnM9MCl9KFtmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCJfX2VzTW9kdWxlIix7dmFsdWU6ITB9KTt2YXIgbz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIG89dFtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCwidmFsdWUiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG8ua2V5LG8pfX1yZXR1cm4gZnVuY3Rpb24odCxuLG8pe3JldHVybiBuJiZlKHQucHJvdG90eXBlLG4pLG8mJmUodCxvKSx0fX0oKTt0LmRlZmF1bHQ9ZnVuY3Rpb24oZSx0LG4pe3JldHVybntuYW1lOiJJTVNJV1Byb3h5U3R1YiIsaW5zdGFuY2U6bmV3IGkoZSx0LG4pfX07dmFyIHI9InJldGhpbmstcHJvamVjdC5ldSIsaT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxuLG8pe3ZhciBpPXRoaXM7IWZ1bmN0aW9uKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIil9KHRoaXMsZSksdGhpcy5ydW50aW1lUHJvdG9TdHViVVJMPXQsdGhpcy5tZXNzYWdlQnVzPW4sdGhpcy5jb25maWc9byx0aGlzLm1lc3NhZ2VCdXMuYWRkTGlzdGVuZXIoIioiLGZ1bmN0aW9uKGUpe2UudG89PT0iZG9tYWluLWlkcDovLyIrciYmaS5yZXF1ZXN0VG9JZHAoZSl9KSx0aGlzLl9zZW5kU3RhdHVzKCJjcmVhdGVkIil9cmV0dXJuIG8oZSxbe2tleToiX3NlbmRTdGF0dXMiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7Y29uc29sZS5sb2coIltTbGFjayBJZHAgUHJveHkgc3RhdHVzIGNoYW5nZWRdIHRvICIsZSksdGhpcy5fc3RhdGU9ZTt2YXIgbj17dHlwZToidXBkYXRlIixmcm9tOnRoaXMucnVudGltZVByb3RvU3R1YlVSTCx0bzp0aGlzLnJ1bnRpbWVQcm90b1N0dWJVUkwrIi9zdGF0dXMiLGJvZHk6e3ZhbHVlOmV9fTt0JiYobi5ib2R5LmRlc2M9dCksdGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG4pfX0se2tleToicmVxdWVzdFRvSWRwIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLG49ZS5ib2R5LnBhcmFtcztzd2l0Y2goZS5ib2R5Lm1ldGhvZCl7Y2FzZSJnZW5lcmF0ZUFzc2VydGlvbiI6dGhpcy5nZW5lcmF0ZUFzc2VydGlvbihuLmNvbnRlbnRzLG4ub3JpZ2luLG4udXNlcm5hbWVIaW50KS50aGVuKGZ1bmN0aW9uKG4pe3JldHVybiB0LnJlcGx5TWVzc2FnZShlLG4pfSkuY2F0Y2goZnVuY3Rpb24obil7cmV0dXJuIHQucmVwbHlNZXNzYWdlKGUsbil9KTticmVhaztjYXNlInZhbGlkYXRlQXNzZXJ0aW9uIjp0aGlzLnJlcGx5TWVzc2FnZShlLHtpZGVudGl0eToiaWRlbnRpdHlAaWRwLmNvbSIsY29udGVudHM6ImNvbnRlbnQifSl9fX0se2tleToiZ2VuZXJhdGVBc3NlcnRpb24iLHZhbHVlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgbz10aGlzO3JldHVybiBjb25zb2xlLmxvZygiY29udGVudHMtPiIsZSksY29uc29sZS5sb2coIm9yaWdpbi0+Iix0KSxjb25zb2xlLmxvZygiaGludC0+IixuKSxuZXcgUHJvbWlzZShmdW5jdGlvbihlLHQpe2lmKG4pe3ZhciBpPW8uX3VybFBhcnNlcihuLCJhY2Nlc3NfdG9rZW4iKSxzPU1hdGguZmxvb3IoRGF0ZS5ub3coKS8xZTMpK28uX3VybFBhcnNlcihuLCJleHBpcmVzX2luIik7ZmV0Y2goImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS91c2VyaW5mbz9hY2Nlc3NfdG9rZW49IitpKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlLmpzb24oKX0pLnRoZW4oZnVuY3Rpb24odCl7dmFyIG49e3BpY3R1cmU6dC5waWN0dXJlLGVtYWlsOnQuZW1haWwsZmFtaWx5X25hbWU6dC5mYW1pbHlfbmFtZSxnaXZlbl9uYW1lOnQuZ2l2ZW5fbmFtZX0sbz1idG9hKEpTT04uc3RyaW5naWZ5KHt0b2tlbklEOmksZW1haWw6dC5lbWFpbCxpZDp0LmlkfSkpLGE9e2luZm86e2V4cGlyZXM6c30sYXNzZXJ0aW9uOm8saWRwOntkb21haW46cixwcm90b2NvbDoiT0F1dGggMi4wIn0saW5mb1Rva2VuOm4saW50ZXJ3b3JraW5nOnthY2Nlc3NfdG9rZW46aSxkb21haW46cn19O2NvbnNvbGUubG9nKCJSRVNPTFZJTkcgVEhJUyBPQkpFQ1QiLGEpLGUoYSl9KS5jYXRjaCh0KX1lbHNle3ZhciBhPSJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvdjIvYXV0aD9zY29wZT1lbWFpbCUyMHByb2ZpbGUmc3RhdGU9JTJGcHJvZmlsZSZyZWRpcmVjdF91cmk9Iitsb2NhdGlvbi5wcm90b2NvbCsiLy8iK2xvY2F0aW9uLmhvc3RuYW1lKyImcmVzcG9uc2VfdHlwZT10b2tlbiZjbGllbnRfaWQ9ODA4MzI5NTY2MDEyLXRxcjhxb2gxMTE5NDJnZDJrZzAwN3QwczhmMjc3cm9pLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIjtjb25zb2xlLmxvZygiZmlyc3QgdXJsICIsYSwiZG9uZSIpLHQoe25hbWU6IklkUExvZ2luRXJyb3IiLGxvZ2luVXJsOmF9KX19KX19LHtrZXk6Il91cmxQYXJzZXIiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dD10LnJlcGxhY2UoL1tcW10vLCJcXFsiKS5yZXBsYWNlKC9bXF1dLywiXFxdIik7dmFyIG49bmV3IFJlZ0V4cCgiW1xcIyY/XSIrdCsiPShbXiYjXSopIikuZXhlYyhlKTtyZXR1cm4gbnVsbD09PW4/IiI6blsxXX19LHtrZXk6InJlcGx5TWVzc2FnZSIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgbj17aWQ6ZS5pZCx0eXBlOiJyZXNwb25zZSIsdG86ZS5mcm9tLGZyb206ZS50byxib2R5Ontjb2RlOjIwMCx2YWx1ZTp0fX07dGhpcy5tZXNzYWdlQnVzLnBvc3RNZXNzYWdlKG4pfX1dKSxlfSgpfV0pLmRlZmF1bHR9KTs=",
      "sourceCodeClassname": "rethink-project.eu",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy rethink-project.eu description",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "51d1a6bc8ef00faacd2f8f98218d99c6b",
    "constraints": {
      "browser": true,
      "onlyAccessToken": true
    },
    "interworking": true,
    "objectName": "rethink-project.eu",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  },
  "SlackProxyStub": {
    "sourcePackage": {
      "sourceCode": "",
      "sourceCodeClassname": "slack.com",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "0.30",
    "description": "IDPProxy slack description",
    "language": "javascript",
    "type": "IDPProxys",
    "cguid": "54c3d276bb3c7038dad08fd45a4b3b706",
    "constraints": {
      "browser": true
    },
    "interworking": true,
    "objectName": "slack.com",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  }
}