{
  "Runtime": {
    "sourcePackage": {
      "sourceCode": "// version: 0.14.0
// date: Wed Oct 24 2018 16:36:17 GMT+0100 (Western European Summer Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


// version: 0.14.0
// date: Wed Oct 24 2018 16:36:17 GMT+0100 (Western European Summer Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


// version: 0.14.0
// date: Wed Oct 24 2018 16:34:45 GMT+0100 (Western European Summer Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


// version: 0.14.0
// date: Wed Oct 24 2018 16:34:45 GMT+0100 (Western European Summer Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


// version: 0.14.0
// date: Wed Oct 24 2018 16:34:15 GMT+0100 (Western European Summer Time)
// licence: 
/**
* Copyright 2016 PT Inovação e Sistemas SA
* Copyright 2016 INESC-ID
* Copyright 2016 QUOBIS NETWORKS SL
* Copyright 2016 FRAUNHOFER-GESELLSCHAFT ZUR FOERDERUNG DER ANGEWANDTEN FORSCHUNG E.V
* Copyright 2016 ORANGE SA
* Copyright 2016 Deutsche Telekom AG
* Copyright 2016 Apizee
* Copyright 2016 TECHNISCHE UNIVERSITAT BERLIN
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/


!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("Runtime",[],t):"object"==typeof exports?exports.Runtime=t():e.Runtime=t()}("undefined"!=typeof self?self:this,function(){return function(e){function __webpack_require__(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,__webpack_require__),n.l=!0,n.exports}var t={};return __webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,r){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},__webpack_require__.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=222)}([function(e,t,r){var n=r(7),o=r(31),i=r(23),a=r(24),s=r(32),u=function(e,t,r){var c,l,f,d,p=e&u.F,y=e&u.G,h=e&u.S,v=e&u.P,g=e&u.B,b=y?n:h?n[t]||(n[t]={}):(n[t]||{}).prototype,_=y?o:o[t]||(o[t]={}),m=_.prototype||(_.prototype={});y&&(r=t);for(c in r)l=!p&&b&&void 0!==b[c],f=(l?b:r)[c],d=g&&l?s(f,n):v&&"function"==typeof f?s(Function.call,f):f,b&&a(b,c,f,e&u.U),_[c]!=f&&i(_,c,d),v&&m[c]!=f&&(m[c]=f)};n.core=o,u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t,r){"use strict";t.__esModule=!0,t.default=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},function(e,t,r){"use strict";t.__esModule=!0;var n=r(204),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=function(){function defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),(0,o.default)(e,n.key,n)}}return function(e,t,r){return t&&defineProperties(e.prototype,t),r&&defineProperties(e,r),e}}()},function(e,t,r){e.exports={default:r(430),__esModule:!0}},function(e,t,r){var n,o;!function(i,a){"use strict";n=a,void 0!==(o="function"==typeof n?n.call(t,r,t,e):n)&&(e.exports=o)}(0,function(){"use strict";function bindMethod(e,t){var r=e[t];if("function"==typeof r.bind)return r.bind(e);try{return Function.prototype.bind.call(r,e)}catch(t){return function(){return Function.prototype.apply.apply(r,[e,arguments])}}}function realMethod(r){return"debug"===r&&(r="log"),typeof console!==t&&(void 0!==console[r]?bindMethod(console,r):void 0!==console.log?bindMethod(console,"log"):e)}function replaceLoggingMethods(t,n){for(var o=0;o<r.length;o++){var i=r[o];this[i]=o<t?e:this.methodFactory(i,t,n)}this.log=this.debug}function enableLoggingWhenConsoleArrives(e,r,n){return function(){typeof console!==t&&(replaceLoggingMethods.call(this,r,n),this[e].apply(this,arguments))}}function defaultMethodFactory(e,t,r){return realMethod(e)||enableLoggingWhenConsoleArrives.apply(this,arguments)}function Logger(e,n,o){function persistLevelIfPossible(e){var n=(r[e]||"silent").toUpperCase();if(typeof window!==t){try{return void(window.localStorage[s]=n)}catch(e){}try{window.document.cookie=encodeURIComponent(s)+"="+n+";"}catch(e){}}}function getPersistedLevel(){var e;if(typeof window!==t){try{e=window.localStorage[s]}catch(e){}if(typeof e===t)try{var r=window.document.cookie,n=r.indexOf(encodeURIComponent(s)+"=");-1!==n&&(e=/^([^;]+)/.exec(r.slice(n))[1])}catch(e){}return void 0===a.levels[e]&&(e=void 0),e}}var i,a=this,s="loglevel";e&&(s+=":"+e),a.name=e,a.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},a.methodFactory=o||defaultMethodFactory,a.getLevel=function(){return i},a.setLevel=function(r,n){if("string"==typeof r&&void 0!==a.levels[r.toUpperCase()]&&(r=a.levels[r.toUpperCase()]),!("number"==typeof r&&r>=0&&r<=a.levels.SILENT))throw"log.setLevel() called with invalid level: "+r;if(i=r,!1!==n&&persistLevelIfPossible(r),replaceLoggingMethods.call(a,r,e),typeof console===t&&r<a.levels.SILENT)return"No console available for logging"},a.setDefaultLevel=function(e){getPersistedLevel()||a.setLevel(e,!1)},a.enableAll=function(e){a.setLevel(a.levels.TRACE,e)},a.disableAll=function(e){a.setLevel(a.levels.SILENT,e)};var u=getPersistedLevel();null==u&&(u=null==n?"WARN":n),a.setLevel(u,!1)}var e=function(){},t="undefined",r=["trace","debug","info","warn","error"],n=new Logger,o={};n.getLogger=function(e){if("string"!=typeof e||""===e)throw new TypeError("You must supply a name when creating a logger.");var t=o[e];return t||(t=o[e]=new Logger(e,n.getLevel(),n.methodFactory)),t};var i=typeof window!==t?window.log:void 0;return n.noConflict=function(){return typeof window!==t&&window.log===n&&(window.log=i),n},n.getLoggers=function(){return o},n})},function(e,t,r){var n=r(9);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function divideURL(e){function recurse(e){var t=/([a-zA-Z-]*)(:\/\/(?:\.)?|:)([-a-zA-Z0-9@:%._+~#=]{2,256})([-a-zA-Z0-9@:%._+~#=\/]*)/gi;return e.replace(t,"$1,$3,$4").split(",")}var t=recurse(e);if(t[0]===e&&!t[0].includes("@")){return{type:"",domain:e,identity:""}}if(t[0]===e&&t[0].includes("@")){t=recurse((t[0]===e?"smtp":t[0])+"://"+t[0])}return t[1].includes("@")&&(t[2]=t[0]+"://"+t[1],t[1]=t[1].substr(t[1].indexOf("@")+1)),{type:t[0],domain:t[1],identity:t[2]}}function emptyObject(e){return!((0,a.default)(e).length>0)}function secondsSinceEpoch(){return Math.floor(Date.now()/1e3)}function deepClone(e){if(e)return JSON.parse((0,o.default)(e))}function removePathFromURL(e){var t=e.split("/");return t[0]+"//"+t[2]+"/"+t[3]}function getUserURLFromEmail(e){var t=e.indexOf("@");return"user://"+e.substring(t+1,e.length)+"/"+e.substring(0,t)}function getUserEmailFromURL(e){var t=divideURL(e);return t.identity.replace("/","")+"@"+t.domain}function convertToUserURL(e){if("user://"===e.substring(0,7)){var t=divideURL(e);if(t.domain&&t.identity)return e;throw"userURL with wrong format"}return getUserURLFromEmail(e)}function isDataObjectURL(e){var t=["domain-idp","runtime","domain","hyperty"],r=e.split("://"),n=r[0];return-1===t.indexOf(n)}function isLegacy(e){return e.split("@").length>1}function isURL(e){return e.split("/").length>=3}function isUserURL(e){return"user"===divideURL(e).type}function isHypertyURL(e){return"hyperty"===divideURL(e).type}function getConfigurationResources(e,t,r){return e[t][r]}function buildURL(e,t,r,n){var i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=e[t],s=void 0;if(!a.hasOwnProperty(r))throw Error("The configuration "+(0,o.default)(a,"",2)+" don't have the "+r+" resource you are looking for");var u=a[r];return n?(s=u.prefix+e.domain+u.suffix+n,u.hasOwnProperty("fallback")&&i&&(s=u.fallback.indexOf("%domain%")?u.fallback.replace(/(%domain%)/g,e.domain)+n:u.fallback+n)):s=u.prefix+e.domain+u.suffix,s}function generateGUID(){function s4(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return s4()+s4()+"-"+s4()+"-"+s4()+"-"+s4()+"-"+s4()+s4()+s4()}function getUserIdentityDomain(e){var t=divideURL(e),r=t.domain.split("."),n=r.length;return 1==n?r[n-1]:r[n-2]+"."+r[n-1]}function isBackendServiceURL(e){var t=divideURL(e),r=t.domain.split("."),n=["domain","global","domain-idp"],o=["registry","msg-node"],i=void 0;return r.length>1&&(i=r.filter(function(e){return-1!==o.indexOf(e)})[0]),!(!i||-1===o.indexOf(i))||!!t.type&&-1!==n.indexOf(t.type)}function divideEmail(e){var t=e.indexOf("@");return{username:e.substring(0,t),domain:e.substring(t+1,e.length)}}function assign(e,t,r){e||(e={}),"string"==typeof t&&(t=parseAttributes(t));for(var n=t.length-1,o=0;o<n;++o){var i=t[o];i in e||(e[i]={}),e=e[i]}e[t[n]]=r}function splitObjectURL(e){var t=e.split("/"),r=t[0]+"//"+t[2]+"/"+t[3],n=t[5],o={url:r,resource:n};return o}function checkAttribute(e){var t=/((([a-zA-Z]+):\/\/([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})\/[a-zA-Z0-9.]+@[a-zA-Z0-9]+(-)?[a-zA-Z0-9]+(\.)?[a-zA-Z0-9]{2,10}?\.[a-zA-Z]{2,10})(.+(?=.identity))?/gm,r=[],n=[];if(null==e.match(t))n=e.split(".");else{for(var o=void 0;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.forEach(function(e,t){0===t&&r.push(e)});var i=void 0;r.forEach(function(t){i=e.replace(t,"*-*"),n=i.split(".").map(function(e){return"*-*"===e?t:e})})}return n}function parseAttributes(e){var t=/([0-9a-zA-Z][-\w]*):\/\//g;if(e.includes("://")){var r=e.split(t)[0],n=r.split("."),o=e.replace(r,"");if(e.includes("identity")){var i=o.split("identity.");o=i[0].slice(".",-1),i=i[1].split("."),n.push(o,"identity"),n=n.concat(i)}else n.push(o);return n.filter(Boolean)}return e.split(".")}function isEmpty(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return(0,o.default)(e)===(0,o.default)({})}function chatkeysToStringCloner(e){var t={},r=(0,a.default)(e);if(r)try{for(var n=0;n<r.length;n++){var o=r[n];t[o]={},t[o].sessionKey=e[o].sessionKey.toString(),t[o].isToEncrypt=e[o].isToEncrypt}}catch(e){}return t}function chatkeysToArrayCloner(e){var t={},r=(0,a.default)(e);if(r)try{for(var n=0;n<r.length;n++){var o=r[n];t[o]={};var i=JSON.parse("["+e[o].sessionKey+"]");t[o].sessionKey=new Uint8Array(i),t[o].isToEncrypt=e[o].isToEncrypt}}catch(e){}return t}function parseMessageURL(e){var t=e.split("/");return t.length<=6?t[0]+"//"+t[2]+"/"+t[3]:t[0]+"//"+t[2]+"/"+t[3]+"/"+t[4]}function availableSpace(e,t){var r=(e/t).toFixed(2);return{quota:t,usage:e,percent:Number(r)}}function encode(e){try{var t=stringify(e);return btoa(t)}catch(e){throw e}}function decode(e){try{return JSON.parse(atob(e))}catch(e){throw e}}function decodeToUint8Array(e){try{return new Uint8Array(decode(e))}catch(e){throw e}}function stringify(e){try{return e.constructor===Uint8Array?"["+e.toString()+"]":(0,o.default)(e)}catch(e){throw e}}function parse(e){try{return JSON.parse(e)}catch(e){throw e}}function parseToUint8Array(e){try{return new Uint8Array(parse(e))}catch(e){throw e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(35),o=_interopRequireDefault(n),i=r(16),a=_interopRequireDefault(i);t.divideURL=divideURL,t.emptyObject=emptyObject,t.secondsSinceEpoch=secondsSinceEpoch,t.deepClone=deepClone,t.removePathFromURL=removePathFromURL,t.getUserURLFromEmail=getUserURLFromEmail,t.getUserEmailFromURL=getUserEmailFromURL,t.convertToUserURL=convertToUserURL,t.isDataObjectURL=isDataObjectURL,t.isLegacy=isLegacy,t.isURL=isURL,t.isUserURL=isUserURL,t.isHypertyURL=isHypertyURL,t.getConfigurationResources=getConfigurationResources,t.buildURL=buildURL,t.generateGUID=generateGUID,t.getUserIdentityDomain=getUserIdentityDomain,t.isBackendServiceURL=isBackendServiceURL,t.divideEmail=divideEmail,t.assign=assign,t.splitObjectURL=splitObjectURL,t.checkAttribute=checkAttribute,t.parseAttributes=parseAttributes,t.isEmpty=isEmpty,t.chatkeysToStringCloner=chatkeysToStringCloner,t.chatkeysToArrayCloner=chatkeysToArrayCloner,t.parseMessageURL=parseMessageURL,t.availableSpace=availableSpace,t.encode=encode,t.decode=decode,t.decodeToUint8Array=decodeToUint8Array,t.stringify=stringify,t.parse=parse,t.parseToUint8Array=parseToUint8Array},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){var n=r(83)("wks"),o=r(53),i=r(7).Symbol,a="function"==typeof i;(e.exports=function(e){return n[e]||(n[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=n},function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},function(e,t,r){e.exports=!r(8)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,r){var n=r(5),o=r(155),i=r(36),a=Object.defineProperty;t.f=r(12)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return a(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(38),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){e.exports={default:r(466),__esModule:!0}},function(e,t,r){e.exports={default:r(426),__esModule:!0}},function(e,t,r){"use strict";t.__esModule=!0;var n=r(82),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":(0,o.default)(t))&&"function"!=typeof t?e:t}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var n=r(468),o=_interopRequireDefault(n),i=r(472),a=_interopRequireDefault(i),s=r(82),u=_interopRequireDefault(s);t.default=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":(0,u.default)(t)));e.prototype=(0,a.default)(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(o.default?(0,o.default)(e,t):e.__proto__=t)}},function(e,t,r){var n=r(37);e.exports=function(e){return Object(n(e))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t,r){var n=r(136)("wks"),o=r(98),i=r(21).Symbol,a="function"==typeof i;(e.exports=function(e){return n[e]||(n[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=n},function(e,t,r){var n=r(13),o=r(52);e.exports=r(12)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(7),o=r(23),i=r(27),a=r(53)("src"),s=Function.toString,u=(""+s).split("toString");r(31).inspectSource=function(e){return s.call(e)},(e.exports=function(e,t,r,s){var c="function"==typeof r;c&&(i(r,"name")||o(r,"name",t)),e[t]!==r&&(c&&(i(r,a)||o(r,a,e[t]?""+e[t]:u.join(String(t)))),e===n?e[t]=r:s?e[t]?e[t]=r:o(e,t,r):(delete e[t],o(e,t,r)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[a]||s.call(this)})},function(e,t,r){var n=r(0),o=r(8),i=r(37),a=/"/g,s=function(e,t,r,n){var o=String(i(e)),s="<"+t;return""!==r&&(s+=" "+r+'="'+String(n).replace(a,"&quot;")+'"'),s+">"+o+"</"+t+">"};e.exports=function(e,t){var r={};r[e]=t(s),n(n.P+n.F*o(function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3}),"String",r)}},function(e,t,r){var n=r(21),o=r(11),i=r(69),a=r(63),s=r(62),u=function(e,t,r){var c,l,f,d=e&u.F,p=e&u.G,y=e&u.S,h=e&u.P,v=e&u.B,g=e&u.W,b=p?o:o[t]||(o[t]={}),_=b.prototype,m=p?n:y?n[t]:(n[t]||{}).prototype;p&&(r=t);for(c in r)(l=!d&&m&&void 0!==m[c])&&s(b,c)||(f=l?m[c]:r[c],b[c]=p&&"function"!=typeof m[c]?r[c]:v&&l?i(f,n):g&&m[c]==f?function(e){var t=function(t,r,n){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,r)}return new e(t,r,n)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(f):h&&"function"==typeof f?i(Function.call,f):f,h&&((b.virtual||(b.virtual={}))[c]=f,e&u.R&&_&&!_[c]&&a(_,c,f)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,e.exports=u},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(73),o=r(37);e.exports=function(e){return n(o(e))}},function(e,t,r){var n=r(74),o=r(52),i=r(28),a=r(36),s=r(27),u=r(155),c=Object.getOwnPropertyDescriptor;t.f=r(12)?c:function(e,t){if(e=i(e),t=a(t,!0),u)try{return c(e,t)}catch(e){}if(s(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t,r){var n=r(27),o=r(19),i=r(108)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t){var r=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=r)},function(e,t,r){var n=r(20);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t,r){"use strict";var n=r(8);e.exports=function(e,t){return!!e&&n(function(){t?e.call(null,function(){},1):e.call(null)})}},function(e,t,r){e.exports={default:r(478),__esModule:!0}},function(e,t,r){var n=r(9);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(0),o=r(31),i=r(8);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],a={};a[e]=t(r),n(n.S+n.F*i(function(){r(1)}),"Object",a)}},function(e,t,r){var n=r(32),o=r(73),i=r(19),a=r(14),s=r(125);e.exports=function(e,t){var r=1==e,u=2==e,c=3==e,l=4==e,f=6==e,d=5==e||f,p=t||s;return function(t,s,y){for(var h,v,g=i(t),b=o(g),_=n(s,y,3),m=a(b.length),R=0,O=r?p(t,m):u?p(t,0):void 0;m>R;R++)if((d||R in b)&&(h=b[R],v=_(h,R,g),e))if(r)O[R]=v;else if(v)switch(e){case 3:return!0;case 5:return h;case 6:return R;case 2:O.push(h)}else if(l)return!1;return f?-1:c||l?l:O}}},function(e,t,r){var n=r(45);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t,r){"use strict";if(r(12)){var n=r(48),o=r(7),i=r(8),a=r(0),s=r(94),u=r(131),c=r(32),l=r(59),f=r(52),d=r(23),p=r(61),y=r(38),h=r(14),v=r(181),g=r(55),b=r(36),_=r(27),m=r(75),R=r(9),O=r(19),w=r(122),k=r(56),S=r(30),P=r(57).f,D=r(124),M=r(53),L=r(10),j=r(40),U=r(84),E=r(91),x=r(127),A=r(66),I=r(88),C=r(58),T=r(126),q=r(171),H=r(13),N=r(29),F=H.f,B=N.f,G=o.RangeError,K=o.TypeError,V=o.Uint8Array,W=Array.prototype,Y=u.ArrayBuffer,J=u.DataView,z=j(0),X=j(2),$=j(3),Q=j(4),Z=j(5),ee=j(6),te=U(!0),re=U(!1),ne=x.values,oe=x.keys,ie=x.entries,ae=W.lastIndexOf,se=W.reduce,ue=W.reduceRight,ce=W.join,le=W.sort,fe=W.slice,de=W.toString,pe=W.toLocaleString,ye=L("iterator"),he=L("toStringTag"),ve=M("typed_constructor"),ge=M("def_constructor"),be=s.CONSTR,_e=s.TYPED,me=s.VIEW,Re=j(1,function(e,t){return Pe(E(e,e[ge]),t)}),Oe=i(function(){return 1===new V(new Uint16Array([1]).buffer)[0]}),we=!!V&&!!V.prototype.set&&i(function(){new V(1).set({})}),ke=function(e,t){var r=y(e);if(r<0||r%t)throw G("Wrong offset!");return r},Se=function(e){if(R(e)&&_e in e)return e;throw K(e+" is not a typed array!")},Pe=function(e,t){if(!(R(e)&&ve in e))throw K("It is not a typed array constructor!");return new e(t)},De=function(e,t){return Me(E(e,e[ge]),t)},Me=function(e,t){for(var r=0,n=t.length,o=Pe(e,n);n>r;)o[r]=t[r++];return o},Le=function(e,t,r){F(e,t,{get:function(){return this._d[r]}})},je=function(e){var t,r,n,o,i,a,s=O(e),u=arguments.length,l=u>1?arguments[1]:void 0,f=void 0!==l,d=D(s);if(void 0!=d&&!w(d)){for(a=d.call(s),n=[],t=0;!(i=a.next()).done;t++)n.push(i.value);s=n}for(f&&u>2&&(l=c(l,arguments[2],2)),t=0,r=h(s.length),o=Pe(this,r);r>t;t++)o[t]=f?l(s[t],t):s[t];return o},Ue=function(){for(var e=0,t=arguments.length,r=Pe(this,t);t>e;)r[e]=arguments[e++];return r},Ee=!!V&&i(function(){pe.call(new V(1))}),xe=function(){return pe.apply(Ee?fe.call(Se(this)):Se(this),arguments)},Ae={copyWithin:function(e,t){return q.call(Se(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return Q(Se(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return T.apply(Se(this),arguments)},filter:function(e){return De(this,X(Se(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return Z(Se(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(Se(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){z(Se(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return re(Se(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return te(Se(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ce.apply(Se(this),arguments)},lastIndexOf:function(e){return ae.apply(Se(this),arguments)},map:function(e){return Re(Se(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return se.apply(Se(this),arguments)},reduceRight:function(e){return ue.apply(Se(this),arguments)},reverse:function(){for(var e,t=this,r=Se(t).length,n=Math.floor(r/2),o=0;o<n;)e=t[o],t[o++]=t[--r],t[r]=e;return t},some:function(e){return $(Se(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return le.call(Se(this),e)},subarray:function(e,t){var r=Se(this),n=r.length,o=g(e,n);return new(E(r,r[ge]))(r.buffer,r.byteOffset+o*r.BYTES_PER_ELEMENT,h((void 0===t?n:g(t,n))-o))}},Ie=function(e,t){return De(this,fe.call(Se(this),e,t))},Ce=function(e){Se(this);var t=ke(arguments[1],1),r=this.length,n=O(e),o=h(n.length),i=0;if(o+t>r)throw G("Wrong length!");for(;i<o;)this[t+i]=n[i++]},Te={entries:function(){return ie.call(Se(this))},keys:function(){return oe.call(Se(this))},values:function(){return ne.call(Se(this))}},qe=function(e,t){return R(e)&&e[_e]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},He=function(e,t){return qe(e,t=b(t,!0))?f(2,e[t]):B(e,t)},Ne=function(e,t,r){return!(qe(e,t=b(t,!0))&&R(r)&&_(r,"value"))||_(r,"get")||_(r,"set")||r.configurable||_(r,"writable")&&!r.writable||_(r,"enumerable")&&!r.enumerable?F(e,t,r):(e[t]=r.value,e)};be||(N.f=He,H.f=Ne),a(a.S+a.F*!be,"Object",{getOwnPropertyDescriptor:He,defineProperty:Ne}),i(function(){de.call({})})&&(de=pe=function(){return ce.call(this)});var Fe=p({},Ae);p(Fe,Te),d(Fe,ye,Te.values),p(Fe,{slice:Ie,set:Ce,constructor:function(){},toString:de,toLocaleString:xe}),Le(Fe,"buffer","b"),Le(Fe,"byteOffset","o"),Le(Fe,"byteLength","l"),Le(Fe,"length","e"),F(Fe,he,{get:function(){return this[_e]}}),e.exports=function(e,t,r,u){u=!!u;var c=e+(u?"Clamped":"")+"Array",f="get"+e,p="set"+e,y=o[c],g=y||{},b=y&&S(y),_=!y||!s.ABV,O={},w=y&&y.prototype,D=function(e,r){var n=e._d;return n.v[f](r*t+n.o,Oe)},M=function(e,r,n){var o=e._d;u&&(n=(n=Math.round(n))<0?0:n>255?255:255&n),o.v[p](r*t+o.o,n,Oe)},L=function(e,t){F(e,t,{get:function(){return D(this,t)},set:function(e){return M(this,t,e)},enumerable:!0})};_?(y=r(function(e,r,n,o){l(e,y,c,"_d");var i,a,s,u,f=0,p=0;if(R(r)){if(!(r instanceof Y||"ArrayBuffer"==(u=m(r))||"SharedArrayBuffer"==u))return _e in r?Me(y,r):je.call(y,r);i=r,p=ke(n,t);var g=r.byteLength;if(void 0===o){if(g%t)throw G("Wrong length!");if((a=g-p)<0)throw G("Wrong length!")}else if((a=h(o)*t)+p>g)throw G("Wrong length!");s=a/t}else s=v(r),a=s*t,i=new Y(a);for(d(e,"_d",{b:i,o:p,l:a,e:s,v:new J(i)});f<s;)L(e,f++)}),w=y.prototype=k(Fe),d(w,"constructor",y)):i(function(){y(1)})&&i(function(){new y(-1)})&&I(function(e){new y,new y(null),new y(1.5),new y(e)},!0)||(y=r(function(e,r,n,o){l(e,y,c);var i;return R(r)?r instanceof Y||"ArrayBuffer"==(i=m(r))||"SharedArrayBuffer"==i?void 0!==o?new g(r,ke(n,t),o):void 0!==n?new g(r,ke(n,t)):new g(r):_e in r?Me(y,r):je.call(y,r):new g(v(r))}),z(b!==Function.prototype?P(g).concat(P(b)):P(g),function(e){e in y||d(y,e,g[e])}),y.prototype=w,n||(w.constructor=y));var j=w[ye],U=!!j&&("values"==j.name||void 0==j.name),E=Te.values;d(y,ve,!0),d(w,_e,c),d(w,me,!0),d(w,ge,y),(u?new y(1)[he]==c:he in w)||F(w,he,{get:function(){return c}}),O[c]=y,a(a.G+a.W+a.F*(y!=g),O),a(a.S,c,{BYTES_PER_ELEMENT:t}),a(a.S+a.F*i(function(){g.of.call(y,1)}),c,{from:je,of:Ue}),"BYTES_PER_ELEMENT"in w||d(w,"BYTES_PER_ELEMENT",t),a(a.P,c,Ae),C(c),a(a.P+a.F*we,c,{set:Ce}),a(a.P+a.F*!U,c,Te),n||w.toString==de||(w.toString=de),a(a.P+a.F*i(function(){new y(1).slice()}),c,{slice:Ie}),a(a.P+a.F*(i(function(){return[1,2].toLocaleString()!=new y([1,2]).toLocaleString()})||!i(function(){w.toLocaleString.call([1,2])})),c,{toLocaleString:xe}),A[c]=U?j:E,n||U||d(w,ye,E)}}else e.exports=function(){}},function(e,t,r){var n=r(176),o=r(0),i=r(83)("metadata"),a=i.store||(i.store=new(r(179))),s=function(e,t,r){var o=a.get(e);if(!o){if(!r)return;a.set(e,o=new n)}var i=o.get(t);if(!i){if(!r)return;o.set(t,i=new n)}return i},u=function(e,t,r){var n=s(t,r,!1);return void 0!==n&&n.has(e)},c=function(e,t,r){var n=s(t,r,!1);return void 0===n?void 0:n.get(e)},l=function(e,t,r,n){s(r,n,!0).set(e,t)},f=function(e,t){var r=s(e,t,!1),n=[];return r&&r.forEach(function(e,t){n.push(t)}),n},d=function(e){return void 0===e||"symbol"==typeof e?e:String(e)},p=function(e){o(o.S,"Reflect",e)};e.exports={store:a,map:s,has:u,get:c,set:l,keys:f,key:d,exp:p}},function(e,t,r){var n=r(41),o=r(191),i=r(140),a=Object.defineProperty;t.f=r(51)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return a(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){e.exports={default:r(447),__esModule:!0}},function(e,t,r){var n=r(53)("meta"),o=r(9),i=r(27),a=r(13).f,s=0,u=Object.isExtensible||function(){return!0},c=!r(8)(function(){return u(Object.preventExtensions({}))}),l=function(e){a(e,n,{value:{i:"O"+ ++s,w:{}}})},f=function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,n)){if(!u(e))return"F";if(!t)return"E";l(e)}return e[n].i},d=function(e,t){if(!i(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},p=function(e){return c&&y.NEED&&u(e)&&!i(e,n)&&l(e),e},y=e.exports={KEY:n,NEED:!1,fastKey:f,getWeak:d,onFreeze:p}},function(e,t){e.exports=!1},function(e,t,r){var n=r(10)("unscopables"),o=Array.prototype;void 0==o[n]&&r(23)(o,n,{}),e.exports=function(e){o[n][e]=!0}},function(e,t,r){var n=r(190),o=r(132);e.exports=function(e){return n(o(e))}},function(e,t,r){e.exports=!r(70)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t,r){var n=r(157),o=r(109);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){var n=r(38),o=Math.max,i=Math.min;e.exports=function(e,t){return e=n(e),e<0?o(e+t,0):i(e,t)}},function(e,t,r){var n=r(5),o=r(158),i=r(109),a=r(108)("IE_PROTO"),s=function(){},u=function(){var e,t=r(106)("iframe"),n=i.length;for(t.style.display="none",r(110).appendChild(t),t.src="javascript:",e=t.contentWindow.document,e.open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[i[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(s.prototype=n(e),r=new s,s.prototype=null,r[a]=e):r=u(),void 0===t?r:o(r,t)}},function(e,t,r){var n=r(157),o=r(109).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){"use strict";var n=r(7),o=r(13),i=r(12),a=r(10)("species");e.exports=function(e){var t=n[e];i&&t&&!t[a]&&o.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(32),o=r(169),i=r(122),a=r(5),s=r(14),u=r(124),c={},l={},t=e.exports=function(e,t,r,f,d){var p,y,h,v,g=d?function(){return e}:u(e),b=n(r,f,t?2:1),_=0;if("function"!=typeof g)throw TypeError(e+" is not iterable!");if(i(g)){for(p=s(e.length);p>_;_++)if((v=t?b(a(y=e[_])[0],y[1]):b(e[_]))===c||v===l)return v}else for(h=g.call(e);!(y=h.next()).done;)if((v=o(h,b,y.value,t))===c||v===l)return v};t.BREAK=c,t.RETURN=l},function(e,t,r){var n=r(24);e.exports=function(e,t,r){for(var o in t)n(e,o,t[o],r);return e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(44),o=r(79);e.exports=r(51)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(13).f,o=r(27),i=r(10)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){var n=r(0),o=r(37),i=r(8),a=r(112),s="["+a+"]",u="​",c=RegExp("^"+s+s+"*"),l=RegExp(s+s+"*$"),f=function(e,t,r){var o={},s=i(function(){return!!a[e]()||u[e]()!=u}),c=o[e]=s?t(d):a[e];r&&(o[r]=c),n(n.P+n.F*s,"String",o)},d=f.trim=function(e,t){return e=String(o(e)),1&t&&(e=e.replace(c,"")),2&t&&(e=e.replace(l,"")),e};e.exports=f},function(e,t){e.exports={}},function(e,t,r){var n=r(9);e.exports=function(e,t){if(!n(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},function(e,t,r){var n=r(189),o=r(137);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){var n=r(99);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports={}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.DataObjectSourceLanguage=t.CatalogueObjectType=void 0;var n=r(15),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(17),l=_interopRequireDefault(c),f=r(18),d=_interopRequireDefault(f),p=r(557),y=_interopRequireDefault(p),h=function(e){function CatalogueDataObject(e,t,r,n,i,s,u){(0,a.default)(this,CatalogueDataObject);var c=(0,l.default)(this,(CatalogueDataObject.__proto__||(0,o.default)(CatalogueDataObject)).call(this));return c._guid=e,c._type=t,c._version=r,c._objectName=n,c._description=i,c._language=s,c._sourcePackageURL=u,c._signature=null,c._sourcePackage=null,c}return(0,d.default)(CatalogueDataObject,e),(0,u.default)(CatalogueDataObject,[{key:"guid",get:function(){return this._guid},set:function(e){e&&(this._guid=e)}},{key:"type",get:function(){return this._type},set:function(e){e&&(this._type=e)}},{key:"version",get:function(){return this._version},set:function(e){e&&(this._version=e)}},{key:"objectName",get:function(){return this._objectName},set:function(e){e&&(this._objectName=e)}},{key:"description",get:function(){return this._description},set:function(e){e&&(this._description=e)}},{key:"language",get:function(){return this._language},set:function(e){e&&(this._language=e)}},{key:"signature",get:function(){return this._signature},set:function(e){e&&(this._signature=e)}},{key:"sourcePackage",get:function(){return this._sourcePackage},set:function(e){e&&(this._sourcePackage=e)}},{key:"sourcePackageURL",get:function(){return this._sourcePackageURL},set:function(e){e&&(this._sourcePackageURL=e)}}]),CatalogueDataObject}(y.default);t.CatalogueObjectType={HYPERTY:"hyperty",PROTOSTUB:"protostub",HYPERTY_RUNTIME:"hyperty_runtime",HYPERTY_INTERCEPTOR:"hyperty_inspector",HYPERTY_DATA_OBJECT:"hyperty_data_object"},t.DataObjectSourceLanguage={JAVASCRIPT_ECMA6:"javascript_ecma6",JAVASCRIPT_ECMA5:"javascript_ecma5",JSON_SCHEMA_V4:"json_schema_v4",PYTHON:"python",TYPESCRIPT:"typescript"};t.default=h},function(e,t,r){var n=r(33);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,r){var n=r(33),o=r(10)("toStringTag"),i="Arguments"==n(function(){return arguments}()),a=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,r,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=a(t=Object(e),o))?r:i?n(t):"Object"==(s=n(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,r){var n=r(132);e.exports=function(e){return Object(n(e))}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t){e.exports=!0},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,r){"use strict";var n=r(431)(!0);r(193)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var n=r(454),o=_interopRequireDefault(n),i=r(456),a=_interopRequireDefault(i),s="function"==typeof a.default&&"symbol"==typeof o.default?function(e){return typeof e}:function(e){return e&&"function"==typeof a.default&&e.constructor===a.default&&e!==a.default.prototype?"symbol":typeof e};t.default="function"==typeof a.default&&"symbol"===s(o.default)?function(e){return void 0===e?"undefined":s(e)}:function(e){return e&&"function"==typeof a.default&&e.constructor===a.default&&e!==a.default.prototype?"symbol":void 0===e?"undefined":s(e)}},function(e,t,r){var n=r(31),o=r(7),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(48)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t,r){var n=r(28),o=r(14),i=r(55);e.exports=function(e){return function(t,r,a){var s,u=n(t),c=o(u.length),l=i(a,c);if(e&&r!=r){for(;c>l;)if((s=u[l++])!=s)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(33);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n=r(9),o=r(33),i=r(10)("match");e.exports=function(e){var t;return n(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==o(e))}},function(e,t,r){var n=r(10)("iterator"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],a=i[n]();a.next=function(){return{done:r=!0}},i[n]=function(){return a},e(i)}catch(e){}return r}},function(e,t,r){"use strict";var n=r(5);e.exports=function(){var e=n(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,r){"use strict";var n=r(23),o=r(24),i=r(8),a=r(37),s=r(10);e.exports=function(e,t,r){var u=s(e),c=r(a,u,""[e]),l=c[0],f=c[1];i(function(){var t={};return t[u]=function(){return 7},7!=""[e](t)})&&(o(String.prototype,e,l),n(RegExp.prototype,u,2==t?function(e,t){return f.call(e,this,t)}:function(e){return f.call(e,this)}))}},function(e,t,r){var n=r(5),o=r(20),i=r(10)("species");e.exports=function(e,t){var r,a=n(e).constructor;return void 0===a||void 0==(r=n(a)[i])?t:o(r)}},function(e,t,r){var n=r(7),o=n.navigator;e.exports=o&&o.userAgent||""},function(e,t,r){"use strict";var n=r(7),o=r(0),i=r(24),a=r(61),s=r(47),u=r(60),c=r(59),l=r(9),f=r(8),d=r(88),p=r(64),y=r(113);e.exports=function(e,t,r,h,v,g){var b=n[e],_=b,m=v?"set":"add",R=_&&_.prototype,O={},w=function(e){var t=R[e];i(R,e,"delete"==e?function(e){return!(g&&!l(e))&&t.call(this,0===e?0:e)}:"has"==e?function(e){return!(g&&!l(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return g&&!l(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,r){return t.call(this,0===e?0:e,r),this})};if("function"==typeof _&&(g||R.forEach&&!f(function(){(new _).entries().next()}))){var k=new _,S=k[m](g?{}:-0,1)!=k,P=f(function(){k.has(1)}),D=d(function(e){new _(e)}),M=!g&&f(function(){for(var e=new _,t=5;t--;)e[m](t,t);return!e.has(-0)});D||(_=t(function(t,r){c(t,_,e);var n=y(new b,t,_);return void 0!=r&&u(r,v,n[m],n),n}),_.prototype=R,R.constructor=_),(P||M)&&(w("delete"),w("has"),v&&w("get")),(M||S)&&w(m),g&&R.clear&&delete R.clear}else _=h.getConstructor(t,e,v,m),a(_.prototype,r),s.NEED=!0;return p(_,e),O[e]=_,o(o.G+o.W+o.F*(_!=b),O),g||h.setStrong(_,e,v),_}},function(e,t,r){for(var n,o=r(7),i=r(23),a=r(53),s=a("typed_array"),u=a("view"),c=!(!o.ArrayBuffer||!o.DataView),l=c,f=0,d="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");f<9;)(n=o[d[f++]])?(i(n.prototype,s,!0),i(n.prototype,u,!0)):l=!1;e.exports={ABV:c,CONSTR:l,TYPED:s,VIEW:u}},function(e,t,r){"use strict";e.exports=r(48)||!r(8)(function(){var e=Math.random();__defineSetter__.call(null,e,function(){}),delete r(7)[e]})},function(e,t,r){"use strict";var n=r(0);e.exports=function(e){n(n.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}},function(e,t,r){"use strict";var n=r(0),o=r(20),i=r(32),a=r(60);e.exports=function(e){n(n.S,e,{from:function(e){var t,r,n,s,u=arguments[1];return o(this),t=void 0!==u,t&&o(u),void 0==e?new this:(r=[],t?(n=0,s=i(u,arguments[2],2),a(e,!1,function(e){r.push(s(e,n++))})):a(e,!1,r.push,r),new this(r))}})}},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,r){var n=r(44).f,o=r(62),i=r(22)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){r(434);for(var n=r(21),o=r(63),i=r(71),a=r(22)("toStringTag"),s="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),u=0;u<s.length;u++){var c=s[u],l=n[c],f=l&&l.prototype;f&&!f[a]&&o(f,a,c),i[c]=i.Array}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.runtimeUtils={runtimeDescriptor:{},runtimeCapabilities:{constraints:{}}}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var n=r(15),o=_interopRequireDefault(n),i=r(480),a=_interopRequireDefault(i);t.default=function get(e,t,r){null===e&&(e=Function.prototype);var n=(0,a.default)(e,t);if(void 0===n){var i=(0,o.default)(e);return null===i?void 0:get(i,t,r)}if("value"in n)return n.value;var s=n.get;if(void 0!==s)return s.call(r)}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=r(6),d=l.getLogger("address-allocation"),p=void 0,y=function(){function AddressAllocation(e,t,r,n){if((0,a.default)(this,AddressAllocation),p)return p;this._url=e+"/address-allocation",this._bus=t,this._registry=r,this._subscriptionManager=n,p=this}return(0,u.default)(AddressAllocation,[{key:"create",value:function(e,t,r,n,i){return i?"boolean"==typeof i?i?this._reuseAllocatedAddress(e,t,r,n,i):this._allocateNewAddress(e,n,t,r):"string"==typeof i&&(0,f.isURL)(i)?new o.default(function(e,t){return e({newAddress:!1,address:[i]})}):void 0:(d.info("[AddressAllocation] - new address will be allocated"),this._allocateNewAddress(e,n,t,r))}},{key:"_reuseAllocatedAddress",value:function(e,t,r,n,i){var a=this;return new o.default(function(o,s){a._registry.checkRegisteredURLs(r,i).then(function(u){if(u){d.info("[AddressAllocation - "+n+"] - Reuse URL");o({newAddress:!1,address:u})}else"string"==typeof i?(d.info("[AddressAllocation - reuseURL] - Object "+i+" not found"),s("URL Not Found")):"boolean"==typeof i?a._allocateNewAddress(e,n,t,r).then(o).catch(s):s("URL Not Found")})})}},{key:"_allocateNewAddress",value:function(e,t,r,n){var i=this;return new o.default(function(o,a){var s,u=[];for(s=0;s<r;s++)u.push(t+"://"+e+"/"+(0,f.generateGUID)());var c={newAddress:!0,address:u};if("hyperty"===t)if(n.hasOwnProperty("_configuration")){var l=!n._configuration.hasOwnProperty("domain_routing")||n.configuration.domain_routing;l?i._subscriptionManager.createSubscription(e,u,i._url).then(function(){o(c)}):o(c)}else o(c);else o(c)})}},{key:"delete",value:function(e,t){return new o.default(function(e,t){e(200)})}},{key:"url",get:function(){return this._url}}],[{key:"instance",get:function(){if(!p)throw new Error("The address allocation was not instantiated");return p}}]),AddressAllocation}();t.default=y,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=r(6),d=r(525),p=_interopRequireDefault(d),y=l.getLogger("CryptoManager"),h=function(){function CryptoManager(e){(0,a.default)(this,CryptoManager),this.storageManager=e,this.userDefaultKeyRef="userAsymmetricKey"}return(0,u.default)(CryptoManager,[{key:"init",value:function(e,t,r,n,o,i,a,s){var u=this;if(!e)throw new Error("[] runtimeURL is missing.");if(!r)throw new Error("storageManager is missing");if(!s)throw new Error("runtimeFactory is missing");u._runtimeURL=e,u._cryptoManagerURL=u._runtimeURL+"/cryptoManager",u.storageManager=r,u.dataObjectsStorage=n,u.runtimeCapabilities=t,u._runtimeFactory=s,u._domain=(0,f.divideURL)(u._runtimeURL).domain,u.crypto=new p.default(u._runtimeFactory),u.chatKeys={},u.dataObjectSessionKeys={},u.isToUseEncryption=!0,u._registry=o,u._coreDiscovery=i,u._idm=a}},{key:"loadSessionKeys",value:function(){var e=this;return new o.default(function(t){e.storageManager.get("dataObjectSessionKeys").then(function(r){e.dataObjectSessionKeys=r||{},t()})})}},{key:"_isFromRemoteSM",value:function(e){return"runtime"===e.split("://")[0]&&e!==this._runtimeURL+"/sm"}},{key:"addCryptoGUIListeners",value:function(){var e=this;e._messageBus.addListener(e._cryptoManagerURL,function(t){if("generateRSAKeyPair"===t.body.method)return void e._crypto.getMyPublicKey().then(function(r){var n={type:"execute",value:r,code:200},o={id:t.id,type:"response",to:t.from,from:t.to,body:n};try{e._messageBus.postMessage(o)}catch(e){y.error("On addGUIListeners from if generateRSAKeyPair method postMessage error: "+e)}})})}},{key:"_isToEncrypt",value:function(e){var t=this;y.info("[CryptoManager.istoChyperModule]",e);var r="create"===e.type,n=e.from.includes("hyperty://"),o=e.to.includes("hyperty://"),i=(0,f.isDataObjectURL)(e.to),a=t.registry.getDataObjectReporter(e.to),s=!e.body.hasOwnProperty("mutual")||e.body.mutual;return!!s&&((null===a||!(0,f.isLegacy)(a))&&(this.isToUseEncryption||"handshake"===e.type?"update"===e.type?(y.info("update:encryption disabled"),!1):!(0,f.isLegacy)(e.to)&&(r&&n&&o||r&&n&&i&&s||"handshake"===e.type||"update"===e.type&&s):(y.info("not handshake: encryption disabled"),!1)))}},{key:"_isToDecrypt",value:function(e){var t=this;return new o.default(function(r,n){if("subscribe"===e.type&t._isFromRemoteSM(e.from)){y.log("_doMutualAuthenticationPhase1");var o=t.registry.getDataObjectReporter(e.to);if(null!==o&&(0,f.isLegacy)(o))return r(!1);t._doMutualAuthenticationPhase1(e).then(function(){r(!1)},function(e){n(e)})}else e.hasOwnProperty("body")&&e.body.hasOwnProperty("value")&&"string"==typeof e.body.value?(y.log("_isToDecrypt:true"),r(!0)):(y.log("_isToDecrypt:false"),r(!1))}).catch(function(e){y.error("[CryptoManager._isToDecrypt]",e)})}},{key:"encryptMessage",value:function(e){var t=this;return y.log("encrypt message "),new o.default(function(r,n){var o="handshake"===e.type;if(!t._isToEncrypt(e))return r(e);var i=(0,f.parseMessageURL)(e.to),a=(0,f.isDataObjectURL)(i),s=(0,f.isLegacy)(e.to),u="hyperty"===(0,f.divideURL)(e.from).type,c="hyperty"===(0,f.divideURL)(e.to).type;if("update"===e.type)return y.log("encrypt message: message type update"),r(e);if(s)r(e);else if(u&&c){var l=t._registry.getHypertyOwner(e.from);if(l){var d=t.chatKeys[e.from+"<->"+e.to];if(d||(d=t._newChatCrypto(e,l),t.chatKeys[e.from+"<->"+e.to]=d,e.body.handshakePhase="startHandShake"),d.authenticated&&!o){var p=t.crypto.generateIV();t.crypto.encryptAES(d.keys.hypertyFromSessionKey,(0,f.stringify)(e.body.value),p).then(function(n){var o=t._filterMessageToHash(e,(0,f.stringify)(e.body.value)+(0,f.stringify)(p),d.hypertyFrom.messageInfo);t.crypto.hashHMAC(d.keys.hypertyFromHashKey,o).then(function(t){var o={iv:(0,f.encode)(p),value:(0,f.encode)(n),hash:(0,f.encode)(t)};e.body.value=(0,f.encode)(o),r(e)})})}else o?r(e):t._doHandShakePhase(e,d).then(function(r){t.chatKeys[e.from+"<->"+e.to]=r.chatKeys,t._messageBus.postMessage(r.message),n("encrypt handshake protocol phase ")})}else n("In encryptMessage: Hyperty owner URL was not found")}else u&&a&&t.storageManager.get("dataObjectSessionKeys").then(function(o){o=(0,f.chatkeysToArrayCloner)(o||{});var a=o?o[i]:null;t.dataObjectsStorage.getDataObject(i).then(function(o){if(!a&&o.reporter&&o.reporter===e.from){var s=t.crypto.generateRandom();t.dataObjectSessionKeys[i]={sessionKey:s,isToEncrypt:!0};var u=(0,f.chatkeysToStringCloner)(t.dataObjectSessionKeys);t.storageManager.set("dataObjectSessionKeys",0,u).catch(function(e){n("On encryptMessage from method storageManager.set error: "+e)}),a=t.dataObjectSessionKeys[i]}if(a)if(a.isToEncrypt){var c=t.crypto.generateIV(),l=(0,f.stringify)(c),d=(0,f.stringify)(e.body.value);t.crypto.encryptAES(a.sessionKey,d,c).then(function(n){delete e.body.identity.assertion,delete e.body.identity.expires;var o=t._filterMessageToHash(e,d+l);t.crypto.hashHMAC(a.sessionKey,o).then(function(t){var o={value:(0,f.encode)(n),iv:(0,f.encode)(c),hash:(0,f.encode)(t)};e.body.value=(0,f.stringify)(o),r(e)})})}else r(e);else n("Data object key could not be defined: Failed to decrypt message ")}).catch(function(e){n("On encryptMessage from method dataObjectsStorage.getDataObject error: "+e)})}).catch(function(e){n("On encryptMessage from method storageManager.get error: "+e)})})}},{key:"encryptDataObject",value:function(e,t){var r=this;return new o.default(function(n,o){y.info("dataObject value to encrypt: ",e);var i=(0,f.parseMessageURL)(t);r.storageManager.get("dataObjectSessionKeys").then(function(t){t=(0,f.chatkeysToArrayCloner)(t||{});var a=t?t[i]:null;if(!a)return o("No dataObjectKey for this dataObjectURL:",i);if(!a.isToEncrypt)return y.info("The dataObject is not encrypted"),n(e);var s=r.crypto.generateIV();r.crypto.encryptAES(a.sessionKey,(0,f.stringify)(e),s).then(function(e){var t={value:(0,f.encode)(e),iv:(0,f.encode)(s)};return n(t)}).catch(function(e){o("On encryptDataObject from method encryptAES error: "+e)})}).catch(function(e){o("On encryptDataObject from method storageManager.get error: "+e)})})}},{key:"decryptMessage",value:function(e){var t=this;return new o.default(function(r,n){var o="handshake"===e.type;t._isToDecrypt(e).then(function(i){if(!i)return r(e);var a=(0,f.parseMessageURL)(e.to),s=(0,f.isDataObjectURL)(a),u="hyperty"===(0,f.divideURL)(e.from).type,c="hyperty"===(0,f.divideURL)(e.to).type;if("update"===e.type)return r(e);if(u&&c){var l=t._registry.getHypertyOwner(e.to);if(l){var d=t.chatKeys[e.to+"<->"+e.from];if(d||(d=t._newChatCrypto(e,l,"decrypt"),t.chatKeys[e.to+"<->"+e.from]=d),d.authenticated&&!o){var p=(0,f.decode)(e.body.value),h=(0,f.decodeToUint8Array)(p.iv),v=(0,f.decodeToUint8Array)(p.value),g=(0,f.decodeToUint8Array)(p.hash);t.crypto.decryptAES(d.keys.hypertyToSessionKey,v,h).then(function(n){e.body.value=n;var o=t._filterMessageToHash(e,n+h);t.crypto.verifyHMAC(d.keys.hypertyToHashKey,o,g).then(function(t){e.body.assertedIdentity=!0,r(e)})})}else o?t._doHandShakePhase(e,d).then(function(r){"handShakeEnd"===r||(t.chatKeys[e.to+"<->"+e.from]=r.chatKeys,t._messageBus.postMessage(r.message))}):n("wrong message do decrypt")}else n("error on decrypt message")}else u&&s?t.storageManager.get("dataObjectSessionKeys").then(function(o){o=(0,f.chatkeysToArrayCloner)(o||{});var i=o?o[a]:null;if(i)if(i.isToEncrypt){var s=(0,f.parse)(e.body.value),u=(0,f.decodeToUint8Array)(s.iv),c=(0,f.decodeToUint8Array)(s.value),l=(0,f.decodeToUint8Array)(s.hash);t.crypto.decryptAES(i.sessionKey,c,u).then(function(o){var a=(0,f.parse)(o);e.body.value=a;var s=t._filterMessageToHash(e,(0,f.stringify)(a)+(0,f.stringify)(u));t.crypto.verifyHMAC(i.sessionKey,s,l).then(function(t){y.log("Received message HMAC result",t),e.body.assertedIdentity=!0,r(e)}).catch(function(e){n("Message HMAC is invalid: "+e)})})}else e.body.assertedIdentity=!0,r(e);else e.body.assertedIdentity=!0,r(e)}):n("wrong message to decrypt")})})}},{key:"decryptDataObject",value:function(e,t){var r=this;return new o.default(function(n,o){if(!r.isToUseEncryption)return n(e);var i=(0,f.parseMessageURL)(t);r.storageManager.get("dataObjectSessionKeys").then(function(t){t=(0,f.chatkeysToArrayCloner)(t);var a=t?t[i]:null;if(!a)return o("No dataObjectKey for this dataObjectURL:",i);if(!a.isToEncrypt)return n(e);var s=(0,f.decodeToUint8Array)(e.iv),u=(0,f.decodeToUint8Array)(e.value);r.crypto.decryptAES(a.sessionKey,u,s).then(function(e){var t=(0,f.parse)(e),r={value:t,iv:(0,f.encode)(s)};return n(r)}).catch(function(e){o("On decryptDataObject from method encryptAES error: "+e)})})})}},{key:"_doMutualAuthenticationPhase1",value:function(e){var t=this;return new o.default(function(r,n){var o=e.to.split("/");o.pop();var i=o[0]+"//"+o[2]+"/"+o[3];t._doMutualAuthenticationPhase2(i,e.body.subscriber).then(function(){t._registry.registerSubscriber(i,e.body.subscriber),r()},function(e){n(e)})})}},{key:"_doMutualAuthenticationPhase2",value:function(e,t){y.info("doMutualAuthentication:sender ",e),y.info("doMutualAuthentication:receiver ",t);var r=this;return new o.default(function(n,o){var i=void 0,a=r._registry.getReporterURLSynchonous(e);a&&(i=e,e=a);var s={to:t,from:e,callback:void 0,body:{handshakePhase:"startHandShake",ignore:"ignoreMessage"}};if(!e||!t)return o("sender or receiver missing on doMutualAuthentication");var u=r.chatKeys[e+"<->"+t],c=r._registry.getHypertyOwner(e);if(c){if(!u){var l=function(e){n(e)};s.callback=l,s.dataObjectURL=i,u=r._newChatCrypto(s,c),r.chatKeys[e+"<->"+t]=u}if(u.authenticated){var f={to:e,from:t};u.dataObjectURL=i,r._sendReporterSessionKey(f,u).then(function(e){r._messageBus.postMessage(e.message),n("exchange of chat sessionKey initiated")}).catch(function(e){o("On doMutualAuthentication from method _sendReporterSessionKey error: "+e)})}else r._doHandShakePhase(s,u)}else o("Mutual authentication error: Hyperty owner could not be resolved")})}},{key:"_sendReporterSessionKey",value:function(e,t){var r=this;return new o.default(function(n,o){var i=r.dataObjectSessionKeys[t.dataObjectURL],a=void 0,s=void 0,u=void 0,c=void 0,l={};if(i)u=i.sessionKey;else{u=r.crypto.generateRandom(),r.dataObjectSessionKeys[t.dataObjectURL]={sessionKey:u,isToEncrypt:!0};var d=(0,f.chatkeysToStringCloner)(r.dataObjectSessionKeys);r.storageManager.set("dataObjectSessionKeys",0,d).catch(function(e){o("On _sendReporterSessionKey from method storageManager.set(dataObjectSessionKeys...) error: "+e)})}try{s=(0,f.encode)({value:(0,f.encode)(u),dataObjectURL:t.dataObjectURL})}catch(e){return o("On _sendReporterSessionKey from method storageManager.set error valueToEncrypt: "+e)}c=r.crypto.generateIV(),l.iv=(0,f.encode)(c),r.crypto.encryptAES(t.keys.hypertyFromSessionKey,s,c).then(function(n){a={type:"handshake",to:e.from,from:e.to,body:{handshakePhase:"reporterSessionKey",value:(0,f.encode)(n)}};var o=r._filterMessageToHash(a,s+c,t.hypertyFrom.messageInfo);return r.crypto.hashHMAC(t.keys.hypertyFromHashKey,o)}).then(function(e){var r=(0,f.encode)({value:a.body.value,hash:(0,f.encode)(e),iv:l.iv});a.body.value=r,n({message:a,chatKeys:t})}).catch(function(e){o("On _sendReporterSessionKey from chained promises encryptAES error: "+e)})})}},{key:"_resolveDomain",value:function(e){return e?"domain-idp://"+e:"domain-idp://google.com"}},{key:"_doHandShakePhase",value:function(e,t){var r=this;return new o.default(function(n,o){var i=e.body.handshakePhase,a=void 0,s=void 0,u={},c=void 0,l=void 0;switch(y.info("handshake phase: ",i),i){case"startHandShake":t.keys.fromRandom=r.crypto.generateRandom();var d={type:"handshake",to:e.to,from:e.from,body:{handshakePhase:"senderHello",value:(0,f.encode)(t.keys.fromRandom)}};t.handshakeHistory.senderHello=r._filterMessageToHash(d,void 0,t.hypertyFrom.messageInfo),t.initialMessage?n({message:d,chatKeys:t}):(r.chatKeys[e.from+"<->"+e.to]=t,r._messageBus.postMessage(d));break;case"senderHello":y.log("senderHello"),t.handshakeHistory.senderHello=r._filterMessageToHash(e),t.keys.fromRandom=(0,f.decodeToUint8Array)(e.body.value),t.keys.toRandom=r.crypto.generateRandom();var p={type:"handshake",to:e.from,from:e.to,body:{handshakePhase:"receiverHello",value:(0,f.encode)(t.keys.toRandom)}};t.handshakeHistory.receiverHello=r._filterMessageToHash(p,void 0,t.hypertyFrom.messageInfo),n({message:p,chatKeys:t});break;case"receiverHello":y.log("receiverHello"),r.getMyPrivateKey().then(function(n){return l=n,t.handshakeHistory.receiverHello=r._filterMessageToHash(e),r._idm.validateAssertion(e.body.identity.assertion,void 0,e.body.identity.idp.domain)}).then(function(n){var o="string"==typeof n.contents?n.contents:n.contents.nonce,i=(0,f.parseToUint8Array)(o),a=r.crypto.generatePMS(),s=e.body.value;t.hypertyTo.assertion=e.body.identity.assertion,t.hypertyTo.publicKey=i,t.hypertyTo.userID=e.body.identity.userProfile.userURL,t.keys.toRandom=(0,f.decodeToUint8Array)(s),t.keys.premasterKey=a;var u=r.crypto.concatPMSwithRandoms(a,t.keys.toRandom,t.keys.fromRandom);return r.crypto.generateMasterSecret(u,"messageHistoric"+t.keys.toRandom+t.keys.fromRandom)}).then(function(e){return t.keys.masterKey=e,r.crypto.generateKeys(e,"key expansion"+t.keys.toRandom+t.keys.fromRandom)}).then(function(n){t.keys.hypertyToSessionKey=new Uint8Array(n[0]),t.keys.hypertyFromSessionKey=new Uint8Array(n[1]),t.keys.hypertyToHashKey=new Uint8Array(n[2]),t.keys.hypertyFromHashKey=new Uint8Array(n[3]),a=r.crypto.generateIV(),u.iv=(0,f.encode)(a);var o={type:"handshake",to:e.from,from:e.to,body:{handshakePhase:"senderCertificate"}};return c=r._filterMessageToHash(o,"ok"+a,t.hypertyFrom.messageInfo),r.crypto.hashHMAC(t.keys.hypertyFromHashKey,c)}).then(function(e){return u.hash=(0,f.encode)(e),r.crypto.encryptAES(t.keys.hypertyFromSessionKey,"ok",a)}).then(function(e){return u.symetricEncryption=(0,f.encode)(e),r.crypto.encryptRSA(t.hypertyTo.publicKey,t.keys.premasterKey)}).then(function(n){u.assymetricEncryption=(0,f.encode)(n);var o={type:"handshake",to:e.from,from:e.to,body:{handshakePhase:"senderCertificate"}},i=r._filterMessageToHash(o,t.keys.premasterKey,t.hypertyFrom.messageInfo);return r.crypto.signRSA(l,(0,f.encode)(t.handshakeHistory)+(0,f.encode)(i))}).then(function(o){u.signature=(0,f.encode)(o);var i={type:"handshake",to:e.from,from:e.to,body:{handshakePhase:"senderCertificate",value:(0,f.encode)(u)}};t.handshakeHistory.senderCertificate=r._filterMessageToHash(i,"ok"+a,t.hypertyFrom.messageInfo),n({message:i,chatKeys:t})},function(e){return o(e)});break;case"senderCertificate":y.log("senderCertificate");var h=(0,f.decode)(e.body.value);r.getMyPrivateKey().then(function(t){return l=t,r._idm.validateAssertion(e.body.identity.assertion,void 0,e.body.identity.idp.domain)}).then(function(n){var o=(0,f.decodeToUint8Array)(h.assymetricEncryption),i="string"==typeof n.contents?n.contents:n.contents.nonce,a=(0,f.parseToUint8Array)(i);return t.hypertyTo.assertion=e.body.identity.assertion,t.hypertyTo.publicKey=a,t.hypertyTo.userID=e.body.identity.userProfile.userURL,r.crypto.decryptRSA(l,o)},function(e){o("Error during authentication of identity: ",e.message)}).then(function(n){t.keys.premasterKey=new Uint8Array(n);var o=(0,f.decodeToUint8Array)(h.signature),i=r._filterMessageToHash(e,t.keys.premasterKey);return r.crypto.verifyRSA(t.hypertyTo.publicKey,(0,f.encode)(t.handshakeHistory)+(0,f.encode)(i),o)}).then(function(e){var n=r.crypto.concatPMSwithRandoms(t.keys.premasterKey,t.keys.toRandom,t.keys.fromRandom);return r.crypto.generateMasterSecret(n,"messageHistoric"+t.keys.toRandom+t.keys.fromRandom)}).then(function(e){return t.keys.masterKey=e,r.crypto.generateKeys(e,"key expansion"+t.keys.toRandom+t.keys.fromRandom)}).then(function(e){t.keys.hypertyFromSessionKey=new Uint8Array(e[0]),t.keys.hypertyToSessionKey=new Uint8Array(e[1]),t.keys.hypertyFromHashKey=new Uint8Array(e[2]),t.keys.hypertyToHashKey=new Uint8Array(e[3]),a=(0,f.decodeToUint8Array)(h.iv);var n=(0,f.decodeToUint8Array)(h.symetricEncryption);return r.crypto.decryptAES(t.keys.hypertyToSessionKey,n,a)}).then(function(n){t.handshakeHistory.senderCertificate=r._filterMessageToHash(e,n+a);var o=(0,f.decodeToUint8Array)(h.hash);return c=r._filterMessageToHash(e,n+a),r.crypto.verifyHMAC(t.keys.hypertyToHashKey,c,o)}).then(function(n){var o={type:"handshake",to:e.from,from:e.to,body:{handshakePhase:"receiverFinishedMessage"}};return a=r.crypto.generateIV(),u.iv=(0,f.encode)(a),c=r._filterMessageToHash(o,"ok!"+a,t.hypertyFrom.messageInfo),r.crypto.hashHMAC(t.keys.hypertyFromHashKey,c)}).then(function(e){return u.hash=(0,f.encode)(e),r.crypto.encryptAES(t.keys.hypertyFromSessionKey,"ok!",a)}).then(function(o){u.value=(0,f.encode)(o);var i={type:"handshake",to:e.from,from:e.to,body:{handshakePhase:"receiverFinishedMessage",value:(0,f.encode)(u)}};t.handshakeHistory.receiverFinishedMessage=r._filterMessageToHash(i,"ok!"+a,t.hypertyFrom.messageInfo),t.authenticated=!0,n({message:i,chatKeys:t})}).catch(function(e){o("On _doHandShakePhase from senderCertificate error: "+e)});break;case"receiverFinishedMessage":t.authenticated=!0,u=(0,f.decode)(e.body.value),a=(0,f.decodeToUint8Array)(u.iv);var v=(0,f.decodeToUint8Array)(u.value);s=(0,f.decodeToUint8Array)(u.hash),r.crypto.decryptAES(t.keys.hypertyToSessionKey,v,a).then(function(i){t.handshakeHistory.receiverFinishedMessage=r._filterMessageToHash(e,i+a);var u=r._filterMessageToHash(e,i+a);r.crypto.verifyHMAC(t.keys.hypertyToHashKey,u,s).then(function(i){if(t.initialMessage){var a={type:"create",to:e.from,from:e.to,body:{value:t.initialMessage.body.value}};n({message:a,chatKeys:t})}else r._sendReporterSessionKey(e,t).then(function(e){n(e)}).catch(function(e){o("On _doHandShakePhase from receiverFinishedMessage error: "+e)})})});break;case"reporterSessionKey":y.log("reporterSessionKey");var g=(0,f.decode)(e.body.value);s=(0,f.decodeToUint8Array)(g.hash),a=(0,f.decodeToUint8Array)(g.iv);var b=(0,f.decodeToUint8Array)(g.value),_=void 0,m=void 0,R=void 0,O=void 0;r.crypto.decryptAES(t.keys.hypertyToSessionKey,b,a).then(function(n){_=(0,f.decode)(n),m=(0,f.decodeToUint8Array)(_.value),R=_.dataObjectURL;var o=r._filterMessageToHash(e,n+a);return r.crypto.verifyHMAC(t.keys.hypertyToHashKey,o,s)}).then(function(e){r.dataObjectSessionKeys[R]={sessionKey:m,isToEncrypt:!0};var n=(0,f.chatkeysToStringCloner)(r.dataObjectSessionKeys);return r.storageManager.set("dataObjectSessionKeys",0,n).catch(function(e){o("On _sendReporterSessionKey from method reporterSessionKey error: "+e)}),a=r.crypto.generateIV(),u.iv=(0,f.encode)(a),r.crypto.encryptAES(t.keys.hypertyFromSessionKey,"ok!!",a)}).then(function(n){O={type:"handshake",to:e.from,from:e.to,body:{handshakePhase:"receiverAcknowledge"}},u.value=(0,f.encode)(n);var o=r._filterMessageToHash(O,"ok!!"+a,t.hypertyFrom.messageInfo);return r.crypto.hashHMAC(t.keys.hypertyFromHashKey,o)}).then(function(e){var r=(0,f.encode)({value:u.value,hash:(0,f.encode)(e),iv:u.iv});O.body.value=r,n({message:O,chatKeys:t})}).catch(function(e){o("On _doHandShakePhase from reporterSessionKey error: "+e)});break;case"receiverAcknowledge":y.log("receiverAcknowledge");var w=(0,f.decode)(e.body.value),k=(0,f.decodeToUint8Array)(w.hash);a=(0,f.decodeToUint8Array)(w.iv);var S=(0,f.decodeToUint8Array)(w.value);r.crypto.decryptAES(t.keys.hypertyToSessionKey,S,a).then(function(n){var o=r._filterMessageToHash(e,n+a);return r.crypto.verifyHMAC(t.keys.hypertyToHashKey,o,k)}).then(function(e){var r=t.callback;r&&r("handShakeEnd"),n("handShakeEnd")}).catch(function(e){o("On _doHandShakePhase from receiverAcknowledge error: "+e)});break;default:o(e)}})}},{key:"_filterMessageToHash",value:function(e,t,r){return{type:e.type,from:e.from,to:e.to,body:{identity:r||e.body.identity,value:t||e.body.value,handshakePhase:e.body.handshakePhase}}}},{key:"_newChatCrypto",value:function(e,t,r){var n=this,o=r?e.to:e.from,i=r?e.from:e.to,a=n._idm.getIdentity(t);return{hypertyFrom:{hyperty:o,userID:a.userProfile.userURL,assertion:a.assertion,messageInfo:a},hypertyTo:{hyperty:i,userID:void 0,publicKey:void 0,assertion:void 0},keys:{hypertyToSessionKey:void 0,hypertyFromSessionKey:void 0,hypertyToHashKey:void 0,hypertyFromHashKey:void 0,toRandom:void 0,fromRandom:void 0,premasterKey:void 0,masterKey:void 0},handshakeHistory:{senderHello:void 0,receiverHello:void 0,senderCertificate:void 0,receiverFinishedMessage:void 0},initialMessage:e.body.ignore?void 0:e,callback:e.callback,authenticated:!1,dataObjectURL:e.dataObjectURL}}},{key:"getMyPublicKey",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.userDefaultKeyRef,t=this;return new o.default(function(r,n){t.storageManager.get(e).then(function(o){if(o)return r(o.public);t._generateAndStoreNewAsymetricKey(e).then(function(e){r(e.public)}).catch(function(e){y.error("[getMyPublicKey:_generateAndStoreNewAsymetricKey:err]: "+e.message),n(e)})}).catch(function(e){y.error("[getMyPublicKey:storageManager:err]: "+e.message),n(e)})})}},{key:"getMyPrivateKey",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.userDefaultKeyRef,t=this;return new o.default(function(r,n){t.storageManager.get(e).then(function(o){if(o)return r(o.private);t._generateAndStoreNewAsymetricKey(e).then(function(e){r(e.private)}).catch(function(e){y.error("[getMyPrivateKey:_generateAndStoreNewAsymetricKey:err]: "+e.message),n(e)})}).catch(function(e){y.error("[getMyPrivateKey:storageManager:err]: "+e.message),n(e)})})}},{key:"_generateAndStoreNewAsymetricKey",value:function(e){var t=this,r=void 0;return new o.default(function(n,o){t.crypto.generateRSAKeyPair().then(function(n){return y.log("_generateAndStoreNewAsymetricKey:userAsymmetricKeyGenerated",n),r=n,t.storageManager.set(e,0,n)}).then(function(e){y.log("_generateAndStoreNewAsymetricKey:userAsymmetricKeySuccess",e),n(r)}).catch(function(e){y.error("[_generateAndStoreNewAsymetricKey:err]: "+e.message),o(e)})})}},{key:"messageBus",get:function(){return this._messageBus},set:function(e){var t=this;t._messageBus=e,t.addCryptoGUIListeners()}},{key:"coreDiscovery",get:function(){return this._coreDiscovery},set:function(e){this._coreDiscovery=e}},{key:"registry",get:function(){return this._registry},set:function(e){this._registry=e}}]),CryptoManager}();t.default=new h,e.exports=t.default},function(e,t,r){var n=r(9),o=r(7).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,r){var n=r(7),o=r(31),i=r(48),a=r(156),s=r(13).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||s(t,e,{value:a.f(e)})}},function(e,t,r){var n=r(83)("keys"),o=r(53);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(7).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(9),o=r(5),i=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{n=r(32)(Function.call,r(29).f(Object.prototype,"__proto__").set,2),n(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:i}},function(e,t){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,t,r){var n=r(9),o=r(111).set;e.exports=function(e,t,r){var i,a=t.constructor;return a!==r&&"function"==typeof a&&(i=a.prototype)!==r.prototype&&n(i)&&o&&o(e,i),e}},function(e,t,r){"use strict";var n=r(38),o=r(37);e.exports=function(e){var t=String(o(this)),r="",i=n(e);if(i<0||i==1/0)throw RangeError("Count can't be negative");for(;i>0;(i>>>=1)&&(t+=t))1&i&&(r+=t);return r}},function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,t){var r=Math.expm1;e.exports=!r||r(10)>22025.465794806718||r(10)<22025.465794806718||-2e-17!=r(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:r},function(e,t,r){var n=r(38),o=r(37);e.exports=function(e){return function(t,r){var i,a,s=String(o(t)),u=n(r),c=s.length;return u<0||u>=c?e?"":void 0:(i=s.charCodeAt(u),i<55296||i>56319||u+1===c||(a=s.charCodeAt(u+1))<56320||a>57343?e?s.charAt(u):i:e?s.slice(u,u+2):a-56320+(i-55296<<10)+65536)}}},function(e,t,r){"use strict";var n=r(48),o=r(0),i=r(24),a=r(23),s=r(66),u=r(119),c=r(64),l=r(30),f=r(10)("iterator"),d=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,r,y,h,v,g){u(r,t,y);var b,_,m,R=function(e){if(!d&&e in S)return S[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},O=t+" Iterator",w="values"==h,k=!1,S=e.prototype,P=S[f]||S["@@iterator"]||h&&S[h],D=P||R(h),M=h?w?R("entries"):D:void 0,L="Array"==t?S.entries||P:P;if(L&&(m=l(L.call(new e)))!==Object.prototype&&m.next&&(c(m,O,!0),n||"function"==typeof m[f]||a(m,f,p)),w&&P&&"values"!==P.name&&(k=!0,D=function(){return P.call(this)}),n&&!g||!d&&!k&&S[f]||a(S,f,D),s[t]=D,s[O]=p,h)if(b={values:w?D:R("values"),keys:v?D:R("keys"),entries:M},g)for(_ in b)_ in S||i(S,_,b[_]);else o(o.P+o.F*(d||k),t,b);return b}},function(e,t,r){"use strict";var n=r(56),o=r(52),i=r(64),a={};r(23)(a,r(10)("iterator"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(a,{next:o(1,r)}),i(e,t+" Iterator")}},function(e,t,r){var n=r(87),o=r(37);e.exports=function(e,t,r){if(n(t))throw TypeError("String#"+r+" doesn't accept regex!");return String(o(e))}},function(e,t,r){var n=r(10)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(r){try{return t[n]=!1,!"/./"[e](t)}catch(e){}}return!0}},function(e,t,r){var n=r(66),o=r(10)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t,r){"use strict";var n=r(13),o=r(52);e.exports=function(e,t,r){t in e?n.f(e,t,o(0,r)):e[t]=r}},function(e,t,r){var n=r(75),o=r(10)("iterator"),i=r(66);e.exports=r(31).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[n(e)]}},function(e,t,r){var n=r(315);e.exports=function(e,t){return new(n(e))(t)}},function(e,t,r){"use strict";var n=r(19),o=r(55),i=r(14);e.exports=function(e){for(var t=n(this),r=i(t.length),a=arguments.length,s=o(a>1?arguments[1]:void 0,r),u=a>2?arguments[2]:void 0,c=void 0===u?r:o(u,r);c>s;)t[s++]=e;return t}},function(e,t,r){"use strict";var n=r(49),o=r(172),i=r(66),a=r(28);e.exports=r(118)(Array,"Array",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):"keys"==t?o(0,r):"values"==t?o(0,e[r]):o(0,[r,e[r]])},"values"),i.Arguments=i.Array,n("keys"),n("values"),n("entries")},function(e,t,r){var n,o,i,a=r(32),s=r(162),u=r(110),c=r(106),l=r(7),f=l.process,d=l.setImmediate,p=l.clearImmediate,y=l.MessageChannel,h=l.Dispatch,v=0,g={},b=function(){var e=+this;if(g.hasOwnProperty(e)){var t=g[e];delete g[e],t()}},_=function(e){b.call(e.data)};d&&p||(d=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return g[++v]=function(){s("function"==typeof e?e:Function(e),t)},n(v),v},p=function(e){delete g[e]},"process"==r(33)(f)?n=function(e){f.nextTick(a(b,e,1))}:h&&h.now?n=function(e){h.now(a(b,e,1))}:y?(o=new y,i=o.port2,o.port1.onmessage=_,n=a(i.postMessage,i,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+"","*")},l.addEventListener("message",_,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),b.call(e)}}:function(e){setTimeout(a(b,e,1),0)}),e.exports={set:d,clear:p}},function(e,t,r){var n=r(7),o=r(128).set,i=n.MutationObserver||n.WebKitMutationObserver,a=n.process,s=n.Promise,u="process"==r(33)(a);e.exports=function(){var e,t,r,c=function(){var n,o;for(u&&(n=a.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){a.nextTick(c)};else if(!i||n.navigator&&n.navigator.standalone)if(s&&s.resolve){var l=s.resolve(void 0);r=function(){l.then(c)}}else r=function(){o.call(n,c)};else{var f=!0,d=document.createTextNode("");new i(c).observe(d,{characterData:!0}),r=function(){d.data=f=!f}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){"use strict";function PromiseCapability(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}var n=r(20);e.exports.f=function(e){return new PromiseCapability(e)}},function(e,t,r){"use strict";function packIEEE754(e,t,r){var n,o,i,a=new Array(r),s=8*r-t-1,u=(1<<s)-1,c=u>>1,l=23===t?D(2,-24)-D(2,-77):0,f=0,d=e<0||0===e&&1/e<0?1:0;for(e=P(e),e!=e||e===k?(o=e!=e?1:0,n=u):(n=M(L(e)/j),e*(i=D(2,-n))<1&&(n--,i*=2),e+=n+c>=1?l/i:l*D(2,1-c),e*i>=2&&(n++,i/=2),n+c>=u?(o=0,n=u):n+c>=1?(o=(e*i-1)*D(2,t),n+=c):(o=e*D(2,c-1)*D(2,t),n=0));t>=8;a[f++]=255&o,o/=256,t-=8);for(n=n<<t|o,s+=t;s>0;a[f++]=255&n,n/=256,s-=8);return a[--f]|=128*d,a}function unpackIEEE754(e,t,r){var n,o=8*r-t-1,i=(1<<o)-1,a=i>>1,s=o-7,u=r-1,c=e[u--],l=127&c;for(c>>=7;s>0;l=256*l+e[u],u--,s-=8);for(n=l&(1<<-s)-1,l>>=-s,s+=t;s>0;n=256*n+e[u],u--,s-=8);if(0===l)l=1-a;else{if(l===i)return n?NaN:c?-k:k;n+=D(2,t),l-=a}return(c?-1:1)*n*D(2,l-t)}function unpackI32(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function packI8(e){return[255&e]}function packI16(e){return[255&e,e>>8&255]}function packI32(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function packF64(e){return packIEEE754(e,52,8)}function packF32(e){return packIEEE754(e,23,4)}function addGetter(e,t,r){h(e[b],t,{get:function(){return this[r]}})}function get(e,t,r,n){var o=+r,i=p(o);if(i+t>e[E])throw w(_);var a=e[U]._b,s=i+e[x],u=a.slice(s,s+t);return n?u:u.reverse()}function set(e,t,r,n,o,i){var a=+r,s=p(a);if(s+t>e[E])throw w(_);for(var u=e[U]._b,c=s+e[x],l=n(+o),f=0;f<t;f++)u[c+f]=l[i?f:t-f-1]}var n=r(7),o=r(12),i=r(48),a=r(94),s=r(23),u=r(61),c=r(8),l=r(59),f=r(38),d=r(14),p=r(181),y=r(57).f,h=r(13).f,v=r(126),g=r(64),b="prototype",_="Wrong index!",m=n.ArrayBuffer,R=n.DataView,O=n.Math,w=n.RangeError,k=n.Infinity,S=m,P=O.abs,D=O.pow,M=O.floor,L=O.log,j=O.LN2,U=o?"_b":"buffer",E=o?"_l":"byteLength",x=o?"_o":"byteOffset";if(a.ABV){if(!c(function(){m(1)})||!c(function(){new m(-1)})||c(function(){return new m,new m(1.5),new m(NaN),"ArrayBuffer"!=m.name})){m=function(e){return l(this,m),new S(p(e))};for(var A,I=m[b]=S[b],C=y(S),T=0;C.length>T;)(A=C[T++])in m||s(m,A,S[A]);i||(I.constructor=m)}var q=new R(new m(2)),H=R[b].setInt8;q.setInt8(0,2147483648),q.setInt8(1,2147483649),!q.getInt8(0)&&q.getInt8(1)||u(R[b],{setInt8:function(e,t){H.call(this,e,t<<24>>24)},setUint8:function(e,t){H.call(this,e,t<<24>>24)}},!0)}else m=function(e){l(this,m,"ArrayBuffer");var t=p(e);this._b=v.call(new Array(t),0),this[E]=t},R=function(e,t,r){l(this,R,"DataView"),l(e,m,"DataView");var n=e[E],o=f(t);if(o<0||o>n)throw w("Wrong offset!");if(r=void 0===r?n-o:d(r),o+r>n)throw w("Wrong length!");this[U]=e,this[x]=o,this[E]=r},o&&(addGetter(m,"byteLength","_l"),addGetter(R,"buffer","_b"),addGetter(R,"byteLength","_l"),addGetter(R,"byteOffset","_o")),u(R[b],{getInt8:function(e){return get(this,1,e)[0]<<24>>24},getUint8:function(e){return get(this,1,e)[0]},getInt16:function(e){var t=get(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=get(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return unpackI32(get(this,4,e,arguments[1]))},getUint32:function(e){return unpackI32(get(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return unpackIEEE754(get(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return unpackIEEE754(get(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){set(this,1,e,packI8,t)},setUint8:function(e,t){set(this,1,e,packI8,t)},setInt16:function(e,t){set(this,2,e,packI16,t,arguments[2])},setUint16:function(e,t){set(this,2,e,packI16,t,arguments[2])},setInt32:function(e,t){set(this,4,e,packI32,t,arguments[2])},setUint32:function(e,t){set(this,4,e,packI32,t,arguments[2])},setFloat32:function(e,t){set(this,4,e,packF32,t,arguments[2])},setFloat64:function(e,t){set(this,8,e,packF64,t,arguments[2])}});g(m,"ArrayBuffer"),g(R,"DataView"),s(R[b],a.VIEW,!0),t.ArrayBuffer=m,t.DataView=R},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,r){var n=r(134),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(136)("keys"),o=r(98);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t,r){var n=r(11),o=r(21),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(78)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(26),o=r(11),i=r(70);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],a={};a[e]=t(r),n(n.S+n.F*i(function(){r(1)}),"Object",a)}},function(e,t,r){var n=r(45),o=r(21).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,r){var n=r(45);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,r){var n=r(41),o=r(433),i=r(137),a=r(135)("IE_PROTO"),s=function(){},u=function(){var e,t=r(139)("iframe"),n=i.length;for(t.style.display="none",r(195).appendChild(t),t.src="javascript:",e=t.contentWindow.document,e.open(),e.write("<script>document.F=Object<\/script>"),e.close(),u=e.F;n--;)delete u.prototype[i[n]];return u()};e.exports=Object.create||function(e,t){var r;return null!==e?(s.prototype=n(e),r=new s,s.prototype=null,r[a]=e):r=u(),void 0===t?r:o(r,t)}},function(e,t,r){var n=r(77),o=r(22)("toStringTag"),i="Arguments"==n(function(){return arguments}()),a=function(e,t){try{return e[t]}catch(e){}};e.exports=function(e){var t,r,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=a(t=Object(e),o))?r:i?n(t):"Object"==(s=n(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,r){var n=r(142),o=r(22)("iterator"),i=r(71);e.exports=r(11).getIteratorMethod=function(e){if(void 0!=e)return e[o]||e["@@iterator"]||i[n(e)]}},function(e,t,r){"use strict";function PromiseCapability(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=n(t),this.reject=n(r)}var n=r(99);e.exports.f=function(e){return new PromiseCapability(e)}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){t.f=r(22)},function(e,t,r){var n=r(21),o=r(11),i=r(78),a=r(146),s=r(44).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||s(t,e,{value:a.f(e)})}},function(e,t,r){var n=r(81),o=r(79),i=r(50),a=r(140),s=r(62),u=r(191),c=Object.getOwnPropertyDescriptor;t.f=r(51)?c:function(e,t){if(e=i(e),t=a(t,!0),u)try{return c(e,t)}catch(e){}if(s(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t){!function(){"use strict";function Observer(e,t,r,n,o,i){function deliver(e,n){if(deliver.delay=n,!deliver.pause&&s.changeset.length>0){if(!e){var o=s.changeset.filter(function(e){return!r||r.indexOf(e.type)>=0});o.length>0&&t(o)}s.changeset=[]}}var a,s=this;return deliver.pause=o,deliver.delay=i,s.get=function(e,t){return"__observer__"===t?s:"unobserve"===t?function(){return Object.unobserve(e),e}:"deliver"===t?deliver:e[t]},s.target=e,s.changeset=[],s.target.__observerCallbacks__||(Object.defineProperty(e,"__observerCallbacks__",{enumerable:!1,configurable:!0,writable:!1,value:[]}),Object.defineProperty(e,"__observers__",{enumerable:!1,configurable:!0,writable:!1,value:[]})),s.target.__observerCallbacks__.push(t),s.target.__observers__.push(this),a=new Proxy(e,s),deliver(!1,i),a}Object.observe||"function"!=typeof Proxy||(Observer.prototype.deliver=function(){return this.get(null,"deliver")},Observer.prototype.set=function(e,t,r){var n=e[t],o=void 0===n?"add":"update";if(e[t]=r,e.__observers__.indexOf(this)>=0&&(!this.acceptlist||this.acceptlist.indexOf(o)>=0)){var i={object:e,name:t,type:o},a=0===this.changeset.length,s=this.deliver();"update"===o&&(i.oldValue=n),this.changeset.push(i),a&&s(!1,"number"==typeof s.delay?s.delay:10)}return!0},Observer.prototype.deleteProperty=function(e,t){var r=e[t];if(delete e[t],e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("delete")>=0){var n={object:e,name:t,type:"delete",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},Observer.prototype.defineProperty=function(e,t,r){if(Object.defineProperty(e,t,r),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("reconfigure")>=0){var n={object:e,name:t,type:"reconfigure"},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},Observer.prototype.setPrototypeOf=function(e,t){var r=Object.getPrototypeOf(e);if(Object.setPrototypeOf(e,t),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("setPrototype")>=0){var n={object:e,name:"__proto__",type:"setPrototype",oldValue:r},o=0===this.changeset.length,i=this.deliver();this.changeset.push(n),o&&i(!1,"number"==typeof i.delay?i.delay:10)}return!0},Observer.prototype.preventExtensions=function(e){if(Object.preventExtensions(e),e.__observers__.indexOf(this)>=0&&!this.acceptlist||this.acceptlist.indexOf("preventExtensions")>=0){var t={object:e,type:"preventExtensions"},r=0===this.changeset.length,n=this.deliver();this.changeset.push(t),r&&n(!1,"number"==typeof n.delay?n.delay:10)}return!0},Object.observe=function(e,t,r,n,o,i){return new Observer(e,t,r,n,o,i)},Object.unobserve=function(e,t){if(e.__observerCallbacks__){if(!t)return e.__observerCallbacks__.splice(0,e.__observerCallbacks__.length),void e.__observers__.splice(0,e.__observers__.length);e.__observerCallbacks__.forEach(function(r,n){t===r&&(e.__observerCallbacks__.splice(n,1),delete e.__observers__[n].callback,e.__observers__.splice(n,1))})}},Array.observe=function(e,t,r,n,o,i){if(!(e instanceof Array||Array.isArray(e)))throw new TypeError("First argument to Array.observer is not an Array");r=r||["add","update","delete","splice"];var a=new Proxy(e,{get:function(t,n){return"unobserve"===n?function(e){return e?Object.unobserve(t,e):t.unobserve()}:"splice"===n?function(n,o){if("number"!=typeof n||"number"!=typeof o)throw new TypeError("First two arguments to Array splice are not number, number");var i=this.slice(n,n+o),a=arguments.length>1?arguments.length-2:0,u={object:e,type:"splice",index:n,removed:i,addedCount:a};if(t.splice.apply(t,arguments),r.indexOf("splice")>=0){var n=0===s.__observer__.changeset.length,c=s.__observer__.deliver();s.__observer__.changeset.push(u),n&&c(!1,"number"==typeof c.delay?c.delay:10)}}:"push"===n?function(e){return this.splice(this.length,0,e)}:"pop"===n?function(){return this.splice(this.length-1,1)}:"unshift"===n?function(e){return this.splice(0,0,e)}:"shift"===n?function(){return this.splice(0,1)}:t[n]}}),s=Object.observe(a,function(e){var n=e.filter(function(e){return"length"!==e.name&&"add"!==e.name&&(!r||r.indexOf(e.type)>=0)});n.length>0&&t(n)},r,n,o,i);return s},Array.unobserve=function(e,t){return e.unobserve(t)}),Object.deepObserve=function(e,t,r){function reobserve(e,r){Object.keys(e).forEach(function(o){if(("object"===n(e[o])||"array"===n(e[o]))&&!e[o].hasOwnProperty("__observers__")){var i=r.slice(0);i.push(o),e[o]=Object.deepObserve(e[o],t,i)}})}r=r||[];var n=function(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()};return reobserve(e,r),Object.observe(e,function(e){function recurse(e,t,r,o,i){if(o instanceof Object){Object.keys(o).forEach(function(a){if(!r||r[a]!==o[a]){var s=r&&void 0!==r[a]?r[a]:void 0,u=void 0===s?"add":"update",c=i+"."+a;n.push({name:e,object:t,type:u,oldValue:s,newValue:o[a],keypath:c}),recurse(e,t,s,o[a],c)}})}else if(r instanceof Object){var a=Object.keys(r);a.forEach(function(a){var s=null===o?"update":"delete",u=i+"."+a;n.push({name:e,object:t,type:s,oldValue:r[a],newValue:o,keypath:u}),recurse(e,t,r[a],void 0,u)})}}var n=[];e.forEach(function(e){var t=(r.length>0?r.join(".")+".":"")+e.name;"update"!==e.type&&"add"!==e.type||reobserve(e.object,r),n.push({name:e.name,object:e.object,type:e.type,oldValue:e.oldValue,newValue:e.object[e.name],keypath:t}),recurse(e.name,e.object,e.oldValue,e.object[e.name],t)}),t(n)})}}()},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(4),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(f),p=r(6),y=d.getLogger("RegistrationStatus"),h=function(){function RegistrationStatus(e,t,r,n){(0,u.default)(this,RegistrationStatus),this._registryObjectURL=e,this._runtimeURL=t,this._domain=(0,p.divideURL)(t).domain,this._discoveredObjectURL=r,this._messageBus=n,this._subscriptionSet=!1,this._subscribers={live:{},disconnected:{}}}return(0,l.default)(RegistrationStatus,[{key:"onLive",value:function(e,t){var r=this;return new a.default(function(n,o){r._subscriptionSet?(r._subscribers.live[e]=t,n()):r._subscribe().then(function(){r._subscribers.live[e]=t,n()}).catch(function(e){return o(e)})})}},{key:"onDisconnected",value:function(e,t){var r=this;return new a.default(function(n,o){r._subscriptionSet?(r._subscribers.disconnected[e]=t,n()):r._subscribe().then(function(){r._subscribers.disconnected[e]=t,n()}).catch(function(e){return o(e)})})}},{key:"_subscribe",value:function(){var e=this,t={type:"subscribe",from:this._discoveredObjectURL,to:this._runtimeURL+"/subscriptions",body:{resources:[this._registryObjectURL+"/registration"]}};return new a.default(function(r,n){e._messageBus.postMessage(t,function(t){y.log("[DiscoveredObject.subscribe] "+e._registryObjectURL+" rcved reply ",t),200===t.body.code?(e._generateListener(e._registryObjectURL+"/registration"),e._subscriptionSet=!0,r()):(y.error("Error subscribing ",e._registryObjectURL),n("Error subscribing "+e._registryObjectURL))})})}},{key:"_generateListener",value:function(e){var t=this;this._messageBus.addListener(e,function(e){y.log("[DiscoveredObject.notification] "+t._registryObjectURL+": ",e),t._processNotification(e)})}},{key:"_processNotification",value:function(e){var t=this,r=e.body.value;setTimeout(function(){(0,o.default)(t._subscribers[r]).forEach(function(e){return t._subscribers[r][e]()})},5e3)}},{key:"_unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:this._discoveredObjectURL,to:this._runtimeURL+"/subscriptions",body:{resource:this._registryObjectURL+"/registration"}};return new a.default(function(r,n){e._messageBus.postMessage(t,function(t){y.log("[DiscoveredObject.unsubscribe] "+e._registryObjectURL+" rcved reply ",t),200===t.body.code?r():(y.error("Error unsubscribing ",e._registryObjectURL),n("Error unsubscribing "+e._registryObjectURL))})})}},{key:"unsubscribeLive",value:function(e){var t=this;return new a.default(function(r,n){e in t._subscribers.live&&delete t._subscribers.live[e],t._areSubscriptionsEmpty()?t._unsubscribe().then(function(){return r()}).catch(function(e){return n(e)}):r()})}},{key:"unsubscribeDisconnected",value:function(e){var t=this;return new a.default(function(r,n){e in t._subscribers.disconnected?(delete t._subscribers.disconnected[e],t._areSubscriptionsEmpty()?t._unsubscribe().then(function(){return r()}).catch(function(e){return n(e)}):r()):n(e+" doesn't subscribe onDisconnected for "+t._registryObjectURL)})}},{key:"_areSubscriptionsEmpty",value:function(){return 0===(0,o.default)(this._subscribers.live).length&&0===(0,o.default)(this._subscribers.disconnected).length}}]),RegistrationStatus}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.runtimeConfiguration={storageSchemas:{capabilities:{capabilities:"key,version,value"},subscriptions:{subscriptions:"key,version,value"},runtime:{"runtime:URL":"key,version,value","p2pHandler:URL":"key,version,value"},registry:{"registry:DataObjectURLs":"key,version,value","registry:HypertyURLs":"key,version,value"},cryptoManager:{userAsymmetricKey:"key,version,value",dataObjectSessionKeys:"key,version,value"},identity:{accessTokens:"key,version,value",identities:"userURL, userProfile.email, userProfile.userURL, userProfile.name"},runtimeCatalogue:{runtimeCatalogue:"&cguid, accessControlPolicy, constraints, dataObjects, hypertyType, objectName, sourcePackage, version"},policy:{"rethink:activePolicy":"key,version,value","rethink:groups":"key,version,value","rethink:userPolicies":"key,version,value","rethink:spPolicies":"key,version,value"},syncherManager:{"syncherManager:ObjectURLs":"key,version,value",remotes:"key,version,value"},hypertyResources:{hypertyResources:"&resourceURL, name, contentUrl, content, created, reporter, resourceType"}},runtimeURLS:{registry:{prefix:"hyperty-runtime://",suffix:"registry"},identityModule:{prefix:"hyperty-runtime://",suffix:"/idm"},runtimeUA:{prefix:"hyperty-runtime://",suffix:"/ua"},catalogue:{prefix:"hyperty-runtime://",suffix:"/catalogue"},graphConnector:{prefix:"hyperty-runtime://",suffix:"/graph"},syncManager:{prefix:"hyperty-runtime://",suffix:"/sm"}},catalogueURLs:{protocolstub:{prefix:"hyperty-catalogue://catalogue.",suffix:"/.well-known/protocolstub/",fallback:"hyperty-catalogue://catalogue.%domain%/.well-known/protocolstub/"},idpProxy:{prefix:"hyperty-catalogue://catalogue.",suffix:"/.well-known/idp-proxy/",fallback:"hyperty-catalogue://catalogue.%domain%/.well-known/idp-proxy/"}},msgNodeURL:{prefix:"domain://msg-node.",suffix:"",hypertyAddressAllocation:"/hyperty-address-allocation",objectAddressAllocation:"/object-address-allocation",subscriptionManagement:"/sm"},domainRegistryURL:{prefix:"domain://registry.",suffix:""},globalRegistryURL:"global://registry.",remoteStorage:"https://hysmart.rethink.ptinovacao.pt/backup/"}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=function(){function Operators(){(0,o.default)(this,Operators)}return(0,a.default)(Operators,[{key:"and",value:function(e){return e[0]&&e[1]}},{key:"between",value:function(e){var t=parseInt(e[0][0]),r=parseInt(e[0][1]),n=e[1];return r<t&&(n=n<t?n+=2400:n,r+=2400),n>t&&n<r}},{key:"equals",value:function(e){return"*"===String(e[0])||String(e[0])===String(e[1])}},{key:"greaterThan",value:function(e){return e[1]>e[0]}},{key:"in",value:function(e){return e[0].indexOf(e[1])>-1}},{key:"lessThan",value:function(e){return e[1]<e[0]}},{key:"not",value:function(e){return!e[0]}},{key:"or",value:function(e){return e[0]||e[1]}}]),Operators}();t.default=s,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(152),u=_interopRequireDefault(s),c=function(){function Condition(e,t,r){(0,o.default)(this,Condition),this.attribute=e,this.operator=t,this.params=r,this.operators=new u.default}return(0,a.default)(Condition,[{key:"isApplicable",value:function(e,t){e[this.attribute]={message:t};var r=e[this.attribute],n=void 0;return"in"!==this.operator||Array.isArray(this.params)?this.operators[this.operator]([this.params,r]):(n=e.getGroup(this.params,t.to),this.operators[this.operator]([n,r]))}}]),Condition}();t.default=c,e.exports=t.default},function(e,t){var r;r=function(){return this}();try{r=r||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t,r){e.exports=!r(12)&&!r(8)(function(){return 7!=Object.defineProperty(r(106)("div"),"a",{get:function(){return 7}}).a})},function(e,t,r){t.f=r(10)},function(e,t,r){var n=r(27),o=r(28),i=r(84)(!1),a=r(108)("IE_PROTO");e.exports=function(e,t){var r,s=o(e),u=0,c=[];for(r in s)r!=a&&n(s,r)&&c.push(r);for(;t.length>u;)n(s,r=t[u++])&&(~i(c,r)||c.push(r));return c}},function(e,t,r){var n=r(13),o=r(5),i=r(54);e.exports=r(12)?Object.defineProperties:function(e,t){o(e);for(var r,a=i(t),s=a.length,u=0;s>u;)n.f(e,r=a[u++],t[r]);return e}},function(e,t,r){var n=r(28),o=r(57).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],s=function(e){try{return o(e)}catch(e){return a.slice()}};e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?s(e):o(n(e))}},function(e,t,r){"use strict";var n=r(54),o=r(85),i=r(74),a=r(19),s=r(73),u=Object.assign;e.exports=!u||r(8)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=a(e),u=arguments.length,c=1,l=o.f,f=i.f;u>c;)for(var d,p=s(arguments[c++]),y=l?n(p).concat(l(p)):n(p),h=y.length,v=0;h>v;)f.call(p,d=y[v++])&&(r[d]=p[d]);return r}:u},function(e,t,r){"use strict";var n=r(20),o=r(9),i=r(162),a=[].slice,s={},u=function(e,t,r){if(!(t in s)){for(var n=[],o=0;o<t;o++)n[o]="a["+o+"]";s[t]=Function("F,a","return new F("+n.join(",")+")")}return s[t](e,r)};e.exports=Function.bind||function(e){var t=n(this),r=a.call(arguments,1),s=function(){var n=r.concat(a.call(arguments));return this instanceof s?u(t,n.length,n):i(t,n,e)};return o(t.prototype)&&(s.prototype=t.prototype),s}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(7).parseInt,o=r(65).trim,i=r(112),a=/^[-+]?0[xX]/;e.exports=8!==n(i+"08")||22!==n(i+"0x16")?function(e,t){var r=o(String(e),3);return n(r,t>>>0||(a.test(r)?16:10))}:n},function(e,t,r){var n=r(7).parseFloat,o=r(65).trim;e.exports=1/n(r(112)+"-0")!=-1/0?function(e){var t=o(String(e),3),r=n(t);return 0===r&&"-"==t.charAt(0)?-0:r}:n},function(e,t,r){var n=r(33);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=n(e))throw TypeError(t);return+e}},function(e,t,r){var n=r(9),o=Math.floor;e.exports=function(e){return!n(e)&&isFinite(e)&&o(e)===e}},function(e,t){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,t,r){var n=r(115),o=Math.pow,i=o(2,-52),a=o(2,-23),s=o(2,127)*(2-a),u=o(2,-126),c=function(e){return e+1/i-1/i};e.exports=Math.fround||function(e){var t,r,o=Math.abs(e),l=n(e);return o<u?l*c(o/u/a)*u*a:(t=(1+a/i)*o,r=t-(t-o),r>s||r!=r?l*(1/0):l*r)}},function(e,t,r){var n=r(5);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(20),o=r(19),i=r(73),a=r(14);e.exports=function(e,t,r,s,u){n(t);var c=o(e),l=i(c),f=a(c.length),d=u?f-1:0,p=u?-1:1;if(r<2)for(;;){if(d in l){s=l[d],d+=p;break}if(d+=p,u?d<0:f<=d)throw TypeError("Reduce of empty array with no initial value")}for(;u?d>=0:f>d;d+=p)d in l&&(s=t(s,l[d],d,c));return s}},function(e,t,r){"use strict";var n=r(19),o=r(55),i=r(14);e.exports=[].copyWithin||function(e,t){var r=n(this),a=i(r.length),s=o(e,a),u=o(t,a),c=arguments.length>2?arguments[2]:void 0,l=Math.min((void 0===c?a:o(c,a))-u,a-s),f=1;for(u<s&&s<u+l&&(f=-1,u+=l-1,s+=l-1);l-- >0;)u in r?r[s]=r[u]:delete r[s],s+=f,u+=f;return r}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){r(12)&&"g"!=/./g.flags&&r(13).f(RegExp.prototype,"flags",{configurable:!0,get:r(89)})},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(5),o=r(9),i=r(130);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){"use strict";var n=r(177),o=r(67);e.exports=r(93)("Map",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{get:function(e){var t=n.getEntry(o(this,"Map"),e);return t&&t.v},set:function(e,t){return n.def(o(this,"Map"),0===e?0:e,t)}},n,!0)},function(e,t,r){"use strict";var n=r(13).f,o=r(56),i=r(61),a=r(32),s=r(59),u=r(60),c=r(118),l=r(172),f=r(58),d=r(12),p=r(47).fastKey,y=r(67),h=d?"_s":"size",v=function(e,t){var r,n=p(t);if("F"!==n)return e._i[n];for(r=e._f;r;r=r.n)if(r.k==t)return r};e.exports={getConstructor:function(e,t,r,c){var l=e(function(e,n){s(e,l,t,"_i"),e._t=t,e._i=o(null),e._f=void 0,e._l=void 0,e[h]=0,void 0!=n&&u(n,r,e[c],e)});return i(l.prototype,{clear:function(){for(var e=y(this,t),r=e._i,n=e._f;n;n=n.n)n.r=!0,n.p&&(n.p=n.p.n=void 0),delete r[n.i];e._f=e._l=void 0,e[h]=0},delete:function(e){var r=y(this,t),n=v(r,e);if(n){var o=n.n,i=n.p;delete r._i[n.i],n.r=!0,i&&(i.n=o),o&&(o.p=i),r._f==n&&(r._f=o),r._l==n&&(r._l=i),r[h]--}return!!n},forEach:function(e){y(this,t);for(var r,n=a(e,arguments.length>1?arguments[1]:void 0,3);r=r?r.n:this._f;)for(n(r.v,r.k,this);r&&r.r;)r=r.p},has:function(e){return!!v(y(this,t),e)}}),d&&n(l.prototype,"size",{get:function(){return y(this,t)[h]}}),l},def:function(e,t,r){var n,o,i=v(e,t);return i?i.v=r:(e._l=i={i:o=p(t,!0),k:t,v:r,p:n=e._l,n:void 0,r:!1},e._f||(e._f=i),n&&(n.n=i),e[h]++,"F"!==o&&(e._i[o]=i)),e},getEntry:v,setStrong:function(e,t,r){c(e,t,function(e,r){this._t=y(e,t),this._k=r,this._l=void 0},function(){for(var e=this,t=e._k,r=e._l;r&&r.r;)r=r.p;return e._t&&(e._l=r=r?r.n:e._t._f)?"keys"==t?l(0,r.k):"values"==t?l(0,r.v):l(0,[r.k,r.v]):(e._t=void 0,l(1))},r?"entries":"values",!r,!0),f(t)}}},function(e,t,r){"use strict";var n=r(177),o=r(67);e.exports=r(93)("Set",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return n.def(o(this,"Set"),e=0===e?0:e,e)}},n)},function(e,t,r){"use strict";var n,o=r(40)(0),i=r(24),a=r(47),s=r(160),u=r(180),c=r(9),l=r(8),f=r(67),d=a.getWeak,p=Object.isExtensible,y=u.ufstore,h={},v=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},g={get:function(e){if(c(e)){var t=d(e);return!0===t?y(f(this,"WeakMap")).get(e):t?t[this._i]:void 0}},set:function(e,t){return u.def(f(this,"WeakMap"),e,t)}},b=e.exports=r(93)("WeakMap",v,g,u,!0,!0);l(function(){return 7!=(new b).set((Object.freeze||Object)(h),7).get(h)})&&(n=u.getConstructor(v,"WeakMap"),s(n.prototype,g),a.NEED=!0,o(["delete","has","get","set"],function(e){var t=b.prototype,r=t[e];i(t,e,function(t,o){if(c(t)&&!p(t)){this._f||(this._f=new n);var i=this._f[e](t,o);return"set"==e?this:i}return r.call(this,t,o)})}))},function(e,t,r){"use strict";var n=r(61),o=r(47).getWeak,i=r(5),a=r(9),s=r(59),u=r(60),c=r(40),l=r(27),f=r(67),d=c(5),p=c(6),y=0,h=function(e){return e._l||(e._l=new v)},v=function(){this.a=[]},g=function(e,t){return d(e.a,function(e){return e[0]===t})};v.prototype={get:function(e){var t=g(this,e);if(t)return t[1]},has:function(e){return!!g(this,e)},set:function(e,t){var r=g(this,e);r?r[1]=t:this.a.push([e,t])},delete:function(e){var t=p(this.a,function(t){return t[0]===e});return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,r,i){var c=e(function(e,n){s(e,c,t,"_i"),e._t=t,e._i=y++,e._l=void 0,void 0!=n&&u(n,r,e[i],e)});return n(c.prototype,{delete:function(e){if(!a(e))return!1;var r=o(e);return!0===r?h(f(this,t)).delete(e):r&&l(r,this._i)&&delete r[this._i]},has:function(e){if(!a(e))return!1;var r=o(e);return!0===r?h(f(this,t)).has(e):r&&l(r,this._i)}}),c},def:function(e,t,r){var n=o(i(t),!0);return!0===n?h(e).set(t,r):n[e._i]=r,e},ufstore:h}},function(e,t,r){var n=r(38),o=r(14);e.exports=function(e){if(void 0===e)return 0;var t=n(e),r=o(t);if(t!==r)throw RangeError("Wrong length!");return r}},function(e,t,r){var n=r(57),o=r(85),i=r(5),a=r(7).Reflect;e.exports=a&&a.ownKeys||function(e){var t=n.f(i(e)),r=o.f;return r?t.concat(r(e)):t}},function(e,t,r){"use strict";function flattenIntoArray(e,t,r,u,c,l,f,d){for(var p,y,h=c,v=0,g=!!f&&a(f,d,3);v<u;){if(v in r){if(p=g?g(r[v],v,t):r[v],y=!1,o(p)&&(y=p[s],y=void 0!==y?!!y:n(p)),y&&l>0)h=flattenIntoArray(e,t,p,i(p.length),h,l-1)-1;else{if(h>=9007199254740991)throw TypeError();e[h]=p}h++}v++}return h}var n=r(86),o=r(9),i=r(14),a=r(32),s=r(10)("isConcatSpreadable");e.exports=flattenIntoArray},function(e,t,r){var n=r(14),o=r(114),i=r(37);e.exports=function(e,t,r,a){var s=String(i(e)),u=s.length,c=void 0===r?" ":String(r),l=n(t);if(l<=u||""==c)return s;var f=l-u,d=o.call(c,Math.ceil(f/c.length));return d.length>f&&(d=d.slice(0,f)),a?d+s:s+d}},function(e,t,r){var n=r(54),o=r(28),i=r(74).f;e.exports=function(e){return function(t){for(var r,a=o(t),s=n(a),u=s.length,c=0,l=[];u>c;)i.call(a,r=s[c++])&&l.push(e?[r,a[r]]:a[r]);return l}}},function(e,t,r){var n=r(75),o=r(187);e.exports=function(e){return function(){if(n(this)!=e)throw TypeError(e+"#toJSON isn't generic");return o(this)}}},function(e,t,r){var n=r(60);e.exports=function(e,t){var r=[];return n(e,!1,r.push,r,t),r}},function(e,t){e.exports=Math.scale||function(e,t,r,n,o){return 0===arguments.length||e!=e||t!=t||r!=r||n!=n||o!=o?NaN:e===1/0||e===-1/0?e:(e-t)*(o-n)/(r-t)+n}},function(e,t,r){var n=r(62),o=r(50),i=r(428)(!1),a=r(135)("IE_PROTO");e.exports=function(e,t){var r,s=o(e),u=0,c=[];for(r in s)r!=a&&n(s,r)&&c.push(r);for(;t.length>u;)n(s,r=t[u++])&&(~i(c,r)||c.push(r));return c}},function(e,t,r){var n=r(77);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t,r){e.exports=!r(51)&&!r(70)(function(){return 7!=Object.defineProperty(r(139)("div"),"a",{get:function(){return 7}}).a})},function(e,t){},function(e,t,r){"use strict";var n=r(78),o=r(26),i=r(194),a=r(63),s=r(71),u=r(432),c=r(100),l=r(196),f=r(22)("iterator"),d=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,r,y,h,v,g){u(r,t,y);var b,_,m,R=function(e){if(!d&&e in S)return S[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},O=t+" Iterator",w="values"==h,k=!1,S=e.prototype,P=S[f]||S["@@iterator"]||h&&S[h],D=P||R(h),M=h?w?R("entries"):D:void 0,L="Array"==t?S.entries||P:P;if(L&&(m=l(L.call(new e)))!==Object.prototype&&m.next&&(c(m,O,!0),n||"function"==typeof m[f]||a(m,f,p)),w&&P&&"values"!==P.name&&(k=!0,D=function(){return P.call(this)}),n&&!g||!d&&!k&&S[f]||a(S,f,D),s[t]=D,s[O]=p,h)if(b={values:w?D:R("values"),keys:v?D:R("keys"),entries:M},g)for(_ in b)_ in S||i(S,_,b[_]);else o(o.P+o.F*(d||k),t,b);return b}},function(e,t,r){e.exports=r(63)},function(e,t,r){var n=r(21).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(62),o=r(76),i=r(135)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,r){var n=r(41);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(71),o=r(22)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t,r){var n=r(41),o=r(99),i=r(22)("species");e.exports=function(e,t){var r,a=n(e).constructor;return void 0===a||void 0==(r=n(a)[i])?t:o(r)}},function(e,t,r){var n,o,i,a=r(69),s=r(440),u=r(195),c=r(139),l=r(21),f=l.process,d=l.setImmediate,p=l.clearImmediate,y=l.MessageChannel,h=l.Dispatch,v=0,g={},b=function(){var e=+this;if(g.hasOwnProperty(e)){var t=g[e];delete g[e],t()}},_=function(e){b.call(e.data)};d&&p||(d=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return g[++v]=function(){s("function"==typeof e?e:Function(e),t)},n(v),v},p=function(e){delete g[e]},"process"==r(77)(f)?n=function(e){f.nextTick(a(b,e,1))}:h&&h.now?n=function(e){h.now(a(b,e,1))}:y?(o=new y,i=o.port2,o.port1.onmessage=_,n=a(i.postMessage,i,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(n=function(e){l.postMessage(e+"","*")},l.addEventListener("message",_,!1)):n="onreadystatechange"in c("script")?function(e){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),b.call(e)}}:function(e){setTimeout(a(b,e,1),0)}),e.exports={set:d,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(41),o=r(45),i=r(144);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){var n=r(22)("iterator"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],a=i[n]();a.next=function(){return{done:r=!0}},i[n]=function(){return a},e(i)}catch(e){}return r}},function(e,t,r){e.exports={default:r(450),__esModule:!0}},function(e,t,r){var n=r(189),o=r(137).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(82),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(16),u=_interopRequireDefault(s),c=r(46),l=_interopRequireDefault(c),f=r(1),d=_interopRequireDefault(f),p=r(2),y=_interopRequireDefault(p),h=r(4),v=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(h),g=r(207),b=_interopRequireDefault(g),_=r(208),m=_interopRequireDefault(_),R=r(483),O=_interopRequireDefault(R),w=r(6),k=r(484),S=_interopRequireDefault(k),P=v.getLogger("DataObject"),D=function(){function DataObject(e){function throwMandatoryParmMissingError(e){throw"[DataObject] "+e+" mandatory parameter is missing"}(0,d.default)(this,DataObject);var t=this;if(e.syncher?t._syncher=e.syncher:throwMandatoryParmMissingError("syncher"),e.url?t._url=e.url:throwMandatoryParmMissingError("url"),e.created?t._created=e.created:throwMandatoryParmMissingError("created"),e.reporter?t._reporter=e.reporter:throwMandatoryParmMissingError("reporter"),e.runtime?t._runtime=e.runtime:throwMandatoryParmMissingError("runtime"),e.schema?t._schema=e.schema:throwMandatoryParmMissingError("schema"),e.name?t._name=e.name:throwMandatoryParmMissingError("name"),t._status=e.status,e.data?t._syncObj=new b.default(e.data):t._syncObj=new b.default({}),t._childrens=e.childrens,t._mutual=e.mutual,t._version=0,t._childId=1,t._childrenListener,t._onAddChildrenHandler,t._resumed=e.resume,e.resume&&(t._version=e.version),t._owner=e.syncher._owner,t._bus=e.syncher._bus,e.description&&(t._description=e.description),e.tags&&(t._tags=e.tags),e.resources&&(t._resources=e.resources),e.observerStorage&&(t._observerStorage=e.observerStorage),e.publicObservation&&(t._publicObservation=e.publicObservation),t._metadata=(0,l.default)(e),(!e.hasOwnProperty("resume")||e.hasOwnProperty("resume")&&!e.resume)&&(t._metadata.lastModified=t._metadata.created),delete t._metadata.data,delete t._metadata.syncher,delete t._metadata.authorise,t._hypertyResourceFactory=new S.default,t._childrenObjects={},t._sharedChilds=[],e.backup&&t._childrens){var r=e.hasOwnProperty("childrenObjects")&&e.childrenObjects.hasOwnProperty("heartbeat")?e.childrenObjects.heartbeat:0;t._heartBeat=new O.default(t._bus,t._owner,t._syncher._runtimeUrl,this,15,r),t._resumed||t._heartBeat.start(r)}}return(0,y.default)(DataObject,[{key:"_getLastChildId",value:function(){var e=this,t=0,r=e._owner+"#"+t;return(0,u.default)(e._childrens).filter(function(t){e._childrens[t].childId>r&&(r=e._childrens[t].childId)}),t=Number(r.split("#")[1])}},{key:"_allocateListeners",value:function(){var e=this,t=this,r=t._url+"/children/";if(P.log("[Data Object - AllocateListeners] - ",t._childrens),t._childrens)var n=r,o=t._bus.addListener(n,function(r){if(r.from!==e._owner)switch(P.log("DataObject-Children-RCV: ",r),r.type){case"create":t._onChildCreate(r);break;case"delete":P.log(r);break;default:t._changeChildren(r)}t._childrenListener=o})}},{key:"_releaseListeners",value:function(){var e=this;e._childrenListener&&(e._childrenListener.remove(),(0,u.default)(e._childrenObjects).forEach(function(t){e._childrenObjects[t]._releaseListeners()}))}},{key:"sync",value:function(){var e=this,t=this;return P.info("[DataObject.sync] synchronising "),new a.default(function(r,n){var o={};e.metadata.backupRevision&&(o.backupRevision=e.metadata.backupRevision),t._syncher.read(t._metadata.url,o).then(function(e){P.info("[DataObject.sync] value to sync: ",e),(0,l.default)(t.data,(0,w.deepClone)(e.data)),t._version=e.version,t._metadata.lastModified=e.lastModified,e.childrenObjects?(t.resumeChildrens(e.childrenObjects),t._storeChildrens(),r(!0)):r(!0)}).catch(function(e){P.info("[DataObject.sync] sync failed: ",e),r(!1)})})}},{key:"resumeChildrens",value:function(e){var t=this,r=this,n=this._owner.split("/")[3]+"#"+this._childId,o=e;(0,u.default)(o).forEach(function(e){var i=!1;"heartbeat"===e?r._heartBeat.start(o[e]):o[e].value.resourceType&&!r._childrenObjects.hasOwnProperty(e)?(r._childrenObjects[e]=r._resumeHypertyResource(o[e]),i=!0):r._childrenObjects.hasOwnProperty(e)||(r._childrenObjects[e]=r._resumeChild(o[e]),P.log("[DataObject.resumeChildrens] new DataObjectChild: ",r._childrenObjects[e]),i=!0),i&&e>n&&(n=e,P.log("[DataObjectReporter.resumeChildrens] - resuming: ",t._childrenObjects[e]))}),this._childId=Number(n.split("#")[1])}},{key:"_resumeChild",value:function(e){var t=this,r=e.value;r.parentObject=t,r.parent=t._url;var n=new m.default(r);n.identity=e.identity;var o={type:"create",from:n.reporter,url:n.parent,value:n.data,childId:n.url,identity:n.identity,child:n};return n.resourceType&&(o.resource=n),t._onAddChildrenHandler&&t._onAddChildrenHandler(o),n}},{key:"_resumeHypertyResource",value:function(e){var t=this,r=e.value;r.parentObject=t,r.parent=t._url;var n=t._hypertyResourceFactory.createHypertyResource(!1,r.resourceType,r);n.identity=e.identity;var o={type:"create",from:n.reporter,url:n.parent,value:n.data,childId:n.url,identity:n.identity,child:n};return n.resourceType&&(o.resource=n),t._onAddChildrenHandler&&t._onAddChildrenHandler(o),n}},{key:"pause",value:function(){throw"Not implemented"}},{key:"resume",value:function(){throw"Not implemented"}},{key:"stop",value:function(){throw"Not implemented"}},{key:"addChild",value:function(e,t,r){var n=this,o=void 0;return new a.default(function(i){var a=n._url+"/children/",s=n._getChildInput(r);s.data=e,o=new m.default(s),t&&(o.identity=t),o.share(),P.log("[DataObject.addChild] added ",o),o.onChange(function(e){n._onChange(e,{path:a,childId:s.url})}),n._childrenObjects[s.url]=o,i(o)})}},{key:"_deleteChildrens",value:function(){var e=this,t=[];return new a.default(function(r){if(e.childrens){P.log("[DataObject.deleteChildrens]",e.childrens);var n=void 0;for(n in e.childrens){var o=e.childrens[n];P.log("[DataObject._deleteChildrens] child",o),o.metadata.hasOwnProperty("resourceType")&&t.push(e.childrens[n].delete())}P.log("[DataObject._deleteChildrens] promises ",t),t.length>0?a.default.all(t).then(function(){r("[DataObject._deleteChildrens] done")}):r("[DataObject._deleteChildrens] nothing to delete")}})}},{key:"_getChildInput",value:function(e){var t=this,r=(0,l.default)({},e);return t._childId++,r.url=t._owner.split("/")[3]+"#"+t._childId,r.parentObject=t,r.reporter=t._owner,r.created=(new Date).toISOString(),r.runtime=t._syncher._runtimeUrl,r.p2pHandler=t._syncher._p2pHandler,r.p2pRequester=t._syncher._p2pRequester,r.schema=t._schema,r.parent=t.url,r}},{key:"addHypertyResource",value:function(e,t,r,n){var o=this;return new a.default(function(i){var a=void 0,s=o._url+"/children/",u=o._getChildInput(n);o._hypertyResourceFactory.createHypertyResourceWithContent(!0,e,t,u).then(function(e){a=e,r&&(a.identity=r),a.share(),P.log("[DataObject.addHypertyResource] added ",a),a.onChange(function(e){o._onChange(e,{path:s,childId:a.childId})}),o._childrenObjects[a.childId]=a,i(a)})})}},{key:"onAddChild",value:function(e){this._onAddChildrenHandler=e}},{key:"_onChildCreate",value:function(e){var t=this;if("heartbeat"===e.body.resource)this._heartBeat.onNewHeartbeat(e.body.value);else{var r={from:e.to,to:e.from,type:"response",id:e.id,body:{code:100}};t._bus.postMessage(r),e.body.value.resourceType?t._onHypertyResourceAdded(e):t._onChildAdded(e)}}},{key:"_onChildAdded",value:function(e){var t=this,r=(0,w.deepClone)(e.body.value);r.parentObject=t;var n=new m.default(r);n.identity=e.body.identity,t._childrenObjects[r.url]=n,e.to===t.metadata.url&&n.store(),t._hypertyEvt(e,n)}},{key:"_onHypertyResourceAdded",value:function(e){var t=this,r=e.body.value,n=void 0;r.parentObject=t,n=t._hypertyResourceFactory.createHypertyResource(!1,r.resourceType,r),n.identity=e.body.identity,t._childrenObjects[n.childId]=n,t._hypertyEvt(e,n),e.to===t.metadata.url&&n.store()}},{key:"_hypertyEvt",value:function(e,t){var r=this,n={type:e.type,from:e.from,url:e.to,value:t.data,childId:t.url,identity:e.body.identity,child:t};t.resourceType&&(n.resource=t),r._onAddChildrenHandler&&r._onAddChildrenHandler(n)}},{key:"_onChange",value:function(e,t){var r=this;if(r._metadata.lastModified=(new Date).toISOString(),r._version++,"live"===r._status){var n={type:"update",from:r._url,to:r._url+"/changes",body:{version:r._version,source:r._owner,attribute:e.field,lastModified:r._metadata.lastModified}};P.log("[DataObject - _onChange] - ",e,t,n),e.oType===g.ObjectType.OBJECT?e.cType!==g.ChangeType.REMOVE&&(n.body.value=(0,w.deepClone)(e.data)):(n.body.attributeType=e.oType,n.body.value=e.data,e.cType!==g.ChangeType.UPDATE&&(n.body.operation=e.cType)),t&&(n.to=t.path,n.body.resource=t.childId),r.data._mutual||(n.body.mutual=r._mutual),r._bus.postMessage(n)}}},{key:"_changeObject",value:function(e,t){var r=this;if(r._version+1<=t.body.version){r._version=t.body.version;var n=t.body.attribute,i=void 0;i="object"===(0,o.default)(t.body.value)?(0,w.deepClone)(t.body.value):t.body.value;var a=e.findBefore(n);if(t.body.lastModified?r._metadata.lastModified=t.body.lastModified:r._metadata.lastModified=(new Date).toISOString(),t.body.attributeType===g.ObjectType.ARRAY)if(t.body.operation===g.ChangeType.ADD){var s=a.obj,u=a.last;Array.prototype.splice.apply(s,[u,0].concat(i))}else if(t.body.operation===g.ChangeType.REMOVE){var c=a.obj,l=a.last;c.splice(l,i)}else a.obj[a.last]=i;else t.body.hasOwnProperty("value")?a.obj[a.last]=i:delete a.obj[a.last]}else P.log("UNSYNCHRONIZED VERSION: (data => "+r._version+", msg => "+t.body.version+")")}},{key:"_changeChildren",value:function(e){var t=this,r=(0,w.divideURL)(e.to),n=(r.identity,e.body.resource),o=t._childrenObjects[n];P.log("Change children: ",t._owner,e,resource),o?t._changeObject(o._syncObj,e):P.warn("No children found for: ",n)}},{key:"metadata",get:function(){return this._metadata}},{key:"url",get:function(){return this._url}},{key:"schema",get:function(){return this._schema}},{key:"status",get:function(){return this._status}},{key:"data",get:function(){return this._syncObj.data}},{key:"childrens",get:function(){return this._childrenObjects}}]),DataObject}();t.default=D,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectType=t.ChangeType=void 0;var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i);r(149);var s=r(6),u=function(){function SyncObject(e){(0,o.default)(this,SyncObject);var t=this;t._observers=[],t._filters={},this._data=e||{},this._internalObserve(this._data)}return(0,a.default)(SyncObject,[{key:"observe",value:function(e){this._observers.push(e)}},{key:"find",value:function(e){var t=(0,s.parseAttributes)(e);return this._findWithSplit(t)}},{key:"findBefore",value:function(e){var t={},r=(0,s.parseAttributes)(e);return t.last=r.pop(),t.obj=this._findWithSplit(r),t}},{key:"_findWithSplit",value:function(e){var t=this._data;return e.forEach(function(e){t=t[e]}),t}},{key:"_internalObserve",value:function(e){var t=this,r=function(e){e.every(function(e){t._onChanges(e)})};this._data=Object.deepObserve(e,r)}},{key:"_fireEvent",value:function(e){this._observers.forEach(function(t){t(e)})}},{key:"_onChanges",value:function(e){var t=e.object,r=void 0;t.constructor===Object&&(r=l.OBJECT),t.constructor===Array&&(r=l.ARRAY);var n=e.keypath,o=t[e.name];"update"!==e.type||n.includes(".length")||this._fireEvent({cType:c.UPDATE,oType:r,field:n,data:o}),"add"===e.type&&this._fireEvent({cType:c.ADD,oType:r,field:n,data:o}),"delete"===e.type&&this._fireEvent({cType:c.REMOVE,oType:r,field:n})}},{key:"data",get:function(){return this._data}}]),SyncObject}(),c=t.ChangeType={UPDATE:"update",ADD:"add",REMOVE:"remove"},l=t.ObjectType={OBJECT:"object",ARRAY:"array"};t.default=u},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=r(207),d=_interopRequireDefault(f),p=r(6),y=l.getLogger("DataObjectChild"),h=function(){function DataObjectChild(e){function throwMandatoryParmMissingError(e){throw"[DataObjectChild] "+e+" mandatory parameter is missing"}(0,a.default)(this,DataObjectChild);var t=this;e.parent?t._parent=e.parent:throwMandatoryParmMissingError("parent"),e.url?t._url=e.url:throwMandatoryParmMissingError("url"),e.created?t._created=e.created:throwMandatoryParmMissingError("created"),e.reporter?t._reporter=e.reporter:throwMandatoryParmMissingError("reporter"),e.runtime?t._runtime=e.runtime:throwMandatoryParmMissingError("runtime"),e.schema?t._schema=e.schema:throwMandatoryParmMissingError("schema"),e.parentObject?t._parentObject=e.parentObject:throwMandatoryParmMissingError("parentObject"),e.name&&(t._name=e.name),e.description&&(t._description=e.description),e.tags&&(t._tags=e.tags),e.resources&&(t._resources=e.resources),e.observerStorage&&(t._observerStorage=e.observerStorage),e.publicObservation&&(t._publicObservation=e.publicObservation),t._childId=e.url,e.data?t._syncObj=new d.default(e.data):t._syncObj=new d.default({}),y.log("[DataObjectChild -  Constructor] - ",t._syncObj),t._bus=t._parentObject._bus,t._owner=t._parentObject._owner,t._allocateListeners(),t._metadata=e,delete t._metadata.parentObject,t._sharingStatus=!1}return(0,u.default)(DataObjectChild,[{key:"share",value:function(e){var t=this;t._sharingStatus=new o.default(function(r,n){var o=void 0;o=e?t.metadata.parent:t.metadata.parent+"/children/";var i=t.metadata;i.data=t.data;var a={type:"create",from:t.metadata.reporter,to:o,body:{resource:i.url,value:i}};if(t.identity&&(a.body.identity=t.identity),t._parentObject.data.hasOwnProperty("mutual")&&(a.body.mutual=t._parentObject.data.mutual),t._parentObject.metadata.reporter===t.metadata.reporter)return t._bus.postMessage((0,p.deepClone)(a)),r();var s=function(e){if(e.to===t._reporter){t._bus.removeResponseListener(a.from,e.id),y.log("[Syncher.DataObjectChild.share] Parent reporter reply ",e);var o={code:e.body&&e.body.code?e.body.code:500,desc:e.body&&e.body.desc?e.body.desc:"Unknown"};return e.body.code<300?r(o):n(o)}},u=t._bus.postMessage((0,p.deepClone)(a),s,!1);setTimeout(function(){return t._bus.removeResponseListener(a.from,u),n({code:408,desc:"timout"})},3e3)})}},{key:"store",value:function(){var e=this,t={},r=e.metadata.children+"."+e.metadata.url;t.value=e.metadata,t.identity=e.identity;var n={from:e.metadata.reporter,to:e._parentObject._syncher._subURL,type:"create",body:{resource:e.metadata.parent,attribute:r,value:t}};y.log("[DataObjectChild.store]:",n),e._bus.postMessage(n)}},{key:"_allocateListeners",value:function(){var e=this;e._reporter===e._owner&&(e._listener=e._bus.addListener(e._reporter,function(t){"response"===t.type&&t.id===e._msgId&&(y.log("DataObjectChild.onResponse:",t),e._onResponse(t))}))}},{key:"_releaseListeners",value:function(){var e=this;e._listener&&e._listener.remove()}},{key:"delete",value:function(){this._releaseListeners()}},{key:"onChange",value:function(e){this._syncObj.observe(function(t){y.log("[DataObjectChild - observer] - ",t),e(t)})}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"_onResponse",value:function(e){var t=this,r={type:e.type,url:e.body.source,code:e.body.code};t._onResponseHandler&&t._onResponseHandler(r)}},{key:"shareable",get:function(){var e=this.metadata;return e.data=this.data,e}},{key:"metadata",get:function(){return this._metadata}},{key:"childId",get:function(){return this._childId}},{key:"sharingStatus",get:function(){return this._sharingStatus}},{key:"data",get:function(){return this._syncObj.data}},{key:"identity",set:function(e){this._identity=e},get:function(){return this._identity}}]),DataObjectChild}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=function(){function EventEmitter(){(0,o.default)(this,EventEmitter)}return(0,a.default)(EventEmitter,[{key:"addEventListener",value:function(e,t){this[e]=t}},{key:"trigger",value:function(e,t){var r=this;r[e]&&r[e](t)}}]),EventEmitter}();t.default=s,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(35),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(150),d=_interopRequireDefault(f),p=r(501),y=_interopRequireDefault(p),h=function(){function ChatController(e,t,r,n,o,i){if((0,u.default)(this,ChatController),!e)throw Error("Syncher is a necessary dependecy");if(!t)throw Error("Discover is a necessary dependecy");if(!r)throw Error("Domain is a necessary dependecy");if(!n)throw Error("Search is a necessary dependecy");var a=this;a._syncher=e,a.discovery=t,a.search=n,a.myIdentity=o,a.controllerMode="reporter",a.child_cseq=0,a.domain=r,a._manager=i;var s=e.owner;a._objectDescURL="hyperty-catalogue://catalogue."+r+"/.well-known/dataschema/Communication",a._invitationsHandler=new y.default(s)}return(0,l.default)(ChatController,[{key:"_setOnAddChildListener",value:function(e){var t=this;e.onAddChild(function(e){t.child_cseq+=1,t._onMessage&&t._onMessage(e)})}},{key:"_onSubscribe",value:function(e){var t=this._dataObjectReporter;e.accept();var r=JSON.parse((0,a.default)(e.identity));r.hasOwnProperty("assertion")&&delete r.assertion;var n={hypertyURL:e.url,domain:e.domain,identity:r},o=e.identity.userProfile.guid;e.identity.legacy&&(n.legacy=e.identity.legacy),t.data.participants[o]=n,this._onUserAdded&&this._onUserAdded(n)}},{key:"_onUnsubscribe",value:function(e){var t=this._dataObjectReporter,r=e.identity.userProfile;e.identity.legacy&&(r.legacy=e.identity.legacy),delete t.data.participants[r.userURL],this._onUserRemoved&&this._onUserRemoved(r)}},{key:"sendFile",value:function(e){var t=this,r=t.controllerMode,n="reporter"===r?t.dataObjectReporter:t.dataObjectObserver;return new o.default(function(r,o){var i={userProfile:t.myIdentity};n.addHypertyResource("resources","file",e,i).then(function(e){var o={userProfile:t.myIdentity},i={value:e,identity:o,resource:e},a=new d.default(n.url,t._manager._runtimeURL,t._manager._hypertyURL,t._manager._bus);!function share2Reporter(e,t,n,o){var i=o;e.sharingStatus.then(r(n)).catch(function(r){i.onLive(t,function(){i.unsubscribeLive(t),e.share(!0),share2Reporter(e,t,n,i)})})}(e,t._manager._hypertyURL,i,a)})}).catch(function(e){reject(e)})}},{key:"send",value:function(e,t){var r=this,n=r.controllerMode,i="reporter"===n?r.dataObjectReporter:r.dataObjectObserver;return new o.default(function(n,o){r.child_cseq+=1;var a={type:"chat",content:e},s=t||{userProfile:r.myIdentity};i.addChild(a,s).then(function(e){var t={childId:e._childId,from:e._owner,value:e.data,type:"create",identity:s},o=new d.default(i.url,r._manager._runtimeURL,r._manager._hypertyURL,r._manager._bus);!function share2Reporter(e,t,r,o){var i=o;e.sharingStatus.then(n(r)).catch(function(n){i.onLive(t,function(){i.unsubscribeLive(t),e.share(!0),share2Reporter(e,t,r,i)})})}(e,r._manager._hypertyURL,t,o)}).catch(function(e){o(e)})})}},{key:"onChange",value:function(e){this._onChange=e}},{key:"onMessage",value:function(e){this._onMessage=e}},{key:"onUserAdded",value:function(e){this._onUserAdded=e}},{key:"onUserRemoved",value:function(e){this._onUserRemoved=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"onResponse",value:function(e){this._onResponse=e}},{key:"addUser",value:function(e){var t=this,r=function(e){return 0!==e.length};return new o.default(function(n,i){if(0===e.filter(r).length)return i("Don't have users to invite");var a=[],s=[],u={};e.forEach(function(e){var r=t.discovery.discoverHypertiesDO(e.user,["comm"],["chat"],e.domain);a.push(r)}),o.default.all(a).then(function(e){var r=[];e.forEach(function(e){e.forEach(function(e){"live"===e.data.status?(r.push(e.data.hypertyID),u[e.data.hypertyID]=e):s.length<5&&s.push(e)})});var n="reporter"===t.controllerMode?t.dataObjectReporter:t.dataObjectObserver;s.length>0&&t._invitationsHandler.inviteDisconnectedHyperties(s,n),n.inviteObservers(r),n.invitations.length>0&&t._invitationsHandler.processInvitations(u,n)}).then(function(){n(!0)}).catch(function(e){i(e)})})}},{key:"addUserReq",value:function(e){var t=this,r=function(e){return 0!==e.length};return new o.default(function(n,o){if(0===e.filter(r).length)return o("[ChatManager.ChatController.addUserReq] Don't have users to add");if("observer"===!t.controllerMode){return o("[ChatManager.ChatController.addUserReq] only allowed to Chat Observer")}})}},{key:"onInvitationResponse",value:function(e){var t=this;t._onInvitationResponse=e,t._invitationsHandler.invitationResponse=e}},{key:"removeUser",value:function(e){}},{key:"close",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=this;return new o.default(function(r,n){if("reporter"===t.controllerMode)t._invitationsHandler.cleanInvitations(t.dataObjectReporter).then(function(){if(e)try{delete t._manager._reportersControllers[t.dataObjectReporter.url],t.dataObjectReporter.delete(),r(!0),t._onClose&&t._onClose({code:200,desc:"deleted",url:t.dataObjectReporter.url})}catch(e){n(!1)}else t._manager.communicationObject.status="closed",r(!0)});else if(e)try{delete t._manager._observersControllers[t.dataObjectObserver.url],t.dataObjectObserver.unsubscribe(),r(!0)}catch(e){n(!1)}else r(!0)})}},{key:"invitationsHandler",get:function(){return this._invitationsHandler}},{key:"url",get:function(){return"reporter"===this.controllerMode?this.dataObjectReporter.url:this.dataObjectObserver.url}},{key:"dataObjectReporter",set:function(e){if(!e)throw new Error("[ChatController] The data object reporter is necessary parameter ");var t=this;t.controllerMode="reporter",e.onSubscription(function(e){switch(e.type){case"subscribe":t._onSubscribe(e);break;case"unsubscribe":t._onUnsubscribe(e)}}),t._setOnAddChildListener(e),e.onRead(function(e){e.accept()}),e.onExecute(function(e){switch(e.method){case"addUser":t.addUser(e.params[0]).then(function(){e.accept()}).catch(function(t){e.reject(t)});break;case"removeUser":t.removeUser(e.params).then(function(){e.accept()}).catch(function(t){e.reject(t)});break;default:e.reject("[ChatController.onExecute] Chat method execution not accepted by Reporter")}}),t._dataObjectReporter=e},get:function(){return this._dataObjectReporter}},{key:"messages",get:function(){return"reporter"===this.controllerMode?this._dataObjectReporter._childrenObjects:this._dataObjectObserver._childrenObjects}},{key:"dataObjectObserver",set:function(e){var t=this;t.controllerMode="observer",t._dataObjectObserver=e,e.onChange("*",function(e){if(e.field.includes("participants"))switch(e.cType){case"add":t._onUserAdded&&t._onUserAdded(e);break;case"remove":t._onUserRemoved&&t._onUserRemoved(e)}t._onChange&&t._onChange(e)}),t._setOnAddChildListener(e)},get:function(){return this._dataObjectObserver}},{key:"dataObject",get:function(){return"reporter"===this.controllerMode?this.dataObjectReporter:this.dataObjectObserver}},{key:"closeEvent",set:function(e){var t=this;t._closeEvent=e,t._onClose&&t._onClose(e)},get:function(){return this._closeEvent}}]),ChatController}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=l.getLogger("Bus"),d=function(){function Bus(){(0,a.default)(this,Bus);var e=this;e._msgId=0,e._subscriptions={},e._responseTimeOut=15e3,e._responseCallbacks={},e._registerExternalListener()}return(0,u.default)(Bus,[{key:"addListener",value:function(e,t){var r=this,n=new p(r._subscriptions,e,t),o=r._subscriptions[e];return o||(o=[],r._subscriptions[e]=o),o.push(n),n}},{key:"addResponseListener",value:function(e,t,r){this._responseCallbacks[e+t]=r}},{key:"removeResponseListener",value:function(e,t){delete this._responseCallbacks[e+t]}},{key:"removeAllListenersOf",value:function(e){delete this._subscriptions[e]}},{key:"bind",value:function(e,t,r){var n=this,o=this;return{thisListener:o.addListener(e,function(e){r.postMessage(e)}),targetListener:r.addListener(t,function(e){o.postMessage(e)}),unbind:function(){n.thisListener.remove(),n.targetListener.remove()}}}},{key:"_publishOnDefault",value:function(e){var t=this._subscriptions["*"];t&&this._publishOn(t,e)}},{key:"_publishOn",value:function(e,t){e.forEach(function(e){e._callback(t)})}},{key:"_responseCallback",value:function(e,t){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=this;if(t){var o=e.from+e.id;n._responseCallbacks[o]=t,r&&setTimeout(function(){var t=n._responseCallbacks[o];if(delete n._responseCallbacks[o],t){t({id:e.id,type:"response",body:{code:408,desc:"Response timeout!",value:e}})}},n._responseTimeOut)}}},{key:"_onResponse",value:function(e){var t=this;if("response"===e.type){var r=e.to+e.id,n=t._responseCallbacks[r];if(e.body.code>=200&&delete t._responseCallbacks[r],n)return n(e),!0}return!1}},{key:"_onMessage",value:function(e){var t=this;if(!t._onResponse(e)){var r=t._subscriptions[e.to];r?t._publishOn(r,e):t._publishOnDefault(e)}}},{key:"_genId",value:function(e){e.id&&0!==e.id||(this._msgId++,e.id=this._msgId)}},{key:"postMessage",value:function(e,t){}},{key:"postMessageWithRetries",value:function(e,t,r){var n=this,i=0,a=function(){return new o.default(function(t,o){n.postMessage(e,function(n){408===n.body.code||500===n.body.code?o():(f.info("[Bus.postMessageWithRetries] msg delivered: ",e),r(n),t())})})};!function tryAgain(){a().then(function(){},function(){if(f.warn("[Bus.postMessageWithRetries] Message Bounced (retry "+i+"): '",e),!(i++<t)){var r="[Error] Message Bounced (delivery attempts "+t+"): '";throw new Error(r+e)}tryAgain()})}()}},{key:"_onPostMessage",value:function(e){}},{key:"_registerExternalListener",value:function(){}}]),Bus}(),p=function(){function MsgListener(e,t,r){(0,a.default)(this,MsgListener);var n=this;n._subscriptions=e,n._url=t,n._callback=r}return(0,u.default)(MsgListener,[{key:"remove",value:function(){var e=this,t=e._subscriptions[e._url];if(t){var r=t.indexOf(e);t.splice(r,1),0===t.length&&delete e._subscriptions[e._url]}}},{key:"url",get:function(){return this._url}}]),MsgListener}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(15),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(17),l=_interopRequireDefault(c),f=r(18),d=_interopRequireDefault(f),p=r(505),y=_interopRequireDefault(p),h=function(e){function HypertyInstance(e,t,r,n,i,s,u,c,f,d,p,y,h,v,g){(0,a.default)(this,HypertyInstance);var b=(0,l.default)(this,(HypertyInstance.__proto__||(0,o.default)(HypertyInstance)).call(this,e,t,r,p,v,g)),_=b;return _._descriptor=n,_._hypertyURL=i,_._user=s,_._guid=u,_._runtime=c,_._context=f,_._p2pHandler=d,_._dataSchemes=y,_._resources=h,b}return(0,d.default)(HypertyInstance,e),(0,u.default)(HypertyInstance,[{key:"user",set:function(e){this.user=e},get:function(){return this._user}},{key:"hypertyURL",get:function(){return this._hypertyURL}},{key:"descriptor",get:function(){return this._descriptor}},{key:"objectName",get:function(){return this._descriptor._objectName}},{key:"p2pHandler",get:function(){return this._p2pHandler}},{key:"dataSchemes",get:function(){return this._dataSchemes}},{key:"resources",get:function(){return this._resources}},{key:"runtimeURL",get:function(){return this._runtime}}]),HypertyInstance}(y.default);t.default=h,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WatchingYou=void 0;var n=r(508),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.WatchingYou=o.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(510),a=_interopRequireDefault(i),s=r(3),u=_interopRequireDefault(s),c=r(46),l=_interopRequireDefault(c),f=r(1),d=_interopRequireDefault(f),p=r(2),y=_interopRequireDefault(p),h=r(4),v=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(h),g=r(6),b=r(213),_=v.getLogger("IdentityModule"),m=function(){function Identities(e,t){(0,d.default)(this,Identities);var r=this;r._watchingYou=new b.WatchingYou,r._storageManager=t,r._guid,r._type=e,r._identities={},r._accessTokens=r.watchingYou.watch("accessTokens",{},!0)}return(0,y.default)(Identities,[{key:"reset",value:function(){this._identities={},this.currentIdentity=void 0,this.defaultIdentity=void 0}},{key:"getIdentity",value:function(e){return(0,l.default)({},this._identities[e])}},{key:"loadIdentities",value:function(){var e=this;return new u.default(function(t){e._storageManager.get(null,null,"identities").then(function(r){_.info("[Identities.Load Identities] identities: ",r),r&&(e._identities=r,e.identifiers.forEach(function(t){var r=(0,g.secondsSinceEpoch)(),n=e._identities[t],o=n.expires;e.defaultIdentity=t,parseInt(o)>r&&(e.defaultIdentity.expires=parseInt(o),e.currentIdentity=t)})),t()})})}},{key:"loadAccessTokens",value:function(){var e=this;return new u.default(function(t){e._storageManager.get("accessTokens").then(function(r){r&&(e._accessTokens=r),t()})})}},{key:"addIdentity",value:function(e){var t=this,r=this;return new u.default(function(n,o){if(r._isValid(e)){var i=e.identifiers[0];(0,l.default)(t._identities[i],e),t._storeIdentity(e).then(function(){t._identities[i].status="created",n()})}else o("[Identities.addIdentity] invalid IdAssertion")})}},{key:"addAssertion",value:function(e){var t=this,r=this;return new u.default(function(n,o){if(r._isValid(e)){e.userProfile.guid=r._guid;var i=e.userProfile.userURL;r.identities[i]?r.identities[i]=e:r._identities[i]=e,r._store().then(function(){t._identities[i].status="created",0==r.defaultIdentity&&(r.defaultIdentity=i),n(e)})}else o("[Identities.addAssertion] invalid IdAssertion: ",e)})}},{key:"removeIdentity",value:function(e){var t=this;return new u.default(function(r,n){delete t.identities[e],t._store().then(function(){r()})})}},{key:"addAccessToken",value:function(e){var t=this;return _.info("[Identities.addAccessToken] ",e),new u.default(function(r,n){t._isValidAccessToken(e)?(t._accessTokens[e.domain]=e,t._storeAccessTokens().then(function(){t._accessTokens[e.domain].status="created",r(e)})):n("[Identities.addIdentity] invalid AccessToken: ",e)})}},{key:"setAccessTokenInProgress",value:function(e){this._accessTokens[e]?this._accessTokens[e].status="in-progress":this._accessTokens[e]={status:"in-progress"}}},{key:"getAccessToken",value:function(e,t){var r=this._accessTokens[e];return r?t.every(function(e){return-1!=r.resources.indexOf(e)})?this._accessTokens[e]:new Error("[Identities.getAccessToken] Not found for ",e):void 0}},{key:"updateAssertion",value:function(e){var t=this;return new u.default(function(r){var n=e.userProfile.userURL;if(!t.identities[n])return reject("[Identities.updateAssertion] Identity not found for ",n);t.identities[n]=e,t._store().then(function(){r()})})}},{key:"updateAccessToken",value:function(e){var t=this;return _.info("[Identities.updateAccessToken] ",e),new u.default(function(r,n){t._isValidAccessToken(e)?(t._accessTokens[e.domain].expires=e.expires,t._accessTokens[e.domain].accessToken=e.accessToken,t._storeAccessTokens().then(function(){t._accessTokens[e.domain].status="created",r(e)})):n("[Identities.updateAccessToken] invalid AccessToken: ",e)})}},{key:"addIdAssertion",value:function(e,t,r,n){var o=this,i=new R(t,r,n);o.idAssertionList.push(i)}},{key:"_isValid",value:function(e){if(!e.hasOwnProperty("assertion"))return!1;var t=e.assertion.split(".");try{t[1]?(0,g.decode)(t[1]):(0,g.decode)(e.assertion)}catch(e){return!1}return!0}},{key:"_isValidAccessToken",value:function(e){return!!e.hasOwnProperty("accessToken")&&(!!e.hasOwnProperty("domain")&&(!(!e.hasOwnProperty("resources")||!Array.isArray(e.resources))&&(!(!e.hasOwnProperty("expires")||!(0,a.default)(e.expires))&&!!e.hasOwnProperty("input"))))}},{key:"_store",value:function(){var e=this,t=this;return new u.default(function(r,n){var i=(0,o.default)(e._identities).map(function(r){return t._storageManager.set(r,0,e._identities[r],"identities")});u.default.all(i).then(function(){r()}).catch(function(e){n("On _sendReporterSessionKey from method storeIdentity error: "+e)})})}},{key:"_storeAccessTokens",value:function(){var e=this;return new u.default(function(t,r){var n=(0,g.deepClone)(e._accessTokens);e._storageManager.set("accessTokens",0,n).then(function(){t()}).catch(function(e){r("On _sendReporterSessionKey from method storeIdentity error: "+e)})})}},{key:"identities",get:function(){return this._identities}},{key:"accessTokens",get:function(){return this._accessTokens}},{key:"watchingYou",get:function(){return this._watchingYou}},{key:"guid",set:function(e){this._guid=e},get:function(){return this._guid}},{key:"defaultIdentity",set:function(e){if(!this.identities[e])throw new Error("[Identities.set defaultIdentity ] Error: identity does not exist here: ",e);this._defaultIdentity=e},get:function(){return!!this._defaultIdentity&&(0,l.default)({},this.identities[this._defaultIdentity])}},{key:"currentIdentity",set:function(e){if(!this.identities[e])throw e;this._currentIdentity=e},get:function(){return(0,l.default)({},this.identities[this._currentIdentity])}},{key:"identifiers",get:function(){return(0,o.default)(this._identities)}}]),Identities}(),R=function(){function IdAssertion(e,t,r){(0,d.default)(this,IdAssertion);var n=this;n._assertion=e,n._idp=t,n._userProfile=r}return(0,y.default)(IdAssertion,[{key:"assertion",get:function(){return this._assertion}},{key:"idp",get:function(){return this._idp}},{key:"userProfile",get:function(){return this._userProfile}}]),IdAssertion}();!function(){function IdValidation(e,t){(0,d.default)(this,IdValidation);var r=this;r.identity=e,r.contents=t}(0,y.default)(IdValidation,[{key:"validates",value:function(e,t){}}])}();t.default=m,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=function(){function AllowOverrides(){(0,o.default)(this,AllowOverrides)}return(0,a.default)(AllowOverrides,[{key:"combine",value:function(e){return-1!==e.indexOf(!0)||-1===e.indexOf(!1)&&"Not Applicable"}}]),AllowOverrides}();t.default=s,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=function(){function BlockOverrides(){(0,o.default)(this,BlockOverrides)}return(0,a.default)(BlockOverrides,[{key:"combine",value:function(e){return-1===e.indexOf(!1)&&(-1!==e.indexOf(!0)||"Not Applicable")}}]),BlockOverrides}();t.default=s,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=function(){function FirstApplicable(){(0,o.default)(this,FirstApplicable)}return(0,a.default)(FirstApplicable,[{key:"combine",value:function(e){for(var t in e)if("Not Applicable"!==e[t])return e[t];return"Not Applicable"}}]),FirstApplicable}();t.default=s,e.exports=t.default},function(e,t,r){"use strict";function storage(e,t){if(!e)throw new Error("The runtime factory is a needed parameter");return(0,o.default)(i.runtimeConfiguration.storageSchemas).forEach(function(r){a.hasOwnProperty(r)||(a[r]=e.storageManager(r,i.runtimeConfiguration.storageSchemas[r],t))}),a}function createSyncDB(e,t,r,n){var o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!t)throw new Error("The runtime factory is a needed parameter");var a=o||i.runtimeConfiguration.remoteStorage;return t.storageManager(e,r,n,a)}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.storage=storage,t.createSyncDB=createSyncDB;var i=r(151),a={}},function(e,t,r){e.exports={default:r(532),__esModule:!0}},function(e,t,r){e.exports={default:r(539),__esModule:!0}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(4),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(s),c=u.getLogger("SynSubscription"),l=function(){function Subscription(e,t,r,n){(0,o.default)(this,Subscription);var i=this,a=r+"/children/",s=r+"/changes";i._deleteListener=e.addListener(s,function(n){if("delete"===n.type){c.log("Subscription-DELETE: ",n);var o={type:"delete",from:n.from,to:t,body:{identity:n.body.identity,resource:r}};e.postMessage(o,function(e){c.log("Subscription-DELETE-REPLY: ",e),200===e.body.code&&i._releaseListeners()})}}),i._changeListener=n?e.addPublish(s):e.addForward(s,t),i._childrenListeners=[];var u=e.addPublish(a);if(i._childrenListeners.push(u),!n){var l=e.addForward(a,t);i._childrenListeners.push(l)}}return(0,a.default)(Subscription,[{key:"_releaseListeners",value:function(){var e=this;e._deleteListener.remove(),e._changeListener.remove(),e._childrenListeners.forEach(function(e){e.remove()})}}]),Subscription}();t.default=l,e.exports=t.default},function(e,t,r){r(223),e.exports=r(425)},function(e,t,r){"use strict";(function(e){function define(e,r,n){e[r]||Object[t](e,r,{writable:!0,configurable:!0,value:n})}if(r(224),r(421),r(422),e._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");e._babelPolyfill=!0;var t="defineProperty";define(String.prototype,"padLeft","".padStart),define(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function(e){[][e]&&define(Array,e,Function.call.bind([][e]))})}).call(t,r(154))},function(e,t,r){r(225),r(227),r(228),r(229),r(230),r(231),r(232),r(233),r(234),r(235),r(236),r(237),r(238),r(239),r(240),r(241),r(243),r(244),r(245),r(246),r(247),r(248),r(249),r(250),r(251),r(252),r(253),r(254),r(255),r(256),r(257),r(258),r(259),r(260),r(261),r(262),r(263),r(264),r(265),r(266),r(267),r(268),r(269),r(270),r(271),r(272),r(273),r(274),r(275),r(276),r(277),r(278),r(279),r(280),r(281),r(282),r(283),r(284),r(285),r(286),r(287),r(288),r(289),r(290),r(291),r(292),r(293),r(294),r(295),r(296),r(297),r(298),r(299),r(300),r(301),r(302),r(303),r(305),r(306),r(308),r(309),r(310),r(311),r(312),r(313),r(314),r(316),r(317),r(318),r(319),r(320),r(321),r(322),r(323),r(324),r(325),r(326),r(327),r(328),r(127),r(329),r(330),r(173),r(331),r(332),r(333),r(334),r(335),r(176),r(178),r(179),r(336),r(337),r(338),r(339),r(340),r(341),r(342),r(343),r(344),r(345),r(346),r(347),r(348),r(349),r(350),r(351),r(352),r(353),r(354),r(355),r(356),r(357),r(358),r(359),r(360),r(361),r(362),r(363),r(364),r(365),r(366),r(367),r(368),r(369),r(370),r(371),r(372),r(373),r(374),r(375),r(376),r(377),r(378),r(379),r(380),r(381),r(382),r(383),r(384),r(385),r(386),r(387),r(388),r(389),r(390),r(391),r(392),r(393),r(394),r(395),r(396),r(397),r(398),r(399),r(400),r(401),r(402),r(403),r(404),r(405),r(406),r(407),r(408),r(409),r(410),r(411),r(412),r(413),r(414),r(415),r(416),r(417),r(418),r(419),r(420),e.exports=r(31)},function(e,t,r){"use strict";var n=r(7),o=r(27),i=r(12),a=r(0),s=r(24),u=r(47).KEY,c=r(8),l=r(83),f=r(64),d=r(53),p=r(10),y=r(156),h=r(107),v=r(226),g=r(86),b=r(5),_=r(9),m=r(28),R=r(36),O=r(52),w=r(56),k=r(159),S=r(29),P=r(13),D=r(54),M=S.f,L=P.f,j=k.f,U=n.Symbol,E=n.JSON,x=E&&E.stringify,A=p("_hidden"),I=p("toPrimitive"),C={}.propertyIsEnumerable,T=l("symbol-registry"),q=l("symbols"),H=l("op-symbols"),N=Object.prototype,F="function"==typeof U,B=n.QObject,G=!B||!B.prototype||!B.prototype.findChild,K=i&&c(function(){return 7!=w(L({},"a",{get:function(){return L(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=M(N,t);n&&delete N[t],L(e,t,r),n&&e!==N&&L(N,t,n)}:L,V=function(e){var t=q[e]=w(U.prototype);return t._k=e,t},W=F&&"symbol"==typeof U.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof U},Y=function(e,t,r){return e===N&&Y(H,t,r),b(e),t=R(t,!0),b(r),o(q,t)?(r.enumerable?(o(e,A)&&e[A][t]&&(e[A][t]=!1),r=w(r,{enumerable:O(0,!1)})):(o(e,A)||L(e,A,O(1,{})),e[A][t]=!0),K(e,t,r)):L(e,t,r)},J=function(e,t){b(e);for(var r,n=v(t=m(t)),o=0,i=n.length;i>o;)Y(e,r=n[o++],t[r]);return e},z=function(e,t){return void 0===t?w(e):J(w(e),t)},X=function(e){var t=C.call(this,e=R(e,!0));return!(this===N&&o(q,e)&&!o(H,e))&&(!(t||!o(this,e)||!o(q,e)||o(this,A)&&this[A][e])||t)},$=function(e,t){if(e=m(e),t=R(t,!0),e!==N||!o(q,t)||o(H,t)){var r=M(e,t);return!r||!o(q,t)||o(e,A)&&e[A][t]||(r.enumerable=!0),r}},Q=function(e){for(var t,r=j(m(e)),n=[],i=0;r.length>i;)o(q,t=r[i++])||t==A||t==u||n.push(t);return n},Z=function(e){for(var t,r=e===N,n=j(r?H:m(e)),i=[],a=0;n.length>a;)!o(q,t=n[a++])||r&&!o(N,t)||i.push(q[t]);return i};F||(U=function(){if(this instanceof U)throw TypeError("Symbol is not a constructor!");var e=d(arguments.length>0?arguments[0]:void 0),t=function(r){this===N&&t.call(H,r),o(this,A)&&o(this[A],e)&&(this[A][e]=!1),K(this,e,O(1,r))};return i&&G&&K(N,e,{configurable:!0,set:t}),V(e)},s(U.prototype,"toString",function(){return this._k}),S.f=$,P.f=Y,r(57).f=k.f=Q,r(74).f=X,r(85).f=Z,i&&!r(48)&&s(N,"propertyIsEnumerable",X,!0),y.f=function(e){return V(p(e))}),a(a.G+a.W+a.F*!F,{Symbol:U});for(var ee="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),te=0;ee.length>te;)p(ee[te++]);for(var re=D(p.store),ne=0;re.length>ne;)h(re[ne++]);a(a.S+a.F*!F,"Symbol",{for:function(e){return o(T,e+="")?T[e]:T[e]=U(e)},keyFor:function(e){if(!W(e))throw TypeError(e+" is not a symbol!");for(var t in T)if(T[t]===e)return t},useSetter:function(){G=!0},useSimple:function(){G=!1}}),a(a.S+a.F*!F,"Object",{create:z,defineProperty:Y,defineProperties:J,getOwnPropertyDescriptor:$,getOwnPropertyNames:Q,getOwnPropertySymbols:Z}),E&&a(a.S+a.F*(!F||c(function(){var e=U();return"[null]"!=x([e])||"{}"!=x({a:e})||"{}"!=x(Object(e))})),"JSON",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(_(t)||void 0!==e)&&!W(e))return g(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!W(t))return t}),n[1]=t,x.apply(E,n)}}),U.prototype[I]||r(23)(U.prototype,I,U.prototype.valueOf),f(U,"Symbol"),f(Math,"Math",!0),f(n.JSON,"JSON",!0)},function(e,t,r){var n=r(54),o=r(85),i=r(74);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var a,s=r(e),u=i.f,c=0;s.length>c;)u.call(e,a=s[c++])&&t.push(a);return t}},function(e,t,r){var n=r(0);n(n.S,"Object",{create:r(56)})},function(e,t,r){var n=r(0);n(n.S+n.F*!r(12),"Object",{defineProperty:r(13).f})},function(e,t,r){var n=r(0);n(n.S+n.F*!r(12),"Object",{defineProperties:r(158)})},function(e,t,r){var n=r(28),o=r(29).f;r(39)("getOwnPropertyDescriptor",function(){return function(e,t){return o(n(e),t)}})},function(e,t,r){var n=r(19),o=r(30);r(39)("getPrototypeOf",function(){return function(e){return o(n(e))}})},function(e,t,r){var n=r(19),o=r(54);r(39)("keys",function(){return function(e){return o(n(e))}})},function(e,t,r){r(39)("getOwnPropertyNames",function(){return r(159).f})},function(e,t,r){var n=r(9),o=r(47).onFreeze;r(39)("freeze",function(e){return function(t){return e&&n(t)?e(o(t)):t}})},function(e,t,r){var n=r(9),o=r(47).onFreeze;r(39)("seal",function(e){return function(t){return e&&n(t)?e(o(t)):t}})},function(e,t,r){var n=r(9),o=r(47).onFreeze;r(39)("preventExtensions",function(e){return function(t){return e&&n(t)?e(o(t)):t}})},function(e,t,r){var n=r(9);r(39)("isFrozen",function(e){return function(t){return!n(t)||!!e&&e(t)}})},function(e,t,r){var n=r(9);r(39)("isSealed",function(e){return function(t){return!n(t)||!!e&&e(t)}})},function(e,t,r){var n=r(9);r(39)("isExtensible",function(e){return function(t){return!!n(t)&&(!e||e(t))}})},function(e,t,r){var n=r(0);n(n.S+n.F,"Object",{assign:r(160)})},function(e,t,r){var n=r(0);n(n.S,"Object",{is:r(242)})},function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},function(e,t,r){var n=r(0);n(n.S,"Object",{setPrototypeOf:r(111).set})},function(e,t,r){"use strict";var n=r(75),o={};o[r(10)("toStringTag")]="z",o+""!="[object z]"&&r(24)(Object.prototype,"toString",function(){return"[object "+n(this)+"]"},!0)},function(e,t,r){var n=r(0);n(n.P,"Function",{bind:r(161)})},function(e,t,r){var n=r(13).f,o=Function.prototype,i=/^\s*function ([^ (]*)/;"name"in o||r(12)&&n(o,"name",{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(e){return""}}})},function(e,t,r){"use strict";var n=r(9),o=r(30),i=r(10)("hasInstance"),a=Function.prototype;i in a||r(13).f(a,i,{value:function(e){if("function"!=typeof this||!n(e))return!1;if(!n(this.prototype))return e instanceof this;for(;e=o(e);)if(this.prototype===e)return!0;return!1}})},function(e,t,r){var n=r(0),o=r(163);n(n.G+n.F*(parseInt!=o),{parseInt:o})},function(e,t,r){var n=r(0),o=r(164);n(n.G+n.F*(parseFloat!=o),{parseFloat:o})},function(e,t,r){"use strict";var n=r(7),o=r(27),i=r(33),a=r(113),s=r(36),u=r(8),c=r(57).f,l=r(29).f,f=r(13).f,d=r(65).trim,p=n.Number,y=p,h=p.prototype,v="Number"==i(r(56)(h)),g="trim"in String.prototype,b=function(e){var t=s(e,!1);if("string"==typeof t&&t.length>2){t=g?t.trim():d(t,3);var r,n,o,i=t.charCodeAt(0);if(43===i||45===i){if(88===(r=t.charCodeAt(2))||120===r)return NaN}else if(48===i){switch(t.charCodeAt(1)){case 66:case 98:n=2,o=49;break;case 79:case 111:n=8,o=55;break;default:return+t}for(var a,u=t.slice(2),c=0,l=u.length;c<l;c++)if((a=u.charCodeAt(c))<48||a>o)return NaN;return parseInt(u,n)}}return+t};if(!p(" 0o1")||!p("0b1")||p("+0x1")){p=function(e){var t=arguments.length<1?0:e,r=this;return r instanceof p&&(v?u(function(){h.valueOf.call(r)}):"Number"!=i(r))?a(new y(b(t)),r,p):b(t)};for(var _,m=r(12)?c(y):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),R=0;m.length>R;R++)o(y,_=m[R])&&!o(p,_)&&f(p,_,l(y,_));p.prototype=h,h.constructor=p,r(24)(n,"Number",p)}},function(e,t,r){"use strict";var n=r(0),o=r(38),i=r(165),a=r(114),s=1..toFixed,u=Math.floor,c=[0,0,0,0,0,0],l="Number.toFixed: incorrect invocation!",f=function(e,t){for(var r=-1,n=t;++r<6;)n+=e*c[r],c[r]=n%1e7,n=u(n/1e7)},d=function(e){for(var t=6,r=0;--t>=0;)r+=c[t],c[t]=u(r/e),r=r%e*1e7},p=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==c[e]){var r=String(c[e]);t=""===t?r:t+a.call("0",7-r.length)+r}return t},y=function(e,t,r){return 0===t?r:t%2==1?y(e,t-1,r*e):y(e*e,t/2,r)},h=function(e){for(var t=0,r=e;r>=4096;)t+=12,r/=4096;for(;r>=2;)t+=1,r/=2;return t};n(n.P+n.F*(!!s&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!r(8)(function(){s.call({})})),"Number",{toFixed:function(e){var t,r,n,s,u=i(this,l),c=o(e),v="",g="0";if(c<0||c>20)throw RangeError(l);if(u!=u)return"NaN";if(u<=-1e21||u>=1e21)return String(u);if(u<0&&(v="-",u=-u),u>1e-21)if(t=h(u*y(2,69,1))-69,r=t<0?u*y(2,-t,1):u/y(2,t,1),r*=4503599627370496,(t=52-t)>0){for(f(0,r),n=c;n>=7;)f(1e7,0),n-=7;for(f(y(10,n,1),0),n=t-1;n>=23;)d(1<<23),n-=23;d(1<<n),f(1,1),d(2),g=p()}else f(0,r),f(1<<-t,0),g=p()+a.call("0",c);return c>0?(s=g.length,g=v+(s<=c?"0."+a.call("0",c-s)+g:g.slice(0,s-c)+"."+g.slice(s-c))):g=v+g,g}})},function(e,t,r){"use strict";var n=r(0),o=r(8),i=r(165),a=1..toPrecision;n(n.P+n.F*(o(function(){return"1"!==a.call(1,void 0)})||!o(function(){a.call({})})),"Number",{toPrecision:function(e){var t=i(this,"Number#toPrecision: incorrect invocation!");return void 0===e?a.call(t):a.call(t,e)}})},function(e,t,r){var n=r(0);n(n.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,t,r){var n=r(0),o=r(7).isFinite;n(n.S,"Number",{isFinite:function(e){return"number"==typeof e&&o(e)}})},function(e,t,r){var n=r(0);n(n.S,"Number",{isInteger:r(166)})},function(e,t,r){var n=r(0);n(n.S,"Number",{isNaN:function(e){return e!=e}})},function(e,t,r){var n=r(0),o=r(166),i=Math.abs;n(n.S,"Number",{isSafeInteger:function(e){return o(e)&&i(e)<=9007199254740991}})},function(e,t,r){var n=r(0);n(n.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,t,r){var n=r(0);n(n.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,t,r){var n=r(0),o=r(164);n(n.S+n.F*(Number.parseFloat!=o),"Number",{parseFloat:o})},function(e,t,r){var n=r(0),o=r(163);n(n.S+n.F*(Number.parseInt!=o),"Number",{parseInt:o})},function(e,t,r){var n=r(0),o=r(167),i=Math.sqrt,a=Math.acosh;n(n.S+n.F*!(a&&710==Math.floor(a(Number.MAX_VALUE))&&a(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:o(e-1+i(e-1)*i(e+1))}})},function(e,t,r){function asinh(e){return isFinite(e=+e)&&0!=e?e<0?-asinh(-e):Math.log(e+Math.sqrt(e*e+1)):e}var n=r(0),o=Math.asinh;n(n.S+n.F*!(o&&1/o(0)>0),"Math",{asinh:asinh})},function(e,t,r){var n=r(0),o=Math.atanh;n(n.S+n.F*!(o&&1/o(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,t,r){var n=r(0),o=r(115);n(n.S,"Math",{cbrt:function(e){return o(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,t,r){var n=r(0);n(n.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,t,r){var n=r(0),o=Math.exp;n(n.S,"Math",{cosh:function(e){return(o(e=+e)+o(-e))/2}})},function(e,t,r){var n=r(0),o=r(116);n(n.S+n.F*(o!=Math.expm1),"Math",{expm1:o})},function(e,t,r){var n=r(0);n(n.S,"Math",{fround:r(168)})},function(e,t,r){var n=r(0),o=Math.abs;n(n.S,"Math",{hypot:function(e,t){for(var r,n,i=0,a=0,s=arguments.length,u=0;a<s;)r=o(arguments[a++]),u<r?(n=u/r,i=i*n*n+1,u=r):r>0?(n=r/u,i+=n*n):i+=r;return u===1/0?1/0:u*Math.sqrt(i)}})},function(e,t,r){var n=r(0),o=Math.imul;n(n.S+n.F*r(8)(function(){return-5!=o(4294967295,5)||2!=o.length}),"Math",{imul:function(e,t){var r=+e,n=+t,o=65535&r,i=65535&n;return 0|o*i+((65535&r>>>16)*i+o*(65535&n>>>16)<<16>>>0)}})},function(e,t,r){var n=r(0);n(n.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,t,r){var n=r(0);n(n.S,"Math",{log1p:r(167)})},function(e,t,r){var n=r(0);n(n.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,t,r){var n=r(0);n(n.S,"Math",{sign:r(115)})},function(e,t,r){var n=r(0),o=r(116),i=Math.exp;n(n.S+n.F*r(8)(function(){return-2e-17!=!Math.sinh(-2e-17)}),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(o(e)-o(-e))/2:(i(e-1)-i(-e-1))*(Math.E/2)}})},function(e,t,r){var n=r(0),o=r(116),i=Math.exp;n(n.S,"Math",{tanh:function(e){var t=o(e=+e),r=o(-e);return t==1/0?1:r==1/0?-1:(t-r)/(i(e)+i(-e))}})},function(e,t,r){var n=r(0);n(n.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,t,r){var n=r(0),o=r(55),i=String.fromCharCode,a=String.fromCodePoint;n(n.S+n.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(e){for(var t,r=[],n=arguments.length,a=0;n>a;){if(t=+arguments[a++],o(t,1114111)!==t)throw RangeError(t+" is not a valid code point");r.push(t<65536?i(t):i(55296+((t-=65536)>>10),t%1024+56320))}return r.join("")}})},function(e,t,r){var n=r(0),o=r(28),i=r(14);n(n.S,"String",{raw:function(e){for(var t=o(e.raw),r=i(t.length),n=arguments.length,a=[],s=0;r>s;)a.push(String(t[s++])),s<n&&a.push(String(arguments[s]));return a.join("")}})},function(e,t,r){"use strict";r(65)("trim",function(e){return function(){return e(this,3)}})},function(e,t,r){"use strict";var n=r(117)(!0);r(118)(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})})},function(e,t,r){"use strict";var n=r(0),o=r(117)(!1);n(n.P,"String",{codePointAt:function(e){return o(this,e)}})},function(e,t,r){"use strict";var n=r(0),o=r(14),i=r(120),a="".endsWith;n(n.P+n.F*r(121)("endsWith"),"String",{endsWith:function(e){var t=i(this,e,"endsWith"),r=arguments.length>1?arguments[1]:void 0,n=o(t.length),s=void 0===r?n:Math.min(o(r),n),u=String(e);return a?a.call(t,u,s):t.slice(s-u.length,s)===u}})},function(e,t,r){"use strict";var n=r(0),o=r(120);n(n.P+n.F*r(121)("includes"),"String",{includes:function(e){return!!~o(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){var n=r(0);n(n.P,"String",{repeat:r(114)})},function(e,t,r){"use strict";var n=r(0),o=r(14),i=r(120),a="".startsWith;n(n.P+n.F*r(121)("startsWith"),"String",{startsWith:function(e){var t=i(this,e,"startsWith"),r=o(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return a?a.call(t,n,r):t.slice(r,r+n.length)===n}})},function(e,t,r){"use strict";r(25)("anchor",function(e){return function(t){return e(this,"a","name",t)}})},function(e,t,r){"use strict";r(25)("big",function(e){return function(){return e(this,"big","","")}})},function(e,t,r){"use strict";r(25)("blink",function(e){return function(){return e(this,"blink","","")}})},function(e,t,r){"use strict";r(25)("bold",function(e){return function(){return e(this,"b","","")}})},function(e,t,r){"use strict";r(25)("fixed",function(e){return function(){return e(this,"tt","","")}})},function(e,t,r){"use strict";r(25)("fontcolor",function(e){return function(t){return e(this,"font","color",t)}})},function(e,t,r){"use strict";r(25)("fontsize",function(e){return function(t){return e(this,"font","size",t)}})},function(e,t,r){"use strict";r(25)("italics",function(e){return function(){return e(this,"i","","")}})},function(e,t,r){"use strict";r(25)("link",function(e){return function(t){return e(this,"a","href",t)}})},function(e,t,r){"use strict";r(25)("small",function(e){return function(){return e(this,"small","","")}})},function(e,t,r){"use strict";r(25)("strike",function(e){return function(){return e(this,"strike","","")}})},function(e,t,r){"use strict";r(25)("sub",function(e){return function(){return e(this,"sub","","")}})},function(e,t,r){"use strict";r(25)("sup",function(e){return function(){return e(this,"sup","","")}})},function(e,t,r){var n=r(0);n(n.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,t,r){"use strict";var n=r(0),o=r(19),i=r(36);n(n.P+n.F*r(8)(function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}),"Date",{toJSON:function(e){var t=o(this),r=i(t);return"number"!=typeof r||isFinite(r)?t.toISOString():null}})},function(e,t,r){var n=r(0),o=r(304);n(n.P+n.F*(Date.prototype.toISOString!==o),"Date",{toISOString:o})},function(e,t,r){"use strict";var n=r(8),o=Date.prototype.getTime,i=Date.prototype.toISOString,a=function(e){return e>9?e:"0"+e};e.exports=n(function(){return"0385-07-25T07:06:39.999Z"!=i.call(new Date(-5e13-1))})||!n(function(){i.call(new Date(NaN))})?function(){if(!isFinite(o.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),r=e.getUTCMilliseconds(),n=t<0?"-":t>9999?"+":"";return n+("00000"+Math.abs(t)).slice(n?-6:-4)+"-"+a(e.getUTCMonth()+1)+"-"+a(e.getUTCDate())+"T"+a(e.getUTCHours())+":"+a(e.getUTCMinutes())+":"+a(e.getUTCSeconds())+"."+(r>99?r:"0"+a(r))+"Z"}:i},function(e,t,r){var n=Date.prototype,o=n.toString,i=n.getTime;new Date(NaN)+""!="Invalid Date"&&r(24)(n,"toString",function(){var e=i.call(this);return e===e?o.call(this):"Invalid Date"})},function(e,t,r){var n=r(10)("toPrimitive"),o=Date.prototype;n in o||r(23)(o,n,r(307))},function(e,t,r){"use strict";var n=r(5),o=r(36);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return o(n(this),"number"!=e)}},function(e,t,r){var n=r(0);n(n.S,"Array",{isArray:r(86)})},function(e,t,r){"use strict";var n=r(32),o=r(0),i=r(19),a=r(169),s=r(122),u=r(14),c=r(123),l=r(124);o(o.S+o.F*!r(88)(function(e){Array.from(e)}),"Array",{from:function(e){var t,r,o,f,d=i(e),p="function"==typeof this?this:Array,y=arguments.length,h=y>1?arguments[1]:void 0,v=void 0!==h,g=0,b=l(d);if(v&&(h=n(h,y>2?arguments[2]:void 0,2)),void 0==b||p==Array&&s(b))for(t=u(d.length),r=new p(t);t>g;g++)c(r,g,v?h(d[g],g):d[g]);else for(f=b.call(d),r=new p;!(o=f.next()).done;g++)c(r,g,v?a(f,h,[o.value,g],!0):o.value);return r.length=g,r}})},function(e,t,r){"use strict";var n=r(0),o=r(123);n(n.S+n.F*r(8)(function(){function F(){}return!(Array.of.call(F)instanceof F)}),"Array",{of:function(){for(var e=0,t=arguments.length,r=new("function"==typeof this?this:Array)(t);t>e;)o(r,e,arguments[e++]);return r.length=t,r}})},function(e,t,r){"use strict";var n=r(0),o=r(28),i=[].join;n(n.P+n.F*(r(73)!=Object||!r(34)(i)),"Array",{join:function(e){return i.call(o(this),void 0===e?",":e)}})},function(e,t,r){"use strict";var n=r(0),o=r(110),i=r(33),a=r(55),s=r(14),u=[].slice;n(n.P+n.F*r(8)(function(){o&&u.call(o)}),"Array",{slice:function(e,t){var r=s(this.length),n=i(this);if(t=void 0===t?r:t,"Array"==n)return u.call(this,e,t);for(var o=a(e,r),c=a(t,r),l=s(c-o),f=new Array(l),d=0;d<l;d++)f[d]="String"==n?this.charAt(o+d):this[o+d];return f}})},function(e,t,r){"use strict";var n=r(0),o=r(20),i=r(19),a=r(8),s=[].sort,u=[1,2,3];n(n.P+n.F*(a(function(){u.sort(void 0)})||!a(function(){u.sort(null)})||!r(34)(s)),"Array",{sort:function(e){return void 0===e?s.call(i(this)):s.call(i(this),o(e))}})},function(e,t,r){"use strict";var n=r(0),o=r(40)(0),i=r(34)([].forEach,!0);n(n.P+n.F*!i,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},function(e,t,r){var n=r(9),o=r(86),i=r(10)("species");e.exports=function(e){var t;return o(e)&&(t=e.constructor,"function"!=typeof t||t!==Array&&!o(t.prototype)||(t=void 0),n(t)&&null===(t=t[i])&&(t=void 0)),void 0===t?Array:t}},function(e,t,r){"use strict";var n=r(0),o=r(40)(1);n(n.P+n.F*!r(34)([].map,!0),"Array",{map:function(e){return o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(0),o=r(40)(2);n(n.P+n.F*!r(34)([].filter,!0),"Array",{filter:function(e){return o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(0),o=r(40)(3);n(n.P+n.F*!r(34)([].some,!0),"Array",{some:function(e){return o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(0),o=r(40)(4);n(n.P+n.F*!r(34)([].every,!0),"Array",{every:function(e){return o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(0),o=r(170);n(n.P+n.F*!r(34)([].reduce,!0),"Array",{reduce:function(e){return o(this,e,arguments.length,arguments[1],!1)}})},function(e,t,r){"use strict";var n=r(0),o=r(170);n(n.P+n.F*!r(34)([].reduceRight,!0),"Array",{reduceRight:function(e){return o(this,e,arguments.length,arguments[1],!0)}})},function(e,t,r){"use strict";var n=r(0),o=r(84)(!1),i=[].indexOf,a=!!i&&1/[1].indexOf(1,-0)<0;n(n.P+n.F*(a||!r(34)(i)),"Array",{indexOf:function(e){return a?i.apply(this,arguments)||0:o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(0),o=r(28),i=r(38),a=r(14),s=[].lastIndexOf,u=!!s&&1/[1].lastIndexOf(1,-0)<0;n(n.P+n.F*(u||!r(34)(s)),"Array",{lastIndexOf:function(e){if(u)return s.apply(this,arguments)||0;var t=o(this),r=a(t.length),n=r-1;for(arguments.length>1&&(n=Math.min(n,i(arguments[1]))),n<0&&(n=r+n);n>=0;n--)if(n in t&&t[n]===e)return n||0;return-1}})},function(e,t,r){var n=r(0);n(n.P,"Array",{copyWithin:r(171)}),r(49)("copyWithin")},function(e,t,r){var n=r(0);n(n.P,"Array",{fill:r(126)}),r(49)("fill")},function(e,t,r){"use strict";var n=r(0),o=r(40)(5),i=!0;"find"in[]&&Array(1).find(function(){i=!1}),n(n.P+n.F*i,"Array",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),r(49)("find")},function(e,t,r){"use strict";var n=r(0),o=r(40)(6),i="findIndex",a=!0;i in[]&&Array(1)[i](function(){a=!1}),n(n.P+n.F*a,"Array",{findIndex:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),r(49)(i)},function(e,t,r){r(58)("Array")},function(e,t,r){var n=r(7),o=r(113),i=r(13).f,a=r(57).f,s=r(87),u=r(89),c=n.RegExp,l=c,f=c.prototype,d=/a/g,p=/a/g,y=new c(d)!==d;if(r(12)&&(!y||r(8)(function(){return p[r(10)("match")]=!1,c(d)!=d||c(p)==p||"/a/i"!=c(d,"i")}))){c=function(e,t){var r=this instanceof c,n=s(e),i=void 0===t;return!r&&n&&e.constructor===c&&i?e:o(y?new l(n&&!i?e.source:e,t):l((n=e instanceof c)?e.source:e,n&&i?u.call(e):t),r?this:f,c)};for(var h=a(l),v=0;h.length>v;)!function(e){e in c||i(c,e,{configurable:!0,get:function(){return l[e]},set:function(t){l[e]=t}})}(h[v++]);f.constructor=c,c.prototype=f,r(24)(n,"RegExp",c)}r(58)("RegExp")},function(e,t,r){"use strict";r(173);var n=r(5),o=r(89),i=r(12),a=/./.toString,s=function(e){r(24)(RegExp.prototype,"toString",e,!0)};r(8)(function(){return"/a/b"!=a.call({source:"a",flags:"b"})})?s(function(){var e=n(this);return"/".concat(e.source,"/","flags"in e?e.flags:!i&&e instanceof RegExp?o.call(e):void 0)}):"toString"!=a.name&&s(function(){return a.call(this)})},function(e,t,r){r(90)("match",1,function(e,t,r){return[function(r){"use strict";var n=e(this),o=void 0==r?void 0:r[t];return void 0!==o?o.call(r,n):new RegExp(r)[t](String(n))},r]})},function(e,t,r){r(90)("replace",2,function(e,t,r){return[function(n,o){"use strict";var i=e(this),a=void 0==n?void 0:n[t];return void 0!==a?a.call(n,i,o):r.call(String(i),n,o)},r]})},function(e,t,r){r(90)("search",1,function(e,t,r){return[function(r){"use strict";var n=e(this),o=void 0==r?void 0:r[t];return void 0!==o?o.call(r,n):new RegExp(r)[t](String(n))},r]})},function(e,t,r){r(90)("split",2,function(e,t,n){"use strict";var o=r(87),i=n,a=[].push,s="length";if("c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[s]||2!="ab".split(/(?:ab)*/)[s]||4!=".".split(/(.?)(.?)/)[s]||".".split(/()()/)[s]>1||"".split(/.?/)[s]){var u=void 0===/()??/.exec("")[1];n=function(e,t){var r=String(this);if(void 0===e&&0===t)return[];if(!o(e))return i.call(r,e,t);var n,c,l,f,d,p=[],y=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),h=0,v=void 0===t?4294967295:t>>>0,g=new RegExp(e.source,y+"g");for(u||(n=new RegExp("^"+g.source+"$(?!\\s)",y));(c=g.exec(r))&&!((l=c.index+c[0][s])>h&&(p.push(r.slice(h,c.index)),!u&&c[s]>1&&c[0].replace(n,function(){for(d=1;d<arguments[s]-2;d++)void 0===arguments[d]&&(c[d]=void 0)}),c[s]>1&&c.index<r[s]&&a.apply(p,c.slice(1)),f=c[0][s],h=l,p[s]>=v));)g.lastIndex===c.index&&g.lastIndex++;return h===r[s]?!f&&g.test("")||p.push(""):p.push(r.slice(h)),p[s]>v?p.slice(0,v):p}}else"0".split(void 0,0)[s]&&(n=function(e,t){return void 0===e&&0===t?[]:i.call(this,e,t)});return[function(r,o){var i=e(this),a=void 0==r?void 0:r[t];return void 0!==a?a.call(r,i,o):n.call(String(i),r,o)},n]})},function(e,t,r){"use strict";var n,o,i,a,s=r(48),u=r(7),c=r(32),l=r(75),f=r(0),d=r(9),p=r(20),y=r(59),h=r(60),v=r(91),g=r(128).set,b=r(129)(),_=r(130),m=r(174),R=r(92),O=r(175),w=u.TypeError,k=u.process,S=k&&k.versions,P=S&&S.v8||"",D=u.Promise,M="process"==l(k),L=function(){},j=o=_.f,U=!!function(){try{var e=D.resolve(1),t=(e.constructor={})[r(10)("species")]=function(e){e(L,L)};return(M||"function"==typeof PromiseRejectionEvent)&&e.then(L)instanceof t&&0!==P.indexOf("6.6")&&-1===R.indexOf("Chrome/66")}catch(e){}}(),E=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},x=function(e,t){if(!e._n){e._n=!0;var r=e._c;b(function(){for(var n=e._v,o=1==e._s,i=0;r.length>i;)!function(t){var r,i,a,s=o?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{s?(o||(2==e._h&&C(e),e._h=1),!0===s?r=n:(l&&l.enter(),r=s(n),l&&(l.exit(),a=!0)),r===t.promise?c(w("Promise-chain cycle")):(i=E(r))?i.call(r,u,c):u(r)):c(n)}catch(e){l&&!a&&l.exit(),c(e)}}(r[i++]);e._c=[],e._n=!1,t&&!e._h&&A(e)})}},A=function(e){g.call(u,function(){var t,r,n,o=e._v,i=I(e);if(i&&(t=m(function(){M?k.emit("unhandledRejection",o,e):(r=u.onunhandledrejection)?r({promise:e,reason:o}):(n=u.console)&&n.error&&n.error("Unhandled promise rejection",o)}),e._h=M||I(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},I=function(e){return 1!==e._h&&0===(e._a||e._c).length},C=function(e){g.call(u,function(){var t;M?k.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},T=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),x(t,!0))},q=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw w("Promise can't be resolved itself");(t=E(e))?b(function(){var n={_w:r,_d:!1};try{t.call(e,c(q,n,1),c(T,n,1))}catch(e){T.call(n,e)}}):(r._v=e,r._s=1,x(r,!1))}catch(e){T.call({_w:r,_d:!1},e)}}};U||(D=function(e){y(this,D,"Promise","_h"),p(e),n.call(this);try{e(c(q,this,1),c(T,this,1))}catch(e){T.call(this,e)}},n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},n.prototype=r(61)(D.prototype,{then:function(e,t){var r=j(v(this,D));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=M?k.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&x(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=c(q,e,1),this.reject=c(T,e,1)},_.f=j=function(e){return e===D||e===a?new i(e):o(e)}),f(f.G+f.W+f.F*!U,{Promise:D}),r(64)(D,"Promise"),r(58)("Promise"),a=r(31).Promise,f(f.S+f.F*!U,"Promise",{reject:function(e){var t=j(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(s||!U),"Promise",{resolve:function(e){return O(s&&this===a?D:this,e)}}),f(f.S+f.F*!(U&&r(88)(function(e){D.all(e).catch(L)})),"Promise",{all:function(e){var t=this,r=j(t),n=r.resolve,o=r.reject,i=m(function(){var r=[],i=0,a=1;h(e,!1,function(e){var s=i++,u=!1;r.push(void 0),a++,t.resolve(e).then(function(e){u||(u=!0,r[s]=e,--a||n(r))},o)}),--a||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=j(t),n=r.reject,o=m(function(){h(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t,r){"use strict";var n=r(180),o=r(67);r(93)("WeakSet",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return n.def(o(this,"WeakSet"),e,!0)}},n,!1,!0)},function(e,t,r){"use strict";var n=r(0),o=r(94),i=r(131),a=r(5),s=r(55),u=r(14),c=r(9),l=r(7).ArrayBuffer,f=r(91),d=i.ArrayBuffer,p=i.DataView,y=o.ABV&&l.isView,h=d.prototype.slice,v=o.VIEW;n(n.G+n.W+n.F*(l!==d),{ArrayBuffer:d}),n(n.S+n.F*!o.CONSTR,"ArrayBuffer",{isView:function(e){return y&&y(e)||c(e)&&v in e}}),n(n.P+n.U+n.F*r(8)(function(){return!new d(2).slice(1,void 0).byteLength}),"ArrayBuffer",{slice:function(e,t){if(void 0!==h&&void 0===t)return h.call(a(this),e);for(var r=a(this).byteLength,n=s(e,r),o=s(void 0===t?r:t,r),i=new(f(this,d))(u(o-n)),c=new p(this),l=new p(i),y=0;n<o;)l.setUint8(y++,c.getUint8(n++));return i}}),r(58)("ArrayBuffer")},function(e,t,r){var n=r(0);n(n.G+n.W+n.F*!r(94).ABV,{DataView:r(131).DataView})},function(e,t,r){r(42)("Int8",1,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(42)("Uint8",1,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(42)("Uint8",1,function(e){return function(t,r,n){return e(this,t,r,n)}},!0)},function(e,t,r){r(42)("Int16",2,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(42)("Uint16",2,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(42)("Int32",4,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(42)("Uint32",4,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(42)("Float32",4,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(42)("Float64",8,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){var n=r(0),o=r(20),i=r(5),a=(r(7).Reflect||{}).apply,s=Function.apply;n(n.S+n.F*!r(8)(function(){a(function(){})}),"Reflect",{apply:function(e,t,r){var n=o(e),u=i(r);return a?a(n,t,u):s.call(n,t,u)}})},function(e,t,r){var n=r(0),o=r(56),i=r(20),a=r(5),s=r(9),u=r(8),c=r(161),l=(r(7).Reflect||{}).construct,f=u(function(){function F(){}return!(l(function(){},[],F)instanceof F)}),d=!u(function(){l(function(){})});n(n.S+n.F*(f||d),"Reflect",{construct:function(e,t){i(e),a(t);var r=arguments.length<3?e:i(arguments[2]);if(d&&!f)return l(e,t,r);if(e==r){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var n=[null];return n.push.apply(n,t),new(c.apply(e,n))}var u=r.prototype,p=o(s(u)?u:Object.prototype),y=Function.apply.call(e,p,t);return s(y)?y:p}})},function(e,t,r){var n=r(13),o=r(0),i=r(5),a=r(36);o(o.S+o.F*r(8)(function(){Reflect.defineProperty(n.f({},1,{value:1}),1,{value:2})}),"Reflect",{defineProperty:function(e,t,r){i(e),t=a(t,!0),i(r);try{return n.f(e,t,r),!0}catch(e){return!1}}})},function(e,t,r){var n=r(0),o=r(29).f,i=r(5);n(n.S,"Reflect",{deleteProperty:function(e,t){var r=o(i(e),t);return!(r&&!r.configurable)&&delete e[t]}})},function(e,t,r){"use strict";var n=r(0),o=r(5),i=function(e){this._t=o(e),this._i=0;var t,r=this._k=[];for(t in e)r.push(t)};r(119)(i,"Object",function(){var e,t=this,r=t._k;do{if(t._i>=r.length)return{value:void 0,done:!0}}while(!((e=r[t._i++])in t._t));return{value:e,done:!1}}),n(n.S,"Reflect",{enumerate:function(e){return new i(e)}})},function(e,t,r){function get(e,t){var r,a,c=arguments.length<3?e:arguments[2];return u(e)===c?e[t]:(r=n.f(e,t))?i(r,"value")?r.value:void 0!==r.get?r.get.call(c):void 0:s(a=o(e))?get(a,t,c):void 0}var n=r(29),o=r(30),i=r(27),a=r(0),s=r(9),u=r(5);a(a.S,"Reflect",{get:get})},function(e,t,r){var n=r(29),o=r(0),i=r(5);o(o.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return n.f(i(e),t)}})},function(e,t,r){var n=r(0),o=r(30),i=r(5);n(n.S,"Reflect",{getPrototypeOf:function(e){return o(i(e))}})},function(e,t,r){var n=r(0);n(n.S,"Reflect",{has:function(e,t){return t in e}})},function(e,t,r){var n=r(0),o=r(5),i=Object.isExtensible;n(n.S,"Reflect",{isExtensible:function(e){return o(e),!i||i(e)}})},function(e,t,r){var n=r(0);n(n.S,"Reflect",{ownKeys:r(182)})},function(e,t,r){var n=r(0),o=r(5),i=Object.preventExtensions;n(n.S,"Reflect",{preventExtensions:function(e){o(e);try{return i&&i(e),!0}catch(e){return!1}}})},function(e,t,r){function set(e,t,r){var s,f,d=arguments.length<4?e:arguments[3],p=o.f(c(e),t);if(!p){if(l(f=i(e)))return set(f,t,r,d);p=u(0)}if(a(p,"value")){if(!1===p.writable||!l(d))return!1;if(s=o.f(d,t)){if(s.get||s.set||!1===s.writable)return!1;s.value=r,n.f(d,t,s)}else n.f(d,t,u(0,r));return!0}return void 0!==p.set&&(p.set.call(d,r),!0)}var n=r(13),o=r(29),i=r(30),a=r(27),s=r(0),u=r(52),c=r(5),l=r(9);s(s.S,"Reflect",{set:set})},function(e,t,r){var n=r(0),o=r(111);o&&n(n.S,"Reflect",{setPrototypeOf:function(e,t){o.check(e,t);try{return o.set(e,t),!0}catch(e){return!1}}})},function(e,t,r){"use strict";var n=r(0),o=r(84)(!0);n(n.P,"Array",{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),r(49)("includes")},function(e,t,r){"use strict";var n=r(0),o=r(183),i=r(19),a=r(14),s=r(20),u=r(125);n(n.P,"Array",{flatMap:function(e){var t,r,n=i(this);return s(e),t=a(n.length),r=u(n,0),o(r,n,n,t,0,1,e,arguments[1]),r}}),r(49)("flatMap")},function(e,t,r){"use strict";var n=r(0),o=r(183),i=r(19),a=r(14),s=r(38),u=r(125);n(n.P,"Array",{flatten:function(){var e=arguments[0],t=i(this),r=a(t.length),n=u(t,0);return o(n,t,t,r,0,void 0===e?1:s(e)),n}}),r(49)("flatten")},function(e,t,r){"use strict";var n=r(0),o=r(117)(!0);n(n.P,"String",{at:function(e){return o(this,e)}})},function(e,t,r){"use strict";var n=r(0),o=r(184),i=r(92);n(n.P+n.F*/Version\/10\.\d+(\.\d+)? Safari\//.test(i),"String",{padStart:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,t,r){"use strict";var n=r(0),o=r(184),i=r(92);n(n.P+n.F*/Version\/10\.\d+(\.\d+)? Safari\//.test(i),"String",{padEnd:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,t,r){"use strict";r(65)("trimLeft",function(e){return function(){return e(this,1)}},"trimStart")},function(e,t,r){"use strict";r(65)("trimRight",function(e){return function(){return e(this,2)}},"trimEnd")},function(e,t,r){"use strict";var n=r(0),o=r(37),i=r(14),a=r(87),s=r(89),u=RegExp.prototype,c=function(e,t){this._r=e,this._s=t};r(119)(c,"RegExp String",function(){var e=this._r.exec(this._s);return{value:e,done:null===e}}),n(n.P,"String",{matchAll:function(e){if(o(this),!a(e))throw TypeError(e+" is not a regexp!");var t=String(this),r="flags"in u?String(e.flags):s.call(e),n=new RegExp(e.source,~r.indexOf("g")?r:"g"+r);return n.lastIndex=i(e.lastIndex),new c(n,t)}})},function(e,t,r){r(107)("asyncIterator")},function(e,t,r){r(107)("observable")},function(e,t,r){var n=r(0),o=r(182),i=r(28),a=r(29),s=r(123);n(n.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,r,n=i(e),u=a.f,c=o(n),l={},f=0;c.length>f;)void 0!==(r=u(n,t=c[f++]))&&s(l,t,r);return l}})},function(e,t,r){var n=r(0),o=r(185)(!1);n(n.S,"Object",{values:function(e){return o(e)}})},function(e,t,r){var n=r(0),o=r(185)(!0);n(n.S,"Object",{entries:function(e){return o(e)}})},function(e,t,r){"use strict";var n=r(0),o=r(19),i=r(20),a=r(13);r(12)&&n(n.P+r(95),"Object",{__defineGetter__:function(e,t){a.f(o(this),e,{get:i(t),enumerable:!0,configurable:!0})}})},function(e,t,r){"use strict";var n=r(0),o=r(19),i=r(20),a=r(13);r(12)&&n(n.P+r(95),"Object",{__defineSetter__:function(e,t){a.f(o(this),e,{set:i(t),enumerable:!0,configurable:!0})}})},function(e,t,r){"use strict";var n=r(0),o=r(19),i=r(36),a=r(30),s=r(29).f;r(12)&&n(n.P+r(95),"Object",{__lookupGetter__:function(e){var t,r=o(this),n=i(e,!0);do{if(t=s(r,n))return t.get}while(r=a(r))}})},function(e,t,r){"use strict";var n=r(0),o=r(19),i=r(36),a=r(30),s=r(29).f;r(12)&&n(n.P+r(95),"Object",{__lookupSetter__:function(e){var t,r=o(this),n=i(e,!0);do{if(t=s(r,n))return t.set}while(r=a(r))}})},function(e,t,r){var n=r(0);n(n.P+n.R,"Map",{toJSON:r(186)("Map")})},function(e,t,r){var n=r(0);n(n.P+n.R,"Set",{toJSON:r(186)("Set")})},function(e,t,r){r(96)("Map")},function(e,t,r){r(96)("Set")},function(e,t,r){r(96)("WeakMap")},function(e,t,r){r(96)("WeakSet")},function(e,t,r){r(97)("Map")},function(e,t,r){r(97)("Set")},function(e,t,r){r(97)("WeakMap")},function(e,t,r){r(97)("WeakSet")},function(e,t,r){var n=r(0);n(n.G,{global:r(7)})},function(e,t,r){var n=r(0);n(n.S,"System",{global:r(7)})},function(e,t,r){var n=r(0),o=r(33);n(n.S,"Error",{isError:function(e){return"Error"===o(e)}})},function(e,t,r){var n=r(0);n(n.S,"Math",{clamp:function(e,t,r){return Math.min(r,Math.max(t,e))}})},function(e,t,r){var n=r(0);n(n.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(e,t,r){var n=r(0),o=180/Math.PI;n(n.S,"Math",{degrees:function(e){return e*o}})},function(e,t,r){var n=r(0),o=r(188),i=r(168);n(n.S,"Math",{fscale:function(e,t,r,n,a){return i(o(e,t,r,n,a))}})},function(e,t,r){var n=r(0);n(n.S,"Math",{iaddh:function(e,t,r,n){var o=e>>>0,i=t>>>0,a=r>>>0;return i+(n>>>0)+((o&a|(o|a)&~(o+a>>>0))>>>31)|0}})},function(e,t,r){var n=r(0);n(n.S,"Math",{isubh:function(e,t,r,n){var o=e>>>0,i=t>>>0,a=r>>>0;return i-(n>>>0)-((~o&a|~(o^a)&o-a>>>0)>>>31)|0}})},function(e,t,r){var n=r(0);n(n.S,"Math",{imulh:function(e,t){var r=+e,n=+t,o=65535&r,i=65535&n,a=r>>16,s=n>>16,u=(a*i>>>0)+(o*i>>>16);return a*s+(u>>16)+((o*s>>>0)+(65535&u)>>16)}})},function(e,t,r){var n=r(0);n(n.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(e,t,r){var n=r(0),o=Math.PI/180;n(n.S,"Math",{radians:function(e){return e*o}})},function(e,t,r){var n=r(0);n(n.S,"Math",{scale:r(188)})},function(e,t,r){var n=r(0);n(n.S,"Math",{umulh:function(e,t){var r=+e,n=+t,o=65535&r,i=65535&n,a=r>>>16,s=n>>>16,u=(a*i>>>0)+(o*i>>>16);return a*s+(u>>>16)+((o*s>>>0)+(65535&u)>>>16)}})},function(e,t,r){var n=r(0);n(n.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},function(e,t,r){"use strict";var n=r(0),o=r(31),i=r(7),a=r(91),s=r(175);n(n.P+n.R,"Promise",{finally:function(e){var t=a(this,o.Promise||i.Promise),r="function"==typeof e;return this.then(r?function(r){return s(t,e()).then(function(){return r})}:e,r?function(r){return s(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){"use strict";var n=r(0),o=r(130),i=r(174);n(n.S,"Promise",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},function(e,t,r){var n=r(43),o=r(5),i=n.key,a=n.set;n.exp({defineMetadata:function(e,t,r,n){a(e,t,o(r),i(n))}})},function(e,t,r){var n=r(43),o=r(5),i=n.key,a=n.map,s=n.store;n.exp({deleteMetadata:function(e,t){var r=arguments.length<3?void 0:i(arguments[2]),n=a(o(t),r,!1);if(void 0===n||!n.delete(e))return!1;if(n.size)return!0;var u=s.get(t);return u.delete(r),!!u.size||s.delete(t)}})},function(e,t,r){var n=r(43),o=r(5),i=r(30),a=n.has,s=n.get,u=n.key,c=function(e,t,r){if(a(e,t,r))return s(e,t,r);var n=i(t);return null!==n?c(e,n,r):void 0};n.exp({getMetadata:function(e,t){return c(e,o(t),arguments.length<3?void 0:u(arguments[2]))}})},function(e,t,r){var n=r(178),o=r(187),i=r(43),a=r(5),s=r(30),u=i.keys,c=i.key,l=function(e,t){var r=u(e,t),i=s(e);if(null===i)return r;var a=l(i,t);return a.length?r.length?o(new n(r.concat(a))):a:r};i.exp({getMetadataKeys:function(e){return l(a(e),arguments.length<2?void 0:c(arguments[1]))}})},function(e,t,r){var n=r(43),o=r(5),i=n.get,a=n.key;n.exp({getOwnMetadata:function(e,t){return i(e,o(t),arguments.length<3?void 0:a(arguments[2]))}})},function(e,t,r){var n=r(43),o=r(5),i=n.keys,a=n.key;n.exp({getOwnMetadataKeys:function(e){return i(o(e),arguments.length<2?void 0:a(arguments[1]))}})},function(e,t,r){var n=r(43),o=r(5),i=r(30),a=n.has,s=n.key,u=function(e,t,r){if(a(e,t,r))return!0;var n=i(t);return null!==n&&u(e,n,r)};n.exp({hasMetadata:function(e,t){return u(e,o(t),arguments.length<3?void 0:s(arguments[2]))}})},function(e,t,r){var n=r(43),o=r(5),i=n.has,a=n.key;n.exp({hasOwnMetadata:function(e,t){return i(e,o(t),arguments.length<3?void 0:a(arguments[2]))}})},function(e,t,r){var n=r(43),o=r(5),i=r(20),a=n.key,s=n.set;n.exp({metadata:function(e,t){return function(r,n){s(e,t,(void 0!==n?o:i)(r),a(n))}}})},function(e,t,r){var n=r(0),o=r(129)(),i=r(7).process,a="process"==r(33)(i);n(n.G,{asap:function(e){var t=a&&i.domain;o(t?t.bind(e):e)}})},function(e,t,r){"use strict";var n=r(0),o=r(7),i=r(31),a=r(129)(),s=r(10)("observable"),u=r(20),c=r(5),l=r(59),f=r(61),d=r(23),p=r(60),y=p.RETURN,h=function(e){return null==e?void 0:u(e)},v=function(e){var t=e._c;t&&(e._c=void 0,t())},g=function(e){return void 0===e._o},b=function(e){g(e)||(e._o=void 0,v(e))},_=function(e,t){c(e),this._c=void 0,this._o=e,e=new m(this);try{var r=t(e),n=r;null!=r&&("function"==typeof r.unsubscribe?r=function(){n.unsubscribe()}:u(r),this._c=r)}catch(t){return void e.error(t)}g(this)&&v(this)};_.prototype=f({},{unsubscribe:function(){b(this)}});var m=function(e){this._s=e};m.prototype=f({},{next:function(e){var t=this._s;if(!g(t)){var r=t._o;try{var n=h(r.next);if(n)return n.call(r,e)}catch(e){try{b(t)}finally{throw e}}}},error:function(e){var t=this._s;if(g(t))throw e;var r=t._o;t._o=void 0;try{var n=h(r.error);if(!n)throw e;e=n.call(r,e)}catch(e){try{v(t)}finally{throw e}}return v(t),e},complete:function(e){var t=this._s;if(!g(t)){var r=t._o;t._o=void 0;try{var n=h(r.complete);e=n?n.call(r,e):void 0}catch(e){try{v(t)}finally{throw e}}return v(t),e}}});var R=function(e){l(this,R,"Observable","_f")._f=u(e)};f(R.prototype,{subscribe:function(e){return new _(e,this._f)},forEach:function(e){var t=this;return new(i.Promise||o.Promise)(function(r,n){u(e);var o=t.subscribe({next:function(t){try{return e(t)}catch(e){n(e),o.unsubscribe()}},error:n,complete:r})})}}),f(R,{from:function(e){var t="function"==typeof this?this:R,r=h(c(e)[s]);if(r){var n=c(r.call(e));return n.constructor===t?n:new t(function(e){return n.subscribe(e)})}return new t(function(t){var r=!1;return a(function(){if(!r){try{if(p(e,!1,function(e){if(t.next(e),r)return y})===y)return}catch(e){if(r)throw e;return void t.error(e)}t.complete()}}),function(){r=!0}})},of:function(){for(var e=0,t=arguments.length,r=new Array(t);e<t;)r[e]=arguments[e++];return new("function"==typeof this?this:R)(function(e){var t=!1;return a(function(){if(!t){for(var n=0;n<r.length;++n)if(e.next(r[n]),t)return;e.complete()}}),function(){t=!0}})}}),d(R.prototype,s,function(){return this}),n(n.G,{Observable:R}),r(58)("Observable")},function(e,t,r){var n=r(7),o=r(0),i=r(92),a=[].slice,s=/MSIE .\./.test(i),u=function(e){return function(t,r){var n=arguments.length>2,o=!!n&&a.call(arguments,2);return e(n?function(){("function"==typeof t?t:Function(t)).apply(this,o)}:t,r)}};o(o.G+o.B+o.F*s,{setTimeout:u(n.setTimeout),setInterval:u(n.setInterval)})},function(e,t,r){var n=r(0),o=r(128);n(n.G+n.B,{setImmediate:o.set,clearImmediate:o.clear})},function(e,t,r){for(var n=r(127),o=r(54),i=r(24),a=r(7),s=r(23),u=r(66),c=r(10),l=c("iterator"),f=c("toStringTag"),d=u.Array,p={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},y=o(p),h=0;h<y.length;h++){var v,g=y[h],b=p[g],_=a[g],m=_&&_.prototype;if(m&&(m[l]||s(m,l,d),m[f]||s(m,f,g),u[g]=d,b))for(v in n)m[v]||i(m,v,n[v],!0)}},function(e,t,r){(function(t){!function(t){"use strict";function wrap(e,t,r,n){var o=t&&t.prototype instanceof Generator?t:Generator,i=Object.create(o.prototype),a=new Context(n||[]);return i._invoke=makeInvokeMethod(e,r,a),i}function tryCatch(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}function defineIteratorMethods(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function AsyncIterator(e){function invoke(t,r,n,i){var a=tryCatch(e[t],e,r);if("throw"!==a.type){var s=a.arg,u=s.value;return u&&"object"==typeof u&&o.call(u,"__await")?Promise.resolve(u.__await).then(function(e){invoke("next",e,n,i)},function(e){invoke("throw",e,n,i)}):Promise.resolve(u).then(function(e){s.value=e,n(s)},i)}i(a.arg)}function enqueue(e,t){function callInvokeWithMethodAndArg(){return new Promise(function(r,n){invoke(e,t,r,n)})}return r=r?r.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}"object"==typeof t.process&&t.process.domain&&(invoke=t.process.domain.bind(invoke));var r;this._invoke=enqueue}function makeInvokeMethod(e,t,r){var n=f;return function(o,i){if(n===p)throw new Error("Generator is already running");if(n===y){if("throw"===o)throw i;return doneResult()}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var s=maybeInvokeDelegate(a,r);if(s){if(s===h)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=y,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=p;var u=tryCatch(e,t,r);if("normal"===u.type){if(n=r.done?y:d,u.arg===h)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=y,r.method="throw",r.arg=u.arg)}}}function maybeInvokeDelegate(e,t){var n=e.iterator[t.method];if(n===r){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=r,maybeInvokeDelegate(e,t),"throw"===t.method))return h;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return h}var o=tryCatch(n,e.iterator,t.arg);if("throw"===o.type)return t.method="throw",t.arg=o.arg,t.delegate=null,h;var i=o.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=r),t.delegate=null,h):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,h)}function pushTryEntry(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function resetTryEntry(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function Context(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(pushTryEntry,this),this.reset(!0)}function values(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,i=function next(){for(;++n<e.length;)if(o.call(e,n))return next.value=e[n],next.done=!1,next;return next.value=r,next.done=!0,next};return i.next=i}}return{next:doneResult}}function doneResult(){return{value:r,done:!0}}var r,n=Object.prototype,o=n.hasOwnProperty,i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag",c="object"==typeof e,l=t.regeneratorRuntime;if(l)return void(c&&(e.exports=l));l=t.regeneratorRuntime=c?e.exports:{},l.wrap=wrap;var f="suspendedStart",d="suspendedYield",p="executing",y="completed",h={},v={};v[a]=function(){return this};var g=Object.getPrototypeOf,b=g&&g(g(values([])));b&&b!==n&&o.call(b,a)&&(v=b);var _=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(v);GeneratorFunction.prototype=_.constructor=GeneratorFunctionPrototype,GeneratorFunctionPrototype.constructor=GeneratorFunction,GeneratorFunctionPrototype[u]=GeneratorFunction.displayName="GeneratorFunction",l.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===GeneratorFunction||"GeneratorFunction"===(t.displayName||t.name))},l.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,GeneratorFunctionPrototype):(e.__proto__=GeneratorFunctionPrototype,u in e||(e[u]="GeneratorFunction")),e.prototype=Object.create(_),e},l.awrap=function(e){return{__await:e}},defineIteratorMethods(AsyncIterator.prototype),AsyncIterator.prototype[s]=function(){return this},l.AsyncIterator=AsyncIterator,l.async=function(e,t,r,n){var o=new AsyncIterator(wrap(e,t,r,n));return l.isGeneratorFunction(t)?o:o.next().then(function(e){return e.done?e.value:o.next()})},defineIteratorMethods(_),_[u]="Generator",_[a]=function(){return this},_.toString=function(){return"[object Generator]"},l.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function next(){for(;t.length;){var r=t.pop();if(r in e)return next.value=r,next.done=!1,next}return next.done=!0,next}},l.values=values,Context.prototype={constructor:Context,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=r,this.done=!1,this.delegate=null,this.method="next",this.arg=r,this.tryEntries.forEach(resetTryEntry),!e)for(var t in this)"t"===t.charAt(0)&&o.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=r)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){function handle(n,o){return a.type="throw",a.arg=e,t.next=n,o&&(t.method="next",t.arg=r),!!o}if(this.done)throw e;for(var t=this,n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n],a=i.completion;if("root"===i.tryLoc)return handle("end");if(i.tryLoc<=this.prev){var s=o.call(i,"catchLoc"),u=o.call(i,"finallyLoc");if(s&&u){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0);if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,h):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),h},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),resetTryEntry(r),h}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;resetTryEntry(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:values(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=r),h}}}("object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:this)}).call(t,r(154))},function(e,t,r){r(423),e.exports=r(31).RegExp.escape},function(e,t,r){var n=r(0),o=r(424)(/[\\^$*+?.()|[\]{}]/g,"\\$&");n(n.S,"RegExp",{escape:function(e){return o(e)}})},function(e,t){e.exports=function(e,t){var r=t===Object(t)?function(e){return t[e]}:t;return function(t){return String(t).replace(e,r)}}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(46),u=_interopRequireDefault(s),c=r(1),l=_interopRequireDefault(c),f=r(2),d=_interopRequireDefault(f),p=r(452),y=r(4),h=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(y),v=r(453),g=_interopRequireDefault(v),b=r(509),_=_interopRequireDefault(b),m=r(515),R=_interopRequireDefault(m),O=r(516),w=_interopRequireDefault(O),k=r(523),S=_interopRequireDefault(k),P=r(6),D=r(104),M=_interopRequireDefault(D),L=r(105),j=_interopRequireDefault(L),U=r(527),E=_interopRequireDefault(U),x=r(218),A=r(528),I=_interopRequireDefault(A),C=r(151),T=r(529),q=_interopRequireDefault(T),H=r(102),N=r(530),F=_interopRequireDefault(N),B=r(531),G=_interopRequireDefault(B),K=r(535),V=_interopRequireDefault(K),W=r(538),Y=_interopRequireDefault(W),J=r(544),z=_interopRequireDefault(J),X=r(546),$=_interopRequireDefault(X),Q=r(548),Z=_interopRequireDefault(Q),ee=h.getLogger("RuntimeUA"),te=function(){function RuntimeUA(e,t,r){if((0,l.default)(this,RuntimeUA),!e)throw new Error("The runtime descriptor is a needed parameter");if(!t)throw new Error("The sandbox factory is a needed parameter");if(!r)throw new Error("You need the domain of runtime");if(this.runtimeConfiguration=(0,u.default)({domain:r},C.runtimeConfiguration),this.runtimeFactory=t,this.log=ee,this.logLevels=p.log,e.p2pHandlerStub&&"string"==typeof e.p2pHandlerStub&&e.p2pHandlerStub.includes("://")?this.p2p=!0:this.p2p=!1,H.runtimeUtils.runtimeDescriptor=e,this.runtimeUtils=H.runtimeUtils,this.storages={},this.runtimeCatalogue=new Z.default(t),"function"!=typeof t.storageManager)throw new Error("Check your Runtime Factory because it needs the Storage Manager implementation");this.storages=(0,x.storage)(t,this),"function"==typeof t.runtimeCapabilities?this.runtimeCapabilities=t.runtimeCapabilities(this.storages.capabilities):ee.info("Check your RuntimeFactory because it needs the Runtime Capabilities implementation")}return(0,d.default)(RuntimeUA,[{key:"init",value:function(){var e=this;return new a.default(function(t,r){e.domain=e.runtimeConfiguration.domain,ee.info("[RuntimeUA - init] Starting ");try{var n=e.runtimeCapabilities.getRuntimeCapabilities(),o=e.storages.runtime.get("runtime:URL"),i=e.storages.syncherManager.get("syncherManager:ObjectURLs"),s=e.storages.hypertyResources.get(),c=e.storages.runtime.get("p2pHandler:URL");a.default.all([o,n,i,s,c]).then(function(t){return e.runtimeURL=t[0]?t[0].runtimeURL:t[0],e.runtimeURL||(e.runtimeURL="runtime://"+e.domain+"/"+(0,P.generateGUID)(),e.storages.runtime.set("runtime:URL",1,{runtimeURL:e.runtimeURL})),e.capabilities=t[1],(0,u.default)(H.runtimeUtils.runtimeCapabilities.constraints,t[1]),e._dataObjectsStorage=new G.default(e.storages.syncherManager,t[2]||{},e.runtimeFactory,e),e._hypertyResources=t[3]||{},e.p2pHandlerURL=t[4]?t[4].p2pHandlerURL:t[4],e.p2pHandlerURL||(e.p2pHandlerURL=e.runtimeURL+"/p2phandler/"+(0,P.generateGUID)(),ee.info("[RuntimeUA - init] P2PHandlerURL: ",e.p2pHandlerURL),e.storages.runtime.set("p2pHandler:URL",1,{p2pHandlerURL:e.p2pHandlerURL})),e._loadComponents()}).then(function(t){return e._hypertyResourcesStorage=new V.default(e.runtimeURL,e.messageBus,e.storages.hypertyResources,e._hypertyResources),e.p2p?(ee.info("[RuntimeUA - init] load p2pHandler: ",t),e._loadP2PHandler()):(ee.info("[RuntimeUA - init] P2P not supported"),"P2P Not Supported")}).then(function(e){ee.info("[runtime ua - init] - status: ",e),t(!0)},function(e){ee.error("ERROR: ",e),t(!0)})}catch(e){r(e)}})}},{key:"_updateRuntimeStatus",value:function(e){this.messageBus.postMessage({from:this.runtimeURL,to:this.runtimeURL+"/status",type:"update",body:e})}},{key:"_loadP2PHandler",value:function(){var e=this;return new a.default(function(t){var r=H.runtimeUtils.runtimeDescriptor,n=r.p2pHandlerStub,o={isHandlerStub:!0,runtimeURL:e.runtimeURL};ee.log("[RuntimeUA loadP2PHandler] P2PStubHandler: ",n),e.loader.loadStub(n,o).then(function(r){var n=e.runtimeURL+"/ua",o={type:"subscribe",from:n,to:"domain://msg-node."+e.domain+"/sm",body:{subscribe:[r.url],source:e.runtimeURL}};e.messageBus.addListener(n,function(e){ee.log("[runtime ua - listener] - receive msg: ",e)}),e.messageBus.postMessage(o,function(e){ee.log("[runtime ua - postMessage] - reply: ",e)}),ee.info("[runtime ua - p2p installation] - success: ",r),t(!0)}).catch(function(e){ee.info("[runtime ua - p2p installation] - fail: ",e),t(!1)})})}},{key:"_loadComponents",value:function(){var e=this;return new a.default(function(t,r){try{e.descriptorInstance=new I.default(e.runtimeURL,e.runtimeCatalogue,e.runtimeConfiguration),e.loader=new E.default(e.runtimeURL,e.runtimeConfiguration,e.descriptorInstance),e.identityModule=new _.default(e.runtimeURL,e.runtimeCapabilities,e.storages.identity,e._dataObjectsStorage,j.default,e.runtimeCatalogue);var n=e.runtimeFactory.createAppSandbox();e.registry=new g.default(e.runtimeURL,n,e.identityModule,e.runtimeCatalogue,e.runtimeCapabilities,e.storages.registry,e.p2pHandlerURL),e.registry.loader=e.loader,e.messageBus=new S.default(e.registry),e.subscriptionManager=new z.default(e.runtimeURL,e.messageBus,e.storages.subscriptions),e.addressAllocation=new M.default(e.runtimeURL,e.messageBus,e.registry,e.subscriptionManager),e.policyEngine=new w.default(new $.default(e.runtimeURL,e.identityModule,e.registry,e.storages.policy,e.runtimeCapabilities)),e.coreDiscovery=new F.default(e.runtimeURL,e.messageBus,e.graphConnector,e.runtimeFactory,e.registry),e.identityHandler=new R.default(e.identityModule),j.default.init(e.runtimeURL,e.runtimeCapabilities,e.storages.cryptoManager,e._dataObjectsStorage,e.registry,e.coreDiscovery,e.identityModule,e.runtimeFactory),e.handlers=new q.default(e.policyEngine,e.identityHandler,j.default),e.messageBus.pipelineOut.handlers=[e.handlers.idmHandler,e.handlers.pepOutHandler,e.handlers.encryptHandler],e.messageBus.pipelineIn.handlers=[e.handlers.decryptHandler,e.handlers.pepInHandler],n.addListener("*",function(t){e.messageBus.postMessage(t)}),j.default.messageBus=e.messageBus,e.registry.messageBus=e.messageBus,e.policyEngine.messageBus=e.messageBus,e.identityModule.messageBus=e.messageBus,e.identityModule.registry=e.registry,e.identityModule.coreDiscovery=e.coreDiscovery,e.runtimeFactory.messageBus=e.messageBus,e.syncherManager=new Y.default(e.runtimeURL,e.messageBus,e.registry,e.runtimeCatalogue,e.storages.syncherManager,null,e._dataObjectsStorage,e.identityModule),e.loader.runtimeURL=e.runtimeURL,e.loader.messageBus=e.messageBus,e.loader.registry=e.registry,e.loader.runtimeCatalogue=e.runtimeCatalogue,e.loader.runtimeFactory=e.runtimeFactory;var o=[];o.push(e.subscriptionManager.init()),o.push(e.identityModule.init()),o.push(j.default.loadSessionKeys()),a.default.all(o).then(function(e){3===e.length?t(!0):r("[RuntimeUA._loadComponents] Error ] ",e)}).catch(function(e){throw Error(e)})}catch(e){r(e)}})}},{key:"loadHyperty",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments[2];if(!e)throw new Error("Hyperty descriptor url parameter is needed");return this.loader.loadHyperty(e,t,r)}},{key:"loadStub",value:function(e){if(!e)throw new Error("ProtoStub descriptor url parameter is needed");return this.loader.loadStub(e)}},{key:"loadIdpProxy",value:function(e){if(ee.log("ipdProxyCatalogueURL",e),!e)throw new Error("The IDP Proxy URL is a needed parameter, could be a DOMAIN or a URL");return this.loader.loadIdpProxy(e)}},{key:"close",value:function(e){var t=this;return!0===e&&this.identityHandler.reset(),ee.info("Unregister all hyperties"),new a.default(function(e,r){t.registry.unregisterAllHyperties().then(function(t){ee.info("All the hyperties are unregisted with Success:",t),e(!0)}).catch(function(e){ee.error("Failed to unregister the hyperties",e),r(!1)})})}},{key:"reset",value:function(){var e=this,t=[];return new a.default(function(r,n){e.storages.identity.get(!1,!1,"identities").then(function(n){(0,o.default)(n).forEach(function(r){t.push(e.storages.identity.delete(r,!1,"identities"))}),t.push(e.storages.capabilities.delete("capabilities")),t.push(e.storages.cryptoManager.delete("userAsymmetricKey")),t.push(e.storages.hypertyResources.delete("hypertyResources")),t.push(e.storages.identity.delete("accessTokens")),t.push(e.storages.registry.delete("registry:DataObjectURLs")),t.push(e.storages.registry.delete("registry:HypertyURLs")),t.push(e.storages.runtime.delete("p2pHandler:URL")),t.push(e.storages.runtime.delete("runtime:URL")),t.push(e.storages.subscriptions.delete("subscriptions")),t.push(e.storages.syncherManager.delete("syncherManager:ObjectURLs")),a.default.all(t).then(function(e){ee.info("All DBs were reset with Success:",e),r(!0)}).catch(function(e){ee.error("Failed to reset all DBs",e),r(!1)})})})}}]),RuntimeUA}();t.default=te,e.exports=t.default},function(e,t,r){r(427),e.exports=r(11).Object.keys},function(e,t,r){var n=r(76),o=r(68);r(138)("keys",function(){return function(e){return o(n(e))}})},function(e,t,r){var n=r(50),o=r(133),i=r(429);e.exports=function(e){return function(t,r,a){var s,u=n(t),c=o(u.length),l=i(a,c);if(e&&r!=r){for(;c>l;)if((s=u[l++])!=s)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}}},function(e,t,r){var n=r(134),o=Math.max,i=Math.min;e.exports=function(e,t){return e=n(e),e<0?o(e+t,0):i(e,t)}},function(e,t,r){r(192),r(80),r(101),r(437),r(445),r(446),e.exports=r(11).Promise},function(e,t,r){var n=r(134),o=r(132);e.exports=function(e){return function(t,r){var i,a,s=String(o(t)),u=n(r),c=s.length;return u<0||u>=c?e?"":void 0:(i=s.charCodeAt(u),i<55296||i>56319||u+1===c||(a=s.charCodeAt(u+1))<56320||a>57343?e?s.charAt(u):i:e?s.slice(u,u+2):a-56320+(i-55296<<10)+65536)}}},function(e,t,r){"use strict";var n=r(141),o=r(79),i=r(100),a={};r(63)(a,r(22)("iterator"),function(){return this}),e.exports=function(e,t,r){e.prototype=n(a,{next:o(1,r)}),i(e,t+" Iterator")}},function(e,t,r){var n=r(44),o=r(41),i=r(68);e.exports=r(51)?Object.defineProperties:function(e,t){o(e);for(var r,a=i(t),s=a.length,u=0;s>u;)n.f(e,r=a[u++],t[r]);return e}},function(e,t,r){"use strict";var n=r(435),o=r(436),i=r(71),a=r(50);e.exports=r(193)(Array,"Array",function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):"keys"==t?o(0,r):"values"==t?o(0,e[r]):o(0,[r,e[r]])},"values"),i.Arguments=i.Array,n("keys"),n("values"),n("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){"use strict";var n,o,i,a,s=r(78),u=r(21),c=r(69),l=r(142),f=r(26),d=r(45),p=r(99),y=r(438),h=r(439),v=r(199),g=r(200).set,b=r(441)(),_=r(144),m=r(201),R=r(442),O=r(202),w=u.TypeError,k=u.process,S=k&&k.versions,P=S&&S.v8||"",D=u.Promise,M="process"==l(k),L=function(){},j=o=_.f,U=!!function(){try{var e=D.resolve(1),t=(e.constructor={})[r(22)("species")]=function(e){e(L,L)};return(M||"function"==typeof PromiseRejectionEvent)&&e.then(L)instanceof t&&0!==P.indexOf("6.6")&&-1===R.indexOf("Chrome/66")}catch(e){}}(),E=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},x=function(e,t){if(!e._n){e._n=!0;var r=e._c;b(function(){for(var n=e._v,o=1==e._s,i=0;r.length>i;)!function(t){var r,i,a,s=o?t.ok:t.fail,u=t.resolve,c=t.reject,l=t.domain;try{s?(o||(2==e._h&&C(e),e._h=1),!0===s?r=n:(l&&l.enter(),r=s(n),l&&(l.exit(),a=!0)),r===t.promise?c(w("Promise-chain cycle")):(i=E(r))?i.call(r,u,c):u(r)):c(n)}catch(e){l&&!a&&l.exit(),c(e)}}(r[i++]);e._c=[],e._n=!1,t&&!e._h&&A(e)})}},A=function(e){g.call(u,function(){var t,r,n,o=e._v,i=I(e);if(i&&(t=m(function(){M?k.emit("unhandledRejection",o,e):(r=u.onunhandledrejection)?r({promise:e,reason:o}):(n=u.console)&&n.error&&n.error("Unhandled promise rejection",o)}),e._h=M||I(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},I=function(e){return 1!==e._h&&0===(e._a||e._c).length},C=function(e){g.call(u,function(){var t;M?k.emit("rejectionHandled",e):(t=u.onrejectionhandled)&&t({promise:e,reason:e._v})})},T=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,t._a||(t._a=t._c.slice()),x(t,!0))},q=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw w("Promise can't be resolved itself");(t=E(e))?b(function(){var n={_w:r,_d:!1};try{t.call(e,c(q,n,1),c(T,n,1))}catch(e){T.call(n,e)}}):(r._v=e,r._s=1,x(r,!1))}catch(e){T.call({_w:r,_d:!1},e)}}};U||(D=function(e){y(this,D,"Promise","_h"),p(e),n.call(this);try{e(c(q,this,1),c(T,this,1))}catch(e){T.call(this,e)}},n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},n.prototype=r(443)(D.prototype,{then:function(e,t){var r=j(v(this,D));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=M?k.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&x(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=c(q,e,1),this.reject=c(T,e,1)},_.f=j=function(e){return e===D||e===a?new i(e):o(e)}),f(f.G+f.W+f.F*!U,{Promise:D}),r(100)(D,"Promise"),r(444)("Promise"),a=r(11).Promise,f(f.S+f.F*!U,"Promise",{reject:function(e){var t=j(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(s||!U),"Promise",{resolve:function(e){return O(s&&this===a?D:this,e)}}),f(f.S+f.F*!(U&&r(203)(function(e){D.all(e).catch(L)})),"Promise",{all:function(e){var t=this,r=j(t),n=r.resolve,o=r.reject,i=m(function(){var r=[],i=0,a=1;h(e,!1,function(e){var s=i++,u=!1;r.push(void 0),a++,t.resolve(e).then(function(e){u||(u=!0,r[s]=e,--a||n(r))},o)}),--a||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=j(t),n=r.reject,o=m(function(){h(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(69),o=r(197),i=r(198),a=r(41),s=r(133),u=r(143),c={},l={},t=e.exports=function(e,t,r,f,d){var p,y,h,v,g=d?function(){return e}:u(e),b=n(r,f,t?2:1),_=0;if("function"!=typeof g)throw TypeError(e+" is not iterable!");if(i(g)){for(p=s(e.length);p>_;_++)if((v=t?b(a(y=e[_])[0],y[1]):b(e[_]))===c||v===l)return v}else for(h=g.call(e);!(y=h.next()).done;)if((v=o(h,b,y.value,t))===c||v===l)return v};t.BREAK=c,t.RETURN=l},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(21),o=r(200).set,i=n.MutationObserver||n.WebKitMutationObserver,a=n.process,s=n.Promise,u="process"==r(77)(a);e.exports=function(){var e,t,r,c=function(){var n,o;for(u&&(n=a.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(u)r=function(){a.nextTick(c)};else if(!i||n.navigator&&n.navigator.standalone)if(s&&s.resolve){var l=s.resolve(void 0);r=function(){l.then(c)}}else r=function(){o.call(n,c)};else{var f=!0,d=document.createTextNode("");new i(c).observe(d,{characterData:!0}),r=function(){d.data=f=!f}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){var n=r(21),o=n.navigator;e.exports=o&&o.userAgent||""},function(e,t,r){var n=r(63);e.exports=function(e,t,r){for(var o in t)r&&e[o]?e[o]=t[o]:n(e,o,t[o]);return e}},function(e,t,r){"use strict";var n=r(21),o=r(11),i=r(44),a=r(51),s=r(22)("species");e.exports=function(e){var t="function"==typeof o[e]?o[e]:n[e];a&&t&&!t[s]&&i.f(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,r){"use strict";var n=r(26),o=r(11),i=r(21),a=r(199),s=r(202);n(n.P+n.R,"Promise",{finally:function(e){var t=a(this,o.Promise||i.Promise),r="function"==typeof e;return this.then(r?function(r){return s(t,e()).then(function(){return r})}:e,r?function(r){return s(t,e()).then(function(){throw r})}:e)}})},function(e,t,r){"use strict";var n=r(26),o=r(144),i=r(201);n(n.S,"Promise",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},function(e,t,r){r(448),e.exports=r(11).Object.assign},function(e,t,r){var n=r(26);n(n.S+n.F,"Object",{assign:r(449)})},function(e,t,r){"use strict";var n=r(68),o=r(145),i=r(81),a=r(76),s=r(190),u=Object.assign;e.exports=!u||r(70)(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n})?function(e,t){for(var r=a(e),u=arguments.length,c=1,l=o.f,f=i.f;u>c;)for(var d,p=s(arguments[c++]),y=l?n(p).concat(l(p)):n(p),h=y.length,v=0;h>v;)f.call(p,d=y[v++])&&(r[d]=p[d]);return r}:u},function(e,t,r){r(451);var n=r(11).Object;e.exports=function(e,t,r){return n.defineProperty(e,t,r)}},function(e,t,r){var n=r(26);n(n.S+n.F*!r(51),"Object",{defineProperty:r(44).f})},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.log=void 0;var n=r(4),o=function(e){return e&&e.__esModule?e:{default:e}}(n),i=o.default.getLogger("address-allocation"),a=o.default.getLogger("Bus"),s=o.default.getLogger("MessageBus"),u=o.default.getLogger("CoreDiscovery"),c=o.default.getLogger("StorageManager"),l=o.default.getLogger("HypertyResourcesStorage"),f=o.default.getLogger("IdentityModule"),d=o.default.getLogger("PEP"),p=o.default.getLogger("P2PConnectionResolve"),y=o.default.getLogger("Registry"),h=o.default.getLogger("RuntimeUA"),v=o.default.getLogger("Loader"),g=o.default.getLogger("Descriptors"),b=o.default.getLogger("DataObjectsStorage"),_=o.default.getLogger("Subscription"),m=o.default.getLogger("SubscriptionManager"),R=o.default.getLogger("ObserverObject"),O=o.default.getLogger("ReporterObject"),w=o.default.getLogger("SynSubscription"),k=o.default.getLogger("SyncherManager"),S=o.default.getLogger("IdentityHandler"),P=o.default.getLogger("CryptoManager"),D=o.default.getLogger("Pipeline"),M=o.default.getLogger("Syncher");o.default.getLogger("DataObjectObserver");t.log=o.default,i.setLevel(3),a.setLevel(3),s.setLevel(3),u.setLevel(5),c.setLevel(0),l.setLevel(3),f.setLevel(3),d.setLevel(3),p.setLevel(3),y.setLevel(3),h.setLevel(0),v.setLevel(3),g.setLevel(3),b.setLevel(0),_.setLevel(3),m.setLevel(3),R.setLevel(0),O.setLevel(0),w.setLevel(3),k.setLevel(0),S.setLevel(3),P.setLevel(3),D.setLevel(3),M.setLevel(0),M.setLevel(0)},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(82),o=_interopRequireDefault(n),i=r(16),a=_interopRequireDefault(i),s=r(3),u=_interopRequireDefault(s),c=r(1),l=_interopRequireDefault(c),f=r(2),d=_interopRequireDefault(f),p=r(4),y=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(p),h=r(102),v=r(465),g=r(104),b=_interopRequireDefault(g),_=r(212),m=_interopRequireDefault(_),R=r(506),O=_interopRequireDefault(R),w=r(507),k=_interopRequireDefault(w),S=r(6);r(149);var P=r(213),D=y.getLogger("Registry"),M={CREATED:"created",LIVE:"live",DEPLOYING:"deploying",DEPLOYED:"deployed",PROGRESS:"in-progress",DISCONNECTED:"disconnected",FAILED:"deployment-failed",DEAD:"dead"},L=function(){function Registry(e,t,r,n,o,i,a,s){if((0,l.default)(this,Registry),!e)throw new Error("runtimeURL is missing.");if(!i)throw new Error("storageManager is missing.");var u=this;u.registryURL=e+"/registry/",u.appSandbox=t,u.runtimeURL=e,u.p2pHandlerURL=a,u.runtimeCatalogue=n,u.remoteRegistry=s,u.idModule=r,u.storageManager=i,u.runtimeCapabilities=o,u.identifier=(0,S.generateGUID)(),u.hypertiesListToRemove={},u.hypertiesList=[],u.remoteHypertyList=[],u.remoteDataObjectList=[],u.idpLegacyProxyList={},u.watchingYou=new P.WatchingYou,u.p2pHandlerStub={},u.p2pRequesterStub=u.watchingYou.watch("p2pRequesterStub",{},!0),u.p2pConnectionList=u.watchingYou.watch("p2pConnectionList",{},!0),u.p2pHandlerAssociation={},u.protostubsList=u.watchingYou.watch("protostubsList",{},!0),u.idpProxyList=u.watchingYou.watch("idpProxyList",{},!0),u.dataObjectList={},u.subscribedDataObjectList={},u.sandboxesList={sandbox:{},appSandbox:{}},u.pepList={},u.registries={},u._domain=(0,S.divideURL)(u.registryURL).domain,u.sandboxesList.appSandbox[e]=t;var c=new k.default(u);u._p2pConnectionResolve=c}return(0,d.default)(Registry,[{key:"_getIdentityAssociated",value:function(e,t){var r=this;for(var n in r.hypertiesList){var o=r.hypertiesList[n];if(o._hypertyURL===t)switch(e){case"username":return o._user.username;case"cn":return o._user.cn;case"locale":return o._user.locale;case"avatar":return o._user.avatar;case"userURL":return o._user.userURL;case".":return o._user;default:return""}}return""}},{key:"getAppSandbox",value:function(){return this.appSandbox}},{key:"getHypertyOwner",value:function(e){var t=this;for(var r in t.hypertiesList){var n=t.hypertiesList[r];if(n.hypertyURL===e)return n.user.userURL}}},{key:"getDataObjectReporter",value:function(e){var t=this,r=(0,S.removePathFromURL)(e);for(var n in t.dataObjectList){var o=t.dataObjectList[n];if(o.url===r)return o.reporter}return null}},{key:"getHypertyName",value:function(e){var t=this,r="hyperty"===(0,S.divideURL)(e).type,n=void 0,o=r?e:t.getReporterURLSynchonous(e);for(var i in t.hypertiesList){var a=t.hypertiesList[i];if(a.hypertyURL===o){n=a.objectName;break}}return n}},{key:"getReporterURL",value:function(e){var t=this;return new u.default(function(r,n){var o=t.dataObjectList[e];o?r(o.reporter):n("No reporter was found")})}},{key:"getReporterURLSynchonous",value:function(e){var t=this,r=t.dataObjectList[e];return r?r.reporter:void 0}},{key:"getDataObjectSubscriberHyperty",value:function(e){return this.subscribedDataObjectList[e]}},{key:"registerSubscribedDataObject",value:function(e,t){var r=this;void 0===r.subscribedDataObjectList[e]&&(r.subscribedDataObjectList[e]=t)}},{key:"getPreAuthSubscribers",value:function(e){var t=this,r=t.dataObjectList[e],n=[];return r&&(n=r.authorise),n}},{key:"unregisterAllHyperties",value:function(){var e=this,t=[];return new u.default(function(r,n){for(var o in e.hypertiesList){var i=e.hypertiesList[o],a=e.unregisterHypertyInstance(i.hypertyURL);t.push(a)}u.default.all(t).then(function(){r("successfully unregistered all hyperties")},function(e){n(e)})})}},{key:"unregisterHypertyInstance",value:function(e){var t=this,r={type:"execute",from:t.registryURL,to:e,body:{method:"close"}};t._messageBus.postMessage(r,function(r){D.log("[Registry.unregisterHypertyInstance] Close Reply",r),t._domainRegistration.unregisterHyperty(e)})}},{key:"unregisterDataObject",value:function(e){this._domainRegistration.unregisterDataObject(e)}},{key:"registerSubscriber",value:function(e,t){var r=this,n=r.dataObjectList[e];n&&(n.subscribers||(n.subscribers=[]),n.subscribers.push(t),r.dataObjectList[e]=n)}},{key:"getDataObjectSubscribers",value:function(e){var t=this,r=t.dataObjectList[e];if(r)return r.subscribers;throw"No dataObject was found"}},{key:"registerDataObject",value:function(e){var t=this,r=(0,S.deepClone)(e);return new u.default(function(n,o){t.dataObjectList[e.url]=e,t.storageManager.get("registry:DataObjectURLs").then(function(i){i||(i={}),i[e.name+e.schema+e.resources+e.reporter]=e.url,t.storageManager.set("registry:DataObjectURLs",0,i).then(function(){t.isInterworkingProtoStub(r.reporter)&&(r.interworking=!0);var o=!0;r.hasOwnProperty("domain_registration")&&(o=r.domain_registration),o?t._domainRegistration.registerDataObject(r,e.resume,t.p2pHandlerStub).then(function(e){n(e)}):n(r)}).catch(function(e){D.error("[Registry registerDataObject] Error: ",e),o(e)})})})}},{key:"_getResourcesAndSchemes",value:function(e){var t=this;return new u.default(function(r){var n=void 0;"string"==typeof e.hypertyType?(n=[],n.push(e.hypertyType)):n=e.hypertyType;var o=e.objectName,i=e.dataObjects,a=[];for(var s in i)a.push(t.runtimeCatalogue.getDataSchemaDescriptor(i[s]));u.default.all(a).then(function(e){var t=[];for(var i in e){var a=e[i];t.push(a.sourcePackage.sourceCode.properties.scheme.constant)}r({resources:n,dataSchema:t,name:o})})})}},{key:"checkRegisteredURLs",value:function(e,t){var r=this;return new u.default(function(n){var o=e.reporter?"registry:DataObjectURLs":"registry:HypertyURLs";"string"==typeof t&&(o=t&&"hyperty"!==(0,S.divideURL)(t).type?"registry:DataObjectURLs":"registry:HypertyURLs"),r.storageManager.get(o).then(function(i){if(i||(i={}),"string"==typeof t){D.info("[Registry - checkRegisteredURLs] - look for "+t+" on ",i);var s=(0,a.default)(i).map(function(e){var r=i[e].indexOf(t);return i[e][r]});return D.info("[Registry - checkRegisteredURLs] - found "+s.length+" results on ",s),n(1===s.length?s:void 0)}if("registry:HypertyURLs"!==o){var u=e.name+e.schema+e.resources+e.reporter;if(i[u]){if("string"==typeof i[u]){var c=[];return c.push(i[u]),n(c)}return n(i[u])}return n(void 0)}r._getResourcesAndSchemes(e).then(function(e){return n(i[e.resources+e.dataSchema+e.name]?i[e.resources+e.dataSchema+e.name]:void 0)})})})}},{key:"registerHyperty",value:function(e,t,r,n,o){var i=this,s=void 0;return new u.default(function(u,c){i.idModule.getIdentityAssertion(o).then(function(o){var l=o.userProfile;void 0===i._messageBus?c("[Registry registerHyperty] MessageBus is undefined"):i.storageManager.get("registry:HypertyURLs").then(function(o){i._getResourcesAndSchemes(r).then(function(f){s=f,o||(o={}),o[s.resources+s.dataSchema+s.name]=n.address,i.storageManager.set("registry:HypertyURLs",0,o).then(function(){"app"===e.type?i.sandboxesList.appSandbox[n.address[0]]=e:"normal"===e.type?i.sandboxesList.sandbox[n.address[0]]=e:c("Wrong SandboxType");var o=void 0,f=void 0;0!==(0,a.default)(i.p2pHandlerStub).length&&(o=i.p2pHandlerStub[i.runtimeURL].url,f=h.runtimeUtils.runtimeDescriptor.p2pRequesterStub);var d=new m.default(i.identifier,i.registryURL,t,r,n.address[0],l,"guid",i.runtimeURL,"ctx",o,f,s.dataSchema,s.resources);i.hypertiesList.push(d);var p=!0;r.hasOwnProperty("_configuration")&&r.configuration.hasOwnProperty("domain_registration")&&(p=r.configuration.domain_registration),p?i._domainRegistration.registerHyperty(d,n.newAddress).then(function(e){u(e)}):u({url:d.hypertyURL})}).catch(function(e){c(e)})})})},function(e){c("[Registry registerHyperty] ",e)})})}},{key:"unregisterHyperty",value:function(e){var t=this;return new u.default(function(r,n){var o=!1,i=0;for(i=0;i<t.hypertiesList.length;i++){var a=t.hypertiesList[i];if(void 0!==a&&a.hypertyURL===e){o=!0;break}}!1===o?n("Hyperty not found"):(delete t.hypertiesList[i],r("Hyperty successfully deleted"))})}},{key:"discoverProtostub",value:function(e){if(!e)throw new Error("Parameter url needed");var t=this,r=(0,S.divideURL)(e),n=r.domain;if(t.protostubsList.hasOwnProperty(n)&&t.protostubsList[n].status===M.LIVE)return t.protostubsList[n];throw t.protostubsList[n]={status:M.DEPLOYING},new Error("[Registry - discoverProtoStub ] Message Node Protostub Not Found. Creating one")}},{key:"discoverP2PStub",value:function(e){var t=this;if(e){if(t.p2pRequesterStub.hasOwnProperty(e)&&t.p2pRequesterStub[e].status===M.LIVE)return t.p2pRequesterStub[e];throw t.p2pRequesterStub[e]={status:M.CREATED},new Error("[Registry - discoverP2PStub ] P2P Requester Stub Not Found. Creating one")}if(t.p2pHandlerStub.hasOwnProperty(t.runtimeURL))return t.p2pHandlerStub[t.runtimeURL];throw t.p2pHandlerStub[t.runtimeURL]={status:M.CREATED},new Error("[Registry - discoverP2PStub ] P2P Handler Stub Not Found.")}},{key:"registerStub",value:function(e,t,r,n,i){var a=this,s=i;return new u.default(function(u,c){var l=void 0;void 0===a._messageBus&&c("MessageBus not found on registerStub"),D.info("[Registry - registerStub] - stubID ",t);var f=void 0;if(r)if(r.hasOwnProperty("isHandlerStub")&&r.isHandlerStub)l=a.p2pHandlerURL,a.p2pHandlerStub[t]={url:l,status:M.CREATED},a.p2pHandlerAssociation[a.runtimeURL]=[],a.sandboxesList.sandbox[l]=e,D.info("[Registry - registerStub - P2PHandlerStub] - ",t," - ",l),u(a.p2pHandlerStub[t]);else{f=r.p2pRequesterStub,l="runtime://"+(0,S.divideURL)(r.remoteRuntimeURL).domain+"/p2prequester/"+(0,S.generateGUID)(),D.info("[Registry - registerStub - P2PRequesterStub] - ",f," - ",l),a.p2pHandlerAssociation[a.runtimeURL].push(l),a.p2pRequesterStub[t]={url:l,status:M.CREATED},a.sandboxesList.sandbox[l]=e;var d={type:"subscribe",from:a.registryURL,to:"domain://msg-node."+a._domain+"/sm",body:{subscribe:[l],source:a.registryURL}};a._messageBus.postMessage(d,function(e){}),u(a.p2pRequesterStub[t])}else l="string"===!(void 0===i?"undefined":(0,o.default)(i))&&i.hasOwnProperty("_interworking")&&i._interworking?"runtime://"+t+"/protostub/scheme1":"runtime://"+t+"/protostub/"+(0,S.generateGUID)(),D.info("[Registry - registerStub - Normal Stub] - ",t),a.protostubsList[t]={url:l,status:M.DEPLOYING},n&&(a.protostubsList[t].descriptorURL=n),s&&s.interworking&&(a.protostubsList[t].interworking=s.interworking),a.sandboxesList.sandbox[l]=e,u(a.protostubsList[t]);a._messageBus.addListener(l+"/status",function(e){a._onProtostubStatusEvent(e)})})}},{key:"_onProtostubStatusEvent",value:function(e){var t=this,r=e.from;if(!e.to.includes("/status"))return void D.error("[Registry onProtostubStatusEvent] Not Status Event: ",e);var n=e.from;if(e.from=t.runtimeURL,e.to=t.runtimeURL+"/status",e.body.resource=n,t._messageBus.postMessage(e),r.includes("/protostub/"))(0,a.default)(t.protostubsList).filter(function(e){return t.protostubsList[e].url===r}).map(function(r){t.protostubsList[r].status=e.body.value});else if(e.body.resource){var o=e.body.resource;if(t.p2pConnectionList[o])t.p2pConnectionList[o].status=e.body.value,t.p2pConnectionList[o].url=r;else{var i={status:e.body.value,url:r};t.p2pConnectionList[o]=i}r.includes("/p2prequester/")?t.p2pRequesterStub[o].status=e.body.value:"disconnected"===e.body.value&&delete t.p2pConnectionList[o]}else{if(r.includes("/p2prequester/"))return void D.error("[Registry onProtostubStatusEvent] resource missing: ",e);t.p2pHandlerStub[t.runtimeURL].status=e.body.value}}},{key:"unregisterStub",value:function(e){var t=this;return new u.default(function(r,n){t.protostubsList.hasOwnProperty(e)?(delete t.protostubsList[e],r("ProtostubURL removed")):n("Error on unregisterStub: Hyperty not found")})}},{key:"registerIdpProxy",value:function(e,t){var r=this;return new u.default(function(n,o){var i=void 0;void 0===r._messageBus&&o("MessageBus not found on registerStub"),i="domain-idp://"+t+"/stub/"+(0,S.generateGUID)(),r.idpProxyList[t]={url:i,status:M.DEPLOYING},r.sandboxesList.sandbox[i]=e,n(i),r._messageBus.addListener(i+"/status",function(e){r._onIdpProxyStatusEvent(e)})})}},{key:"_onIdpProxyStatusEvent",value:function(e){var t=this,r=e.from;if(!e.to.includes("/status"))return void D.error("[Registry onIdpProxyStatusEvent] Not Status Event: ",e);(0,a.default)(t.idpProxyList).filter(function(e){return t.idpProxyList[e].url===r}).map(function(r){t.idpProxyList[r].status=e.body.value})}},{key:"discoverIdpProxy",value:function(e){if(!e)throw new Error("Parameter url needed");var t=this,r=(0,S.divideURL)(e),n=r.domain;if(t.idpProxyList.hasOwnProperty(n)&&t.idpProxyList[n].status===M.LIVE)return t.idpProxyList[n];throw t.idpProxyList[n]={status:M.PROGRESS},new Error("[Registry - discoverIdpProxy ] Idp Proxy Not Found. Creating one")}},{key:"registerPEP",value:function(e,t){var r=this;return new u.default(function(n){r.pepList[t]=e,n("PEP registered with success")})}},{key:"unregisterPEP",value:function(e){var t=this;return new u.default(function(r,n){void 0===t.pepList[e]?n("Pep Not found."):r("PEP successfully removed.")})}},{key:"getSandbox",value:function(e,t){if(!e)throw new Error("Parameter url needed");var r=this;return new u.default(function(n,o){var i=void 0;if(!(i=r.sandboxesList.appSandbox[e])&&!(i=r.sandboxesList.sandbox[e])){var s=void 0;s=e.includes("://")?(0,S.divideURL)(e).domain:e;for(var u in r.sandboxesList.sandbox)if(u.includes(s)&&r.sandboxesList.sandbox[u].matches(t)){var c=function(){var e=r.sandboxesList.sandbox[u];return(0,a.default)(t).filter(function(t){return"browser"===t&&e.type===v.SandboxType.NORMAL||"windowSanbox"===t&&e.type===v.SandboxType.WINDOW}).length>0&&(i=e),"break"}();if("break"===c)break}}i?n(i):o("no sandbox found for: "+e)})}},{key:"resolveNormalStub",value:function(e){var t=this;return new u.default(function(r,n){var o=(0,S.divideURL)(e),i=o.domain,a=o.type;e.includes(t.runtimeURL)&&(D.error("[Registry - resolve] URL to be resolved should have listeners ",e),n("[Registry - resolve] URL to be resolved should have listeners ",e)),e.includes("global://registry")?i=t._domain:i.indexOf("msg-node.")&&i.indexOf("registry.")||(i=i.substring(i.indexOf(".")+1)),t.isLegacy(e).then(function(o){o&&"domain-idp"!==a&&(i=a+"."+(0,S.getUserIdentityDomain)(e)),D.info("[Registry.resolve] domainUrl:",i);var s=void 0;s="domain-idp"===a?!!t.idpProxyList.hasOwnProperty(i)&&t.idpProxyList[i]:!!t.protostubsList.hasOwnProperty(i)&&t.protostubsList[i],D.info("[Registry.resolve] registred:",s),s&&s.hasOwnProperty("status")&&(s.status===M.DEPLOYED||s.status===M.CREATED||s.status===M.LIVE||s.status===M.DISCONNECTED)?(D.info("[Registry.resolve] Resolved: ",s.url,s.status),r(s.url)):"domain-idp"===a?(t.watchingYou.observe("idpProxyList",function(e){var n=e.keypath;n.includes("status")&&(n=n.replace(".status","")),n===i&&"status"===e.name&&e.newValue===M.CREATED&&r(t.idpProxyList[i].url)}),s||(D.info("[Registry.resolveNormalStub] deploy new IDPProxy: ",i),t.loader.loadIdpProxy(i).then(function(){D.info("[Registry.resolveNormalStub] IdP Proxy deployed: ",t.idpProxyList[i])}).catch(function(e){D.error("[Registry.resolve] Error resolving Load IDPProxy: ",e),t.idpProxyList[i].status="deployment-failed",n(e)}))):(t.watchingYou.observe("protostubsList",function(e){var n=e.keypath;n.includes("status")&&(n=n.replace(".status","")),n===i&&"status"===e.name&&e.newValue===M.CREATED&&r(t.protostubsList[i].url)}),s||(D.info("[Registry.resolve] trigger new ProtocolStub: ",i),t.loader.loadStub(i).then(function(){}).catch(function(e){D.error("[Registry.resolveNormalStub] Error resolving Load ProtocolStub: ",e),n(e)})))}).catch(function(e){D.error("[Registry.resolve] Error resolving islegacy: ",e),n(e)})})}},{key:"resolve",value:function(e){D.info("[Registry - Resolve] -  ",e);var t=this;return new u.default(function(r,n){var o=e.to?e.to:e,i=!(!e.body||!e.body.p2p)&&e.body.p2p;!t.p2pHandlerStub[t.runtimeURL]||(0,S.isBackendServiceURL)(o)||o.includes(t.runtimeURL)||o.includes("/p2phandler/")||o.includes("/p2prequester/")?(D.info("[Registry - resolve] - Resolve normal stub: ",t.p2pHandlerStub,t.runtimeURL,(0,S.isBackendServiceURL)(o),i,o),t.resolveNormalStub(o).then(function(e){r(e)})):(D.info("[Registry - resolve] - checkP2P: ",i,o,t._p2pConnectionResolve),t._p2pConnectionResolve.checkP2P(e).then(function(n){var a=t.p2pConnectionList[n.runtime];switch(a||(a=n,t.p2pConnectionList[n.runtime]=a),a.status){case M.LIVE:e.body.peer=n.runtime,r(a.url,e);break;case M.CREATED:case M.PROGRESS:t.resolveNormalStub(o).then(function(e){r(e)});break;case M.DISCONNECTED:D.info("[Registry - Resolve] - p2pConnection is disconnected lets try to reconnect"),t._p2pConnectionResolve.reconnectP2PRequester(a).then(function(e){r(e)},function(e){D.info("[Registry - Resolve] - Reason: ",e),t.resolveNormalStub(o).then(function(e){r(e)})});break;default:D.info("[Registry - resolve] - P2P: ",i),i?t._setupP2PRequester(n).then(function(e){r(e)},function(e){D.info("[Registry - Resolve] - Reason: ",e),t.resolveNormalStub(o).then(function(e){r(e)})}):t.resolveNormalStub(o).then(function(e){r(e)})}},function(e){D.info("[Registry - Resolve] - Reason: ",e),t.resolveNormalStub(o).then(function(e){r(e)})}))})}},{key:"_setupP2PRequester",value:function(e){var t=this;return D.log("[Registry._setupP2PConnection] loadStub with p2pRequester: ",e),new u.default(function(r,n){var o=e.runtime,i={remoteRuntimeURL:o,p2pHandler:e.p2pHandler,p2pRequesterStub:!0};t.watchingYou.observe("p2pRequesterStub",function(e){D.log("[Registry._setupP2PConnection] p2pRequesterStubs changed "+t.p2pRequesterStub),e.keypath.split(".")[0]===o&&"status"===e.name&&e.newValue===M.LIVE&&(D.log("[Registry._setupP2PConnection] p2pRequester is live "+t.p2pRequesterStub[o]),r(t.p2pRequesterStub[o].url))}),t.loader.loadStub(e.p2pRequester,i).then(function(){D.log("[Registry._setupP2PConnection] p2pRequester deployed: ",t.p2pRequesterStub[o])}).catch(function(e){n(e)})})}},{key:"isLegacy",value:function(e){var t=this;return new u.default(function(r,n){if(e===t._domain)return r(!1);D.log("[Registry] [Registry.Registry.isLegacy] ",e);var o=["hyperty-runtime","domain","global","hyperty"],i=(0,S.divideURL)(e);if(-1!==o.indexOf(i.type)||i.domain===t._domain)return r(!1);if(e.split("@").length>1){var a=i.domain;if(t.idpLegacyProxyList.hasOwnProperty(a)){var s=t.idpLegacyProxyList[a];return r(s.interworking?s.interworking:!1)}t._loader.descriptors.getIdpProxyDescriptor(a).then(function(e){e.interworking?(t.idpLegacyProxyList[a]=e,r(e.interworking)):r(!1)}).catch(function(e){D.warn("problem loading idp proxy descriptor for domain:",a," because ",e),n(e)})}else r(t.isInterworkingProtoStub(e))})}},{key:"isLocal",value:function(e){var t=["hyperty-runtime","runtime"],r=["hyperty"],n=e.split("://")[0];if(-1!==t.indexOf(n))return e.includes(this.runtimeURL);if(-1!==r.indexOf(n)){for(var o in this.hypertiesList){if(this.hypertiesList[o].hypertyURL===e)return!0}return!1}e.includes("/subscription")&&(e=e.substring(0,e.indexOf("/subscription")));var i=this.dataObjectList[e];return!!i&&(!i.interworking||!i.interworking)}},{key:"isInterworkingProtoStub",value:function(e){var t=this;return"boolean"!=typeof e&&(!!e.includes("/protostub/")&&(0,a.default)(t.protostubsList).filter(function(r){return t.protostubsList[r].url===e}).map(function(e){return!!t.protostubsList[e].hasOwnProperty("interworking")&&t.protostubsList[e].interworking})[0])}},{key:"loader",set:function(e){this._loader=e},get:function(){return this._loader}},{key:"messageBus",get:function(){return this._messageBus},set:function(e){var t=this;t._messageBus=e,t._messageBus.addListener(t.registryURL,function(e){(0,S.isHypertyURL)(e.from),e.body.hasOwnProperty("criteria");e.body.hasOwnProperty("resource")&&"."!==e.body.resource&&((0,S.isURL)(e.body.resource),(0,S.isUserURL)(e.body.resource),(0,S.isHypertyURL)(e.body.resource));e.type;if(e.body.hasOwnProperty("value")&&(e.body.value.hasOwnProperty("name"),e.body.value.hasOwnProperty("user")),"response"===e.type)return void D.error("[Register listener] skipping ",e);var r=t._getIdentityAssociated(e.body.resource,e.body.criteria),n={id:e.id,type:"response",to:e.from,from:e.to,body:{resource:r}};n.body.code=r?200:404,t._messageBus.postMessage(n)});var r=b.default.instance;t.addressAllocation=r,t._domainRegistration=new O.default(t.runtimeURL,t.registryURL,t._domain,e)}}]),Registry}();t.default=L,e.exports=t.default},function(e,t,r){e.exports={default:r(455),__esModule:!0}},function(e,t,r){r(80),r(101),e.exports=r(146).f("iterator")},function(e,t,r){e.exports={default:r(457),__esModule:!0}},function(e,t,r){r(458),r(192),r(463),r(464),e.exports=r(11).Symbol},function(e,t,r){"use strict";var n=r(21),o=r(62),i=r(51),a=r(26),s=r(194),u=r(459).KEY,c=r(70),l=r(136),f=r(100),d=r(98),p=r(22),y=r(146),h=r(147),v=r(460),g=r(461),b=r(41),_=r(45),m=r(50),R=r(140),O=r(79),w=r(141),k=r(462),S=r(148),P=r(44),D=r(68),M=S.f,L=P.f,j=k.f,U=n.Symbol,E=n.JSON,x=E&&E.stringify,A=p("_hidden"),I=p("toPrimitive"),C={}.propertyIsEnumerable,T=l("symbol-registry"),q=l("symbols"),H=l("op-symbols"),N=Object.prototype,F="function"==typeof U,B=n.QObject,G=!B||!B.prototype||!B.prototype.findChild,K=i&&c(function(){return 7!=w(L({},"a",{get:function(){return L(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=M(N,t);n&&delete N[t],L(e,t,r),n&&e!==N&&L(N,t,n)}:L,V=function(e){var t=q[e]=w(U.prototype);return t._k=e,t},W=F&&"symbol"==typeof U.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof U},Y=function(e,t,r){return e===N&&Y(H,t,r),b(e),t=R(t,!0),b(r),o(q,t)?(r.enumerable?(o(e,A)&&e[A][t]&&(e[A][t]=!1),r=w(r,{enumerable:O(0,!1)})):(o(e,A)||L(e,A,O(1,{})),e[A][t]=!0),K(e,t,r)):L(e,t,r)},J=function(e,t){b(e);for(var r,n=v(t=m(t)),o=0,i=n.length;i>o;)Y(e,r=n[o++],t[r]);return e},z=function(e,t){return void 0===t?w(e):J(w(e),t)},X=function(e){var t=C.call(this,e=R(e,!0));return!(this===N&&o(q,e)&&!o(H,e))&&(!(t||!o(this,e)||!o(q,e)||o(this,A)&&this[A][e])||t)},$=function(e,t){if(e=m(e),t=R(t,!0),e!==N||!o(q,t)||o(H,t)){var r=M(e,t);return!r||!o(q,t)||o(e,A)&&e[A][t]||(r.enumerable=!0),r}},Q=function(e){for(var t,r=j(m(e)),n=[],i=0;r.length>i;)o(q,t=r[i++])||t==A||t==u||n.push(t);return n},Z=function(e){for(var t,r=e===N,n=j(r?H:m(e)),i=[],a=0;n.length>a;)!o(q,t=n[a++])||r&&!o(N,t)||i.push(q[t]);return i};F||(U=function(){if(this instanceof U)throw TypeError("Symbol is not a constructor!");var e=d(arguments.length>0?arguments[0]:void 0),t=function(r){this===N&&t.call(H,r),o(this,A)&&o(this[A],e)&&(this[A][e]=!1),K(this,e,O(1,r))};return i&&G&&K(N,e,{configurable:!0,set:t}),V(e)},s(U.prototype,"toString",function(){return this._k}),S.f=$,P.f=Y,r(205).f=k.f=Q,r(81).f=X,r(145).f=Z,i&&!r(78)&&s(N,"propertyIsEnumerable",X,!0),y.f=function(e){return V(p(e))}),a(a.G+a.W+a.F*!F,{Symbol:U});for(var ee="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),te=0;ee.length>te;)p(ee[te++]);for(var re=D(p.store),ne=0;re.length>ne;)h(re[ne++]);a(a.S+a.F*!F,"Symbol",{for:function(e){return o(T,e+="")?T[e]:T[e]=U(e)},keyFor:function(e){if(!W(e))throw TypeError(e+" is not a symbol!");for(var t in T)if(T[t]===e)return t},useSetter:function(){G=!0},useSimple:function(){G=!1}}),a(a.S+a.F*!F,"Object",{create:z,defineProperty:Y,defineProperties:J,getOwnPropertyDescriptor:$,getOwnPropertyNames:Q,getOwnPropertySymbols:Z}),E&&a(a.S+a.F*(!F||c(function(){var e=U();return"[null]"!=x([e])||"{}"!=x({a:e})||"{}"!=x(Object(e))})),"JSON",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(_(t)||void 0!==e)&&!W(e))return g(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!W(t))return t}),n[1]=t,x.apply(E,n)}}),U.prototype[I]||r(63)(U.prototype,I,U.prototype.valueOf),f(U,"Symbol"),f(Math,"Math",!0),f(n.JSON,"JSON",!0)},function(e,t,r){var n=r(98)("meta"),o=r(45),i=r(62),a=r(44).f,s=0,u=Object.isExtensible||function(){return!0},c=!r(70)(function(){return u(Object.preventExtensions({}))}),l=function(e){a(e,n,{value:{i:"O"+ ++s,w:{}}})},f=function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,n)){if(!u(e))return"F";if(!t)return"E";l(e)}return e[n].i},d=function(e,t){if(!i(e,n)){if(!u(e))return!0;if(!t)return!1;l(e)}return e[n].w},p=function(e){return c&&y.NEED&&u(e)&&!i(e,n)&&l(e),e},y=e.exports={KEY:n,NEED:!1,fastKey:f,getWeak:d,onFreeze:p}},function(e,t,r){var n=r(68),o=r(145),i=r(81);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var a,s=r(e),u=i.f,c=0;s.length>c;)u.call(e,a=s[c++])&&t.push(a);return t}},function(e,t,r){var n=r(77);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n=r(50),o=r(205).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],s=function(e){try{return o(e)}catch(e){return a.slice()}};e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?s(e):o(n(e))}},function(e,t,r){r(147)("asyncIterator")},function(e,t,r){r(147)("observable")},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.SandboxType=void 0;var n=r(16),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(15),u=_interopRequireDefault(s),c=r(1),l=_interopRequireDefault(c),f=r(2),d=_interopRequireDefault(f),p=r(17),y=_interopRequireDefault(p),h=r(18),v=_interopRequireDefault(h),g=r(475),b=_interopRequireDefault(g),_=r(504),m=_interopRequireDefault(_),R=(t.SandboxType={APP:"app",NORMAL:"normal",WINDOW:"window"},function(e){function Sandbox(e){(0,l.default)(this,Sandbox);var t=(0,y.default)(this,(Sandbox.__proto__||(0,u.default)(Sandbox)).call(this)),r=t;return e&&(r.capabilities=e),t}return(0,v.default)(Sandbox,e),(0,d.default)(Sandbox,[{key:"deployComponent",value:function(e,t,r){var n=this;return new a.default(function(o,i){var a={type:"create",from:b.default.ExternalDeployAddress,to:b.default.InternalDeployAddress,body:{url:t,sourceCode:e,config:r}};n.postMessage(a,function(e){200===e.body.code?o("deployed"):i(e.body.desc)})})}},{key:"removeComponent",value:function(e){var t=this;return new a.default(function(r,n){var o={type:"delete",from:b.default.ExternalDeployAddress,to:b.default.InternalDeployAddress,body:{url:e}};t.postMessage(o,function(e){200===e.body.code?r("undeployed"):n(e.body.desc)})})}},{key:"matches",value:function(e){var t=this,r=(0,o.default)(e).filter(function(r){return!(t.capabilities[r]&&t.capabilities[r]===e[r])});return 0===r.length||!e[r]}}]),Sandbox}(m.default));t.default=R},function(e,t,r){r(467),e.exports=r(11).Object.getPrototypeOf},function(e,t,r){var n=r(76),o=r(196);r(138)("getPrototypeOf",function(){return function(e){return o(n(e))}})},function(e,t,r){e.exports={default:r(469),__esModule:!0}},function(e,t,r){r(470),e.exports=r(11).Object.setPrototypeOf},function(e,t,r){var n=r(26);n(n.S,"Object",{setPrototypeOf:r(471).set})},function(e,t,r){var n=r(45),o=r(41),i=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{n=r(69)(Function.call,r(148).f(Object.prototype,"__proto__").set,2),n(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:i}},function(e,t,r){e.exports={default:r(473),__esModule:!0}},function(e,t,r){r(474);var n=r(11).Object;e.exports=function(e,t){return n.create(e,t)}},function(e,t,r){var n=r(26);n(n.S,"Object",{create:r(141)})},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(476),u=_interopRequireDefault(s),c=function(){function SandboxRegistry(e){(0,o.default)(this,SandboxRegistry);var t=this;t._bus=e,t._factory=new u.default(e),t._components={},e.addListener(SandboxRegistry.InternalDeployAddress,function(e){switch(e.type){case"create":t._onDeploy(e);break;case"delete":t._onRemove(e)}})}return(0,a.default)(SandboxRegistry,[{key:"_responseMsg",value:function(e,t,r){var n={id:e.id,type:"response",from:SandboxRegistry.InternalDeployAddress,to:SandboxRegistry.ExternalDeployAddress},o={};return t&&(o.code=t),r&&(o.desc=r),n.body=o,n}},{key:"_onDeploy",value:function(e){var t=this,r=e.body.config,n=e.body.url,o=e.body.sourceCode,i=void 0,a=void 0;if(t._components.hasOwnProperty(n))i=500,a="Instance "+n+" already exist!";else try{t._components[n]=t._create(n,o,r,t._factory),i=200}catch(e){i=500,a=e}var s=t._responseMsg(e,i,a);t._bus.postMessage(s)}},{key:"_onRemove",value:function(e){var t=this,r=e.body.url,n=void 0,o=void 0;t._components.hasOwnProperty(r)?(delete t._components[r],t._bus.removeAllListenersOf(r),n=200):(n=500,o="Instance "+r+" doesn't exist!");var i=t._responseMsg(e,n,o);t._bus.postMessage(i)}},{key:"_create",value:function(e,t,r,n){}},{key:"components",get:function(){return this._components}}]),SandboxRegistry}();c.ExternalDeployAddress="hyperty-runtime://sandbox/external",c.InternalDeployAddress="hyperty-runtime://sandbox/internal",t.default=c,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(477),u=_interopRequireDefault(s),c=r(490),l=_interopRequireDefault(c),f=r(6),d=r(491),p=_interopRequireDefault(d),y=r(492),h=_interopRequireDefault(y),v=r(150),g=_interopRequireDefault(v),b=r(494),_=_interopRequireDefault(b),m=r(495),R=_interopRequireDefault(m),O=r(496),w=_interopRequireDefault(O),k=r(497),S=_interopRequireDefault(k),P=r(499),D=_interopRequireDefault(P),M=r(210),L=_interopRequireDefault(M),j=function(){function SandboxFactory(e){(0,o.default)(this,SandboxFactory);var t=this;t._bus=e,t._divideURL=f.divideURL}return(0,a.default)(SandboxFactory,[{key:"createSyncher",value:function(e,t,r){return new u.default(e,t,r)}},{key:"createIdentityManager",value:function(e,t,r){return new p.default(e,t,r)}},{key:"createDiscovery",value:function(e,t,r){return new h.default(e,t,r)}},{key:"createSearch",value:function(e,t){return new _.default(e,t)}},{key:"createContextObserver",value:function(e,t,r,n){return new R.default(e,t,r,n,this)}},{key:"createContextReporter",value:function(e,t,r){return new w.default(e,t,r,this)}},{key:"createNotificationHandler",value:function(e){return new l.default(e)}},{key:"createMessageBodyIdentity",value:function(e,t,r,n,o,i,a,s){return new S.default(e,t,r,n,o,i,a,s)}},{key:"createChatManager",value:function(e,t,r,n){return new D.default(e,t,r,n,this)}},{key:"createChatController",value:function(e,t,r,n,o,i){return new L.default(e,t,r,n,o,i)}},{key:"createRegistrationStatus",value:function(e,t,r,n){return new g.default(e,t,r,n)}},{key:"divideURL",get:function(){return this._divideURL}}]),SandboxFactory}();t.default=j,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(46),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(4),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(f),p=r(6),y=r(479),h=_interopRequireDefault(y),v=r(488),g=_interopRequireDefault(v),b=r(489),_=_interopRequireDefault(b),m=d.getLogger("Syncher"),R=function(){function Syncher(e,t,r){(0,u.default)(this,Syncher);var n=this;n._owner=e,n._bus=t,n._subURL=r.runtimeURL+"/sm",n._runtimeUrl=r.runtimeURL,n._p2pHandler=r.p2pHandler,n._p2pRequester=r.p2pRequester,n._reporters={},n._observers={},n._provisionals={},t.addListener(e,function(t){if(t.from!==e)switch(m.info("[Syncher] Syncher-RCV: ",t,n),t.type){case"forward":n._onForward(t);break;case"create":n._onRemoteCreate(t);break;case"delete":n._onRemoteDelete(t);break;case"execute":n._onExecute(t)}})}return(0,l.default)(Syncher,[{key:"create",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"no name",s=arguments[6],u=arguments[7];if(!e)throw Error("[Syncher - Create] - You need specify the data object schema");if(!t)throw Error("[Syncher - Create] -The observers should be defined");var c=this;u=u||{};var l=(0,a.default)({},u);return l.p2p=o,l.store=n,l.schema=e,l.authorise=t,l.p2pHandler=c._p2pHandler,l.p2pRequester=c._p2pRequester,l.data=r?(0,p.deepClone)(r):{},l.name=0===i.length?"no name":i,l.reporter=u.hasOwnProperty("reporter")&&"boolean"!=typeof u.reporter?u.reporter:c._owner,l.resume=!1,u?(l.mutual=!u.hasOwnProperty("mutual")||u.mutual,l.name=u.hasOwnProperty("name")?u.name:l.name):l.mutual=!0,u.hasOwnProperty("reuseURL")&&(l.resource=u.reuseURL),s&&(l.identity=s),m.log("[syncher - create] - create Reporter - createInput: ",l),c._create(l)}},{key:"resumeReporters",value:function(e){var t=this;return m.log("[syncher - create] - resume Reporter - criteria: ",e),(0,a.default)(e,{resume:!0}),t._resumeCreate(e)}},{key:"subscribe",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],s=arguments[6],u=this,c={};return c.p2p=n,c.store=r,c.schema=e,c.domain_subscription=i,c.resource=t,s&&(c.identity=s),c.mutual=o,m.log("[syncher - subscribe] - subscribe criteria: ",c),(0,a.default)(c,{resume:!1}),u._subscribe(c)}},{key:"resumeObservers",value:function(e){var t=this,r=e||{};return(0,a.default)(r,{resume:!0}),t._resumeSubscribe(r)}},{key:"read",value:function(e,t){var r=this;return new o.default(function(t,n){r._readReporter(e).then(function(e){t(e)})})}},{key:"_readCallBack",value:function(e,t,r){var n=this,o={},i={},s=0;if(e.body.code<300)if(e.body.value.hasOwnProperty("responses"))if(0===s)i=e.body.value,++s;else{delete e.body.value.responses;var u=void 0;for(u in e.body.value)o.hasOwnProperty(u)||(o[u]={}),(0,a.default)(o[u],e.body.value[u]);++s,s===i.responses&&(i.childrenObjects=o,delete i.responses,n._bus.removeResponseListener(e.from,e.id),t(i))}else n._bus.removeResponseListener(e.from,e.id),t(e.body.value);else r(e.body.desc)}},{key:"_readReporter",value:function(e){var t=this,r={type:"read",from:t._owner,to:e};return new o.default(function(e,n){t._bus.postMessage(r,function(r){return t._readCallBack(r,e,n)},!1)})}},{key:"onNotification",value:function(e){this._onNotificationHandler=e}},{key:"onClose",value:function(e){this._onClose=e}},{key:"_create",value:function(e){var t=this;return new o.default(function(r,n){var o=(0,a.default)({},e),i=e.resume;o.created=(new Date).toISOString(),o.runtime=t._runtimeUrl;var s=(0,p.deepClone)(o);delete s.p2p,delete s.store,delete s.observers,delete s.identity;var u={type:"create",from:t._owner,to:t._subURL,body:{resume:i,value:s}};u.body.schema=o.schema,o.p2p&&(u.body.p2p=o.p2p),o.store&&(u.body.store=o.store),o.identity&&(u.body.identity=o.identity),m.log("[syncher._create]: ",o,u),t._bus.postMessage(u,function(i){if(m.log("[syncher - create] - create-response: ",i),200===i.body.code){o.url=i.body.resource,o.status="live",o.syncher=t,o.childrens=i.body.childrenResources;var a=t._reporters[o.url];a||(a=new h.default(o),t._reporters[o.url]=a),a.inviteObservers(e.authorise,e.p2p),r(a)}else n(i.body.desc)})})}},{key:"_resumeCreate",value:function(e){var t=this,r=this;return new o.default(function(n,o){var i=e.resume,a={type:"create",from:r._owner,to:r._subURL,body:{resume:i}};m.log("[syncher - create]: ",e,a),e&&(a.body.value=e,e.hasOwnProperty("reporter")?a.body.value.reporter=e.reporter:a.body.value.reporter=r._owner),e.p2p&&(a.body.p2p=e.p2p),e.store&&(a.body.store=e.store),e.observers&&(a.body.authorise=e.observers),e.identity&&(a.body.identity=e.identity),m.log("[syncher._resumeCreate] - resume message: ",a),r._bus.postMessage(a,function(e){if(m.log("[syncher._resumeCreate] - create-resumed-response: ",e),200===e.body.code){var i=e.body.value;for(var a in i){var s=i[a];s.data=(0,p.deepClone)(s.data)||{},s.childrenObjects&&(s.childrenObjects=(0,p.deepClone)(s.childrenObjects)),s.mutual=!1,s.resume=!0,s.status="live",s.syncher=r,m.log("[syncher._resumeCreate] - create-resumed-dataObjectReporter",s);var u=new h.default(s);s.childrenObjects&&u.resumeChildrens(s.childrenObjects),r._reporters[s.url]=u}n(r._reporters),t._onReportersResume&&t._onReportersResume(t._reporters)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_subscribe",value:function(e){var t=this;return new o.default(function(r,n){var o={type:"subscribe",from:t._owner,to:t._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(o.body.p2p=e.p2p),e.hasOwnProperty("store")&&(o.body.store=e.store),e.hasOwnProperty("schema")&&(o.body.schema=e.schema),e.hasOwnProperty("identity")&&(o.body.identity=e.identity),e.hasOwnProperty("resource")&&(o.body.resource=e.resource),e.hasOwnProperty("domain_subscription")&&(o.body.domain_subscription=e.domain_subscription)),o.body.resume=e.resume,e.hasOwnProperty("mutual")&&(o.body.mutual=e.mutual),m.log("[syncher_subscribe] - subscribe message: ",e,o),t._bus.postMessage(o,function(o){m.log("[syncher] - subscribe-response: ",o);var i=o.body.resource,a=t._provisionals[i];if(delete t._provisionals[i],a&&a._releaseListeners(),o.body.code<200)m.log("[syncher] - new DataProvisional: ",o.body.childrenResources,i),a=new _.default(t._owner,i,t._bus,o.body.childrenResources),t._provisionals[i]=a;else if(200===o.body.code){m.log("[syncher] - new Data Object Observer: ",o,t._provisionals);var s=o.body.value;s.syncher=t,s.p2p=e.p2p,s.store=e.store,s.identity=e.identity,s.resume=!1,s.mutual=e.mutual;var u=t._observers[i];u?u.sync():(u=new g.default(s),t._observers[i]=u),m.log("[syncher] - new Data Object Observer already exist: ",u),r(u),a&&a.apply(u)}else n(o.body.desc)})})}},{key:"_resumeSubscribe",value:function(e){var t=this,r=this;return new o.default(function(n,o){var i={type:"subscribe",from:r._owner,to:r._subURL,body:{}};e&&(e.hasOwnProperty("p2p")&&(i.body.p2p=e.p2p),e.hasOwnProperty("store")&&(i.body.store=e.store),e.hasOwnProperty("schema")&&(i.body.schema=e.schema),e.hasOwnProperty("identity")&&(i.body.identity=e.identity),e.hasOwnProperty("resource")&&(i.body.resource=e.url)),i.body.resume=e.resume;var a=e.mutual;e.hasOwnProperty("mutual")&&(i.body.mutual=a),m.log("[syncher] - subscribe message: ",e,i),r._bus.postMessage(i,function(e){m.log("[syncher] - subscribe-resumed-response: ",e);var i=e.body.resource,a=r._provisionals[i];if(delete r._provisionals[i],a&&a._releaseListeners(),e.body.code<200)m.log("[syncher] - resume new DataProvisional: ",e,i),a=new _.default(r._owner,i,r._bus,e.body.childrenResources),r._provisionals[i]=a;else if(200===e.body.code){var s=e.body.value;for(var u in s){var c=s[u];m.log("[syncher] - Resume Object Observer: ",e,c,r._provisionals),c.childrenObjects&&(c.childrenObjects=(0,p.deepClone)(c.childrenObjects)),c.data=(0,p.deepClone)(c.data)||{},c.resume=!0,c.syncher=r,m.log("[syncher._resumeSubscribe] - create new dataObject: ",c);var l=new g.default(c);c.childrenObjects&&l.resumeChildrens(c.childrenObjects),m.log("[syncher._resumeSubscribe] - new dataObject",l),r._observers[l.url]=l,r._provisionals[l.url]&&r._provisionals[l.url].apply(l)}n(r._observers),t._onObserversResume&&t._onObserversResume(r._observers)}else 404===e.body.code?n({}):o(e.body.desc)})})}},{key:"_onForward",value:function(e){this._reporters[e.body.to]._onForward(e)}},{key:"_onRemoteCreate",value:function(e){var t=this,r=e.from.slice(0,-13),n=(0,p.divideURL)(r),o=n.domain,i={type:e.type,from:e.body.source,url:r,domain:o,schema:e.body.schema,value:e.body.value,identity:e.body.identity,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})}};t._onNotificationHandler&&(m.info("[Syncher] NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}},{key:"_onRemoteDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(m.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}},{key:"_onExecute",value:function(e){var t=this,r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}};if((e.from===t._runtimeUrl+"/registry/"||e.from===t._runtimeUrl+"/registry")&&e.body&&e.body.method&&"close"===e.body.method&&t._onClose){var n={type:"close",ack:function(e){e&&(r.body.code=e),t._bus.postMessage(r)}};m.info("[Syncher] Close-EVENT: ",n),t._onClose(n)}else t._bus.postMessage(r)}},{key:"onReportersResume",value:function(e){this._onReportersResume=e}},{key:"onObserversResume",value:function(e){this._onObserversResume=e}},{key:"owner",get:function(){return this._owner}},{key:"reporters",get:function(){return this._reporters}},{key:"observers",get:function(){return this._observers}}]),Syncher}();t.default=R,e.exports=t.default},function(e,t,r){var n=r(11),o=n.JSON||(n.JSON={stringify:JSON.stringify});e.exports=function(e){return o.stringify.apply(o,arguments)}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(35),a=_interopRequireDefault(i),s=r(3),u=_interopRequireDefault(s),c=r(15),l=_interopRequireDefault(c),f=r(1),d=_interopRequireDefault(f),p=r(2),y=_interopRequireDefault(p),h=r(17),v=_interopRequireDefault(h),g=r(103),b=_interopRequireDefault(g),_=r(18),m=_interopRequireDefault(_),R=r(4),O=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(R),w=r(206),k=_interopRequireDefault(w),S=r(6),P=O.getLogger("DataObjectReporter"),D=function(e){function DataObjectReporter(e){(0,d.default)(this,DataObjectReporter);var t=(0,v.default)(this,(DataObjectReporter.__proto__||(0,l.default)(DataObjectReporter)).call(this,e)),r=t;return r._subscriptions={},r._syncObj.observe(function(e){P.log("[Syncher.DataObjectReporter] "+r.url+" publish change: ",e),r._onChange(e)}),r._allocateListeners(),r.invitations=[],r._childrenSizeThreshold=5e4,t}return(0,m.default)(DataObjectReporter,e),(0,y.default)(DataObjectReporter,[{key:"_allocateListeners",value:function(){(0,b.default)(DataObjectReporter.prototype.__proto__||(0,l.default)(DataObjectReporter.prototype),"_allocateListeners",this).call(this);var e=this;e._objectListener=e._bus.addListener(e._url,function(t){switch(P.log("[Syncher.DataObjectReporter] listener "+e._url+" Received: ",t),t.type){case"response":e._onResponse(t);break;case"read":e._onRead(t);break;case"execute":e._onExecute(t);break;case"create":e._onChildCreate(t)}}),e._runtimeStatusListener=e._bus.addListener(e._syncher._runtimeUrl+"/status",function(t){t.body&&t.body.resource&&t.body.resource===e._url&&t.body.value&&t.body.value.backupRevision&&(e.data.backupRevision=t.body.value.backupRevision)})}},{key:"_releaseListeners",value:function(){(0,b.default)(DataObjectReporter.prototype.__proto__||(0,l.default)(DataObjectReporter.prototype),"_releaseListeners",this).call(this),this._objectListener.remove()}},{key:"inviteObservers",value:function(e,t){var r=this,n=e;n.length>0&&(P.log("[Syncher.DataObjectReporter] InviteObservers ",n,r._metadata),n.forEach(function(e){var n=new u.default(function(n,o){var i={type:"create",from:r._syncher._owner,to:r._syncher._subURL,body:{resume:!1,resource:r._url,schema:r._schema,value:r._metadata,authorise:[e]}};t&&(i.body.p2p=t),r.data.mutual||(i.body.mutual=r.data.mutual),r._bus.postMessage(i,function(t){P.log("[Syncher.DataObjectReporter] Invitation reply ",t);var r={invited:e,code:t.body&&t.body.code?t.body.code:500,desc:t.body&&t.body.desc?t.body.desc:"Unknown"};r.code<300?n(r):r.code>=300&&o(r)})});r.invitations.push(n)}))}},{key:"delete",value:function(){var e=this;e._heartBeat&&e._heartBeat.stop(),e._deleteChildrens().then(function(t){P.log(t);var r={type:"delete",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(r,function(t){P.log("DataObjectReporter-DELETE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._reporters[e._url],e._syncObj={})})})}},{key:"onSubscription",value:function(e){this._onSubscriptionHandler=e}},{key:"onResponse",value:function(e){this._onResponseHandler=e}},{key:"onRead",value:function(e){this._onReadHandler=e}},{key:"onExecute",value:function(e){this._onExecuteHandler=e}},{key:"_onForward",value:function(e){var t=this;switch(P.log("DataObjectReporter-RCV: ",e),e.body.type){case"subscribe":t._onSubscribe(e);break;case"unsubscribe":t._onUnSubscribe(e)}}},{key:"_onSubscribe",value:function(e){var t=this,r=e.body.from,n=(0,S.divideURL)(r),o=n.domain,i=!0;e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i=!1),P.log("[DataObjectReporter._onSubscribe]",e,o,n);var a={type:e.body.type,url:r,domain:o,identity:e.body.identity,nutual:i,accept:function(){var n={url:r,status:"live"};t._subscriptions[r]=n,t.metadata.subscriptions&&t.metadata.subscriptions.push(n.url);var o=(0,S.deepClone)(t._metadata);o.data=(0,S.deepClone)(t.data),o.version=t._version;var i={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,schema:t._schema,value:o}};return e.body.hasOwnProperty("mutual")&&!e.body.mutual&&(i.body.mutual=e.body.mutual,t.data.mutual=!1),t._heartBeat&&(i.body.value.childrenObjects={},i.body.value.childrenObjects.heartbeat=t._heartBeat.heartbeat),t._bus.postMessage(i),n},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:403,desc:r}})}};t._onSubscriptionHandler&&(P.log("SUBSCRIPTION-EVENT: ",a),t._onSubscriptionHandler(a))}},{key:"_onUnSubscribe",value:function(e){var t=this,r=e.body.from,n=(0,S.divideURL)(r),o=n.domain;P.log("[DataObjectReporter._onUnSubscribe]",e,o,n),delete t._subscriptions[r],delete t.invitations[r];var i={type:e.body.type,url:r,domain:o,identity:e.body.identity};t._onSubscriptionHandler&&(P.log("UN-SUBSCRIPTION-EVENT: ",i),t._onSubscriptionHandler(i))}},{key:"_onResponse",value:function(e){var t=this,r={type:e.type,url:e.from,code:e.body.code};t._onResponseHandler&&(P.log("RESPONSE-EVENT: ",r),t._onResponseHandler(r))}},{key:"_onRead",value:function(e){var t=this,r=(0,a.default)(t.childrensJSON).length,n=r>t._childrenSizeThreshold,i={type:e.type,url:e.from,accept:function(){n?t._syncReplyForLargeData(e):t._syncReply(e)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}},s=[];t.metadata.subscriptions?s=t.metadata.subscriptions:t._subscriptions&&(s=(0,o.default)(t._subscriptions).map(function(e){return t._subscriptions[e].url})),-1!=s.indexOf(e.from)?n?t._syncReplyForLargeData(e):t._syncReply(e):t._onReadHandler&&(P.log("READ-EVENT: ",i),t._onReadHandler(i))}},{key:"_syncReply",value:function(e){var t=this,r=(0,S.deepClone)(t.metadata);r.data=(0,S.deepClone)(t.data),r.childrenObjects=(0,S.deepClone)(t.childrensJSON),r.version=t._version;var n={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:r}};t._bus.postMessage(n)}},{key:"_syncReplyForLargeData",value:function(e){var t=this,r=(0,S.deepClone)(t.metadata);r.data=(0,S.deepClone)(t.data),r.version=t._version,delete r.childrenObjects;var n=[],o={};for(child in t._childrenObjects)o[child]={},(0,a.default)(o).length>t._childrenSizeThreshold&&n.push(o),o[child]={},o[child].value=t._childrenObjects[child].metadata,o[child].identity=t._childrenObjects[child].identity;n.push(o),r.responses=n.length+1;var i={id:e.id,type:"response",from:e.to,to:e.from,body:{code:100,value:r}};t._bus.postMessage(i),n.forEach(function(e){var n=(0,S.deepClone)(i);n.body.value=e,n.body.value.responses=r.responses,setTimeout(function(){t._bus.postMessage(n)},50)})}},{key:"_onExecute",value:function(e){var t=this;if(!e.body.method)throw e;var r={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}},n={type:e.type,url:e.from,method:e.body.method,params:e.body.params,accept:function(){t._bus.postMessage(r)},reject:function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:401,desc:r}})}};t._onExecuteHandler&&(P.log("[DataObjectReporter] EXECUTE-EVENT: ",n),t._onExecuteHandler(n))}},{key:"subscriptions",get:function(){return this._subscriptions}},{key:"childrensJSON",get:function(){var e=this,t={},r=void 0;for(r in e._childrenObjects)t[r]={},t[r].value=e._childrenObjects[r].metadata,t[r].identity=e._childrenObjects[r].identity;return t}}]),DataObjectReporter}(k.default);t.default=D,e.exports=t.default},function(e,t,r){e.exports={default:r(481),__esModule:!0}},function(e,t,r){r(482);var n=r(11).Object;e.exports=function(e,t){return n.getOwnPropertyDescriptor(e,t)}},function(e,t,r){var n=r(50),o=r(148).f;r(138)("getOwnPropertyDescriptor",function(){return function(e,t){return o(n(e),t)}})},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(6),u=function(){function HeartBeat(e,t,r,n){function throwMandatoryParmMissingError(e){throw"[HeartBeat] "+e+" mandatory parameter is missing"}var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:60;(0,o.default)(this,HeartBeat);var a=this;e?a._bus=e:throwMandatoryParmMissingError("bus"),n?a._dataObject=n:throwMandatoryParmMissingError("dataObject"),i?a._heartBeatRate=i:throwMandatoryParmMissingError("heartBeatRate"),r?a._runtimeUrl=r:throwMandatoryParmMissingError("runtimeUrl"),t?a._hypertyUrl=t:throwMandatoryParmMissingError("hypertyUrl"),a._stop={heartBeat:!1,sync:function(e){var o={from:t,to:r+"/sm",type:"execute",body:{method:"stopSync",params:[n.url]}};e.postMessage(o)}}}return(0,a.default)(HeartBeat,[{key:"start",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.heartbeat=e,this._isHeartBeatActive(this.heartBeat,2*this._heartBeatRate)?this._watchHeartBeat(this._heartBeatRate,!0,this._onHertbeatStopped):(this._stop.heartBeat=this._startHeartBeat(this._heartBeatRate),this._startSync())}},{key:"stop",value:function(){this._stop.heartBeat&&this._stop.heartBeat(),this._stop.sync(this._bus)}},{key:"onNewHeartbeat",value:function(e){this.heartbeat=e}},{key:"_isHeartBeatActive",value:function(e,t){var r=(0,s.secondsSinceEpoch)()-e;return!(r>2*t)}},{key:"_startHeartBeat",value:function(e){var t=this,r={from:t._hypertyUrl,to:t._dataObject.url+"/children/",type:"create",body:{resource:"heartbeat",mutual:!1,value:(0,s.secondsSinceEpoch)()}};this._bus.postMessage(r),this.heartbeat=(0,s.secondsSinceEpoch)();var n=setInterval(function(){var e={from:t._hypertyUrl,to:t._dataObject.url+"/children/",type:"create",body:{resource:"heartbeat",mutual:!1,value:(0,s.secondsSinceEpoch)()}};t._bus.postMessage(e),this.heartbeat=(0,s.secondsSinceEpoch)()},1e3*e);return function(){clearInterval(n)}}},{key:"_startSync",value:function(){var e=this._dataObject.data.backupRevision,t={from:this._hypertyUrl,to:this._runtimeUrl+"/sm",type:"execute",body:{method:"sync",params:[this._dataObject.url,e]}};this._bus.postMessage(t)}},{key:"_watchHeartBeat",value:function(e,t,r){var n=this,o=r,i=setInterval(function(){t&&!n._isHeartBeatActive(n.heartBeat,n._heartBeatRate)?(clearInterval(i),o(n)):!t&&this._isHeartBeatActive(n.heartBeat,n._heartBeatRate)&&(clearInterval(i),o())},1e3*e*2)}},{key:"_onHertbeatStopped",value:function(e){e._startHeartBeat(e._heartBeatRate),e._startSync()}},{key:"heartBeat",get:function(){return this.heartbeat?this.heartbeat:0}}]),HeartBeat}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(485),l=_interopRequireDefault(c),f=function(){function HypertyResourceFactory(){(0,a.default)(this,HypertyResourceFactory)}return(0,u.default)(HypertyResourceFactory,[{key:"createHypertyResource",value:function(e,t,r){var n=void 0;switch(t){case"file":n=new l.default(e,r);break;default:throw new Error("[HypertyResourceFactory.createHypertyResource] not supported type: ",t)}return n}},{key:"createHypertyResourceWithContent",value:function(e,t,r,n){var i=void 0;return new o.default(function(o){switch(t){case"file":i=new l.default(e,n);break;default:reject()}i.init(r).then(function(){return i.save()}).then(function(){o(i)})})}}]),HypertyResourceFactory}();t.default=f,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(15),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(17),d=_interopRequireDefault(f),p=r(18),y=_interopRequireDefault(p),h=r(4),v=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(h),g=r(486),b=_interopRequireDefault(g),_=(r(6),r(487)),m=_interopRequireDefault(_),R=v.getLogger("FileHypertyResource"),O=function(e){function FileHypertyResource(e,t){(0,u.default)(this,FileHypertyResource);var r=(0,d.default)(this,(FileHypertyResource.__proto__||(0,a.default)(FileHypertyResource)).call(this,e,t));return r.metadata.resourceType="file",r}return(0,y.default)(FileHypertyResource,e),(0,l.default)(FileHypertyResource,[{key:"init",value:function(e){var t=this;if(!e)throw new Error("[FileHypertyResource.constructor] missing mandatory *file* input ");return new o.default(function(r,n){if(t._metadata.name=e.name,t._metadata.lastModified=e.lastModified,t._metadata.size=e.size,t._metadata.mimetype=e.type,R.log("[FileHypertyResource.init] file: ",e),t._isSender){switch(e.type.split("/")[0]){case"image":t._getImagePreview(e).then(function(n){t._metadata.preview=n,t._content=e,r()});break;default:t._content=e,r()}}else t._content=e.content,e.preview&&(t._metadata.preview=e.preview),r()})}},{key:"_getImagePreview",value:function(e){var t=new FileReader;return new o.default(function(r,n){m.default.resize(e,{width:100,height:100},function(e,n){n?(t.readAsDataURL(e),t.onload=function(e){r(e.target.result)}):(R.warn("[FileHypertyResource._getImagePreview] unable to create image preview from original image "),r(void 0))})})}},{key:"toMessage",value:function(){}},{key:"name",get:function(){return this._metadata.name}},{key:"preview",get:function(){return this._metadata.preview}}]),FileHypertyResource}(b.default);t.default=O,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(15),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(17),d=_interopRequireDefault(f),p=r(103),y=_interopRequireDefault(p),h=r(18),v=_interopRequireDefault(h),g=r(4),b=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(g),_=r(6),m=r(208),R=_interopRequireDefault(m),O=b.getLogger("HypertyResource"),w=function(e){function HypertyResource(e,t){(0,u.default)(this,HypertyResource);var r=(0,d.default)(this,(HypertyResource.__proto__||(0,a.default)(HypertyResource)).call(this,t)),n=r;return n.arraybufferSizeLimit=5242880,n._isSender=e,n._localStorageURL=n._parentObject._syncher._runtimeUrl+"/storage",r}return(0,v.default)(HypertyResource,e),(0,l.default)(HypertyResource,[{key:"save",value:function(){var e=this;return new o.default(function(t,r){var n={from:e._owner,to:e._localStorageURL,type:"create",body:{value:(0,_.deepClone)(e._metadata)}},o=function(n){O.info("[HypertyResource.save] reply: ",n),e._bus.removeResponseListener(e._owner,n.id),200===n.body.code?(n.body.value&&(e._metadata.contentURL||(e._metadata.contentURL=[]),e._metadata.contentURL.push(n.body.value)),t()):r(n.body.code+" "+n.body.desc)};n.body.value.content=e._content,e._bus.postMessage(n,o,!1)})}},{key:"read",value:function(e){var t=this;return O.info("[HypertyResource.read] ",this),new o.default(function(r,n){if(t.content)r(t);else{var o=t._getBestContentURL(t._metadata.contentURL);O.log("Storage:",o);var i={from:t._owner,to:o.url,type:"read",body:{resource:o.url+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(i.body.p2pRequester=t.metadata.p2pRequester,i.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(i,e).then(function(e){O.info("[HypertyResource] - get locally the resource:",e),r(t)}).catch(function(i){O.warn("[HypertyResource] - get locally the resource fail",i);var a={from:t._owner,to:o.remoteURL,type:"read",body:{resource:o.remoteURL+"/"+o.resource,p2p:!0}};t.metadata.p2pRequester&&t.metadata.p2pHandler&&(a.body.p2pRequester=t.metadata.p2pRequester,a.body.p2pHandler=t.metadata.p2pHandler),t._getBestResource(a,e).then(function(e){O.warn("[HypertyResource] - get remotely the resource",e),r(t)}).catch(function(e){O.warn("[HypertyResource] - get remotely the resource fail",e),n(e.body.code+" "+e.body.desc)})})}})}},{key:"_getBestResource",value:function(e,t){var r=this;return new o.default(function(n,o){var i=setTimeout(function(){return r._bus.removeResponseListener(r._owner,s),e.body.code=408,e.body.desc="Response timeout",o(e)},3e3),a=function(e){O.log("[HypertyResource.read] reply: ",e);var a=e.id;switch(clearTimeout(i),e.body.code){case 200:r._content=e.body.value.content,e.body.value.size<r.arraybufferSizeLimit&&r.save(),r._bus.removeResponseListener(r._owner,a),n(e);break;case 183:t(e.body.value);break;default:r._bus.removeResponseListener(r._owner,a),o(e)}},s=r._bus.postMessage(e,a,!1)})}},{key:"delete",value:function(){var e=this;O.info("[HypertyResource.delete]",e.metadata);var t={from:e._owner,to:e._localStorageURL,type:"delete",body:{resources:e.metadata.contentURL}};return new o.default(function(r){e._bus.postMessage(t,function(e){r(e.body.code<300?!0:!1)})})}},{key:"_getBestContentURL",value:function(e){var t=this,r=e[0],n=r.substr(r.lastIndexOf("/")+1);return{url:t._localStorageURL,resource:n,remoteURL:r.substr(0,r.lastIndexOf("/"))}}},{key:"resourceType",get:function(){return this.metadata.resourceType}},{key:"mimetype",get:function(){return this._metadata.type}},{key:"content",get:function(){return this._content}},{key:"contentURL",get:function(){return this._metadata.contentURL}},{key:"shareable",get:function(){var e=this,t=(0,y.default)(HypertyResource.prototype.__proto__||(0,a.default)(HypertyResource.prototype),"metadata",this);return t.resourceType=e.resourceType,t}}]),HypertyResource}(R.default);t.default=w,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s="undefined"!=typeof Blob&&function(){try{return Boolean(new Blob)}catch(e){return!1}}(),u=s&&"undefined"!=typeof Uint8Array&&function(){try{return 100===new Blob([new Uint8Array(100)]).size}catch(e){return!1}}(),c="undefined"!=typeof HTMLCanvasElement&&HTMLCanvasElement.prototype.toBlob,l=c||"undefined"!=typeof Uint8Array&&"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof atob,f="undefined"!=typeof FileReader||"undefined"!=typeof URL,d=function(){function ImageTools(){(0,o.default)(this,ImageTools)}return(0,a.default)(ImageTools,null,[{key:"resize",value:function(e,t,r){"function"==typeof t&&(r=t,t={width:640,height:480});t.width,t.height;if(!ImageTools.isSupported()||!e.type.match(/image.*/))return r(e,!1),!1;if(e.type.match(/image\/gif/))return r(e,!1),!1;var n=document.createElement("img");return n.onload=function(o){var i=n.width,a=n.height,s=!1;if(i>=a&&i>t.width?(a*=t.width/i,i=t.width,s=!0):a>t.height&&(i*=t.height/a,a=t.height,s=!0),!s)return void r(e,!1);var u=document.createElement("canvas");if(u.width=i,u.height=a,u.getContext("2d").drawImage(n,0,0,i,a),c)u.toBlob(function(e){r(e,!0)},e.type);else{var l=ImageTools._toBlob(u,e.type);r(l,!0)}},ImageTools._loadImage(n,e),!0}},{key:"_toBlob",value:function(e,t){var r=e.toDataURL(t),n=r.split(","),o=void 0;o=n[0].indexOf("base64")>=0?atob(n[1]):decodeURIComponent(n[1]);for(var i=new ArrayBuffer(o.length),a=new Uint8Array(i),c=0;c<o.length;c+=1)a[c]=o.charCodeAt(c);var l=n[0].split(":")[1].split(";")[0],f=null;if(s)f=new Blob([u?a:i],{type:l});else{var d=new BlobBuilder;d.append(i),f=d.getBlob(l)}return f}},{key:"_loadImage",value:function(e,t,r){if("undefined"==typeof URL){var n=new FileReader;n.onload=function(t){e.src=t.target.result,r&&r()},n.readAsDataURL(t)}else e.src=URL.createObjectURL(t),r&&r()}},{key:"isSupported",value:function(){return"undefined"!=typeof HTMLCanvasElement&&l&&f}}]),ImageTools}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(46),a=_interopRequireDefault(i),s=r(3),u=_interopRequireDefault(s),c=r(15),l=_interopRequireDefault(c),f=r(1),d=_interopRequireDefault(f),p=r(2),y=_interopRequireDefault(p),h=r(17),v=_interopRequireDefault(h),g=r(103),b=_interopRequireDefault(g),_=r(18),m=_interopRequireDefault(_),R=r(4),O=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(R),w=r(6),k=r(206),S=_interopRequireDefault(k),P=O.getLogger("DataObjectObserver"),D={ANY:"any",START:"start",EXACT:"exact"},M=function(e){function DataObjectObserver(e){(0,d.default)(this,DataObjectObserver);var t=(0,v.default)(this,(DataObjectObserver.__proto__||(0,l.default)(DataObjectObserver)).call(this,e)),r=t;return r._version=e.version,r._filters={},r._syncObj.observe(function(e){r._onFilter(e)}),r._allocateListeners(),t}return(0,m.default)(DataObjectObserver,e),(0,y.default)(DataObjectObserver,[{key:"sync",value:function(){var e=this;return P.info("[DataObjectObserver_sync] synchronising "),new u.default(function(t,r){var n={};e._syncher.read(e._metadata.url,n).then(function(r){P.info("[DataObjectObserver_sync] value to sync: ",r),(0,a.default)(e.data,(0,w.deepClone)(r.data)),e._version=r.version,e._metadata.lastModified=r.lastModified,r.childrenObjects?(e.resumeChildrens(r.childrenObjects),e._storeChildrens(),t(!0)):t(!0)}).catch(function(e){P.info("[DataObjectObserver_sync] sync failed: ",e),t(!1)})})}},{key:"_storeChildrens",value:function(){var e=this,t={};(0,o.default)(e._childrenObjects).forEach(function(r){var n=e._childrenObjects;t[r]={},t[r].value=n[r].metadata,t[r].identity=n[r].identity});var r={from:e._owner,to:e._syncher._subURL,type:"create",body:{resource:e._url,attribute:"childrenObjects",value:t}};e._bus.postMessage(r)}},{key:"_allocateListeners",value:function(){(0,b.default)(DataObjectObserver.prototype.__proto__||(0,l.default)(DataObjectObserver.prototype),"_allocateListeners",this).call(this);var e=this;e._changeListener=e._bus.addListener(e._url+"/changes",function(t){"update"===t.type&&(P.log("DataObjectObserver-"+e._url+"-RCV: ",t),e._changeObject(e._syncObj,t))})}},{key:"_releaseListeners",value:function(){(0,b.default)(DataObjectObserver.prototype.__proto__||(0,l.default)(DataObjectObserver.prototype),"_releaseListeners",this).call(this),this._changeListener.remove()}},{key:"delete",value:function(){var e=this;e._heartBeat&&e._heartBeat.stop(),e._deleteChildrens().then(function(){e.unsubscribe(),e._releaseListeners(),delete e._syncher._observers[e._url]})}},{key:"unsubscribe",value:function(){var e=this,t={type:"unsubscribe",from:e._owner,to:e._syncher._subURL,body:{resource:e._url}};e._bus.postMessage(t,function(t){P.log("DataObjectObserver-UNSUBSCRIBE: ",t),200===t.body.code&&(e._releaseListeners(),delete e._syncher._observers[e._url])})}},{key:"onChange",value:function(e,t){var r=e,n={type:D.EXACT,callback:t},o=e.indexOf("*");o===e.length-1&&(0===o?n.type=D.ANY:(n.type=D.START,r=e.substr(0,e.length-1))),this._filters[r]=n}},{key:"_onFilter",value:function(e){var t=this;(0,o.default)(t._filters).forEach(function(r){var n=t._filters[r];n.type===D.ANY?n.callback(e):n.type===D.START?0===e.field.indexOf(r)&&n.callback(e):n.type===D.EXACT&&e.field===r&&n.callback(e)})}},{key:"onDisconnected",value:function(e){var t=this;return new u.default(function(r,n){t._subscribeRegistration().then(function(){t._onDisconnected=e,r()}).catch(function(e){return n(e)})})}},{key:"_subscribeRegistration",value:function(){var e=this,t={type:"subscribe",from:this._owner,to:this._syncher._runtimeUrl+"/subscriptions",body:{resources:[this._url+"/registration"]}};return new u.default(function(r,n){e._bus.postMessage(t,function(t){P.log("[DataObjectObserver._subscribeRegistration] "+e._url+" rcved reply ",t),200===t.body.code?(e._generateListener(e._url+"/registration"),r()):(P.error("Error subscribing registration status for ",e._url),n("Error subscribing registration status for "+e._url))})})}},{key:"_generateListener",value:function(e){var t=this;t._bus.addListener(e,function(e){P.log("[DataObjectObserver.registrationNotification] "+t._url+": ",e),e.body.value&&"disconnected"===e.body.value&&t._onDisconnected&&(P.log("[DataObjectObserver] "+t._url+": was disconnected ",e),t._onDisconnected())})}},{key:"execute",value:function(e,t){var r=this,n=this;return new u.default(function(o,i){var a={type:"execute",from:r._owner,to:n._url,body:{method:e,params:t}};n._bus.postMessage(a,function(t){P.log("[DataObjectObserver.execute] "+n._url+" rcved reply ",t),200===t.body.code?o():(P.warn("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"),i("[DataObjectObserver.execute] execution of method "+e+" was reject by reporter"))})})}}]),DataObjectObserver}(S.default);t.default=M,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(4),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(s),c=u.getLogger("DataProvisional"),l=function(){function DataProvisional(e,t,r,n){(0,o.default)(this,DataProvisional);var i=this;i._owner=e,i._url=t,i._bus=r,i._children=n,i._changes=[],i._allocateListeners()}return(0,a.default)(DataProvisional,[{key:"_allocateListeners",value:function(){var e=this;e._listener=e._bus.addListener(e._url,function(t){c.log("DataProvisional-"+e._url+"-RCV: ",t),e._changes.push(t)})}},{key:"_releaseListeners",value:function(){this._listener.remove()}},{key:"apply",value:function(e){this._changes.forEach(function(t){e._changeObject(e._syncObj,t)})}},{key:"children",get:function(){return this._children}}]),DataProvisional}();t.default=l,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(6),u=function(){function NotificationHandler(e){if((0,o.default)(this,NotificationHandler),!e)throw Error("[NotificationHandler Constructor] bus input is mandatory");this._bus=e,this._onNotificationHandler={}}return(0,a.default)(NotificationHandler,[{key:"onNotification",value:function(e,t){this._onNotificationHandler[e]=t}},{key:"onCreate",value:function(e){var t=this,r=e.body.hasOwnProperty("resource")?e.body.resource:e.from.slice(0,-13),n=(0,s.divideURL)(r),o=n.domain,i=r.split("://")[0],a=function(r){t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:400,desc:"Bad Request: "+r}})};e.body.hasOwnProperty("source")||a("Missing source"),e.body.hasOwnProperty("schema")||a("Missing schema"),e.body.hasOwnProperty("value")||a("Missing value"),e.body.hasOwnProperty("identity")||a("Missing identity");var u={type:e.type,from:e.body.source,url:r,domain:o,schema:e.body.schema,value:e.body.value,identity:e.body.identity,to:e.to,via:e.body.via,ack:function(r){var n=200;r&&(n=r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n}})},error:function(e){a(e)}};t._onNotificationHandler[i]&&t._onNotificationHandler[i](u)}},{key:"onDelete",value:function(e){var t=this,r=e.body.resource,n=t._observers[r],o={from:t.owner,to:t._subURL,id:e.id,type:"unsubscribe",body:{resource:e.body.resource}};if(t._bus.postMessage(o),delete t._observers[r],n){var i={type:e.type,url:r,identity:e.body.identity,ack:function(r){var o=200;r&&(o=r),200===o&&n.delete(),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:o,source:t._owner}})}};t._onNotificationHandler&&(log.log("NOTIFICATION-EVENT: ",i),t._onNotificationHandler(i))}else t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,source:t._owner}})}}]),NotificationHandler}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(6),l=function(){function IdentityManager(e,t,r){(0,a.default)(this,IdentityManager);var n=this;n.messageBus=r,n.domain=(0,c.divideURL)(e).domain,n.owner=e,n.runtimeURL=t}return(0,u.default)(IdentityManager,[{key:"discoverUserRegistered",value:function(e,t){var r=this;return new o.default(function(n,o){var i=void 0,a=e||".";i=t||r.owner;var s={type:"read",from:i,to:r.runtimeURL+"/registry/",body:{resource:a,criteria:i}};r.messageBus.postMessage(s,function(e){var t=e.body.resource;t&&200===e.body.code?n(t):o("code: "+e.body.code+" No user was found")})})}},{key:"discoverIdentityPerIdP",value:function(e){var t=this;return new o.default(function(r,n){var o={type:"read",from:this.owner,to:t.runtimeURL+"/idm",body:{resource:e,criteria:"idp"}};t.messageBus.postMessage(o,function(e){200===e.body.code?r(e.body.value):n(e.body.code+" "+e.body.desc)})})}}]),IdentityManager}();t.default=l,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=r(6),d=r(493),p=_interopRequireDefault(d),y=l.getLogger("Discovery"),h=function(){function Discovery(e,t,r){(0,a.default)(this,Discovery);var n=this;n.messageBus=r,n.runtimeURL=t,n.domain=(0,f.divideURL)(e).domain,n.discoveryURL=e}return(0,u.default)(Discovery,[{key:"_isLegacyUser",value:function(e){return!(!e.includes(":")||e.includes("user://"))}},{key:"discoverHypertiesPerUserProfileData",value:function(e,t,r){var n=this,i=[],a={type:"read",from:n.discoveryURL,to:n.runtimeURL+"/discovery/",body:{resource:"/hyperty/userprofile/"+e}};return(t||r)&&(a.body.criteria={resources:r,dataSchemes:t}),new o.default(function(t,r){n._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):n.messageBus.postMessage(a,function(r){200===r.body.code?(r.body.value.map(function(e){e.hypertyID!=n.discoveryURL&&i.push(e)}),0===i.length?t([]):(y.log("[Discovery.discoverHypertiesPerUserProfileData] Reply log: ",i),t(i))):(y.warn("[Discovery.discoverHypertiesPerUserProfileData] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverHypertiesPerUserProfileDataDO",value:function(e,t,r){var n=this,i=arguments;return new o.default(function(e,t){n.discoverHypertiesPerUserProfileData.apply(n,i).then(function(t){e(n._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerUserProfileData",value:function(e,t,r){var n=this,i={type:"read",from:n.discoveryURL,to:n.runtimeURL+"/discovery/",body:{resource:"/dataObject/userprofile/"+e}};return(t||r)&&(i.body.criteria={resources:r,dataSchemes:t}),new o.default(function(t,r){n._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):n.messageBus.postMessage(i,function(r){200===r.body.code?(y.log("Reply log: ",r.body.value),t(r.body.value)):(y.warn("[Discovery.discoverDataObjectsPerUserProfileData] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerUserProfileDataDO",value:function(e,t,r){var n=this,i=arguments;return new o.default(function(e,t){n.discoverDataObjectsPerUserProfileData.apply(n,i).then(function(t){return e(n._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHypertiesPerGUID",value:function(e,t,r){var n=this,i=[],a={type:"read",from:n.discoveryURL,to:n.runtimeURL+"/discovery/",body:{resource:"/hyperty/guid/"+e}};return(t||r)&&(a.body.criteria={resources:r,dataSchemes:t}),new o.default(function(t,r){n.messageBus.postMessage(a,function(o){200===o.body.code?(o.body.value.map(function(e){e.hypertyID!=n.discoveryURL&&i.push(e)}),0===i.length?r("No Hyperty was found"):(y.log("Reply log: ",i),t(i))):(y.warn("[Discovery.discoverHypertiesPerGUID] Error Reply for "+e+" Reason: ",o.body.description),t([]))})})}},{key:"discoverHypertiesPerGUIDDO",value:function(e,t,r){var n=this,i=arguments;return new o.default(function(e,t){n.discoverHypertiesPerGUID.apply(n,i).then(function(t){e(n._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerGUID",value:function(e,t,r){var n=this,i={type:"read",from:n.discoveryURL,to:n.runtimeURL+"/discovery/",body:{resource:"/dataObject/guid/"+e}};return(t||r)&&(i.body.criteria={resources:r,dataSchemes:t}),new o.default(function(t,r){n.messageBus.postMessage(i,function(r){200===r.body.code?(y.log("Reply log: ",r.body.value),t(r.body.value)):(y.warn("[Discovery.discoverDataObjectsPerGUID] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerGUIDDO",value:function(e,t,r){var n=this,i=arguments;return new o.default(function(e,t){n.discoverDataObjectsPerGUID.apply(n,i).then(function(t){return e(n._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHyperties",value:function(e,t,r,n){var i=this,a=void 0,s=[];a=n||i.domain;var u={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/hyperty/user/"+e}};return u.body.criteria=t||r?{resources:r,dataSchemes:t,domain:a}:{domain:a},new o.default(function(t,r){i._isLegacyUser(e)?t([{hypertyID:e,status:"live"}]):i.messageBus.postMessage(u,function(r){200===r.body.code||500===r.body.code?(r.body.value.map(function(e){e.hypertyID!=i.discoveryURL&&s.push(e)}),y.log("[Discovery.discoverHyperties] Reply : ",s),t(s)):(y.warn("[Discovery.discoverHyperties] Error Reply for "+e+" Reason: ",r.body.description),t(s))})})}},{key:"discoverHypertiesDO",value:function(e,t,r,n){var i=this,a=arguments;return new o.default(function(e,t){i.discoverHyperties.apply(i,a).then(function(t){e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjects",value:function(e,t,r,n){var i=this,a=void 0;a=n||i.domain;var s={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/dataObject/user/"+e}};return s.body.criteria=t||r?{resources:r,dataSchemes:t,domain:a}:{domain:a},new o.default(function(t,r){i.messageBus.postMessage(s,function(r){200===r.body.code?(y.log("Reply Value Log: ",r.body.value),t(r.body.value)):(y.warn("[Discovery.discoverDataObjects] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsDO",value:function(e,t,r,n){var i=this,a=arguments;return new o.default(function(e,t){i.discoverDataObjects.apply(i,a).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverHypertyPerURL",value:function(e,t){var r=this,n=void 0;n=t||r.domain;var i={type:"read",from:r.discoveryURL,to:r.runtimeURL+"/discovery/",body:{resource:"/hyperty/url/"+e,criteria:{domain:n}}};return new o.default(function(t,n){r.messageBus.postMessage(i,function(r){200===r.body.code?(y.log("Reply Value Log: ",r.body.value),t(r.body.value)):(y.warn("[Discovery.discoverHypertyPerURL] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverHypertyPerURLDO",value:function(e,t){var r=this,n=arguments;return new o.default(function(e,t){r.discoverHypertyPerURL.apply(r,n).then(function(t){return e(new p.default(t,r.runtimeURL,r.discoveryURL,r.messageBus,r))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectPerURL",value:function(e,t){var r=this,n=void 0;n=t||r.domain;var i={type:"read",from:r.discoveryURL,to:r.runtimeURL+"/discovery/",body:{resource:"/dataObject/url/"+e,criteria:{domain:n}}};return new o.default(function(t,n){r.messageBus.postMessage(i,function(r){200===r.body.code?(y.log("Reply Value Log: ",r.body.value),t(r.body.value)):(y.warn("[Discovery.discoverDataObjectPerURL] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectPerURLDO",value:function(e,t){var r=this,n=arguments;return new o.default(function(e,t){r.discoverDataObjectPerURL.apply(r,n).then(function(t){return e(new p.default(t,r.runtimeURL,r.discoveryURL,r.messageBus,r))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerName",value:function(e,t,r,n){var i=this,a=void 0;a=n||i.domain;var s={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/dataObject/name/"+e}};return s.body.criteria=t||r?{resources:r,dataSchemes:t,domain:a}:{domain:a},new o.default(function(t,r){i.messageBus.postMessage(s,function(r){200===r.body.code?(y.log("Reply Value Log: ",r.body.value),t(r.body.value)):(y.warn("[Discovery.discoverDataObjectsPerName] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerNameDO",value:function(e,t,r,n){var i=this,a=arguments;return new o.default(function(e,t){i.discoverDataObjectsPerName.apply(i,a).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"discoverDataObjectsPerReporter",value:function(e,t,r,n){var i=this,a=void 0;a=n||i.domain;var s={type:"read",from:i.discoveryURL,to:i.runtimeURL+"/discovery/",body:{resource:"/dataObject/reporter/"+e}};return s.body.criteria=t||r?{resources:r,dataSchemes:t,domain:a}:{domain:a},new o.default(function(t,r){i.messageBus.postMessage(s,function(r){200===r.body.code?(y.log("Reply Value Log: ",r.body.value),t(r.body.value)):(y.warn("[Discovery.discoverDataObjectsPerName] Error Reply for "+e+" Reason: ",r.body.description),t([]))})})}},{key:"discoverDataObjectsPerReporterDO",value:function(e,t,r,n){var i=this,a=arguments;return new o.default(function(e,t){i.discoverDataObjectsPerReporter.apply(i,a).then(function(t){return e(i._convertToDiscoveredObject(t))}).catch(function(e){return t(e)})})}},{key:"_convertToDiscoveredObject",value:function(e){var t=this;return e.map(function(e){return new p.default(e,t.runtimeURL,t.discoveryURL,t.messageBus,t)})}},{key:"discoverDataObject",value:function(e,t,r,n){var i=this,a=void 0;a=n||i.domain;var s={type:"read",from:i.discoveryURL,to:"domain://registry."+a,body:{resource:e,criteria:{resources:r,dataSchemes:t}}};return new o.default(function(t,r){i.messageBus.postMessage(s,function(r){if(y.log("[Discovery]",r),r.body.code>299)return y.warn("[Discovery.discoverDataObject] Error Reply for "+e+" Reason: ",r.body.description),t([]);var n=r.body.value;t(n||[])})})}},{key:"discoverHyperty",value:function(e,t,r,n){var i=this,a=void 0,s=(0,f.convertToUserURL)(e);return a=n||i.domain,new o.default(function(o,u){if(y.log("[Discovery.discoverHyperty] ACTIVE DOMAIN -> ",a,"user->",e,"schema->",t,"resources->",r,"domain->",n),e.includes(":")&&!e.includes("user://")){y.log("[Discovery.discoverHyperty] "+e+" is legacy domain");return o({userID:e,hypertyID:e,schema:t,resources:r})}var c={type:"read",from:i.discoveryURL,to:"domain://registry."+a,body:{resource:s,criteria:{resources:r,dataSchemes:t}}};y.info("[Discovery] msg to send->",c),i.messageBus.postMessage(c,function(e){y.info("[Discovery] ON discoverHyperty->",e);var t=e.body.value;t?o(t):u("No Hyperty was found")})})}},{key:"discoverHypertyPerUser",value:function(e,t){var r=this,n=void 0;return new o.default(function(o,i){if(e.includes(":")&&!e.includes("user://")){y.log("[Discovery.discoverHyperty] "+e+"is legacy domain");return o({id:e,hypertyURL:e,descriptor:"unknown"})}n=t||r.domain;var a="user://"+e.substring(e.indexOf("@")+1,e.length)+"/"+e.substring(0,e.indexOf("@")),s={type:"read",from:r.discoveryURL,to:"domain://registry."+n,body:{resource:a}};y.info("[Discovery] Message: ",s,n,a),r.messageBus.postMessage(s,function(t){y.info("[Discovery] message reply",t);var r=void 0,n=void 0,a=void 0,s=t.body.value;for(r in s)if(void 0!==s[r].lastModified)if(void 0===n)n=new Date(s[r].lastModified),a=r;else{var u=new Date(s[r].lastModified);n.getTime()<u.getTime()&&(n=u,a=r)}y.info("[Discovery] Last Hyperty: ",a,n);var c=a;if(void 0===c)return i("User Hyperty not found");var l={id:e,descriptor:s[c].descriptor,hypertyURL:c};y.info("[Discovery] ===> hypertyDiscovery messageBundle: ",l),o(l)})})}},{key:"discoverHypertiesPerUser",value:function(e,t){var r=this,n=void 0;return y.log("on Function->",e),new o.default(function(o,i){if(e.includes(":")&&!e.includes("user://")){y.log("[Discovery.discoverHyperty] is legacy domain");var a={userID:e,hypertyID:e,schema:schema,resources:resources};return o(a)}n=t||r.domain;var s="user://"+e.substring(e.indexOf("@")+1,e.length)+"/"+e.substring(0,e.indexOf("@")),u={type:"read",from:r.discoveryURL,to:"domain://registry."+n,body:{resource:s}};y.log("[Discovery] Message discoverHypertiesPerUser: ",u,n,s),r.messageBus.postMessage(u,function(e){y.info("[Discovery] discoverHypertiesPerUser reply",e);var t=e.body.value;if(!t)return i("User Hyperty not found");o(t)})})}},{key:"resumeDiscoveries",value:function(){var e=this;return y.log("[Discovery] resumeDiscoveries"),new o.default(function(t,r){var n={type:"read",from:e.discoveryURL,to:e.runtimeURL+"/subscriptions",body:{resource:e.discoveryURL}};e.messageBus.postMessage(n,function(r){y.log("[Discovery.resumeDiscoveries] reply: ",r);var n=[];if(200===r.body.code){r.body.value.forEach(function(t){var r=t.split("/registration")[0];({}).url=r,y.log("[Discovery.resumeDiscoveries] adding listener to: ",r),r.includes("hyperty://")?n.push(e.discoverHypertyPerURLDO(r)):n.push(e.discoverDataObjectPerURLDO(r))}),o.default.all(n).then(function(e){t(e)})}else t([])})})}}]),Discovery}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(15),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(17),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(18),d=_interopRequireDefault(f),p=r(150),y=_interopRequireDefault(p),h=function(e){function DiscoveredObject(e,t,r,n,i){(0,a.default)(this,DiscoveredObject);var s=(0,u.default)(this,(DiscoveredObject.__proto__||(0,o.default)(DiscoveredObject)).call(this,e.hypertyID||e.url,t,r,n));return s._data=e,s._discovery=i,s}return(0,d.default)(DiscoveredObject,e),(0,l.default)(DiscoveredObject,[{key:"data",get:function(){return this._data}}]),(0,l.default)(DiscoveredObject,[{key:"check",value:function(){var e=this,t={body:{}};e._discoveredObjectURL.startsWith("hyperty://")?e._discovery.discoverHypertyPerURL(e._discoveredObjectURL).then(function(r){t.body.status=r.status,e._processNotification(t)}):e._discovery.discoverDataObjectsPerURL(e._discoveredObjectURL).then(function(r){t.body.status=r.status,e._processNotification(t)})}}]),DiscoveredObject}(y.default);t.default=h,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=function(){function Search(e,t){if((0,u.default)(this,Search),!e)throw new Error("The discovery component is a needed parameter");if(!t)throw new Error("The identityManager component is a needed parameter");var r=this;r.discovery=e,r.identityManager=t}return(0,l.default)(Search,[{key:"myIdentity",value:function(){var e=this;return new a.default(function(t,r){e.identityManager.discoverUserRegistered().then(function(e){t(e)}).catch(function(e){r(e)})})}},{key:"hyperties",value:function(e,t,r){arguments.length>3&&void 0!==arguments[3]&&arguments[3]}},{key:"users",value:function(e,t,r,n){var i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!e)throw new Error("You need to provide a list of users");if(!t)throw new Error("You need to provide a list of domains");if(!n)throw new Error("You need to provide a list of resources");if(!r)throw new Error("You need to provide a list of schemes");var s=this;return new a.default(function(u,c){if(0===e.length)u(e);else{var l=[];e.forEach(function(e,o){var a=t[o];i?l.push(s.discovery.discoverHypertiesPerUserProfileData(e,r,n)):l.push(s.discovery.discoverHyperties(e,r,n,a))}),a.default.all(l.map(function(e){return e.then(function(e){return e},function(e){return e})})).then(function(e){var t=e.map(function(e){if(e.hasOwnProperty("hypertyID"))return e;var t=(0,o.default)(e).reduceRight(function(t,r){var n=new Date(e[r].lastModified);return new Date(e[t].lastModified).getTime()<n.getTime()?r:t});return e[t]}),r=t.filter(function(e){return e.hasOwnProperty("hypertyID")});e.forEach(function(e){if("No Hyperty was found"!==e)return u(r)}),c("No Hyperty was found")}).catch(function(t){u(e)})}})}}]),Search}();t.default=f,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(15),u=_interopRequireDefault(s),c=r(1),l=_interopRequireDefault(c),f=r(2),d=_interopRequireDefault(f),p=r(17),y=_interopRequireDefault(p),h=r(18),v=_interopRequireDefault(h),g=r(209),b=_interopRequireDefault(g),_=function(e){function ContextObserver(e,t,r,n,o,i){if((0,l.default)(this,ContextObserver),!e)throw new Error("The hypertyURL is a needed parameter");if(!t)throw new Error("The MiniBus is a needed parameter");if(!r)throw new Error("The configuration is a needed parameter ");if(!o)throw new Error("The factory is a needed parameter ");var a=(0,y.default)(this,(ContextObserver.__proto__||(0,u.default)(ContextObserver)).call(this)),s=a;s._contextResourceTypes=n,s._url=e,s._discoverUsersPromises={},s._observePromises={},s._domain=o.divideURL(r.runtimeURL).domain,s._objectDescURL="hyperty-catalogue://catalogue."+s._domain+"/.well-known/dataschema/Context",s._users2observe=[],s._observers={},a._syncher=i||o.createSyncher(e,t,r);var c=o.createDiscovery(e,r.runtimeURL,t);return s._discovery=c,s._discoveries={},window.discovery=s._discovery,a}return(0,v.default)(ContextObserver,e),(0,d.default)(ContextObserver,[{key:"start",value:function(e,t){var r=this;return new a.default(function(n,i){r._syncher.resumeObservers({store:!0}).then(function(i){var a=(0,o.default)(i);a.length>0?(r._observers=i,n(i),a.forEach(function(r){var n=i[r];e&&(context.data.values=e),n.sync(),t&&n.onDisconnected(t)})):n(!1)}).catch(function(e){n(!1)})}).catch(function(e){reject("[ContextObserver] Start failed | ",e)})}},{key:"resumeDiscoveries",value:function(){var e=this;return new a.default(function(t,r){e._discovery.resumeDiscoveries().then(function(r){r.forEach(function(r){r.data.resources&&r.data.resources[0]===e._contextResourceTypes[0]&&("live"===r.data.status?(t([r.data]),r.unsubscribeLive(e._url)):r.onLive(e._url,function(){t([r.data]),r.unsubscribeLive(e._url)}))})})}).catch(function(e){reject("[ContextObserver] resumeDiscoveries failed | ",e)})}},{key:"onResumeObserver",value:function(e){this._onResumeObserver=e}},{key:"discoverUsers",value:function(e,t){var r=this,n=e+"@"+t;return r._discoverUsersPromises[n]||(r._discoverUsersPromises[n]=new a.default(function(n,o){r._discovery.discoverHypertiesDO(e,["context"],r._contextResourceTypes,t).then(function(e){var t=[],o=[];e.forEach(function(e){r._discoveries[e.data.hypertyID]=e,"live"===e.data.status?t.push(e.data):o.push(e)}),t.length>0?n(t):o.length>0&&o[0].onLive(r._url,function(){t.push(o[0].data),n(t),o[0].unsubscribeLive(r._url)})})})),r._discoverUsersPromises[n]}},{key:"observe",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=this;return r._observePromises[e.hypertyID]||(r._observePromises[e.hypertyID]=new a.default(function(n,o){r._users2observe.forEach(function(t){if(t._reporter===e.hypertyID)return n(t)}),r._discovery.discoverDataObjectsPerReporter(e.hypertyID,["context"],r._contextResourceTypes,r._domain).then(function(i){var a=0,s=void 0;i.forEach(function(e){e.hasOwnProperty("lastModified")&&e.hasOwnProperty("url")&&Date.parse(e.lastModified)>a&&(a=e.lastModified,s=e.url)}),0!=a&&s?n(r._subscribeContext(e,s,t)):o("[ContextObserver.observe] discovered DataObjecs are invalid",i)})})),r._observePromises[e.hypertyID]}},{key:"_subscribeContext",value:function(e,t){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=this;return new a.default(function(e,o){n._users2observe.forEach(function(r){if(r.url===t)return e(r)}),n._syncher.subscribe(n._objectDescURL,t,null,null,null,r).then(function(t){n._users2observe.push(t),t.onDisconnected(function(){t.data.values[0].value="unavailable",t.sync()}),e(t)})})}},{key:"_discoverAndSubscribeLegacyUsers",value:function(e){var t=this;return new a.default(function(r,n){t._discovery.discoverDataObjectsPerName(e).then(function(e){e.forEach(function(e){"live"===e.status&&(e.hypertyID||(e.hypertyID=e.reporter),t._subscribeContext(e.schema,e.url).then(function(e){return r(e)}))})}).catch(function(e){})})}},{key:"unobserve",value:function(e){var t=this;t._users2observe.forEach(function(r,n){r.url===e&&(r.unsubscribe(),t._users2observe.splice(n,1))})}}]),ContextObserver}(b.default);t.default=_,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(15),u=_interopRequireDefault(s),c=r(1),l=_interopRequireDefault(c),f=r(2),d=_interopRequireDefault(f),p=r(17),y=_interopRequireDefault(p),h=r(18),v=_interopRequireDefault(h),g=r(209),b=_interopRequireDefault(g),_=function(e){function ContextReporter(e,t,r,n,o){if((0,l.default)(this,ContextReporter),!e)throw new Error("The hypertyURL is a needed parameter");if(!t)throw new Error("The MiniBus is a needed parameter");if(!r)throw new Error("The configuration is a needed parameter");var i=(0,y.default)(this,(ContextReporter.__proto__||(0,u.default)(ContextReporter)).call(this,e,t,r));return i.syncher=o||n.createSyncher(e,t,r),i.domain=n.divideURL(r.runtimeURL).domain,i.contexts={},i.contextDescURL="hyperty-catalogue://catalogue."+i.domain+"/.well-known/dataschema/Context",i.syncher.onNotification(function(e){i.onNotification(e)}),i.syncher.onClose(function(e){i.setStatus(e.id,"unavailable"),e.ack()}),i}return(0,v.default)(ContextReporter,e),(0,d.default)(ContextReporter,[{key:"start",value:function(){var e=this,t=this;return new a.default(function(r,n){e.syncher.resumeReporters({store:!0}).then(function(e){var n=(0,o.default)(e);n.length>0?(t.contexts=e,n.forEach(function(e){t._onSubscription(t.contexts[e])}),r(t.contexts)):r(!1)}).catch(function(e){})}).catch(function(e){reject("[ContextReporter] Start failed | ",e)})}},{key:"processNotification",value:function(e){e.ack()}},{key:"create",value:function(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"myContext",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=this,u=void 0;return new a.default(function(a,c){u=o||i?o&&!i?{resources:r,expires:30,reporter:o}:!o&&i?{resources:r,expires:30,reuseURL:i}:{resources:r,expires:30,reuseURL:i,reporter:o}:{resources:r,expires:30},s.syncher.create(s.contextDescURL,[],t,!0,!1,n,null,u).then(function(t){s.contexts[e]=t,s._onSubscription(t),a(t)}).catch(function(e){c(e)})})}},{key:"_onSubscription",value:function(e){e.onSubscription(function(e){e.accept()})}},{key:"setContext",value:function(e,t){var r=this;r.contexts[e].data.values=t,r.trigger(e+"-context-update",t)}}]),ContextReporter}(b.default);t.default=_,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(498),a=_interopRequireDefault(i),s=function MessageBodyIdentity(e,t,r,n,i,s,u,c){if((0,o.default)(this,MessageBodyIdentity),!s)throw new Error("IDP should be a parameter");if(!e)throw new Error("username should be a parameter");this.idp=s,u&&(this.assertion=u),this.userProfile=new a.default(e,t,r,n,i,c)};t.default=s,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(46),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=function UserProfile(e,t,r,n,i,s){(0,a.default)(this,UserProfile),e&&(this.preferred_username=e),r&&(this.picture=r),n&&(this.name=n),i&&(this.locale=i),t&&(this.userURL=t),s&&(0,o.default)(this,s)};t.default=s,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(46),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(500),d=r(210),p=_interopRequireDefault(d),y=r(502),h=function(){function ChatManager(e,t,r,n,o){if((0,u.default)(this,ChatManager),!e)throw new Error("[ChatManager.constructor] The myUrl is a needed parameter");if(!t)throw new Error("[ChatManager.constructor] The MiniBus is a needed parameter");if(!r)throw new Error("[ChatManager.constructor] The configuration is a needed parameter");var i=this;n||(n=o.createSyncher(e,t,r)),i._runtimeURL=r.runtimeURL;var a=o.divideURL(i._runtimeURL).domain,s=o.createDiscovery(e,r.runtimeURL,t),c=o.createIdentityManager(e,r.runtimeURL,t);i._objectDescURL="hyperty-catalogue://catalogue."+a+"/.well-known/dataschema/Communication",i._reportersControllers={},i._observersControllers={},i._myUrl=e,i._bus=t,i._syncher=n,i._domain=a,i.discovery=s,i.identityManager=c,i.currentIdentity,i.search=o.createSearch(s,c),i.communicationObject=f.communicationObject,i.communicationChildren=f.communicationChildren}return(0,l.default)(ChatManager,[{key:"processNotification",value:function(e){var t=this;if("create"===e.type&&t._onInvitation&&t._onInvitation(e),"delete"===e.type){e.ack(200),t._observersControllers[e.url].closeEvent=e,delete t._observersControllers[e.url],t._observersControllers.closeEvent=e,t.communicationObject=f.communicationObject;for(var r in this._reportersControllers)this._reportersControllers[r].close(e);for(var n in this._observersControllers)this._observersControllers[n].close(e)}}},{key:"myIdentity",value:function(e){var t=this;return new a.default(function(r,n){if(e)return r(e);t._myUrl.includes("hyperty://")?t.identityManager.discoverUserRegistered().then(function(e){r(e)}).catch(function(e){n(e)}):t.identityManager.discoverIdentityPerIdP().then(function(e){r(e)}).catch(function(e){n(e)})})}},{key:"create",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=this,i=n._syncher;return new a.default(function(s,u){n.communicationObject=f.communicationObject,n.communicationObject.cseq=1,n.communicationObject.startingTime=(new Date).toJSON(),n.communicationObject.status=f.CommunicationStatus.OPEN;var c=void 0;n.myIdentity().then(function(l){c=l;var f=new y.UserInfo(n._myUrl,n._domain,l);n.communicationObject.participants[l.guid]=f;var d=[],h=[],v={};t.forEach(function(e){var t=n.discovery.discoverHypertiesDO(e.user,["comm"],["chat"],e.domain);d.push(t)}),a.default.all(d).then(function(t){var a=[];t.forEach(function(e){e.forEach(function(e){"live"===e.data.status?(a.push(e.data.hypertyID),v[e.data.hypertyID]=e):h.length<5&&h.push(e)})});var s=(0,o.default)({resources:["chat"],mutual:!0},r);return delete s.name,i.create(n._objectDescURL,a,n.communicationObject,!0,!1,e,{},s)}).then(function(e){var t=new p.default(i,n.discovery,n._domain,n.search,c,n);t.dataObjectReporter=e,n._reportersControllers[e.url]=t,e.invitations.length>0&&t.invitationsHandler.processInvitations(v,e),h.length>0&&t.invitationsHandler.inviteDisconnectedHyperties(h,e),s(t)}).catch(function(e){u(e)})}).catch(function(e){return u(e)})})}},{key:"onInvitation",value:function(e){this._onInvitation=e}},{key:"join",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments[2],n=this;return new a.default(function(o,i){var a=n._syncher,s=void 0;n.myIdentity(r).then(function(r){return s=r,a.subscribe(n._objectDescURL,e,!0,!1,t,!0,r)}).then(function(e){var t=new p.default(a,n.discovery,n._domain,n.search,s,n);o(t),t.dataObjectObserver=e,n._observersControllers[e.url]=t}).catch(function(e){i(e)})})}}]),ChatManager}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.CommunicationStatus={OPEN:"open",PENDING:"pending",CLOSED:"closed",PAUSED:"paused",FAILED:"failed"},t.communicationObject={startingTime:"",status:"",participants:{}},t.communicationChildren={parent:"communication",listener:"resources",type:"HypertyResource"}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=function(){function InvitationsHandler(e){if((0,u.default)(this,InvitationsHandler),!e)throw Error("hypertyURL is a necessary dependecy");var t=this;t._hypertyURL=e,t._pending={}}return(0,l.default)(InvitationsHandler,[{key:"inviteDisconnectedHyperties",value:function(e,t){var r=this;e.forEach(function(e){r._pending[t]||(r._pending[t]={}),r._pending[t][e.data.hypertyID]=e,e.onLive(r._hypertyURL,function(){t.inviteObservers([e.data.hypertyID]),e.unsubscribeLive(r._hypertyURL),delete r._pending[t][e.data.hypertyID]})})}},{key:"processInvitations",value:function(e,t){var r=this,n=this,o=t.invitations||[];o.forEach(function(o){o.then(function(e){r._invitationsResponse&&r._invitationsResponse(e)}).catch(function(o){r._invitationsResponse&&r._invitationsResponse(o),n.inviteDisconnectedHyperties([e[o.invited]],t)})})}},{key:"resumeDiscoveries",value:function(e,t){var r=this;return new a.default(function(n,i){var s={},u=[],c=[],l=[];e.resumeDiscoveries().then(function(e){e.forEach(function(e){e.data.resources&&"chat"===e.data.resources[0]&&("live"===e.data.status?(s[e.data.hypertyID]=e,u.push(e.data.hypertyID),l.push(e.unsubscribeLive(r._hypertyURL))):c.push(e))}),c.length>0&&r.inviteDisconnectedHyperties(c,t),(0,o.default)(s).length>0?(t.inviteObservers(u),t.invitations.length>0&&r.processInvitations(s,t),a.default.all(l).then(function(){n()})):n()})}).catch(function(e){reject("[GroupChatManager.InvitationsHandler.resumeDiscoveries] failed | ",e)})}},{key:"cleanInvitations",value:function(e){var t=this,r=t._pending[e];return r?new a.default(function(e,n){var i=(0,o.default)(r),s=[];i.forEach(function(e){s.push(r[e].unsubscribeLive(t._hypertyURL))}),a.default.all(i).then(function(){e()})}):a.default.resolve()}},{key:"invitationResponse",set:function(e){this._invitationsResponse=e}}]),InvitationsHandler}();t.default=f,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.UserInfo=void 0;var n=r(503),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(6);t.UserInfo=function UserInfo(e,t,r){var n;(0,a.default)(this,UserInfo);var i=(0,s.deepClone)(r);return r.hasOwnProperty("userProfile")||(i.userProfile=r),n={hypertyURL:e,domain:t},(0,o.default)(n,"domain",t),(0,o.default)(n,"identity",i),n}},function(e,t,r){"use strict";t.__esModule=!0;var n=r(204),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=function(e,t,r){return t in e?(0,o.default)(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(15),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(17),l=_interopRequireDefault(c),f=r(18),d=_interopRequireDefault(f),p=r(211),y=_interopRequireDefault(p),h=function(e){function MiniBus(){return(0,a.default)(this,MiniBus),(0,l.default)(this,(MiniBus.__proto__||(0,o.default)(MiniBus)).call(this))}return(0,d.default)(MiniBus,e),(0,u.default)(MiniBus,[{key:"postMessage",value:function(e,t,r){var n=this;return n._genId(e),n._responseCallback(e,t,r),n._onPostMessage(e),e.id}},{key:"_onMessage",value:function(e){var t=this;if(!t._onResponse(e)){var r=t._subscriptions[e.to];r?(t._publishOn(r,e),e.to.startsWith("hyperty")||t._publishOnDefault(e)):t._publishOnDefault(e)}}}]),MiniBus}(y.default);t.default=h,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=function(){function RegistryDataModel(e,t,r,n,i,a,s,u,c){(0,o.default)(this,RegistryDataModel);var l=this;l._id=e,l._url=t,l._descriptorURL=r,l._startingTime=i,l._lastModified=a,l._status=s,l._stubs=u,l._stubsConfiguration=c,l._p2pRequester=n}return(0,a.default)(RegistryDataModel,[{key:"id",get:function(){return this._id}},{key:"url",get:function(){return this._url}},{key:"descriptorURL",get:function(){return this._descriptorURL}},{key:"p2pRequester",get:function(){return this._p2pRequester}},{key:"lastModified",get:function(){return this._lastModified}}]),RegistryDataModel}();t.default=s,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(4),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(f),p=r(102),y=r(212),h=(_interopRequireDefault(y),d.getLogger("Registry")),v=function(){function DomainRegistration(e,t,r,n){if((0,u.default)(this,DomainRegistration),!e)throw new Error("runtimeURL is missing.");if(!t)throw new Error("registryURL is missing.");if(!r)throw new Error("domain is missing.");if(!n)throw new Error("messageBus is missing.");var o=this;o.registryURL=t,o.runtimeURL=e,o._registrationRetries=5,o.expiresTime=3600,o._domain=r,o._messageBus=n}return(0,l.default)(DomainRegistration,[{key:"unregisterHyperty",value:function(e){var t=this,r={type:"update",from:t.registryURL,to:"domain://registry."+t._domain,body:{resource:"/hyperty/"+e,value:"disconnected",attribute:"status"}};t._messageBus.postMessage(r,function(e){h.log("[DomainRegistration] unregister hyperty Reply",e)})}},{key:"unregisterDataObject",value:function(e){var t=this,r={type:"update",from:t.registryURL,to:"domain://registry."+t._domain,body:{resource:e,value:{status:"disconnected"}}};t._messageBus.postMessage(r,function(e){h.log("[DomainRegistration] unregister dataObject Reply",e)})}},{key:"deleteDataObjectInstance",value:function(e){var t=this,r={type:"delete",from:t.registryURL,to:"domain://registry."+t._domain,body:{value:{name:e}}};t._messageBus.postMessage(r,function(e){h.log("[DomainRegistration] unregister dataObject Reply",e)})}},{key:"updateHypertyInstance",value:function(e,t){var r=this,n={type:"UPDATE",from:r.registryURL,to:"domain://registry."+r._domain,body:{resource:e,value:t}};r._messageBus.post.postMessage(n,function(e){})}},{key:"registerDataObject",value:function(e,t,r){var n=this,i=void 0,s=void 0;return new a.default(function(a,u){var c=[],l=e.url.split(":");c.push(l[0]),0!==(0,o.default)(r).length&&(i=r[n.runtimeURL].url,s=p.runtimeUtils.runtimeDescriptor.p2pRequesterStub),e.startingTime=e.created,delete e.authorise,delete e.created,delete e.mutual,delete e.resume,e.expires||(e.expires=n.expiresTime),e.dataSchemes=c,i&&(e.p2pHandler=i,e.p2pRequester=s),e.status="live";var f=void 0;t?(h.log("[Registry.registerDataObject] registering previously registered data object URL",e),f={type:"update",to:"domain://registry."+n._domain,from:n.registryURL,body:{resource:e.url,value:{status:"live"}}}):(h.log("[Registry.registerDataObject] registering new data object URL",e),f={type:"create",from:n.registryURL,to:"domain://registry."+n._domain,body:{value:e,policy:"policy"}});try{n._messageBus.postMessageWithRetries(f,n._registrationRetries,function(t){200===t.body.code?a(e):u("error on register DataObject")})}catch(e){h.error(e),u(e)}setInterval(function(){var t={type:"update",from:n.registryURL,to:"domain://registry."+n._domain,body:{resource:e.url,value:{status:"live"},method:"refresh"}};n._messageBus.postMessage(t,function(e){})},e.expires/1.1/2*1e3)})}},{key:"registerHyperty",value:function(e,t){var r=this;return new a.default(function(n,o){var i=r.runtimeURL,a=void 0,s=r.expiresTime,u={user:e.user.email,descriptor:e.descriptorURL,url:e.hypertyURL,expires:s,resources:e.resources,dataSchemes:e.dataSchemes,runtime:i,status:"live"};e.p2pHandler&&(u.p2pHandler=e.p2pHandler,u.p2pRequester=e.p2pRequester),e.descriptor.configuration&&e.descriptor.configuration.expires&&(s=e.descriptor.configuration.expires),t?(a={type:"update",to:"domain://registry."+r._domain,from:r.registryURL,body:{resource:e.hypertyURL,value:{status:"live",user:e.user.email}}},e.p2pHandler&&(a.body.value.p2pHandler=e.p2pHandler,a.body.value.p2pRequester=e.p2pRequester)):a={type:"create",from:r.registryURL,to:"domain://registry."+r._domain,body:{value:u,policy:"policy"}};try{r._messageBus.postMessageWithRetries(a,r._registrationRetries,function(t){if(200===t.body.code){var i={url:e.hypertyURL};e.p2pHandler&&(i.p2pHandler=e.p2pHandler,i.p2pRequester=e.p2pRequester),n(i)}else{if(404!==t.body.code)throw new Error("Failed to register an Hyperty to domain: ",t);a={type:"create",from:r.registryURL,to:"domain://registry."+r._domain,body:{value:u,policy:"policy"}};try{r._messageBus.postMessageWithRetries(a,r._registrationRetries,function(t){if(200!==t.body.code)throw new Error("Failed to register an Hyperty: "+t);var r={url:e.hypertyURL};e.p2pHandler&&(r.p2pHandler=e.p2pHandler,r.p2pRequester=e.p2pRequester),n(r)})}catch(e){h.error(e),o(e)}}})}catch(e){h.error(e),o(e)}setInterval(function(){var t={type:"update",from:r.registryURL,to:"domain://registry."+r._domain,body:{resource:e.hypertyURL,value:{status:"live"},method:"refresh"}};r._messageBus.postMessage(t,function(e){})},s/1.1/2*1e3)})}}]),DomainRegistration}();t.default=v,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=l.getLogger("P2PConnectionResolve"),d=function(){function P2PConnectionResolve(e){(0,a.default)(this,P2PConnectionResolve);var t=this;t._registry=e,t._remoteP2PEntities={}}return(0,u.default)(P2PConnectionResolve,[{key:"checkP2P",value:function(e){if(!e.hasOwnProperty("to"))return o.default.reject("The p2p verification was failed");var t=e.to.split("://")[0],r=e.to.split("://")[1].split("/")[2],n=void 0;n=r?e.to.substring(0,e.to.indexOf("/"+r)):e.to;var i={};switch(e.body&&e.body.p2p&&(i.p2p=e.body.p2p),e.body&&e.body.p2pHandler&&e.body.p2pRequester&&(i.p2pHandler=e.body.p2pHandler,i.p2pRequester=e.body.p2pRequester,i.runtime=e.body.p2pHandler.split("/p2phandler/")[0]),t){case"runtime":return this.checkP2PRuntime(n,i);default:return this.checkP2PEntity(n,i)}}},{key:"checkP2PEntity",value:function(e,t){var r=this;return new o.default(function(n,o){var i=r._remoteP2PEntities[e];if(i)n(i);else if(t.runtime)n(t);else if(t.p2p){f.log("[Registry - checkP2PEntity] - search in Domain Registry: ",e);var a={type:"read",from:r._registry.registryURL,to:"domain://registry."+r._registry._domain,body:{resource:e}};r._registry._messageBus.postMessage(a,function(e){if(f.log("[Registry - checkP2PEntity] Domain Registry reply",e),"value"in e.body){var t=e.body.value;t.hasOwnProperty("p2pHandler")?n(t):o("[Registry checkP2PEntity] Hyperty found does not support P2P",e.body.value)}else o("[Registry checkP2PEntity] Hyperty with P2PHandler not found",e.body.code)})}else o("[Registry checkP2PEntity] No P2P Connection available for ",e)})}},{key:"checkP2PRuntime",value:function(e,t){var r=this,n={};return new o.default(function(o,i){r._registry.p2pConnectionList[e]?o({runtime:e}):t.runtime?(n=t,o(n)):i("[Registry.P2PConnectionResolve.checkP2PRuntime] No P2P Connection found to ",e)})}},{key:"checkP2PHyperty",value:function(e,t){var r=this;return new o.default(function(n,o){var i=void 0;for(var a in r._registry.remoteHypertyList)if(i=r._registry.remoteHypertyList[a],f.log("[Registry - checkP2PHyperty] - for each Hyperty: ",i),i.hypertyID===e)return void(i.hasOwnProperty("p2pHandler")?n(i):o("[Registry checkP2PHyperty] Hyperty found does not support P2P",i));if(!i&&t.runtime)n(t);else if(!i&&t.p2p){f.log("[Registry - checkP2PHyperty] - search in Domain Registry: ",i);var s={type:"read",from:r._registry.registryURL,to:"domain://registry."+r._registry._domain,body:{resource:e}};r._registry._messageBus.postMessage(s,function(e){if(f.log("[Registry - checkP2PHyperty] Domain Registry reply",e),"value"in e.body){var t=e.body.value;r._registry.remoteHypertyList.push(t),t.hasOwnProperty("p2pHandler")?n(t):o("[Registry checkP2PHyperty] Hyperty found does not support P2P",e.body.value)}else o("[Registry checkP2PHyperty] Hyperty with P2PHandler not found",e.body.code)})}else o("[Registry checkP2PHyperty] No P2P Connection available for ",e)})}},{key:"checkP2PDataObject",value:function(e,t){var r=this;return new o.default(function(n,o){var i=r._registry.remoteDataObjectList.filter(function(t){return r._registry.remoteDataObjectList[t].url===e});if(0!==i.length&&i[0].p2pRequester)n(i[0]);else if(0!==i.length)o("[Registry checkP2PDataObject] Data Object found does not support P2P",i[0]);else if(0===i.length&&t.runtime)n(t);else if(i.length&&t.p2p){var a={type:"read",from:r._registry.registryURL,to:"domain://registry."+r._registry._domain,body:{resource:e}};r._registry._messageBus.postMessage(a,function(e){if(f.log("discover data object per url reply",e),"value"in e.body){var t=e.body.value;r._registry.remoteDataObjectList.push(t),t.p2pRequester?n(t):o("[Registry checkP2PDataObject] Data Object found does not support P2P",e.body.value)}else o("[Registry checkP2PDataObject] not found",e.body.code)})}else o("[Registry checkP2PDataObject] no P2P Connection found")})}},{key:"addRemoteP2PEntity",value:function(e,t){this._remoteP2PEntities[e]=t}},{key:"removeRemoteP2PEntity",value:function(e){delete this._remoteP2PEntities[e]}},{key:"reconnectP2PRequester",value:function(e){var t=this;return f.log("[P2PConenctionResolve.reconnectP2PRequester] lets try to reconnect P2P Requester Stub: ",e),new o.default(function(r,n){var o=e.runtime,i={type:"execute",from:t._registry.registryURL,to:e.url,body:{method:"connect",params:[e.p2pHandler]}};t._registry.watchingYou.observe("p2pRequesterStub",function(e){if(f.log("[P2PConenctionResolve.reconnectP2PRequester] p2pRequesterStubs changed "+t._registry.p2pRequesterStub),e.keypath.split(".")[0]===o&&"status"===e.name)switch(e.newValue){case"live":f.log("[P2PConenctionResolve.reconnectP2PRequester] p2pRequester is live "+t._registry.p2pRequesterStub[o]),r(t._registry.p2pRequesterStub[o].url);break;case"failed":f.log("[P2PConenctionResolve.reconnectP2PRequester] p2pRequester reconnect failed "+t._registry.p2pRequesterStub[o]),n("P2P Requester reconnect failed")}}),t._registry._messageBus.postMessage(i,function(e){f.log("[P2PConenctionResolve.reconnectP2PRequester] reconnect request reply",e)})})}}]),P2PConnectionResolve}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i);r(149);var s=function(){function WatchingYou(){(0,o.default)(this,WatchingYou),this._watching={},this._observers=[]}return(0,a.default)(WatchingYou,[{key:"watch",value:function(e,t){var r=this,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return this._watching[e]=n?Object.deepObserve(t,function(t){t.every(function(t){r._fireEvent(e,t)})}):Object.observe(t,function(t){t.every(function(t){r._fireEvent(e,t)})}),this._watching[e]}},{key:"observe",value:function(e,t){this._observers.push({key:e,callback:t})}},{key:"_fireEvent",value:function(e,t){this._observers.filter(function(t){return t.key===e}).forEach(function(e){e.callback(t)})}}]),WatchingYou}();t.default=s,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=r(6),d=r(151),p=r(214),y=_interopRequireDefault(p),h=r(514),v=_interopRequireDefault(h),g=l.getLogger("IdentityModule"),b=function(){function IdentityModule(e,t,r,n,o,i){(0,a.default)(this,IdentityModule);var s=this;if(!e)throw new Error("runtimeURL is missing.");if(!r)throw new Error("storageManager is missing");if(!o)throw new Error("cryptoManager is missing");if(!i)throw new Error("runtimeCatalogue is missing");s._runtimeURL=e,s._runtimeCatalogue=i,s.dataObjectsStorage=n,s._idmURL=s._runtimeURL+"/idm",s._guiURL=s._runtimeURL+"/identity-gui",s.runtimeCapabilities=t,s._domain=(0,f.divideURL)(s._runtimeURL).domain,s._identities=new y.default("human",r),s._crypto=o,s.dataObjectsIdentity={},s._listOfIdps=[],s.guiDeployed=!1}return(0,u.default)(IdentityModule,[{key:"getIdentity",value:function(e){return this.identities.getIdentity(e)}},{key:"getIdentitiesToChoose",value:function(){var e=this;return new o.default(function(t){var r=d.runtimeConfiguration.catalogueURLs.idpProxy.prefix+e._domain+d.runtimeConfiguration.catalogueURLs.idpProxy.suffix;o.default.all([e.runtimeCapabilities.isAvailable("browser"),e.runtimeCapabilities.isAvailable("node")]).then(function(n){var o=n[0],i=n[1],a={constraints:{}};a.constraints.node=i,a.constraints.browser=o,e._runtimeCatalogue.getTypeList(r,a).then(function(r){var n=r.map(function(e){return{domain:e,type:"idToken"}});return g.info("[IdentityModule.getIdentityAssertion:getIdentitiesToChoose]",r,n),e._listOfIdps=n,t({defaultIdentity:e.identities.defaultIdentity,identities:e.identities.identities,idps:n})})})})}},{key:"init",value:function(){var e=this;return new o.default(function(t){e._identities.loadIdentities().then(function(){e._crypto.getMyPublicKey().then(function(r){e._crypto.crypto._sha256((0,f.stringify)(r)).then(function(r){var n="user-guid://"+r;e.identities.guid=n,e._identities.loadAccessTokens().then(function(){t()})}).catch(function(e){})})})})}},{key:"getIdentityAssertion",value:function(e){g.log("[IdentityModule.getIdentityAssertion:identityBundle]",e);var t=this;return new o.default(function(r,n){t.runtimeCapabilities.isAvailable("browser").then(function(o){if(g.log("runtime browser identity acquisition",o),o)if(e&&e.hasOwnProperty("idp")){var i=e.idp,a=e.hasOwnProperty("origin")?e.origin:"origin",s=e.hasOwnProperty("idHint")?e.idHint:"";if(t.identities.defaultIdentity){var u=t.identities.defaultIdentity;if(u.expires>(0,f.secondsSinceEpoch)())return r(u);u.hasOwnProperty("refresh")?(g.log("[Identity.IdentityModule.getIdentityAssertion] refreshing assertion: ",u),t._refreshIdAssertion().then(function(e){return g.log("[IdentityModule.getIdentityAssertion] refreshed assertion.",e),r(e)})):t._getIdAssertionForDomain(a,i,s).then(function(e){r(e)},function(e){n(e)})}else t._getIdAssertionForDomain(a,i,s).then(function(e){r(e)},function(e){n(e)})}else if(t.identities.defaultIdentity){var c=t.identities.defaultIdentity;if(c.expires>(0,f.secondsSinceEpoch)())return r(c);c.hasOwnProperty("refresh")?(g.log("[Identity.IdentityModule.getValidToken] refreshing assertion: ",c),t._refreshIdAssertion(c).then(function(e){return g.log("[IdentityModule.getIdentityAssertion] refreshed assertion.",e),r(e)})):t.selectIdentityFromGUI().then(function(e){return g.log("[IdentityModule] Identity selected from GUI."),t.identities.defaultIdentity=e.userProfile.userURL,r(e)},function(e){return n(e)})}else t.selectIdentityFromGUI().then(function(e){return g.log("[IdentityModule] Identity selected from GUI."),t.identities.defaultIdentity=e.userProfile.userURL,r(e)},function(e){return n(e)})}).catch(function(e){return g.error("Error on identity acquisition ",e),n(e)}),t.runtimeCapabilities.isAvailable("node").then(function(e){if(g.log("node identity acquisition",e),e){if(t.identities.currentIdentity)return r(t.identities.currentIdentity);g.log("getIdentityAssertion for nodejs");var o={type:"idp",value:"nodejs-idp",code:200,auth:!1};t.callNodeJsGenerateMethods(o.value,"origin").then(function(e){r(e)},function(e){n(e)})}}).catch(function(e){g.error("Error on identity acquisition ",e),n(e)})})}},{key:"_getIdAssertionForDomain",value:function(e,t,r){var n=this;return new o.default(function(o,i){n.selectIdentityForHyperty(e,t,r).then(function(e){return g.log("[IdentityModule._getIdAssertionForDomain] Identity selected by hyperty."),o(e)},function(e){n.selectIdentityFromGUI().then(function(e){return g.log("[IdentityModule._getIdAssertionForDomain] Identity selected by hyperty."),o(e)},function(e){return i(e)})})})}},{key:"_refreshIdAssertion",value:function(e){var t=this;return new o.default(function(r,n){t.sendRefreshMessage(e).then(function(e){g.log("[Identity.IdentityModule.getValidToken] refreshed assertion: ",e),t.identities.updateAssertion(e).then(function(){r(e)},function(e){g.error("[IdentityModule.getValidToken] error updating the assertion ",e),n(e)})},function(e){g.error("[IdentityModule.getValidToken] error refreshing the assertion ",e),n(e)})})}},{key:"getUsersIDs",value:function(){return this.identities.identifiers}},{key:"deleteIdentity",value:function(e){return this.identities.removeIdentity(e)}},{key:"requestIdentityToGUI",value:function(e,t){g.log("[IdentityModule.requestIdentityToGUI:identities]",e),g.log("[IdentityModule.requestIdentityToGUI:idps]",t);var r=this;return new o.default(function(n,o){if(!1===r.guiDeployed){var i=r._guiURL,a=new v.default(i,r._messageBus);r.guiFake=a,r.guiDeployed=!0}var s={type:"create",to:r._guiURL,from:r._idmURL,body:{value:{identities:e,idps:t}}},u=function(e){if(r._messageBus.removeResponseListener(r._idmURL,e.id),200===e.body.code){var t=e.body;g.log("selectedIdentity: ",t.value),n(t)}else o("error on requesting an identity to the GUI")};try{r._messageBus.postMessage(s,u,!1)}catch(e){o("In method callIdentityModuleFunc error: "+e)}})}},{key:"callNodeJsGenerateMethods",value:function(e,t){g.log("[callNodeJsGenerateMethods:idp]",e),g.log("[callNodeJsGenerateMethods:origin]",t);var r=this;return new o.default(function(n,o){var i=void 0;r._crypto.getMyPublicKey().then(function(n){return g.log("[callNodeJsGenerateMethods:key]",n),i=(0,f.stringify)(n),g.log("[callNodeJsGenerateMethods] NO_URL"),r.generateAssertion(i,t,"url",e)}).then(function(e){e?n(e):o("Error on obtaining Identity")}).catch(function(e){g.log(e),o(e)})})}},{key:"callGenerateMethods",value:function(e,t){g.log("[callGenerateMethods:idp]",e),g.log("[callGenerateMethods:origin]",t);var r=this;return new o.default(function(n,o){var i=void 0;r._crypto.getMyPublicKey().then(function(n){return g.log("[callGenerateMethods:key]",n),i=(0,f.stringify)(n),g.log("generateAssertion:no_hint"),r.generateAssertion(i,t,"",e)}).then(function(n){return r.myHint=n,g.log("generateAssertion:hint"),r.generateAssertion(i,t,n,e)}).then(function(e){e?n(e):o("Error on obtaining Identity")}).catch(function(e){g.error(e),o(e)})})}},{key:"loginSelectedIdentity",value:function(e,t,r,n){g.log("[loginSelectedIdentity:publicKey]",e),g.log("[loginSelectedIdentity:origin]",t),g.log("[loginSelectedIdentity:idp]",r),g.log("[loginSelectedIdentity:loginUrl]",n);var i=this;return new o.default(function(o,a){g.log("[IdentityModule] openPopup"),i.callIdentityModuleFunc("openPopup",{urlreceived:n}).then(function(e){return e},function(e){return g.error("Error while logging in for the selected identity."),a(e)}).then(function(n){i.sendGenerateMessage(e,t,n,r).then(function(e){if(!e.hasOwnProperty("assertion"))return g.error("Error while logging in for the selected identity."),a("Could not generate a valid assertion for selected identity.");i.identities.addAssertion(e).then(function(e){o("Login was successfull")}).catch(function(e){a("Login has failed:"+e)})}).catch(function(e){a("On loginSelectedIdentity from method sendGenerateMessage error:  "+e)})})})}},{key:"selectIdentityForHyperty",value:function(e,t,r){g.log("[selectIdentityForHyperty:origin]",e),g.log("[selectIdentityForHyperty:idp]",t),g.log("[selectIdentityForHyperty:idHint]",r);var n=this;return new o.default(function(o,i){n._crypto.getMyPublicKey().then(function(a){var s=(0,f.stringify)(a);n.sendGenerateMessage(s,e,r,t).then(function(r){r.hasOwnProperty("assertion")?n.identities.addAssertion(r).then(function(e){return o(r)},function(e){return i(e)}):r.hasOwnProperty("loginUrl")?n.loginSelectedIdentity(s,e,t,r.loginUrl).then(function(e){return o(e)},function(e){return i(e)}):(g.log("Proceeding by logging in."),n.callGenerateMethods(t,e).then(function(e){return o(e)},function(e){return i(e)}))}).catch(function(e){i("On selectIdentityForHyperty from method sendGenerateMessage error:  "+e)})}).catch(function(e){i("On selectIdentityForHyperty from method generateRSAKeyPair error:  "+e)})})}},{key:"selectIdentityFromGUI",value:function(e){var t=this;g.log("[IdentityModule.selectIdentityFromGUI:origin]",e);var r=this;return new o.default(function(n,o){t.getIdentitiesToChoose().then(function(e){return r.requestIdentityToGUI(e.identities,e.idps)}).then(function(t){if("identity"===t.type)r.identities.identities[t.value]?n(r.identities.identities[t.value]):o("[IdentityModule.selectIdentityFromGUI] identity not found: ",t.value);else{if("idp"!==t.type)return o("error on GUI received message.");r.callGenerateMethods(t.value,e).then(function(e){return n(e)},function(e){return o(e)})}}).catch(function(e){o("On selectIdentityFromGUI from method requestIdentityToGUI error:  "+e)})})}},{key:"callIdentityModuleFunc",value:function(e,t){g.log("[callIdentityModuleFunc:methodName]",e),g.log("[callIdentityModuleFunc:parameters]",t);var r=this;return new o.default(function(n,o){var i={type:"execute",to:r._guiURL,from:r._idmURL,body:{resource:"identity",method:e,params:t}},a=function(e){r._messageBus.removeResponseListener(r._idmURL,e.id);var t=e.body.value;n(t)};try{r._messageBus.postMessage(i,a,!1)}catch(e){o("In method callIdentityModuleFunc error: "+e)}})}},{key:"getToken",value:function(e){var t=this,r=e.from,n=e.to;return e.hasOwnProperty("body")&&e.body.hasOwnProperty("source")&&(r=e.body.source),"forward"===e.type&&(r=e.body.from),e.hasOwnProperty("body")&&e.body.hasOwnProperty("subscriber")&&(r=e.body.subscriber),new o.default(function(o,i){g.log("[IdentityModule.getToken] for msg ",e),t.registry.isLegacy(n).then(function(n){n?t._getAccessToken(e).then(function(e){g.log("[IdentityModule.getToken] access token ",e),o((0,f.deepClone)(e))}).catch(function(e){i("[IdentityModule.getToken] Access Token error "+e)}):t._getValidToken(r).then(function(e){o(e)}).catch(function(e){i("On getToken from method _getValidToken error: "+e)})}).catch(function(e){i("On getToken from method isLegacy error: "+e)})})}},{key:"getIdToken",value:function(e){g.info("getIdToken:hypertyURL ",e);var t=this;return new o.default(function(r,n){var o=e.split("://"),i=void 0;if("hyperty"===o[0]){if(i=t.registry.getHypertyOwner(e)){var a=t.identities.getIdentity(i);return a?r(a):n("[IdentityModule.getIdToken] Identity not found for: ",i)}return n("[IdentityModule.getIdToken] User not found for hyperty: ",i)}t._getHypertyFromDataObject(e).then(function(e){if(i=t.registry.getHypertyOwner(e)){var o=t.identities.getIdentity(i);return o?r(o):n("[IdentityModule.getIdToken] Identity not found for: ",i)}return n("[IdentityModule.getIdToken] User not found for hyperty: ",e)}).catch(function(e){g.error("[IdentityModule.getIdToken] Error: ",e),n(e)})})}},{key:"_getAccessToken",value:function(e){var t=e.to,r=this;return new o.default(function(n){if(!e.hasOwnProperty("body"))return reject("[IdentityModule._getAccessToken] missing mandatory msg body: ",e);if(!e.body.hasOwnProperty("value"))return reject("[IdentityModule._getAccessToken] missing mandatory msg body value: ",e);if(!e.body.value.hasOwnProperty("resources"))return reject("[IdentityModule._getAccessToken] missing mandatory msg body value resources: ",e);var o=(0,f.divideURL)(t).domain;t.includes("protostub")&&(o=o.replace(o.split(".")[0]+".",""));var i=e.body.value.resources;r._getAccessTokenForDomain(o,i).then(function(e){n(e)})})}},{key:"_getAccessTokenForDomain",value:function(e,t){var r=this,n=void 0;return new o.default(function(o,i){try{n=r.identities.getAccessToken(e,t)}catch(e){return i("[IdentityModule._getAccessTokenForDomain] Access Token error "+err)}if(n){if("in-progress"===n.status)return o(r._inProgressAccessToken(e,t));var a=(0,f.secondsSinceEpoch)();if(g.log("[Identity.IdentityModule._getAccessTokenForDomain] found  Access Token ",n),!(a>=n.expires))return o((0,f.deepClone)(n));if(!n.hasOwnProperty("refresh"))return o(r._getNewAccessToken(e,t));r._refreshAccessToken((0,f.deepClone)(n)).then(function(e){return o(r.identities.updateAccessToken(e))})}else r._getNewAccessToken(e,t).then(function(e){return g.log("[Identity.IdentityModule._getAccessTokenForDomain] new Access Token ",e),o(e)}).catch(function(e){i("[IdentityModule._getAccessTokenForDomain] on getNewAccessToken "+e)})})}},{key:"_inProgressAccessToken",value:function(e,t){var r=this;this.identities.watchingYou.observe("accessTokens",function(n){g.log("[IdentityModule._inProgressAccessToken] accessTokens changed "+r.identities.accessTokens);var o=n.keypath;if(o.includes("status")&&(o=o.replace(".status","")),o===e&&"status"===n.name&&"created"===n.newValue)return r.identities.getAccessToken(e,t)})}},{key:"_getNewAccessToken",value:function(e,t){var r=this;return new o.default(function(n,o){r.identities.setAccessTokenInProgress(e);var i={type:"execute",to:r._resolveDomain(e),from:r._idmURL,body:{method:"getAccessTokenAuthorisationEndpoint",params:t}};r._messageBus.postMessage(i,function(e){if(e.body.code>299)return o("[IdentityModule._getNewAccessToken] Error on getAccessTokenAuthorisationEndpoint from IdP Proxy: ",e.body.desc);r.callIdentityModuleFunc("openPopup",{urlreceived:e.body.value}).then(function(e){g.log("[IdentityModule:callIdentityModuleFunc:openPopup] auhtorisation result: ",e),i.body.method="getAccessToken",i.body.params={resources:t,login:e},r._messageBus.postMessage(i,function(e){if(e.body.code>299)return o("[IdentityModule._getNewAccessToken] Error on getAccessToken from IdP Proxy: ",e.body.desc);r.identities.addAccessToken(e.body.value).then(function(t){return g.info("[IdentityModule._getNewAccessToken] resolving token: ",t),n(e.body.value)},function(e){o(e)})})},function(e){o(e)})})})}},{key:"_refreshAccessToken",value:function(e){var t=this;return g.log("IdentityModule._refreshAccessToken:outdatedToken",e),new o.default(function(r,n){var o=t._resolveDomain(e.domain),i=void 0;i={type:"execute",to:o,from:t._idmURL,body:{method:"refreshAccessToken",params:{token:e}}};try{t._messageBus.postMessage(i,function(e){var t=e.body.value;r(t)})}catch(e){n("In IdentityModule._refreshAccessToken on postMessage error: "+e)}})}},{key:"sendRefreshMessage",value:function(e){var t=this;return g.log("sendRefreshMessage:oldIdentity",e),new o.default(function(r,n){var o=t._resolveDomain(e.idp.domain),i=void 0,a=t.getIdentity(e.userProfile.userURL);g.info("sendRefreshMessage:oldIdentity",e),i={type:"execute",to:o,from:t._idmURL,body:{resource:"identity",method:"refreshAssertion",params:{identity:a}}};try{t._messageBus.postMessage(i,function(e){var t=e.body.value;r(t)})}catch(e){n("In sendRefreshMessage on postMessage error: "+e)}})}},{key:"getAccessToken",value:function(e,t,r){g.log("[getAccessToken:idpDomain]",e);var n=this;return new o.default(function(o,i){var a=n._resolveDomain(e),s=void 0;s={type:"execute",to:a,from:n._idmURL,body:{resource:"identity",method:"getAccessToken",params:{resources:t,login:r}}};try{n._messageBus.postMessage(s,function(e){if(e.body.code<299){var t=e.body.value;o(t)}else o(e.body)})}catch(e){i("IdentityModule.In getAccessToken: "+e)}})}},{key:"getAccessTokenAuthorisationEndpoint",value:function(e,t){g.log("[getAccessTokenAuthorisationEndpoint:idpDomain]",t);var r=this;return new o.default(function(n,o){var i=r._resolveDomain(t),a=void 0;a={type:"execute",to:i,from:r._idmURL,body:{resource:"identity",method:"getAccessTokenAuthorisationEndpoint",params:{resources:e}}};try{r._messageBus.postMessage(a,function(e){var t=e.body.value;n(t)})}catch(e){o("In getAccessTokenAuthorisationEndpoint: "+e)}})}},{key:"sendGenerateMessage",value:function(e,t,r,n){g.log("[sendGenerateMessage:contents]",e),g.log("[sendGenerateMessage:origin]",t),g.log("[sendGenerateMessage:usernameHint]",r),g.log("[sendGenerateMessage:idpDomain]",n),g.log("sendGenerateMessage_hint");var i=this;return new o.default(function(o,a){var s=i._resolveDomain(n),u=void 0;u={type:"execute",to:s,from:i._idmURL,body:{resource:"identity",method:"generateAssertion",params:{contents:e,origin:t,usernameHint:r}}};try{i._messageBus.postMessage(u,function(e){e.body.code<300?o(e.body.value):a(e.body)})}catch(e){a("In sendGenerateMessage: "+e)}})}},{key:"generateAssertion",value:function(e,t,r,n){g.log("[generateAssertion:contents]",e),g.log("[generateAssertion:origin]",t),g.log("[generateAssertion:usernameHint]",r),g.log("[generateAssertion:idpDomain]",n);var i=this;return new o.default(function(o,a){g.log("[IdentityModule:sendGenerateMessage:sendGenerateMessage]",r),i.sendGenerateMessage(e,t,r,n).then(function(e){e?i.identities.addAssertion(e).then(function(t){o(e)},function(e){a(e)}):a("error on obtaining identity information")},function(e){e.hasOwnProperty("description")&&e.description.hasOwnProperty("loginUrl")?i.callIdentityModuleFunc("openPopup",{urlreceived:e.description.loginUrl}).then(function(e){g.log("[IdentityModule:callIdentityModuleFunc:openPopup]",r),o(e)},function(e){a(e)}):(g.error("[IdentityModule:sendGenerateMessage] generate assertion with hint error ",e),a(e))}).catch(function(e){a("On generateAssertion from method sendGenerateMessage error: "+e)})})}},{key:"validateAssertion",value:function(e,t,r){g.log("[validateAssertion:assertion]",e),g.log("[validateAssertion:origin]",t),g.log("[validateAssertion:idpDomain]",r);var n=this,i=n._resolveDomain(r),a={type:"execute",to:i,from:n._idmURL,body:{resource:"identity",method:"validateAssertion",params:{assertion:e,origin:t}}};return new o.default(function(e,t){try{n._messageBus.postMessage(a,function(r){200===r.body.code?e(r.body.value):t("error",r.body.code)})}catch(e){t("On validateAssertion from method postMessage error: "+e)}})}},{key:"addGUIListeners",value:function(){var e=this;e._messageBus.addListener(e._idmURL,function(t){var r=t.body.method;g.log("[IdentityModule:addGUIListeners]",t,t.body,r);var n=void 0;if("deployGUI"===r)n=e.deployGUI();else{if("getIdentitiesToChoose"===r)return void e.getIdentitiesToChoose().then(function(r){var n={type:"execute",value:r,code:200},o={id:t.id,type:"response",to:t.from,from:t.to,body:n};try{e._messageBus.postMessage(o)}catch(e){g.error("On addGUIListeners from if storeIdentity method postMessage error: "+e)}});if("unregisterIdentity"===r){var o=t.body.params.email;n=e.unregisterIdentity(o)}else{if("getMyPublicKey"===r)return void e._crypto.getMyPublicKey().then(function(r){r=(0,f.stringify)(r);var n={type:"execute",value:r,code:200},o={id:t.id,type:"response",to:t.from,from:t.to,body:n};try{e._messageBus.postMessage(o)}catch(e){g.error("On addGUIListeners from if generateRSAKeyPair method postMessage error: "+e)}});if("sendGenerateMessage"===r){var i=t.body.params.contents,a=t.body.params.origin,s=t.body.params.usernameHint,u=t.body.params.idpDomain,c={id:t.id,type:"response",to:t.from,from:t.to};return void e.sendGenerateMessage(i,a,s,u).then(function(t){var r={type:"execute",value:t,code:200};c.body=r;try{e._messageBus.postMessage(c)}catch(e){g.error("IdentityModule.addGUIListeners sendGenerateMessage error: "+e)}},function(t){g.info("IDPProxy generateAssertion reply error "+t),c.body=t,e._messageBus.postMessage(c)})}if("getAccessTokenAuthorisationEndpoint"===r){var l=t.body.params.scope,d=t.body.params.idpDomain;return void e.getAccessTokenAuthorisationEndpoint(l,d).then(function(r){var n={type:"execute",value:r,code:200},o={id:t.id,type:"response",to:t.from,from:t.to,body:n};try{e._messageBus.postMessage(o)}catch(e){g.error("On addGUIListeners from if sendGenerateMessage method postMessage error: "+e)}})}if("addAccessToken"===r){var p=t.body.params;return void e.identities.addAccessToken(p).then(function(r){var n={type:"execute",value:r,code:200},o={id:t.id,type:"response",to:t.from,from:t.to,body:n};try{e._messageBus.postMessage(o)}catch(e){g.error("On addGUIListeners from if storeIdentity method postMessage error: "+e)}})}if("getAccessToken"===r){var y=t.body.params.idpDomain,h=t.body.params.resources,v=t.body.params.login,b={id:t.id,type:"response",to:t.from,from:t.to};return void e.getAccessToken(y,h,v).then(function(t){var r={type:"execute",value:t,code:200};b.body=r;try{e._messageBus.postMessage(b)}catch(e){g.error("On addGUIListeners from if sendGenerateMessage method postMessage error: "+e)}},function(t){try{b.body=t,e._messageBus.postMessage(b)}catch(e){g.error("On addGUIListeners from if sendGenerateMessage method postMessage error: "+e)}})}if("addAssertion"===r){var _=t.body.params;return void e.identities.addAssertion(_).then(function(r){var n={type:"execute",value:r,code:200},o={id:t.id,type:"response",to:t.from,from:t.to,body:n};try{e._messageBus.postMessage(o)}catch(e){g.error("On addGUIListeners from if storeIdentity method postMessage error: "+e)}})}if("refreshAccessToken"===r){var m=t.body.params.domain,R=t.body.params.resources;return void e._getAccessTokenForDomain(m,R).then(function(r){var n={id:t.id,type:"response",to:t.from,from:t.to,body:{value:r.accessToken,code:200}};try{e._messageBus.postMessage(n)}catch(e){g.error("On addGUIListeners for refreshAccessToken request: "+e)}})}}}var O={type:"execute",value:n,code:200},w={id:t.id,type:"response",to:t.from,from:t.to,body:O};try{e._messageBus.postMessage(w)}catch(e){g.error("On addGUIListeners from if storeIdentity method postMessage error: "+e)}})}},{key:"deployGUI",value:function(){this.guiDeployed=!0}},{key:"_getValidToken",value:function(e){g.log("[IdentityModule._getValidToken]:hypertyURL",e);var t=this;return new o.default(function(r,n){t.getIdToken(e).then(function(e){g.log("[IdentityModule._getValidToken] retrieved IdAssertion",e);var o=(0,f.secondsSinceEpoch)();if(!e.hasOwnProperty("expires"))return r(e);var i=e.expires;g.log("[Identity.IdentityModule.getValidToken] Token expires in",i),g.log("[Identity.IdentityModule.getValidToken] time now:",o),o>=i?e.hasOwnProperty("refresh")?(g.log("[Identity.IdentityModule.getValidToken] refreshing assertion: ",e),t.sendRefreshMessage(e).then(function(e){g.log("[Identity.IdentityModule.getValidToken] refreshed assertion: ",e),t.identities.updateAssertion(e).then(function(){r(e)},function(e){g.error("[IdentityModule.getValidToken] error updating the assertion ",e),n(e)})},function(e){g.error("[IdentityModule.getValidToken] error refreshing the assertion ",e),n(e)})):t.callGenerateMethods(e.idp.domain).then(function(e){r(e)}).catch(function(e){n("[IdentityModule.getValidToken] error when generating a new assertion "+e)}):r(e)}).catch(function(e){g.error("[IdentityModule.getValidToken] error on getIdToken",e),n(e)})})}},{key:"_getHypertyFromDataObject",value:function(e){g.info("_getHypertyFromDataObject:dataObjectURL",e);var t=this;return new o.default(function(r,n){var o=(0,f.divideURL)(e),i=o.domain,a=(0,f.parseMessageURL)(e),s=t.registry.getReporterURLSynchonous(a);if(g.info("_getHypertyFromDataObject:reporterURL",s),s)r(s);else{var u=t.dataObjectsIdentity[a];if(g.info("_getHypertyFromDataObject:storedReporterURL",u),u)r(u);else{var c=t.registry.getDataObjectSubscriberHyperty(e);g.info("_getHypertyFromDataObject:subscriberHyperty",c),c?r(c):t._coreDiscovery.discoverDataObjectPerURL(a,i).then(function(e){g.info("_getHypertyFromDataObject:dataObject",e),t.dataObjectsIdentity[a]=e.reporter,g.info("_getHypertyFromDataObject:dataObject.reporter",e.reporter),r(e.reporter)},function(e){n(e)})}}})}},{key:"_resolveDomain",value:function(e){return e?"domain-idp://"+e:"domain-idp://google.com"}},{key:"messageBus",get:function(){return this._messageBus},set:function(e){var t=this;t._messageBus=e,t.addGUIListeners()}},{key:"coreDiscovery",get:function(){return this._coreDiscovery},set:function(e){this._coreDiscovery=e}},{key:"registry",get:function(){return this._registry},set:function(e){this._registry=e}},{key:"identities",get:function(){return this._identities},set:function(e){this._identities=e}},{key:"idps",get:function(){return this._listOfIdps}}]),IdentityModule}();t.default=b,e.exports=t.default},function(e,t,r){e.exports={default:r(511),__esModule:!0}},function(e,t,r){r(512),e.exports=r(11).Number.isInteger},function(e,t,r){var n=r(26);n(n.S,"Number",{isInteger:r(513)})},function(e,t,r){var n=r(45),o=Math.floor;e.exports=function(e){return!n(e)&&isFinite(e)&&o(e)===e}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=function(e){return e&&e.__esModule?e:{default:e}}(n),i=r(4),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(i),s=a.getLogger("IdentityModule"),u=function GuiFake(e,t){(0,o.default)(this,GuiFake),s.log("FakeGUI_deployed");var r=this;r._url=e,r._waitTime=1e4,r._messageBus=t,r._messageBus.addListener(r._url,function(e){if(e.hasOwnProperty("type")&&"create"===e.type&&e.body.hasOwnProperty("value")&&e.body.value.hasOwnProperty("identities")&&e.body.value.hasOwnProperty("idps")){var t=e.body.value.identities,n=e.body.value.idps,o=void 0;o=void 0!==t[0]?{type:"identity",value:t[0],code:200}:{type:"idp",value:n[1].domain,code:200};var i={id:e.id,type:"response",to:e.from,from:e.to,body:o};"wait"===e.body.value?setTimeout(function(){r._messageBus.postMessage(i)},r._waitTime):r._messageBus.postMessage(i)}else s.log("Ignoring messages not intended to FakeGUI.",e)})};t.default=u,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=r(214),d=_interopRequireDefault(f),p=l.getLogger("IdentityHandler"),y=function(){function IdentityHandler(e){(0,a.default)(this,IdentityHandler),this._idm=e}return(0,u.default)(IdentityHandler,[{key:"reset",value:function(){this._idm.identities=new d.default(this._idm.identities._type,this._idm.identities._storageManager)}},{key:"_isToSetID",value:function(e){var t=["domain-idp","runtime","domain"],r=e.from;if(e.body&&e.body.hasOwnProperty("source")&&(r=e.body.source),e.body&&e.body.hasOwnProperty("subscriber")&&(r=e.body.subscriber),"forward"===e.type)return!1;if(r.includes("/p2prequester/")||r.includes("/p2phandler/"))return!1;var n=r.split("://"),o=n[0];return-1===t.indexOf(o)}},{key:"processMessage",value:function(e){var t=this;return p.log("[IdentityHandler.processMessage] ",e),new o.default(function(r,n){if(!t._isToSetID(e))return r(e);t._idm.getToken(e).then(function(t){e.hasOwnProperty("body")||(e.body={}),e.body.identity=t,r(e)}).catch(function(e){p.error(e),n(e)})})}}]),IdentityHandler}();t.default=y,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=r(517),d=_interopRequireDefault(f),p=r(518),y=_interopRequireDefault(p),h=r(519),v=_interopRequireDefault(h),g=(r(6),l.getLogger("PEP"),function(){function PEP(e){(0,a.default)(this,PEP);var t=this;t.pdp=new y.default(e),t.actionsService=new d.default(e),t.context=e,e.pep=t,e.loadConfigurations()}return(0,u.default)(PEP,[{key:"addGUIListeners",value:function(){var e=this;e.context.messageBus.addListener(e.context.pepURL,function(t){var r=t.body.method,n=void 0;if("addToGroup"===r){var o=t.body.params.groupName,i=t.body.params.userEmail;n=e.context.addToGroup(o,i)}else if("createGroup"===r){var a=t.body.params.groupName;n=e.context.createGroup(a)}else if("addPolicy"===r){var s=t.body.params.source,u=t.body.params.key,c=t.body.params.policy,l=t.body.params.combiningAlgorithm;n=e.addPolicy(s,u,c,l)}else if("deleteGroup"===r){var f=t.body.params.groupName;n=e.context.deleteGroup(f)}else if("removePolicy"===r){var d=t.body.params.source,p=t.body.params.key;n=e.removePolicy(d,p)}else if("savePolicies"===r){var y=t.body.params.source;n=e.context.savePolicies(y)}else if("userPolicies"===r)n=e.context.userPolicies;else if("activeUserPolicy"===r){var h=t.body.params.userPolicy;h&&(e.context.activeUserPolicy=h),n=e.context.activeUserPolicy}else if("userPolicy"===r){var v=t.body.params.key;n=e.context.userPolicies[v]}else"saveActivePolicy"===r?n=e.context.saveActivePolicy():"getMyEmails"===r?n=e.context.getMyEmails():"getMyHyperties"===r?n=e.context.getMyHyperties():"groups"===r?n=e.context.groups:"getGroupsNames"===r&&(n=e.context.getGroupsNames());if("removeFromGroup"===r){var g=t.body.params.groupName,b=t.body.params.userEmail;n=e.context.removeFromGroup(g,b)}var _={type:"execute",value:n,code:200},m={id:t.id,type:"response",to:t.from,from:t.to,body:_};e.context.messageBus.postMessage(m)})}},{key:"addPolicy",value:function(e,t,r,n){if(!e)throw new Error("source is not defined");if(!t)throw new Error("key is not defined");switch(void 0===r?r=new v.default(t,[],[],n):r instanceof v.default||(r=new v.default(r.key,r.rules,r.actions,r.combiningAlgorithm)),e){case"SERVICE_PROVIDER":this.context.savePolicies(e,r,t);break;case"USER":this.context.userPolicies[t]=r,this.context.savePolicies(e);break;default:throw Error("Unknown policy source: "+e)}}},{key:"authorise",value:function(e,t){var r=this;if(!e)throw new Error("message is not defined");if(!e.from)throw new Error("message.from is not defined");if(!e.to)throw new Error("message.to is not defined");if(!e.type)throw new Error("message.type is not defined");return e.body=e.body||{},new o.default(function(n,o){e.body=e.body||{};var i=r,a=i.pdp.evaluatePolicies(e,t);"Not Applicable"===a&&(a=i.context.defaultBehaviour,e.body.auth=!1),i.actionsService.enforcePolicies(e,t).then(function(t){for(var r in t)if(e=t[r],a)e.body.auth=void 0===e.body.auth||e.body.auth,n(e);else{var i={body:{code:403,description:"Blocked by policy"},from:e.to,to:e.from,type:"response"};o(i)}},function(e){o(e)})})}},{key:"authoriseSync",value:function(e){var t=void 0;return e.body=e.body||{},t=this.pdp.evaluatePolicies(e,!0),"Not Applicable"===t&&(t=this.context.defaultBehaviour),t}},{key:"removePolicy",value:function(e,t){if(!e)throw new Error("source is not defined");if("*"!==e&&!t)throw new Error("key is not defined");switch(e){case"*":this.context.serviceProviderPolicy={},this.context.userPolicies={},this.context.activeUserPolicy=void 0,this.context.savePolicies("USER"),this.context.savePolicies("SERVICE_PROVIDER"),this.context.saveActivePolicy();break;case"SERVICE_PROVIDER":delete this.context.serviceProviderPolicy[t],this.context.savePolicies();break;case"USER":delete this.context.userPolicies[t],t===this.context.activeUserPolicy&&(this.context.activeUserPolicy=void 0,this.context.saveActivePolicy()),this.context.savePolicies("USER");break;default:throw Error("Unknown policy source: "+e)}}},{key:"messageBus",get:function(){return this.context.messageBus},set:function(e){var t=this;t.context.messageBus=e,t.addGUIListeners()}}]),PEP}());t.default=g,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=function(){function ActionsService(e){(0,a.default)(this,ActionsService),this.context=e}return(0,u.default)(ActionsService,[{key:"enforcePolicies",value:function(e,t){var r=this;return new o.default(function(n,o){var i=r.context.getPolicies(e,t);void 0!==i?void 0!==i.serviceProviderPolicy?i.serviceProviderPolicy.enforceActions(r.context,e).then(function(e){n(e)},function(e){o(e)}):void 0!==i.userPolicy?i.userPolicy.enforceActions(r.context,e).then(function(e){n(e)},function(e){o(e)}):n([e]):n([e])})}},{key:"forwardToID",value:function(e,t){var r=this;if(!r.context.runtimeRegistry)throw new Error("forward message to given ID is unsupported in this environment");return new o.default(function(n,o){if(r.context.runtimeRegistry.hypertiesList[0].hypertyURL===e.to){"runtime"!==e.to.split("://")[0]?r.context.runtimeRegistry.discoverHypertyPerUser(t).then(function(t){e.to=t.hypertyURL,e.body.via=void 0,n(e),r.context.runtimeRegistry._messageBus.postMessage(e)},function(e){o(e)}):n(e)}else n(e)})}},{key:"forwardToHyperty",value:function(e,t){var r=this;if(!r.context.runtimeRegistry)throw new Error("forward message to given ID is unsupported in this environment");return new o.default(function(n){if(r.context.runtimeRegistry.hypertiesList[0].hypertyURL===e.to){"runtime"!==e.to.split("://")[0]?(e.to=t,e.body.via=void 0,n(e),r.context.runtimeRegistry._messageBus.postMessage(e)):n(e)}else n(e)})}},{key:"sendAutomaticMessage",value:function(e,t){var r=this;return new o.default(function(n){var o={from:e.to,to:e.from,body:{value:t},type:e.type};n(e),r.context.runtimeRegistry._messageBus.postMessage(o)})}}]),ActionsService}();t.default=c,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(152),u=_interopRequireDefault(s),c=function(){function PDP(e){(0,o.default)(this,PDP),this.context=e,this.operators=new u.default}return(0,a.default)(PDP,[{key:"evaluatePolicies",value:function(e,t){var r=this.context.getPolicies(e,t),n="Not Applicable";if(void 0!==r&&((n=this.evaluatePolicy(e,r.serviceProviderPolicy,t))||"Not Applicable"===n)){var o=this.evaluatePolicy(e,r.userPolicy,t);"Not Applicable"!==o&&(n=o)}return n}},{key:"evaluatePolicy",value:function(e,t,r){var n="Not Applicable";return t&&(n=t.evaluateRules(this.context,e,r)),n}}]),PDP}();t.default=c,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(215),l=_interopRequireDefault(c),f=r(216),d=_interopRequireDefault(f),p=r(217),y=_interopRequireDefault(p),h=r(520),v=_interopRequireDefault(h),g=function(){function Policy(e,t,r,n){if((0,a.default)(this,Policy),!e)throw new Error("key is not defined");if(!r)throw new Error("actions are not defined");this.actions=r,this.key=e,this._setRules(t),this._setCombiningAlgorithm(n)}return(0,u.default)(Policy,[{key:"addAction",value:function(e,t){this.actions.push({method:e,param:t})}},{key:"createRule",value:function(e,t,r,n,o){void 0===o&&(o=this.getLastPriority()+1);var i=new v.default(e,t,r,n,o);this.rules.push(i)}},{key:"deleteRule",value:function(e){var t=this.rules.indexOf(e);this.rules.splice(t,1)}},{key:"enforceActions",value:function(e,t){var r=this;return new o.default(function(n,i){var a=[];if(0!==r.actions.length){for(var s in r.actions){var u=e.pep.actionsService[r.actions[s].method](t,r.actions[s].param);a.push(u)}o.default.all(a).then(function(e){n(e)},function(e){i(e)})}else n([t])})}},{key:"evaluateRules",value:function(e,t,r){var n=[];for(var o in this.rules)n.push(this.rules[o].evaluate(e,t,r));return this.combiningAlgorithm.combine(n)}},{key:"getLastPriority",value:function(){var e=[];if(0!==this.rules.length){for(var t in this.rules)e.push(this.rules[t].priority);return Math.max.apply(Math,e)}return-1}},{key:"getRuleByPriority",value:function(e){for(var t in this.rules)if(String(this.rules[t].priority)===String(e))return this.rules[t];throw Error("Rule with priority "+e+" does not exist!")}},{key:"_setCombiningAlgorithm",value:function(e){switch(e||(e="blockOverrides"),e){case"blockOverrides":this.combiningAlgorithm=new d.default;break;case"allowOverrides":this.combiningAlgorithm=new l.default;break;case"firstApplicable":this.combiningAlgorithm=new y.default;break;default:throw Error("Unknown algorithm: "+e)}}},{key:"_setRules",value:function(e){this.rules=[];for(var t in e){var r=e[t];void 0===r.priority&&(r.priority=this.getLastPriority()+1),r instanceof v.default||(r=new v.default(r.decision,r.condition,r.scope,r.target,r.priority)),this.rules.push(r)}}},{key:"sortRules",value:function(){return this.rules.sort(function(e,t){var r=e.priority,n=t.priority;return r<n?-1:r>n?1:0})}}]),Policy}();t.default=g,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(521),u=_interopRequireDefault(s),c=r(153),l=_interopRequireDefault(c),f=r(6),d=function(){function Rule(e,t,r,n,i){(0,o.default)(this,Rule),this.decision=e,this.setCondition(t),this.priority=i,this.scope=r,this.target=n}return(0,a.default)(Rule,[{key:"setCondition",value:function(e){if(e instanceof l.default||e instanceof u.default||e instanceof u.default)this.condition=e;else{switch(e.attribute){case"subscription":this.condition=new u.default(e.attribute,e.operator,e.params);break;case void 0:this.condition=new u.default(e);break;default:this.condition=new l.default(e.attribute,e.operator,e.params)}}}},{key:"evaluate",value:function(e,t,r){var n=r?t.to:t.from,o=void 0;switch(this.scope){case"global":break;case"hyperty":if((0,f.isDataObjectURL)(n)){var i=e.runtimeRegistry.getReporterURLSynchonous((0,f.removePathFromURL)(n));void 0!==i&&(o=e.runtimeRegistry.getHypertyName(i))}else"hyperty"===n.split("://")[0]&&(o=e.runtimeRegistry.getHypertyName((0,f.removePathFromURL)(n)));if(o===this.target)break;return"Not Applicable";case"identity":var a=void 0;if((0,f.isDataObjectURL)(n)){var s=e.runtimeRegistry.getReporterURLSynchonous((0,f.removePathFromURL)(n));a=e.runtimeRegistry.getHypertyOwner(s)}else"hyperty"===n.split("://")[0]&&(a=e.runtimeRegistry.getHypertyOwner((0,f.removePathFromURL)(n)));if(void 0!==a&&(a=(0,f.getUserEmailFromURL)(a)),a===this.target)break;return"Not Applicable"}return this.condition.isApplicable(e,t,this.scope,this.target)?this.decision:"Not Applicable"}}]),Rule}();t.default=d,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(153),u=_interopRequireDefault(s),c=r(152),l=_interopRequireDefault(c),f=r(522),d=_interopRequireDefault(f),p=function(){function AdvancedCondition(e){(0,o.default)(this,AdvancedCondition),this.operators=new l.default,void 0!==e.operators&&(e=e.condition),e=this.buildCondition(e),this.condition=e}return(0,a.default)(AdvancedCondition,[{key:"buildCondition",value:function(e){return Array.isArray(e[1])?e[1]=this.buildCondition(e[1]):"subscription"===e[1].attribute?e[1]=new d.default(e[1].attribute,e[1].operator,e[1].params):e[1]=new u.default(e[1].attribute,e[1].operator,e[1].params),void 0!==e[2]&&(Array.isArray(e[2])?e[2]=this.buildCondition(e[2]):"subscription"===e[2].attribute?e[2]=new d.default(e[2].attribute,e[2].operator,e[2].params):e[2]=new u.default(e[2].attribute,e[2].operator,e[2].params)),e}},{key:"isApplicable",value:function(e,t,r,n,o,i,a){for(o||(o=this.condition[0],i=this.condition[1],a=this.condition[2]);!(i instanceof u.default)&!(i instanceof d.default)&"boolean"!=typeof i;)i=this.isApplicable(e,t,r,n,i[0],i[1],i[2]);if(void 0!==a)for(;!(a instanceof u.default)&!(a instanceof d.default)&"boolean"!=typeof a;)a=this.isApplicable(e,t,r,n,a[0],a[1],a[2]);var s="boolean"==typeof i?i:i.isApplicable(e,t,r,n),c=void 0;return void 0!==a&&(c="boolean"==typeof a?a:a.isApplicable(e,t,r,n)),this.operators[o]([s,c])}}]),AdvancedCondition}();t.default=p,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(15),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(17),l=_interopRequireDefault(c),f=r(103),d=_interopRequireDefault(f),p=r(18),y=_interopRequireDefault(p),h=r(153),v=_interopRequireDefault(h),g=function(e){function SubscriptionCondition(e,t,r){return(0,a.default)(this,SubscriptionCondition),(0,l.default)(this,(SubscriptionCondition.__proto__||(0,o.default)(SubscriptionCondition)).call(this,e,t,r))}return(0,y.default)(SubscriptionCondition,e),(0,u.default)(SubscriptionCondition,[{key:"isApplicable",value:function(e,t){return!!("subscribe"===t.type&e.isFromRemoteSM(t.from))&&(0,d.default)(SubscriptionCondition.prototype.__proto__||(0,o.default)(SubscriptionCondition.prototype),"isApplicable",this).call(this,e,t)}}]),SubscriptionCondition}(v.default);t.default=g,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(35),o=_interopRequireDefault(n),i=r(15),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(17),d=_interopRequireDefault(f),p=r(18),y=_interopRequireDefault(p),h=r(4),v=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(h),g=r(211),b=_interopRequireDefault(g),_=r(524),m=_interopRequireDefault(_),R=v.getLogger("MessageBus"),O=function(e){function MessageBus(e){(0,u.default)(this,MessageBus);var t=(0,d.default)(this,(MessageBus.__proto__||(0,a.default)(MessageBus)).call(this));return t._registry=e,t._forwards={},t._pipelineIn=new m.default(function(e){R.error("PIPELINE-ERROR: ",(0,o.default)(e))}),t._pipelineOut=new m.default(function(e){R.error("PIPELINE-ERROR: ",(0,o.default)(e))}),t}return(0,y.default)(MessageBus,e),(0,l.default)(MessageBus,[{key:"postMessage",value:function(e,t,r){R.info("onPOSTMessage: ",e);var n=this,o=function(o){if(n._responseCallback(e,t,r),!n._onResponse(o)){var i=n._subscriptions[o.to];i?n._publishOn(i,o):n._onPostMessage(o)}};if(n._genId(e),n._isToProcess(e)){n._isIncomingMessage(e)?n._pipelineIn.process(e,o):n._pipelineOut.process(e,o)}else o(e);return e.id}},{key:"_isToProcess",value:function(e){var t=["domain","domain-idp","global","hyperty-runtime","runtime"],r=e.from.split("://"),n=r[0],o=e.to.split("://"),i=o[0],a=e.from,s=e.to;return e.body&&e.body.source&&(a=e.body.source),e.body&&e.body.subscriber&&(a=e.body.subscriber),-1===a.indexOf("/p2phandler/")&&-1===a.indexOf("/p2prequester/")&&-1===s.indexOf("/p2phandler/")&&-1===s.indexOf("/p2prequester/")&&((!this._registry.isLocal(a)||!this._registry.isLocal(e.to))&&(!(e.from===n||e.to===i||"read"===e.type||"response"===e.type||e.from.includes("hyperty://")&&"delete"===e.type)&&(-1===t.indexOf(n)||-1===t.indexOf(i))))}},{key:"_isIncomingMessage",value:function(e){var t=void 0;return"forward"===e.type?(R.info("[MessageBus - isIncomingMessage] - message.type: ",e.type),t=e.body.from):e.hasOwnProperty("body")&&e.body.hasOwnProperty("source")&&e.body.source?(R.info("[MessageBus - isIncomingMessage] - message.body.source: ",e.body.source),t=e.body.source):e.hasOwnProperty("body")&&e.body.hasOwnProperty("subscriber")&&e.body.subscriber?(R.info("[MessageBus - isIncomingMessage] - message.body.subscriber: ",e.body.subscriber),t=e.body.subscriber):e.hasOwnProperty("body")&&e.body.hasOwnProperty("reporter")&&e.body.reporter?(R.info("[MessageBus - isIncomingMessage] - message.body.reporter: ",e.body.reporter),t=e.body.reporter):(R.info("[MessageBus - isIncomingMessage] - message.from ",e.from),t=e.from),R.info("[MessageBus - isIncomingMessage] - check if isLocal: ",t),!this._registry.isLocal(t)}},{key:"addPublish",value:function(e){var t=this,r=this,n=r._forwards[e];if(!n){n={counter:0,fl:r.addListener(e,function(t){R.info("MB-PUBLISH: ( "+e+" )"),r._onPostMessage(t)}),remove:function(){0===--t.counter&&(t.fl.remove(),delete r._forwards[e])}},r._forwards[e]=n}return n.counter++,n}},{key:"addForward",value:function(e,t){var r=this;return r.addListener(e,function(n){R.info("MB-FORWARD: ( "+e+" to "+t+" )"),r.forward(t,n)})}},{key:"forward",value:function(e,t){var r=this,n=r._subscriptions[e];n&&r._publishOn(n,t)}},{key:"_onPostMessage",value:function(e){var t=this;t._registry.resolve(e).then(function(r,n){n?t.forward(r,n):t.forward(r,e)}).catch(function(e){R.error("RESOLVE-ERROR: ",e)})}},{key:"pipelineIn",get:function(){return this._pipelineIn}},{key:"pipelineOut",get:function(){return this._pipelineOut}}]),MessageBus}(b.default);t.default=O,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(4),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(s),c=(r(6),u.getLogger("Pipeline"),function(){function Pipeline(e){(0,o.default)(this,Pipeline);var t=this;t.handlers=[],t.onFail=e}return(0,a.default)(Pipeline,[{key:"process",value:function(e,t){var r=this;if(r.handlers.length>0){var n=new f(r.handlers);n.next(new l(r,n,e,t))}else t(e)}}]),Pipeline}()),l=function(){function PipeContext(e,t,r,n){(0,o.default)(this,PipeContext);var i=this;i._inStop=!1,i._pipeline=e,i._iter=t,i._msg=r,i._onDeliver=n}return(0,a.default)(PipeContext,[{key:"next",value:function(){var e=this;e._inStop||(e._iter.hasNext?e._iter.next(e):e._onDeliver(e._msg))}},{key:"deliver",value:function(){var e=this;e._inStop||(e._inStop=!0,e._onDeliver(e._msg))}},{key:"fail",value:function(e){var t=this;t._inStop||(t._inStop=!0,t._pipeline.onFail&&t._pipeline.onFail(e))}},{key:"pipeline",get:function(){return this._pipeline}},{key:"msg",get:function(){return this._msg},set:function(e){this._msg=e}}]),PipeContext}(),f=function(){function Iterator(e){(0,o.default)(this,Iterator),this._index=-1,this._array=e}return(0,a.default)(Iterator,[{key:"hasNext",get:function(){return this._index<this._array.length-1}},{key:"next",get:function(){return this._index++,this._array[this._index]}}]),Iterator}();t.default=c,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(35),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(526),d=r(4),p=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(d),y=p.getLogger("CryptoManager"),h=function(){function Crypto(e){(0,u.default)(this,Crypto);var t=this;"function"==typeof e.createWebcrypto?t._crypto=e.createWebcrypto():t._crypto=crypto}return(0,l.default)(Crypto,[{key:"encryptRSA",value:function(e,t){y.log("encryptRSA:pubKey",e),y.log("encryptRSA:data",t);var r=this;return new a.default(function(n,o){r._importRSAencryptKey(new Uint8Array(e)).then(function(e){r._crypto.subtle.encrypt({name:"RSA-OAEP"},e,t).then(function(e){n(new Uint8Array(e))}).catch(function(e){o(e)})})})}},{key:"decryptRSA",value:function(e,t){y.log("decryptRSA:privKey",e),y.log("decryptRSA:data",t);var r=this;return new a.default(function(n,o){r._importRSAdecryptKey(e).then(function(e){r._crypto.subtle.decrypt({name:"RSA-OAEP"},e,t).then(function(e){var t=new Uint8Array(e);n(t)}).catch(function(e){o(e)})})})}},{key:"signRSA",value:function(e,t){var r=this;return new a.default(function(n,o){r._importRSAsignKey(e).then(function(e){r._crypto.subtle.sign({name:"RSASSA-PKCS1-v1_5"},e,(0,f.encodeUTF8)(t)).then(function(e){n(new Uint8Array(e))}).catch(function(e){o(e)})})})}},{key:"verifyRSA",value:function(e,t,r){var n=this;return new a.default(function(o,i){n._importRSAverifyKey(e).then(function(e){n._crypto.subtle.verify({name:"RSASSA-PKCS1-v1_5"},e,r,(0,f.encodeUTF8)(t)).then(function(e){o(e)}).catch(function(e){i(e)})})})}},{key:"encryptAES",value:function(e,t,r){y.log("encryptAES:key",e),y.log("encryptAES:data",t),y.log("encryptAES:iv",r);var n=this;return new a.default(function(o,i){n._importAESkey(e).then(function(e){n._crypto.subtle.encrypt({name:"AES-CBC",iv:r},e,(0,f.encodeUTF8)(t)).then(function(e){o(new Uint8Array(e))}).catch(function(e){i(e)})})})}},{key:"decryptAES",value:function(e,t,r){y.log("decryptAES:key",e),y.log("decryptAES:data",t),y.log("decryptAES:iv",r);var n=this;return new a.default(function(o,i){n._importAESkey(e).then(function(e){n._crypto.subtle.decrypt({name:"AES-CBC",iv:r},e,t).then(function(e){var t=(0,f.decodeUTF8)(new Uint8Array(e));y.log("crypto-decryptAES",t),o(t)}).catch(function(e){i(e)})})})}},{key:"hashHMAC",value:function(e,t){y.log("hashHMAC:key",e),y.log("hashHMAC:data",t);var r=this;return new a.default(function(n,i){"string"!=typeof t&&(t=(0,o.default)(t),y.log("Converting hashHMAC inpured DATA"),y.log("HHashHMAC:",t)),r._importHMACkey(e).then(function(e){r._crypto.subtle.sign({name:"HMAC"},e,(0,f.encodeUTF8)(t)).then(function(e){y.log("HashHMAC signature:",new Uint8Array(e)),n(new Uint8Array(e))}).catch(function(e){i(e)})})})}},{key:"verifyHMAC",value:function(e,t,r){y.log("verifyHMAC:key",e),y.log("verifyHMAC:data",t),y.log("verifyHMAC:signature",r);var n=this;return new a.default(function(i,a){n._importHMACkey(e).then(function(e){"string"!=typeof t&&(t=(0,o.default)(t),y.log("Converting verifyHMAC inputed DATA:",t)),n._crypto.subtle.verify({name:"HMAC"},e,r,(0,f.encodeUTF8)(t)).then(function(e){y.log("verifyHMAC result",e),e?i(e):a(e)}).catch(function(e){y.error("crypto-verifyHMAC",e),a(e)})})})}},{key:"generateRSAKeyPair",value:function(){var e=this,t={};return new a.default(function(r,n){e._crypto.subtle.generateKey({name:"RSA-PSS",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]).then(function(o){e._crypto.subtle.exportKey("spki",o.publicKey).then(function(r){return t.public=new Uint8Array(r),e._crypto.subtle.exportKey("pkcs8",o.privateKey)}).then(function(e){t.private=new Uint8Array(e),r(t)}).catch(function(e){y.error(e),n(e)})}).catch(function(e){y.error(e),n(e)})})}},{key:"generateIV",value:function(){var e=this,t=new Uint8Array(16);return e._crypto.getRandomValues(t),t}},{key:"generateRandom",value:function(){var e=this,t=new Uint8Array(32);e._crypto.getRandomValues(t);for(var r=Date.now(),n=(0,f.encodeUTF8)(r.toString()),o=n.slice(n.length-4,n.length),i=0;i<4;i++)t[i]=o[i];return t}},{key:"generatePMS",value:function(){var e=this,t=new Uint8Array(48);return e._crypto.getRandomValues(t),t}},{key:"generateMasterSecret",value:function(e,t){var r=this;return new a.default(function(n,o){var i=new Uint8Array(48),a=t;r._digest(e).then(function(e){r.hashHMAC(e,a).then(function(t){for(var n=0;n<32;n++)i[n]=t[n];return r.hashHMAC(e,a+t)}).then(function(e){for(var t=0;t<16;t++)i[t+32]=e[t];n(i)}).catch(function(e){o(e)})})})}},{key:"generateKeys",value:function(e,t){var r=this;return new a.default(function(n,o){var i=[],a=t;r.hashHMAC(e,a).then(function(t){return i.push(t),r.hashHMAC(e,a+t)}).then(function(t){return i.push(t),r.hashHMAC(e,a+t)}).then(function(t){return i.push(t),r.hashHMAC(e,a+t)}).then(function(e){i.push(e),n(i)}).catch(function(e){o(e)})})}},{key:"_importRSAsignKey",value:function(e){var t=this;return new a.default(function(r,n){t._crypto.subtle.importKey("pkcs8",e,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]).then(function(e){r(e)}).catch(function(e){y.error("crypto-_importRSAsignKey",e),n(e)})})}},{key:"_importRSAverifyKey",value:function(e){var t=this;return new a.default(function(r,n){t._crypto.subtle.importKey("spki",e,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"]).then(function(e){r(e)}).catch(function(e){y.error("crypto-_importRSAverifyKey",e),n(e)})})}},{key:"_importRSAencryptKey",value:function(e){var t=this;return new a.default(function(r,n){t._crypto.subtle.importKey("spki",e,{name:"RSA-OAEP",hash:{name:"SHA-256"}},!0,["encrypt"]).then(function(e){r(e)}).catch(function(e){y.error("crypto-_importRSAencryptKey",e.name),n(e)})})}},{key:"_importRSAdecryptKey",value:function(e){var t=this;return new a.default(function(r,n){t._crypto.subtle.importKey("pkcs8",e,{name:"RSA-OAEP",hash:{name:"SHA-256"}},!0,["decrypt"]).then(function(e){r(e)}).catch(function(e){y.error("crypto-_importRSAdecryptKey",e),n(e)})})}},{key:"concatPMSwithRandoms",value:function(e,t,r){for(var n=new Uint8Array(e.length+t.length+r.length),o=0;o<e.length;o++)n[o]=e[o];for(var i=0;i<t.length;i++)n[i+e.length]=e[i];for(var a=0;a<r.length;a++)n[a+e.length+t.length]=e[a];return n}},{key:"_generate256bitKey",value:function(){var e=this,t=new Uint8Array(32);return e._crypto.getRandomValues(t),t}},{key:"_importHMACkey",value:function(e){var t=this;return new a.default(function(r,n){t._digest(e).then(function(e){t._crypto.subtle.importKey("raw",e,{name:"HMAC",hash:{name:"SHA-256"},length:256},!0,["sign","verify"]).then(function(e){r(e)}).catch(function(e){n(e)})})})}},{key:"_digest",value:function(e){var t=this;return new a.default(function(r,n){t._crypto.subtle.digest({name:"SHA-256"},e).then(function(e){r(new Uint8Array(e))}).catch(function(e){y.error(e),n(e)})})}},{key:"_importAESkey",value:function(e){var t=this;return new a.default(function(r,n){t._crypto.subtle.importKey("raw",e,{name:"AES-CBC"},!0,["encrypt","decrypt"]).then(function(e){r(e)}).catch(function(e){y.error("crypto-importAESkey",e),n(e)})})}},{key:"_sha256",value:function(e){var t=this,r=new TextEncoder("utf-8").encode(e);return t._crypto.subtle.digest("SHA-256",r).then(function(e){return t._hex(e)})}},{key:"_hex",value:function(e){for(var t=[],r=new DataView(e),n=0;n<r.byteLength;n+=4){var o=r.getUint32(n),i=o.toString(16),a=("00000000"+i).slice(-"00000000".length);t.push(a)}return t.join("")}}]),Crypto}();t.default=h,e.exports=t.default},function(e,t,r){"use strict";function encodeUTF8(e){for(var t=0,r=new Uint8Array(4*e.length),n=0;n!=e.length;n++){try{e.charCodeAt(n)}catch(e){return}var o=e.charCodeAt(n);if(o<128)r[t++]=o;else{if(o<2048)r[t++]=o>>6|192;else{if(o>55295&&o<56320){if(++n==e.length)throw"UTF-8 encode: incomplete surrogate pair";var i=e.charCodeAt(n);if(i<56320||i>57343)throw"UTF-8 encode: second char code 0x"+i.toString(16)+" at index "+n+" in surrogate pair out of range";o=65536+((1023&o)<<10)+(1023&i),r[t++]=o>>18|240,r[t++]=o>>12&63|128}else r[t++]=o>>12|224;r[t++]=o>>6&63|128}r[t++]=63&o|128}}return r.subarray(0,t)}function decodeUTF8(e){for(var t="",r=0;r<e.length;){var n=e[r++];if(n>127){if(n>191&&n<224){if(r>=e.length)throw"UTF-8 decode: incomplete 2-byte sequence";n=(31&n)<<6|63&e[r]}else if(n>223&&n<240){if(r+1>=e.length)throw"UTF-8 decode: incomplete 3-byte sequence";n=(15&n)<<12|(63&e[r])<<6|63&e[++r]}else{if(!(n>239&&n<248))throw"UTF-8 decode: unknown multibyte start 0x"+n.toString(16)+" at index "+(r-1);if(r+2>=e.length)throw"UTF-8 decode: incomplete 4-byte sequence";n=(7&n)<<18|(63&e[r])<<12|(63&e[++r])<<6|63&e[++r]}++r}if(n<=65535)t+=String.fromCharCode(n);else{if(!(n<=1114111))throw"UTF-8 decode: code point 0x"+n.toString(16)+" exceeds UTF-16 reach";n-=65536,t+=String.fromCharCode(n>>10|55296),t+=String.fromCharCode(1023&n|56320)}}return t}Object.defineProperty(t,"__esModule",{value:!0}),t.encodeUTF8=encodeUTF8,t.decodeUTF8=decodeUTF8},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(46),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(4),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(f),p=r(6),y=r(104),h=_interopRequireDefault(y),v=d.getLogger("loader"),g=function(){function Loader(e,t,r){if((0,u.default)(this,Loader),!t)throw Error("[Runtime.Loader] The descriptor need to know the runtime configuration");if(!r)throw Error("[Runtime.Loader] The descriptor need to know the runtime Descriptor instance");this.log=v,this.runtimeConfiguration=t,this.descriptors=r}return(0,l.default)(Loader,[{key:"loadHyperty",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=this,n=arguments[2];arguments[3];if(!this._readyToUse())return!1;if(!e)throw new Error("[Runtime.Loader] Hyperty descriptor url parameter is needed");return new a.default(function(i,a){var s=void 0,u=void 0,c=void 0,l=void 0,f=!1,d=function(e){v.info("[Runtime.Loader] Something failed on the deploy hyperty: ",e),a(e)},y=function(e){f=!0,a(e)};return v.info("[Runtime.Loader] ------------------ Hyperty ------------------------"),v.info("[Runtime.Loader] Get hyperty descriptor for :",e),r.descriptors.getHypertyDescriptor(e).then(function(e){v.info("[Runtime.Loader] 1: return hyperty descriptor"),c=e;var t=e.sourcePackageURL;return"/sourcePackage"===t?e.sourcePackage:r.runtimeCatalogue.getSourcePackageFromURL(t)},y).then(function(e){if(f)return!1;v.info("[Runtime.Loader] 2: return hyperty source code"),l=e;return!0},y).then(function(e){if(f)return!1;v.info("[Runtime.Loader] 3: return policy engine result"+e);return r.registry.getAppSandbox()},y).then(function(e){return!f&&(v.info("[Runtime.Loader] 4: return the sandbox",e),e)},function(e){if(f)return!1;v.info("[Runtime.Loader] 4.1: Try to register a new sandbox");var t={};return c&&c.hasOwnProperty("capabilities")&&(t=c.stubCapabilities),r._runtimeFactory.createSandbox(t).then(function(e){return e.addListener("*",function(e){r.messageBus.postMessage(e)}),e})},y).then(function(e){if(f)return!1;v.info("[Runtime.Loader] 5: return sandbox and register"),u=e;return r._addressAllocation.create(r._registry._domain,1,c,"hyperty",t)},y).then(function(t){return!f&&(v.info("[Runtime.Loader] 6: return the addresses for the hyperty",t),r.registry.registerHyperty(u,e,c,t,n))},y).then(function(e){if(f)return!1;v.info("[Runtime.Loader] 7: registration result",e),s=e.url;var t={};if(!(0,p.emptyObject)(c.configuration))try{t=(0,o.default)({},JSON.parse(c.configuration))}catch(e){t=c.configuration}t.runtimeURL=r._runtimeURL,e.p2pHandler&&(t.p2pHandler=e.p2pHandler,t.p2pRequester=e.p2pRequester);try{return u.deployComponent(l.sourceCode,s,t)}catch(e){v.info("[Runtime.Loader] Error on deploy component:",e),a(e)}},y).then(function(e){if(f)return!1;v.info("[Runtime.Loader] 8: Deploy component status for hyperty: ",e),r.messageBus.addListener(s,function(e){u.postMessage(e)}),r.messageBus.addListener(r.runtimeURL+"/status",function(e){u.postMessage(e)});var t={runtimeHypertyURL:s,status:e};v.info("[Runtime.Loader] Hyperty: ",t),i(t),v.info("[Runtime.Loader] ------------------ END ------------------------")},y).catch(d)})}},{key:"loadStub",value:function(e,t){var r=this;if(!this._readyToUse())return!1;if(!e)throw new Error("[Runtime.Loader.loadStub]ProtoStub descriptor url parameter is needed");return new a.default(function(n,i){var a=(0,p.divideURL)(e).domain;a||(a=e);var s=void 0,u=void 0,c=void 0,l=void 0,f=!1,d=void 0,y=function(e){v.info("[Runtime.Loader.loadStub]Something failed on the deploy of protocolstub: ",e),i(e)},h=function(e){f=!0,i(e)},g=void 0,b={};v.info("[Runtime.Loader.loadStub] starting loading for ",e," with p2pconfig ",t),v.info("[Runtime.Loader.loadStub]Discover or Create a new ProtoStub for domain: ",a);try{if(t)if(t.hasOwnProperty("isHandlerStub")&&t.isHandlerStub)!0,d=r.runtimeURL,g=r.registry.discoverP2PStub();else{!0;var _=t.remoteRuntimeURL;d=_,g=r.registry.discoverP2PStub(_)}else d=a,g=r.registry.discoverProtostub(a);v.info("[Runtime.Loader.loadStub]1. Proto Stub Discovered for ",e,": ",g),n(g),v.info(" [Runtime.Loader]------------------- END ---------------------------\n")}catch(g){v.info("[Runtime.Loader.loadStub]1. Proto Stub not found "+g),r.descriptors.getStubDescriptor(e).then(function(e){if(f)return!1;v.info("[Runtime.Loader.loadStub]2. return the ProtoStub descriptor"),u=e;var t=e.sourcePackageURL;return"/sourcePackage"===t?e.sourcePackage:r.runtimeCatalogue.getSourcePackageFromURL(t)},h).catch(y).then(function(e){return!f&&(u&&u.constraints&&(b=u.constraints),v.info("[Runtime.Loader.loadStub]3. return the ProtoStub Source Code"),l=e,r.registry.getSandbox(a,b))}).then(function(e){return!f&&(v.info("[Runtime.Loader.loadStub]4. if the sandbox is registered then return the sandbox ",e),s=e,e)}).catch(function(e){return!f&&(v.info("[Runtime.Loader.loadStub]5. Sandbox was not found, creating a new one ",e),r._runtimeFactory.createSandbox(b).then(function(e){return e.addListener("*",function(e){r.messageBus.postMessage(e)}),e}))}).then(function(n){return!f&&(v.info("[Runtime.Loader.loadStub]6. return the sandbox instance and register",n,"to domain ",a),s=n,r.registry.registerStub(s,d,t,e,u))},h).then(function(e){if(f)return!1;v.info("[Runtime.Loader.loadStub] 7. return the runtime protostub url: ",e),c=e.url;var n={};if(!(0,p.emptyObject)(u.configuration))try{n=(0,o.default)({},JSON.parse(u.configuration))}catch(e){n=u.configuration}if(t)try{n=(0,o.default)(n,JSON.parse(t))}catch(e){n=(0,o.default)(n,t)}n.runtimeURL=r._runtimeURL;try{return v.info("[Runtime.Loader.loadStub] 8: adding sandbox listener to protostubURL : ",c),r.messageBus.addListener(c,function(e){s.postMessage(e)}),s.deployComponent(l.sourceCode,c,n)}catch(e){v.error("[Runtime.Loader.loadStub] Error on deploy component:",e),i(e)}},h).then(function(){if(f)return!1;var e=void 0;t?(v.log("[Runtime.Loader.loadStub] p2pConfig: ",t),t.hasOwnProperty("isHandlerStub")&&(e=r.registry.p2pHandlerStub[r._runtimeURL]),t.hasOwnProperty("p2pRequesterStub")&&(e=r.registry.p2pRequesterStub[t.remoteRuntimeURL])):e=r.registry.protostubsList[a],v.log("[Runtime.Loader.loadStub] Stub: ",e),n(e),v.info("[Runtime.Loader.loadStub]------------------- END ---------------------------\n")},h).catch(y)}})}},{key:"loadIdpProxy",value:function(e){var t=this;if(!this._readyToUse())return!1;if(!e)throw new Error("[Runtime.Loader] IdpProxy descriptor url parameter is needed");return new a.default(function(r,n){var i=(0,p.divideURL)(e).domain;i||(i=e);var a=void 0,s=void 0,u=void 0,c=void 0,l=!1,f=function(e){v.info("[Runtime.Loader] Something failed on the deploy of IdpProxy: ",e),n(e)},d=function(e){l=!0,n(e)};v.info("[Runtime.Loader] ------------------- IDP Proxy Deploy ---------------------------\n"),v.info("[Runtime.Loader] Discover or Create a new IdpProxy for domain/URL: ",i);try{var y=t.registry.discoverIdpProxy(i);v.info("[Runtime.Loader] 1. IDPProxy Discovered: ",y);var h=t.registry.idpProxyList[i];v.log("Deployed: ",h),r(h),v.info("[Runtime.Loader] ------------------- END ---------------------------\n")}catch(y){v.info("[Runtime.Loader] 1. IdpProxy not found:",y),t.descriptors.getIdpProxyDescriptor(e).then(function(e){v.info("[Runtime.Loader] 2. Return the IDPProxy descriptor"),s=e;var r=e.sourcePackageURL;return"/sourcePackage"===r?e.sourcePackage:t.runtimeCatalogue.getSourcePackageFromURL(r)},d).then(function(e){if(l)return!1;v.info("[Runtime.Loader] 3. return the IDPProxy source package"),c=e;return!0},d).then(function(e){return!l&&t.registry.getSandbox(i)}).then(function(e){return!l&&(v.info("[Runtime.Loader] 4. if the sandbox is registered then return the sandbox",e),a=e,e)}).catch(function(e){if(l)return!1;v.info("[Runtime.Loader] 5. Sandbox was not found, creating a new one",e);var r={};return s&&s.hasOwnProperty("capabilities")&&(s=s.stubCapabilities),t._runtimeFactory.createSandbox(r).then(function(e){return e.addListener("*",function(e){t.messageBus.postMessage(e)}),e})}).then(function(e){return!l&&(v.info("[Runtime.Loader] 6. return the sandbox instance and register",e,"to domain ",i),a=e,t.registry.registerIdpProxy(e,i))},d).then(function(e){if(l)return!1;v.info("[Runtime.Loader] 7. Return the runtime Idp Proxy URL: ",e),u=e;var r={};if(!(0,p.emptyObject)(s.configuration))try{r=(0,o.default)({},JSON.parse(s.configuration))}catch(e){r=s.configuration}r.runtimeURL=t._runtimeURL;try{return t.messageBus.addListener(u,function(e){a.postMessage(e)}),a.deployComponent(c.sourceCode,e,r)}catch(e){v.info("[Runtime.Loader] Error on deploy component:",e),n(e)}},d).then(function(){if(l)return!1;var e=t.registry.idpProxyList[i];v.log("[Runtime.Loader.loadIdpProxy] 8: loaded: ",e),r(e),v.info("[Runtime.Loader.loadIdpProxy] ------------------- END ---------------------------\n")},d).catch(f)}})}},{key:"_readyToUse",value:function(){if(!this._runtimeURL)throw new Error("[Runtime.Loader] The loader need the runtime url address");if(!this._messagesBus)throw new Error("[Runtime.Loader] The loader need the messageBus component");if(!this._registry)throw new Error("[Runtime.Loader] The loader need the registry component");if(!this._runtimeFactory)throw new Error("[Runtime.Loader] The loader need the runtime factory component");return!0}},{key:"runtimeURL",set:function(e){this._runtimeURL=e},get:function(){return this._runtimeURL}},{key:"registry",set:function(e){this._registry=e;var t=h.default.instance;this._addressAllocation=t,v.log("[Loader - AddressAllocation] - ",t)},get:function(){return this._registry}},{key:"messageBus",set:function(e){this._messagesBus=e},get:function(){return this._messagesBus}},{key:"runtimeFactory",set:function(e){this._runtimeFactory=e},get:function(){return this._runtimeFactory}}]),Loader}();t.default=g,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(6),l=r(102),f=r(4),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(f),p=d.getLogger("Descriptors"),y=function(){function Descriptors(e,t,r){if((0,a.default)(this,Descriptors),!e)throw Error("The descriptor need to know the runtime url to be used");if(!t)throw Error("The descriptor needs the catalogue instance");if(!r)throw Error("The descriptor needs the runtime configuration");this.log=p,this.runtimeConfiguration=r,this.runtimeURL=e,this.catalogue=t,this.constraints=l.runtimeUtils.runtimeCapabilities}return(0,u.default)(Descriptors,[{key:"getHypertyDescriptor",value:function(e){return this.catalogue.getHypertyDescriptor(e,!0,this.constraints)}},{key:"getStubDescriptor",value:function(e){var t=this;return new o.default(function(r,n){var o=void 0,i=void 0,a=void 0,s=(0,c.divideURL)(t.runtimeURL),u=s.domain;if(e.includes("://")){var l=(0,c.divideURL)(e);o=l.domain;var f=l.identity;i=f?f.substring(f.lastIndexOf("/")+1):"default"}else i="default",o=e;if(a=(0,c.buildURL)(t.runtimeConfiguration,"catalogueURLs","protocolstub",i),o!==t.runtimeConfiguration.domain)if(e.indexOf("https")&&e.indexOf("hyperty-catalogue")){var d=(0,c.getConfigurationResources)(t.runtimeConfiguration,"catalogueURLs","protocolstub");a=d.prefix+o+d.suffix+i}else a=e;return p.log("Load ProtocolStub for domain, "+o+" : ",a),t.catalogue.getStubDescriptor(a,!0,t.constraints).then(function(e){r(e)}).catch(function(e){i=o,o=u;var r=(0,c.getConfigurationResources)(t.runtimeConfiguration,"catalogueURLs","protocolstub");return a=r.prefix+o+r.suffix+i,t.catalogue.getStubDescriptor(a,!0,t.constraints)}).then(function(e){r(e)}).catch(function(e){n(e)})})}},{key:"getIdpProxyDescriptor",value:function(e){var t=this;return new o.default(function(r,n){var o=void 0,i=void 0,a=(0,c.divideURL)(t.runtimeURL),s=a.domain,u=t.constraints;if(u.constraints.onlyAccessToken=!0,u.constraints.onlyIdAssertionValidation=!0,e.includes("://")){var l=(0,c.divideURL)(e);o=l.domain;var f=l.identity;i=f?f.substring(f.lastIndexOf("/")+1):"default"}else i="default",o=e;var d=(0,c.getConfigurationResources)(t.runtimeConfiguration,"catalogueURLs","idpProxy");return e=d.prefix+o+d.suffix+i,t.catalogue.getIdpProxyDescriptor(e,!0,u).then(function(e){r(e)}).catch(function(){return i=o,o=s,e=(0,c.buildURL)(t.runtimeConfiguration,"catalogueURLs","idpProxy",i),t.catalogue.getIdpProxyDescriptor(e,!0,u)}).then(function(e){r(e)}).catch(function(e){n(e)})})}}]),Descriptors}();t.default=y,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(4),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(s),c=u.getLogger("RuntimeUA"),l=function(){function MsgBusHandlers(e,t,r){if((0,o.default)(this,MsgBusHandlers),!e)throw Error("[MsgBusHandlers] pep input paramenter is mandatory");if(!t)throw Error("[MsgBusHandlers] idm input paramente is mandatory");if(!r)throw Error("[MsgBusHandlers] crypto input paramente is mandatory");this.policyEngine=e,this.identityManager=t,this.cryptoManager=r}return(0,a.default)(MsgBusHandlers,[{key:"pepInHandler",get:function(){var e=this;return function(t){e.policyEngine.authorise(t.msg,!0).then(function(e){t.msg=e,t.next()}).catch(function(e){c.error(e),t.fail(e)})}}},{key:"pepOutHandler",get:function(){var e=this;return function(t){e.policyEngine.authorise(t.msg,!1).then(function(e){t.msg=e,t.next()}).catch(function(e){c.error(e),t.fail(e)})}}},{key:"idmHandler",get:function(){var e=this;return function(t){e.identityManager.processMessage(t.msg).then(function(e){t.msg=e,t.next()}).catch(function(e){c.error(e),t.fail(e)})}}},{key:"encryptHandler",get:function(){var e=this;return function(t){e.cryptoManager.encryptMessage(t.msg).then(function(e){t.msg=e,t.next()}).catch(function(e){c.error(e),t.fail(e)})}}},{key:"decryptHandler",get:function(){var e=this;return function(t){e.cryptoManager.decryptMessage(t.msg).then(function(e){t.msg=e,t.next()}).catch(function(e){c.warn(e),t.fail(e)})}}}]),MsgBusHandlers}();t.default=l,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(4),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(c),f=r(6),d=l.getLogger("CoreDiscovery"),p=function(){function CoreDiscovery(e,t,r,n,o){if((0,a.default)(this,CoreDiscovery),!n)throw Error("The catalogue needs the runtimeFactory");var i=this;this._messageBus=t,i.graphConnector=r,i.httpRequest=n.createHttpRequest(),i.domain=(0,f.divideURL)(e).domain,i.discoveryURL=e+"/discovery/",i.registry=o,i.messageBus.addListener(i.discoveryURL,function(e){i.discoveryManager(e).then(function(t){i.messageBus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:t}})}).catch(function(t){var r=void 0,n=void 0;"GraphConnector"===t?(r="This search is not available at the moment. Try later.",n=500):(r="Not Found",n=404),i.messageBus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:n,description:r}})})})}return(0,u.default)(CoreDiscovery,[{key:"discoveryManager",value:function(e){var t=this,r=((0,f.divideURL)(e.from).domain,e.body.resource.split("/").filter(Boolean)),n=[],i=[];switch(d.log("[CoreDiscovery.discoveryManager] received: ",e),e.body.criteria&&(e.body.criteria.resources&&(n=e.body.criteria.resources),e.body.criteria.dataSchemes&&(i=e.body.criteria.dataSchemes)),r[1]){case"user":return"hyperty"==r[0]?t.discoverHyperties(e.body.resource.split("user/")[1],i,n,e.body.criteria.domain):t.discoverDataObjects(e.body.resource.split("user/")[1],i,n,e.body.criteria.domain);case"url":return"hyperty"==r[0]?t.discoverHypertyPerURL(e.body.resource.split("url/")[1],e.body.criteria.domain):t.discoverDataObjectPerURL(e.body.resource.split("url/")[1],e.body.criteria.domain);case"name":return t.discoverDataObjectsPerName(e.body.resource.split("name/")[1],i,n,e.body.criteria.domain);case"reporter":return t.discoverDataObjectsPerReporter(e.body.resource.split("reporter/")[1],i,n,e.body.criteria.domain);case"guid":return void 0!==t.graphConnector&&null!==t.graphConnector?"hyperty"==r[0]?t.discoverHypertiesPerGUID(e.body.resource.split("user-guid://")[1],i,n):t.discoverDataObjectsPerGUID(e.body.resource.split("user-guid://")[1],i,n):o.default.reject("GraphConnector");case"userprofile":return void 0!==t.graphConnector&&null!==t.graphConnector?"hyperty"==r[0]?t.discoverHypertiesPerUserProfileData(e.body.resource.split("userprofile/")[1],i,n):t.discoverDataObjectsPerUserProfileData(e.body.resource.split("userprofile/")[1],i,n):o.default.reject("GraphConnector")}}},{key:"discoverHypertiesPerUserProfileData",value:function(e,t,r){var n=this;return new o.default(function(i,a){n.discoverGUIDPerUserIdentifier(e).then(function(e){var s=e.map(function(e){return new o.default(function(o,i){n.discoverHypertiesPerGUID(e,t,r).then(function(e){o(e)}).catch(function(e){o([])})})});o.default.all(s).then(function(e){var t=[].concat.apply([],e);if(0===t.length)return a("No hyperties were found");i(t)})}).catch(function(e){return a(e)})})}},{key:"discoverDataObjectsPerUserProfileData",value:function(e,t,r){var n=this;return new o.default(function(i,a){n.discoverGUIDPerUserIdentifier(e).then(function(e){var s=e.map(function(e){return new o.default(function(o,i){n.discoverDataObjectsPerGUID(e,t,r).then(function(e){o(e)}).catch(function(e){o([])})})});o.default.all(s).then(function(e){var t=[].concat.apply([],e);if(0===t.length)return a("No dataObjects were found");i(t)})}).catch(function(e){return a(e)})})}},{key:"discoverHypertiesPerGUID",value:function(e,t,r){var n=this;return new o.default(function(i,a){n.discoverUserIdsPerGUID(e).then(function(e){var s=e.map(function(e){return new o.default(function(o,i){n.discoverHyperties(e.uID,t,r,e.domain).then(function(e){o(e)}).catch(function(e){o([])})})});o.default.all(s).then(function(e){var t=[].concat.apply([],e);if(0===t.length)return a("No hyperties were found");i(t)})}).catch(function(e){return a(e)})})}},{key:"discoverDataObjectsPerGUID",value:function(e,t,r){var n=this;return new o.default(function(i,a){n.discoverUserIdsPerGUID(e).then(function(e){var s=e.map(function(e){return new o.default(function(o,i){n.discoverDataObjects(e.uID,t,r,e.domain).then(function(e){o(e)}).catch(function(e){o([])})})});o.default.all(s).then(function(e){var t=[].concat.apply([],e);if(0===t.length)return a("No dataObjects were found");i(t)})}).catch(function(e){return a(e)})})}},{key:"discoverHyperties",value:function(e,t,r,n){var i=this,a=void 0;a=n||i.domain;var s={type:"read",from:i.discoveryURL,to:"domain://registry."+a,body:{}};return e.indexOf("user://")>-1?s.body.resource=e:s.body.resource="/hyperty/idp-identifier/"+e,t.length>0&&(s.body.criteria||(s.body.criteria={}),s.body.criteria.dataSchemes=t),r.length>0&&(s.body.criteria||(s.body.criteria={}),s.body.criteria.resources=r),new o.default(function(e,t){i.messageBus.postMessage(s,function(r){if(200!==r.body.code&&500!==r.body.code)return t("No Hyperty was found");var n=r.body.value,o=[];for(var i in n)o.push(n[i]);if(!(o.length>0))return t("No Hyperty was found");e(o)})})}},{key:"discoverDataObjects",value:function(e,t,r,n){var i=this,a=void 0,s=[];return a=n||i.domain,new o.default(function(n,u){i.discoverHyperties(e,[],[],a).then(function(e){var c=[];for(var l in e)c.push(e[l]);var f=c.map(function(e){return new o.default(function(n,o){i.discoverDataObjectsPerReporter(e.hypertyID,t,r,a).then(function(e){n(e)}).catch(function(e){n([])})})});o.default.all(f).then(function(e){[].concat.apply([],e).forEach(function(e){s.push(e)});var t=[];for(var r in s)t.push(s[r]);if(0===t.length)return u("No dataObjects were found");n(t)})}).catch(function(e){return u(e)})})}},{key:"discoverHypertyPerURL",value:function(e,t){var r=this,n=void 0;n=t||r.domain;var i={type:"read",from:r.discoveryURL,to:"domain://registry."+n,body:{resource:e}};return new o.default(function(e,t){r.messageBus.postMessage(i,function(r){if(200!==r.body.code&&500!==r.body.code)return t("No Hyperty was found");var n=r.body.value;if(!n)return t("No Hyperty was found");e(n)})})}},{key:"discoverDataObjectPerURL",value:function(e,t){var r=this,n=void 0;n=t||r.domain;var i={type:"read",from:r.discoveryURL,to:"domain://registry."+n,body:{resource:e}};return new o.default(function(e,t){r.messageBus.postMessage(i,function(r){var n=r.body.value;if(!n)return t("DataObject not found");e(n)})})}},{key:"discoverDataObjectsPerName",value:function(e,t,r,n){var i=this,a=void 0;a=n||i.domain;var s={type:"read",from:i.discoveryURL,to:"domain://registry."+a,body:{resource:e}};return t.length>0&&(s.body.criteria||(s.body.criteria={}),s.body.criteria.dataSchemes=t),r.length>0&&(s.body.criteria||(s.body.criteria={}),s.body.criteria.resources=r),new o.default(function(e,t){i.messageBus.postMessage(s,function(r){var n=r.body.value,o=[];for(var i in n)o.push(n[i]);if(!(o.length>0))return t("No DataObject was found");e(o)})})}},{key:"discoverDataObjectsPerReporter",value:function(e,t,r,n){var i=this,a=void 0;a=n||i.domain;var s={type:"read",from:i.discoveryURL,to:"domain://registry."+a,body:{resource:"/comm",criteria:{reporter:e}}};return t.length>0&&(s.body.criteria.dataSchemes=t),r.length>0&&(s.body.criteria.resources=r),new o.default(function(e,t){i.messageBus.postMessage(s,function(r){var n=r.body.value,o=[];for(var i in n)o.push(n[i]);if(!(o.length>0))return t("No DataObject was found");e(o)})})}},{key:"discoverUserIdsPerGUID",value:function(e){var t=this;return new o.default(function(r,n){t.graphConnector.queryGlobalRegistry(e).then(function(e){if("string"==typeof e||!e)return n("Unsuccessful discover userIDs by GUID");var t=e.userIDs;if(0===t.length)return n("UserIDs not available");r(t)}).catch(function(e){return n(e)})})}},{key:"discoverGUIDPerUserIdentifier",value:function(e){var t=this;return new o.default(function(r,n){t.httpRequest.get("https://rethink.tlabscloud.com/discovery/rest/discover/lookup?searchquery="+e).then(function(e){var t=JSON.parse(e),o=t.results.filter(function(e){return void 0!=e.rethinkID});if(0===o.length)return n("Unsuccessful discover GUID by user identifier");var i=o.map(function(e){return e.rethinkID});return r(i)}).catch(function(e){return n(e)})})}},{key:"messageBus",get:function(){return this._messageBus},set:function(e){this._messageBus=e}}]),CoreDiscovery}();t.default=p,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(219),o=_interopRequireDefault(n),i=r(82),a=_interopRequireDefault(i),s=r(46),u=_interopRequireDefault(s),c=r(16),l=_interopRequireDefault(c),f=r(3),d=_interopRequireDefault(f),p=r(1),y=_interopRequireDefault(p),h=r(2),v=_interopRequireDefault(h),g=r(4),b=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(g),_=r(6),m=r(218),R=b.getLogger("DataObjectsStorage"),O=function(){function DataObjectsStorage(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments[2],n=arguments[3];if((0,y.default)(this,DataObjectsStorage),!e)throw new Error("[Store Data Objects] - Needs the storageManager component");this._storageManager=e,this._storeDataObject=t,this._cache={},this._createSyncDB=m.createSyncDB,this._remotes={},this._factory=r,this._table="syncherManager:ObjectURLs",this._remoteStorageTable="dataObjectStorage",this._remoteSchema="url",this._runtimeStatusUpdate=n}return(0,v.default)(DataObjectsStorage,[{key:"loadRemote",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],r=this;return new d.default(function(n,o){var i=[],a=[];r._storageManager.get(null,null,"remotes").then(function(s){R.info("[StoreDataObjects.loadRemote] remotes: ",s),s||n(),t||(r._remotes=s),R.info("[StoreDataObjects.loadRemote] loading: ",r._remotes);var u=(0,l.default)(s);0===u.length&&n(),u.forEach(function(t){var n={},o=t.split("/")[3];n[o]=e._remoteSchema,r._remotes[t]=(0,m.createSyncDB)(t,e._factory,n,e._runtimeStatusUpdate),i.push(r._remotes[t].get(null,null,o))}),d.default.all(i).then(function(){R.log("[StoreDataObjects.loadRemote] loaded. Starting init"),(0,l.default)(r._remotes).forEach(function(e){var t=e.split("/")[3];a.push(r._remotes[e].get(null,null,t))}),d.default.all(a).then(function(t){t.forEach(function(t){(0,l.default)(t).forEach(function(i){R.log("[StoreDataObjects.loadRemote] loaded remote ",t);var a=e._getTypeOfObject(t[i].isReporter);r._storeDataObject||(r._storeDataObject={}),r._storeDataObject.hasOwnProperty(a)||(r._storeDataObject[a]={});var s=[];s.push(r._sync(i,t[i].data.backupRevision,!0,i.split("/")[3]).then(function(e){r._storeDataObject[a][i]=e,R.log("[StoreDataObjects.loadRemote] storeDataObject updated: ",r._storeDataObject)})),d.default.all(s).then(function(){n(r._storeDataObject)}),setTimeout(function(){r._remotes[i].disconnect().then(function(){R.log("[DataObjectStorage.loadRemote] disconnected ")},function(e){R.error("[DataObjectStorage.sync] Error synching with remote storage"),o(e)})},1e3)})})},function(e){o(e)})})},function(e){o(e)})})}},{key:"set",value:function(e){var t=this;return new d.default(function(r,n){var o=t._storeDataObject?t._storeDataObject:{},i=t._getTypeOfObject(e.isReporter);o.hasOwnProperty(i)||(o[i]={}),o[i].hasOwnProperty(e.url)||(o[i][e.url]={},o[i][e.url].subscriptions=[],o[i][e.url].subscriberUsers=[],o[i][e.url].childrenObjects={},o[i][e.url].data={}),(0,u.default)(o[i][e.url],e),delete o[i][e.url].subscriberUser,delete o[i][e.url].subscriberHyperty,o[i][e.url].backup=!!e.hasOwnProperty("backup")&&e.backup,e.subscriberHyperty&&!e.isReporter&&t._updateToArray(o[i],e.url,"subscriptions",e.subscriberHyperty),e.subscriberUser&&o[i][e.url].subscriberUsers.indexOf(e.subscriberUser)&&t._updateToArray(o[i],e.url,"subscriberUsers",e.subscriberUser),t._storeDataObject=o;var a=!!e.hasOwnProperty("backup")&&e.backup,s=a?e.url:t._table,c=a?s.split("/")[3]:t._table;if(a&&!t._remotes[s]){var l={};l[c]=t._remoteSchema,t._remotes[s]=(0,m.createSyncDB)(s,t._factory,l,t._runtimeStatusUpdate)}a&&t._storageManager.set(e.url,0,e.url,"remotes");var f=a?t._remotes[s]:t._storageManager;if(e.isReporter&&a){var d={table:c};f.connect(d).then(function(){f.set(s,0,o[i][e.url],c).then(function(){r(o[i][e.url])})},function(t){R.error("[DataObjectStorage.set] failed to connect with remote storage: ",t," trying again..."),f.connect(d).then(function(){f.set(s,1,o[i][e.url],c),r(o[i][e.url])},function(t){R.error("[DataObjectStorage.set] failed to connect with remote storage: ",t),r(o[i][e.url])})})}else f.set(s,1,o,c).then(function(){r(o[i][e.url])})})}},{key:"saveData",value:function(e,t,r,n,o){var i=this._storeDataObject,s=this._getTypeOfObject(e);if(!i||!i[s]||!i[s][t])return void R.log("[StoreDataObjects - save data] - not saved");if(R.log("[StoreDataObjects - saveData] - ",e,s,t,r,n),i[s][t].hasOwnProperty("data")||(i[s][t].data={}),r){var u=void 0;u="object"===(void 0===n?"undefined":(0,a.default)(n))?(0,_.deepClone)(n):n,(0,_.assign)(i[s][t].data,r,u)}else i[s][t].data=(0,_.deepClone)(n)||{};this._storeDataObject=i;var c=i[s][t].backup?i[s][t].url:"syncherManager:ObjectURLs",l=i[s][t].backup?this._remotes[c]:this._storageManager,f=i[s][t].backup?c.split("/")[3]:this._table,d=i[s][t].backup?i[s][t]:i;l.set(c,1,d,f,o).then(function(){return i[s][t]},function(e){return i[s][t]})}},{key:"saveChildrens",value:function(e,t,r,n){var o=this._storeDataObject,i=this._getTypeOfObject(e);if(!o||!o[i]||!o[i][t])return void R.log("[StoreDataObjects - save childrens] - not saved");o[i][t].hasOwnProperty("childrens")||(o[i][t].childrenObjects={}),r?(0,_.assign)(o[i][t].childrenObjects,r,(0,_.deepClone)(n)):o[i][t].childrenObjects=(0,_.deepClone)(n)||{},this._storeDataObject=o;var a=o[i][t].backup?o[i][t].url:"syncherManager:ObjectURLs",s=o[i][t].backup?this._remotes[a]:this._storageManager,u=o[i][t].backup?a.split("/")[3]:this._table,c=o[i][t].backup?o[i][t]:o;s.set(a,1,c,u).then(function(){return o[i][t]})}},{key:"update",value:function(e,t,r,n,o){var i=this._storeDataObject,a=this._getTypeOfObject(e);if(!i||!i[a]||!i[a][t])return void R.log("[StoreDataObjects - update] - not saved");if(R.log("[StoreDataObjects - update] - ",e,a,t,r,n),i[a]&&i[a][t]&&t&&r&&n){if("subscriptions"===r||"subscriberUsers"===r){var s=!0;"subscriptions"===r&&(s=!this._isOwner(i[a][t],n)),s&&this._updateToArray(i[a],t,r,n)}else i[a][t][r]=n;this._storeDataObject=i;var u=i[a][t].backup?i[a][t].url:"syncherManager:ObjectURLs",c=i[a][t].backup?this._remotes[u]:this._storageManager,l=i[a][t].backup?u.split("/")[3]:this._table,f=i[a][t].backup?i[a][t]:i;c.set(u,1,f,l,o).then(function(){return i[a][t]})}}},{key:"delete",value:function(e,t,r,n){var o=this._storeDataObject,i=this._getTypeOfObject(e);if(!o||!o[i]||!o[i][t])return void R.log("[StoreDataObjects - delete] - not saved");if(o[i]&&o[i][t]&&t&&r&&n){"subscriptions"===r||"subscriberUsers"===r?this._removeFromArray(o[i],t,r,n):delete o[i][t][r],this._storeDataObject=o;var a=o[i][t].backup?o[i][t].url:"syncherManager:ObjectURLs",s=o[i][t].backup?this._remotes[a]:this._storageManager,u=o[i][t].backup?a.split("/")[3]:this._table,c=o[i][t].backup?o[i][t]:o;return s.set(a,1,c,u),o[i][t]}}},{key:"deleteResource",value:function(e){var t=this;return new d.default(function(r,n){if(e){R.info("[DataObjectStorage.deleteResource] deleting: ",e);var o=void 0,i=void 0,a=void 0;return t._storeDataObject.hasOwnProperty("observers")&&t._storeDataObject.observers.hasOwnProperty(e)&&(o=!!t._storeDataObject.observers[e].backup,i=o?t._storeDataObject.observers[e].url:"syncherManager:ObjectURLs",a=o?t._remotes[i]:t._storageManager,delete t._storeDataObject.observers[e]),t._storeDataObject.hasOwnProperty("reporters")&&t._storeDataObject.reporters.hasOwnProperty(e)&&(o=!!t._storeDataObject.reporters[e].backup,i=o?t._storeDataObject.reporters[e].url:"syncherManager:ObjectURLs",a=o?t._remotes[i]:t._storageManager,delete t._storeDataObject.reporters[e]),o&&a?a.delete().then(function(){delete t._remotes[i],t._storageManager.delete(e,null,"remotes")}):a.set(i,1,t._storeDataObject),r()}n(new Error("[StoreDataObjects] - Can't delete this "+e))})}},{key:"getAll",value:function(){var e=this,t=this;return new d.default(function(r,n){t._storeDataObject=e._storageManager.get("syncherManager:ObjectURLs").then(function(e){t._storeDataObject=e,t.loadRemote(!0).then(function(e){r(t._storeDataObject)})})})}},{key:"sync",value:function(e,t){var r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=this;if(n._remotes[e]){var o=e.split("/")[3];if(t)return n._sync(e,t,r,o);n._remotes[e].getBackupRevision(e).then(function(t){return n._sync(e,t,r,o)})}else{var i="[DataObjectStorage.sync] Info: "+e+" is not synched with remote storage.";R.info(i)}}},{key:"_sync",value:function(e,t,r,n){var o=this;return new d.default(function(i,a){var s={table:n,observer:!1,syncedRevision:t+3};o._remotes[e].connect(s).then(function(){o._remotes[e].get(null,null,n).then(function(t){R.info("[DataObjectStorage.sync] returning synched DO: ",t),r&&setTimeout(function(){o._remotes[e].disconnect().then(function(){R.info("[DataObjectStorage.sync] disconnected ")},function(e){R.error("[DataObjectStorage.sync] Error synching with remote storage"),a(e)})},2e3),i(t[e])},function(e){R.error("[DataObjectStorage.sync] Error retrieving stored data object"),a(e)})},function(t){R.error("[DataObjectStorage.sync] Error connecting to remote storage ",t),o._remotes[e].get(null,null,n).then(function(t){R.info("[DataObjectStorage.sync] returning synched DO: ",t),i(t[e])})})})}},{key:"stopSync",value:function(e){this._remotes[e]&&this._remotes[e].disconnect()}},{key:"getDataObject",value:function(e){var t=this;return new d.default(function(r,n){var o=t._storeDataObject,i=o.hasOwnProperty("observers")?o.observers:{},a=o.hasOwnProperty("reporters")?o.reporters:{},s=(0,l.default)(a).find(function(t){return t===e}),u=(0,l.default)(i).find(function(t){return t===e}),c=void 0;return u&&(c=o.observers[u]),s&&(c=o.reporters[s]),R.info("[StoreDataObjects - getDataObject] - for observer: ",u),R.info("[StoreDataObjects - getDataObject] - for reporters: ",s),R.info("[StoreDataObjects - getDataObject] - resolve: ",c),c?r(c):n("No dataObject was found")})}},{key:"getResourcesByCriteria",value:function(e,t){var r=this;return new d.default(function(n){var o=r._getTypeOfObject(t);r.getAll(t).then(function(t){if(!t)return R.log("[DataObjectsStorage.getResourcesByCriteria] don't have stored data objects"),n(null);if(e.body&&e.body.hasOwnProperty("resume")&&!e.body.resume)return n(null);var i=[],a=r._hasSubscription(t[o],e.from),s=r._searchOwner(t[o],e.from),u=r._checkProtostubResume(t,e);if(R.log("[StoredDataObjects - getResourcesByCriteria]:",t,e,a,s),!(e.hasOwnProperty("from")&&a||s||u))return n(null);var c=void 0;c=s?r._getResourcesByOwner(t[o],e.from):r._getResourcesBySubscription(t[o],e.from);var f=[];e.body&&e.body.identity&&(f=r._getResourcesByIdentity(t[o],e.body.identity));var d=[];e.body&&e.body.schema&&(d=r._getResourcesBySchema(t[o],e.body.schema));var p=[];if(e.body&&e.body.value){var y=e.body.value;delete y.data,p=r._getResourcesByMetadata(t[o],y)}var h=[];if(e.body&&e.body.value&&e.body.value.data&&(h=r._getResourcesByData(t[o],e.body.value.data)),i=r._intersection(c,f,d,h,p),0==i.length&&u&&"observers"==o&&e.from.split("protostub").length>0){var v=t[o],g=(0,_.divideURL)(e.from).domain;(0,l.default)(v).filter(function(e){var t=v[e].subscriptions;t.forEach(function(t){(0,_.divideURL)(t).domain==g&&i.push(e)})})}var b={};i.forEach(function(e){var r=t[o][e];return b[e]=r,b}),R.log("[Store Data Objects] - ",b),n(b)})})}},{key:"_getResourcesByIdentity",value:function(e,t){return e?(0,l.default)(e).filter(function(r){return e[r].subscriberUsers.filter(function(e){return e===t}).length}):[]}},{key:"_getResourcesByOwner",value:function(e,t){return e?(0,l.default)(e).filter(function(r){return e[r].reporter===t}):[]}},{key:"_getResourcesBySubscription",value:function(e,t){return e?(0,l.default)(e).filter(function(r){return e[r].subscriptions.filter(function(e){return e===t}).length}):[]}},{key:"_getResourcesBySchema",value:function(e,t){return(0,l.default)(e).filter(function(r){var n=e[r];return(0,l.default)(n).filter(function(e){return"schema"===e&&n[e]===t}).length})}},{key:"_getResourcesByMetadata",value:function(e,t){return t?(0,l.default)(e).filter(function(r){var n=e[r];return(0,l.default)(n).filter(function(e){return(0,l.default)(t).filter(function(r){return e===r&&n[e]===t[r]}).length}).length}):[]}},{key:"_getResourcesByData",value:function(e,t){return t?(0,l.default)(e).filter(function(r){var n=e[r].hasOwnProperty("data")?e[r].data:{};return(0,l.default)(n).filter(function(e){return(0,l.default)(t).filter(function(r){return e===r&&n[e]===t[r]}).length}).length}):[]}},{key:"_hasSubscription",value:function(e,t){return!!e&&(0,l.default)(e).filter(function(r){return e[r].subscriptions.filter(function(e){return e===t}).length}).length>0}},{key:"_searchOwner",value:function(e,t){return!!e&&(0,l.default)(e).filter(function(r){return e[r].reporter===t}).length>0}},{key:"_checkProtostubResume",value:function(e,t){if(!e)return!1;if(t.hasOwnProperty("body")&&t.body.hasOwnProperty("value")&&t.body.value.hasOwnProperty("reporter")){var r=t.body.value.reporter;if(e.hasOwnProperty("reporters")){var n=e.reporters;return(0,l.default)(n).filter(function(e){return n[e].reporter===r}).length>0}return!1}if(e.hasOwnProperty("observers")){var o=e.observers,i=(0,_.divideURL)(t.from).domain;return(0,l.default)(o).filter(function(e){var t=o[e].subscriptions,r=!1;if(t.forEach(function(e){(0,_.divideURL)(e).domain==i&&(r=!0)}),r)return!0}).length>0}}},{key:"_isOwner",value:function(e,t){return!!e&&e.reporter===t}},{key:"_intersection",value:function(){var e=(0,o.default)(arguments),t=e.reduce(function(e,t){return e.concat(t)}).filter(function(e,t,r){return r.indexOf(e)===t});return R.log("DataObjectsStorage._intersection] Result an unique array of strings: ",t),t}},{key:"_updateToArray",value:function(e,t,r,n){R.log("[DataObjectsStorage] - _updateToArray: ",e,t,r,n),-1===e[t][r].indexOf(n)&&e[t][r].push(n)}},{key:"_removeFromArray",value:function(e,t,r,n){var o=e[t][r].indexOf(n);-1===o&&e[t][r].splice(o,1)}},{key:"_hasValue",value:function(e,t,r){return e.hasOwnProperty(t)&&e[t]===r}},{key:"_getTypeOfObject",value:function(e){return e?"reporters":"observers"}}]),DataObjectsStorage}();t.default=O,e.exports=t.default},function(e,t,r){r(80),r(533),e.exports=r(11).Array.from},function(e,t,r){"use strict";var n=r(69),o=r(26),i=r(76),a=r(197),s=r(198),u=r(133),c=r(534),l=r(143);o(o.S+o.F*!r(203)(function(e){Array.from(e)}),"Array",{from:function(e){var t,r,o,f,d=i(e),p="function"==typeof this?this:Array,y=arguments.length,h=y>1?arguments[1]:void 0,v=void 0!==h,g=0,b=l(d);if(v&&(h=n(h,y>2?arguments[2]:void 0,2)),void 0==b||p==Array&&s(b))for(t=u(d.length),r=new p(t);t>g;g++)c(r,g,v?h(d[g],g):d[g]);else for(f=b.call(d),r=new p;!(o=f.next()).done;g++)c(r,g,v?a(f,h,[o.value,g],!0):o.value);return r.length=g,r}})},function(e,t,r){"use strict";var n=r(44),o=r(79);e.exports=function(e,t,r){t in e?n.f(e,t,o(0,r)):e[t]=r}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(16),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(4),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(f),p=r(6),y=r(536),h=_interopRequireDefault(y),v=d.getLogger("HypertyResourcesStorage"),g=function(){function HypertyResourcesStorage(e,t,r,n){if((0,u.default)(this,HypertyResourcesStorage),!r)throw new Error("[HypertyResourcesStorage constructor] mandatory storageManager parameter missing");if(!e)throw new Error("[HypertyResourcesStorage constructor] mandatory runtimeURL parameter missing");if(!t)throw new Error("[HypertyResourcesStorage constructor] mandatory bus parameter missing");var o=this;o._bus=t,o._storageLimit=.9,o._url=e+"/storage",o._storageManager=r,o.promiseQueue=new h.default,o._hypertyResources=n,t.addListener(o._url,function(e){switch(v.info("[HypertyResourcesStorage] Message RCV: ",e),e.type){case"create":o._onCreate(e);break;case"read":o._onRead(e);break;case"delete":o._onDelete(e)}})}return(0,l.default)(HypertyResourcesStorage,[{key:"checkStorageQuota",value:function(){var e=this;return new a.default(function(t,r){if(e._availableQuota&&e._usage)return t((0,p.availableSpace)(e._usage,e._availableQuota));navigator&&navigator.storage.estimate().then(function(r){e._availableQuota=r.quota,e._usage=r.usage,t((0,p.availableSpace)(e._usage,e._availableQuota))}).catch(function(e){v.error("[HypertyResourcesStorage] CheckStorageQuota error: ",e),r(e)})})}},{key:"_onCreate",value:function(e){var t=this;if(!e.body||!e.body.value)throw new Error("[HypertyResourcesStorage._onCreate] mandatory message body value missing: ",e);var r=e.body.value,n=r.contentURL,o="";if(n){var i=n[0],a=i.substr(i.lastIndexOf("/")+1);o=t._url+"/"+a}else n=[],o=t._url+"/"+(0,p.generateGUID)();t._hypertyResources.hasOwnProperty(o)||(n.push(o),r.contentURL=n),this._hypertyResources[o]=r,this.promiseQueue.add(this._toSave(o,e,r))}},{key:"_toSave",value:function(e,t,r){var n=this;return new a.default(function(o,i){var a=function(r){var o={from:t.to,to:t.from,id:t.id,type:"response",body:{value:e,code:500,description:r}};return n._bus.postMessage(o),i(r)};n.checkStorageQuota().then(function(e){if(r.size>e.quota){var t="The storage do not have space to store that resource";throw a(t),Error(t)}var o=e.quota,i=e.usage+r.size;return!(e.percent>=n._storageLimit||i>o)||n._getOlderResources(r.size)}).then(function(){return n._storageManager.set(e,1,r)}).then(function(){var r={from:t.to,to:t.from,id:t.id,type:"response",body:{value:e,code:200}};return n._bus.postMessage(r),v.log("Success"),o()}).catch(a)})}},{key:"_getOlderResources",value:function(e){var t=this;return new a.default(function(r,n){t._storageManager.get().then(function(i){var s=(0,o.default)(i),u=0,c=s.sort(function(e,t){return i[e].created<i[t].created}).reduce(function(r,n){var o=t._hypertyResources[n];return v.log("[HypertyResourcesStorage] _getOlderResources: ",u,e,n,t._availableQuota),u<=e&&(u+=o.size,r.push(n)),r},[]),l=c.map(function(e){return t._storageManager.delete(e)});a.default.all(l).then(function(){r(!0)}).catch(function(e){n(e)})})})}},{key:"_onRead",value:function(e){var t=this;if(!e.body||!e.body.resource)throw new Error("[HypertyResourcesStorage._onRead] mandatory message body resource missing: ",e);var r=e.body.resource,n={from:e.to,to:e.from,id:e.id,type:"response",body:{}};v.info("[HypertyResourcesStorage._onRead] get resourceURL:",r),this._storageManager.get("resourceURL",r).then(function(e){v.info("[HypertyResourcesStorage._onRead] found content:",e),e?"file"===e.resourceType?t._onReadFile(n,e):(n.body.code=200,n.body.p2p=!0,n.body.value=e,t._bus.postMessage(n)):(n.body.code=404,n.body.desc="Content Not Found for "+r,t._bus.postMessage(n))})}},{key:"_onReadFile",value:function(e,t){var r=this,n=new FileReader;if(n.onload=function(n){v.info("[FileHypertyResource.init] file loaded ",n),e.body.code=200,e.body.p2p=!0,e.body.value=(0,p.deepClone)(t),e.body.value.content=n.target.result,r._bus.postMessage(e)},t.mimetype.includes("text/"))n.readAsText(t.content);else{var o=t.content,i=void 0;i=Array.isArray(o)?new Blob(o,{type:t.mimetype}):new Blob([o],{type:t.mimetype}),n.readAsArrayBuffer(i)}}},{key:"_onDelete",value:function(e){var t=this;if(!e.body)throw new Error("[HypertyResourcesStorage._onDelete] mandatory message body missing: ",e);if(e.body.resource)delete t._hypertyResources[e.body.resource];else{if(!e.body.resources)throw new Error("[HypertyResourcesStorage._onDelete] mandatory resource missing: ",e);e.body.resources.forEach(function(e){delete t._hypertyResources[e]})}t._storageManager.delete("resourceURL",e.body.resource).then(function(){var r={from:e.to,to:e.from,id:e.id,type:"response",body:{code:200}};t._bus.postMessage(r)}).catch(function(r){var n={from:e.to,to:e.from,id:e.id,type:"response",body:{code:400,description:r}};t._bus.postMessage(n)})}}]),HypertyResourcesStorage}();t.default=g,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(537),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=function(){function PromiseQueue(e){(0,u.default)(this,PromiseQueue),this.flushing=!1,this.Promise=a.default,this.concurrency="number"!=typeof e?1:e,this.promises=[],this.queue=[],this.isProcessing=!1}return(0,l.default)(PromiseQueue,[{key:"done",value:function(e){this.callback=e}},{key:"add",value:function(e){var t=this;if(this.queue.push(e),!this.isProcessing)return this.queue.reduce(function(e,t){return e.then(function(e){return t.then(function(t){return[].concat((0,o.default)(e),[t])})})},a.default.resolve([])).then(function(e){t.isProcessing=!1})}}]),PromiseQueue}();t.default=f,e.exports=t.default},function(e,t,r){"use strict";t.__esModule=!0;var n=r(219),o=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return(0,o.default)(e)}},function(e,t,r){"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(220),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(16),u=_interopRequireDefault(s),c=r(1),l=_interopRequireDefault(c),f=r(2),d=_interopRequireDefault(f),p=r(4),y=_interopRequireWildcard(p),h=r(6),v=r(104),g=_interopRequireDefault(v),b=r(542),_=_interopRequireDefault(b),m=r(543),R=_interopRequireDefault(m),O=r(105),w=_interopRequireWildcard(O),k=y.getLogger("SyncherManager"),S=function(){function SyncherManager(e,t,r,n,o,i,a,s){if((0,l.default)(this,SyncherManager),!e)throw new Error("[Syncher Manager] - needs the runtimeURL parameter");if(!t)throw new Error("[Syncher Manager] - needs the MessageBus instance");if(!r)throw new Error("[Syncher Manager] - needs the Registry instance");if(!n)throw new Error("[Syncher Manager] - needs the RuntimeCatalogue instance");if(!o)throw new Error("[Syncher Manager] - need the storageManager instance");var u=this;u._bus=t,u._registry=r,u._catalog=n,u._storageManager=o,u._identityModule=s,u.runtimeURL=e,u._url=e+"/sm",u._objectURL=e+"/object-allocation",u._reporters={},u._observers={},u._dataObjectsStorage=a,u._domain=(0,h.divideURL)(e).domain,u._allocator=i||g.default.instance,k.log("[SyncherManager - AddressAllocation] - ",u._allocator),t.addListener(u._url,function(e){switch(k.info("[SyncherManager] RCV: ",e),e.type){case"create":u._onCreate(e);break;case"delete":u._onDelete(e);break;case"subscribe":u._onLocalSubscribe(e);break;case"unsubscribe":u._onLocalUnSubscribe(e);break;case"read":u._onRead(e);break;case"execute":u._onExecute(e)}})}return(0,d.default)(SyncherManager,[{key:"_onExecute",value:function(e){var t=this,r={type:"response",from:e.to,to:e.from,id:e.id};if(k.info("[SyncherManager.onExecute] new message",e),e.hasOwnProperty("body")&&e.body.hasOwnProperty("method")&&e.body.hasOwnProperty("params")){switch(e.body.method){case"sync":t._dataObjectsStorage.sync(e.body.params[0],e.body.params[1],!1);break;case"stopSync":t._dataObjectsStorage.stopSync(e.body.params[0])}r.body={code:200},t._bus.postMessage(r)}else r.body={code:400,desc:"missing body or body method / params mandatory fields"},k.error("[SyncherManager.onExecute] error. Missing body or body method / params mandatory fields",e),t._bus.postMessage(r)}},{key:"_onRead",value:function(e){var t=this,r={type:"response",from:e.to,to:e.from,id:e.id};k.info("[SyncherManager.onRead] new message",e),e.hasOwnProperty("body")&&e.body.hasOwnProperty("resource")?t._dataObjectsStorage.sync(e.body.resource,criteria.backupRevision,!0).then(function(e){r.body={code:200,value:e},k.info("[SyncherManager.onRead] found object: ",e),t._bus.postMessage(r)},function(e){r.body={code:400,desc:e},k.error("[SyncherManager.onRead] error: ",e),t._bus.postMessage(r)}):(r.body={code:400,desc:"missing body or body resource mandatory fields"},k.error("[SyncherManager.onRead] error. Missing body or body resource mandatory fields",e),t._bus.postMessage(r))}},{key:"_onCreate",value:function(e){var t=this,r=e.from,n=e.to,i=this;e.body.attribute?this._storeChildrens(e):!e.body.hasOwnProperty("resume")||e.body.hasOwnProperty("resume")&&!e.body.resume?e.body.authorise?(this._authorise(e),k.info("[SyncherManager.onCreate - invite observers]",e)):(k.info("[SyncherManager.onCreate - Create New Object]",e),this._newCreate(e)):this._dataObjectsStorage.getResourcesByCriteria(e,!0).then(function(s){if(k.info("[SyncherManager - Create Resumed] - ResourcesByCriteria | Message: ",e," result: ",s),s&&(0,u.default)(s).length>0){var c=[];(0,u.default)(s).forEach(function(t){c.push(i._resumeCreate(e,s[t]))}),a.default.all(c).then(function(i){k.log("[SyncherManager - Create Resumed]",i);var a=(0,o.default)(i).filter(function(e){return!1!==e});k.info("[SyncherManager.onCreate] returning resumed objects : ",a),t._bus.postMessage({id:e.id,type:"response",from:n,to:r,body:{code:200,value:(0,h.deepClone)(a)}})})}else{var l={};l.id=e.id,l.from=e.to,l.to=e.from,l.type="response",l.body={code:404,desc:"No data objects reporters to be resumed"},t._bus.postMessage(l)}})}},{key:"_storeChildrens",value:function(e){var t=this,r=e.body.resource,n=e.body.attribute;"childrenObjects"===n?t._dataObjectsStorage.saveChildrens(!1,r,void 0,e.body.value):t._dataObjectsStorage.saveChildrens(!0,r,n,e.body.value)}},{key:"_newCreate",value:function(e){var t=this,r=this,n=e.from,o=(0,h.divideURL)(e.from).domain;r._registry.isInterworkingProtoStub(e.from)&&(o=(0,h.divideURL)(r.runtimeURL).domain);var i=!e.body.value.hasOwnProperty("domain_registration")||e.body.value.domain_registration;r._catalog.getDataSchemaDescriptor(e.body.schema).then(function(a){var s=a.sourcePackage.sourceCode.properties,u=s.scheme?s.scheme.constant:"resource",c=s.children?s.children.constant:[],l={name:e.body.value.name,schema:e.body.value.schema,reporter:e.body.value.reporter,resources:e.body.value.resources},f=e.body.value.resource;r._allocator.create(o,1,l,u,f).then(function(o){var a=(0,h.deepClone)(e.body.value);a.url=o.address[0],a.authorise=e.body.authorise,a.childrens=c,delete a.data,k.log("[SyncherManager._newCreate] ALLOCATOR CREATE:",o);var s=a.url+"/subscription";k.log("[SyncherManager._newCreate] Subscription URL",s),k.info("[SyncherManager._newCreate] Register Object: ",a),r._registry.registerDataObject(a).then(function(o){k.log("[SyncherManager._newCreate] DataObject successfully registered",o);var u=void 0;u=t._reporters[a.url]?t._reporters[a.url]:new _.default(r,n,a.url),k.log("[SyncherManager - new Create] - ",e);var l=void 0;l=e.body.hasOwnProperty("identity")&&e.body.identity.userProfile&&e.body.identity.userProfile.userURL?e.body.identity.userProfile.userURL:r._registry.getHypertyOwner(e.from);var f=(0,h.deepClone)(a);f.subscriberUser=l,f.isReporter=!0,e.body.hasOwnProperty("store")&&e.body.store&&(u.isToSaveData=!0,f.isToSaveData=!0,e.body.value.data&&(f.data=(0,h.deepClone)(e.body.value.data))),r._dataObjectsStorage.set(f).then(function(t){var o={id:e.id,type:"response",from:e.to,to:n,body:{code:200,resource:a.url,childrenResources:c}};i?u.forwardSubscribe([a.url,s]).then(function(){u.addChildrens().then(function(){r._reporters[a.url]=u,r._bus.postMessage(o)})}):u.addChildrens().then(function(){r._reporters[a.url]=u,r._bus.postMessage(o)})},function(e){k.error(e)})},function(e){k.error(e)})})}).catch(function(t){var o={id:e.id,type:"response",from:e.to,to:n,body:{code:500,desc:t}};r._bus.postMessage(o)})}},{key:"_resumeCreate",value:function(e,t){var r=this,n=this;return new a.default(function(o){var i=e.from,a=t.schema,s=t.url,u=!t.hasOwnProperty("domain_registration")||t.domain_registration;t.data;k.log("[SyncherManager] - resume create",e,t),n._catalog.getDataSchemaDescriptor(a).then(function(a){var c=a.sourcePackage.sourceCode.properties,l=(c.scheme&&c.scheme.constant,c.children?c.children.constant:[]);k.log("[SyncherManager] - getDataSchemaDescriptor: ",a,l);var f=void 0;f=r._reporters[s]?r._reporters[s]:new _.default(n,i,s),f.isToSaveData=t.isToSaveData,u?f.forwardSubscribe([t.url]).then(function(){k.log("[SyncherManager._resumeCreate] resumingReporterSubscription ",t),n._resumeReporterSubscriptions(e,t,f,l,u).then(function(e){k.log("[SyncherManager._resumeCreate] resolved resumed object ",e),o(e)})}):o(n._resumeReporterSubscriptions(e,t,f,l,u))}).catch(function(e){k.error("[SyncherManager - resume create] - fail on getDataSchemaDescriptor: ",e),o(!1)})})}},{key:"_resumeReporterSubscriptions",value:function(e,t,r,n,o){var i=this,s=t.url,u=(0,h.deepClone)(e.body.value);return u.url=t.url,u.expires=t.expires,u.domain_registration=o,delete u.data,new a.default(function(e){r.addChildrens().then(function(){return r.resumeSubscriptions(t.subscriptions),i._reporters[s]=r,k.info("[SyncherManager - resume create] - resolved resumed: ",t),i._decryptChildrens(t,n)}).then(function(t){k.info("[SyncherManager._resumeReporterSubscriptions] Register Object: ",u),i._registry.registerDataObject(u).then(function(r){k.log("[SyncherManager._resumeReporterSubscriptions] DataObject registration successfully updated",r),k.log("[SyncherManager._resumeReporterSubscriptions] resolving object",t),e(t)})}).catch(function(t){k.error("[SyncherManager - resume create] - fail on addChildrens: ",t),e(!1)})})}},{key:"_decryptChildrens",value:function(e,t){var r=(0,h.deepClone)(e);return new a.default(function(e){if(t){0===(0,u.default)(r.childrenObjects).length&&e(r),t.forEach(function(t){var n=r.childrenObjects;k.log("[SyncherManager._decryptChildrens] dataObjectChilds to decrypt ",n);var o=[];(0,u.default)(n).forEach(function(e){var t=n[e],i=e.split("#")[0];if("string"==typeof t.value){k.log("[SyncherManager._decryptChildrens] createdBy ",i," object: ",t.value);var a=w.default.decryptDataObject(JSON.parse(t.value),r.url);o.push(a)}}),a.default.all(o).then(function(t){k.log("[SyncherManager._decryptChildrens] returning decrypted ",t),t.forEach(function(e){var t=e.value.url;r.childrenObjects[t].value=e.value}),k.log("[SyncherManager._decryptChildrens] storedObject ",r),e(r)}).catch(function(e){k.warn("[SyncherManager._decryptChildrens] failed : ",e)})})}else e(r)})}},{key:"_authorise",value:function(e){var t=this;if(!e.body.resource)throw new Error("[SyncherManager._authorise] invitation request without data object url:",e);var r=e.body.resource+"/subscription",n=!!e.body.p2p&&e.body.p2p;k.log("[SyncherManager -  authorise] - ",e),e.body.authorise&&e.body.authorise.forEach(function(o){t._bus.postMessage({type:"create",from:r,to:o,body:{p2p:n,identity:e.body.identity,source:e.from,value:e.body.value,schema:e.body.schema}},function(r){var n={from:e.to,to:e.from,id:e.id,type:r.type,body:r.body};t._bus.postMessage(n)})})}},{key:"_onDelete",value:function(e){var t=this,r=e.body.resource,n=t._reporters[r];n&&(n.delete(),this._dataObjectsStorage.deleteResource(r).then(function(n){k.log("[SyncherManager - onDelete] - deleteResource: ",n),t._registry.unregisterDataObject(r),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}})}))}},{key:"_onLocalSubscribe",value:function(e){var t=this;this._dataObjectsStorage.getResourcesByCriteria(e,!1).then(function(r){if(k.info("[SyncherManager - Subscribe] - ResourcesByCriteria | Message: ",e," result: ",r),r&&(0,u.default)(r).length>0){var n=[];(0,u.default)(r).forEach(function(o){k.log("[SyncherManager - resume Subscribe] - reuse current object url: ",r[o]),n.push(t._resumeSubscription(e,r[o]))}),a.default.all(n).then(function(r){k.log("[SyncherManager - Observers Resumed]",r);var n=(0,o.default)(r).filter(function(e){return!1!==e});t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:n}})})}else if(e.body.schema&&e.body.resource)k.log("[SyncherManager.onLocalSubscribe - new Subscribe] - ",e.body.schema,e.body.resource),t._newSubscription(e);else{var i={};i.id=e.id,i.from=e.to,i.to=e.from,i.type="response",i.body={code:404,desc:"No data objects observers to be resumed"},t._bus.postMessage(i)}})}},{key:"_newSubscription",value:function(e){var t=this,r=e.body.resource,n=e.from,o=(0,h.divideURL)(r).domain,i=!e.body.hasOwnProperty("domain_subscription")||e.body.domain_subscription,a=r+"/children/";t._catalog.getDataSchemaDescriptor(e.body.schema).then(function(s){var u=s.sourcePackage.sourceCode.properties,c=u.children?u.children.constant:[],l=[];if(l.push(r+"/changes"),l.push(a),i){var f={type:"subscribe",from:t._url,to:"domain://msg-node."+o+"/sm",body:{identity:e.body.identity,resources:l,source:n}};t._bus.postMessage(f,function(o){k.log("node-subscribe-response(observer): ",o),200===o.body.code?t._newReporterSubscribe(e,n,r,c):t._bus.postMessage({id:e.id,type:"response",from:e.to,to:n,body:o.body})})}else t._newReporterSubscribe(e,n,r,c)})}},{key:"_newReporterSubscribe",value:function(e,t,r,n){var o=this,i=this,a=r+"/subscription";i._bus.postMessage({id:e.id,type:"response",from:e.to,to:t,body:{code:100,childrenResources:n,schema:e.body.schema,resource:e.body.resource}});var s={type:"subscribe",from:i._url,to:a,body:{identity:e.body.identity,subscriber:t}};e.body.hasOwnProperty("mutual")&&(s.body.mutual=e.body.mutual),k.log("[SyncherManager._newSubscription]",s,e),i._bus.postMessage(s,function(a){if(k.log("reporter-subscribe-response-new: ",a),200===a.body.code){k.log("[SyncherManager._newSubscription] - observers: ",i._observers,r,i._observers[r]);var s=i._observers[r];s||(s=new R.default(i,r),k.log("[SyncherManager._newSubscription] - observers: create new ObserverObject: ",s),i._observers[r]=s,s.addSubscription(t),s.addChildrens());var u=!1,c=void 0;e.body.hasOwnProperty("identity")&&e.body.identity.userProfile&&e.body.identity.userProfile.userURL?(c=e.body.identity.userProfile.userURL,c.includes("user://")||(u=!0)):(c=i._registry.getHypertyOwner(e.from))||(u=!0);var l=(0,h.deepClone)(a.body.value);delete l.data,delete l.childrenObjects,l.childrens=n,l.subscriberUser=c,l.isReporter=!1,l.subscriberHyperty=t,u||(i._dataObjectsStorage.set(l),(l.hasOwnProperty("store")&&l.store||l.hasOwnProperty("isToSaveData")&&l.isToSaveData)&&(s.isToSaveData=!0,i._dataObjectsStorage.update(!1,r,"isToSaveData",!0),i._dataObjectsStorage.saveData(!1,r,null,a.body.value.data))),a.id=e.id,a.from=i._url,a.to=t,a.body.schema=e.body.schema,a.body.resource=e.body.resource,e.body.hasOwnProperty("mutual")&&(a.body.mutual=e.body.mutual),k.log("[subscribe] - new subscription: ",e,a,s),o._bus.postMessage(a)}})}},{key:"_resumeSubscription",value:function(e,t){var r=this;return new a.default(function(n){var o=t.url,i=t.schema,a=e.from,s=o+"/children/";k.log("[SyncherManager - ReuseSubscription] - objURL: ",o," - schema:",i),r._catalog.getDataSchemaDescriptor(i).then(function(n){var u=n.sourcePackage.sourceCode.properties,c=u.children?u.children.constant:[],l=[];l.push(o+"/changes"),l.push(s),r._bus.postMessage({id:e.id,type:"response",from:e.to,to:a,body:{code:100,childrenResources:c,schema:i,resource:o}});var f=r._observers[o];return f||(f=new R.default(r,o),f.isToSaveData=t.isToSaveData,r._observers[o]=f),f.addSubscription(a),f.addChildrens(),r._decryptChildrens(t,c)}).then(function(e){n(e)}).catch(function(e){k.error("[SyncherManager - resume subscription] - fail on getDataSchemaDescriptor: ",e),n(!1)})})}},{key:"_onLocalUnSubscribe",value:function(e){var t=this,r=(e.from,e.body.resource),n=t._observers[r];n&&(n.removeSubscription(e),t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}}),this._dataObjectsStorage.deleteResource(r),delete t._observers[r])}},{key:"url",get:function(){return this._url}}]),SyncherManager}();t.default=S,e.exports=t.default},function(e,t,r){r(540),e.exports=r(11).Object.values},function(e,t,r){var n=r(26),o=r(541)(!1);n(n.S,"Object",{values:function(e){return o(e)}})},function(e,t,r){var n=r(68),o=r(50),i=r(81).f;e.exports=function(e){return function(t){for(var r,a=o(t),s=n(a),u=s.length,c=0,l=[];u>c;)i.call(a,r=s[c++])&&l.push(e?[r,a[r]]:a[r]);return l}}},function(e,t,r){"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(35),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(16),u=_interopRequireDefault(s),c=r(1),l=_interopRequireDefault(c),f=r(2),d=_interopRequireDefault(f),p=r(4),y=_interopRequireWildcard(p),h=r(6),v=r(221),g=_interopRequireDefault(v),b=r(105),_=_interopRequireWildcard(b),m=y.getLogger("ReporterObject"),R=function(){function ReporterObject(e,t,r){(0,l.default)(this,ReporterObject);var n=this;n._parent=e,n._owner=t,n._url=r,n._bus=e._bus,n._domain=(0,h.divideURL)(r).domain,n._objSubscriptorURL=n._url+"/subscription",n._subscriptions={},n._childrens=[],n._childrenListeners=[],n._forwards={},n._isToSaveData=!1,n._allocateListeners()}return(0,d.default)(ReporterObject,[{key:"_allocateListeners",value:function(){var e=this,t=this;t._subscriptionListener=t._bus.addListener(t._objSubscriptorURL,function(e){switch(m.info("[SyncherManager.ReporterObject received ]",e),e.type){case"subscribe":t._onRemoteSubscribe(e);break;case"unsubscribe":t._onRemoteUnSubscribe(e);break;case"response":t._onRemoteResponse(e)}});var r=t._url+"/changes";t._changeListener=t._bus.addListener(r,function(n){if(m.info("[SyncherManager.ReporterObject ] SyncherManager-"+r+"-RCV: ",n),e._isToSaveData&&n.body.attribute){var o="backupRevision"!==n.body.attribute;m.log("[SyncherManager.ReporterObject ] SyncherManager - save data: ",n),t._parent._dataObjectsStorage.update(!0,t._url,"version",n.body.version,o),t._parent._dataObjectsStorage.update(!0,t._url,"lastModified",n.body.lastModified,o),t._parent._dataObjectsStorage.saveData(!0,t._url,n.body.attribute,n.body.value,o)}})}},{key:"_releaseListeners",value:function(){var e=this;e._subscriptionListener.remove(),e._changeListener.remove(),e._childrenListeners.forEach(function(e){e.remove()}),(0,u.default)(e._forwards).forEach(function(t){e.forwardUnSubscribe(t)}),(0,u.default)(e._subscriptions).forEach(function(t){e._subscriptions[t]._releaseListeners()})}},{key:"resumeSubscriptions",value:function(e){var t=this;e&&(0,u.default)(e).forEach(function(r){var n=e[r];m.log("[SyncherManager.ReporterObject] - resume subscriptions",t,n,t._childrens),t._subscriptions[n]||(t._subscriptions[n]=new g.default(t._bus,t._owner,t._url,!0))})}},{key:"forwardSubscribe",value:function(e){var t=this,r={type:"subscribe",from:t._parent._url,to:"domain://msg-node."+t._domain+"/sm",body:{resources:e,source:t._owner}};return new a.default(function(n,o){t._bus.postMessage(r,function(r){if(m.log("[SyncherManager.ReporterObject ]forward-subscribe-response(reporter): ",r),200===r.body.code){var i=t._bus.addForward(t._url,t._owner);t._forwards[e[0]]=i,n()}else o("Error on msg-node subscription: "+r.body.desc)})})}},{key:"forwardUnSubscribe",value:function(e){var t=this;t._forwards[e].remove(),delete t._forwards[e];var r={type:"unsubscribe",from:t._parent._url,to:"domain://msg-node."+t._domain+"/sm",body:{resources:[e],source:t._owner}};t._bus.postMessage(r)}},{key:"addChildrens",value:function(){var e=this,t=this;return new a.default(function(r,n){var i=t._url+"/children/";m.log("[SyncherManager.ReporterObject - addChildrens] - childrens: ",i);var a=[];a.push(i);var s={type:"subscribe",from:t._parent._url,to:"domain://msg-node."+t._domain+"/sm",body:{resources:a,source:t._owner}};t._bus.postMessage(s,function(i){m.log("[SyncherManager.ReporterObject ]node-subscribe-response(reporter):",i),200===i.body.code?(a.forEach(function(r){var n=t._bus.addListener(r,function(r){if(m.log("[SyncherManager.ReporterObject received]",r),"create"===r.type&&r.to.includes("children")&&e._isToSaveData){var n=(0,h.splitObjectURL)(r.to),i=n.url;r.body.hasOwnProperty("mutual")||(r.body.mutual=!0),"string"!=typeof r.body.value&&r.body.mutual?(m.log("[SyncherManager.ReporterObject] encrypting received data ",r.body.value),_.default.encryptDataObject(r.body.value,i).then(function(e){m.log("[SyncherManager.ReporterObject] encrypted data ",e),t._storeChildObject(r,(0,o.default)(e))}).catch(function(e){m.warn("[SyncherManager._decryptChildrens] failed : ",e," Storing unencrypted"),t._storeChildObject(r,r.body.value)})):t._storeChildObject(r,r.body.value)}});t._childrenListeners.push(n);var i=t._bus.addForward(r,t._owner);t._childrenListeners.push(i)}),r()):n("Error on msg-node subscription: "+i.body.desc)})})}},{key:"_storeChildObject",value:function(e,t){var r=this,n=(0,h.splitObjectURL)(e.to),o=n.url,i=n.resource,a=void 0,s=e.body.resource,u=i;a="heartbeat"===s?t:{identity:e.body.identity,value:t},s&&(u=s),r._parent._dataObjectsStorage.saveChildrens(!0,o,u,a)}},{key:"delete",value:function(){var e=this,t=(0,h.divideURL)(e._owner).domain;e._bus.postMessage({type:"delete",from:e._objSubscriptorURL,to:e._url+"/changes"}),e._bus.postMessage({type:"delete",from:e._parent._url,to:"domain://msg-node."+t+"/object-address-allocation",body:{resource:e._url,childrenResources:e._childrens}}),e._releaseListeners(),delete e._parent._reporters[e._url]}},{key:"_onRemoteResponse",value:function(e){var t=this;t._bus.postMessage({id:e.id,type:"response",from:e.to,to:t._url,body:{code:e.body.code,identity:e.body.identity,source:e.from}})}},{key:"_onRemoteSubscribe",value:function(e){var t=this,r=e.body.subscriber;t._subscriptions[r]&&t._subscriptions[r]._releaseListeners();var n={type:"forward",from:t._url,to:t._owner,body:{type:e.type,from:r,to:t._url,identity:e.body.identity}};e.body.hasOwnProperty("mutual")&&(n.body.mutual=e.body.mutual),t._bus.postMessage(n,function(n){m.log("[SyncherManager.ReporterObject ]forward-reply: ",n),200===n.body.code&&(t._subscriptions[r]||(m.log("[SyncherManager.ReporterObject] - _onRemoteSubscribe:",t._childrens),t._subscriptions[r]=new g.default(t._bus,t._owner,t._url,!0)));var o=void 0;e.body.identity&&e.body.identity.userProfile.userURL&&(o=e.body.identity.userProfile.userURL,t._parent._dataObjectsStorage.update(!0,t._url,"subscriberUsers",o)),t._parent._dataObjectsStorage.update(!0,t._url,"subscriptions",r),n.body.owner=t._owner,t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:n.body})})}},{key:"_onRemoteUnSubscribe",value:function(e){var t=this,r=e.body.source,n=t._subscriptions[r];if(n){n._releaseListeners(),delete t._subscriptions[r];var o={type:"forward",from:t._url,to:t._owner,body:{type:e.type,from:r,to:t._url,identity:e.body.identity}};t._bus.postMessage(o)}}},{key:"isToSaveData",set:function(e){this._isToSaveData=e}}]),ReporterObject}();t.default=R,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(35),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(4),d=_interopRequireWildcard(f),p=r(6),y=r(221),h=_interopRequireDefault(y),v=r(105),g=_interopRequireWildcard(v),b=d.getLogger("ObserverObject"),_=function(){function ObserverObject(e,t){var r=this;(0,u.default)(this,ObserverObject);var n=this;n._parent=e,n._url=t,n._bus=e._bus,n._subscriptions={},n._storageSubscriptions={},n._childrenListeners=[],this._isToSaveData=!1;var o=n._url+"/changes";n._changeListener=n._bus.addListener(o,function(e){b.log("[SyncherManager.ObserverObject ] SyncherManager-"+o+"-RCV: ",e),r._isToSaveData&&e.body.attribute&&(b.log("[SyncherManager.ObserverObject ] SyncherManager - save data: ",e),n._parent._dataObjectsStorage.update(!1,n._url,"version",e.body.version),n._parent._dataObjectsStorage.update(!1,n._url,"lastModified",e.body.lastModified),n._parent._dataObjectsStorage.saveData(!1,n._url,e.body.attribute,e.body.value))})}return(0,l.default)(ObserverObject,[{key:"_newSubscription",value:function(e){var t=this,r=t._subscriptions[e];b.log("[Observer Object - new subscription] - ",t._subscriptions,e,t._subscriptions.hasOwnProperty(e)),r||(t._subscriptions[e]=new h.default(t._bus,e,t._url,!1))}},{key:"addSubscription",value:function(e){this._newSubscription(e)}},{key:"addChildrens",value:function(){var e=this,t=this;return new a.default(function(r){var n=t._url+"/children/";b.log("[SyncherManager.ObserverObject - addChildrens] - childrens: ",n);var i=t._bus.addListener(n,function(r){if(b.log("[SyncherManager.ObserverObject received]",r),"create"===r.type&&r.to.includes("children")&&e._isToSaveData){var n=(0,p.splitObjectURL)(r.to),a=n.url;r.body.hasOwnProperty("mutual")||(r.body.mutual=!0),"string"!=typeof r.body.value&&r.body.mutual?(b.log("[SyncherManager.ObserverObject] encrypting received data ",r.body.value),g.default.encryptDataObject(r.body.value,a).then(function(e){b.log("[SyncherManager.ObserverObject] encrypted data ",e),t._storeChildObject(r,(0,o.default)(e))}).catch(function(e){b.warn("[SyncherManager.ObserverObject._encryptChild] failed, storing unencrypted ",e),t._storeChildObject(r,r.body.value)})):t._storeChildObject(r,r.body.value)}b.log("[SyncherManager.ObserverObject children Listeners]",t._childrenListeners,i),-1===t._childrenListeners.indexOf(i)&&t._childrenListeners.push(i)})})}},{key:"_storeChildObject",value:function(e,t){var r=this,n=(0,p.splitObjectURL)(e.to),o=n.url,i=n.resource,a={},s=e.body.resource,u=i;"heartbeat"===s?a=t:(a.identity=e.body.identity,a.value=t),s&&(u=s),b.log("[SyncherManager.ObserverObject._storeChildObject] : ",o,u,a),r._parent._dataObjectsStorage.saveChildrens(!1,o,u,a)}},{key:"removeSubscription",value:function(e){var t=this,r=e.from,n=(0,p.divideURL)(r).domain,o=t._url+"/subscription",i=t._subscriptions[r];i&&(t._bus.postMessage({type:"unsubscribe",from:t._parent._url,to:o,body:{source:r,identity:e.body.identity}}),t._bus.postMessage({type:"unsubscribe",from:t._parent._url,to:"domain://msg-node."+n+"/sm",body:{resource:t._url,resources:[t._url+"/children/"]}}),i._releaseListeners(),delete t._subscriptions[r])}},{key:"isToSaveData",set:function(e){this._isToSaveData=e}}]),ObserverObject}();t.default=_,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(220),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(4),d=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(f),p=r(6),y=r(545),h=_interopRequireDefault(y),v=d.getLogger("SubscriptionManager"),g=function(){function SubscriptionManager(e,t,r){if((0,u.default)(this,SubscriptionManager),!e)throw new Error("[SubscriptionManager] - needs the runtimeURL parameter");if(!t)throw new Error("[SubscriptionManager] - needs the MessageBus instance");var n=this;n._bus=t,n._storage=r,n._subscriptions={},n._subscriptionsStorage={},n.runtimeURL=e,n._url=e+"/subscriptions",n._domain=(0,p.divideURL)(e).domain,t.addListener(n._url,function(e){switch(v.info("[SubscriptionManager] RCV: ",e),e.type){case"subscribe":n._onSubscribe(e);break;case"unsubscribe":n._onUnSubscribe(e);break;case"read":n._onRead(e)}})}return(0,l.default)(SubscriptionManager,[{key:"init",value:function(){var e=this;return new a.default(function(t){e._storage.get("subscriptions").then(function(r){v.log("[SubscriptionManager.init] resume subscriptions: ",r),r&&(e._subscriptionsStorage=r,(0,o.default)(r).forEach(function(t){e.createSubscription(t.domain,t.resources,t.subscriber,t.identity)})),t()})})}},{key:"_onSubscribe",value:function(e){var t=this,r=e.body.resources,n=e.from,o=(0,p.divideURL)(r[0]).domain,i=e.body.identity;t.createSubscription(o,r,n,i).then(function(a){a.id=e.id,a.from=t._url,a.to=n,a.body=e.body,a.body.code=200,v.log("[SubscriptionManager] - craeteSubscription: ",e,a,n),t._bus.postMessage(a),t._subscriptionsStorage[n]?r.forEach(function(e){t._subscriptionsStorage[n].resources.includes(e)||t._subscriptionsStorage[n].resources.push(e)}):t._subscriptionsStorage[n]={domain:o,resources:r,subscriber:n,identity:i},t._storage.set("subscriptions",1,t._subscriptionsStorage)})}},{key:"createSubscription",value:function(e,t,r,n){var o=this;return new a.default(function(i){var a={type:"subscribe",from:o._url,to:"domain://msg-node."+e+"/sm",body:{identity:n,resources:t,source:r}};o._bus.postMessage(a,function(e){v.log("[SubscriptionManager] node-subscribe-response: ",e);var n=o._subscriptions[r];v.log("[SubscriptionManager] - ",o._subscriptions,t,o._subscriptions.hasOwnProperty(r)),n||(o._subscriptions[r]={}),t.forEach(function(e){o._subscriptions[r][e]=new h.default(o._bus,r,e)}),i(e)})})}},{key:"_onUnSubscribe",value:function(e){var t=this,r=e.from,n=e.body.resource;if(t._subscriptions[r]&&t._subscriptions[r][n]){var o=(0,p.divideURL)(n).domain,i=t._subscriptions[r][n];if(t._bus.postMessage({type:"unsubscribe",from:t._url,to:"domain://msg-node."+o+"/sm",body:{resources:[n],source:r}}),i._releaseListeners(),delete t._subscriptions[r][n],t._subscriptionsStorage[r]){var a=t._subscriptionsStorage[r].resources.indexOf(n);-1!=a&&t._subscriptionsStorage[r].resources.splice(a,1),t._storage.set("subscriptions",1,t._subscriptionsStorage)}}t._bus.postMessage({id:e.id,type:"response",from:e.to,to:e.from,body:{code:200}})}},{key:"_onRead",value:function(e){var t=this,r=e.body.resource,n=void 0;v.log("[SubscriptionManager] - request to read Subscriptions: ",e),t._storage.get("subscriptions").then(function(o){if(o&&o[r]){var i=o[r].resources;n={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,value:i}}}else n={id:e.id,type:"response",from:e.to,to:e.from,body:{code:404,description:"Not Found"}};t._bus.postMessage(n)})}},{key:"url",get:function(){return this._url}}]),SubscriptionManager}();t.default=g,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(4),u=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(s),c=u.getLogger("Subscription"),l=function(){function Subscription(e,t,r){(0,o.default)(this,Subscription);var n=this;n._subscriber=t,n.resource=r,c.log("[SubscriptionManager.Subscription] new: ",t,r),n._listener=e.addForward(r,t)}return(0,a.default)(Subscription,[{key:"_releaseListeners",value:function(){this._listener.remove()}}]),Subscription}();t.default=l,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(35),o=_interopRequireDefault(n),i=r(3),a=_interopRequireDefault(i),s=r(15),u=_interopRequireDefault(s),c=r(1),l=_interopRequireDefault(c),f=r(2),d=_interopRequireDefault(f),p=r(17),y=_interopRequireDefault(p),h=r(18),v=_interopRequireDefault(h),g=r(4),b=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(g),_=r(215),m=_interopRequireDefault(_),R=r(216),O=_interopRequireDefault(R),w=r(6),k=r(217),S=_interopRequireDefault(k),P=r(547),D=_interopRequireDefault(P),M=(b.getLogger("PEP"),function(e){function RuntimeCoreCtx(e,t,r,n,o){(0,l.default)(this,RuntimeCoreCtx);var i=(0,y.default)(this,(RuntimeCoreCtx.__proto__||(0,u.default)(RuntimeCoreCtx)).call(this));return i._runtimeURL=e,i._pepURL=i._runtimeURL+"/pep",i._guiURL=i._runtimeURL+"/policy-gui",i.idModule=t,i.runtimeRegistry=r,i.activeUserPolicy=void 0,i.serviceProviderPolicy={},i.userPolicies={},i.storageManager=n,i.runtimeCapabilities=o,i}return(0,v.default)(RuntimeCoreCtx,e),(0,d.default)(RuntimeCoreCtx,[{key:"loadConfigurations",value:function(){var e=this;return new a.default(function(t,r){e.storageManager.get("rethink:activePolicy").then(function(t){return e.activeUserPolicy=t,e.storageManager.get("rethink:groups")}).then(function(t){var r=t;return e.groups=void 0===r?{}:r,e.storageManager.get("rethink:spPolicies")}).then(function(r){var n=r;e.serviceProviderPolicy=void 0===n?{}:n,e._loadUserPolicies().then(function(){t()})})})}},{key:"getPolicies",value:function(e,t){var r={};return void 0!==this.activeUserPolicy&&(r.userPolicy=this.userPolicies[this.activeUserPolicy]),r.serviceProviderPolicy=this.getServiceProviderPolicy(e,t),r}},{key:"_isValidUpdate",value:function(e){var t=this;return new a.default(function(r,n){e.from.split("://").length>1?t.idModule._getHypertyFromDataObject(e.from).then(function(t){t===e.body.source?r(e):n("The source of the message is not valid.")},function(e){n(e)}):r(e)})}},{key:"getMyEmails",value:function(){var e=this.idModule.getIdentities(),t=[];for(var r in e)t.push((0,w.getUserEmailFromURL)(e[r].identity));return t}},{key:"getMyHyperties",value:function(){var e=this.runtimeRegistry.hypertiesList,t=[];for(var r in e){var n=e[r].objectName;-1===t.indexOf(n)&&t.push(n)}return t}},{key:"getServiceProviderPolicy",value:function(e,t){var r=void 0;if(t){var n=this.runtimeRegistry.getHypertyName(e.to);r=this.serviceProviderPolicy[n]}else{var o=this.runtimeRegistry.getHypertyName(e.from);r=this.serviceProviderPolicy[o]}return r}},{key:"getURL",value:function(e){var t=e.split("/");return t[0]+"//"+t[2]+"/"+t[3]}},{key:"_loadUserPolicies",value:function(){var e=this,t=this;return new a.default(function(r,n){t.storageManager.get("rethink:userPolicies").then(function(t){var n=t;if(void 0!==n)for(var o in n)e.pep.addPolicy("USER",o,n[o]);r()})})}},{key:"_getLastComponentOfURL",value:function(e){var t=e.split("/");return t[t.length-1]}},{key:"_getPoliciesJSON",value:function(e){for(var t in e){var r=e[t].combiningAlgorithm;r instanceof O.default?e[t].combiningAlgorithm="blockOverrides":r instanceof m.default?e[t].combiningAlgorithm="allowOverrides":r instanceof S.default?e[t].combiningAlgorithm="firstApplicable":e[t].combiningAlgorithm=void 0}return e}},{key:"saveActivePolicy",value:function(){var e=this,t=this;return new a.default(function(r,n){t.storageManager.set("rethink:activePolicy",0,e.activeUserPolicy).then(function(){r()})})}},{key:"saveGroups",value:function(){var e=this,t=this;return new a.default(function(r,n){t.storageManager.set("rethink:groups",0,e.groups).then(function(){r()})})}},{key:"savePolicies",value:function(e,t,r){var n=void 0;switch(e){case"USER":n=(0,o.default)(this.userPolicies),n=this._getPoliciesJSON(JSON.parse(n)),this.storageManager.set("rethink:userPolicies",0,n);break;case"SERVICE_PROVIDER":void 0!==t&void 0!==r&&(this.serviceProviderPolicy[r]=t),n=(0,o.default)(this.serviceProviderPolicy),n=this._getPoliciesJSON(JSON.parse(n)),this.storageManager.set("rethink:spPolicies",0,n);break;default:throw Error("Unknown policy source: "+e)}}},{key:"getGroupsNames",value:function(){var e=this.groups,t=[];if(void 0!==e)for(var r in e)t.push(r);return t}},{key:"getGroup",value:function(e,t){var r=[];if("preauthorised"===e){var n=t.split("/");n.pop(),n=n[0]+"//"+n[2],r=this.runtimeRegistry.getPreAuthSubscribers(n)}else void 0!==this.groups[e]&&(r=this.groups[e]);return r}},{key:"createGroup",value:function(e){this.groups[e]=[],this.saveGroups()}},{key:"deleteGroup",value:function(e){delete this.groups[e],this.saveGroups()}},{key:"addToGroup",value:function(e,t){var r=this.groups;if(void 0===r[e])throw Error('Group "'+e+'" does not exist!');-1===r[e].indexOf(t)&&(r[e].push(t),this.saveGroups())}},{key:"removeFromGroup",value:function(e,t){var r=this.groups[e];r.splice(r.indexOf(t),1),this.saveGroups()}},{key:"pepURL",get:function(){return this._pepURL}},{key:"guiURL",get:function(){return this._guiURL}},{key:"runtimeURL",get:function(){return this._runtimeURL}},{key:"messageBus",get:function(){return this._messageBus},set:function(e){this._messageBus=e}},{key:"subscription",get:function(){return this._subscription},set:function(e){this._subscription=e.message.body.subscriber}}]),RuntimeCoreCtx}(D.default));t.default=M,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(6),u=function(){function ReThinkCtx(){(0,o.default)(this,ReThinkCtx),this.defaultBehaviour=!0,this.groups={}}return(0,a.default)(ReThinkCtx,[{key:"scheme",get:function(){return this._scheme},set:function(e){var t=e.message.from;(0,s.isDataObjectURL)(t)?this._scheme=(0,s.divideURL)(t).type:this._scheme=void 0}},{key:"date",get:function(){return this._date},set:function(e){var t=new Date,r=String(t.getDate());1===r.length&&(r="0"+r);var n=String(t.getMonth()+1);1===n.length&&(n="0"+n),this._date=r+"/"+n+"/"+t.getFullYear()}},{key:"domain",get:function(){return this._domain},set:function(e){void 0!==e.message.body.identity&&(this._domain=(0,s.divideEmail)(e.message.body.identity.userProfile.username).domain)}},{key:"type",get:function(){return this._type},set:function(e){var t=e.message;void 0!==t.body.value&&(this._type=t.body.value.resourceType)}},{key:"source",get:function(){return this._source},set:function(e){void 0!==e.message.body.identity&&(this._source=e.message.body.identity.userProfile.username)}},{key:"time",get:function(){return this._time},set:function(e){e=new Date;var t=String(e.getMinutes());1===t.length&&(t="0"+t),this._time=parseInt(String(e.getHours())+t)}},{key:"weekday",get:function(){return this._weekday},set:function(e){this._weekday=String((new Date).getDay())}}]),ReThinkCtx}();t.default=u,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(549),o=_interopRequireDefault(n),i=r(35),a=_interopRequireDefault(i),s=r(3),u=_interopRequireDefault(s),c=r(1),l=_interopRequireDefault(c),f=r(2),d=_interopRequireDefault(f),p=r(4),y=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(p),h=r(556),v=_interopRequireDefault(h),g=y.getLogger("RuntimeCatalogue"),b=function(){function RuntimeCatalogue(e,t,r){if((0,l.default)(this,RuntimeCatalogue),!e)throw Error("The catalogue needs the runtimeFactory");this._factory=new v.default,this.httpRequest=e.createHttpRequest(),this.atob=e.atob?e.atob:atob;var n=t||"runtimeCatalogue",o=r||"&cguid, accessControlPolicy, constraints, dataObjects, hypertyType, objectName, sourcePackage, version",i={};i[n]=o,this.storageManager=e.storageManager(n,i)}return(0,d.default)(RuntimeCatalogue,[{key:"getDescriptor",value:function(e,t){var r=this,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=arguments[3];g.info("[RuntimeCatalogue] - getting descriptor from: ",e," with constraints: ",i);var s=!1,c=!1,l=void 0;l=void 0!=i?u.default.all([this.httpRequest.post(e+"/version",{body:(0,a.default)(i)}),this.httpRequest.post(e+"/cguid",{body:(0,a.default)(i)})]):u.default.all([this.httpRequest.get(e+"/version"),this.httpRequest.get(e+"/cguid")]),l=l.then(function(t){var n=(0,o.default)(t,2),u=n[0],c=n[1];return g.info("[RuntimeCatalogue] - got version ("+u+") and cguid ("+c+") for descriptor "+e),r.storageManager.getVersion("cguid",c).then(function(t){return t>=u?(g.warn("storageManager contains saved version that is the same or newer than requested"),s=!0,r.storageManager.get("cguid",c)):(g.warn("storageManager does not contain saved version"),(void 0!=i?r.httpRequest.post(e,{body:(0,a.default)(i)}):r.httpRequest.get(e)).then(function(e){if(e=JSON.parse(e),e.ERROR)throw new Error(e);return e}))})}).catch(function(t){var r="Unable to get descriptor for "+e+(void 0!=i?" with constraints "+i:"")+": "+t;throw g.error(r),new Error(r)});var f=l;return n&&(g.log("adding promise to attach sourcePackage"),f=l.then(function(e){return e.sourcePackage?(c=!0,e):(c=!1,r.attachRawSourcePackage(e))})),f=f.then(function(e){return(!s||s&&!c&&n)&&r.storageManager.set(e.cguid,e.version,e),t.apply(r,[e,i])})}},{key:"attachRawSourcePackage",value:function(e,t){var r=this;return g.log("attaching raw sourcePackage from:",e.sourcePackageURL),new u.default(function(n,o){(void 0!=t?r.httpRequest.post(e.sourcePackageURL,{body:(0,a.default)(t)}):r.httpRequest.get(e.sourcePackageURL)).then(function(t){t=JSON.parse(t),e.sourcePackage=t,n(e)}).catch(function(e){o(e)})})}},{key:"getHypertyDescriptor",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments[2];return this.getDescriptor(e,this.createHyperty,t,r)}},{key:"getStubDescriptor",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments[2];return this.getDescriptor(e,this.createStub,t,r)}},{key:"getRuntimeDescriptor",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments[2];return this.getDescriptor(e,this.createRuntimeDescriptor,t,r)}},{key:"getDataSchemaDescriptor",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments[2];return this.getDescriptor(e,this.createDataSchema,t,r)}},{key:"getIdpProxyDescriptor",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=arguments[2];return this.getDescriptor(e,this.createIdpProxy,t,r)}},{key:"createHyperty",value:function(e){var t=this._factory.createHypertyDescriptorObject(e.cguid,e.version,e.objectName,e.description,e.language,e.sourcePackageURL,e.type||e.hypertyType,e.dataObjects);t.configuration=e.configuration,t.constraints=e.constraints,t.messageSchema=e.messageSchema,t.policies=e.policies,t.signature=e.signature;var r=e.sourcePackage;return r&&(t.sourcePackage=this.createSourcePackage(r)),t}},{key:"createStub",value:function(e){var t=this._factory.createProtoStubDescriptorObject(e.cguid,e.version,e.objectName,e.description,e.language,e.sourcePackageURL,e.messageSchemas,e.configuration,e.constraints,e.hypertyType,e.dataObjects,e.interworking,e.idpProxy,e.mutualAuthentication);t.signature=e.signature;var r=e.sourcePackage;return r&&(t.sourcePackage=this.createSourcePackage(r)),t}},{key:"createRuntimeDescriptor",value:function(e){try{e.hypertyCapabilities=JSON.parse(e.hypertyCapabilities),e.protocolCapabilities=JSON.parse(e.protocolCapabilities)}catch(e){}var t=this._factory.createHypertyRuntimeDescriptorObject(e.cguid,e.version,e.objectName,e.description,e.language,e.sourcePackageURL,e.type||e.runtimeType,e.hypertyCapabilities,e.protocolCapabilities,e.p2pHandlerStub,e.p2pRequesterStub);t.signature=e.signature;var r=e.sourcePackage;return r&&(t.sourcePackage=this.createSourcePackage(r)),t}},{key:"createDataSchema",value:function(e){var t=void 0;t=e.accessControlPolicy&&e.scheme?this._factory.createHypertyDataObjectSchema(e.cguid,e.version,e.objectName,e.description,e.language,e.sourcePackageURL,e.accessControlPolicy,e.scheme):this._factory.createMessageDataObjectSchema(e.cguid,e.version,e.objectName,e.description,e.language,e.sourcePackageURL),t.signature=e.signature;var r=e.sourcePackage;if(r){t.sourcePackage=this.createSourcePackage(r);try{t.sourcePackage.sourceCode=JSON.parse(t.sourcePackage.sourceCode)}catch(e){g.log("DataSchema Source code is already parsed")}return t}return t}},{key:"createIdpProxy",value:function(e){var t=this._factory.createProtoStubDescriptorObject(e.cguid,e.version,e.objectName,e.description,e.language,e.sourcePackageURL,e.messageSchemas,e.configuration,e.constraints,e.hypertyType,e.dataObjects,e.interworking,e.idpProxy,e.mutualAuthentication);t.signature=e.signature;var r=e.sourcePackage;return r&&(r=this.createSourcePackage(r),t.sourcePackage=r),t}},{key:"createSourcePackage",value:function(e){"base64"===e.encoding&&(e.sourceCode=this.atob(e.sourceCode),e.encoding="utf-8");var t=this._factory.createSourcePackage(e.sourceCodeClassname,e.sourceCode);return e.encoding&&(t.encoding=e.encoding),e.signature&&(t.signature=e.signature),t}},{key:"getSourcePackageFromURL",value:function(e){var t=this;return g.log("getting sourcePackage from:",e),new u.default(function(r,n){t.httpRequest.get(e).then(function(e){if(e.ERROR)n(e);else{e=JSON.parse(e);var o=t.createSourcePackage(e);r(o)}}).catch(function(e){n(e)})})}},{key:"getSourceCodeFromDescriptor",value:function(e){var t=this;return new u.default(function(r,n){e.sourcePackage?r(e.sourcePackage.sourceCode):t.storageManager.getVersion(e.sourcePackageURL+"/sourceCode").then(function(o){o>=e.version?(g.log("returning cached version from storageManager"),t.storageManager.get(e.sourcePackageURL+"/sourceCode").then(function(e){r(e)}).catch(function(e){n(e)})):t.httpRequest.get(e.sourcePackageURL+"/sourceCode").then(function(o){o.ERROR?n(o):(t.storageManager.set(e.sourcePackageURL+"/sourceCode",e.version,o),r(o))}).catch(function(e){n(e)})}).catch(function(e){n(e)})})}},{key:"getTypeList",value:function(e,t){var r=this;return new u.default(function(n,o){(void 0!=t?r.httpRequest.post(e,{body:(0,a.default)(t)}):r.httpRequest.get(e)).then(function(e){e=JSON.parse(e),n(e)}).catch(function(e){o(e)})})}},{key:"deleteFromPM",value:function(e){return this.storageManager.delete(e)}},{key:"runtimeURL",set:function(e){this._runtimeURL=e},get:function(){return this._runtimeURL}}]),RuntimeCatalogue}();t.default=b,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var n=r(550),o=_interopRequireDefault(n),i=r(553),a=_interopRequireDefault(i);t.default=function(){function sliceIterator(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var s,u=(0,a.default)(e);!(n=(s=u.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{!n&&u.return&&u.return()}finally{if(o)throw i}}return r}return function(e,t){if(Array.isArray(e))return e;if((0,o.default)(Object(e)))return sliceIterator(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}()},function(e,t,r){e.exports={default:r(551),__esModule:!0}},function(e,t,r){r(101),r(80),e.exports=r(552)},function(e,t,r){var n=r(142),o=r(22)("iterator"),i=r(71);e.exports=r(11).isIterable=function(e){var t=Object(e);return void 0!==t[o]||"@@iterator"in t||i.hasOwnProperty(n(t))}},function(e,t,r){e.exports={default:r(554),__esModule:!0}},function(e,t,r){r(101),r(80),e.exports=r(555)},function(e,t,r){var n=r(41),o=r(143);e.exports=r(11).getIterator=function(e){var t=o(e);if("function"!=typeof t)throw TypeError(e+" is not iterable!");return n(t.call(e))}},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=r(72),u=_interopRequireDefault(s),c=r(559),l=_interopRequireDefault(c),f=r(560),d=_interopRequireDefault(f),p=r(561),y=_interopRequireDefault(p),h=r(562),v=_interopRequireDefault(h),g=r(563),b=_interopRequireDefault(g),_=r(564),m=function(){function CatalogueDataObjectFactory(){(0,o.default)(this,CatalogueDataObjectFactory)}return(0,a.default)(CatalogueDataObjectFactory,[{key:"createCatalogueDataObject",value:function(e,t,r,n,o,i,a){if(void 0===e||void 0===t||void 0===r||void 0===n||void 0===o||void 0===i||void 0===a)throw new Error("Invalid parameters!");return new u.default(e,t,r,n,o,i,a)}},{key:"createHypertyDescriptorObject",value:function(e,t,r,n,o,i,a,u){if(void 0===e||void 0===t||void 0===r||void 0===n||void 0===o||void 0===i||void 0===a||void 0===u)throw new Error("Invalid parameters!");return new d.default(e,s.CatalogueObjectType.HYPERTY,t,r,n,o,i,a,u)}},{key:"createProtoStubDescriptorObject",value:function(e,t,r,n,o,i,a,u,c,l,f,d,p,h){if(void 0===e||void 0===t||void 0===r||void 0===n||void 0===o||void 0===i||void 0===a||void 0===u||void 0===c)throw new Error("Invalid parameters!");return new y.default(e,s.CatalogueObjectType.PROTOSTUB,t,r,n,o,i,a,u,c,l,f,d,p,h)}},{key:"createHypertyRuntimeDescriptorObject",value:function(e,t,r,n,o,i,a,u,c,l,f){if(void 0===e||void 0===t||void 0===r||void 0===n||void 0===o||void 0===i||void 0===a)throw new Error("Invalid parameters!");return new v.default(e,s.CatalogueObjectType.HYPERTY_RUNTIME,t,r,n,o,i,a,u,c,l,f)}},{key:"createHypertyInterceptorDescriptorObject",value:function(e,t,r,n,o,i,a,u){if(void 0===e||void 0===t||void 0===r||void 0===n||void 0===o||void 0===i)throw new Error("Invalid parameters!");return new b.default(e,s.CatalogueObjectType.HYPERTY_INTERCEPTOR,t,r,n,o,i,a,u)}},{key:"createDataObjectSchema",value:function(e,t,r,n,o,i){if(void 0===e||void 0===t||void 0===r||void 0===n||void 0===o||void 0===i)throw new Error("Invalid parameters!");return new _.DataObjectSchema(e,s.CatalogueObjectType.HYPERTY_DATA_OBJECT,t,r,n,o,i)}},{key:"createMessageDataObjectSchema",value:function(e,t,r,n,o,i){if(void 0===e||void 0===t||void 0===r||void 0===n||void 0===o||void 0===i)throw new Error("Invalid parameters!");return new _.DataObjectSchema(e,s.CatalogueObjectType.HYPERTY_DATA_OBJECT,t,r,n,o,i)}},{key:"createHypertyDataObjectSchema",value:function(e,t,r,n,o,i,a,u){if(void 0===e||void 0===t||void 0===r||void 0===n||void 0===o||void 0===i||void 0===u||void 0===a)throw new Error("Invalid parameters!");return u===_.DataUrlScheme.COMM?new _.CommunicationDataObjectSchema(e,s.CatalogueObjectType.HYPERTY_DATA_OBJECT,t,r,n,o,i,u,a):u===_.DataUrlScheme.CONNECTION?new _.ConnectionDataObjectSchema(e,s.CatalogueObjectType.HYPERTY_DATA_OBJECT,t,r,n,o,i,u,a):u===_.DataUrlScheme.CTXT?new _.ContextDataObjectSchema(e,s.CatalogueObjectType.HYPERTY_DATA_OBJECT,t,r,n,o,i,u,a):u===_.DataUrlScheme.IDENTITY?new _.IdentityDataObjectSchema(e,s.CatalogueObjectType.HYPERTY_DATA_OBJECT,t,r,n,o,i,u,a):void 0}},{key:"createSourcePackage",value:function(e,t){if(void 0===t||void 0===e)throw new Error("Invalid parameters!");return new l.default(e,t)}}]),CatalogueDataObjectFactory}();t.default=m,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.RethinkObject=void 0;var n=r(35),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(558),l=_interopRequireDefault(c),f=t.RethinkObject=function(){function RethinkObject(){(0,a.default)(this,RethinkObject)}return(0,u.default)(RethinkObject,[{key:"validate",value:function(e){l.default.addSchema(e.id,e);var t=l.default.validateMultiple(JSON.parse((0,o.default)(this)),e);return t.errors.forEach(function(e){delete e.stack}),!t.valid||t.missing.length,t.valid}}]),RethinkObject}();t.default=f},function(e,t,r){var n,o,i;!function(r,a){o=[],n=a,void 0!==(i="function"==typeof n?n.apply(t,o):n)&&(e.exports=i)}(0,function(){function notReallyPercentEncode(e){return encodeURI(e).replace(/%25[0-9][0-9]/g,function(e){return"%"+e.substring(3)})}function uriTemplateSubstitution(r){var n="";e[r.charAt(0)]&&(n=r.charAt(0),r=r.substring(1));var o="",i="",a=!0,s=!1,u=!1;"+"===n?a=!1:"."===n?(i=".",o="."):"/"===n?(i="/",o="/"):"#"===n?(i="#",a=!1):";"===n?(i=";",o=";",s=!0,u=!0):"?"===n?(i="?",o="&",s=!0):"&"===n&&(i="&",o="&",s=!0);for(var c=[],l=r.split(","),f=[],d={},p=0;p<l.length;p++){var y=l[p],h=null;if(-1!==y.indexOf(":")){var v=y.split(":");y=v[0],h=parseInt(v[1],10)}for(var g={};t[y.charAt(y.length-1)];)g[y.charAt(y.length-1)]=!0,y=y.substring(0,y.length-1);var b={truncate:h,name:y,suffices:g};f.push(b),d[y]=b,c.push(y)}var _=function(e){for(var t="",r=0,n=0;n<f.length;n++){var c=f[n],l=e(c.name);if(null===l||void 0===l||Array.isArray(l)&&0===l.length||"object"==typeof l&&0===Object.keys(l).length)r++;else if(t+=n===r?i:o||",",Array.isArray(l)){s&&(t+=c.name+"=");for(var d=0;d<l.length;d++)d>0&&(t+=c.suffices["*"]?o||",":",",c.suffices["*"]&&s&&(t+=c.name+"=")),t+=a?encodeURIComponent(l[d]).replace(/!/g,"%21"):notReallyPercentEncode(l[d])}else if("object"==typeof l){s&&!c.suffices["*"]&&(t+=c.name+"=");var p=!0;for(var y in l)p||(t+=c.suffices["*"]?o||",":","),p=!1,t+=a?encodeURIComponent(y).replace(/!/g,"%21"):notReallyPercentEncode(y),t+=c.suffices["*"]?"=":",",t+=a?encodeURIComponent(l[y]).replace(/!/g,"%21"):notReallyPercentEncode(l[y])}else s&&(t+=c.name,u&&""===l||(t+="=")),null!=c.truncate&&(l=l.substring(0,c.truncate)),t+=a?encodeURIComponent(l).replace(/!/g,"%21"):notReallyPercentEncode(l)}return t};return _.varNames=c,{prefix:i,substitution:_}}function UriTemplate(e){if(!(this instanceof UriTemplate))return new UriTemplate(e);for(var t=e.split("{"),r=[t.shift()],n=[],o=[],i=[];t.length>0;){var a=t.shift(),s=a.split("}")[0],u=a.substring(s.length+1),c=uriTemplateSubstitution(s);o.push(c.substitution),n.push(c.prefix),r.push(u),i=i.concat(c.substitution.varNames)}this.fill=function(e){for(var t=r[0],n=0;n<o.length;n++){t+=(0,o[n])(e),t+=r[n+1]}return t},this.varNames=i,this.template=e}function recursiveCompare(e,t){if(e===t)return!0;if(e&&t&&"object"==typeof e&&"object"==typeof t){if(Array.isArray(e)!==Array.isArray(t))return!1;if(Array.isArray(e)){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(!recursiveCompare(e[r],t[r]))return!1}else{var n;for(n in e)if(void 0===t[n]&&void 0!==e[n])return!1;for(n in t)if(void 0===e[n]&&void 0!==t[n])return!1;for(n in e)if(!recursiveCompare(e[n],t[n]))return!1}return!0}return!1}function parseURI(e){var t=String(e).replace(/^\s+|\s+$/g,"").match(/^([^:\/?#]+:)?(\/\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);return t?{href:t[0]||"",protocol:t[1]||"",authority:t[2]||"",host:t[3]||"",hostname:t[4]||"",port:t[5]||"",pathname:t[6]||"",search:t[7]||"",hash:t[8]||""}:null}function resolveUrl(e,t){return t=parseURI(t||""),e=parseURI(e||""),t&&e?(t.protocol||e.protocol)+(t.protocol||t.authority?t.authority:e.authority)+function(e){var t=[];return e.replace(/^(\.\.?(\/|$))+/,"").replace(/\/(\.(\/|$))+/g,"/").replace(/\/\.\.$/,"/../").replace(/\/?[^\/]*/g,function(e){"/.."===e?t.pop():t.push(e)}),t.join("").replace(/^\//,"/"===e.charAt(0)?"/":"")}(t.protocol||t.authority||"/"===t.pathname.charAt(0)?t.pathname:t.pathname?(e.authority&&!e.pathname?"/":"")+e.pathname.slice(0,e.pathname.lastIndexOf("/")+1)+t.pathname:e.pathname)+(t.protocol||t.authority||t.pathname?t.search:t.search||e.search)+t.hash:null}function getDocumentUri(e){return e.split("#")[0]}function normSchema(e,t){if(e&&"object"==typeof e)if(void 0===t?t=e.id:"string"==typeof e.id&&(t=resolveUrl(t,e.id),e.id=t),Array.isArray(e))for(var r=0;r<e.length;r++)normSchema(e[r],t);else{"string"==typeof e.$ref&&(e.$ref=resolveUrl(t,e.$ref));for(var n in e)"enum"!==n&&normSchema(e[n],t)}}function defaultErrorReporter(e){e=e||"en";var t=c[e];return function(e){var r=t[e.code]||u[e.code];if("string"!=typeof r)return"Unknown error code "+e.code+": "+JSON.stringify(e.messageParams);var n=e.params;return r.replace(/\{([^{}]*)\}/g,function(e,t){var r=n[t];return"string"==typeof r||"number"==typeof r?r:e})}}function ValidationError(e,t,r,n,o){if(Error.call(this),void 0===e)throw new Error("No error code supplied: "+n);this.message="",this.params=t,this.code=e,this.dataPath=r||"",this.schemaPath=n||"",this.subErrors=o||null;var i=new Error(this.message);if(this.stack=i.stack||i.stacktrace,!this.stack)try{throw i}catch(i){this.stack=i.stack||i.stacktrace}}function isTrustedUrl(e,t){if(t.substring(0,e.length)===e){var r=t.substring(e.length);if(t.length>0&&"/"===t.charAt(e.length-1)||"#"===r.charAt(0)||"?"===r.charAt(0))return!0}return!1}function createApi(e){var t,n,o=new r,s={setErrorReporter:function(e){return"string"==typeof e?this.language(e):(n=e,!0)},addFormat:function(){o.addFormat.apply(o,arguments)},language:function(e){return e?(c[e]||(e=e.split("-")[0]),!!c[e]&&(t=e,e)):t},addLanguage:function(e,t){var r;for(r in i)t[r]&&!t[i[r]]&&(t[i[r]]=t[r]);var n=e.split("-")[0];if(c[n]){c[e]=Object.create(c[n]);for(r in t)void 0===c[n][r]&&(c[n][r]=t[r]),c[e][r]=t[r]}else c[e]=t,c[n]=t;return this},freshApi:function(e){var t=createApi();return e&&t.language(e),t},validate:function(e,i,a,s){var u=defaultErrorReporter(t),c=n?function(e,t,r){return n(e,t,r)||u(e,t,r)}:u,l=new r(o,!1,c,a,s);"string"==typeof i&&(i={$ref:i}),l.addSchema("",i);var f=l.validateAll(e,i,null,null,"");return!f&&s&&(f=l.banUnknownProperties(e,i)),this.error=f,this.missing=l.missing,this.valid=null===f,this.valid},validateResult:function(){var e={toString:function(){return this.valid?"valid":this.error.message}};return this.validate.apply(e,arguments),e},validateMultiple:function(e,i,a,s){var u=defaultErrorReporter(t),c=n?function(e,t,r){return n(e,t,r)||u(e,t,r)}:u,l=new r(o,!0,c,a,s);"string"==typeof i&&(i={$ref:i}),l.addSchema("",i),l.validateAll(e,i,null,null,""),s&&l.banUnknownProperties(e,i);var f={toString:function(){return this.valid?"valid":this.error.message}};return f.errors=l.errors,f.missing=l.missing,f.valid=0===f.errors.length,f},addSchema:function(){return o.addSchema.apply(o,arguments)},getSchema:function(){return o.getSchema.apply(o,arguments)},getSchemaMap:function(){return o.getSchemaMap.apply(o,arguments)},getSchemaUris:function(){return o.getSchemaUris.apply(o,arguments)},getMissingUris:function(){return o.getMissingUris.apply(o,arguments)},dropSchemas:function(){o.dropSchemas.apply(o,arguments)},defineKeyword:function(){o.defineKeyword.apply(o,arguments)},defineError:function(e,t,r){if("string"!=typeof e||!/^[A-Z]+(_[A-Z]+)*$/.test(e))throw new Error("Code name must be a string in UPPER_CASE_WITH_UNDERSCORES");if("number"!=typeof t||t%1!=0||t<1e4)throw new Error("Code number must be an integer > 10000");if(void 0!==i[e])throw new Error("Error already defined: "+e+" as "+i[e]);if(void 0!==a[t])throw new Error("Error code already used: "+a[t]+" as "+t);i[e]=t,a[t]=e,u[e]=u[t]=r;for(var n in c){var o=c[n];o[e]&&(o[t]=o[t]||o[e])}},reset:function(){o.reset(),this.error=null,this.missing=[],this.valid=!0},missing:[],error:null,valid:!0,normSchema:normSchema,resolveUrl:resolveUrl,getDocumentUri:getDocumentUri,errorCodes:i};return s.language(e||"en"),s}Object.keys||(Object.keys=function(){var e=Object.prototype.hasOwnProperty,t=!{toString:null}.propertyIsEnumerable("toString"),r=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],n=r.length;return function(o){if("object"!=typeof o&&"function"!=typeof o||null===o)throw new TypeError("Object.keys called on non-object");var i=[];for(var a in o)e.call(o,a)&&i.push(a);if(t)for(var s=0;s<n;s++)e.call(o,r[s])&&i.push(r[s]);return i}}()),Object.create||(Object.create=function(){function F(){}return function(e){if(1!==arguments.length)throw new Error("Object.create implementation only accepts one parameter.");return F.prototype=e,new F}}()),Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(null===this)throw new TypeError;var t=Object(this),r=t.length>>>0;if(0===r)return-1;var n=0;if(arguments.length>1&&(n=Number(arguments[1]),n!==n?n=0:0!==n&&n!==1/0&&n!==-1/0&&(n=(n>0||-1)*Math.floor(Math.abs(n)))),n>=r)return-1;for(var o=n>=0?n:Math.max(r-Math.abs(n),0);o<r;o++)if(o in t&&t[o]===e)return o;return-1}),Object.isFrozen||(Object.isFrozen=function(e){for(var t="tv4_test_frozen_key";e.hasOwnProperty(t);)t+=Math.random();try{return e[t]=!0,delete e[t],!1}catch(e){return!0}});var e={"+":!0,"#":!0,".":!0,"/":!0,";":!0,"?":!0,"&":!0},t={"*":!0};UriTemplate.prototype={toString:function(){return this.template},fillFromObject:function(e){return this.fill(function(t){return e[t]})}};var r=function(e,t,r,n,o){if(this.missing=[],this.missingMap={},this.formatValidators=e?Object.create(e.formatValidators):{},this.schemas=e?Object.create(e.schemas):{},this.collectMultiple=t,this.errors=[],this.handleError=t?this.collectError:this.returnError,n&&(this.checkRecursive=!0,this.scanned=[],this.scannedFrozen=[],this.scannedFrozenSchemas=[],this.scannedFrozenValidationErrors=[],this.validatedSchemasKey="tv4_validation_id",this.validationErrorsKey="tv4_validation_errors_id"),o&&(this.trackUnknownProperties=!0,this.knownPropertyPaths={},this.unknownPropertyPaths={}),this.errorReporter=r||defaultErrorReporter("en"),"string"==typeof this.errorReporter)throw new Error("debug");if(this.definedKeywords={},e)for(var i in e.definedKeywords)this.definedKeywords[i]=e.definedKeywords[i].slice(0)};r.prototype.defineKeyword=function(e,t){this.definedKeywords[e]=this.definedKeywords[e]||[],this.definedKeywords[e].push(t)},r.prototype.createError=function(e,t,r,n,o,i,a){var s=new ValidationError(e,t,r,n,o);return s.message=this.errorReporter(s,i,a),s},r.prototype.returnError=function(e){return e},r.prototype.collectError=function(e){return e&&this.errors.push(e),null},r.prototype.prefixErrors=function(e,t,r){for(var n=e;n<this.errors.length;n++)this.errors[n]=this.errors[n].prefixWith(t,r);return this},r.prototype.banUnknownProperties=function(e,t){for(var r in this.unknownPropertyPaths){var n=this.createError(i.UNKNOWN_PROPERTY,{path:r},r,"",null,e,t),o=this.handleError(n);if(o)return o}return null},r.prototype.addFormat=function(e,t){if("object"==typeof e){for(var r in e)this.addFormat(r,e[r]);return this}this.formatValidators[e]=t},r.prototype.resolveRefs=function(e,t){if(void 0!==e.$ref){if(t=t||{},t[e.$ref])return this.createError(i.CIRCULAR_REFERENCE,{urls:Object.keys(t).join(", ")},"","",null,void 0,e);t[e.$ref]=!0,e=this.getSchema(e.$ref,t)}return e},r.prototype.getSchema=function(e,t){var r;if(void 0!==this.schemas[e])return r=this.schemas[e],this.resolveRefs(r,t);var n=e,o="";if(-1!==e.indexOf("#")&&(o=e.substring(e.indexOf("#")+1),n=e.substring(0,e.indexOf("#"))),"object"==typeof this.schemas[n]){r=this.schemas[n];var i=decodeURIComponent(o);if(""===i)return this.resolveRefs(r,t);if("/"!==i.charAt(0))return;for(var a=i.split("/").slice(1),s=0;s<a.length;s++){var u=a[s].replace(/~1/g,"/").replace(/~0/g,"~");if(void 0===r[u]){r=void 0;break}r=r[u]}if(void 0!==r)return this.resolveRefs(r,t)}void 0===this.missing[n]&&(this.missing.push(n),this.missing[n]=n,this.missingMap[n]=n)},r.prototype.searchSchemas=function(e,t){if(Array.isArray(e))for(var r=0;r<e.length;r++)this.searchSchemas(e[r],t);else if(e&&"object"==typeof e){"string"==typeof e.id&&isTrustedUrl(t,e.id)&&void 0===this.schemas[e.id]&&(this.schemas[e.id]=e);for(var n in e)if("enum"!==n)if("object"==typeof e[n])this.searchSchemas(e[n],t);else if("$ref"===n){var o=getDocumentUri(e[n]);o&&void 0===this.schemas[o]&&void 0===this.missingMap[o]&&(this.missingMap[o]=o)}}},r.prototype.addSchema=function(e,t){if("string"!=typeof e||void 0===t){if("object"!=typeof e||"string"!=typeof e.id)return;t=e,e=t.id}e===getDocumentUri(e)+"#"&&(e=getDocumentUri(e)),this.schemas[e]=t,delete this.missingMap[e],normSchema(t,e),this.searchSchemas(t,e)},r.prototype.getSchemaMap=function(){var e={};for(var t in this.schemas)e[t]=this.schemas[t];return e},r.prototype.getSchemaUris=function(e){var t=[];for(var r in this.schemas)e&&!e.test(r)||t.push(r);return t},r.prototype.getMissingUris=function(e){var t=[];for(var r in this.missingMap)e&&!e.test(r)||t.push(r);return t},r.prototype.dropSchemas=function(){this.schemas={},this.reset()},r.prototype.reset=function(){this.missing=[],this.missingMap={},this.errors=[]},r.prototype.validateAll=function(e,t,r,n,o){var i;if(!(t=this.resolveRefs(t)))return null;if(t instanceof ValidationError)return this.errors.push(t),t;var a,s=this.errors.length,u=null,c=null;if(this.checkRecursive&&e&&"object"==typeof e){if(i=!this.scanned.length,e[this.validatedSchemasKey]){var l=e[this.validatedSchemasKey].indexOf(t);if(-1!==l)return this.errors=this.errors.concat(e[this.validationErrorsKey][l]),null}if(Object.isFrozen(e)&&-1!==(a=this.scannedFrozen.indexOf(e))){var f=this.scannedFrozenSchemas[a].indexOf(t);if(-1!==f)return this.errors=this.errors.concat(this.scannedFrozenValidationErrors[a][f]),null}if(this.scanned.push(e),Object.isFrozen(e))-1===a&&(a=this.scannedFrozen.length,this.scannedFrozen.push(e),this.scannedFrozenSchemas.push([])),u=this.scannedFrozenSchemas[a].length,this.scannedFrozenSchemas[a][u]=t,this.scannedFrozenValidationErrors[a][u]=[];else{if(!e[this.validatedSchemasKey])try{Object.defineProperty(e,this.validatedSchemasKey,{value:[],configurable:!0}),Object.defineProperty(e,this.validationErrorsKey,{value:[],configurable:!0})}catch(t){e[this.validatedSchemasKey]=[],e[this.validationErrorsKey]=[]}c=e[this.validatedSchemasKey].length,e[this.validatedSchemasKey][c]=t,e[this.validationErrorsKey][c]=[]}}var d=this.errors.length,p=this.validateBasic(e,t,o)||this.validateNumeric(e,t,o)||this.validateString(e,t,o)||this.validateArray(e,t,o)||this.validateObject(e,t,o)||this.validateCombinations(e,t,o)||this.validateHypermedia(e,t,o)||this.validateFormat(e,t,o)||this.validateDefinedKeywords(e,t,o)||null;if(i){for(;this.scanned.length;){delete this.scanned.pop()[this.validatedSchemasKey]}this.scannedFrozen=[],this.scannedFrozenSchemas=[]}if(p||d!==this.errors.length)for(;r&&r.length||n&&n.length;){var y=r&&r.length?""+r.pop():null,h=n&&n.length?""+n.pop():null;p&&(p=p.prefixWith(y,h)),this.prefixErrors(d,y,h)}return null!==u?this.scannedFrozenValidationErrors[a][u]=this.errors.slice(s):null!==c&&(e[this.validationErrorsKey][c]=this.errors.slice(s)),this.handleError(p)},r.prototype.validateFormat=function(e,t){if("string"!=typeof t.format||!this.formatValidators[t.format])return null;var r=this.formatValidators[t.format].call(null,e,t);return"string"==typeof r||"number"==typeof r?this.createError(i.FORMAT_CUSTOM,{message:r},"","/format",null,e,t):r&&"object"==typeof r?this.createError(i.FORMAT_CUSTOM,{message:r.message||"?"},r.dataPath||"",r.schemaPath||"/format",null,e,t):null},r.prototype.validateDefinedKeywords=function(e,t,r){for(var n in this.definedKeywords)if(void 0!==t[n])for(var o=this.definedKeywords[n],a=0;a<o.length;a++){var s=o[a],u=s(e,t[n],t,r);if("string"==typeof u||"number"==typeof u)return this.createError(i.KEYWORD_CUSTOM,{key:n,message:u},"","",null,e,t).prefixWith(null,n);if(u&&"object"==typeof u){var c=u.code;if("string"==typeof c){if(!i[c])throw new Error("Undefined error code (use defineError): "+c);c=i[c]}else"number"!=typeof c&&(c=i.KEYWORD_CUSTOM);var l="object"==typeof u.message?u.message:{key:n,message:u.message||"?"},f=u.schemaPath||"/"+n.replace(/~/g,"~0").replace(/\//g,"~1");return this.createError(c,l,u.dataPath||null,f,null,e,t)}}return null},r.prototype.validateBasic=function(e,t,r){var n;return(n=this.validateType(e,t,r))?n.prefixWith(null,"type"):(n=this.validateEnum(e,t,r))?n.prefixWith(null,"type"):null},r.prototype.validateType=function(e,t){if(void 0===t.type)return null;var r=typeof e;null===e?r="null":Array.isArray(e)&&(r="array");var n=t.type;Array.isArray(n)||(n=[n]);for(var o=0;o<n.length;o++){var a=n[o];if(a===r||"integer"===a&&"number"===r&&e%1==0)return null}return this.createError(i.INVALID_TYPE,{type:r,expected:n.join("/")},"","",null,e,t)},r.prototype.validateEnum=function(e,t){if(void 0===t.enum)return null;for(var r=0;r<t.enum.length;r++){if(recursiveCompare(e,t.enum[r]))return null}return this.createError(i.ENUM_MISMATCH,{value:"undefined"!=typeof JSON?JSON.stringify(e):e},"","",null,e,t)},r.prototype.validateNumeric=function(e,t,r){return this.validateMultipleOf(e,t,r)||this.validateMinMax(e,t,r)||this.validateNaN(e,t,r)||null};var n=Math.pow(2,-51),o=1-n;r.prototype.validateMultipleOf=function(e,t){var r=t.multipleOf||t.divisibleBy;if(void 0===r)return null;if("number"==typeof e){var a=e/r%1;if(a>=n&&a<o)return this.createError(i.NUMBER_MULTIPLE_OF,{value:e,multipleOf:r},"","",null,e,t)}return null},r.prototype.validateMinMax=function(e,t){if("number"!=typeof e)return null;if(void 0!==t.minimum){if(e<t.minimum)return this.createError(i.NUMBER_MINIMUM,{value:e,minimum:t.minimum},"","/minimum",null,e,t);if(t.exclusiveMinimum&&e===t.minimum)return this.createError(i.NUMBER_MINIMUM_EXCLUSIVE,{value:e,minimum:t.minimum},"","/exclusiveMinimum",null,e,t)}if(void 0!==t.maximum){if(e>t.maximum)return this.createError(i.NUMBER_MAXIMUM,{value:e,maximum:t.maximum},"","/maximum",null,e,t);if(t.exclusiveMaximum&&e===t.maximum)return this.createError(i.NUMBER_MAXIMUM_EXCLUSIVE,{value:e,maximum:t.maximum},"","/exclusiveMaximum",null,e,t)}return null},r.prototype.validateNaN=function(e,t){return"number"!=typeof e?null:!0===isNaN(e)||e===1/0||e===-1/0?this.createError(i.NUMBER_NOT_A_NUMBER,{value:e},"","/type",null,e,t):null},r.prototype.validateString=function(e,t,r){return this.validateStringLength(e,t,r)||this.validateStringPattern(e,t,r)||null},r.prototype.validateStringLength=function(e,t){return"string"!=typeof e?null:void 0!==t.minLength&&e.length<t.minLength?this.createError(i.STRING_LENGTH_SHORT,{length:e.length,minimum:t.minLength},"","/minLength",null,e,t):void 0!==t.maxLength&&e.length>t.maxLength?this.createError(i.STRING_LENGTH_LONG,{length:e.length,maximum:t.maxLength},"","/maxLength",null,e,t):null},r.prototype.validateStringPattern=function(e,t){if("string"!=typeof e||"string"!=typeof t.pattern&&!(t.pattern instanceof RegExp))return null;var r;if(t.pattern instanceof RegExp)r=t.pattern;else{var n,o="",a=t.pattern.match(/^\/(.+)\/([img]*)$/);a?(n=a[1],o=a[2]):n=t.pattern,r=new RegExp(n,o)}return r.test(e)?null:this.createError(i.STRING_PATTERN,{pattern:t.pattern},"","/pattern",null,e,t)},r.prototype.validateArray=function(e,t,r){return Array.isArray(e)?this.validateArrayLength(e,t,r)||this.validateArrayUniqueItems(e,t,r)||this.validateArrayItems(e,t,r)||null:null},r.prototype.validateArrayLength=function(e,t){var r;return void 0!==t.minItems&&e.length<t.minItems&&(r=this.createError(i.ARRAY_LENGTH_SHORT,{length:e.length,minimum:t.minItems},"","/minItems",null,e,t),this.handleError(r))?r:void 0!==t.maxItems&&e.length>t.maxItems&&(r=this.createError(i.ARRAY_LENGTH_LONG,{length:e.length,maximum:t.maxItems},"","/maxItems",null,e,t),this.handleError(r))?r:null},r.prototype.validateArrayUniqueItems=function(e,t){if(t.uniqueItems)for(var r=0;r<e.length;r++)for(var n=r+1;n<e.length;n++)if(recursiveCompare(e[r],e[n])){var o=this.createError(i.ARRAY_UNIQUE,{match1:r,match2:n},"","/uniqueItems",null,e,t);if(this.handleError(o))return o}return null},r.prototype.validateArrayItems=function(e,t,r){if(void 0===t.items)return null;var n,o;if(Array.isArray(t.items)){for(o=0;o<e.length;o++)if(o<t.items.length){if(n=this.validateAll(e[o],t.items[o],[o],["items",o],r+"/"+o))return n}else if(void 0!==t.additionalItems)if("boolean"==typeof t.additionalItems){if(!t.additionalItems&&(n=this.createError(i.ARRAY_ADDITIONAL_ITEMS,{},"/"+o,"/additionalItems",null,e,t),this.handleError(n)))return n}else if(n=this.validateAll(e[o],t.additionalItems,[o],["additionalItems"],r+"/"+o))return n}else for(o=0;o<e.length;o++)if(n=this.validateAll(e[o],t.items,[o],["items"],r+"/"+o))return n;return null},r.prototype.validateObject=function(e,t,r){return"object"!=typeof e||null===e||Array.isArray(e)?null:this.validateObjectMinMaxProperties(e,t,r)||this.validateObjectRequiredProperties(e,t,r)||this.validateObjectProperties(e,t,r)||this.validateObjectDependencies(e,t,r)||null},r.prototype.validateObjectMinMaxProperties=function(e,t){var r,n=Object.keys(e);return void 0!==t.minProperties&&n.length<t.minProperties&&(r=this.createError(i.OBJECT_PROPERTIES_MINIMUM,{propertyCount:n.length,minimum:t.minProperties},"","/minProperties",null,e,t),this.handleError(r))?r:void 0!==t.maxProperties&&n.length>t.maxProperties&&(r=this.createError(i.OBJECT_PROPERTIES_MAXIMUM,{propertyCount:n.length,maximum:t.maxProperties},"","/maxProperties",null,e,t),this.handleError(r))?r:null},r.prototype.validateObjectRequiredProperties=function(e,t){if(void 0!==t.required)for(var r=0;r<t.required.length;r++){var n=t.required[r];if(void 0===e[n]){var o=this.createError(i.OBJECT_REQUIRED,{key:n},"","/required/"+r,null,e,t);if(this.handleError(o))return o}}return null},r.prototype.validateObjectProperties=function(e,t,r){var n;for(var o in e){var a=r+"/"+o.replace(/~/g,"~0").replace(/\//g,"~1"),s=!1;if(void 0!==t.properties&&void 0!==t.properties[o]&&(s=!0,n=this.validateAll(e[o],t.properties[o],[o],["properties",o],a)))return n;if(void 0!==t.patternProperties)for(var u in t.patternProperties){var c=new RegExp(u);if(c.test(o)&&(s=!0,n=this.validateAll(e[o],t.patternProperties[u],[o],["patternProperties",u],a)))return n}if(s)this.trackUnknownProperties&&(this.knownPropertyPaths[a]=!0,delete this.unknownPropertyPaths[a]);else if(void 0!==t.additionalProperties){if(this.trackUnknownProperties&&(this.knownPropertyPaths[a]=!0,delete this.unknownPropertyPaths[a]),"boolean"==typeof t.additionalProperties){if(!t.additionalProperties&&(n=this.createError(i.OBJECT_ADDITIONAL_PROPERTIES,{key:o},"","/additionalProperties",null,e,t).prefixWith(o,null),this.handleError(n)))return n}else if(n=this.validateAll(e[o],t.additionalProperties,[o],["additionalProperties"],a))return n}else this.trackUnknownProperties&&!this.knownPropertyPaths[a]&&(this.unknownPropertyPaths[a]=!0)}return null},r.prototype.validateObjectDependencies=function(e,t,r){var n;if(void 0!==t.dependencies)for(var o in t.dependencies)if(void 0!==e[o]){var a=t.dependencies[o];if("string"==typeof a){if(void 0===e[a]&&(n=this.createError(i.OBJECT_DEPENDENCY_KEY,{key:o,missing:a},"","",null,e,t).prefixWith(null,o).prefixWith(null,"dependencies"),this.handleError(n)))return n}else if(Array.isArray(a))for(var s=0;s<a.length;s++){var u=a[s];if(void 0===e[u]&&(n=this.createError(i.OBJECT_DEPENDENCY_KEY,{key:o,missing:u},"","/"+s,null,e,t).prefixWith(null,o).prefixWith(null,"dependencies"),this.handleError(n)))return n}else if(n=this.validateAll(e,a,[],["dependencies",o],r))return n}return null},r.prototype.validateCombinations=function(e,t,r){return this.validateAllOf(e,t,r)||this.validateAnyOf(e,t,r)||this.validateOneOf(e,t,r)||this.validateNot(e,t,r)||null},r.prototype.validateAllOf=function(e,t,r){if(void 0===t.allOf)return null;for(var n,o=0;o<t.allOf.length;o++){var i=t.allOf[o];if(n=this.validateAll(e,i,[],["allOf",o],r))return n}return null},r.prototype.validateAnyOf=function(e,t,r){if(void 0===t.anyOf)return null;var n,o,a=[],s=this.errors.length;this.trackUnknownProperties&&(n=this.unknownPropertyPaths,o=this.knownPropertyPaths);for(var u=!0,c=0;c<t.anyOf.length;c++){this.trackUnknownProperties&&(this.unknownPropertyPaths={},this.knownPropertyPaths={});var l=t.anyOf[c],f=this.errors.length,d=this.validateAll(e,l,[],["anyOf",c],r);if(null===d&&f===this.errors.length){if(this.errors=this.errors.slice(0,s),this.trackUnknownProperties){for(var p in this.knownPropertyPaths)o[p]=!0,delete n[p];for(var y in this.unknownPropertyPaths)o[y]||(n[y]=!0);u=!1;continue}return null}d&&a.push(d.prefixWith(null,""+c).prefixWith(null,"anyOf"))}return this.trackUnknownProperties&&(this.unknownPropertyPaths=n,this.knownPropertyPaths=o),u?(a=a.concat(this.errors.slice(s)),this.errors=this.errors.slice(0,s),this.createError(i.ANY_OF_MISSING,{},"","/anyOf",a,e,t)):void 0},r.prototype.validateOneOf=function(e,t,r){if(void 0===t.oneOf)return null;var n,o,a=null,s=[],u=this.errors.length;this.trackUnknownProperties&&(n=this.unknownPropertyPaths,o=this.knownPropertyPaths);for(var c=0;c<t.oneOf.length;c++){this.trackUnknownProperties&&(this.unknownPropertyPaths={},this.knownPropertyPaths={});var l=t.oneOf[c],f=this.errors.length,d=this.validateAll(e,l,[],["oneOf",c],r);if(null===d&&f===this.errors.length){if(null!==a)return this.errors=this.errors.slice(0,u),this.createError(i.ONE_OF_MULTIPLE,{index1:a,index2:c},"","/oneOf",null,e,t);if(a=c,this.trackUnknownProperties){for(var p in this.knownPropertyPaths)o[p]=!0,delete n[p];for(var y in this.unknownPropertyPaths)o[y]||(n[y]=!0)}}else d&&s.push(d)}return this.trackUnknownProperties&&(this.unknownPropertyPaths=n,this.knownPropertyPaths=o),null===a?(s=s.concat(this.errors.slice(u)),this.errors=this.errors.slice(0,u),this.createError(i.ONE_OF_MISSING,{},"","/oneOf",s,e,t)):(this.errors=this.errors.slice(0,u),null)},r.prototype.validateNot=function(e,t,r){if(void 0===t.not)return null;var n,o,a=this.errors.length;this.trackUnknownProperties&&(n=this.unknownPropertyPaths,o=this.knownPropertyPaths,this.unknownPropertyPaths={},this.knownPropertyPaths={});var s=this.validateAll(e,t.not,null,null,r),u=this.errors.slice(a);return this.errors=this.errors.slice(0,a),this.trackUnknownProperties&&(this.unknownPropertyPaths=n,this.knownPropertyPaths=o),null===s&&0===u.length?this.createError(i.NOT_PASSED,{},"","/not",null,e,t):null},r.prototype.validateHypermedia=function(e,t,r){if(!t.links)return null;for(var n,o=0;o<t.links.length;o++){var i=t.links[o];if("describedby"===i.rel){for(var a=new UriTemplate(i.href),s=!0,u=0;u<a.varNames.length;u++)if(!(a.varNames[u]in e)){s=!1;break}if(s){var c=a.fillFromObject(e),l={$ref:c};if(n=this.validateAll(e,l,[],["links",o],r))return n}}}};var i={INVALID_TYPE:0,ENUM_MISMATCH:1,ANY_OF_MISSING:10,ONE_OF_MISSING:11,ONE_OF_MULTIPLE:12,NOT_PASSED:13,NUMBER_MULTIPLE_OF:100,NUMBER_MINIMUM:101,NUMBER_MINIMUM_EXCLUSIVE:102,NUMBER_MAXIMUM:103,NUMBER_MAXIMUM_EXCLUSIVE:104,NUMBER_NOT_A_NUMBER:105,STRING_LENGTH_SHORT:200,STRING_LENGTH_LONG:201,STRING_PATTERN:202,OBJECT_PROPERTIES_MINIMUM:300,OBJECT_PROPERTIES_MAXIMUM:301,OBJECT_REQUIRED:302,OBJECT_ADDITIONAL_PROPERTIES:303,OBJECT_DEPENDENCY_KEY:304,ARRAY_LENGTH_SHORT:400,ARRAY_LENGTH_LONG:401,ARRAY_UNIQUE:402,ARRAY_ADDITIONAL_ITEMS:403,FORMAT_CUSTOM:500,KEYWORD_CUSTOM:501,CIRCULAR_REFERENCE:600,UNKNOWN_PROPERTY:1e3},a={};for(var s in i)a[i[s]]=s;var u={INVALID_TYPE:"Invalid type: {type} (expected {expected})",ENUM_MISMATCH:"No enum match for: {value}",ANY_OF_MISSING:'Data does not match any schemas from "anyOf"',ONE_OF_MISSING:'Data does not match any schemas from "oneOf"',ONE_OF_MULTIPLE:'Data is valid against more than one schema from "oneOf": indices {index1} and {index2}',NOT_PASSED:'Data matches schema from "not"',NUMBER_MULTIPLE_OF:"Value {value} is not a multiple of {multipleOf}",NUMBER_MINIMUM:"Value {value} is less than minimum {minimum}",NUMBER_MINIMUM_EXCLUSIVE:"Value {value} is equal to exclusive minimum {minimum}",NUMBER_MAXIMUM:"Value {value} is greater than maximum {maximum}",NUMBER_MAXIMUM_EXCLUSIVE:"Value {value} is equal to exclusive maximum {maximum}",NUMBER_NOT_A_NUMBER:"Value {value} is not a valid number",STRING_LENGTH_SHORT:"String is too short ({length} chars), minimum {minimum}",STRING_LENGTH_LONG:"String is too long ({length} chars), maximum {maximum}",STRING_PATTERN:"String does not match pattern: {pattern}",OBJECT_PROPERTIES_MINIMUM:"Too few properties defined ({propertyCount}), minimum {minimum}",OBJECT_PROPERTIES_MAXIMUM:"Too many properties defined ({propertyCount}), maximum {maximum}",OBJECT_REQUIRED:"Missing required property: {key}",OBJECT_ADDITIONAL_PROPERTIES:"Additional properties not allowed",OBJECT_DEPENDENCY_KEY:"Dependency failed - key must exist: {missing} (due to key: {key})",ARRAY_LENGTH_SHORT:"Array is too short ({length}), minimum {minimum}",ARRAY_LENGTH_LONG:"Array is too long ({length}), maximum {maximum}",ARRAY_UNIQUE:"Array items are not unique (indices {match1} and {match2})",ARRAY_ADDITIONAL_ITEMS:"Additional items not allowed",FORMAT_CUSTOM:"Format validation failed ({message})",KEYWORD_CUSTOM:"Keyword failed: {key} ({message})",CIRCULAR_REFERENCE:"Circular $refs: {urls}",UNKNOWN_PROPERTY:"Unknown property (not in schema)"};ValidationError.prototype=Object.create(Error.prototype),ValidationError.prototype.constructor=ValidationError,ValidationError.prototype.name="ValidationError",ValidationError.prototype.prefixWith=function(e,t){if(null!==e&&(e=e.replace(/~/g,"~0").replace(/\//g,"~1"),this.dataPath="/"+e+this.dataPath),null!==t&&(t=t.replace(/~/g,"~0").replace(/\//g,"~1"),this.schemaPath="/"+t+this.schemaPath),null!==this.subErrors)for(var r=0;r<this.subErrors.length;r++)this.subErrors[r].prefixWith(e,t);return this};var c={},l=createApi();return l.addLanguage("en-gb",u),l.tv4=l,l})},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),o=_interopRequireDefault(n),i=r(2),a=_interopRequireDefault(i),s=function(){function SourcePackage(e,t){(0,o.default)(this,SourcePackage),this._sourceCode=t,this._sourceCodeClassname=e,this._encoding=null,this._signature=null}return(0,a.default)(SourcePackage,[{key:"sourceCode",get:function(){return this._sourceCode},set:function(e){e&&(this._sourceCode=e)}},{key:"sourceCodeClassname",get:function(){return this._sourceCodeClassname},set:function(e){e&&(this._sourceCodeClassname=e)}},{key:"encoding",get:function(){return this._encoding},set:function(e){e&&(this._encoding=e)}},{key:"signature",get:function(){return this._signature},set:function(e){e&&(this._signature=e)}}]),SourcePackage}();t.default=s,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.HypertyResourceType=t.HypertyType=t.RuntimeHypertyCapabilityType=void 0;var n=r(15),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(17),l=_interopRequireDefault(c),f=r(18),d=_interopRequireDefault(f),p=r(72),y=_interopRequireDefault(p),h=function(e){function HypertyDescriptor(e,t,r,n,i,s,u,c,f){(0,a.default)(this,HypertyDescriptor);var d=(0,l.default)(this,(HypertyDescriptor.__proto__||(0,o.default)(HypertyDescriptor)).call(this,e,t,r,n,i,s,u));return d._configuration={},d._constraints={},d._policies={},d._messageSchema=null,d._hypertyType=c,d._dataObjects=f,d}return(0,d.default)(HypertyDescriptor,e),(0,u.default)(HypertyDescriptor,[{key:"hypertyType",get:function(){return this._hypertyType},set:function(e){e&&(this._hypertyType=e)}},{key:"dataObjects",get:function(){return this._dataObjects},set:function(e){e&&(this._dataObjects=e)}},{key:"configuration",get:function(){return this._configuration},set:function(e){e&&(this._configuration=e)}},{key:"constraints",get:function(){return this._constraints},set:function(e){e&&(this._constraints=e)}},{key:"messageSchema",get:function(){return this._messageSchema},set:function(e){e&&(this._messageSchema=e)}},{key:"policies",get:function(){return this._policies},set:function(e){e&&(this._policies=e)}}]),HypertyDescriptor}(y.default);t.RuntimeHypertyCapabilityType={},t.HypertyType={COMMUNICATOR:"communicator",IDENTITY:"identity",CONTEXT:"context"},t.HypertyResourceType={chat:"CHAT",audio:"Audio",video:"Video",av:"AV",screen:"SCREEN",file:"FILe",midi:"MIDI"};t.default=h},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(15),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(17),l=_interopRequireDefault(c),f=r(18),d=_interopRequireDefault(f),p=r(72),y=_interopRequireDefault(p),h=function(e){function ProtocolStubDescriptor(e,t,r,n,i,s,u,c,f,d,p,y,h,v,g){(0,a.default)(this,ProtocolStubDescriptor);var b=(0,l.default)(this,(ProtocolStubDescriptor.__proto__||(0,o.default)(ProtocolStubDescriptor)).call(this,e,t,r,n,i,s,u));return b._messageSchemas=c,b._configuration=f||{},b._constraints=d||{},b._hypertyType=p,b._dataObjects=y||[],b._interworking=h,b._idpProxy=v,b._mutualAuthentication=g,b}return(0,d.default)(ProtocolStubDescriptor,e),(0,u.default)(ProtocolStubDescriptor,[{key:"messageSchemas",get:function(){return this._messageSchemas},set:function(e){e&&(this._messageSchemas=e)}},{key:"constraints",get:function(){return this._constraints},set:function(e){e&&(this._constraints=e)}},{key:"configuration",get:function(){return this._configuration},set:function(e){e&&(this._configuration=e)}},{key:"hypertyType",get:function(){return this._hypertyType},set:function(e){this._hypertyType=e}},{key:"dataObjects",get:function(){return this._dataObjects},set:function(e){this._dataObjects=e}},{key:"interworking",get:function(){return this._interworking},set:function(e){this._interworking=e}},{key:"idpProxy",get:function(){return this._idpProxy},set:function(e){this._idpProxy=e}},{key:"mutualAuthentication",get:function(){return this._mutualAuthentication},set:function(e){this._mutualAuthentication=e}}]),ProtocolStubDescriptor}(y.default);t.default=h,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.RuntimeType=t.RuntimeProtocolCapability=t.RuntimeHypertyCapability=void 0;var n=r(35),o=_interopRequireDefault(n),i=r(15),a=_interopRequireDefault(i),s=r(1),u=_interopRequireDefault(s),c=r(2),l=_interopRequireDefault(c),f=r(17),d=_interopRequireDefault(f),p=r(18),y=_interopRequireDefault(p),h=r(72),v=_interopRequireDefault(h),g=function(e){function HypertyRuntimeDescriptor(e,t,r,n,o,i,s,c,l,f,p,y){(0,u.default)(this,HypertyRuntimeDescriptor);var h=(0,d.default)(this,(HypertyRuntimeDescriptor.__proto__||(0,a.default)(HypertyRuntimeDescriptor)).call(this,e,t,r,n,o,i,s));return h._runtimeType=c,h._hypertyCapabilities=l||new b(!0,!1,!1,!1,!1),h._protocolCapabilities=f||new _(!0,!1,!0,!1,!1,!1),h._p2pHandlerStub=p,h._p2pRequesterStub=y,h}return(0,y.default)(HypertyRuntimeDescriptor,e),(0,l.default)(HypertyRuntimeDescriptor,[{key:"runtimeType",get:function(){return this._runtimeType},set:function(e){e&&(this._runtimeType=e)}},{key:"hypertyCapabilities",get:function(){return this._hypertyCapabilities},set:function(e){e&&(this._hypertyCapabilities=e)}},{key:"protocolCapabilities",get:function(){return this._hypertyCapabilities},set:function(e){e&&(this._protocolCapabilities=e)}},{key:"p2pHandlerStub",get:function(){return this._p2pHandlerStub},set:function(e){this._p2pHandlerStub=e}},{key:"p2pRequesterStub",get:function(){return this._p2pRequesterStub},set:function(e){this._p2pRequesterStub=e}}]),HypertyRuntimeDescriptor}(v.default),b=t.RuntimeHypertyCapability=function(){function RuntimeHypertyCapability(e,t,r,n,o){(0,u.default)(this,RuntimeHypertyCapability),this._isWebRTC=e,this._isMic=t,this._isCamera=r,this._isSensor=n,this._isORTC=o}return(0,l.default)(RuntimeHypertyCapability,[{key:"getCapabilitySet",value:function(){return(0,o.default)(this)}},{key:"isMic",get:function(){return this._isMic}},{key:"isCamera",get:function(){return this._isCamera}},{key:"isSensor",get:function(){return this._isSensor}},{key:"isWebRTC",get:function(){return this._isWebRTC}},{key:"isORTCS",get:function(){return this._isORTC}}]),RuntimeHypertyCapability}(),_=t.RuntimeProtocolCapability=function(){function RuntimeProtocolCapability(e,t,r,n,o,i){(0,u.default)(this,RuntimeProtocolCapability),this._isHttp=e,this._isHttps=t,this._isWS=r,this._isWSS=n,this._isCoap=o,this._isDataChannel=i}return(0,l.default)(RuntimeProtocolCapability,[{key:"isHttp",value:function(){return this._isHttp}},{key:"isHttps",value:function(){return this._isHttps}},{key:"isWS",value:function(){return this._isWS}},{key:"isSensorSupported",value:function(){return this._isSensor}},{key:"isWSS",value:function(){return this._isWSS}},{key:"isCoap",value:function(){return this._isCoap}},{key:"isDataChannel",value:function(){return this._isDataChannel}},{key:"getCapabilitySet",value:function(){return(0,o.default)(this)}}]),RuntimeProtocolCapability}();t.RuntimeType={BROWSER:"browser",STANDALONE:"standalone",SERVER:"server",GATEWAY:"gateway"};t.default=g},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var n=r(15),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(2),u=_interopRequireDefault(s),c=r(17),l=_interopRequireDefault(c),f=r(18),d=_interopRequireDefault(f),p=r(72),y=_interopRequireDefault(p),h=function(e){function PolicyEnforcerDescriptor(e,t,r,n,i,s,u,c,f){(0,a.default)(this,PolicyEnforcerDescriptor);var d=(0,l.default)(this,(PolicyEnforcerDescriptor.__proto__||(0,o.default)(PolicyEnforcerDescriptor)).call(this,e,t,r,n,i,s,u));return d._configuration=c,d._policies=f,d}return(0,d.default)(PolicyEnforcerDescriptor,e),(0,u.default)(PolicyEnforcerDescriptor,[{key:"configuration",get:function(){return this._configuration},set:function(e){this._configuration=e}},{key:"policies",get:function(){return this._policies},set:function(e){this._policies=e}}]),PolicyEnforcerDescriptor}(y.default);t.default=h,e.exports=t.default},function(e,t,r){"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.DataUrlScheme=t.ContextDataObjectSchema=t.IdentityDataObjectSchema=t.ConnectionDataObjectSchema=t.CommunicationDataObjectSchema=t.HypertyDataObjectSchema=t.MessageDataObjectSchema=t.DataObjectSchema=void 0;var n=r(15),o=_interopRequireDefault(n),i=r(1),a=_interopRequireDefault(i),s=r(17),u=_interopRequireDefault(s),c=r(18),l=_interopRequireDefault(c),f=r(72),d=_interopRequireDefault(f),p=t.DataObjectSchema=function(e){function DataObjectSchema(e,t,r,n,i,s,c){return(0,a.default)(this,DataObjectSchema),(0,u.default)(this,(DataObjectSchema.__proto__||(0,o.default)(DataObjectSchema)).call(this,e,t,r,n,i,s,c))}return(0,l.default)(DataObjectSchema,e),DataObjectSchema}(d.default),y=(t.MessageDataObjectSchema=function(e){function MessageDataObjectSchema(e,t,r,n,i,s,c){return(0,a.default)(this,MessageDataObjectSchema),(0,u.default)(this,(MessageDataObjectSchema.__proto__||(0,o.default)(MessageDataObjectSchema)).call(this,e,t,r,n,i,s,c))}return(0,l.default)(MessageDataObjectSchema,e),MessageDataObjectSchema}(p),t.HypertyDataObjectSchema=function(e){function HypertyDataObjectSchema(e,t,r,n,i,s,c,l,f){(0,a.default)(this,HypertyDataObjectSchema);var d=(0,u.default)(this,(HypertyDataObjectSchema.__proto__||(0,o.default)(HypertyDataObjectSchema)).call(this,e,t,r,n,i,s,c));return d._accessControlPolicy=l,d._scheme=f,d}return(0,l.default)(HypertyDataObjectSchema,e),HypertyDataObjectSchema}(p));t.CommunicationDataObjectSchema=function(e){function CommunicationDataObjectSchema(e,t,r,n,i,s,c,l){return(0,a.default)(this,CommunicationDataObjectSchema),(0,u.default)(this,(CommunicationDataObjectSchema.__proto__||(0,o.default)(CommunicationDataObjectSchema)).call(this,e,t,r,n,i,s,c,l))}return(0,l.default)(CommunicationDataObjectSchema,e),CommunicationDataObjectSchema}(y),t.ConnectionDataObjectSchema=function(e){function ConnectionDataObjectSchema(e,t,r,n,i,s,c,l){return(0,a.default)(this,ConnectionDataObjectSchema),(0,u.default)(this,(ConnectionDataObjectSchema.__proto__||(0,o.default)(ConnectionDataObjectSchema)).call(this,e,t,r,n,i,s,c,l))}return(0,l.default)(ConnectionDataObjectSchema,e),ConnectionDataObjectSchema}(y),t.IdentityDataObjectSchema=function(e){function IdentityDataObjectSchema(e,t,r,n,i,s,c,l){return(0,a.default)(this,IdentityDataObjectSchema),(0,u.default)(this,(IdentityDataObjectSchema.__proto__||(0,o.default)(IdentityDataObjectSchema)).call(this,e,t,r,n,i,s,c,l))}return(0,l.default)(IdentityDataObjectSchema,e),IdentityDataObjectSchema}(y),t.ContextDataObjectSchema=function(e){function ContextDataObjectSchema(e,t,r,n,i,s,c,l){return(0,a.default)(this,ContextDataObjectSchema),(0,u.default)(this,(ContextDataObjectSchema.__proto__||(0,o.default)(ContextDataObjectSchema)).call(this,e,t,r,n,i,s,c,l))}return(0,l.default)(ContextDataObjectSchema,e),ContextDataObjectSchema}(y),t.DataUrlScheme={COMM:"COMM",CONNECTION:"CONNECTION",CTXT:"CTXT",IDENTITY:"IDENTITY"};t.default=p}])});",
      "sourceCodeClassname": "Runtime",
      "encoding": "base64",
      "signature": ""
    },
    "sourcePackageURL": "/sourcePackage",
    "version": "41.60",
    "description": "",
    "language": "Javascript",
    "cguid": "3bc366f2d0ba3d681e7a3899917c5d3de",
    "type": "Runtimes",
    "runtimeType": "browser",
    "p2pHandlerStub": "",
    "p2pRequesterStub": "",
    "constraints": {
      "browser": true,
      "mic": true,
      "camera": true,
      "sensor": false,
      "webrtc": true,
      "ortc": true,
      "http": true,
      "https": true,
      "ws": true,
      "wss": true,
      "coap": false,
      "datachannel": false
    },
    "objectName": "Runtime",
    "configuration": {},
    "messageSchemas": [],
    "dataObjects": [],
    "signature": "",
    "accessControlPolicy": "somePolicy"
  }
}